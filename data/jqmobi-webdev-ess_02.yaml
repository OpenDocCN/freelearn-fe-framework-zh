- en: Chapter 2. Working with jQuery Mobile Pages
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章。使用 jQuery Mobile 页面
- en: In the previous chapter, you saw how easy it was to add jQuery Mobile to a simple
    HTML page. While it would be nice if every website consisted of one, and only
    one page, real websites consist of multiple pages connected via links. jQuery
    Mobile makes it easy to work with multiple pages and provides many different ways
    to create, and link, to the pages.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，您看到了向简单 HTML 页面添加 jQuery Mobile 有多么容易。虽然每个网站仅由一个页面组成会很好，但实际网站由多个通过链接连接的页面组成。jQuery
    Mobile 使得使用多个页面变得简单，并提供了许多不同的方式来创建和链接这些页面。
- en: 'In this chapter, we will:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将：
- en: Add multiple pages to one jQuery Mobile file
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将多个页面添加到一个 jQuery Mobile 文件中
- en: Discuss how links are modified by jQuery Mobile (and how to disable it)
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 讨论 jQuery Mobile 如何修改链接（以及如何禁用它）
- en: Demonstrate how additional files can be linked to and added to a jQuery Mobile
    site
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 演示如何链接和添加额外文件到 jQuery Mobile 站点
- en: Discuss how jQuery Mobile automatically handles URLs to allow for easy bookmarking
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 讨论 jQuery Mobile 如何自动处理 URL 以便于简单的书签标记
- en: Important preliminary points
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 重要的初步要点
- en: As mentioned in the previous chapter, all of the code from this chapter is available
    via the ZIP file downloaded at Github.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如上一章所述，本章所有代码都可通过在 Github 下载的 ZIP 文件获取。
- en: Adding multiple pages to one file
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将多个页面添加到一个文件中
- en: 'In the previous chapter, we worked on a file that had a simple page of text.
    For our first modification, we''re going to add another page to the file and create
    a link to it. If you remember, jQuery Mobile looks for a particular`<div>` wrapper
    to help it know where your page is:`<div data-role="page">`. What makes jQuery
    Mobile so simple to use is that we can add another page by simply adding another
    div using the same format. The following code snippet `Listing 2-1` shows a simple
    example of this feature:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们处理了一个具有简单文本页面的文件。对于我们的第一个修改，我们将向文件中添加另一页并创建一个链接到它。如果你还记得，jQuery Mobile
    寻找一个特定的`<div>`包装器来帮助它知道你的页面在哪里：`<div data-role="page">`。jQuery Mobile 如此简单易用的原因在于我们可以通过简单地添加另一个具有相同格式的
    div 来添加另一页。以下代码段 `Listing 2-1` 显示了此功能的一个简单示例：
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'OK, so as always, we begin our template with a few required bits: the HTML5
    doctype, the meta tag, one CSS include, and two JavaScript files. This was covered
    in the previous chapter and we will not be mentioning it again. Note that this
    template switches over to the CDN version of the CSS and JavaScript libraries:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，像往常一样，我们从一些必需的内容开始：HTML5 文档类型，meta 标签，一个 CSS 包含以及两个 JavaScript 文件。这在上一章已经涵盖了，我们不会再提及它。请注意，此模板切换到了
    CSS 和 JavaScript 库的 CDN 版本：
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: These versions are hosted by the jQuery team and have the benefit of always
    being the latest version. Most likely your visitors will have loaded these libraries
    already so they exist in their cache before arriving at your mobile site. While
    this is the route we will take going further with our examples, remember that
    you can always use the version you downloaded instead.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这些版本由 jQuery 团队托管，并具有始终是最新版本的好处。大多数情况下，您的访问者在到达您的移动站点之前已经加载了这些库，因此它们存在于他们的缓存中。虽然这是我们在进一步的示例中要采取的路线，但请记住，您始终可以使用您下载的版本。
- en: Notice now we have two`<div>` blocks. The first hasn't much changed from the
    previous example. We've added a unique ID (`homepage`), as well as a second paragraph.
    Notice the link in the second paragraph. It's using a standard internal link (`#aboutPage`)
    to tell the browser that we want to simply scroll the browser down to that part
    of the page. The target specified, `aboutPage`, is defined right below in another
    `div` block.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 现在请注意我们有两个`<div>`块。第一个与上一个示例没有太多变化。我们添加了一个唯一的 ID（`homepage`），以及一个第二段落。请注意第二段落中的链接。它使用了标准的内部链接（`#aboutPage`）告诉浏览器我们只想简单地将浏览器滚动到页面的那部分。指定的目标
    `aboutPage` 在另一个 `div` 块中定义在下面。
- en: 'In a traditional web page, this would display as two main blocks of text on
    a page. Clicking any of the two links would simply scroll the browser up and down
    accordingly. However, jQuery Mobile is going to do something significantly different
    here. The following figure shows how the page is rendered in the mobile browser:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在传统的网页中，这将显示为页面上的两个主要文本块。点击其中任何一个链接将简单地使浏览器上下滚动。然而，jQuery Mobile 将在这里做一些显著不同的事情。下图显示了页面在移动浏览器中的渲染方式：
- en: '![Adding multiple pages to one file](img/7263_02_01.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![将多个页面添加到一个文件中](img/7263_02_01.jpg)'
- en: Notice something? Even though our HTML included two blocks of text (the two`<div>`
    blocks) it only rendered one. jQuery Mobile will always display the first page
    it finds, and only that page. Here comes the best part. If you click on the link,
    the second page automatically loads. Using your devices back button, or simply
    clicking the link, will return you back to the first page. You will also notice
    a smooth transition. This is something you can configure later on. But all of
    the interactions here, the showing and hiding of pages, the transitions, were
    all done automatically by jQuery Mobile. Now is a good time to talk about links
    and what jQuery Mobile does when you click on them.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到了吗？即使我们的 HTML 包含了两个文本块（两个`<div>`块），但它只渲染了一个。jQuery Mobile 总是显示它找到的第一个页面，并且仅显示该页面。最棒的部分来了。如果你点击链接，第二个页面将自动加载。使用你设备上的返回按钮，或者简单点击链接，将带你回到第一个页面。你还会注意到平滑的过渡效果。这是你稍后可以配置的内容。但所有这些交互，页面的显示和隐藏，过渡，都是由
    jQuery Mobile 自动完成的。现在是谈论链接以及点击它们时 jQuery Mobile 所做的事情的好时机。
- en: jQuery Mobile, links, and you
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: jQuery Mobile、链接和你
- en: When jQuery Mobile encounters a simple link `(<a href= "something.html"> Foo</a>)`,
    it will automatically capture any clicks on that link and change it to an Ajax-based
    load. This means that if it detects that the target is something on the same page,
    that is, the hashmark style (`href="#foo"`) links we used above, it will handle
    transitioning the user to a new page. If it detects a page to another file on
    the same server, it will use Ajax to load the page and replace the currently visible
    one.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 当 jQuery Mobile 遇到一个简单的链接 `(<a href= "something.html"> Foo</a>)` 时，它会自动捕获对该链接的任何点击，并将其更改为基于
    Ajax 的加载。这意味着如果它检测到目标是页面上的某个东西，也就是说，我们上面使用的 hashmark 样式 (`href="#foo"`) 链接，它将处理将用户过渡到新页面。如果它检测到一个指向同一服务器上另一个文件的页面，则会使用
    Ajax 加载页面并替换当前可见的页面。
- en: 'If you link to an external site, then jQuery Mobile will leave the link as
    is and the normal link behavior will occur. There may be times when you want to
    disable jQuery Mobile from doing anything with your links at all. In that case,
    you can make use of a data attribute that lets the framework know it shouldn''t
    do anything at all. An example:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你链接到外部网站，那么 jQuery Mobile 将保持链接不变，正常的链接行为将发生。可能会有时候你想要完全禁用 jQuery Mobile 对你的链接的任何操作。在这种情况下，你可以利用一个数据属性，让框架知道它根本不应该做任何事情。一个例子：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: As we saw in [Chapter 1](../Text/ch01.html "Chapter 1. Preparing your First
    jQuery Mobile Project"), *Preparing Your First jQuery Mobile Project*, jQuery
    Mobile makes heavy use of data attributes. It is also very good at letting you
    disable behaviors you don't like. As we continue in the book you will see example
    after example of something jQuery Mobile does to enhance your site for mobile
    devices. In all of these cases though, the framework recognizes there may be times
    when you want to disable that.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在[第一章](../Text/ch01.html "Chapter 1. Preparing your First jQuery Mobile
    Project")中看到的*准备您的第一个 jQuery 移动项目*，jQuery Mobile 大量使用数据属性。它还非常擅长让你禁用你不喜欢的行为。当我们在本书中继续阅读时，你会看到一个又一个的例子，展示
    jQuery Mobile 如何增强你的网站以适配移动设备。在所有这些情况下，框架都意识到可能有时你想要禁用它。
- en: Working with multiple files
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用多个文件
- en: In an ideal world, we could build an entire website with one file, never have
    to perform revisions, and be done with every project by 2 P.M. on Friday. But
    in the real world we have to deal with lots of files, lots of revisions, and,
    unfortunately, lots of work. In the earlier code listing you saw how we can include
    two pages within one file. jQuery Mobile handles this easily enough. But you can
    imagine that this would get unwieldy after a while. While we could include ten,
    twenty, even thirty pages, this is going to make the file difficult to work with
    and make the initial download for the user that much slower.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在理想的世界中，我们可以用一个文件构建整个网站，永远不需要进行修订，并且每个项目都在周五下午 2 点之前完成。但在现实世界中，我们必须处理大量的文件，进行大量的修订，不幸的是，还有大量的工作。在前面的代码清单中，你看到了我们如何在一个文件中包含两个页面。jQuery
    Mobile 处理起来也很容易。但你可以想象，在一段时间后，这将变得难以控制。虽然我们可以包含十个、二十个、甚至三十个页面，但这将使文件变得难以处理，并且对用户的初始下载速度也会更慢。
- en: To work with multiple pages, and files, all we need to do is make a simple link
    to other files in the same domain as our first file. We can even combine the first
    technique (two pages in one file) with links to other files. In `listing 2-2`,
    we've modified the first example to add a link to a new page. Note that we keep
    the existing `About` page.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要处理多个页面和文件，我们只需在第一个文件的同一域中制作简单的链接到其他文件。我们甚至可以将第一种技术（一个文件中的两个页面）与链接到其他文件相结合。在`listing
    2-2`中，我们修改了第一个示例以添加到一个新页面的链接。请注意我们保留了现有的`关于`页面。
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Now, let''s look at `listing 2-3`, our products page:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '现在，让我们看一看`listing 2-3`，我们的产品页面:'
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Our products page is rather simple, but notice that we included the jQuery
    and jQuery Mobile resources on top. Why? I mentioned earlier that jQuery Mobile
    is going to use Ajax to load in your additional pages. If you open up `test2.html`
    in either Chrome or a Firebug-enabled Firefox you can see this for yourself. Clicking
    on the link for products will fire an XHR (think Ajax) request, as shown in the
    following role:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '我们的产品页面相当简单，但请注意我们在顶部包含了 jQuery 和 jQuery Mobile 资源。为什么？我之前提到 jQuery Mobile
    将使用 Ajax 加载其他页面。如果在 Chrome 或支持 Firebug 的 Firefox 中打开`test2.html`，您可以自行查看。点击产品链接将触发
    XHR（类似 Ajax）请求，如下图所示:'
- en: '![Working with multiple files](img/7263_02_02.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![处理多个文件](img/7263_02_02.jpg)'
- en: That's neat. But what happens when someone bookmarks the application? Let's
    now take a look at how jQuery Mobile handles URLs and navigation.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这很棒。但是当有人收藏该应用程序时会发生什么？现在让我们看看 jQuery Mobile 如何处理 URL 和导航。
- en: Tip
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**What is Firebug?**'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**什么是 Firebug?**'
- en: Firebug is an extension for Firefox ([www.getfirebug.com](http://www.getfirebug.com))
    that provides a suite of developer-related tools for your browser. Chrome has
    similar tools built-in. These tools allow for a number of features, one of which
    is the ability to monitor XHR (or Ajax) related requests.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Firebug 是 Firefox 的一个扩展程序 ([www.getfirebug.com](http://www.getfirebug.com))，为您的浏览器提供一套开发者相关工具。Chrome
    内置了类似的工具。这些工具提供了许多功能，其中之一是监视与 XHR（或 Ajax）相关的请求。
- en: jQuery Mobile and URLs
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: jQuery Mobile 和 URL
- en: 'If you''ve opened up `test2.html` in your browser and played with it, you may
    have noticed something interesting about the URLs as you navigate. Following is
    the initial URL. (The address and folder will, of course, differ on your computer):
    `http://localhost/mobile/c2/test2.html`.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在浏览器中打开了`test2.html`并进行了操作，您可能已经注意到在导航时 URL 的一些有趣之处。以下是初始 URL。(地址和文件夹当然会在您的计算机上有所不同):`http://localhost/mobile/c2/test2.html`。
- en: After clicking on products, the URL changes to `http://localhost/mobile/c2/products.html`.
    If I click back, and click **learn more**, I get `http://localhost/mobile/c2/test2.html#aboutPage`.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 点击产品后，URL 将更改为`http://localhost/mobile/c2/products.html`。如果我点击返回，然后点击**了解更多**，我会得到`http://localhost/mobile/c2/test2.html#aboutPage`。
- en: 'In both sub pages (the Products page and the About page) the URL was changed
    by the framework itself. The framework uses `history.pushState` and `history.replaceState`
    in browsers that support it. For older browsers, or browsers that don''t support
    JavaScript manipulation of the URL, hash based navigation is used instead. The
    products link, when viewed in Internet Explorer, looks like the following:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '在两个子页面中（产品页面和关于页面），URL 是由框架本身更改的。框架在支持的浏览器中使用`history.pushState`和`history.replaceState`。对于较旧的浏览器或不支持
    JavaScript 操作 URL 的浏览器，将改用基于哈希的导航。 在 Internet Explorer 中查看产品链接时，如下所示:'
- en: '`http://localhost/mobile/c2/test2.html#/mobile/c2/products.html`.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://localhost/mobile/c2/test2.html#/mobile/c2/products.html`。'
- en: What's interesting is that in this bookmark style, `test2.html` is always loaded
    first. You could actually build your `products.html` to only include the div and
    be assured that if the request was made for products first, it would still render
    correctly. It's the newer, fancier browsers that have an issue. If you didn't
    include the proper jQuery and jQuery Mobile includes, when they go directly to
    `products.html` you would end up with a page that has no styles. It's best to
    simply always include your proper header files (the CSS, the JavaScript, and so
    on). Any decent editor will provide simple ways to create templates.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，在这种书签样式中，始终首先加载`test2.html`。实际上，您可以构建您的`products.html`只包括 div，并确保如果首先请求了产品，它仍然会正确渲染。问题出在更新、更高级的浏览器上。如果您没有包括正确的
    jQuery 和 jQuery Mobile 包含文件，当他们直接访问`products.html`时，您将得到一个没有样式的页面。最好始终包括适当的页头文件（CSS、JavaScript
    等）。任何良好的编辑器都将提供创建模板的简单方法。
- en: Additional customization
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 额外的自定义操作
- en: Working with multiple pages in jQuery Mobile is pretty simple. You could take
    what's been discussed in the first two chapters and build a pretty simple, but
    mobile compliant, website right now. The following are a few more interesting
    tricks you may want to consider.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在jQuery Mobile中处理多个页面非常简单。您可以将前两章中讨论的内容应用到现在，构建一个相当简单但符合移动设备的网站。以下是您可能想要考虑的一些更有趣的技巧。
- en: Page titles
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 页面标题
- en: 'You may have noticed when you clicked on the **Products** page in the previous
    example, the title of the browser correctly updated to `Products`. This is because
    jQuery Mobile noticed, and parsed in, the title tag from the `products.html` file.
    But if you click on the **About** link, you don''t get the same behavior. Obviously,
    since the **About** page resides within the same HTML, it has the same title tag
    as well. jQuery Mobile provides a simple way to solve this and once again it involves
    data tags. The following code snippet shows a simple way to add a title to embedded
    pages:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，当您单击**Products**页面时，您可能已经注意到浏览器的标题正确更新为`Products`。这是因为jQuery Mobile注意到并解析了`products.html`文件中的标题标签。但是，如果您单击**About**链接，您不会得到相同的行为。显然，由于**About**页面位于同一HTML文件中，它也具有相同的标题标签。jQuery
    Mobile提供了一种简单的方法来解决这个问题，再次涉及到数据标签。以下代码片段显示了一种为嵌入页面添加标题的简单方法：
- en: '[PRE5]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Notice the new `data-title` tag added to the `div` tag. jQuery Mobile will notice
    then and when the **About** page is loaded, it will update the browser title as
    well. Again, this is only required when you include multiple pages within one
    HTML file. You can find this version in `test3.html:`
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 注意新添加到`div`标签中的`data-title`标签。当加载**About**页面时，jQuery Mobile会注意到这一点，并更新浏览器标题。同样，这仅在在一个HTML文件中包含多个页面时才需要。您可以在`test3.html`中找到这个版本：
- en: '![Page titles](img/7263_02_03.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![页面标题](img/7263_02_03.jpg)'
- en: Prefetching content
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 预取内容
- en: The benefit of including all your content within one HTML file is that all of
    your pages are available immediately. But the negatives (too difficult to update,
    too slow for an initial download) far outweigh that. Most jQuery Mobile applications
    will include multiple files and typically just one or two pages per file. You
    can, however, ensure speedier loading of some pages to help improve the user experience.
    Imagine our **Megacorp** page. It's got three pages, but the **Products** page
    is a separate HTML file. Since it's the only real content on the site, most likely
    all of our users will end up clicking that link. We can tell jQuery Mobile to
    prefetch the content immediately upon the main page loading. That way when the
    user does click the link, the page will load much quicker. Once again, this comes
    down to one simple data attribute.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 将所有内容包含在一个HTML文件中的好处是所有页面都可以立即使用。但是负面影响（更新困难，初始下载速度慢）远远超过了这一点。大多数jQuery Mobile应用程序将包含多个文件，通常每个文件只包含一个或两个页面。但是，您可以确保某些页面加载更快以帮助改善用户体验。想象一下我们的**Megacorp**页面。它有三个页面，但是**Products**页面是一个单独的HTML文件。由于这是站点上唯一的真实内容，最有可能所有用户都会点击该链接。我们可以告诉jQuery
    Mobile在主页面加载时立即预取内容。这样，当用户单击该链接时，页面将加载得更快。再次，这归结为一个简单的数据属性。
- en: '[PRE6]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: In the previous link, all we've done is added `data-prefetch` to the link. When
    jQuery Mobile finds this in a link it will automatically fetch the content right
    away. Now, when the user clicks the **Products** link, they will see the content
    even quicker. This modification was saved in `test4.html`.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的链接中，我们所做的只是在链接中添加了`data-prefetch`。当jQuery Mobile在链接中发现这一点时，它将自动立即获取内容。现在，当用户单击**Products**链接时，他们将更快地看到内容。这个修改已保存在`test4.html`中。
- en: Obviously, this technique should be used with care. Given a page with four main
    links, you may want to consider only prefetching the two most popular pages, not
    all four.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，这种技术应谨慎使用。给定一个具有四个主要链接的页面，您可能只想考虑预取两个最受欢迎的页面，而不是全部四个。
- en: Changing page transitions
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更改页面过渡方式
- en: 'Earlier, we mentioned that you could configure the transitions jQuery Mobile
    uses between pages. Later in the book, we''ll discuss how to do that globally,
    but if you want to switch to a different transition for a particular link, just
    include a `data-transition` attribute in your link:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 之前，我们提到您可以配置jQuery Mobile在页面之间使用的过渡效果。在本书后面，我们将讨论如何在全局范围内执行此操作，但是如果您想要在特定链接中切换到不同的过渡效果，只需在链接中包含`data-transition`属性即可：
- en: '[PRE7]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Many transitions also support a reverse action. Normally jQuery Mobile figures
    out if you need this, but if you want to force a direction, use the data-direction
    attribute:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 许多转场还支持反向操作。通常情况下，jQuery Mobile 会判断您是否需要这样做，但如果您想强制指定一个方向，请使用 data-direction
    属性：
- en: '[PRE8]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Summary
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter further fleshed out the concept of jQuery Mobile pages and how
    to work with multiple pages. Specifically we saw how one physical file can contain
    many different pages. jQuery Mobile will handle hiding all but the first page.
    We also saw how you can link to other pages and how jQuery Mobile uses Ajax to
    dynamically load the content into the browser. Next we discussed how jQuery Mobile
    handles updating the URL of the browser in order to enable bookmarking. Finally,
    we discussed two utilities that will help to improve your page. The first way
    was to provide a title for embedded pages. The second technique demonstrated how
    to prefetch content to further improve the experience of the users visiting your
    site.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 本章进一步阐述了 jQuery Mobile 页面的概念以及如何处理多个页面。具体来说，我们看到一个物理文件可以包含许多不同的页面。jQuery Mobile
    将处理除第一个页面外的所有隐藏页面。我们还看到了如何链接到其他页面以及 jQuery Mobile 如何使用 Ajax 动态加载内容到浏览器中。接下来，我们讨论了
    jQuery Mobile 如何处理更新浏览器的 URL 以便启用书签功能。最后，我们讨论了两种工具，这些工具将有助于改善您的页面。第一种方法是为嵌入页面提供标题。第二种技术演示了如何预取内容以进一步改善访问您网站的用户的体验。
- en: In the next chapter, we'll take a look at headers, footers, and navigation bars.
    These will greatly enhance our pages and make them easier to navigate.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看看标题、页脚和导航栏。这些将极大地增强我们的页面，并使其更易于导航。
