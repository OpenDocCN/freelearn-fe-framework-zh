["```js\nchapter-6-initial \n  |- node_modules \n  |- public \n  |- package.json \n  |- src \n     |- components \n        |- Button \n           |- Button.js \n        |- FormItem \n           |- FormItem.js \n        |- Header \n           |- Header.js \n        |- HotelItem \n           |- HotelItem.js \n        |- NavBar \n           |- NavBar.js \n        |- ReviewItem \n           |- ReviewItem.js \n     |- context \n        |- AppContext.js \n        |- HotelsContext.js \n        |- ReviewsContext.js \n     |- pages \n        |- HotelDetail.js \n        |- Hotels.js \n        |- ReviewForm.js \n     |- App.js \n     |- index.js \n     |- setupTests.js\n```", "```js\nnpm run test \n```", "```js\nNo tests found related to files changed since last commit. \n```", "```js\ntest('The NavBar component should render', () => {\n\n});\n```", "```js\nPASS  src/components/NavBar/NavBar.test.js\n  ✓ The NavBar component should render (1 ms)\nTest Suites: 1 passed, 1 total\nTests:       1 passed, 1 total\nSnapshots:   0 total\nTime:        3.105 s\nRan all test suites related to changed files.\n```", "```js\n  test('The NavBar component should render', () => {\n+   expect(1 + 2).toBe(3);\n  });\n```", "```js\n  test('The NavBar component should render', () => {\n-   expect(1 + 2).toBe(3);\n+   expect(1 + 2).toBe('3');\n  });\n```", "```js\n    + import { render } from '@testing-library/react';\n    + import NavBar from './NavBar';\n      test('The NavBar component should render', () => {\n    -   expect(1 + 2).toBe('3');\n    +   const view = render(<NavBar />);\n    +   expect(view).toMatchSnapshot();\n      });\n    ```", "```js\n    // Jest Snapshot v1, https://goo.gl/fbAQLP\n    exports[`The NavBar component should render 1`] = `\n    Object {\n      \"asFragment\": [Function],\n      \"baseElement\": <body>\n        <div>\n          <div\n            class=\"sc-gsDJrp PAvEv\"\n          >\n            <h2\n              class=\"sc-dkPtyc jFfuUr\"\n            />\n          </div>\n        </div>\n      </body>,\n      // ...\n    ```", "```js\n      import { render } from '@testing-library/react';\n      import NavBar from './NavBar';\n      // ...\n    + test('The NavBar component should render with a title',\n        () => {\n    +   const view = render(<NavBar title='Test application' \n                            />);\n    +   expect(view).toMatchSnapshot();\n    + });\n    ```", "```js\n      import { render } from '@testing-library/react';\n      import NavBar from './NavBar';\n      // ...\n      test('The NavBar component should render with a\n        title', () => {\n    -   const view = \n          render(<NavBar title='Test application' />);\n    +   const view = \n          render(<NavBar title='Test application #2' />);\n        expect(view).toMatchSnapshot();\n      });\n    ```", "```js\nFAIL  src/components/NavBar/NavBar.test.js\n  ✓ The NavBar component should render (29 ms)\n  ✕ The NavBar component should render with a title\n    (10 ms)\n  ● The NavBar component should render with a title\n    expect(received).toMatchSnapshot()\n    Snapshot name: `The NavBar component should render\n    with a title 1`\n    - Snapshot  - 3\n    + Received  + 3\n    @@ -6,23 +6,23 @@\n              class=\"sc-gsDJrp PAvEv\"\n            >\n              <h2\n                class=\"sc-dkPtyc jFfuUr\"\n              >\n    -           Test application\n    +           Test application #2\n    // ...\n```", "```js\nnpm run test -- --coverage\n```", "```js\n---------------------------|---------|----------|---------|---------|\nFile                       | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s \n---------------------------|---------|----------|---------|---------|\nAll files                  |       5 |     4.68 |    3.12 |       5 |                   \n src                       |       0 |      100 |       0 |       0 |                   \n  App.js                   |       0 |      100 |       0 |       0 | \n  index.js                 |       0 |      100 |     100 |       0 |              \n src/components/Button     |     100 |      100 |     100 |     100 |\n  Button.js                |     100 |      100 |     100 |     100 |                   \n src/components/FormItem   |       0 |        0 |       0 |       0 |                   \n  FormItem.js              |       0 |        0 |       0 |       0 | \n src/components/Header     |       0 |      100 |       0 |       0 |                   \n  Header.js                |       0 |      100 |       0 |       0 | \n src/components/HotelItem  |       0 |      100 |       0 |       0 |                   \n  HotelItem.js             |       0 |      100 |       0 |       0 | \n src/components/NavBar     |     100 |       60 |     100 |     100 |                   \n  NavBar.js                |     100 |       60 |     100 |     100 | \n  // ...\n```", "```js\n- import { render } from '@testing-library/react';\n+ import { render, screen } from '@testing-library/react';\n  import NavBar from './NavBar';\n  // ...\n+ test('The NavBar component should render with a title', \n    () => {\n-   const view = \n      render(<NavBar title='Test application #2' />);\n-   expect(view).toMatchSnapshot();\n+   const title = 'Test application';\n+   render(<NavBar title={title} />);\n+   expect(screen.getByRole('heading')).\n           toHaveTextContent(title);\n  });\n```", "```js\nPASS  src/components/NavBar/NavBar.test.js\n  ✓ The NavBar component should render (13 ms)\n  ✓ The NavBar component should render with a title (54 ms)\n › 1 snapshot obsolete.\n   • The NavBar component should render with a title 1\nSnapshot Summary\n › 1 snapshot obsolete from 1 test suite. To remove it, press `u`.\n   ↳ src/components/NavBar/NavBar.test.js\n       • The NavBar component should render with a title 1\n```", "```js\nSnapshot Summary\n › 1 snapshot removed from 1 test suite.\n   ↳ src/components/NavBar/NavBar.test.js\n       • The NavBar component should render with a title 1 \n```", "```js\n---------------------------|---------|----------|---------|---------|\nFile                       | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s \n---------------------------|---------|----------|---------|---------|\nAll files                  |       5 |     4.84 |    3.33 |       5 |                   \n src                       |       0 |      100 |       0 |       0 |                   \n  App.js                   |       0 |      100 |       0 |       0 | \n  index.js                 |       0 |      100 |     100 |       0 |               \nsrc/components/NavBar      |     100 |       60 |     100 |     100 |                   \n  NavBar.js                |     100 |       60 |     100 |     100 |\n  // ...\n```", "```js\n- import { render, screen } from '@testing-library/react';\n+ import { render, screen, fireEvent } from \n    '@testing-library/react';\n  import NavBar from './NavBar';\n\n  // ...\n+ test('The NavBar component should respond to button\n    clicks', () => {\n+   const mockFunction = jest.fn();\n+   render(<NavBar goBack={mockFunction} />);\n+   fireEvent.click(screen.getByText('< Go Back'));\n+   expect(mockFunction).toHaveBeenCalled();\n+ });\n```", "```js\n  // ...\n  test('The NavBar component should respond to button\n    clicks', () => {\n    const mockFunction = jest.fn();\n-   render(<NavBar goBack={mockFunction} />);\n+   render(<NavBar goBack={mockFunction} openForm=\n      {mockFunction} />);\n    fireEvent.click(screen.getByText('< Go Back'));\n    expect(mockFunction).toHaveBeenCalled();\n+   fireEvent.click(screen.getByText('+ Add Review'));\n+   expect(mockFunction).toHaveBeenCalledTimes(2);\n  });\n```", "```js\nPASS  src/components/NavBar/NavBar.test.js\n  ✓ The NavBar component should render (27 ms)\n  ✓ The NavBar component should render with a title (45 ms)\n  ✓ The NavBar component should respond to button clicks (13 ms)\n---------------------------|---------|----------|---------|---------|\nFile                       | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s \n---------------------------|---------|----------|---------|---------|\nAll files                  |       5 |     8.06 |    3.33 |       5 |                   \n src                       |       0 |      100 |       0 |       0 |                   \n  App.js                   |       0 |      100 |       0 |       0 | \n  index.js                 |       0 |      100 |     100 |       0 |               \n src/components/NavBar     |     100 |      100 |     100 |     100 |\n  NavBar.js                |     100 |      100 |     100 |     100 |\n  // ...\n```", "```js\n    import { render, screen } from \n      '@testing-library/react';\n    import Hotels from './Hotels';\n    import HotelsContext from '../context/HotelsContext';\n    test('The Hotels component should render', async () => {\n      const wrapper = ({ children }) => (\n        <HotelsContext.Provider\n          value={{\n            loading: true,\n            error: '',\n            hotels: [],\n            fetchHotels: jest.fn(),\n          }}\n        >\n          {children}\n        </HotelsContext.Provider>\n      );\n      render(<Hotels />, { wrapper });\n      expect(await screen.findByText(\n        'Loading...')).toBeVisible();\n    });\n    ```", "```js\n      import { render, screen } from \n        '@testing-library/react';\n      import Hotels from './Hotels';\n      import HotelsContext from \n        '../context/HotelsContext';\n    + import { BrowserRouter } from 'react-router-dom';\n     // ...\n    + test('The Hotels component should render a list of \n        hotels', async () => {\n    +   const wrapper = ({ children }) => (\n    +     <BrowserRouter>\n    +       <HotelsContext.Provider\n    +         value={{\n    +           loading: false,\n    +           error: '',\n    +           hotels: [\n    +             { id: 1, title: 'Test hotel 1', \n                    thumbnail: '' },\n    +             { id: 2, title: 'Test hotel 2', \n                    thumbnail: '' },\n    +           ],\n    +           fetchHotels: jest.fn(),\n    +         }}\n    +       >\n    +         {children}\n    +       </HotelsContext.Provider>\n    +     </BrowserRouter>\n    +   );\n    + });\n    ```", "```js\n      // ...\n      test('The Hotels component should render a list of\n        hotels', async () => {\n        const wrapper = ({ children }) => (\n          // ...\n        );\n    +   render(<Hotels />, { wrapper });\n    +   expect(screen.queryByText('Loading...')\n          ).toBeNull();\n    +   expect(screen.getAllByRole('link'\n          ).length).toBe(2);\n      });\n    ```", "```js\n    - import { render, screen } from \n        '@testing-library/react';\n    + import { render, screen, waitFor } from \n        '@testing-library/react';\n      import Hotels from './Hotels';\n      import HotelsContext from\n        '../context/HotelsContext';\n      import { BrowserRouter } from 'react-router-dom';\n      test('The Hotels component should render', async ()\n        => {\n    +   const mockFunction = jest.fn()\n        const wrapper = ({ children }) => (\n          <HotelsContext.Provider\n            value={{\n              loading: true,\n              error: '',\n              hotels: [],\n    -         fetchHotels: jest.fn(),\n    +         fetchHotels: mockFunction,\n            }}\n          >\n            {children}\n          </HotelsContext.Provider>\n        );\n        // ...\n    ```", "```js\n        // ...\n        render(<Hotels />, { wrapper });\n        expect(await screen.findByText('Loading...')\n          ).toBeVisible();\n    +   await waitFor(() => \n          expect(mockFunction).toHaveBeenCalledTimes(1));\n      });\n      // ...\n    ```", "```js\n---------------------------|---------|----------|---------|---------|\nFile                       | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s \n---------------------------|---------|----------|---------|---------|\nAll files                  |   19.83 |    29.03 |   16.67 |   19.83 |                   \n src                       |       0 |      100 |       0 |       0 |                   \n  App.js                   |       0 |      100 |       0 |       0 | \n  index.js                 |       0 |      100 |     100 |       0 |             \n src/components/HotelItem  |     100 |      100 |     100 |     100 |\n  HotelItem.js             |     100 |      100 |     100 |     100 |                   \n src/components/NavBar     |     100 |      100 |     100 |     100 |                   \n  NavBar.js                |     100 |      100 |     100 |     100 |                   \n src/context               |    8.16 |        0 |       0 |    8.16 |                   \n  AppContext.js            |       0 |      100 |       0 |       0 | \nHotelsContext.js         |   16.67 |        0 |       0 |   16.67 | \n  ReviewsContext.js        |       0 |        0 |       0 |       0 | \n src/pages                 |   21.95 |    34.21 |      20 |   21.95 |\nHotels.js                |     100 |      100 |     100 |     100 | \n\n  // ...  \n\n```", "```js\n    npm install cypress --save-dev\n    ```", "```js\n      // ... \n      \"scripts\": {\n        \"start\": \"react-scripts start\",\n        \"build\": \"react-scripts build\",\n        \"test\": \"react-scripts test\",\n    +   \"cypress\": \"cypress open\"\n        \"eject\": \"react-scripts eject\"\n      },\n      // ...\n    ```", "```js\n    describe('Cypress', () => {   \n        it('opens the app', () => {   \n            cy.visit('http://localhost:3000') \n        })\n    })\n    ```", "```js\n      describe('Cypress', () => {\n    -   it('opens the app', () => {   \n    +   it('opens the app and clicks on a hotel', () => {\n          cy.visit('http://localhost:3000');\n    +     cy.get('a').first().click();\n    +     cy.location('pathname').should('include',\n            'hotel');\n        });  \n      });\n    ```", "```js\n      describe('Cypress', () => {\n        // ...\n    +   it('navigates to the form to add a review', () =>\n          {\n    +     cy.get('button').contains('+ Add \n            Review').click();\n    +     cy.location('pathname').should('include',\n            'new');\n    +   });\n    });\n    ```", "```js\n      // ...\n      function NavBar({ goBack, title, openForm = false })\n        {\n        return (\n          <NavBarWrapper>\n            {goBack && <NavBarButton onClick={goBack}>{`< \n              Go Back`} </NavBarButton>}\n            <Title>{title}</Title>\n            {openForm && \n              <NavBarButton \n                onClick={openForm}\n    +           data-cy='addReview'        \n              >\n               {`+ Add Review`}\n              </NavBarButton>\n            }\n          </NavBarWrapper>\n        );\n      }\n      export default NavBar;\n    ```", "```js\n      describe('Cypress', () => {\n        // ...\n        it('navigates to the form to add a review', () => \n          {\n    -     cy.get('button').contains('+ Add \n            Review').click();\n    +     cy.get('[data-cy=addReview]').click();\n          cy.location('pathname').should('include', \n            'new');\n        });\n      });\n    ```", "```js\n      describe('Cypress', () => {\n        // ...\n    +   it('fills in and submits the form', () => {\n    +     cy.get('form').within(() => {\n    +       cy.get('input[name=title]').type('Test \n              review');\n    +       cy.get('input[name=description]').type('Is a \n              test review by Cypress');\n            cy.get('input[name=rating]').type(4);\n            cy.get('button').click();\n    +     });\n    +   });\n      });\n    ```", "```js\n      describe('Cypress', () => {\n        // ...\n    +   it('and verifies if the review is added', () => {\n    +     cy.wait(600);\n    +     cy.get('h3').contains('Test review');\n    +     cy.get('div').contains('Is a test review by \n            Cypress');\n    +   });\n      });\n    ```", "```js\n    [\n      {\n        \"id\": 1,\n        \"title\": \"Downtown Hotel (***)\",\n        \"thumbnail\": \n          \"https://picsum.photos/id/369/400/400\"\n      }\n    ]\n    ```", "```js\n    {\n      \"id\": 1,\n      \"title\": \"Downtown Hotel (***)\",\n      \"thumbnail\": \"https://picsum.photos/id/369/400/400\"\n    }\n    ```", "```js\n      describe('Cypress', () => {\n    +   beforeEach(() => {\n    +     cy.intercept('GET', 'PacktPublishing/\n    React-Projects-Second-Edition/hotels', \n            { fixture: 'hotels.json' });\n    +     cy.intercept('GET', 'PacktPublishing/\n    React-Projects-Second-Edition/hotels/*', \n            { fixture: 'hotel.json' });\n    +     cy.intercept('GET', 'PacktPublishing/\n    React-Projects-Second-Edition/hotels/*/reviews', \n            []);\n    +   })\n        it('opens the app and clicks on a hotel', () => {\n          // ...\n    ```"]