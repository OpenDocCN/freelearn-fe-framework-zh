["```js\nheroku create <name>\n\n```", "```js\n[remote \"heroku\"]\n  url = https://git.heroku.com/*<name>*.git\n  fetch = +refs/heads/*:refs/remotes/heroku/*\n```", "```js\ngit push heroku master\n\n```", "```js\nLifecycle scripts included in webpack-scaffold:\n test\n echo \"Error: no test specified\" && exit 1\n start\n node server.js\n\n```", "```js\n    if(process.env.NODE_ENV !== \"development\"){\n      // production server code\n    }\n    ```", "```js\n├── package.json\n├── public\n│   ├── app.css\n│   ├── bundle.js\n│   ├── heroku.js\n│   ├── index.html\n│   └── products.json\n├── server.js\n└── source\n    ├── actions\n    │   ├── cart.js\n    │   ├── customer.js\n    │   └── products.js\n    ├── app.jsx\n    ├── components\n    │   ├── customerdata.jsx\n    │   ├── footer.jsx\n    │   └── menu.jsx\n    ├── layout.jsx\n    ├── pages\n    │   ├── checkout.jsx\n    │   ├── company.jsx\n    │   ├── home.jsx\n    │   ├── item.jsx\n    │   ├── products.jsx\n    │   └── receipt.jsx\n    ├── routes.jsx\n    └── stores\n        ├── cart.js\n        ├── customer.js\n        └── products.js\n```", "```js\nvar express = require(\"express\");\nvar app = express();\nvar port = process.env.PORT || 8080;\nvar host = process.env.HOST || '0.0.0.0';\n```", "```js\nvar path = require(\"path\");\nvar compression = require(\"compression\");\napp.use(compression());\n```", "```js\napp.get(\"*\", function (req, res) {\n  var file = path.join(__dirname, \"public\", req.path);\n  res.sendFile(file);\n});\n```", "```js\napp.listen(port, host, function (err) {\n  console.log('Server started on http://'+host+':'+port)\n});\n```", "```js\n./node_modules/.bin/browserify --extension=.jsx source/app.jsx -t [ babelify ]\n\n```", "```js\n./node_modules/.bin/uglifyjs -p 5 -c drop_console=true -m --max-line-len --inline-script\n\n```", "```js\nNODE_ENV=production browserify --extension=.jsx source/app.jsx -t [ babelify ] | ./node_modules/.bin/uglifyjs  -p 5 -c drop_console=true -m --max-line-len --inline-script > public/bundle.js\n\n```", "```js\nweb: node server.prod.js\n```", "```js\ngit push heroku master\n\n```", "```js\n\"scripts\": {\n  \"bundle\": \"browserify --extension=.jsx source/app.jsx -t [ babelify ] | ./node_modules/.bin/uglifyjs  -p 5 -c drop_console=true -m --max-line-len --inline-script > public/bundle.js\",\n  \"start\": \"node server.js\"\n},\n```", "```js\n├── assets\n│   ├── app.css\n│   ├── favicon.ico\n│   └── index.html\n├── package.json\n├── server.js\n├── source\n│   └── index.jsx\n└── webpack.config.js\n```", "```js\n'use strict';\n\nvar path = require('path');\nvar express = require('express');\nvar serveStatic = require('serve-static')\nvar compression = require('compression')\nvar port = process.env.PORT || 8080;\nvar host = process.env.HOST || '0.0.0.0';\n```", "```js\nvar http = require('http');\nvar errorHandler = require('express-error-handler');\n```", "```js\nvar app = express();\napp.use(compression());\n```", "```js\nvar cpFile = require('cp-file');\ncpFile('assets/index.prod.html', 'public/assets/index.html').then(function() {\n  console.log('Copied index.html');\n});\ncpFile('assets/app.css', 'public/assets/app.css').then(function() {\n  console.log('Copied app.css');\n});\n```", "```js\nvar envs = require('envs');\napp.set('environment', envs('NODE_ENV', 'production')); \napp.use(serveStatic(path.join(__dirname, 'public', 'assets')));\n```", "```js\nvar routes = function (app) {\n  app.get('*', function(req, res) {\n    res.sendFile(path.join(__dirname, 'public', 'assets','index.html'));\n  });\n}\n```", "```js\nvar router = express.Router();\nroutes(router);\napp.use(router);\n\nVar server = http.createServer(app);\n```", "```js\napp.use(function (err, req, res, next) {\n  console.log(err);\n  next(err);\n});\n\napp.use( errorHandler({server: server}) );\n```", "```js\napp.listen(port, host, function() {\n  console.log('Server started at http://'+host+':'+port);\n});\n```", "```js\nnpm install --save compression@1.6.1 envs@0.1.6 express-error-handler@1.0.1 serve-static@1.10.2 cp-file@3.1.0 rimraf@2.5.1\n\n```", "```js\n\"devDependencies\": {\n  \"react-transform-catch-errors\": \"^1.0.1\",\n  \"react-transform-hmr\": \"^1.0.1\",\n  \"redbox-react\": \"^1.2.0\",\n  \"webpack-dev-middleware\": \"^1.4.0\",\n  \"webpack-hot-middleware\": \"^2.6.0\",\n  \"babel-core\": \"^6.3.26\",\n  \"babel-loader\": \"^6.2.0\",\n  \"babel-plugin-react-transform\": \"^2.0.0\",\n  \"babel-preset-es2015\": \"^6.3.13\",\n  \"babel-preset-react\": \"^6.3.13\",\n  \"babelify\": \"^7.3.0\",\n  \"uglifyjs\": \"^2.4.10\",\n  \"webpack\": \"^1.12.9\",\n  \"rimraf\": \"^2.5.1\",\n  \"react\": \"^15.1.0\",\n  \"react-dom\": \"^15.1.0\"\n},\n\"dependencies\": {\n  \"compression\": \"^1.6.1\",\n  \"cp-file\": \"^3.1.0\",\n  \"envs\": \"^0.1.6\",\n  \"express\": \"^4.13.3\",\n  \"express-error-handler\": \"^1.0.1\",\n  \"path\": \"^0.12.7\",\n  \"serve-static\": \"^1.10.2\"\n}\n```", "```js\n'use strict';\n\nvar path = require('path');\nvar webpack = require('webpack');\n\nmodule.exports = {\n  entry: [\n    './source/index'\n  ],\n  output: {\n    path: path.join(__dirname, 'public', 'assets'),\n    filename: 'bundle.js',\n    publicPath: '/assets/'\n  },\n  plugins: [\n    new webpack.optimize.OccurenceOrderPlugin(),\n```", "```js\n    new webpack.DefinePlugin({\n      'process.env': {\n        'NODE_ENV': JSON.stringify('production')\n      }\n    }),\n```", "```js\n    new webpack.optimize.UglifyJsPlugin({\n      compressor: {\n        warnings: false\n      }\n    })\n```", "```js\n  ],\n  module: {\n    loaders: [{\n      tests: /\\.js?$/,\n      loaders: ['babel'],\n      include: path.join(__dirname, 'source')\n    }]\n  },\n  resolve: {\n    extensions: ['', '.js', '.jsx']\n  }\n};\n```", "```js\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>ReactJS + Webpack Scaffold</title>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, \n    initial-scale=1\">\n    <link rel=\"stylesheet\" href=\"/app.css\">\n  </head>\n  <body>\n    <div id=\"app\"></div>\n    <script src=\"img/bundle.js\"></script>\n  </body>\n</html>\n```", "```js\n\"scripts\": {\n  \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n  \"prestart\": \"npm run build\",\n  \"start\": \"node server-production.js\",\n  \"dev\": \"node server-development.js\",\n  \"prebuild\": \"rimraf public\",\n  \"build\": \"NODE_ENV=production webpack --config Webpack-production.config.js\",\n  \"predeploy\": \"npm run build\",\n  \"deploy\": \"echo Ready to deploy. Commit your changes and run git push heroku master\"\n},\n```", "```js\n├── .babelrc\n├── assets\n│   ├── app.css\n│   ├── favicon.ico\n│   ├── index.html\n│   └── index-production.html\n├── package.json\n├── server-development.js\n├── server-production.js\n├── source\n│   └── index.jsx\n├── Webpack-development.config.js\n└── Webpack-production.config.js\n```"]