- en: Chapter 7. Designing Responsive Tables
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第七章 设计响应式表格
- en: The HTML element table can be quite wide to be able to show a structured content.
    Sometimes the entire row of data needs to be kept along to make sense in a table.
    Tables can flex by default, but if they get too narrow, cell content will begin
    to wrap; this is often not very cleanly done!
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: HTML 元素表格可能相当宽以显示结构化内容。有时需要将整行数据保留在一起才能使表格有意义。表格默认可以弹性伸缩，但如果它们变得太窄，单元格内容将开始换行；这通常不太干净！
- en: '*Garrett Dimon* mentioned an interesting topic about the difficulty of adjusting
    table width accommodating different screen sizes and ensuring the sense in content
    of the table:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*Garrett Dimon* 提到了一个有趣的话题，关于调整表格宽度以适应不同屏幕尺寸并确保表格内容的含义的难度：'
- en: '"Data tables don''t do so well with responsive design. Just sayin''."'
  id: totrans-3
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “数据表在响应式设计方面表现不佳。只是说说而已。”
- en: 'In this chapter, we will learn four different approaches to create responsive
    tables:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习创建响应式表格的四种不同方法：
- en: Expandable responsive tables
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可扩展的响应式表格
- en: Stacked tables
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 堆叠表格
- en: Horizontal overflow
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 水平溢出
- en: Link to full-table
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 完整表格链接
- en: Responsive tables
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 响应式表格
- en: 'The following screenshot shows the most common problems found about responsive
    table, which are: the minimum table width exceeds the screen size and the decrease
    in the size of the whole table (text size included):'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了关于响应式表格的最常见问题，包括：最小表格宽度超过屏幕尺寸和整个表格尺寸（包括文本大小）的减小：
- en: '![Responsive tables](img/3602OS_07_08.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![响应式表格](img/3602OS_07_08.jpg)'
- en: However, let's see the different ways to solve this responsive problem.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，让我们看看解决这个响应式问题的不同方法。
- en: Expandable responsive tables
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可扩展的响应式表格
- en: Through FooTable we can transform our HTML tables into expandable responsive
    tables, allowing devices with small screen sizes to keep the same content, and
    the only change is you will have to prioritize the content that will be displayed.
    Its function is to hide the columns you consider less important when viewed for
    the first time depending on the breakpoint. So, the hidden data will appear when
    clicking/touching the row only.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 FooTable，我们可以将 HTML 表格转换为可扩展的响应式表格，允许具有小屏幕尺寸的设备保持相同的内容，唯一的变化是您将不得不优先考虑将要显示的内容。其功能是根据断点隐藏您认为不太重要的列。因此，只有在单击/触摸行时才会显示隐藏的数据。
- en: 'If we look more deeply into this jQuery plugin, we will notice two big features
    that have contributed for a good code and ease of development: **out of the box
    customization** (via data attributes from DOM) and **breakpoint settings** (which
    may be set different from breakpoints which have already been used on a website).'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们更深入地研究这个 jQuery 插件，我们将注意到两个重要特性为良好的代码和开发的便利做出了贡献：**即时定制**（通过来自 DOM 的数据属性）和
    **断点设置**（可能与已在网站上使用的断点设置不同）。
- en: Let's see in the next example how to define it on DOM.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的示例中让我们看看如何在 DOM 中定义它。
- en: How to do it
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做
- en: 'After downloading the plugin from [https://github.com/bradvin/FooTable/](https://github.com/bradvin/FooTable/),
    we will include the CSS stylesheet inside the `<head>` tag:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 从 [https://github.com/bradvin/FooTable/](https://github.com/bradvin/FooTable/)
    下载插件后，我们将在 `<head>` 标签中包含 CSS 样式表：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'By default, there are only two breakpoints that FooTable uses: `phone` set
    to `480` px and `tablet` to `1024` px. These breakpoint values need not be the
    same as the ones you are probably using because it depends on how much space the
    table needs. Also, we will see later how to change it if necessary.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，FooTable 仅使用两个断点：`phone` 设置为 `480` px，`tablet` 设置为 `1024` px。这些断点值不需要与您可能使用的值相同，因为它取决于表格需要多少空间。此外，如果必要，稍后我们将看到如何更改它。
- en: 'Let''s insert the following code as a sample into the HTML code just to practice
    the plugin resources:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将以下代码作为示例插入到 HTML 代码中，以便练习插件资源：
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Data attributes facilitate the understanding of the functioning of FooTable,
    knowing which columns will be hidden in phones or tablets by only looking at the
    DOM.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 数据属性有助于理解 FooTable 的功能，只需查看 DOM 就可以知道哪些列会在手机或平板电脑上隐藏。
- en: 'The following are the basic data attributes used by FooTable and their functions:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 FooTable 使用的基本数据属性及其功能：
- en: '`data-class`: This specifies a CSS class to be applied to all cells in a column.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data-class`：这指定要应用于列中所有单元格的 CSS 类。'
- en: '`data-hide`: This defines which breakpoints will be hidden in a column. It
    is possible to specify more than one breakpoint by separating them using a comma.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data-hide`：定义将在列中隐藏哪些断点。可以通过逗号分隔指定多个断点。'
- en: '`data-ignore`: This hides the content only when the detailed information is
    seen. It is normally used along with the `data-hide` class and the acceptable
    values for this option may be `true` or `false`.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data-ignore`：仅在查看详细信息时隐藏内容。通常与`data-hide`类一起使用，此选项的可接受值可以是`true`或`false`。'
- en: For further information about a list of all data attributes, you may visit [http://fooplugins.com/footable/demos/data-attributes.htm](http://fooplugins.com/footable/demos/data-attributes.htm).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 有关所有数据属性列表的更多信息，您可以访问[http://fooplugins.com/footable/demos/data-attributes.htm](http://fooplugins.com/footable/demos/data-attributes.htm)。
- en: Tip
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: If we use these data attributes, we should apply them on the `<th>` element
    and the plugin will reflect its changes in the internal cells.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们使用这些数据属性，应该将它们应用在`<th>`元素上，插件将在内部单元格中反映其更改。
- en: 'At the bottom of DOM (before the `</body>` closing tag), we will need to include
    two files: jQuery and FooTable libraries. After that, insert the following code
    executing the script:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在DOM的底部（在`</body>`结束标记之前），我们需要包含两个文件：jQuery和FooTable库。之后，插入以下代码来执行脚本：
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'If we want to change the breakpoints of FooTable, we will only need to specify
    our own values when executing the previous script, as is shown in the following
    code:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要更改FooTable的断点，只需在执行前面的脚本时指定自己的值，如下面的代码所示：
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'In the following screenshot, we will see what happens if we click on Bob''s
    table row. Let''s compare our responsive tables on a Smartphone and a tablet:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的屏幕截图中，我们将看到如果单击Bob的表行会发生什么。让我们比较一下我们在智能手机和平板电脑上的响应式表格：
- en: '![How to do it](img/3602OS_07_01.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![如何做](img/3602OS_07_01.jpg)'
- en: In this example, on each device there are some fields that are visible only
    if you are clicking for more details of a specific contact. Although this approach
    avoids massive data, it may be difficult to find a contact, for example, by e-mail,
    as it requires clicking on all contacts to display the information.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，每个设备上都有一些字段，只有在单击查看特定联系人的更多详细信息时才可见。虽然这种方法可以避免大量数据，但可能很难找到一个联系人，例如，通过电子邮件，因为这需要单击所有联系人才能显示信息。
- en: There are some plugin extensions that solve this. Let's check them.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些插件扩展可以解决这个问题。让我们来看看它们。
- en: Extending the plugin
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 扩展插件
- en: Another advantage of using the FooTable as a solution is its extensibility.
    The plugin is modular, which allows you to include additional functionality such
    as sorting, filtering, and pagination through the use of add-ons.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 使用FooTable作为解决方案的另一个优点是其可扩展性。该插件是模块化的，允许您通过使用插件增加功能，例如排序、过滤和分页。
- en: 'The sorting add-on provides the capability of sorting the data contained within
    your table columns. To do this, we will include this script file:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 排序插件提供对表格列中包含的数据进行排序的功能。为此，我们将包含以下脚本文件：
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Then we will set `data-sort-initial="true"` for items for which we want to
    enable the sorting and `data-sort-ignore="true"` for items for which sorting does
    not make sense, such as images and phones:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将为想要启用排序的项目设置`data-sort-initial="true"`，并为不适合排序的项目设置`data-sort-ignore="true"`，例如图像和电话：
- en: '[PRE5]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'In the following screenshot we can see the insertion of arrow icons, which
    the plugin uses to order that specific table header:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的屏幕截图中，我们可以看到箭头图标的插入，这是插件用来对特定表头进行排序的：
- en: '![Extending the plugin](img/3602OS_07_09.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![扩展插件](img/3602OS_07_09.jpg)'
- en: 'The filtering add-on adds a search field allowing users to locate the data
    they are looking for. The search result brings the correct data to us even if
    it is hidden from viewers. To do so, let''s include the following in the script
    file:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 过滤插件添加了一个搜索字段，允许用户查找他们正在寻找的数据。搜索结果为我们带来了正确的数据，即使它们对观众是隐藏的。为此，让我们在脚本文件中包含以下内容：
- en: '[PRE6]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Add a text input field to your page (before or after the table) with the `#filter`
    ID, and then specify it on the `data-filter=#filter` data attribute of your table
    element. The following is the code of this filter:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在页面上添加一个文本输入框（在表格之前或之后），其ID为`#filter`，然后在表格元素的`data-filter=#filter`数据属性上指定它。以下是此筛选器的代码：
- en: '[PRE7]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'In the following screenshot the content was filtered showing just one item,
    even the value found is hidden:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的屏幕截图中，筛选内容，仅显示一个项目，即使找到的值被隐藏：
- en: '![Extending the plugin](img/3602OS_07_10.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![扩展插件](img/3602OS_07_10.jpg)'
- en: 'Also, the pagination add-on helps displaying part of the total content creating
    a pagination of 10 items by default. To do this, we must include the following
    code in the script file:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，分页附加组件可以帮助显示总内容的一部分，默认创建含有10个项目的分页。为此，我们需要在脚本文件中包含以下代码：
- en: '[PRE8]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'So, in the previous table example, after `</tbody>` we will add the following
    code which will receive the pagination. The `pagination` class in the following
    div is required and other classes such as `pagination-centered` and `hide-if-no-paging`
    are only complementary:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在上一个表格示例中，在`</tbody>`之后，我们将添加以下代码，用于接收分页。以下div中的`pagination`类是必需的，其他类如`pagination-centered`和`hide-if-no-paging`仅为补充：
- en: '[PRE9]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Also, for this example let''s limit two items per page, to see the pagination
    in use, by adding `data-page-size="2"` on `table` element. And this is how it
    looks:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，对于此示例，让我们限制每页两个项目，以查看分页的使用，只需在`table`元素上添加`data-page-size="2"`。效果如下：
- en: '![Extending the plugin](img/3602OS_07_02.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![扩展插件](img/3602OS_07_02.jpg)'
- en: For further information about these add-ons and more plugin options, the complete
    documentation can be found at [http://fooplugins.com/footable-demos/](http://fooplugins.com/footable-demos/).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 有关这些附加组件和更多插件选项的详细信息，请参阅[http://fooplugins.com/footable-demos/](http://fooplugins.com/footable-demos/)的完整文档。
- en: Although this plugin looks very complete, there are some situations where the
    content demands an other interface. Let's take a look at the stackedtable solution.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管此插件看起来非常完善，但在某些情况下，内容需要其他界面。让我们看看堆叠表解决方案。
- en: Stackedtables
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 堆叠表
- en: Stackedtable is a jQuery plugin that offers another option for our responsive
    table which is available to download from [http://johnpolacek.github.io/stacktable.js/](http://
    http://johnpolacek.github.io/stacktable.js/).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: Stackedtable是一个jQuery插件，为我们的响应式表格提供了另一种选项，可从[http://johnpolacek.github.io/stacktable.js/](http://
    http://johnpolacek.github.io/stacktable.js/)下载。
- en: This solution creates a copy of the table and converts wide tables into a two-column
    key/value format that works better on small screens.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 此解决方案将创建表格的副本，并将宽表格转换为在小屏幕上效果更好的两列键/值格式。
- en: Tip
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Tip
- en: This solution is recommended for tables with few rows only because it increases
    a lot of the vertical content.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 建议仅用于少量行的表格，因为它会大大增加垂直内容。
- en: By using a simple media query, we can hide the original table and show the stacked
    table. Let's take a look and see how we can put this into action.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用简单的媒体查询，我们可以隐藏原始表格并显示堆叠表。让我们看看如何将其付诸实践。
- en: How to do it using the table from the previous example
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何使用上一个示例中的表格
- en: 'We will start by including the CSS stylesheet inside the `<head>` tag:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先在`<head>`标签内包含CSS样式表：
- en: '[PRE10]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'If we want to change the breakpoint, aiming to use this solution for Smartphones,
    we only need to go inside the `stacktable.css` file and change the `max-width`
    property:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要更改断点，目的是将此解决方案用于智能手机，只需进入`stacktable.css`文件并更改`max-width`属性：
- en: '[PRE11]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'After that, we will add the base of the table that we saw in the previous solution,
    just adding an ID and class:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们将添加上一个解决方案中看到的表格的基础，只需添加一个ID和类：
- en: '[PRE12]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'At the bottom of DOM (before the `</body>` closing tag), we will need to include
    two files: the `jquery` and `stacktable` libraries. After that, insert the following
    code executing the script and inform the table ID and a class to restrict the
    stacked table only for Smartphones as we want:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在DOM的底部（在`</body>`闭合标签之前），我们需要包含两个文件：`jquery`和`stacktable`库。然后，插入以下代码执行脚本，并指定表格ID和一个类来限制堆叠表仅适用于智能手机，如下所需：
- en: '[PRE13]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The following is a screenshot of the two views—for small device and desktop:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是两个视图的屏幕截图—用于小设备和桌面：
- en: '![How to do it using the table from the previous example](img/3602OS_07_03.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![如何使用上一个示例中的表格](img/3602OS_07_03.jpg)'
- en: Horizontal overflow
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 水平溢出
- en: This technique works by freezing the first column, allowing you to scroll down
    the other columns under it. This way we keep seeing the first column content for
    each row, which permits left scrolling, to see the remaining content in order
    to make data comparison easier.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 此技术通过冻结第一列来实现，使您可以在其下滚动其他列。这样我们保持每行看到第一列的内容，从而允许左滚动，以查看其余内容，以便更容易进行数据比较。
- en: This table is recommended for tables that have a greater number of columns and
    the content of the first column is more important than others. Let's clarify how
    it will look by practicing it in the next example.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐这种表格用于有更多列的表格，并且第一列的内容比其他列更重要。让我们通过在下一个示例中练习来澄清它将是什么样子。
- en: How to do it
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做
- en: 'We will start by downloading the solution from [http://zurb.com/playground/responsive-tables](http://zurb.com/playground/responsive-tables).
    After that, let''s create a new HTML file and include the CSS stylesheet inside
    the `<head>` tag:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从[http://zurb.com/playground/responsive-tables](http://zurb.com/playground/responsive-tables)下载解决方案。然后创建一个新的HTML文件，并在`<head>`标签内包含CSS样式表：
- en: '[PRE14]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Now insert the following HTML table code using more columns than the previous
    one and with a class named `responsive`:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在插入以下HTML表格代码，使用比之前更多的列，并添加一个名为`responsive`的类：
- en: '[PRE15]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'At the bottom of DOM (before the `</body>` closing tag), we will only need
    to include jQuery and Responsive-Tables libraries:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在DOM的底部（在`</body>`结束标签之前），我们只需要包含jQuery和响应式表格库：
- en: '[PRE16]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Let''s look at the following screenshot showing this table on a Smartphone
    and tablet:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一下下面的屏幕截图，显示了这张表格在智能手机和平板电脑上的情况：
- en: '![How to do it](img/3602OS_07_04.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![如何做](img/3602OS_07_04.jpg)'
- en: Tip
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: When the available screen width is over 767 px, changes start to occur on our
    table. If we want to modify this default value, we need to open the `responsive-tables.js`
    file, look for the value 767, and change it.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 当可用屏幕宽度超过767像素时，我们的表格开始发生变化。如果我们想修改这个默认值，需要打开`responsive-tables.js`文件，查找数值767，并进行更改。
- en: It is technically simple to do. However, we cannot underestimate its efficiency
    on responsive websites, since it helps a lot to understand the table information,
    especially on small devices.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术上讲，这很容易做到。然而，我们不能低估它在响应式网站上的效率，因为它有助于在小设备上更好地理解表格信息。
- en: Header orientation flip
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 表头方向翻转
- en: If you find that the header row of our table is more important than the first
    column and that you need to keep displaying the header row when using small devices,
    *David Bushell* has created an interesting solution by using only the CSS code.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您发现我们表格的标题行比第一列更重要，并且在使用小设备时需要保持显示标题行，*David Bushell*通过仅使用CSS代码创建了一个有趣的解决方案。
- en: This CSS solution swaps places with the first column and does not require any
    JavaScript library, just CSS3.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这个CSS解决方案将第一列移到另一个地方，不需要任何JavaScript库，只需要CSS3。
- en: 'Let''s start by including the CSS stylesheet inside the `<head>` tag:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从在`<head>`标签内包含CSS样式表开始：
- en: '[PRE17]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Using a more realistic content, let''s create this table on our HTML code:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 使用更真实的内容，让我们在HTML代码中创建这个表格：
- en: '[PRE18]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Let''s see the result on Smartphone and tablet:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一下智能手机和平板电脑上的结果：
- en: '![Header orientation flip](img/3602OS_07_05.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![表头方向翻转](img/3602OS_07_05.jpg)'
- en: Link to full-table
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 链接到全表
- en: Linking to full-table is a technique less used because it does not solve the
    situation completely. It works by replacing the table with a small mock table
    and creating only a link to view the full table.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 链接到全表是一种不太常用的技术，因为它并不能完全解决情况。它的工作原理是用一个小模拟表来替换原表，然后只创建一个链接以查看完整的表格。
- en: The problem persists, but this time, the user can swipe the screen to the left/right
    in order to see all the content. There is a media query to handle this mechanism
    for showing it only on small screens.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 问题仍然存在，但这次用户可以在屏幕上向左/向右滑动以查看所有内容。有一个媒体查询来处理这种机制，只在小屏幕上显示它。
- en: How to do it
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做
- en: First of all, let's begin by downloading the `full-table.css` file, which is
    available in the downloadable code files that accompany this book. Then insert
    it inside the `<head>` tag of the HTML code. Although we are dealing with a CSS
    solution, this code is too extensive and it increases the chances of typo mistakes.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们从可下载的代码文件中下载`full-table.css`文件。然后将其插入到HTML代码的`<head>`标签内。尽管这是一个CSS解决方案，但这段代码太长了，增加了打错字的机会。
- en: 'Let''s re-use a copy of the table code from the previous example but with alterations
    in the table element, which is as follows:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们重复使用从上一个示例中复制的表格代码，但对表格元素进行修改，如下所示：
- en: '[PRE19]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'At the bottom of DOM (before the `</body>` closing tag), we will need to include
    the `jquery` library and insert the following code which will display/hide the
    solution based only on a class name:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在DOM的底部（在`</body>`结束标签之前），我们需要包含`jquery`库并插入以下代码，根据一个类名来显示/隐藏解决方案：
- en: '[PRE20]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: In the following screenshot we will see the minified table for small screens,
    driving the user to the full table visualization on clicking. This effect occurs
    when the screen size is less than or equal to 520 px (this value can be modified
    if we need to use the CSS file).
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的屏幕截图中，我们将看到针对小屏幕的被压缩表格，在点击后将用户引导至完整表格可视化。当屏幕尺寸小于或等于 520 像素时，会出现此效果（如果需要使用
    CSS 文件，可以修改此值）。
- en: '![How to do it](img/3602OS_07_06.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作](img/3602OS_07_06.jpg)'
- en: Note
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The plugin generates a horizontal scrollbar after clicking to see the table
    in full width.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 插件在点击后生成水平滚动条，以查看完整宽度的表格。
- en: Exercise 6 – creating a responsive table of prices using the FooTable jQuery
    plugin
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习 6 – 使用 FooTable jQuery 插件创建响应式价格表格
- en: Let's create a responsive table using the FooTable jQuery plugin and the contents
    of the table in the following screenshot.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用 FooTable jQuery 插件和下面屏幕截图中表格的内容创建一个响应式表格。
- en: Note
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The content of this table is not real and we will use it just for practice.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这个表格的内容并非真实，我们只是用它来练习。
- en: 'In the following screenshot we can see the table as shown on Smartphone and
    tablet, each device using a different design:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的屏幕截图中，我们可以看到该表格在智能手机和平板电脑上的显示，每个设备使用不同的设计：
- en: '![Exercise 6 – creating a responsive table of prices using the FooTable jQuery
    plugin](img/3602OS_07_07.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![练习 6 – 使用 FooTable jQuery 插件创建响应式价格表格](img/3602OS_07_07.jpg)'
- en: You can start by creating the table structure based on the tablet's design and
    then implement the FooTable plugin automatizing the compact visual for Smartphones.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以首先基于平板电脑的设计创建表格结构，然后使用 FooTable 插件自动化为智能手机实现紧凑的可视化效果。
- en: Summary
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: 'In this chapter, we learned four different ways to deal with wide tables in
    small devices'' widths. We focused on how to implement each technique because
    its usage depends on the type of table''s content. The techniques we just saw
    are: expandable responsive tables (FooTable), stacked tables, horizontal overflow,
    and link to full-tables.'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了处理小设备宽度下宽表的四种不同方式。我们重点关注如何实现每种技术，因为它们的使用取决于表格内容的类型。我们刚刚看到的技术有：可扩展响应式表格（FooTable）、堆叠表格、水平溢出和链接到完整表格。
- en: In the next chapter, we will take a look at using forms and learn how to implement
    features such as autocomplete, datepickers, and tooltips.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何使用表单，并学习如何实现自动完成、日期选择器和工具提示等功能。
