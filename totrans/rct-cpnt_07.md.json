["```js\n$ npm install --save babel-cli babel-preset-react babel-preset-es2015 react react-dom\n\n```", "```js\n$ node server.js\n\n```", "```js\n$ node_modules/.bin/babel-node server.js\n\n```", "```js\n{\n  \"presets\": [\"react\", \"es2015\"]\n}\n```", "```js\nvar React = require(\"react\");\nvar ReactDOMServer = require(\"react-dom/server\");\n\nconsole.log(\n    ReactDOMServer.renderToString(<div>hello world</div>)\n);\n```", "```js\n$ babel-node examples/server.js\n\n```", "```js\n<div data-reactid=\".yt0g9w8kxs\" data-react-checksum=\"-1395650246\">hello world</div>\n```", "```js\nvar http = require(\"http\");\n\nvar server = http.createServer(\n    function (request, response) {\n        response.writeHead(200, {\n            \"Content-Type\": \"text/html\"\n        });\n\n        response.end(\n            require(\"./hello-world\")\n        );\n    }\n);\n\nserver.listen(3000, \"127.0.0.1\");\n\n```", "```js\nvar React = require(\"react\");\nvar ReactDOMServer = require(\"react-dom/server\");\n\nmodule.exports = ReactDOMServer.renderToString(\n    <div>hello world</div>\n);\n\n```", "```js\n$ npm install --save express\n\n```", "```js\nvar app = require(\"express\")();\nvar server = require(\"http\").Server(app);\n\napp.get(\"/\", function (request, response) {\n    response.send(\n        require(\"./hello-world\")\n    );\n});\n\nserver.listen(3000);\n```", "```js\napp.get(\"/\", function (request, response) {\n    response.send(\n        require(\"./hello-world\")\n    );\n});\n\napp.get(\"/pages\", function (request, response) {\n    response.send(\n        JSON.stringify([ /* ... */ ])\n    );\n});\n```", "```js\nvar options = {\n    \"method\": \"GET\"\n};\n\nfetch(\"http://127.0.0.1/pages\", options).then(\n    function(response) {\n        console.log(response);\n    }\n);\n```", "```js\nnpm install --save socket.io\n\n```", "```js\n// ...enable JSX/ES6 compilation\n\nvar app = require(\"express\")();\nvar server = require(\"http\").Server(app);\nvar io = require(\"socket.io\")(server);\n\napp.get(\"/\", function (request, response) {\n    response.send(\n        require(\"./hello-world\")\n    );\n});\n\n// ...define other endpoints\n\nio.on(\"connection\", function (socket) {\n console.log(\"connection\");\n\n socket.on(\"message\", function (message) {\n console.log(\"message: \" + message);\n\n io.emit(\"message\", message);\n });\n});\n\nserver.listen(3000);\n```", "```js\nvar React = require(\"react\");\nvar ReactDOMServer = require(\"react-dom/server\");\n\nvar script = {\n \"__html\": `\n var socket = io();\n\n socket.on(\"message\", function (message) {\n console.log(message);\n });\n\n socket.emit(\"message\", \"hello world\");\n `\n};\n\nmodule.exports = ReactDOMServer.renderToString(\n    <div>\n        <script src=\"img/socket.io.js\"></script>\n        <script dangerouslySetInnerHTML={script}></script>\n    </div>\n);\n```", "```js\nclass HomeController {\n    * indexAction (request, response) {\n        response.send(\"hello world\");\n    }\n}\n\nmodule.exports = HomeController\n```", "```js\nconst Route = use(\"Route\");\n\nRoute.get(\"/\", \"HomeController.indexAction\");\n```", "```js\nconst Database = use(\"Database\");\n\nconst users = yield Database.table(\"users\").select(\"*\");\n```"]