["```js\n    export type User = {\n    ```", "```js\n      id: string;\n    ```", "```js\n      name: string;\n    ```", "```js\n    };\n    ```", "```js\n    export function authenticate(): Promise<User | undefined> {\n    ```", "```js\n      return new Promise((resolve) =>\n    ```", "```js\n        setTimeout(() => resolve({ id: \"1\", name: \"Bob\" }),       1000)\n    ```", "```js\n      );\n    ```", "```js\n    }\n    ```", "```js\n    export function authorize(id: string): Promise<string[]> {\n    ```", "```js\n      return new Promise((resolve) =>\n    ```", "```js\n        setTimeout(() => resolve([\"admin\"]), 1000)\n    ```", "```js\n      );\n    ```", "```js\n    }\n    ```", "```js\n    import { User } from './api/authenticate';\n    ```", "```js\n    type Props = {\n    ```", "```js\n      user: undefined | User;\n    ```", "```js\n      onSignInClick: () => void;\n    ```", "```js\n      loading: boolean;\n    ```", "```js\n    };\n    ```", "```js\n    export function Header({\n    ```", "```js\n      user,\n    ```", "```js\n      onSignInClick,\n    ```", "```js\n      loading,\n    ```", "```js\n    }: Props) {\n    ```", "```js\n      return (\n    ```", "```js\n        <header className=\"flex justify-between items-center       border-b-2 border-gray-100 py-6\">\n    ```", "```js\n          {user ? (\n    ```", "```js\n            <span className=\"ml-auto font-bold\">\n    ```", "```js\n              {user.name} has signed in\n    ```", "```js\n            </span>\n    ```", "```js\n          ) : (\n    ```", "```js\n            <button\n    ```", "```js\n              onClick={onSignInClick}\n    ```", "```js\n              className=\"whitespace-nowrap inline-flex items-            center justify-center ml-auto px-4 py-2 w-36             border border-transparent rounded-md             shadow-sm text-base font-medium text-white             bg-indigo-600 hover:bg-indigo-700\"\n    ```", "```js\n              disabled={loading}\n    ```", "```js\n            >\n    ```", "```js\n              {loading ? '...' : 'Sign in'}\n    ```", "```js\n            </button>\n    ```", "```js\n          )}\n    ```", "```js\n        </header>\n    ```", "```js\n      );\n    ```", "```js\n    }\n    ```", "```js\n    import { User } from './api/authenticate';\n    ```", "```js\n    import { Content } from './Content';\n    ```", "```js\n    type Props = {\n    ```", "```js\n      user: undefined | User;\n    ```", "```js\n      permissions: undefined | string[];\n    ```", "```js\n    };\n    ```", "```js\n    export function Main({ user, permissions }: Props) {\n    ```", "```js\n      return (\n    ```", "```js\n        <main className=\"py-8\">\n    ```", "```js\n          <h1 className=\"text-3xl text-center font-bold         underline\">Welcome</h1>\n    ```", "```js\n          <p className=\"mt-8 text-xl text-center\">\n    ```", "```js\n            {user ? `Hello ${user.name}!` : \"Please sign in\"}\n    ```", "```js\n          </p>\n    ```", "```js\n          <Content permissions={permissions} />\n    ```", "```js\n        </main>\n    ```", "```js\n      );\n    ```", "```js\n    }\n    ```", "```js\n    type Props = {\n    ```", "```js\n      permissions: undefined | string[];\n    ```", "```js\n    };\n    ```", "```js\n    export function Content({ permissions }: Props) {\n    ```", "```js\n      if (permissions === undefined) {\n    ```", "```js\n        return null;\n    ```", "```js\n      }\n    ```", "```js\n      return permissions.includes('admin') ? (\n    ```", "```js\n        <p className=\"mt-4 text-l text-center\">\n    ```", "```js\n          Some important stuff that only an admin can do\n    ```", "```js\n        </p>\n    ```", "```js\n      ) : (\n    ```", "```js\n        <p className=\"mt-4 text-l text-center\">\n    ```", "```js\n          Insufficient permissions\n    ```", "```js\n        </p>\n    ```", "```js\n      );\n    ```", "```js\n    }\n    ```", "```js\n    import { useReducer } from 'react';\n    ```", "```js\n    import { Header } from './Header';\n    ```", "```js\n    import { Main } from './Main';\n    ```", "```js\n    import { authenticate, User } from './api/authenticate';\n    ```", "```js\n    import { authorize } from './api/authorize';\n    ```", "```js\n    type State = {\n    ```", "```js\n      user: undefined | User,\n    ```", "```js\n      permissions: undefined | string[],\n    ```", "```js\n      loading: boolean,\n    ```", "```js\n    };\n    ```", "```js\n    const initialState: State = {\n    ```", "```js\n      user: undefined,\n    ```", "```js\n      permissions: undefined,\n    ```", "```js\n      loading: false,\n    ```", "```js\n    };\n    ```", "```js\n    type Action =\n    ```", "```js\n      | {\n    ```", "```js\n          type: \"authenticate\",\n    ```", "```js\n        }\n    ```", "```js\n      | {\n    ```", "```js\n          type: \"authenticated\",\n    ```", "```js\n          user: User | undefined,\n    ```", "```js\n        }\n    ```", "```js\n      | {\n    ```", "```js\n          type: \"authorize\",\n    ```", "```js\n        }\n    ```", "```js\n      | {\n    ```", "```js\n          type: \"authorized\",\n    ```", "```js\n          permissions: string[],\n    ```", "```js\n        };\n    ```", "```js\n    function reducer(state: State, action: Action): State {\n    ```", "```js\n      switch (action.type) {\n    ```", "```js\n        case \"authenticate\":\n    ```", "```js\n          return { ...state, loading: true };\n    ```", "```js\n        case \"authenticated\":\n    ```", "```js\n          return { ...state, loading: false, user: action.        user };\n    ```", "```js\n        case \"authorize\":\n    ```", "```js\n          return { ...state, loading: true };\n    ```", "```js\n        case \"authorized\":\n    ```", "```js\n          return {\n    ```", "```js\n            ...state,\n    ```", "```js\n            loading: false,\n    ```", "```js\n            permissions: action.permissions,\n    ```", "```js\n          };\n    ```", "```js\n        default:\n    ```", "```js\n          return state;\n    ```", "```js\n      }\n    ```", "```js\n    }\n    ```", "```js\n    function App() {\n    ```", "```js\n      const [{ user, permissions, loading }, dispatch] =\n    ```", "```js\n        useReducer(reducer, initialState);\n    ```", "```js\n      return (\n    ```", "```js\n        <div className=\"max-w-7xl mx-auto px-4\">\n    ```", "```js\n          <Header\n    ```", "```js\n            user={user}\n    ```", "```js\n            onSignInClick={handleSignInClick}\n    ```", "```js\n            loading={loading}\n    ```", "```js\n          />\n    ```", "```js\n          <Main user={user} permissions={permissions} />\n    ```", "```js\n        </div>\n    ```", "```js\n      );\n    ```", "```js\n    }\n    ```", "```js\n    export default App;\n    ```", "```js\n    async function handleSignInClick() {\n    ```", "```js\n      dispatch({ type: \"authenticate\" });\n    ```", "```js\n      const authenticatedUser = await authenticate();\n    ```", "```js\n      dispatch({\n    ```", "```js\n        type: \"authenticated\",\n    ```", "```js\n        user: authenticatedUser,\n    ```", "```js\n      });\n    ```", "```js\n      if (authenticatedUser !== undefined) {\n    ```", "```js\n        dispatch({ type: \"authorize\" });\n    ```", "```js\n        const authorizedPermissions = await authorize(\n    ```", "```js\n          authenticatedUser.id\n    ```", "```js\n        );\n    ```", "```js\n        dispatch({\n    ```", "```js\n          type: \"authorized\",\n    ```", "```js\n          permissions: authorizedPermissions,\n    ```", "```js\n        });\n    ```", "```js\n      }\n    ```", "```js\n    }\n    ```", "```js\nconst SomeContext = createContext<ContextType>(defaultValue);\n```", "```js\nexport function SomeProvider({ children }: Props) {\n  const [someState, setSomeState] = useState(initialState);\n  return (\n    <SomeContext.Provider value={{ someState }}>\n      {children}\n    </SomeContext.Provider>\n  );\n}\n```", "```js\nfunction App() {\n  return (\n    <SomeProvider>\n      <Header />\n      <Main />\n    </SomeProvider>\n  );\n}\n```", "```js\nconst { someState } = useContext(SomeContext);\n```", "```js\nexport function SomeComponent() {\n  const { someState } = useContext(SomeContext);\n  return <div>I have access to {someState}</div>;\n}\n```", "```js\n    import {\n    ```", "```js\n      createContext,\n    ```", "```js\n      useContext,\n    ```", "```js\n      useReducer,\n    ```", "```js\n      ReactNode,\n    ```", "```js\n    } from 'react';\n    ```", "```js\n    import { User } from './api/authenticate';\n    ```", "```js\n    type State = {\n    ```", "```js\n      user: undefined | User,\n    ```", "```js\n      permissions: undefined | string[],\n    ```", "```js\n      loading: boolean,\n    ```", "```js\n    };\n    ```", "```js\n    const initialState = {\n    ```", "```js\n      user: undefined,\n    ```", "```js\n      permissions: undefined,\n    ```", "```js\n      loading: false,\n    ```", "```js\n    };\n    ```", "```js\n    type Action =\n    ```", "```js\n      | {\n    ```", "```js\n          type: \"authenticate\",\n    ```", "```js\n        }\n    ```", "```js\n      | {\n    ```", "```js\n          type: \"authenticated\",\n    ```", "```js\n          user: User | undefined,\n    ```", "```js\n        }\n    ```", "```js\n      | {\n    ```", "```js\n          type: \"authorize\",\n    ```", "```js\n        }\n    ```", "```js\n      | {\n    ```", "```js\n          type: \"authorized\",\n    ```", "```js\n          permissions: string[],\n    ```", "```js\n        };\n    ```", "```js\n    function reducer(state: State, action: Action): State {\n    ```", "```js\n      switch (action.type) {\n    ```", "```js\n        case \"authenticate\":\n    ```", "```js\n          return { ...state, loading: true };\n    ```", "```js\n        case \"authenticated\":\n    ```", "```js\n          return { ...state, loading: false, user: action.        user };\n    ```", "```js\n        case \"authorize\":\n    ```", "```js\n          return { ...state, loading: true };\n    ```", "```js\n        case \"authorized\":\n    ```", "```js\n          return { ...state, loading: false, permissions:         action.permissions };\n    ```", "```js\n        default:\n    ```", "```js\n          return state;\n    ```", "```js\n      }\n    ```", "```js\n    }\n    ```", "```js\n    type AppContextType = State & {\n    ```", "```js\n      dispatch: React.Dispatch<Action>,\n    ```", "```js\n    };\n    ```", "```js\n    const AppContext = createContext<AppContextType>({\n    ```", "```js\n      ...initialState,\n    ```", "```js\n      dispatch: () => {},\n    ```", "```js\n    });\n    ```", "```js\n    type Props = {\n    ```", "```js\n      children: ReactNode;\n    ```", "```js\n    };\n    ```", "```js\n    export function AppProvider({ children }: Props) {\n    ```", "```js\n      const [{ user, permissions, loading }, dispatch] =\n    ```", "```js\n        useReducer(reducer, initialState);\n    ```", "```js\n      return (\n    ```", "```js\n        <AppContext.Provider\n    ```", "```js\n          value={{\n    ```", "```js\n            user,\n    ```", "```js\n            permissions,\n    ```", "```js\n            loading,\n    ```", "```js\n            dispatch,\n    ```", "```js\n          }}\n    ```", "```js\n        >\n    ```", "```js\n          {children}\n    ```", "```js\n        </AppContext.Provider>\n    ```", "```js\n      );\n    ```", "```js\n    }\n    ```", "```js\n    export const useAppContext = () => useContext(AppContext);\n    ```", "```js\n    import { authenticate } from './api/authenticate';\n    ```", "```js\n    import { authorize } from './api/authorize';\n    ```", "```js\n    import { useAppContext } from './AppContext';\n    ```", "```js\n    export function Header() {\n    ```", "```js\n      return ...\n    ```", "```js\n    }\n    ```", "```js\n    export function Header() {\n    ```", "```js\n      async function handleSignInClick() {\n    ```", "```js\n        dispatch({ type: 'authenticate' });\n    ```", "```js\n        const authenticatedUser = await authenticate();\n    ```", "```js\n        dispatch({\n    ```", "```js\n          type: 'authenticated',\n    ```", "```js\n          user: authenticatedUser,\n    ```", "```js\n        });\n    ```", "```js\n        if (authenticatedUser !== undefined) {\n    ```", "```js\n          dispatch({ type: 'authorize' });\n    ```", "```js\n          const authorizedPermissions = await authorize(\n    ```", "```js\n            authenticatedUser.id\n    ```", "```js\n          );\n    ```", "```js\n          dispatch({\n    ```", "```js\n            type: 'authorized',\n    ```", "```js\n            permissions: authorizedPermissions,\n    ```", "```js\n          });\n    ```", "```js\n        }\n    ```", "```js\n      }\n    ```", "```js\n      return ...\n    ```", "```js\n    }\n    ```", "```js\n    <button\n    ```", "```js\n      onClick={handleSignInClick}\n    ```", "```js\n      className=...\n    ```", "```js\n      disabled={loading}\n    ```", "```js\n    >\n    ```", "```js\n      {loading ? '...' : 'Sign in'}\n    ```", "```js\n    </button>\n    ```", "```js\n    export function Header() {\n    ```", "```js\n      const { user, loading, dispatch } = useAppContext();\n    ```", "```js\n      ...\n    ```", "```js\n    }\n    ```", "```js\n    import { Content } from './Content';\n    ```", "```js\n    import { useAppContext } from './AppContext';\n    ```", "```js\n    export function Main() {\n    ```", "```js\n      const { user } = useAppContext();\n    ```", "```js\n      return ...\n    ```", "```js\n    }\n    ```", "```js\n    <Content />\n    ```", "```js\n    import { useAppContext } from './AppContext';\n    ```", "```js\n    export function Content() {\n    ```", "```js\n      const { permissions } = useAppContext();\n    ```", "```js\n      if (permissions === undefined) {\n    ```", "```js\n        return null;\n    ```", "```js\n      }\n    ```", "```js\n      return ...\n    ```", "```js\n    }\n    ```", "```js\n    import { Header } from './Header';\n    ```", "```js\n    import { Main } from './Main';\n    ```", "```js\n    import { AppProvider } from './AppContext';\n    ```", "```js\n    function App() {\n    ```", "```js\n      return (\n    ```", "```js\n        <div className=\"max-w-7xl mx-auto px-4\">\n    ```", "```js\n          <Header />\n    ```", "```js\n          <Main />\n    ```", "```js\n        </div>\n    ```", "```js\n      );\n    ```", "```js\n    }\n    ```", "```js\n    function App() {\n    ```", "```js\n      return (\n    ```", "```js\n        <div className=\"max-w-7xl mx-auto px-4\">\n    ```", "```js\n          <AppProvider>\n    ```", "```js\n            <Header />\n    ```", "```js\n            <Main />\n    ```", "```js\n          </AppProvider>\n    ```", "```js\n        </div>\n    ```", "```js\n      );\n    ```", "```js\n    }\n    ```", "```js\nexport const store = configureStore({\n  reducer: {\n    someFeature: someFeatureReducer,\n    anotherFeature: anotherFeatureReducer\n  },\n});\n```", "```js\nexport const someSlice = createSlice({\n  name: \"someFeature\",\n  initialState,\n  reducers: {\n    someAction: (state) => {\n      state.someValue = \"something\";\n    },\n    anotherAction: (state) => {\n      state.someOtherValue = \"something else\";\n    },\n  },\n});\n```", "```js\nexport const store = configureStore({\n  reducer: {\n    someFeature: someSlice.reducer,\n    ...\n  },\n});\n```", "```js\n<Provider store={store}>\n  <SomeComponent />\n  <AnotherComponent />\n</Provider>\n```", "```js\nconst someValue = useSelector(\n  (state: RootState) => state.someFeature.someValue\n);\n```", "```js\nconst dispatch = useDispatch();\nreturn (\n  <button onClick={() => dispatch(someSlice.actions.someAction())}>\n    Some button\n  </button>\n);\n```", "```js\nnpm i @reduxjs/toolkit react-redux\n```", "```js\n    import { createSlice } from '@reduxjs/toolkit';\n    ```", "```js\n    import type { PayloadAction } from '@reduxjs/toolkit';\n    ```", "```js\n    import { User } from '../api/authenticate';\n    ```", "```js\n    type State = {\n    ```", "```js\n      user: undefined | User;\n    ```", "```js\n      permissions: undefined | string[];\n    ```", "```js\n      loading: boolean;\n    ```", "```js\n    };\n    ```", "```js\n    const initialState: State = {\n    ```", "```js\n      user: undefined,\n    ```", "```js\n      permissions: undefined,\n    ```", "```js\n      loading: false,\n    ```", "```js\n    };\n    ```", "```js\n    export const userSlice = createSlice({\n    ```", "```js\n      name: 'user',\n    ```", "```js\n      initialState,\n    ```", "```js\n      reducers: {\n    ```", "```js\n      }\n    ```", "```js\n    });\n    ```", "```js\n    reducers: {\n    ```", "```js\n      authenticateAction: (state) => {\n    ```", "```js\n        state.loading = true;\n    ```", "```js\n      },\n    ```", "```js\n      authenticatedAction: (\n    ```", "```js\n        state,\n    ```", "```js\n        action: PayloadAction<User | undefined>\n    ```", "```js\n      ) => {\n    ```", "```js\n        state.user = action.payload;\n    ```", "```js\n        state.loading = false;\n    ```", "```js\n      },\n    ```", "```js\n      authorizeAction: (state) => {\n    ```", "```js\n        state.loading = true;\n    ```", "```js\n      },\n    ```", "```js\n      authorizedAction: (\n    ```", "```js\n        state,\n    ```", "```js\n        action: PayloadAction<string[]>\n    ```", "```js\n      ) => {\n    ```", "```js\n        state.permissions = action.payload;\n    ```", "```js\n        state.loading = false;\n    ```", "```js\n      }\n    ```", "```js\n    }\n    ```", "```js\n    export const {\n    ```", "```js\n      authenticateAction,\n    ```", "```js\n      authenticatedAction,\n    ```", "```js\n      authorizeAction,\n    ```", "```js\n      authorizedAction,\n    ```", "```js\n    } = userSlice.actions;\n    ```", "```js\n    export default userSlice.reducer;\n    ```", "```js\n    import { configureStore } from '@reduxjs/toolkit';\n    ```", "```js\n    import userReducer from './userSlice';\n    ```", "```js\n    export const store = configureStore({\n    ```", "```js\n      reducer: { user: userReducer }\n    ```", "```js\n    });\n    ```", "```js\n    export type RootState = ReturnType<typeof store.getState>;\n    ```", "```js\n    import { Provider } from 'react-redux';\n    ```", "```js\n    import { store } from './store/store';\n    ```", "```js\n    <div className=\"max-w-7xl mx-auto px-4\">\n    ```", "```js\n      <Provider store={store}>\n    ```", "```js\n        <Header />\n    ```", "```js\n        <Main />\n    ```", "```js\n      </Provider>\n    ```", "```js\n    </div>\n    ```", "```js\n    import { useSelector, useDispatch } from 'react-redux';\n    ```", "```js\n    import type { RootState } from './store/store';\n    ```", "```js\n    import {\n    ```", "```js\n      authenticateAction,\n    ```", "```js\n      authenticatedAction,\n    ```", "```js\n      authorizeAction,\n    ```", "```js\n      authorizedAction,\n    ```", "```js\n    } from './store/userSlice';\n    ```", "```js\n    export function Header() {\n    ```", "```js\n      const user = useSelector(\n    ```", "```js\n        (state: RootState) => state.user.user\n    ```", "```js\n      );\n    ```", "```js\n      const loading = useSelector(\n    ```", "```js\n        (state: RootState) => state.user.loading\n    ```", "```js\n      );\n    ```", "```js\n      async function handleSignInClick() {\n    ```", "```js\n        ...\n    ```", "```js\n      }\n    ```", "```js\n      return ...\n    ```", "```js\n    }\n    ```", "```js\n    export function Header() {\n    ```", "```js\n      const user = useSelector(\n    ```", "```js\n        (state: RootState) => state.user.user\n    ```", "```js\n      );\n    ```", "```js\n      const loading = useSelector(\n    ```", "```js\n        (state: RootState) => state.user.loading\n    ```", "```js\n      );\n    ```", "```js\n      const dispatch = useDispatch();\n    ```", "```js\n      async function handleSignInClick() {\n    ```", "```js\n        ...\n    ```", "```js\n      }\n    ```", "```js\n      return ...\n    ```", "```js\n    }\n    ```", "```js\n    async function handleSignInClick() {\n    ```", "```js\n      dispatch(authenticateAction());\n    ```", "```js\n      const authenticatedUser = await authenticate();\n    ```", "```js\n      dispatch(authenticatedAction(authenticatedUser));\n    ```", "```js\n      if (authenticatedUser !== undefined) {\n    ```", "```js\n        dispatch(authorizeAction());\n    ```", "```js\n        const authorizedPermissions = await authorize(\n    ```", "```js\n          authenticatedUser.id\n    ```", "```js\n        );\n    ```", "```js\n        dispatch(authorizedAction(authorizedPermissions));\n    ```", "```js\n      }\n    ```", "```js\n    }\n    ```", "```js\n    import { useSelector } from 'react-redux';\n    ```", "```js\n    import { RootState } from './store/store';\n    ```", "```js\n    export function Main() {\n    ```", "```js\n      const user = useSelector(\n    ```", "```js\n        (state: RootState) => state.user.user\n    ```", "```js\n      );\n    ```", "```js\n      return ...\n    ```", "```js\n    }\n    ```", "```js\n    import { useSelector } from 'react-redux';\n    ```", "```js\n    import { RootState } from './store/store';\n    ```", "```js\n    export function Content() {\n    ```", "```js\n      const permissions = useSelector(\n    ```", "```js\n        (state: RootState) => state.user.permissions\n    ```", "```js\n      );\n    ```", "```js\n      if (permissions === undefined) {\n    ```", "```js\n        return null;\n    ```", "```js\n      }\n    ```", "```js\n      return ...\n    ```", "```js\n    }\n    ```", "```js\n    type Theme = {\n    ```", "```js\n      name: string;\n    ```", "```js\n      color: 'dark' | 'light';\n    ```", "```js\n    };\n    ```", "```js\n    type ThemeContextType = Theme & {\n    ```", "```js\n      changeTheme: (\n    ```", "```js\n        name: string,\n    ```", "```js\n        color: 'dark' | 'light'\n    ```", "```js\n      ) => void;\n    ```", "```js\n    };\n    ```", "```js\n    const ThemeContext = createContext<ThemeContextType>();\n    ```", "```js\n    <ThemeProvider>\n    ```", "```js\n      <Header />\n    ```", "```js\n      <Main />\n    ```", "```js\n    </ThemeProvider>\n    ```", "```js\n    <Footer />\n    ```", "```js\n    function handleChangeTheme({ name, color }: Theme) {\n    ```", "```js\n      useDispatch(changeThemeAction(name, color));\n    ```", "```js\n    }\n    ```", "```js\n    authorizedAction: (\n    ```", "```js\n      state,\n    ```", "```js\n      action: PayloadAction<string[]>\n    ```", "```js\n    ) => {\n    ```", "```js\n      state.permissions = action.payload;\n    ```", "```js\n      state.loading = false;\n    ```", "```js\n    }\n    ```", "```js\n    const ThemeContext = createContext<ThemeContextType>({\n    ```", "```js\n      name: 'standard',\n    ```", "```js\n      color: 'light',\n    ```", "```js\n      changeTheme: (name: string, color: 'dark' | 'light') => {},\n    ```", "```js\n    });\n    ```", "```js\n    <ThemeProvider>\n    ```", "```js\n      <Header />\n    ```", "```js\n      <Main />\n    ```", "```js\n      <Footer />\n    ```", "```js\n    </ThemeProvider>\n    ```", "```js\n    const dispatch = useDispatch();\n    ```", "```js\n    function handleChangeTheme({ name, color }: Theme) {\n    ```", "```js\n      dispatch(changeThemeAction(name, color));\n    ```", "```js\n    }\n    ```"]