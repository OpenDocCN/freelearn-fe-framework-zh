- en: Chapter 7. The Datepicker Widget
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章。日期选择器小部件
- en: The jQuery UI datepicker widget is probably the most refined and documented
    widget found in jQuery library. It has the biggest **Application programming interface**
    (**API**) and probably provides the most functionality out of all the widgets.
    It not only works completely out of the box, but is also highly configurable and
    robust.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery UI日期选择器小部件可能是jQuery库中最精细和文档化的小部件。它具有最大的**应用程序编程接口**（**API**），可能提供了所有小部件中最多的功能。它不仅可以立即使用，而且还可以高度配置和健壮。
- en: Quite simply, the datepicker widget provides an interface that allows visitors
    of your site or application to select dates. Wherever a form field is required
    that asks for a date to be entered, the datepicker widget can be added. This means
    your visitors get to use an attractive and engaging widget, and you get dates
    in the format in which you expect them.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 简单地说，日期选择器小部件提供了一个界面，让您网站或应用的访问者选择日期。无论何处需要填写日期的表单字段，都可以添加日期选择器小部件。这意味着您的访问者可以使用一个吸引人并且交互性强的小部件，而您可以得到您期望的日期格式。
- en: 'In this section, we will look at the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论以下主题：
- en: The default datepicker implementation
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认日期选择器的实现
- en: Exploring the configurable options
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索可配置选项
- en: Implementing a trigger button
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现触发按钮
- en: Configuring alternative animations
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置替代动画
- en: The `dateFormat` option
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dateFormat`选项'
- en: Easy localization
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简单的本地化
- en: Multiple month datepickers
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多月日期选择器
- en: Data-range selection
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据范围选择
- en: Datepicker widget's methods
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日期选择器小部件的方法
- en: Using AJAX with the datepicker
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用AJAX与日期选择器
- en: Additional functionality built into the datepicker includes automatic opening
    and closing animations along with the ability to navigate the interface of the
    widget using the keyboard. While holding down the *Ctrl* key (or command key on
    Mac), the arrows on the keyboard can be used to choose a new day cell, which can
    then be selected using the return key.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 内置到日期选择器中的其他功能包括自动打开和关闭动画以及使用键盘导航小部件界面的能力。在按住*Ctrl*键（或Mac上的命令键）时，键盘上的箭头可以用来选择新的日期单元格，然后可以使用返回键进行选择。
- en: 'While easy to create and configure, the datepicker is a complex widget made
    up of a wide range of underlying elements, as shown in the following figure:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管易于创建和配置，但日期选择器是一个由各种底层元素组成的复杂小部件，如下图所示：
- en: '![The Datepicker Widget](img/2209OS_07_01.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![日期选择器小部件](img/2209OS_07_01.jpg)'
- en: Note
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Despite this complexity, we can implement the default datepicker with just a
    single line of code, much like the other widgets in the library that we have covered
    so far.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管存在这种复杂性，但我们可以只用一行代码来实现默认日期选择器，就像我们迄今为止介绍的库中的其他小部件一样简单。
- en: Implementing the datepicker widget
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实现日期选择器小部件
- en: 'To create the default datepicker, add the following code to a new page in your
    text editor:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建默认日期选择器，请在文本编辑器中的新页面中添加以下代码：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Save this as `datePicker1.html` in the `jqueryui` project folder. All we have
    on the page is a `<label>` and a standard text `<input>` element. We don't need
    to specify any empty container elements for the datepicker widget to be rendered
    into, as the markup required to create the widget is automatically added by the
    library.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 将此保存为`jqueryui`项目文件夹中的`datePicker1.html`。我们页面上只有一个`<label>`和一个标准文本`<input>`元素。我们不需要为了渲染日期选择器小部件而指定任何空容器元素，因为创建小部件所需的标记会被库自动添加。
- en: Tip
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Although it might be tempting to use the HTML5 `type="date`" attribute in your
    `<input>` statements, it is not recommended—this can cause conflicts where it
    shows both jQuery UI datepickers at the same time as the native HTML5 version.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管在您的`<input>`语句中使用HTML5的`type="date"`属性可能很诱人，但不建议这样做——这可能会导致冲突，即同时显示jQuery
    UI日期选择器和本机HTML5版本。
- en: When you run the page in your browser and focus on the `<input>` element, the
    default datepicker should appear beneath the input. Along with an `<input>` element,
    the datepicker can also be attached to a `<div>` element.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 当您在浏览器中运行页面并聚焦于`<input>`元素时，默认日期选择器应该出现在输入框下方。除了一个`<input>`元素外，日期选择器也可以附加到一个`<div>`元素上。
- en: Apart from looking great, the default datepicker also comes with a lot of built-in
    functionality. When the datepicker opens, it is smoothly animated from zero to
    full size, and it will automatically be set to the present date. Selecting a date
    will automatically add the date to the `<input>` and close the calendar (again
    with a nice animation).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 除了外观漂亮之外，默认日期选择器还带有许多内置功能。当日期选择器打开时，它会平滑地从零到全尺寸进行动画，并且将自动设置为当前日期。选择日期将自动将日期添加到
    `<input>` 并关闭日历（再次使用漂亮的动画）。
- en: 'With no additional configuration and a single line of code, we now have a perfectly
    usable and attractive widget that makes date selection easy. If all you want is
    to let people pick a date, this is all that you need. The source files required
    for the default datepicker are as follows:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有额外的配置并且只有一行代码，我们现在已经拥有了一个完全可用且具有吸引力的小部件，使日期选择变得容易。如果您只想让人们选择一个日期，这就是您所需要的全部。默认日期选择器所需的源文件如下：
- en: '`jquery-2.0.3.js`'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`jquery-2.0.3.js`'
- en: '`jquery.ui.core.js`'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`jquery.ui.core.js`'
- en: '`jquery.ui.widget.js`'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`jquery.ui.widget.js`'
- en: '`jquery.ui.datepicker.js`'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`jquery.ui.datepicker.js`'
- en: Selecting dates using inline calendars
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用内联日历选择日期
- en: We've created a basic datepicker widget, which we've linked into a normal text
    `<input>` box. While this will work perfectly fine, there may be instances where
    you don't want to use a normal input box, and just need to display the calendar
    already open within your page.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建了一个基本的日期选择器小部件，将其链接到一个普通的文本 `<input>` 框中。虽然这样做完全没问题，但有时您可能不想使用普通输入框，而只需在页面中显示已打开的日历。
- en: 'Fortunately this is easy to achieve using the datepicker widget. Change the
    HTML code to use `<div>` elements as shown in the following code:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，使用日期选择器小部件很容易实现。更改 HTML 代码以使用 `<div>` 元素，如下代码所示：
- en: '[PRE1]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'If we preview the results in a browser, you will notice that the input textbox
    has disappeared, and that the calendar is already displayed in full:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在浏览器中预览结果，您会注意到输入文本框已经消失，并且日历已经完全显示出来：
- en: '![Selecting dates using inline calendars](img/2209OS_07_02.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![使用内联日历选择日期](img/2209OS_07_02.jpg)'
- en: Configurable options of the datepicker
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 日期选择器的可配置选项
- en: 'The datepicker has a large range of configurable options (currently 50 to be
    exact). The following table lists the basic options, their default values, and
    gives a brief description of their usage:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 日期选择器具有大量可配置的选项（目前确切为50个）。以下表格列出了基本选项、它们的默认值，并简要描述了它们的用法：
- en: '| Option | Default value | Usage |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| 选项 | 默认值 | 用法 |'
- en: '| --- | --- | --- |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `altField` | `""` | Specifies a CSS selector for an alternative `<input>`
    field to which the selected date is also added. |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| `altField` | `""` | 指定替代 `<input>` 字段的 CSS 选择器，其中还添加了所选日期。'
- en: '| `altFormat` | `""` | Specifies an alternative format for the date added to
    the alternative `<input>`. See the `dateFormat` option in the later section for
    clarification on the value this option takes. |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| `altFormat` | `""` | 指定要添加到替代 `<input>` 中的日期的替代格式。有关此选项接受的值的澄清，请参见后面部分中的
    `dateFormat` 选项。'
- en: '| `appendText` | `""` | Adds text after datepicker `<input>` to show the format
    of the selected date. |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| `appendText` | `""` | 在日期选择器 `<input>` 后添加文本以显示所选日期的格式。'
- en: '| `autoSize` | `false` | Automatically sets the width of the `<input>` element
    so that it can accommodate a date according to the specified `dateFormat`. |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| `autoSize` | `false` | 自动设置 `<input>` 元素的宽度，以便根据指定的 `dateFormat` 容纳日期。'
- en: '| `beforeShow` | `null` | Allows the datepicker configuration object to update
    the datepicker just before it is called. |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| `beforeShow` | `null` | 允许日期选择器配置对象在调用之前更新日期选择器。'
- en: '| `beforeShowDay` | `null` | Takes a date as a parameter, and returns values
    to indicate if the date is selectable, the class name to add to the date''s cell,
    and an (optional) pop-up tooltip for the date.The function is called for each
    day in the datepicker, before it is displayed. |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| `beforeShowDay` | `null` | 接受日期作为参数，并返回值以指示该日期是否可选择，要添加到日期单元格的类名，以及日期的（可选）弹出工具提示。该函数在日期选择器中的每一天显示之前调用。'
- en: '| `buttonImage` | `""` | Specifies a path to the image to use for the trigger
    `<button>`. |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| `buttonImage` | `""` | 指定用于触发 `<button>` 的图像的路径。'
- en: '| `buttonImageOnly` | `false` | Sets to `true` to use an image instead of a
    trigger button. |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| `buttonImageOnly` | `false` | 设置为 `true` 以使用图像而不是触发按钮。'
- en: '| `buttonText` | `"..."` | Provides text to display on a trigger `<button>`
    (if present). |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| `buttonText` | `"..."` | 提供要显示在触发 `<button>` 上的文本（如果存在）。'
- en: '| `calculateWeek` | `$.datepicker. iso8601Week` | Accepts a function, used
    to calculate the week of the year for a specified date. |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| `calculateWeek` | `$.datepicker. iso8601Week` | 接受一个函数，用于计算指定日期的一年中的周数。 |'
- en: '| `changeMonth` | `false` | Show the month change dropdown. |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| `changeMonth` | `false` | 显示月份更改下拉列表。 |'
- en: '| `changeYear` | `false` | Show the year change dropdown. |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| `changeYear` | `false` | 显示年份更改下拉列表。 |'
- en: '| `closeText` |   |  |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| `closeText` |   |  |'
- en: '| `constrainInput` | `true` | Constrains the `<input>` element to the format
    of the date, specified by the widget. |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| `constrainInput` | `true` | 将 `<input>` 元素限制为小部件指定的日期格式。 |'
- en: '| `currentText` | `"Today"` | The text to display for the current day link.
    This option must be used in conjunction with the `showButtonPanel` attribute to
    display this button. |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| `currentText` | `"今天"` | 用于当前日期链接的显示文本。必须与 `showButtonPanel` 属性一起使用才能显示此按钮。
    |'
- en: '| `dateFormat` |   | The format to use for parsed and displayed dates. A full
    list of formats is displayed in the *Changing the date format* section later in
    this chapter. |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| `dateFormat` |   | 用于解析和显示日期的格式。在本章后面的 *更改日期格式* 部分显示了完整的格式列表。 |'
- en: '| `dayNames` | `[ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday",
    "Saturday" ]` | The list of long day names to be used in conjunction with the
    `dateFormat` attribute. |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| `dayNames` | `[ "星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六" ]` | 用于与
    `dateFormat` 属性结合使用的长日期名称列表。 |'
- en: '| `dayNamesMin` | `[ "Su", "Mo", "Tu", "We", "Th", "Fr", "Sa" ]` | An array
    that contains the minimized date names that show on the column headers in the
    datepicker widget. This can be localized, as we will see later in this chapter.
    |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| `dayNamesMin` | `[ "日", "一", "二", "三", "四", "五", "六" ]` | 包含在日期选择器小部件中列标题上显示的最小化日期名称的数组。这可以是本地化的，我们将在本章后面看到。
    |'
- en: '| `dayNamesShort` | `[ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ]` |
    The list of abbreviated day names, for use with the `dateFormat` attribute of
    the widget. |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| `dayNamesShort` | `[ "周日", "周一", "周二", "周三", "周四", "周五", "周六" ]` | 用于小部件的
    `dateFormat` 属性的缩写日期名称列表。 |'
- en: '| `defaultDate` | `null` | Sets the date that will be highlighted when the
    datepicker opens and the `<input>` element is empty. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| `defaultDate` | `null` | 设置日期选择器打开时将突出显示的日期，当 `<input>` 元素为空时。 |'
- en: '| `duration` | `"normal"` | Sets the speed at which the datepicker opens. |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| `duration` | `"normal"` | 设置日期选择器打开的速度。 |'
- en: '| `firstDay` | `0` | Sets the first day of the week, beginning with `0` for
    Sunday, through to `6` for Saturday. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| `firstDay` | `0` | 设置一周的第一天，从星期日的 `0` 开始，到星期六的 `6` 结束。 |'
- en: '| `gotoCurrent` | `false` | Sets the current day link to move the datepicker
    widget to the currently selected date instead of today. |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| `gotoCurrent` | `false` | 将当前日期链接设置为将日期选择器小部件移动到当前选择的日期，而不是今天。 |'
- en: '| `hideIfNoPrevNext` | `false` | Hides the previous/next links when not needed,
    instead of disabling them. |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| `hideIfNoPrevNext` | `false` | 当不需要时隐藏上一个/下一个链接，而不是禁用它们。 |'
- en: '| `isRTL` | `false` | Controls whether the language used is drawn from right
    to left. |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| `isRTL` | `false` | 控制所使用的语言是否从右到左绘制。 |'
- en: '| `maxDate` | `null` | Sets the maximum date that can be selected. Accepts
    a date object or a relative number. For example: `+7`, or a string such as `+6m`.
    |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| `maxDate` | `null` | 设置可选择的最大日期。接受日期对象或相对数字。例如：`+7`，或 `+6m` 等字符串。 |'
- en: '| `minDate` | `null` | Sets the minimum date that can be selected. Accepts
    a number, date object, or string. |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| `minDate` | `null` | 设置可选择的最小日期。接受数字、日期对象或字符串。 |'
- en: '| `monthNames` | `Array of month names, for example [ "January", "February",
    "March"…]` | Sets the full list of month names, for use with the `dateFormat`
    attribute in the widget. |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| `monthNames` | `月份名称数组，例如 [ "一月", "二月", "三月"…]` | 设置用于小部件中 `dateFormat` 属性的完整月份名称列表。
    |'
- en: '| `monthNamesShort` | `Array of abbreviated month names, such as ["Jan", "Feb",
    "Mar"…]` | Sets the list of abbreviated month names for use in each month header
    within the datepicker widget, as specified by the `dateFormat` attribute. |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| `monthNamesShort` | `缩写月份名称数组，例如["一月", "二月", "三月"…]` | 设置日期选择器小部件中每个月头部使用的缩写月份名称列表，由
    `dateFormat` 属性指定。 |'
- en: '| `navigationAsDateFormat` | `false` | Allows us to specify month names using
    the previous, next, and current links. |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| `navigationAsDateFormat` | `false` | 允许我们使用前一个、下一个和当前链接来指定月份名称。 |'
- en: '| `nextText` | `"Next"` | Sets the text to display for the next month link.
    |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| `nextText` | `"下一个"` | 设置用于下一个月链接的显示文本。 |'
- en: '| `numberOfMonths` | `1` | Sets the number of months shown on a single datepicker
    widget. |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| `numberOfMonths` | `1` | 设置在单个日期选择器小部件上显示的月份数。 |'
- en: '| `onChangeMonthYear` | `Function` | Called when datepicker moves to a new
    month or year. |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| `onChangeMonthYear` | `Function` | 当日期选择器移到新的月份或年份时调用。'
- en: '| `onClose` | `Function` | Called when the datepicker widget is closed, irrespective
    of whether a date has been selected. |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| `onClose` | `Function` | 当日期选择器小部件关闭时调用，无论是否选择了日期。'
- en: '| `onSelect` | `Function` | Called when the datepicker widget has been selected.
    |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| `onSelect` | `Function` | 在选择日期选择器小部件后调用。'
- en: '| `prevText` | `"Prev"` | Sets the text to display for the previous month link.
    |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| `prevText` | `"Prev"` | 设置上一个月链接的显示文本。'
- en: '| `selectOtherMonths` | `false` | Allows days in previous or following months
    that are shown on the current month''s panel (see the `showOtherMonths` option)
    to be selected. |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| `selectOtherMonths` | `false` | 允许选择在当前月面板上显示的上一个月或下一个月的日期（参见`showOtherMonths`选项）。'
- en: '| `shortYearCutoff` | `"+10"` | Determines the current century while using
    the year representation; numbers less than this are deemed to be in the current
    century. |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| `shortYearCutoff` | `"+10"` | 在使用年份表示时确定当前世纪；小于此数的数字被视为当前世纪。'
- en: '| `showAnim` | `"show"` | Sets the animation used when the datepicker widget
    is displayed. |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| `showAnim` | `"show"` | 设置日期选择器小部件显示时使用的动画。'
- en: '| `showButtonPanel` | `false` | Shows a panel of buttons for the datepicker
    widget, consisting of close and current links. |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| `showButtonPanel` | `false` | 显示一个日期选择器小部件的按钮面板，包括关闭和当前链接。'
- en: '| `showCurrentAtPos` | `0` | Sets the position of the current month in multiple-month
    datepickers |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| `showCurrentAtPos` | `0` | 在多月份日期选择器中设置当前月的位置。'
- en: '| `showOn` | `"focus"` | Sets the event that triggers displaying the datepicker.
    |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| `showOn` | `"focus"` | 设置触发显示日期选择器的事件。'
- en: '| `showOptions` | `{}` | An object literal containing options to control the
    configured animation. |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| `showOptions` | `{}` | 包含控制配置动画的选项的对象文本。'
- en: '| `showOtherMonths` | `false` | Shows the last and first days of the previous
    and next months. |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| `showOtherMonths` | `false` | 显示前一个月和下一个月的最后一天和第一天。'
- en: '| `showWeek` | `false` | Displays a column showing the week of the year. The
    week is determined using the `calculateWeek` option. |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| `showWeek` | `false` | 显示一个显示年周的列。使用`calculateWeek`选项确定周。'
- en: '| `stepMonths` | `1` | Sets how many months are navigated with the previous
    and next links. |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| `stepMonths` | `1` | 使用上一个和下一个链接导航的月份数。'
- en: '| `weekHeader` | `"Wk"` | Sets the text to display for the week of the year
    column heading. |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| `weekHeader` | `"Wk"` | 设置要显示为年周列标题的文本。'
- en: '| `yearRange` | `"-10:+10"` | Specifies the range of years in the year dropdown.
    |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| `yearRange` | `"-10:+10"` | 指定年份下拉菜单中的年份范围。'
- en: We will explore some of these options in detail throughout this chapter.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本章中详细探讨其中一些选项。
- en: Using the basic options
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用基本选项
- en: 'Change the final `<script>` element in `datepicker1.html` to the following:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 将`datepicker1.html`中的最终`<script>`元素更改为以下内容：
- en: '[PRE2]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Save this as `datePicker2.html`. The following screenshot shows how the widget
    will look after configuring these options:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 将此保存为`datePicker2.html`。下面的屏幕截图显示了在配置了这些选项之后小部件的外观：
- en: '![Using the basic options](img/2209OS_07_03.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![使用基本选项](img/2209OS_07_03.jpg)'
- en: We've used a number of options in this example simply because there are so many
    options available. The appearance of the initial page, before the datepicker is
    even shown, can be changed using the `appendText` option. This adds the specified
    text string using a `<span>` element directly after the `<input>` field, which
    is associated with the picker. This helps visitors to clarify the format that
    will be used for the date.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这个示例中使用了许多选项，只因为有这么多的选项可供选择。在日期选择器甚至显示之前的初始页面的外观可以使用`appendText`选项进行更改。这将使用`<span>`元素直接在`<input>`字段后面添加指定的文本字符串，与选择器关联。这有助于访问者澄清将用于日期的格式。
- en: For styling purposes, we can target the new `<span>` element using the `.ui-datepicker-append`
    class name.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 为了样式的目的，我们可以使用`.ui-datepicker-append`类名来定位新的`<span>`元素。
- en: The `defaultDate` option sets which date is highlighted in the datepicker when
    it opens initially and the `<input>` element is empty. We've used the relative
    `+5` string in this example, so that when the datepicker widget opens initially,
    the date five days from the current date is selected. Pressing the *Enter* key
    on the keyboard will select the highlighted date.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '`defaultDate`选项设置了在日期选择器初始打开时突出显示的日期，而`<input>`元素为空。在这个示例中，我们使用了相对的`+5`字符串，因此当日期选择器小部件初始打开时，选择了距当前日期五天的日期。按下键盘上的*Enter*键将选择突出显示的日期。'
- en: Along with a relative string, we can also supply `null` as the value of `defaultDate`
    to set it to the current date (today subjectively), or a standard JavaScript date
    object.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 除了相对字符串，我们还可以将 `null` 作为 `defaultDate` 的值来供应，将其设置为当前日期（主观上的今天），或者使用标准的 JavaScript
    日期对象。
- en: As we can see in the previous screenshot, the styling of the datepicker widget
    date for the current date is different from the styling used to show the default
    date. This will vary between themes, but for reference, the current date is shown
    in bold against a light shade (orange), while the selected date has a darker border
    than normal dates with the default theme.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在上一个截图中所看到的那样，日期选择器小部件中当前日期的样式与显示默认日期的样式不同。这将因主题而异，但供参考的是，当前日期以粗体显示，并用浅色（橙色）显示，而所选日期具有比正常日期更深的边框与默认主题。
- en: Once a date has been selected, subsequent openings of the datepicker widget
    will show the selected date as the default date, which again has different styling
    (a preselected date with the redmond theme will be light blue).
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦选择了日期，随后再次打开日期选择器小部件时，将显示所选日期作为默认日期，这再次具有不同的样式（在 redmond 主题下，预选日期将为浅蓝色）。
- en: By setting the `showOtherMonths` option to `true`, we've added grayed-out (nonselectable)
    dates from the previous and next months to the empty squares that sit at the beginning
    and end of the date grid, before and after the current month. These are visible
    in the previous screenshot and are rendered in a much lighter color than the selectable
    dates.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将 `showOtherMonths` 选项设置为 `true`，我们已经向日期表格的开始和结束的空方块中添加了来自上个月和下个月的灰色（不可选择）日期。这些在上一个截图中可见，并且呈现为比可选择日期要浅得多的颜色。
- en: Minimum and maximum dates
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最小和最大日期
- en: 'By default, the datepicker will go forward or backward infinitely, there are
    no upper or lower boundaries. If we want to restrict the selectable dates to a
    particular range, we can do it easily using the `minDate` and `maxDate` options.
    Change the configuration object in `datePicker2.html` to the following:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，日期选择器将无限制地向前或向后，没有上限或下限。如果我们想要将可选择的日期限制在特定范围内，我们可以轻松地使用 `minDate` 和 `maxDate`
    选项来实现。将 `datePicker2.html` 中的配置对象更改为以下内容：
- en: '[PRE3]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Save this as `datePicker3.html`. In this example, we supply a standard, unmodified
    JavaScript date object to the `minDate` option, which will set the minimum date
    to the current date. This will make any dates in the past unselectable.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 将此保存为 `datePicker3.html`。在本例中，我们向 `minDate` 选项提供了一个标准的未修改的 JavaScript 日期对象，这将使过去的任何日期都无法选择。
- en: 'For the `maxDate` option, we use a relative text string of `+10`, which will
    make only the current date and the next 10 dates selectable. You can see how these
    options affect the appearance of the widget in the following screenshot:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 `maxDate` 选项，我们使用相对文本字符串 `+10`，这将使只有当前日期和接下来的 10 个日期可选择。您可以看到这些选项如何影响小部件的外观在以下截图中：
- en: '![Minimum and maximum dates](img/2209OS_07_04.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![最小和最大日期](img/2209OS_07_04.jpg)'
- en: Note
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The `minDate` and `maxDate` options can also take strings such as `+6w`, `-10m`,
    or `1y`, which represent weeks, months, and years respectively. You can find more
    details on how to set these options at [http://api.jqueryui.com/datepicker/#option-minDate](http://api.jqueryui.com/datepicker/#option-minDate)
    and [http://api.jqueryui.com/datepicker/#option-maxDate](http://api.jqueryui.com/datepicker/#option-maxDate).
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '`minDate` 和 `maxDate` 选项也可以采用诸如 `+6w`，`-10m` 或 `1y` 的字符串，分别代表周、月和年。您可以在 [http://api.jqueryui.com/datepicker/#option-minDate](http://api.jqueryui.com/datepicker/#option-minDate)
    和 [http://api.jqueryui.com/datepicker/#option-maxDate](http://api.jqueryui.com/datepicker/#option-maxDate)
    上找到有关如何设置这些选项的更多详细信息。'
- en: Changing the elements in the datepicker UI
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改日期选择器界面中的元素
- en: 'The datepicker API exposes a number of options directly related to adding or
    removing additional UI elements within the datepicker. To show `<select>` elements
    that allow the visitor to choose the month and year, we can use the `changeMonth`
    and `changeYear` configuration options:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 日期选择器 API 公开了许多与在日期选择器中添加或删除额外 UI 元素直接相关的选项。要显示 `<select>` 元素，让访客选择月份和年份，我们可以使用
    `changeMonth` 和 `changeYear` 配置选项：
- en: '[PRE4]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Save this as `datePicker4.html`. Using the month and year `<select>` elements,
    gives the user a much quicker way to navigate to dates that may be far in the
    past or future. The following screenshot shows how the widget will appear with
    these two options enabled:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 将此保存为 `datePicker4.html`。使用月份和年份的 `<select>` 元素，为用户提供了一个更快的方式来导航到可能遥远的日期。以下截图显示了启用这两个选项后小部件的外观：
- en: '![Changing the elements in the datepicker UI](img/2209OS_07_05.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![更改日期选择器UI中的元素](img/2209OS_07_05.jpg)'
- en: 'By default, the year select box will include the previous and next 10 years,
    covering a total range of 20 years. We can navigate further than this using the
    previous/next arrow links, but if we know beforehand that visitors may be choosing
    dates very far in the past or future, we can change the range of years using the
    `yearRange` option:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，年份选择框将包括上一个和下一个10年，总共涵盖20年的范围。我们可以使用前/后箭头链接进一步导航，但如果我们事先知道访问者可能会选择非常久远或未来的日期，我们可以使用`yearRange`选项更改年份范围：
- en: '[PRE5]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Save this as `datePicker5.html`. This time when we run the page, we should find
    that the year range now covers 50 years in total.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 将其保存为`datePicker5.html`。这次运行页面时，我们应该发现年份范围现在总共覆盖了50年。
- en: Another change we can make to the UI of the datepicker is to enable the button
    panel, which adds two buttons to the footer of the widget. Let's see it in action.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以对日期选择器的UI进行另一个更改，以启用按钮面板，这将在小部件底部添加两个按钮。让我们看看它实际操作时的效果。
- en: 'Change the configuration object in `datepicker5.html`, so that it appears as
    follows:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 更改`datepicker5.html`中的配置对象，使其如下所示：
- en: '[PRE6]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Save this as `datePicker6.html`. The buttons added to the foot of the widget
    appear exactly as the buttons in a dialog widget, as you can see in the following
    screenshot:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 将其保存为`datePicker6.html`。添加到小部件底部的按钮与对话框小部件中的按钮完全相同，您可以在下图中看到：
- en: '![Changing the elements in the datepicker UI](img/2209OS_07_06.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![更改日期选择器UI中的元素](img/2209OS_07_06.jpg)'
- en: The **Today** button will instantly navigate the datepicker back to the month
    showing the current date, while the **Done** button will close the widget without
    selecting a date.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '**今天**按钮将立即将日期选择器导航回显示当前日期的月份，而**完成**按钮将在不选择日期的情况下关闭小部件。'
- en: 'We could also change the **Today** button so that it goes to the selected date
    instead of the current date using the `gotoCurrent` option; we can achieve this
    by adding it into the configuration object for the widget, as follows:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以更改**今天**按钮，使其转到所选日期而不是当前日期，方法是将其添加到小部件的配置对象中，如下所示：
- en: '[PRE7]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: If you select a date, then scroll through a number of months, you can then return
    to the selected date by clicking on the **Today** button.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您选择一个日期，然后滚动几个月，您可以通过点击**今天**按钮返回到所选日期。
- en: Adding a trigger button
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加一个触发按钮
- en: 'By default, the datepicker is opened when the `<input>` element that it is
    associated with receives focus. However, we can change this very easily, so that
    the datepicker opens when a button is clicked instead. The most basic type of
    `<button>` can be enabled with just the `showOn` option. Change the configuration
    object in `datePicker6.html`, so that it is as follows:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，当与其关联的`<input>`元素接收焦点时，日期选择器会打开。然而，我们可以非常轻松地更改这一点，使得日期选择器在按钮被点击时打开。最基本类型的`<button>`可以通过`showOn`选项仅启用。将`datePicker6.html`中的配置对象更改为以下内容：
- en: '[PRE8]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Save this as `datePicker7.html`. Setting the `showOn` option to `true` in our
    configuration object will automatically add a simple `<button>` element directly
    after the associated `<input>` element. We can also set this option to both, so
    that it opens when the `<input>` is focused as well as when the `<button>` is
    clicked.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 将其保存为`datePicker7.html`。在我们的配置对象中将`showOn`选项设置为`true`将会在关联的`<input>`元素后自动添加一个简单的`<button>`元素。我们还可以将此选项设置为`both`，这样当`<input>`聚焦时以及当`<button>`被点击时都会打开。
- en: 'The datepicker will now open only when the `<button>` is clicked, rather than
    when the `<input>` is focused. This option also accepts the string value "both",
    which opens the widget when the `<input>` is focused and when the `<button>` is
    clicked. The new `<button>` is shown in the following screenshot:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，日期选择器仅在点击`<button>`时打开，而不是在`<input>`聚焦时。此选项还接受字符串值"both"，当`<input>`聚焦时和当`<button>`被点击时打开小部件。新的`<button>`如下图所示：
- en: '![Adding a trigger button](img/2209OS_07_07.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![添加一个触发按钮](img/2209OS_07_07.jpg)'
- en: 'The default text shown on the `<button>` (an ellipsis) can easily be changed
    by providing a new string as the value of the `buttonText` option; change the
    previous configuration object to this:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过将新字符串提供为`buttonText`选项的值来轻松更改`<button>`上显示的默认文本（一个省略号）；将之前的配置对象更改为以下内容：
- en: '[PRE9]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Save this as `datePicker8.html`. Now, the text on the `<button>` should match
    the value that we set as the `buttonText` option:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 将其保存为`datePicker8.html`。现在，`<button>`上的文本应该与我们设置的`buttonText`选项的值匹配：
- en: '![Adding a trigger button](img/2209OS_07_08.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![添加触发按钮](img/2209OS_07_08.jpg)'
- en: 'Instead of using text as the label of the `<button>` element, we can use an
    image. This is configured using the `buttonImage` option:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用图像而不是文本作为`<button>`元素的标签。这是使用`buttonImage`选项配置的：
- en: '[PRE10]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Save this as `datePicker9.html`. The value of the `buttonImage` option is a
    string, consisting of the path to the image that we'd like to use on the button.
    Notice that we also set the `buttonText` option in this example too. The reason
    for this is that the value of the `buttonText` option is automatically used as
    the `title` and `alt` attributes of the `<img>` element, that is, added to the
    `<button>`.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 将此保存为`datePicker9.html`。`buttonImage`选项的值是一个字符串，由我们想要在按钮上使用的图像的路径组成。请注意，在此示例中，我们还设置了`buttonText`选项。之所以这样做的原因是，`buttonText`选项的值会自动用作`<img>`元素的`title`和`alt`属性，也就是添加到`<button>`中。
- en: 'Our trigger button should now look as shown in the following screenshot:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的触发按钮现在应该如下截图所示：
- en: '![Adding a trigger button](img/2209OS_07_09.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![添加触发按钮](img/2209OS_07_09.jpg)'
- en: Tip
  id: totrans-143
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: In this example, we've deliberately not styled the button at this point, and
    concentrated on just adding a logo. You could however style it using jQuery UI,
    as we will see in [Chapter 8](ch08.html "Chapter 8. The Button and Autocomplete
    Widgets"), *The Button and Autocomplete Widgets*.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们故意没有在这一点上为按钮设置样式，而是专注于添加一个标志。但是，您可以使用jQuery UI对其进行样式设置，正如我们将在[第8章](ch08.html
    "第8章。按钮和自动完成小部件")中看到的*按钮和自动完成小部件*。
- en: 'We don''t need to use a button at all if we don''t want to; we can replace
    the `<button>` element with an `<img>` element instead. Change the configuration
    object in `datePicker9.html`, so that it appears as follows:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们不想使用按钮，我们根本不需要使用按钮；我们可以将`<button>`元素替换为`<img>`元素。因此，将`datePicker9.html`中的配置对象更改为以下内容：
- en: '[PRE11]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Save this as `datePicker10.html`. This should give you a nice image-only button,
    as illustrated in the following screenshot:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 将此保存为`datePicker10.html`。这应该为您提供一个漂亮的仅图片按钮，如下截图所示：
- en: '![Adding a trigger button](img/2209OS_07_10.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![添加触发按钮](img/2209OS_07_10.jpg)'
- en: Configuring alternative animations
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置替代动画
- en: The datepicker widget comes with an attractive built-in opening animation that
    makes the widget appear to grow from nothing to full size. Its flexible API also
    exposes several options related to animations. These are the `duration`, `showAnim`,
    and `showOptions` configuration options.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 日期选择器小部件带有一个吸引人的内置打开动画，使小部件看起来从无到完整大小。其灵活的API还公开了几个与动画相关的选项。这些是`duration`、`showAnim`和`showOptions`配置选项。
- en: The simplest animation configuration that we can set is the speed at which the
    widget opens and closes. To do this, all we have to do is change the value of
    the `duration` option. This option requires a simple string that can take a string
    value of either `slow`, `normal` (the default), or `fast`, or a number representing
    a duration in milliseconds.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以设置的最简单的动画配置是小部件打开和关闭的速度。要做到这一点，我们所要做的就是更改`duration`选项的值。此选项需要一个简单的字符串，可以采用字符串值`slow`、`normal`（默认值）或`fast`，或者表示以毫秒为单位的持续时间的数字。
- en: 'Change the configuration object in `datePicker10.html` to the following:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 将`datePicker10.html`中的配置对象更改为以下内容：
- en: '[PRE12]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Save this variation as `datePicker11.html`. When we run this page in a browser,
    we should find that the opening animation is visibly faster.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 将此变体保存为`datePicker11.html`。当我们在浏览器中运行此页面时，应该会发现打开动画明显更快。
- en: 'Along with changing the speed of the animation, we can also change the animation
    itself using the `showAnim` option. The default animation used is a simple show
    animation, but we can change this so that it uses any of the other show/hide effects
    included with the library (refer to [Chapter 14](ch14.html "Chapter 14. UI Effects"),
    *UI Effects*). Change the configuration object from the previous example to the
    following:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 除了更改动画的速度之外，我们还可以使用`showAnim`选项更改动画本身。默认使用的动画是简单的显示动画，但我们可以更改为使用库中包含的任何其他显示/隐藏效果之一（请参阅[第14章](ch14.html
    "第14章。UI效果")，*UI效果*）。将前一个示例中的配置对象更改为以下内容：
- en: '[PRE13]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Save this as `datePicker12.html`. We also need to use two new `<script>` resources
    to use alternative effects. These are the `jquery.ui.effect.js` and the source
    file of the effect we wish to use, in this example, `jquery.ui.effect-drop.js`.
    We''ll look at both of these effects in more detail in [Chapter 14](ch14.html
    "Chapter 14. UI Effects"), *UI Effects*, but they are essential for this example
    to work. Make sure you add these to the file, directly after the source file for
    the datepicker:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 将其保存为`datePicker12.html`。我们还需要使用两个新的`<script>`资源来使用替代效果。 这些是`jquery.ui.effect.js`和我们希望使用的效果源文件，在本例中为`jquery.ui.effect-drop.js`。
    我们将在[第14章](ch14.html "第14章. UI效果")中更详细地讨论这两种效果，但它们对于此示例的工作至关重要。 确保将它们添加到文件中，在日期选择器的源文件之后：
- en: '[PRE14]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Our simple configuration object configures the animation to drop using the `showAnim`
    option, and sets the `direction` option of the effect using `showOptions`, which
    is required due to the datepicker's absolute positioning. When you now run this
    example, the datepicker should drop down into position instead of opening. Other
    effects can be implemented in the same way.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 我们简单的配置对象通过`showAnim`选项配置了下落动画，并使用`showOptions`设置了效果的`direction`选项，由于日期选择器的绝对定位，这是必需的。
    当您运行此示例时，日期选择器应该会下降到位，而不是打开。 其他效果可以以相同的方式实现。
- en: Displaying multiple months
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 显示多个月
- en: 'So far, all of our examples have looked at single-month datepickers, where
    only one month was shown at a time. However, we can easily adjust this to show
    a different number of months, if we wish using a couple of configuration options.
    Remove the effect source files before the configuration object in `datePicker12.html`,
    and change the configuration object so that it appears as follows:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们所有的示例都只涵盖了单月日期选择器，一次只显示一个月。 但是，如果我们希望，我们可以很容易地通过一些配置选项来调整显示不同数量的月份。
    在`datePicker12.html`中在配置对象之前删除效果源文件，并更改配置对象，以使其如下所示：
- en: '[PRE15]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Save this as `datePicker13.html`. The `numberOfMonths` option takes an integer
    representing the number of months that we would like to be displayed in the widget
    at any point. Our datepicker should now appear like this:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 将其保存为`datePicker13.html`。 `numberOfMonths`选项接受一个整数，表示我们希望在任何时候在部件中显示的月份数。 我们的日期选择器现在应该看起来像这样：
- en: '![Displaying multiple months](img/2209OS_07_11.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![显示多个月](img/2209OS_07_11.jpg)'
- en: Note
  id: totrans-165
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注
- en: There is no upper limit to the number of months that will be displayed; however,
    the performance of the widget decreases with each additional month shown. There
    is also a noticeable lag between focusing the `<input>` and the widget being displayed.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 可显示的月份数量没有上限；然而，随着每个额外月份的显示，部件的性能会降低。 在将焦点放在`<input>`上并显示部件之间还有明显的延迟。
- en: Also, the individual month panels are floated side-by-side, and due to their
    size, they will soon overflow the viewport causing a horizontal scroll bar to
    appear. However, as soon as the scroll bar is used, the datepicker will close,
    making any months that go beyond the boundary of the screen unusable. For these
    reasons, it's best to keep the number of months displayed to a minimum.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，各个月份面板是并排的，由于它们的大小，很快将超出视口，导致出现水平滚动条。 但是，一旦使用滚动条，日期选择器将关闭，使得超出屏幕边界的月份无法使用。
    出于这些原因，最好将显示的月份数量保持在最低限度。
- en: There are several other configuration options related to multiple-month datepickers.
    The `stepMonths` option controls how many months are changed when the previous
    or next links are used.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 还有几个与多月份日期选择器相关的配置选项。 `stepMonths`选项控制在使用上一个或下一个链接时更改多少个月份。
- en: The default value of `stepMonths` is `1`, so in our previous example, the widget
    starts with the current month displayed first and the next two months after it.
    Each time the **Previous** or **Next** icons are clicked; the panels move one
    space left or right.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '`stepMonths`的默认值为`1`，因此在我们先前的示例中，部件以当前月份显示为开始，接着显示接下来的两个月份。 每次单击**上一个**或**下一个**图标时，面板向左或向右移动一个空间。'
- en: If we set `stepMonths` to `3`, the same as the number of months shown, each
    month will move three spaces left or right when the previous or next links are
    clicked, so entirely new panels are shown on each click.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将`stepMonths`设置为`3`，与显示的月份数相同，每次单击上一个或下一个链接时，每个月将向左或向右移动三个空间，因此每次单击时都会显示全新的面板。
- en: The `showCurrentAtPos` option specifies where the current month is shown when
    the datepicker is displayed. In our previous example, the current month is shown
    as the first month panel. Each month panel has a zero-based index number, so if
    we want the current month to be in the middle of the widget, we would set this
    option to `1` instead.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '`showCurrentAtPos` 选项指定了在显示日期选择器时当前月份显示的位置。在我们之前的例子中，当前月份显示为第一个月面板。每个月面板都有一个从零开始的索引号，所以如果我们希望当前月份显示在小部件的中间，我们会将此选项设置为
    `1`。'
- en: Displaying the datepicker vertically
  id: totrans-172
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 以垂直方式显示日期选择器
- en: In the previous example, it was noted that the use of multiple months should
    be kept to a minimum, as we cannot change the styling used for the width, if the
    calendar goes too far to the right.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，注意到应将使用多个月份的情况保持在最低限度，因为如果日历向右滚动太远，我们无法更改用于宽度的样式。
- en: 'We can mitigate this to an extent, by adapting the `numberofMonths` option.
    It takes two attributes: the first is to control the number of months we display,
    and the second is for the number of columns that should be used. If we set the
    example from `datepicker13.html` accordingly, this is how it could look when set
    to show two months in a single column:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过调整 `numberofMonths` 选项来在一定程度上缓解这个问题。它接受两个属性：第一个是控制我们显示的月份数量，第二个是要使用的列数。如果我们根据
    `datepicker13.html` 中的示例设置，将其设置为在单列中显示两个月，它可能如下所示：
- en: '![Displaying the datepicker vertically](img/2209OS_07_12.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![以垂直方式显示日期选择器](img/2209OS_07_12.jpg)'
- en: 'To achieve this effect, all we need to do is to change the configuration object
    in `datepicker13.html` as follows:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现此效果，我们只需更改 `datepicker13.html` 中的配置对象如下所示：
- en: '[PRE16]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'You will see that the datepicker now only displays two calendar months, and
    that these are now in a vertical format. We could then use a little jQuery to
    get the size of the window, and set the `numberOfMonths` attribute depending on
    the size returned:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 您会发现日期选择器现在仅显示两个日历月份，并且现在以垂直格式显示。然后，我们可以使用一点 jQuery 来获取窗口的大小，并根据返回的大小设置 `numberOfMonths`
    属性：
- en: '[PRE17]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Note
  id: totrans-180
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: It isn't possible to achieve the same effect manually using CSS; while most
    styles can be altered, the container width is hardcoded into the library and cannot
    be altered.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 无法手动使用 CSS 实现相同的效果；虽然大多数样式可以更改，但容器宽度是硬编码到库中的，无法更改。
- en: Changing the date format
  id: totrans-182
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更改日期格式
- en: 'The `dateFormat` option is one of the localization options at our disposal
    for advanced datepicker locale configuration. Setting up this option allows you
    to quickly and easily set the format of selected dates (as displayed in the `<input>`)
    using a variety of short-hand references. The format of dates can be a combination
    of any of the following characters (they are case sensitive):'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '`dateFormat` 选项是我们可以使用的高级日期选择器区域设置之一。设置此选项可以让您快速轻松地设置选定日期的格式（显示在 `<input>`
    中）使用各种简写引用。日期格式可以是以下任何字符的组合（它们区分大小写）：'
- en: '**d**: This is the day of month (single digit where applicable)'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**d**: 这是月份中的日期（适用时为单个数字）'
- en: '**dd**: This is the day of month (two digits)'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**dd**: 这是月份中的日期（两位数字）'
- en: '**m**: This is the month of year (single digit where applicable)'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**m**: 这是年份中的月份（适用时为单个数字）'
- en: '**mm**: This is the month of year (two digits)'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**mm**: 这是年份中的月份（两位数字）'
- en: '**y**: This is the year (two digits)'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**y**: 这是年份（两位数字）'
- en: '**yy**: This is the year (four digits)'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**yy**: 这是年份（四位数字）'
- en: '**D**: This is the short day name'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**D**: 这是缩写的星期几名称'
- en: '**DD**: This is the full day name'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DD**: 这是完整的星期几名称'
- en: '**M**: This is the short month name'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**M**: 这是缩写的月份名称'
- en: '**MM**: This is the long month name'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MM**: 这是完整的月份名称'
- en: '**''...''**: This is any literal text string'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**''...''**: 这是任何文本字符串'
- en: '**@**: This is the UNIX timestamp (milliseconds since January 1, 1970)'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**@**: 这是 UNIX 时间戳（自1970年1月1日起的毫秒数）'
- en: 'We can use these shorthand codes to quickly configure our preferred date format,
    as in the following example. Change the configuration object in `datePicker13.html`
    to the following:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用这些简写代码快速配置我们喜欢的日期格式，如以下示例所示。将 `datePicker13.html` 中的配置对象更改为以下内容：
- en: '[PRE18]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Save the new file as `datePicker14.html`. We use the `dateFormat` option to
    specify a string containing the shorthand date code for our preferred date format.
    The format we set is the day of the month (using a single digit if possible) with
    `d`, the full name of the month with `MM`, and the full four-digit year with `yy`.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 将新文件保存为 `datePicker14.html`。我们使用 `dateFormat` 选项来指定一个包含我们首选日期格式的字符串。我们设置的格式是日期的月份（尽可能使用单个数字）为
    `d`，月份的全名为 `MM`，四位数的年份为 `yy`。
- en: 'When dates are selected and added to the associated `<input>`, they will be
    in the format specified in the configuration object, as shown in the following
    screenshot:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 当选择日期并将其添加到相关的 `<input>` 中时，它们将按照配置对象中指定的格式，如下面的屏幕截图所示：
- en: '![Changing the date format](img/2209OS_07_13.jpg)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
  zh: '![更改日期格式](img/2209OS_07_13.jpg)'
- en: While using a string as the value of this option to configure dates, we can
    also specify whole strings of text. However, if we do and any letters in the string
    are those used as shorthand, they will need to be escaped using single quotes.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在将字符串用作配置日期的选项值时，我们还可以指定整个文本字符串。但是，如果我们这样做，而字符串中的任何字母都是用作简写的字母，则需要使用单引号对其进行转义。
- en: 'For example, to add the string `Selected:` to the start of the date, we would
    need to use the string `Selecte''d'':` to avoid having the lowercase `d` picked
    up as the short day of month format:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要将字符串 `Selected:` 添加到日期的开头，我们需要使用字符串 `Selecte'd':`，以避免将小写 `d` 作为月份格式的简写格式：
- en: '[PRE19]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Save this change as `datePicker15.html`. Notice how we escape the lowercase
    `d` in the string `Selected` by wrapping it in single quotes. Now when a date
    is selected, our text string is prefixed to the formatted date:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 将此更改保存为 `datePicker15.html`。请注意，我们如何使用单引号将字符串 `Selected` 中的小写 `d` 转义起来。现在，当选择日期时，我们的文本字符串将被添加到格式化日期的前缀：
- en: '![Changing the date format](img/2209OS_07_14.jpg)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![更改日期格式](img/2209OS_07_14.jpg)'
- en: Tip
  id: totrans-206
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Styling the <input> tag**'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '**为 <input> 标签添加样式**'
- en: 'You may want to add `width: 15em` as a style for the input box, so you can
    see the whole text clearly. I''ve added this into the code file available in the
    download that accompanies this book.'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '您可能希望将 `width: 15em` 添加为输入框的样式，以便您可以清楚地看到整个文本。我已经将这个添加到了附带本书的下载文件中。'
- en: 'There are also a number of built-in preconfigured date formats that correspond
    to common standards or RFC notes. These formats are added to the components as
    constants and can be accessed via the `$.datepicker` object. As an example, let''s
    format the date according to the ATOM standard:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些内置的预配置日期格式，对应于常见的标准或 RFC 注释。这些格式作为常量添加到组件中，并可以通过 `$.datepicker` 对象访问。例如，让我们根据
    ATOM 标准格式化日期：
- en: '[PRE20]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Save this as `datePicker16.html`. When a date is selected in this example,
    the value entered into the `<input>` should be in the format as shown in the following
    screenshot:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 将此保存为 `datePicker16.html`。在此示例中选择日期时，输入到 `<input>` 中的值应该是如下屏幕截图所示的格式：
- en: '![Changing the date format](img/2209OS_07_15.jpg)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![更改日期格式](img/2209OS_07_15.jpg)'
- en: Note
  id: totrans-213
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The ATOM format or RFC 3339/ISO 8601 as it is technically known, is an international
    standard designed to provide a clear format for dates and times to avoid misinterpretation,
    especially when data is transferred between countries that use different date
    formats.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: ATOM 格式或技术上称为 RFC 3339/ISO 8601，是一个国际标准，旨在为日期和时间提供清晰的格式，以避免误解，特别是在数据在使用不同日期格式的国家之间传输时。
- en: 'The complete set of predefined date formats is listed in the following table:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 预定义日期格式的完整集合列在以下表中：
- en: '| Option value | Shorthand | Formatted as… |'
  id: totrans-216
  prefs: []
  type: TYPE_TB
  zh: '| 选项值 | 简写 | 格式为… |'
- en: '| --- | --- | --- |'
  id: totrans-217
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `$.datepicker.ATOM` | `"yy-mm-dd"` | **2013-07-25** |'
  id: totrans-218
  prefs: []
  type: TYPE_TB
  zh: '| `$.datepicker.ATOM` | `"yy-mm-dd"` | **2013-07-25** |'
- en: '| `$.datepicker.COOKIE` | `"D, dd M y"` | **Wed, 25 Jul 2013** |'
  id: totrans-219
  prefs: []
  type: TYPE_TB
  zh: '| `$.datepicker.COOKIE` | `"D, dd M y"` | **星期三, 25 七月 2013** |'
- en: '| `$.datepicker.ISO_8601` | `"yy-mm-dd"` | **2013-07-25** |'
  id: totrans-220
  prefs: []
  type: TYPE_TB
  zh: '| `$.datepicker.ISO_8601` | `"yy-mm-dd"` | **2013-07-25** |'
- en: '| `$.datepicker.RFC_822` | `"D, d M y"` | **Wed, 25 Jul 11** |'
  id: totrans-221
  prefs: []
  type: TYPE_TB
  zh: '| `$.datepicker.RFC_822` | `"D, d M y"` | **星期三, 25 七月 11** |'
- en: '| `$.datepicker.RFC_850` | `"DD, dd-M-y"` | **Wednesday, 25-Jul-11** |'
  id: totrans-222
  prefs: []
  type: TYPE_TB
  zh: '| `$.datepicker.RFC_850` | `"DD, dd-M-y"` | **星期三, 25-七月-11** |'
- en: '| `$.datepicker.RFC_1036` | `"D, d M y"` | **Wed, 25 Jul 11** |'
  id: totrans-223
  prefs: []
  type: TYPE_TB
  zh: '| `$.datepicker.RFC_1036` | `"D, d M y"` | **星期三, 25 七月 11** |'
- en: '| `$.datepicker.RFC_1123` | `"D, d M yy"` | **Wed, 25 Jul 2013** |'
  id: totrans-224
  prefs: []
  type: TYPE_TB
  zh: '| `$.datepicker.RFC_1123` | `"D, d M yy"` | **星期三, 25 七月 2013** |'
- en: '| `$.datepicker.RFC_2822` | `"D, d M yy"` | **Wed, 25 Jul 2013** |'
  id: totrans-225
  prefs: []
  type: TYPE_TB
  zh: '| `$.datepicker.RFC_2822` | `"D, d M yy"` | **星期三, 25 七月 2013** |'
- en: '| `$.datepicker.RSS` | `"D, d M y"` | **Wed, 25 Jul 13** |'
  id: totrans-226
  prefs: []
  type: TYPE_TB
  zh: '| `$.datepicker.RSS` | `"D, d M y"` | **星期三, 25 七月 13** |'
- en: '| `$.datepicker.TIMESTAMP` | `@ (UNIX timestamp)` | **1302649200000** |'
  id: totrans-227
  prefs: []
  type: TYPE_TB
  zh: '| `$.datepicker.TIMESTAMP` | `@ (UNIX 时间戳)` | **1302649200000** |'
- en: '| `$.datepicker.W3C` | `"yy-mm-dd"` | **2013-07-25** |'
  id: totrans-228
  prefs: []
  type: TYPE_TB
  zh: '| `$.datepicker.W3C` | `"yy-mm-dd"` | **2013-07-25** |'
- en: Updating an additional input element
  id: totrans-229
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新额外的输入元素
- en: 'There may be times when we want to update two `<input>` elements with the selected
    date, perhaps to show a different date format. The `altField` and `altFormat`
    options can be used to cater to this requirement. Add a second `<input>` element
    to the page in `datepicker16.html` with an `id` attribute of `dateAltDisplay`,
    and then change the configuration object to the following:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 有时我们可能想要使用所选日期更新两个 `<input>` 元素，也许以显示不同的日期格式。`altField` 和 `altFormat` 选项可用于满足此要求。在
    `datepicker16.html` 页面中添加第二个 `<input>` 元素，其 `id` 属性为 `dateAltDisplay`，然后将配置对象更改为以下内容：
- en: '[PRE21]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Save this as `datePicker17.html`. The `altField` option accepts a standard
    jQuery selector as its value, and allows us to select the additional `<input>`
    element that is updated when the main `<input>` is updated. The `altFormat` option
    can accept the same formats as the `dateFormat` option. The following screenshot
    shows how the page should appear, once a date has been selected using the datepicker:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 将此保存为 `datePicker17.html`。`altField` 选项接受标准的 jQuery 选择器作为其值，并允许我们选择在主 `<input>`
    更新时更新的额外 `<input>` 元素。`altFormat` 选项可以接受与 `dateFormat` 选项相同的格式。下面的截图显示了使用日期选择器选择日期后页面应该显示的方式：
- en: '![Updating an additional input element](img/2209OS_07_16.jpg)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: '![更新额外的输入元素](img/2209OS_07_16.jpg)'
- en: Changing the date format
  id: totrans-234
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改日期格式
- en: While using the datepicker widget, you may have noticed that dates returned
    programmatically through the `getDate` method (see the *Datepicking methods* section)
    are in the default GMT date and time standard. In order to change the format of
    the date returned by the API, the `$.datepicker.formatDate()` utility method should
    be used. Let's take a look at how we can use this function.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用日期选择器部件时，您可能已经注意到通过 `getDate` 方法（请参阅 *日期选择方法* 部分）以编程方式返回的日期遵循默认的 GMT 日期和时间标准。为了更改
    API 返回的日期格式，应使用 `$.datepicker.formatDate()` 实用程序方法。让我们看看如何使用此功能。
- en: 'In `datePicker17.html`, alter the date configuration object as follows:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `datePicker17.html` 中，将日期配置对象更改如下：
- en: '[PRE22]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Save this as `datePicker18.html`. We need to add an additional CSS style rule,
    so that we can see the results of selecting a date within the widget. Add the
    following to the `<head>` of our file:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 将此保存为 `datePicker18.html`。我们需要添加一个额外的 CSS 样式规则，以便我们可以看到在部件中选择日期的结果。将以下内容添加到我们文件的
    `<head>` 中：
- en: '[PRE23]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'If we preview the results in a browser, you will see that the date format used
    in the initial `<input>` field is set using the `dateFormat` attribute in the
    configuration object; this was set to `dd-mm-yy`. In the `onSelect` event handler,
    we use `$.datepicker.formatDate` to change the selected date to that shown in
    the following screenshot:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们在浏览器中预览结果，您会发现在配置对象中使用 `dateFormat` 属性设置初始 `<input>` 字段中使用的日期格式；这被设置为 `dd-mm-yy`。在
    `onSelect` 事件处理程序中，我们使用 `$.datepicker.formatDate` 将所选日期更改为以下截图中显示的日期：
- en: '![Changing the date format](img/2209OS_07_17.jpg)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
  zh: '![更改日期格式](img/2209OS_07_17.jpg)'
- en: Localizing the datepicker widget
  id: totrans-242
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本地化日期选择器部件
- en: In addition to the options already listed, there are also a range of localization
    options. They can be used to provide custom locale support in order to display
    a datepicker with all the text shown in an alternative language, or to change
    the default values of words in English.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 除了已列出的选项外，还有一系列本地化选项。它们可用于提供自定义区域设置支持，以便以替代语言显示日期选择器，或更改英语单词的默认值。
- en: 'Those options that are used specifically for localization are listed in the
    following table:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 针对特定本地化使用的选项列在下表中：
- en: '| Option | Default | Usage |'
  id: totrans-245
  prefs: []
  type: TYPE_TB
  zh: '| 选项 | 默认值 | 用途 |'
- en: '| --- | --- | --- |'
  id: totrans-246
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `closeText` | `"Close"` | Text to display on the close button. |'
  id: totrans-247
  prefs: []
  type: TYPE_TB
  zh: '| `closeText` | `"关闭"` | 关闭按钮上显示的文本。 |'
- en: '| `currentText` | `"Today"` | The text to display for the current day link.
    |'
  id: totrans-248
  prefs: []
  type: TYPE_TB
  zh: '| `currentText` | `"今天"` | 当天链接显示的文本。 |'
- en: '| `dateFormat` | `"mm/dd/yy"` | The format selected dates should take when
    added to the `<input>`. |'
  id: totrans-249
  prefs: []
  type: TYPE_TB
  zh: '| `dateFormat` | `"mm/dd/yy"` | 当添加到 `<input>` 中时所选日期应采用的格式。 |'
- en: '| `dayNames` | `["Sunday", "Monday","Tuesday",``"Wednesday", "Thursday", "Friday","Saturday"]`
    | An array of names of days in a week. |'
  id: totrans-250
  prefs: []
  type: TYPE_TB
  zh: '| `dayNames` | `["星期日", "星期一","星期二",``"星期三", "星期四", "星期五","星期六"]` | 一周中每天的名称数组。
    |'
- en: '| `dayNamesMin` | `["Su", "Mo", "Tu","We", "Th", "Fr", "Sa"]` | An array of
    two-letter names of days in a week. |'
  id: totrans-251
  prefs: []
  type: TYPE_TB
  zh: '| `dayNamesMin` | `["Su", "Mo", "Tu","We", "Th", "Fr", "Sa"]` | 一周内两个字母的日名称数组。
    |'
- en: '| `dayNamesShort` | `["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]` | An
    array of abbreviated names of days in a week. |'
  id: totrans-252
  prefs: []
  type: TYPE_TB
  zh: '| `dayNamesShort` | `["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]` | 一周内缩写的星期几名称数组。
    |'
- en: '| `firstDay` | `0` | Specify the first column of days in the datepicker. |'
  id: totrans-253
  prefs: []
  type: TYPE_TB
  zh: '| `firstDay` | `0` | 指定日期选择器中的第一列天。 |'
- en: '| `isRTL` | `false` | Set the calendar to right-to-left format. |'
  id: totrans-254
  prefs: []
  type: TYPE_TB
  zh: '| `isRTL` | `false` | 将日历格式设置为从右到左。 |'
- en: '| `monthNames` | `["January", "February",``"March", "April",``"May", "June",
    "July,``"August", "September",``"October", "November",``"December"]` | An array
    of month names. |'
  id: totrans-255
  prefs: []
  type: TYPE_TB
  zh: '| `monthNames` | `["January", "February",``"March", "April",``"May", "June",
    "July,``"August", "September",``"October", "November",``"December"]` | 月份名称数组。
    |'
- en: '| `monthNamesShort` | `["Jan", "Feb", "Mar",``"Apr", "May", "Jun",``"Jul",
    "Aug", "Sep",``"Oct", "Nov", "Dec"]` | An array of abbreviated month names. |'
  id: totrans-256
  prefs: []
  type: TYPE_TB
  zh: '| `monthNamesShort` | `["Jan", "Feb", "Mar",``"Apr", "May", "Jun",``"Jul",
    "Aug", "Sep",``"Oct", "Nov", "Dec"]` | 月份缩写名称数组。 |'
- en: '| `nextText` | `"Next"` | Text to display on the next link. |'
  id: totrans-257
  prefs: []
  type: TYPE_TB
  zh: '| `nextText` | `"Next"` | 在下一个链接上显示的文本。 |'
- en: '| `prevText` | `"Prev"` | Text to display on the previous link. |'
  id: totrans-258
  prefs: []
  type: TYPE_TB
  zh: '| `prevText` | `"Prev"` | 显示在上一个链接上的文本。 |'
- en: '| `showMonthAfterYear` | `false` | Shows the month after the year in the header
    of the widget. |'
  id: totrans-259
  prefs: []
  type: TYPE_TB
  zh: '| `showMonthAfterYear` | `false` | 在小部件标题中将月份显示在年份后面。 |'
- en: '| `yearSuffix` | `""` | An additional text string to display after the year
    in the month header. |'
  id: totrans-260
  prefs: []
  type: TYPE_TB
  zh: '| `yearSuffix` | `""` | 显示在月份标题中年份后面的附加文本字符串。 |'
- en: A wide range of different translations have already been provided and reside
    within the `i18n` folder in the `development-bundle/ui` directory. Each language
    translation has its own source file and to change the default language, all we
    have to do is include the source file of the alternative language.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 已经提供了大量不同的翻译，并存储在`development-bundle/ui`目录中的`i18n`文件夹中。每种语言翻译都有自己的源文件，要更改默认语言，我们只需包含替代语言的源文件即可。
- en: 'In `datePicker17.html`, add the following new `<script>` element directly after
    the link to `jquery.ui.datepicker.js`:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 在`datePicker17.html`中，在链接到`jquery.ui.datepicker.js`之后直接添加以下新的`<script>`元素：
- en: '[PRE24]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Remove the `altField` and `altFormat` attributes of the configuration object:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 移除配置对象的`altField`和`altFormat`属性：
- en: '[PRE25]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Save this as `datePicker19.html` and view the results in a browser:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 将此保存为`datePicker19.html`，并在浏览器中查看结果：
- en: '![Localizing the datepicker widget](img/2209OS_07_18.jpg)'
  id: totrans-267
  prefs: []
  type: TYPE_IMG
  zh: '![本地化日期选择器小部件](img/2209OS_07_18.jpg)'
- en: With just a single link to one new resource, we've changed all of the visible
    text in the datepicker to an alternative language, and we don't even need to set
    any configuration options. If we wanted to truly internationalize the datepicker,
    there is even a roll-up file containing all of the alternative languages that
    we can use, and which avoids the need to include multiple language files.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 通过一个新资源的单个链接，我们已经将日期选择器中的所有可见文本更改为另一种语言，而且我们甚至不需要设置任何配置选项。如果我们想要真正国际化日期选择器，甚至有一个包含所有替代语言的汇总文件，我们可以使用它，而不需要包含多个语言文件。
- en: 'In `datepicker19.html`, alter the link for `jquery.ui.datepicker-fr.js` in
    the `<head>` to the following code:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 在`datepicker19.html`中，将`<head>`中的`jquery.ui.datepicker-fr.js`的链接更改为以下代码：
- en: '[PRE26]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Next, change the configuration object for datepicker as follows:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，将datepicker的配置对象更改为以下内容：
- en: '[PRE27]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Save the file as `datepicker20.html`. If we preview the results in our browser,
    you will see that it displays the widget in Arabic. We''ve used datepicker''s
    option attribute to set `$.datepicker.regional` to `ar`, which is jQuery UI''s
    code for the Arabic language:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 将文件保存为`datepicker20.html`。如果我们在浏览器中预览结果，您将看到它以阿拉伯语显示小部件。我们使用了日期选择器的选项属性将`$.datepicker.regional`设置为`ar`，这是jQuery
    UI对阿拉伯语的代码：
- en: '![Localizing the datepicker widget](img/2209OS_07_19.jpg)'
  id: totrans-274
  prefs: []
  type: TYPE_IMG
  zh: '![本地化日期选择器小部件](img/2209OS_07_19.jpg)'
- en: We will revisit the localization roll-up file later in this chapter, in the
    *Localizing a datepicker dynamically* example.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本章后面的*动态本地化日期选择器*示例中重新讨论本地化汇总文件。
- en: Implementing custom localization
  id: totrans-276
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实施自定义本地化
- en: Custom localization is also very easy to implement. This can be done using a
    standard configuration object containing the configured values for the options
    from the previous table. In this way, any alternative language not included in
    the roll-up file can be implemented.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义本地化也非常容易实现。这可以使用包含配置的标准配置对象来完成，这些配置是上表选项的配置值。通过这种方式，可以实现未包含在汇总文件中的任何替代语言。
- en: 'For example, to implement a `Lolcat` datepicker, remove the existing configuration
    object of `datePicker20.html`, and add the following code:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要实现一个`Lolcat`日期选择器，删除`datePicker20.html`的现有配置对象，并添加以下代码：
- en: '[PRE28]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Save this change as `datePicker21.html`. Most of the options are used to provide
    simple string substitutions. However, the `monthNames`, `monthNamesShort`, `dayNames`,
    `dayNamesShort`, and `dayNamesMin` options require arrays.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 将此更改保存为`datePicker21.html`。大多数选项用于提供简单的字符串替换。但是，`monthNames`、`monthNamesShort`、`dayNames`、`dayNamesShort`和`dayNamesMin`选项需要数组。
- en: 'Notice that the `dayNamesMin` option and other day-related arrays should begin
    with `Sunday` (or the localized equivalent); here, we''ve set `Monday` to appear
    first in this example using the `firstDay` option. Our datepicker should now appear
    like this:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`dayNamesMin`选项和其他与日期相关的数组应从`星期日`（或相应的本地化）开始；在这里，我们使用`firstDay`选项将`星期一`设置为首先出现的选项。我们的日期选择器现在应该看起来像这样：
- en: '![Implementing custom localization](img/2209OS_07_20.jpg)'
  id: totrans-282
  prefs: []
  type: TYPE_IMG
  zh: '![实现自定义本地化](img/2209OS_07_20.jpg)'
- en: Note
  id: totrans-283
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For those of you curious about the term Lolcat, it is a term dating from 2006,
    but based on a series of images created in the early twentieth century. It is
    used to signify a series of cat images that had (albeit grammatically incorrect
    or idiosyncratic) phrases, intended to create humor. You can learn more about
    this unique form of humor at [http://en.wikipedia.org/wiki/Lolcat](http://en.wikipedia.org/wiki/Lolcat).
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些好奇“Lolcat”一词的人，它是一个始于2006年的术语，但基于20世纪初创作的一系列图像。它用于表示一系列具有（尽管语法不正确或独特）短语的猫图片，旨在制造幽默。您可以在[http://en.wikipedia.org/wiki/Lolcat](http://en.wikipedia.org/wiki/Lolcat)了解更多关于这种独特幽默形式的信息。
- en: Implementing callbacks
  id: totrans-285
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实现回调
- en: The final set of configuration options is related to the event model exposed
    by the widget. It consists of a series of callback functions that we can use to
    specify the code to be executed at different points during an interaction with
    the datepicker.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 最终的配置选项集与小部件公开的事件模型相关。它由一系列回调函数组成，我们可以使用这些函数在与日期选择器的交互期间的不同时间点指定要执行的代码。
- en: 'These are listed in the following table:'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 这些列在以下表格中列出：
- en: '| Event | Fired when… |'
  id: totrans-288
  prefs: []
  type: TYPE_TB
  zh: '| 事件 | 当...时触发 |'
- en: '| --- | --- |'
  id: totrans-289
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `beforeShow` | The datepicker is about to open. |'
  id: totrans-290
  prefs: []
  type: TYPE_TB
  zh: '| `beforeShow` | 日期选择器即将打开。 |'
- en: '| `beforeShowDay` | Each individual date is rendered in the datepicker. Can
    be used to determine whether the date should be selectable or not. |'
  id: totrans-291
  prefs: []
  type: TYPE_TB
  zh: '| `beforeShowDay` | 在日期选择器中呈现每个单独的日期。可用于确定日期是否可选择。 |'
- en: '| `onChangeMonthYear` | The current month or year changes. |'
  id: totrans-292
  prefs: []
  type: TYPE_TB
  zh: '| `onChangeMonthYear` | 当前月份或年份发生变化。 |'
- en: '| `onClose` | The datepicker is closed. |'
  id: totrans-293
  prefs: []
  type: TYPE_TB
  zh: '| `onClose` | 日期选择器已关闭。 |'
- en: '| `onSelect` | A date is selected. |'
  id: totrans-294
  prefs: []
  type: TYPE_TB
  zh: '| `onSelect` | 选择了一个日期。 |'
- en: To highlight how useful these callback properties are, we can extend the previous
    internationalization example to create a page that allows visitors to choose any
    available language found in the `i18n` roll-up file.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 为了突出这些回调属性有多有用，我们可以将前一个国际化示例扩展为创建一个页面，让访问者可以选择`i18n`捆绑文件中找到的任何可用语言。
- en: Localizing a datepicker dynamically via rollup
  id: totrans-296
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过捆绑动态本地化日期选择器
- en: Earlier in the book, we took a brief look at how you can use the roll-up file
    to change the language displayed by the datepicker. This avoids the need to reference
    multiple language files, which helps reduce HTTP requests to the server; the downside
    though is that the datepicker widget will always be displayed in the language
    that has been hardcoded into the widget's attributes.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 本书早期，我们简要介绍了如何使用捆绑文件更改日期选择器显示的语言。这样可以避免引用多个语言文件，从而有助于减少对服务器的HTTP请求；不过，缺点是日期选择器小部件将始终以硬编码到小部件属性中的语言显示。
- en: We can change that though. Let's take a look at how you can use the `beforeShow`
    callback by adding a language selection dropdown that displays the datepicker
    in whichever language is selected.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 不过我们可以改变这一点。让我们看看如何通过添加语言选择下拉菜单来使用`beforeShow`回调，以显示选择的语言中的日期选择器。
- en: 'In `datePicker21.html`, add the following new `<select>` box to the page with
    the following `<option>` elements. For reasons of brevity, I''ve only included
    a few here; you can see the full list in the code download that accompanies this
    book:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 在`datePicker21.html`中，向页面添加以下新的`<select>`框，并使用以下`<option>`元素。出于简洁起见，我仅在此处包含了一部分；您可以在本书附带的代码下载中看到完整的列表：
- en: '[PRE29]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Next, link to the `i18n.js` roll-up file as follows:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，如下链接到`i18n.js`捆绑文件：
- en: '[PRE30]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Now change the final `<script>` element so that it appears as follows:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 现在更改最后一个`<script>`元素，使其如下所示：
- en: '[PRE31]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Save this file as `datePicker22.html`. We use the `beforeShow` callback to specify
    a function that is executed each time the datepicker is displayed on the screen.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 将此文件保存为`datePicker22.html`。我们使用`beforeShow`回调来指定每次日期选择器显示在屏幕上时执行的函数。
- en: Within this function, we obtain the `id` attribute of the selected `<option>`
    element, and then pass this to the `$.datepicker.regional` option. This option
    is set using the `$.datepicker.setDefaults()` utility method.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 在该函数内部，我们获取选定的`<option>`元素的`id`属性，然后将其传递给`$.datepicker.regional`选项。使用`$.datepicker.setDefaults()`实用方法来设置此选项。
- en: When the page first loads, the `<select>` element won't have a selected `<option>`
    child, and because of the order of the `i18n` roll-up file, the datepicker will
    be set to Taiwanese. In order to set it to default English, we can set the regional
    utility to an empty string after the datepicker has been initialized.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 当页面首次加载时，`<select>`元素不会有选定的`<option>`子元素，由于`i18n` roll-up文件的顺序，日期选择器将设置为台湾语。为了将其设置为默认的英语，我们可以在日期选择器初始化后将`regional`实用程序设置为空字符串。
- en: 'The following screenshot shows the datepicker after an alternative language
    has been selected in the `<select>` element:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了在`<select>`元素中选择另一种语言之后的日期选择器：
- en: '![Localizing a datepicker dynamically via rollup](img/2209OS_07_21.jpg)'
  id: totrans-309
  prefs: []
  type: TYPE_IMG
  zh: '![通过rollup动态本地化日期选择器](img/2209OS_07_21.jpg)'
- en: We can take this a step further; you may have noticed that the language doesn't
    change until you click inside the `<input>` field to display the widget.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以进一步发展这一点；您可能已经注意到，语言直到点击`<input>`字段内部显示小部件之前都不会改变。
- en: The code works, but feels a little clunky; instead, if we make a change to how
    we display the widget, we can remove the need to click inside the `<input>` field.
    I've included an example of how to do this in the code download, as `datepickerXX.html`.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 代码可以运行，但感觉有点笨拙；相反，如果我们改变如何显示小部件，我们就可以消除需要点击`<input>`字段内部的必要性。我已经在代码下载中包含了如何做到这一点的示例，命名为`datepickerXX.html`。
- en: Introducing the utility methods
  id: totrans-312
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引入实用方法
- en: 'We used one of the utility methods available in a datepicker in the previous
    example, `setDefaults` is used to set configuration options on all datepicker
    instances. In addition to this, there are several other utility methods that we
    can use; these are shown in the following table:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面例子中，我们使用了日期选择器中可用的实用方法之一，`setDefaults`用于在所有日期选择器实例上设置配置选项。除此之外，还有几种其他实用方法可供我们使用；这些显示在下表中：
- en: '| Utility | Used to… |'
  id: totrans-314
  prefs: []
  type: TYPE_TB
  zh: '| 实用 | 用于... |'
- en: '| --- | --- |'
  id: totrans-315
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `formatDate` | Transform a `date` object into a string in a specified format.While
    using the `dateFormat` option, dates are returned in this specified format using
    the `formatDate` method. This method accepts three arguments—the format to convert
    the date to (see `dateFormat` in configurable options of the picker), the `date`
    object to convert, and an optional configuration object containing additional
    settings. The following options can be provided: `dayNamesShort`, `dayNames`,
    `monthNamesShort`, and `monthNames`. |'
  id: totrans-316
  prefs: []
  type: TYPE_TB
  zh: '| `formatDate` | 将`date`对象转换为指定格式的字符串。使用`dateFormat`选项时，使用`formatDate`方法以指定格式返回日期。此方法接受三个参数—转换日期的格式（见选择器的可配置选项中的`dateFormat`），要转换的`date`对象以及包含附加设置的可选配置对象。可以提供以下选项：`dayNamesShort`、`dayNames`、`monthNamesShort`和`monthNames`。'
- en: '| `iso8601Week` | Return the week number that a specified date falls on according
    to the ISO 8601 date and time standard. This method accepts a single argument—the
    date to show the week number. |'
  id: totrans-317
  prefs: []
  type: TYPE_TB
  zh: '| `iso8601Week` | 根据ISO 8601日期和时间标准返回指定日期所在的周数。该方法接受一个参数—要显示周数的日期。 |'
- en: '| `noWeekends` | Make weekend dates unselectable. It can be passed to the `beforeShowDay`
    event. |'
  id: totrans-318
  prefs: []
  type: TYPE_TB
  zh: '| `noWeekends` | 使周末日期不可选择。可以传递给`beforeShowDay`事件。'
- en: '| `parseDate` | Do the opposite of `formatDate`, converting a formatted date
    string into a date object. It also accepts three arguments—the expected format
    of the date to parse, the date string to parse, and an optional setting object
    containing the following options: `shortYearCutoff`, `dayNamesShort`, `dayNames`,
    `monthNamesShort`, and `monthNames`. |'
  id: totrans-319
  prefs: []
  type: TYPE_TB
  zh: '| `parseDate` | 对`formatDate`的反操作，将格式化的日期字符串转换为日期对象。它还接受三个参数—要解析的日期的预期格式，要解析的日期字符串以及包含以下选项的可选设置对象：`shortYearCutoff`、`dayNamesShort`、`dayNames`、`monthNamesShort`和`monthNames`。
    |'
- en: '| `regional` | Set the language of the datepicker. |'
  id: totrans-320
  prefs: []
  type: TYPE_TB
  zh: '| `regional` | 设置日期选择器的语言。 |'
- en: '| `setDefaults` | Set configuration options on all datepickers. This method
    accepts an object literal containing the new configuration options. |'
  id: totrans-321
  prefs: []
  type: TYPE_TB
  zh: '| `setDefaults` | 在所有日期选择器上设置配置选项。此方法接受包含新配置选项的对象文字。 |'
- en: All of these methods are called on the singleton instance of the `$.datepicker`
    manager object, which is created automatically by the widget on initialization
    and used to interact with instances of the datepicker. Irrespective of the number
    of datepickers that have been created on the page as jQuery objects, they will
    always reference the properties and methods of the first instance of the datepicker
    widget created on that page.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些方法都是在`$.datepicker`管理器对象的单例实例上调用的，该对象在初始化时自动创建并用于与日期选择器的实例进行交互。无论在页面上创建了多少个日期选择器作为jQuery对象，它们始终会引用在该页面上创建的日期选择器小部件的第一个实例的属性和方法。
- en: Listing the datepicker methods
  id: totrans-323
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 列出日期选择器方法
- en: Along with the wide range of configuration options at our disposal, there are
    also a number of useful methods defined that make working with the datepicker
    a breeze.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 除了我们可以使用的广泛的配置选项之外，还定义了许多有用的方法，使得与日期选择器一起工作变得轻松自如。
- en: 'In addition to the shared API methods discussed in [Chapter 1](ch01.html "Chapter 1. Introducing
    jQuery UI"), *Introducing jQuery UI*, such as `destroy`, `disable`, `enable`,
    `option`, and `widget`. The datepicker API also exposes the following unique methods:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 除了在[第1章](ch01.html "第1章。介绍jQuery UI")中讨论的共享API方法 *Introducing jQuery UI*，如`destroy`、`disable`、`enable`、`option`和`widget`之外。日期选择器API还公开了以下独特的方法：
- en: '| Method | Used to… |'
  id: totrans-326
  prefs: []
  type: TYPE_TB
  zh: '| 方法 | 用于… |'
- en: '| --- | --- |'
  id: totrans-327
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `dialog` | Open the datepicker in a dialog widget. |'
  id: totrans-328
  prefs: []
  type: TYPE_TB
  zh: '| `dialog` | 在对话框小部件中打开日期选择器。 |'
- en: '| `getDate` | Get the currently selected date. |'
  id: totrans-329
  prefs: []
  type: TYPE_TB
  zh: '| `getDate` | 获取当前选择的日期。 |'
- en: '| `hide` | Programmatically close a datepicker. |'
  id: totrans-330
  prefs: []
  type: TYPE_TB
  zh: '| `hide` | 以编程方式关闭日期选择器。 |'
- en: '| `isDisabled` | Determine whether a datepicker is disabled. |'
  id: totrans-331
  prefs: []
  type: TYPE_TB
  zh: '| `isDisabled` | 确定日期选择器是否已禁用。 |'
- en: '| `refresh` | Redraw the datepicker. |'
  id: totrans-332
  prefs: []
  type: TYPE_TB
  zh: '| `refresh` | 重绘日期选择器。 |'
- en: '| `setDate` | Programmatically select a date. |'
  id: totrans-333
  prefs: []
  type: TYPE_TB
  zh: '| `setDate` | 以编程方式选择日期。 |'
- en: '| `show` | Programmatically show a datepicker. |'
  id: totrans-334
  prefs: []
  type: TYPE_TB
  zh: '| `show` | 以编程方式显示日期选择器。 |'
- en: Let's take a look at some of these methods in more detail, beginning with selecting
    dates programmatically.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地了解一些这些方法，首先是以编程方式选择日期。
- en: Selecting a date programmatically
  id: totrans-336
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 以编程方式选择日期
- en: There may be times (such as on dynamic, client-server sites), when we want to
    be able to set a particular date from within our program logic, without the visitor
    using the datepicker widget in the usual way. Let's look at a basic example.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 有时（例如在动态、客户端 - 服务器网站上），我们希望能够在程序逻辑中设置特定日期，而无需访问者以通常的方式使用日期选择器小部件。让我们看一个基本示例。
- en: 'Remove the `<select>` element in `datePicker22.html` and directly after the
    `<input>` element add the following `<button>`:'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 在`datePicker22.html`中删除`<select>`元素，并直接在`<input>`元素之后添加以下`<button>`：
- en: '[PRE32]'
  id: totrans-339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Now change the final `<script>` element so that it appears like this:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 现在将最后一个`<script>`元素更改为如下所示：
- en: '[PRE33]'
  id: totrans-341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Save this as `datePicker23.html`. The `setDate` function accepts a single argument,
    which is the date to set. As with the `defaultDate` configuration option, we can
    supply a relative string (as we do in this example) or a date object.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 将其保存为`datePicker23.html`。`setDate`函数接受一个参数，即要设置的日期。与`defaultDate`配置选项一样，我们可以提供一个相对字符串（就像在此示例中所做的那样）或一个日期对象。
- en: Tip
  id: totrans-343
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: You can see some of the options available to set the date object at [http://api.jqueryui.com/datepicker/#utility-formatDate](http://api.jqueryui.com/datepicker/#utility-formatDate).
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[http://api.jqueryui.com/datepicker/#utility-formatDate](http://api.jqueryui.com/datepicker/#utility-formatDate)中查看设置日期对象的一些选项。
- en: If we're forced to work with strings as the source for our datepicker, we can
    easily convert them to a date object; to achieve this, we can use one of the many
    date JavaScript libraries available such as `Moment.js`. I've included a simple
    example of how to use this library to generate our date object in the code download
    that accompanies this book.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们被迫使用字符串作为我们日期选择器的源，我们可以轻松将它们转换为日期对象；为了实现这一点，我们可以使用众多的日期JavaScript库，如`Moment.js`。我在本书的附带代码下载中包含了如何使用此库生成我们的日期对象的简单示例。
- en: Showing the datepicker in a dialog box
  id: totrans-346
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在对话框中显示日期选择器
- en: The `dialog` method produces the same highly usable and effective datepicker
    widget, but it displays it in a floating dialog box. The method is easy to use,
    although it affects the placement of the datepicker dialog; the dialog will appear
    disconnected from the date input field, as we shall see.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: '`dialog`方法产生相同易于使用且有效的日期选择器窗口部件，但它将其显示在一个浮动的对话框中。该方法易于使用，尽管它影响日期选择器对话框的放置；对话框将显示为与日期输入字段分离，我们将会看到。'
- en: 'Remove the `<button>` from the page and change the final `<script>` element
    in `datePicker23.html` to the following code:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 从页面中删除`<button>`并将`datepicker23.html`中的最终`<script>`元素更改为以下代码：
- en: '[PRE34]'
  id: totrans-349
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Save this as `datePicker24.html`. First we define a function called `updateDate`.
    This function will be called whenever a date is selected in the datepicker. All
    we do within this function is to assign the date that is selected, which will
    be passed to the function automatically to our `<input>` element on the page.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 将此保存为`datePicker24.html`。首先我们定义一个名为`updateDate`的函数。当在日期选择器中选择日期时，将自动将所选日期传递给我们页面上的`<input>`元素。
- en: We use the `focus` event to call the `dialog` method, which takes two arguments.
    In this example, we've supplied `null` as the first argument, so the datepicker
    defaults to the current date.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用`focus`事件调用`dialog`方法，该方法接受两个参数。在本例中，我们将第一个参数设为`null`，因此日期选择器默认为当前日期。
- en: The second argument is a callback function to execute when a date is selected,
    which is mapped to our `updateDate` function.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个参数是一个在选择日期时执行的回调函数，它映射到我们的`updateDate`函数。
- en: We can also supply additional third and fourth arguments; the third is the configuration
    object for the datepicker, and the fourth is used to control the position of the
    dialog containing the datepicker. By default, it will render the dialog in the
    center of the screen.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以提供额外的第三和第四个参数；第三个是日期选择器的配置对象，第四个用于控制包含日期选择器的对话框的位置。默认情况下，它将在屏幕中央渲染对话框。
- en: Tip
  id: totrans-354
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: You can learn more about how to configure these options at [http://api.jqueryui.com/datepicker/#method-dialog](http://api.jqueryui.com/datepicker/#method-dialog).
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[http://api.jqueryui.com/datepicker/#method-dialog](http://api.jqueryui.com/datepicker/#method-dialog)了解更多关于如何配置这些选项的信息。
- en: Implementing an AJAX-enabled datepicker
  id: totrans-356
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实现启用AJAX的日期选择器
- en: For our final datepicker example, we'll work a little magic into the mix and
    create a datepicker, which will communicate with a remote server to see if there
    are any dates that cannot be selected. These dates will then be styled as such
    within the datepicker widget.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们最终的日期选择器示例，我们将在其中加入一些魔法，并创建一个与远程服务器通信的日期选择器，以查看是否有任何不能选择的日期。然后，这些日期将在日期选择器窗口部件中被标记为不可选择的日期。
- en: 'Change the `<body>` of `datepicker24.html`, so that it contains the following
    markup:'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 更改`datepicker24.html`的`<body>`，使其包含以下标记：
- en: '[PRE35]'
  id: totrans-359
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: The first part of our script initially declares two empty arrays, and then performs
    a request to obtain the JSON object from a PHP file. The JSON object contains
    a single option called dates. The value of this option is an array, where each
    item is also an object.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 我们脚本的第一部分最初声明了两个空数组，然后执行一个请求，从一个PHP文件获取JSON对象。JSON对象包含一个名为dates的选项。该选项的值是一个数组，其中每个项也是一个对象。
- en: Each of these subobjects contain month and day properties, representing one
    date that should be made unselectable. The months or days array are populated
    with the values from the JSON object for later use in the script.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 每个子对象都包含月份和日期属性，表示应该使其不可选择的一个日期。月份或日期数组由JSON对象中的值填充，以供脚本稍后使用。
- en: Next, we define the `noWeekendsOrDates` callback function that is invoked on
    the `beforeShowDay` event. This event occurs once for each of the 35 individual
    day squares in the datepicker. Even the empty squares are included!
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们定义了在`beforeShowDay`事件上调用的`noWeekendsOrDates`回调函数。该事件对日期选择器中的35个单独日期方块中的每一个都会触发一次。甚至空白的方块也包括在内！
- en: The date of each day square is passed to this function, which must determine
    first if the selected date is not a weekend using jQuery UI's `$.datepicker.noWeekends()`
    function. If yes, it is automatically passed to the `disableDates` function, otherwise
    it is marked as being disabled.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 每个日期方块的日期都传递给此函数，该函数必须首先确定所选日期是否不是周末，使用jQuery UI的`$.datepicker.noWeekends()`函数。如果是，则它会自动传递给`disableDates`函数，否则将被标记为被禁用的。
- en: If the value is passed to the `disableDates` function, it is passed the date
    of each square sent to it from the `noWeekendsOrDates` function, and must return
    an array containing up to two items.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 如果将值传递给`disableDates`函数，则会将从`noWeekendsOrDates`函数发送到它的每个方块的日期传递给它，并且必须返回一个包含最多两个项的数组。
- en: The first is a Boolean indicating whether the day is selectable, and the second
    is optionally a class name to give the date. Our function loops through each item
    in our months and days arrays to see if any of the dates passed to the callback
    function match the items in the arrays. If both the month and day items match
    a date, the array returns with `false` and a custom class name as its items. If
    the date does not match, we return an array containing `true` to indicate that
    the day is selectable. This allows us to specify any number of dates that cannot
    be selected in the datepicker.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个是一个布尔值，指示该日期是否可选择，第二个是可选的日期给出的类名。我们的函数循环遍历我们的月份和日期数组中的每个项目，以查看传递给回调函数的任何日期是否与数组中的项目匹配。如果月份和日期项目都与日期匹配，数组将以`false`和自定义类名作为其项目返回。如果日期不匹配，则返回包含`true`以指示日期可选择的数组。这使我们能够指定日期选择器中无法选择的任意数量的日期。
- en: Finally we define a configuration object for the datepicker. The properties
    of the object are simply the callback function to make the dates specified in
    the JSON object unselectable, and the `minDate` option, which will be set to the
    relative value `+1`, as we don't want people to select dates in the past, or the
    current day.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们为日期选择器定义一个配置对象。对象的属性只是用于使JSON对象中指定的日期不可选择的回调函数，以及将设置为相对值`+1`的`minDate`选项，因为我们不希望人们选择过去的日期或当前日期。
- en: 'In addition to the HTML page, we''ll also need a little custom styling. In
    a new page in your editor, create the following stylesheet:'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 除了HTML页面之外，我们还需要一些自定义样式。在您的编辑器中的一个新页面中，创建以下样式表：
- en: '[PRE36]'
  id: totrans-368
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Save this as `datepickerTheme.css` in the `css` folder. We use PHP to provide
    the JSON object in response to the request made by our page. If you don''t want
    to install and configure PHP on your web server, you can use the file that I have
    placed at the URL specified in the example. For anyone that is interested, the
    PHP used is as follows:'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 将其保存为`datepickerTheme.css`在`css`文件夹中。我们使用PHP来响应页面发出的请求并提供JSON对象。如果您不想在您的Web服务器上安装和配置PHP，您可以使用我在示例中指定的URL放置的文件。对于任何有兴趣的人，使用的PHP如下所示：
- en: '[PRE37]'
  id: totrans-370
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: This can be saved as `bookedDates.php` in the main `jqueryui` project folder.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以保存为主`jqueryui`项目文件夹中的`bookedDates.php`。
- en: The pre-booked dates are just hardcoded into the PHP file. Again, in a proper
    implementation, you'd probably need a more robust way of storing these dates,
    such as in a database.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 预订日期只是硬编码到PHP文件中。同样，在一个适当的实现中，您可能需要一种更健壮的方式来存储这些日期，比如在数据库中。
- en: 'When we run the page in a browser and open the datepicker, the dates specified
    by the PHP file should be styled according to our `preBooked` class, and should
    also be completely nonresponsive, as shown in the following screenshot:'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在浏览器中运行页面并打开日期选择器时，PHP文件指定的日期应该根据我们的`preBooked`类进行样式设置，并且还应完全不响应，如下面的截图所示：
- en: '![Implementing an AJAX-enabled datepicker](img/2209OS_07_22.jpg)'
  id: totrans-374
  prefs: []
  type: TYPE_IMG
  zh: '![实现 AJAX 启用的日期选择器](img/2209OS_07_22.jpg)'
- en: Summary
  id: totrans-375
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we looked at the datepicker widget that is supported by one
    of the biggest APIs in the jQuery UI library. This gives us a huge number of options
    to work with and methods to receive data from. We first looked at the default
    implementation and how much behavior is added to the widget automatically.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看了一下由jQuery UI库中最大的API之一支持的日期选择器小部件。这为我们提供了大量可供使用的选项和从中接收数据的方法。我们首先看了默认实现以及小部件自动添加了多少行为。
- en: We looked at the rich API exposed by the datepicker, which includes more configurable
    options than any other component. We also saw how we can use the utility functions
    that are unique to the datepicker manager object.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看了日期选择器暴露的丰富API，其中包括比任何其他组件更多的可配置选项。我们还看到了如何使用日期选择器管理器对象特有的实用函数。
- en: We saw how easy the widget makes implementing internationalization. We also
    saw that there are 34 additional languages the widget has been translated into.
    Each of these is packed into a module that is easy to use in conjunction with
    the datepicker for adding support for alternative languages. We also saw how we
    create our own custom language configuration.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到了小部件是如何轻松实现国际化的。我们还看到，小部件已经被翻译成了其他**34种语言**。每种语言都被打包成一个模块，可以与日期选择器轻松配合使用，以添加对其他语言的支持。我们还看到了如何创建自定义的语言配置。
- en: We covered some of the events that are fired during a datepicker interaction,
    and looked at the range of methods available for working with and controlling
    the datepicker from our code.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 我们介绍了在日期选择器交互过程中触发的一些事件，并查看了在代码中可用于处理和控制日期选择器的一系列方法。
- en: In the next chapter, we'll look at two of the more recent additions to the library,
    the button widget and the autocomplete widget.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看到该库中两个较新的添加，即按钮小部件和自动完成小部件。
