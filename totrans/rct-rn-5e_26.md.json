["```js\nimport React from \"react\";\nimport { View, ActivityIndicator } from \"react-native\";\nimport styles from \"./styles\";\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <ActivityIndicator size=\"large\" />\n    </View>\n  );\n} \n```", "```js\nexport function LoadingWrapper({ children }: Props) {\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []);\n  if (loading) {\n    return (\n      <View style={styles.container}>\n        <ActivityIndicator size=\"large\" />\n      </View>\n    );\n  } else {\n    return children;\n  }\n} \n```", "```js\nconst First = ({ navigation }: Props) => (\n  <LoadingWrapper>\n    <View style={styles.container}>\n      <Button title=\"Second\" onPress={() => navigation.navigate(\"Second\")} />\n      <Button title=\"Third\" onPress={() => navigation.navigate(\"Third\")} />\n    </View>\n  </LoadingWrapper>\n); \n```", "```js\nimport * as Progress from \"react-native-progress\";\ntype ProgressBarProps = {\n  progress: number;\n};\nexport default function ProgressBar({ progress }: ProgressBarProps) {\n  return (\n    <View style={styles.progress}>\n      <Text style={styles.progressText}>{Math.round(progress * 100)}%</Text>\n      <Progress.Bar width={200} useNativeDriver progress={progress} />\n    </View>\n  );\n} \n```", "```js\nexport default function MeasuringProgress() {\n  const [progress, setProgress] = useState(0);\n  useEffect(() => {\n       let timeoutRef: NodeJS.Timeout | null = null;\n    function updateProgress() {\n         setProgress((currentProgress) => {\n        if (currentProgress < 1) {\n          return currentProgress + 0.01;\n        } else {\n          return 0;\n        }\n      });\n    timeoutRef = setTimeout(updateProgress, 100);\n    }\n    updateProgress();\n    return () => {\n      timeoutRef && clearTimeout(timeoutRef);\n    };\n  }, []);\n  return (\n    <View style={styles.container}>\n      <ProgressBar progress={progress} />\n    </View>\n  );\n} \n```"]