- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: 'Introducing Angular and PrimeNG: A Powerful Combination'
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 Angular 和 PrimeNG：强大的组合
- en: Welcome to the first step of your journey into the vast and dynamic realm of
    web development!
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到你网络开发之旅的第一步，一个广阔且充满活力的领域！
- en: 'This chapter serves as your gateway into two influential tools that have revolutionized
    the development of web applications: Angular and PrimeNG.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章是你进入两个已经彻底改变了网络应用程序开发的强大工具的大门：Angular 和 PrimeNG。
- en: Angular, developed by tech giant Google, is a robust framework that has revolutionized
    the development of web applications. It provides a structured pathway for building
    complex and efficient web applications. With powerful features such as two-way
    data binding, dependency injection, and modular architecture, Angular enables
    developers to construct intricate web applications with ease.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 由技术巨头 Google 开发的 Angular 是一个强大的框架，它彻底改变了网络应用程序的开发。它提供了一个构建复杂和高效网络应用程序的结构化路径。凭借双向数据绑定、依赖注入和模块化架构等强大功能，Angular
    使开发者能够轻松构建复杂的网络应用程序。
- en: In conjunction with Angular, PrimeNG offers a variety of pre-made UI components
    specifically designed for Angular. This combination forms a formidable pair, as
    PrimeNG complements Angular’s capabilities by providing a suite of ready-to-use
    UI components when building all kinds of web applications. These components assist
    developers in crafting aesthetically pleasing and user-friendly interfaces, simplifying
    the development process and ensuring a consistent and engaging user experience.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Angular 结合，PrimeNG 提供了一系列专为 Angular 设计的预制 UI 组件。这种组合形成了一对强大的搭档，因为 PrimeNG
    通过提供一套现成的 UI 组件来补充 Angular 的功能，在构建各种类型的网络应用程序时，这些组件帮助开发者打造美观且用户友好的界面，简化开发过程，并确保一致且引人入胜的用户体验。
- en: In this chapter, we’ll explore the fundamentals of both Angular and PrimeNG,
    demonstrating their integration and explaining the benefits of using them in conjunction.
    Whether you’re a novice in the world of web development or a seasoned professional,
    this chapter promises to provide valuable insights that will pave the way for
    your future adventures in UI development.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨 Angular 和 PrimeNG 的基础知识，展示它们的集成，并解释联合使用它们的益处。无论你是网络开发领域的初学者还是经验丰富的专业人士，本章都承诺为你提供宝贵的见解，为你在
    UI 开发领域的未来冒险铺平道路。
- en: 'To sum up, we’re going to cover the following main topics:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，我们将涵盖以下主要主题：
- en: Introducing Angular
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍 Angular
- en: Introducing PrimeNG
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍 PrimeNG
- en: Exploring key features of PrimeNG
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索 PrimeNG 的关键特性
- en: Using Angular and PrimeNG together
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Angular 和 PrimeNG 一起
- en: Technical requirements
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'We will be setting up the development environment in the next chapter; however,
    for now, here is where you can access the code for the book: [https://github.com/PacktPublishing/Next-Level-UI-Development-with-PrimeNG](https://github.com/PacktPublishing/Next-Level-UI-Development-with-PrimeNG).
    Note that you can find the code for each chapter in the `apps` folder.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在下一章中设置开发环境；然而，目前你可以在这里找到本书的代码：[https://github.com/PacktPublishing/Next-Level-UI-Development-with-PrimeNG](https://github.com/PacktPublishing/Next-Level-UI-Development-with-PrimeNG)。请注意，你可以在
    `apps` 文件夹中找到每个章节的代码。
- en: Introducing Angular
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 Angular
- en: '**Angular** ([https://angular.io/](https://angular.io/)) is a web application
    framework developed and maintained by Google, and is a comprehensive framework
    for building dynamic web applications. As one of the pillars in the world of frontend
    development, Angular has established its dominance through its powerful features
    and performance-oriented nature.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**Angular** ([https://angular.io/](https://angular.io/)) 是由 Google 开发和维护的一个网络应用程序框架，是一个用于构建动态网络应用程序的全面框架。作为前端开发领域的一根支柱，Angular
    通过其强大的功能和面向性能的特性确立了其主导地位。'
- en: When we dig into Angular, we can see that it’s built with TypeScript, a statically
    typed superset of JavaScript. TypeScript brings in features such as type safety
    and enhanced tooling support, which contribute to the robustness of Angular applications.
    This combination of TypeScript’s strong typing and Angular’s architecture makes
    the framework highly scalable, a feature that’s vital when it comes to building
    complex and large-scale applications.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们深入研究 Angular 时，我们可以看到它是由 TypeScript 构建的，TypeScript 是 JavaScript 的静态类型超集。TypeScript
    带来了诸如类型安全性和增强的工具支持等特性，这些特性有助于提高 Angular 应用程序的稳健性。TypeScript 强大的类型和 Angular 的架构相结合，使得该框架具有高度的可扩展性，这在构建复杂和大规模应用程序时至关重要。
- en: Angular’s architecture is component-based. A **component** controls a part of
    the screen on a website. Components are modular and reusable, which promotes a
    clean and **DRY** (**Don’t Repeat Yourself**) code base. They also make it easier
    to manage and reason about your application as it grows in size and complexity.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Angular的架构是基于组件的。**组件**控制网站屏幕上的一个部分。组件是模块化和可重用的，这促进了干净且**DRY**（**不要重复自己**）的代码库。随着应用程序规模和复杂性的增长，它们也使得管理和推理应用程序变得更加容易。
- en: 'You can see an example of a simple Angular component in the following code
    block:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在下面的代码块中看到一个简单的Angular组件示例：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The code demonstrates a simple Angular application that uses the `bootstrapApplication()`
    function to initialize the application.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码演示了一个简单的Angular应用程序，它使用`bootstrapApplication()`函数来初始化应用程序。
- en: 'Let’s break down the code and explain each part. First, we import the dependencies:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解代码并解释每一部分。首先，我们导入依赖项：
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Let’s explain each part:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们解释每一部分：
- en: The first line imports the `Component` decorator from `@angular/core`, which
    is used to define Angular components
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一行从`@angular/core`导入`Component`装饰器，该装饰器用于定义Angular组件
- en: The second line imports `CommonModule` from `@angular/common`, which provides
    common directives, pipes, and services used by Angular applications
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二行从`@angular/common`导入`CommonModule`，它为Angular应用程序提供常用的指令、管道和服务
- en: The third line imports the `bootstrapApplication` function from `@angular/platform-browser`,
    which is used to bootstrap the Angular application
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三行从`@angular/platform-browser`导入`bootstrapApplication`函数，该函数用于启动Angular应用程序
- en: 'The next section is how we define an `Angular` `Component`:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个部分是定义一个`Angular` `Component`的方式：
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Let’s break down this code:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解这段代码：
- en: This code defines a component named `AppComponent` using the `@``Component`
    decorator
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这段代码使用`@Component`装饰器定义了一个名为`AppComponent`的组件
- en: The `selector` property sets the component’s selector to `'my-app'`, which means
    it can be used in HTML with the `<my-app />` tag
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`selector`属性设置组件的选择器为`''my-app''`，这意味着它可以用`<my-app />`标签在HTML中使用'
- en: The `standalone` property is set to `true`, indicating that it can be used without
    being declared in an `NgModule`
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`standalone`属性设置为`true`，表示它可以在不声明在`NgModule`中的情况下使用'
- en: The `imports` array includes `CommonModule`, which provides common directives
    and services needed by the component
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`imports`数组包括`CommonModule`，它为组件提供了所需的常用指令和服务'
- en: The `template` property defines the component’s template, which consists of
    a `<h1>` heading displaying the value of the `name` property, `'Angular'`, and
    an anchor tag linking to the Angular website.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`template`属性定义了组件的模板，该模板由一个显示`name`属性值的`<h1>`标题组成，值为`''Angular''`，以及一个链接到Angular网站的锚标签'
- en: 'Finally, we bootstrap the application:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们启动应用程序：
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The `bootstrapApplication()` function is called with the `AppComponent` component
    as an argument, initiating an instance of an Angular application and rendering
    a standalone component as the application’s root component.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '`bootstrapApplication()`函数以`AppComponent`组件作为参数被调用，启动一个Angular应用程序实例，并将一个独立组件作为应用程序的根组件进行渲染。'
- en: Note
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The standalone component approach (introduced in Angular v14) and the NgModule
    approach differ in how they are bootstrapped. With NgModule, bootstrapping is
    done using the `bootstrapModule()` function, which is exported from the `@``angular/platform-browser-dynamic`
    package.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 独立组件方法（在Angular v14中引入）和NgModule方法在启动方式上有所不同。使用NgModule时，启动是通过从`@angular/platform-browser-dynamic`包导出的`bootstrapModule()`函数完成的。
- en: 'One of the strengths of Angular lies in its suite of powerful tools and features,
    including the following:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Angular的一个优势在于其强大的工具和功能套件，包括以下内容：
- en: The Angular **Command-Line Interface** (**CLI**) ([https://angular.io/cli](https://angular.io/cli))
    simplifies the creation of Angular projects by automating various development
    tasks
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Angular的**命令行界面**（**CLI**）([https://angular.io/cli](https://angular.io/cli)）通过自动化各种开发任务简化了Angular项目的创建
- en: Features such as dependency injection and decorators enable developers to write
    code that’s modular and easy to test
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 诸如依赖注入和装饰器等特性使开发者能够编写模块化和易于测试的代码
- en: Angular’s directives allow developers to add behavior to DOM elements
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Angular的指令允许开发者向DOM元素添加行为
- en: Two-way data binding keeps the model and the view in sync, reducing the amount
    of boilerplate code
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 双向数据绑定使模型和视图保持同步，减少了样板代码的数量
- en: A comprehensive set of tools for handling complex state management and routing
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一套用于处理复杂状态管理和路由的综合工具
- en: An HTTP client for interacting with RESTful services
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个用于与 RESTful 服务交互的 HTTP 客户端
- en: And more!
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更多内容！
- en: In summary, Angular is a well-rounded framework offering a combination of performance,
    scalability, and a vast array of tools and features. These factors make it a favorite
    among many developers, whether they’re building a simple website or a complex
    single-page application.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，Angular 是一个全面性的框架，它结合了性能、可扩展性和丰富的工具和功能。这些因素使得它成为许多开发者的首选，无论是构建简单的网站还是复杂的单页应用程序。
- en: Note
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Angular is a constantly evolving framework, and new features are being added
    all the time. If you are interested in learning more about Angular, there are
    many resources available online (for example, https://angular.io).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Angular 是一个不断发展的框架，新功能不断被添加。如果您想了解更多关于 Angular 的信息，网上有许多资源可供参考（例如，https://angular.io）。
- en: In the next section, we will get into the world of PrimeNG.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将进入 PrimeNG 的世界。
- en: Introducing PrimeNG
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 PrimeNG
- en: '**PrimeNG** ([https://primeng.org/](https://primeng.org/)) is a feature-rich
    library of open source UI components specifically designed for Angular applications.
    As you can see in the following figure, the current state of PrimeNG offers an
    impressive suite of 90+ components, 200+ icons, and 400+ ready-to-use UI blocks,
    ranging from simple widgets such as buttons and inputs to more complex and powerful
    components such as data tables, charts, and trees.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**PrimeNG** ([https://primeng.org/](https://primeng.org/)) 是一个功能丰富的开源 UI 组件库，专门为
    Angular 应用程序设计。如图所示，PrimeNG 当前的状态提供了一个令人印象深刻的组件套件，包括 90 多个组件、200 多个图标和 400 多个现成的
    UI 块，从简单的按钮和输入等小部件到更复杂和强大的组件，如数据表、图表和树。'
- en: '![Figure 1.1 – Overview of PrimeNG](img/B18805_01_01.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.1 – PrimeNG 概览](img/B18805_01_01.jpg)'
- en: Figure 1.1 – Overview of PrimeNG
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.1 – PrimeNG 概览
- en: Every component in PrimeNG is crafted with attention to detail. They’re not
    just functional but also aesthetically pleasing with a polished design that adheres
    to modern UI principles. The components come with a rich set of features out of
    the box, which can be further customized to suit the specific needs of your application.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: PrimeNG 中的每个组件都是精心制作的。它们不仅功能强大，而且设计精美，符合现代 UI 原则，具有吸引力的外观。组件自带丰富的功能，可以根据您应用程序的具体需求进一步定制。
- en: 'Here is an example of a button snippet:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个按钮片段的示例：
- en: '[PRE4]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This code represents a `<button>` element with several attributes and classes.
    Let’s break them down:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码代表了一个具有多个属性和类的 `<button>` 元素。让我们逐一分析：
- en: '`pButton`: This attribute is a directive that adds PrimeNG styling and behavior
    to the button. It enhances the button with additional features and visual enhancements.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pButton`: 此属性是一个指令，它为按钮添加 PrimeNG 样式和行为。它通过额外的功能和视觉增强来增强按钮。'
- en: '`pRipple`: This attribute enables the ripple effect on the button when clicked,
    providing visual feedback.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pRipple`: 此属性在按钮点击时启用涟漪效果，提供视觉反馈。'
- en: '`label="Show Me Now"`: This attribute sets the label or text content of the
    button to **Show** **Me Now**.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`label="Show Me Now"`: 此属性设置按钮的标签或文本内容为**Show** **Me Now**。'
- en: '`class="p-button-raised p-button-primary"`: This `class` attribute applies
    two CSS classes to the button – namely, `p-button-raised` and `p-button-primary`.
    These classes define the appearance and style of the button, making it raised
    and using a primary color scheme.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`class="p-button-raised p-button-primary"`: 此 `class` 属性将两个 CSS 类应用于按钮——即 `p-button-raised`
    和 `p-button-primary`。这些类定义了按钮的外观和样式，使其呈现凸起效果并使用主色调方案。'
- en: 'You can see the result in the following figure:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在以下图中查看结果：
- en: '![Figure 1.2 – PrimeNG button](img/B18805_01_02.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.2 – PrimeNG 按钮](img/B18805_01_02.jpg)'
- en: Figure 1.2 – PrimeNG button
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.2 – PrimeNG 按钮
- en: In addition to its vast component library, PrimeNG is backed by a strong community
    and an active development team. Regular updates keep the library fresh and competitive,
    while the extensive documentation and examples make it easy to get started and
    find answers to your questions.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 除了庞大的组件库之外，PrimeNG 还拥有强大的社区和活跃的开发团队。定期的更新使库保持新鲜和竞争力，而广泛的文档和示例使您能够轻松开始并找到问题的答案。
- en: In conclusion, PrimeNG is a powerful tool that significantly reduces the time
    and effort required to build high-quality, interactive user interfaces in Angular
    applications. Its vast array of ready-to-use components, flexible theming capabilities,
    and commitment to accessibility make it an excellent choice for any Angular developer.
    In the next section, we will dive into the key features of PrimeNG.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，PrimeNG是一个强大的工具，它显著减少了在Angular应用程序中构建高质量、交互式用户界面所需的时间和精力。其丰富的预用组件、灵活的主题功能和对无障碍性的承诺，使其成为任何Angular开发者的绝佳选择。在下一节中，我们将深入了解PrimeNG的关键特性。
- en: Note
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: While PrimeNG provides a wealth of functionalities, an understanding of Angular
    basics is essential to leverage its full potential. You could visit the official
    Angular website or check out Packt’s *Learning Angular* book by Aristeidis Bampakos
    and Pablo Deeleman.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然PrimeNG提供了丰富的功能，但了解Angular基础知识对于充分利用其潜力是必不可少的。您可以访问官方的Angular网站，或查看Aristeidis
    Bampakos和Pablo Deeleman所著的Packt的*学习Angular*书籍。
- en: Exploring key features of PrimeNG
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索PrimeNG的关键特性
- en: PrimeNG stands out from other UI libraries with its rich feature set and attention
    to detail. This comprehensive set of features, designed specifically for Angular
    applications, makes it a go-to choice for developers looking for a powerful, easy-to-use
    UI library.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: PrimeNG凭借其丰富的功能集和对细节的关注，在众多UI库中脱颖而出。这一套专为Angular应用程序设计的综合功能，使其成为寻求强大、易用UI库的开发者的首选选择。
- en: 'Let’s check out some popular features of PrimeNG:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看PrimeNG的一些流行特性：
- en: One of the most noticeable features of PrimeNG is its wide array of UI components.
    From basic elements such as buttons and dropdowns to more complex components such
    as data tables, calendars, and charts, PrimeNG has you covered. Each component
    is fully customizable, giving you the flexibility to tailor the appearance and
    behavior to suit your needs.
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PrimeNG最引人注目的特性之一是其广泛的UI组件。从基本的元素，如按钮和下拉菜单，到更复杂的组件，如数据表、日历和图表，PrimeNG都能满足您的需求。每个组件都是完全可定制的，让您可以根据自己的需求调整外观和行为。
- en: 'Another key feature of PrimeNG is its theming system. PrimeNG comes with a
    variety of pre-built themes, each with its own unique styling for all components,
    but the theming system doesn’t stop there – with the help of the Theme Designer,
    you can easily create a custom theme that aligns with your brand identity. The
    Theme Designer provides a user-friendly interface for customizing the colors,
    fonts, and other styling aspects of your theme, as you can see here:'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PrimeNG的另一个关键特性是其主题系统。PrimeNG附带多种预构建的主题，每个主题都为所有组件提供了独特的样式，但主题系统并不止于此——借助主题设计器，您可以轻松创建与您的品牌形象一致的自定义主题。主题设计器提供了一个用户友好的界面，用于自定义主题的颜色、字体和其他样式方面，正如您在这里所看到的：
- en: '![Figure 1.3 – PrimeNG Designer](img/B18805_01_03.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![图1.3 – PrimeNG设计器](img/B18805_01_03.jpg)'
- en: Figure 1.3 – PrimeNG Designer
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.3 – PrimeNG设计器
- en: PrimeNG also prioritizes accessibility. Many of its components come with built-in
    support for **Accessible Rich Internet Applications** (**ARIAs**) and keyboard
    navigation, making your applications more accessible to users with disabilities.
    This commitment to accessibility is a testament to PrimeNG’s dedication to creating
    inclusive web applications for people with disabilities. Using pre-built components
    with accessibility support saves time and effort by leveraging the expertise of
    accessibility specialists, ensuring adherence to standards, and benefiting from
    ongoing maintenance and updates.
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PrimeNG也优先考虑无障碍性。其许多组件都内置了对**可访问的富互联网应用程序**（**ARIAs**）和键盘导航的支持，使您的应用程序对有障碍的用户更加易于访问。对无障碍性的这一承诺证明了PrimeNG致力于为有障碍人士创建包容性网络应用的承诺。使用具有无障碍支持的预构建组件，通过利用无障碍专家的专长，确保符合标准，并从持续维护和更新中受益。
- en: '**PrimeIcons** is the default icon library of PrimeNG with over 250 open source
    icons developed by PrimeTek. These icons are not only visually appealing but also
    highly relevant in leveraging a common visual language of expected functionality
    and supporting the **user interface experience** (**UIX**). However, it is worth
    mentioning that PrimeNG components offer flexibility in using icons by allowing
    templating with other popular icon libraries such as Material Icons ([https://fonts.google.com/icons](https://fonts.google.com/icons))
    or Font Awesome ([https://fontawesome.com](https://fontawesome.com)), giving developers
    the freedom to choose the icon set that best aligns with their design requirements
    and desired user experience.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PrimeIcons** 是 PrimeNG 的默认图标库，由 PrimeTek 开发了超过 250 个开源图标。这些图标不仅视觉上吸引人，而且在利用预期的功能通用视觉语言和支持
    **用户界面体验**（**UIX**）方面高度相关。然而，值得一提的是，PrimeNG 组件在图标使用上提供了灵活性，允许使用其他流行的图标库进行模板化，例如
    Material Icons ([https://fonts.google.com/icons](https://fonts.google.com/icons))
    或 Font Awesome ([https://fontawesome.com](https://fontawesome.com))，这为开发者提供了选择与他们的设计需求和期望的用户体验最佳匹配的图标集的自由。'
- en: Finally, PrimeNG is designed with responsiveness in mind. The components are
    built to adapt to different screen sizes and resolutions, ensuring your application
    looks great on all devices. Whether your users are on a desktop, tablet, or mobile
    device, PrimeNG components will provide a consistent, high-quality user experience.
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，PrimeNG 是以响应性为设计理念的。组件被构建以适应不同的屏幕尺寸和分辨率，确保你的应用程序在所有设备上看起来都很棒。无论用户是在桌面、平板电脑还是移动设备上，PrimeNG
    组件都将提供一致、高质量的用户体验。
- en: In conclusion, PrimeNG offers a powerful set of features that make it an excellent
    choice for any Angular developer. From its extensive component library and flexible
    theming system to its commitment to accessibility and responsiveness, PrimeNG
    has all the tools you need to create high-quality, interactive user interfaces
    for your Angular applications.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，PrimeNG 提供了一套强大的功能，使其成为任何 Angular 开发者的绝佳选择。从其广泛的组件库和灵活的主题系统，到其对可访问性和响应性的承诺，PrimeNG
    拥有创建高质量的交互式用户界面所需的所有工具，适用于你的 Angular 应用程序。
- en: Using Angular and PrimeNG together
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Angular 和 PrimeNG 一起
- en: 'The combination of Angular and PrimeNG offers a powerful set of tools for modern
    web development. Together, they create a highly productive environment that significantly
    simplifies the process of building complex, interactive web applications. Here
    are some highlights:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Angular 和 PrimeNG 的结合为现代网络开发提供了一套强大的工具。它们共同创造了一个高度生产力的环境，显著简化了构建复杂、交互式网络应用程序的过程。以下是一些亮点：
- en: First and foremost, PrimeNG is designed specifically for Angular. This means
    that all the components are built to work seamlessly with Angular’s architecture.
    The PrimeNG components are essentially Angular components, so they can be used
    in the same way as any other Angular component. This compatibility with Angular
    results in a streamlined development process, where you can use PrimeNG components
    as part of your Angular application without any additional overhead or integration
    effort.
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先要强调的是，PrimeNG 是专门为 Angular 设计的。这意味着所有组件都是为与 Angular 的架构无缝工作而构建的。PrimeNG 组件本质上就是
    Angular 组件，因此它们可以像任何其他 Angular 组件一样使用。这种与 Angular 的兼容性导致开发流程简化，你可以在 Angular 应用程序中使用
    PrimeNG 组件，而无需任何额外的开销或集成工作。
- en: Moreover, Angular and PrimeNG complement each other in terms of functionality.
    Angular provides the framework for building single-page applications with complex
    interactions and state management, while PrimeNG offers a wide array of pre-built
    UI components to enhance the user interface. This means you can leverage Angular’s
    robust framework for the logic and structure of your application, and use PrimeNG’s
    components to create an engaging, responsive user interface.
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此外，Angular 和 PrimeNG 在功能上相互补充。Angular 提供了构建具有复杂交互和状态管理的单页应用框架，而 PrimeNG 提供了一系列预构建的
    UI 组件来增强用户界面。这意味着你可以利用 Angular 的强大框架来处理应用的逻辑和结构，并使用 PrimeNG 的组件来创建引人入胜、响应式的用户界面。
- en: The integration of Angular and PrimeNG also leads to improved code quality.
    With PrimeNG providing ready-made, reusable components, you can avoid repetitive
    code and focus on implementing unique features and business logic. This can lead
    to a cleaner, more maintainable code base, which is especially beneficial in large-scale
    applications.
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Angular和PrimeNG的集成还提高了代码质量。由于PrimeNG提供了现成的、可重用的组件，您可以避免重复代码，专注于实现独特功能和业务逻辑。这可以导致更干净、更易于维护的代码库，这在大型应用中尤其有益。
- en: Finally, both Angular and PrimeNG have active communities and extensive documentation.
    This means you have a wealth of resources at your disposal when you need help
    or want to learn more about a specific topic. The consistent updates and improvements
    to both Angular and PrimeNG also ensure that you’re working with up-to-date tools
    that embrace the latest best practices in web development.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，Angular和PrimeNG都有活跃的社区和广泛的文档。这意味着当您需要帮助或想了解更多关于特定主题的信息时，您有丰富的资源可以利用。Angular和PrimeNG的持续更新和改进也确保了您使用的是最新的工具，这些工具遵循Web开发的最新最佳实践。
- en: In essence, the combination of Angular’s powerful framework and PrimeNG’s rich
    set of UI components provides a complete solution for building dynamic, aesthetically
    pleasing web applications. This blend not only enhances productivity but also
    leads to the development of applications that are efficient, scalable, and maintainable.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 本质上，Angular强大的框架与PrimeNG丰富的UI组件组合提供了一套完整的解决方案，用于构建动态、美观的Web应用程序。这种结合不仅提高了生产力，还促进了高效、可扩展和可维护的应用程序的开发。
- en: Note
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Both Angular and PrimeNG are open source, ensuring they are not just free to
    use but that they can also be tailored to meet unique requirements such as custom
    components or theming.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: Angular和PrimeNG都是开源的，这意味着它们不仅免费使用，还可以根据独特需求进行定制，例如自定义组件或主题。
- en: Summary
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we embarked on a journey into the world of Angular and PrimeNG,
    two robust tools that, when combined, unlock the potential to create modern and
    sophisticated web applications. Throughout this chapter, you gained an introduction
    to these tools and explored the advantages of leveraging them together. Angular
    provides the underlying structure, while PrimeNG enhances it with ready-to-use
    UI components. This blend enables developers to expedite their workflow, leading
    to quicker development cycles and more maintainable code.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 本章，我们开始了Angular和PrimeNG这两个强大工具的探索之旅，它们结合在一起，释放了创建现代和复杂Web应用程序的潜力。在本章中，您对这些工具有了初步的了解，并探讨了利用它们的优点。Angular提供了底层结构，而PrimeNG则通过现成的UI组件对其进行增强。这种结合使开发者能够加速工作流程，从而缩短开发周期并编写更易于维护的代码。
- en: The knowledge gained in this chapter is invaluable for professional developers
    seeking to enhance their web development skills. As we delve deeper into the subsequent
    chapters, we’ll explore how to utilize Angular and PrimeNG to their full potential
    and create a diverse range of applications. Whether you’re a budding developer
    or a seasoned professional, this journey promises to be insightful and enriching.
    So, fasten your seatbelts as we prepare to navigate the intriguing realm of web
    development with Angular and PrimeNG.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中获得的知识对于寻求提升Web开发技能的专业开发者来说是无价的。随着我们深入后续章节，我们将探讨如何充分利用Angular和PrimeNG，创建各种应用。无论您是初出茅庐的开发者还是经验丰富的专业人士，这次旅程都承诺将富有洞察力和丰富性。所以，系好安全带，我们准备一起探索Angular和PrimeNG在Web开发领域的迷人世界。
- en: In the next chapter, we will delve into the process of setting up your development
    environment. We will explore the technical requirements, including Node.js, Yarn/NPM,
    GitHub, and VS Code, and guide you through the installation process. Additionally,
    we will introduce the Angular CLI, a powerful CLI that streamlines Angular development.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将深入探讨设置开发环境的过程。我们将探讨技术要求，包括Node.js、Yarn/NPM、GitHub和VS Code，并指导您完成安装过程。此外，我们还将介绍Angular
    CLI，这是一个强大的CLI，可以简化Angular开发。
- en: Get ready to take your development skills to the next level as we embark on
    this enlightening journey together!
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我们共同踏上这个启发性的旅程，准备好将您的开发技能提升到新的水平吧！
