- en: Button and Panel Components
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 按钮和面板组件
- en: In this chapter, initially, we will cover various Button components such as
    radio, split, toggle, and select buttons, and later move to various Panel components,
    such as Toolbar, basic Panel, FieldSet, Accordion, and tabbed view. The user input
    will be taken in multiple ways, among which Button input is one of the best options;
    on the other hand, Panel components act as container components, which allow grouping
    of other native HTML or PrimeNG components. Each feature of PrimeNG--enhanced
    Buttons and Panel components cover many real-time use case needs. Various settings
    to configure Button and Panel components are detailed in this chapter.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将首先涵盖各种按钮组件，如单选按钮、分割按钮、切换按钮和选择按钮，然后转向各种面板组件，如工具栏、基本面板、字段集、手风琴和选项卡视图。用户输入将以多种方式进行，其中按钮输入是最佳选项之一；另一方面，面板组件充当容器组件，允许对其他原生HTML或PrimeNG组件进行分组。PrimeNG的每个功能——增强按钮和面板组件都涵盖了许多实时用例需求。本章详细介绍了配置按钮和面板组件的各种设置。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Enhanced Button, RadioButton, and SplitButton
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增强按钮、单选按钮和分割按钮
- en: Selecting value by ToggleButton and SelectButton
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过切换按钮和选择按钮选择值
- en: Grouping buttons with Toolbar
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用工具栏对按钮进行分组
- en: Arranging your view with Panels and FieldSets
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用面板和字段集排列您的视图
- en: Vertical stacked panels with Accordion
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 垂直堆叠的手风琴面板
- en: Grouping content with tabs in TabView
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在TabView中使用选项卡对内容进行分组
- en: Enhanced Button, RadioButton, and SplitButton
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 增强按钮、单选按钮和分割按钮
- en: Buttons are frequently used elements for any web design. PrimeNG extended plain
    Button behavior with awesome features.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮是任何网页设计中经常使用的元素。PrimeNG通过出色的功能扩展了普通按钮的行为。
- en: Button
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 按钮
- en: 'The Button component is an extension to standard input element for user interactions
    with icons and theming. The `pButton` directive makes a plain HTML button a PrimeNG-enhanced
    button. A basic example of the Button component with defined label text would
    be written as follows:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮组件是用于用户与图标和主题进行交互的标准输入元素的扩展。`pButton`指令将普通的HTML按钮变成PrimeNG增强按钮。具有定义的标签文本的按钮组件的基本示例将如下所示：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The type of the Button should be `button` type. The following screenshot shows
    a snapshot result of the basic Button example:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮的类型应为`button`类型。以下屏幕截图显示了基本按钮示例的快照结果：
- en: '![](assets/2d068b5c-90ca-4d4e-9a40-27bcc531243e.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/2d068b5c-90ca-4d4e-9a40-27bcc531243e.png)'
- en: The Button component supports one event callback named `click`, which will be
    invoked on click of the Button element. Remember that Button's click event is
    basically from Angular one not specific to PrimeNG.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮组件支持一个名为`click`的事件回调，该事件将在单击按钮元素时被调用。请记住，按钮的点击事件基本上是来自Angular而不是特定于PrimeNG的。
- en: Icons and severity
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图标和严重性
- en: 'The Button component is more useful with icons and severity properties. The
    `icon` attribute is used to represent font-awesome icons on top of it. Default
    icon position is the left-hand position. This can be customized using the `iconPos`
    attribute with valid values as `left` and `right`. In order to display only one
    icon, leave the label as undefined. An example of the Button components with various
    combinations of icon and label would be written as follows:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮组件在图标和严重性属性方面更有用。`icon`属性用于在按钮上方表示字体awesome图标。默认图标位置是左侧位置。可以使用`iconPos`属性自定义此位置，有效值为`left`和`right`。为了仅显示一个图标，将标签留空。按钮组件的示例，包括各种图标和标签的组合，将如下所示：
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'In the preceding example, Buttons are defined as without a label, with the
    label, and right-positioned icon with the label in a respective order. The following
    screenshot shows a snapshot result of the Button with icons as an example:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的示例中，按钮被定义为没有标签，有标签，并且带有标签的右侧定位图标，依次排列。以下屏幕截图显示了带有图标的按钮的快照结果：
- en: '![](assets/ffa0c0cc-81aa-4f86-9844-23bd99596668.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/ffa0c0cc-81aa-4f86-9844-23bd99596668.png)'
- en: 'To differentiate different severity levels of user actions, PrimeNG provides
    five different classes, that is, these style classes are different from regular
    theme colors:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 为了区分用户操作的不同严重级别，PrimeNG提供了五种不同的类，即这些样式类与常规主题颜色不同：
- en: '`ui-button-secondary`'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ui-button-secondary`'
- en: '`ui-button-success`'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ui-button-success`'
- en: '`ui-button-info`'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ui-button-info`'
- en: '`ui-button-warning`'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ui-button-warning`'
- en: '`ui-button-danger`'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ui-button-danger`'
- en: 'The following screenshot shows a snapshot result of a Button with all severity
    cases (compared to regular theme class) as an example:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了带有所有严重情况的按钮的快照结果（与常规主题类进行比较）：
- en: '![](assets/655568e7-cd98-454c-b7f2-5636cc8aa024.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/655568e7-cd98-454c-b7f2-5636cc8aa024.png)'
- en: The user interactions are prevented using the regular `disabled` attribute.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 用户交互使用常规的`disabled`属性来阻止。
- en: The complete demo application with instructions is available on GitHub at
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的演示应用程序及说明可在GitHub上找到
- en: '[https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/button.](https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/button)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/button.](https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/button)'
- en: RadioButton
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: RadioButton
- en: 'RadioButton is an extension to a standard radio button element with skinning
    capabilities to opt for only one value at a time. The two-way binding is provided
    through the `ngModel` directive, which enables default values as either checked
    or unchecked (preselection). A basic example of a RadioButton component with a
    defined label text is written as follows:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: RadioButton是标准单选按钮元素的扩展，具有选择能力以一次只选择一个值。双向绑定通过`ngModel`指令提供，该指令使默认值可以作为已选或未选（预选）。以下是一个具有定义标签文本的RadioButton组件的基本示例：
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'In the preceding example, all radio buttons are mapped to the same group (`name="group1"`)
    in order to work as a mutual exclusive radio group. The following screenshot shows
    a snapshot result of the radio button example:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的示例中，所有单选按钮都映射到同一组（`name="group1"`），以便作为互斥的单选按钮组工作。以下屏幕截图显示了单选按钮示例的快照结果：
- en: '![](assets/e0632ea3-9ad2-4d06-8bab-5e67ed039096.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e0632ea3-9ad2-4d06-8bab-5e67ed039096.png)'
- en: The radio button component supports one event callback named `onClick`, which
    will be invoked on the click of a radio button element. The `label` attribute
    provides a label text for the radio button. The label is also clickable and selects
    the value. The label components associated with the radio button need to trigger
    the focus of input while click on it, this can be achieved with the `inputId`
    attribute.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 单选按钮组件支持一个名为`onClick`的事件回调，该事件将在单选按钮元素被点击时被调用。`label`属性为单选按钮提供了标签文本。标签也是可点击的，并且选择值。与单选按钮相关的标签组件需要在点击时触发输入的焦点，这可以通过`inputId`属性实现。
- en: The complete demo application with instructions is available on GitHub at
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的演示应用程序及说明可在GitHub上找到
- en: '[https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/radio-button.](https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/radio-button)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/radio-button.](https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/radio-button)'
- en: SplitButton
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SplitButton
- en: 'SplitButton groups a collection of menu items in an overlay with a default
    command button. This button uses a common menu model API to define its items.
    Hence, the split button is a combination of button and menu components. A basic
    example of SplitButton component with defined label text would be written as follows:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: SplitButton将一组菜单项与默认命令按钮组合在一个覆盖中。此按钮使用常见的菜单模型API来定义其项目。因此，分割按钮是按钮和菜单组件的组合。使用定义的标签文本的SplitButton组件的基本示例将如下所示：
- en: '[PRE3]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The label is applied only for the default command button. The following screenshot
    shows a snapshot result of the split button example:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 标签仅适用于默认命令按钮。以下屏幕截图显示了分割按钮示例的快照结果：
- en: '![](assets/940522dc-9797-4f69-ba74-656b4ed031fa.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/940522dc-9797-4f69-ba74-656b4ed031fa.png)'
- en: The split button component supports one event callback named `onClick`, which
    will be invoked on the click of the default button element.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 分割按钮组件支持一个名为`onClick`的事件回调，该回调将在单击默认按钮元素时被调用。
- en: PrimeNG 4.1 provided `appendTo` the option which provides customization over
    where the overlay would be appended.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: PrimeNG 4.1提供了`appendTo`选项，可以自定义覆盖的附加位置。
- en: Icons and theming
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图标和主题
- en: 'There are many options to customize the plain behavior of the split button.
    The icons can be applied for the associated default command button and menu items
    separately using the `icon` property. The icons are aligned to the left side by
    default, but this can be applied to the right side as well, using the `iconPos`
    property, whereas the skinning behavior of component and overlay are modified
    through the `style`, `styleClass`, `menuStyle`, and `menuStyleClass` class properties.
    A basic example of the SplitButton component with the defined label text would
    be written as follows:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多选项可以自定义分割按钮的行为。图标可以分别应用于关联的默认命令按钮和菜单项，使用`icon`属性。默认情况下，图标对齐到左侧，但也可以使用`iconPos`属性应用到右侧，而组件和覆盖的皮肤行为可以通过`style`、`styleClass`、`menuStyle`和`menuStyleClass`类属性进行修改。使用定义的标签文本的SplitButton组件的基本示例将如下所示：
- en: '[PRE4]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In the preceding example, the overlay menu default styles are changed with
    the help of the `menuStyleClass` property. For example, in this case, the default
    width of the overlay is changed by setting the `menuStyleClass` class name as
    shown here:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的示例中，通过`menuStyleClass`属性改变了覆盖菜单的默认样式。例如，在这种情况下，通过设置`menuStyleClass`类名来改变覆盖的默认宽度，如下所示：
- en: '[PRE5]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The following screenshot shows a snapshot result of the split button example:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了分割按钮示例的快照结果：
- en: '![](assets/9a104867-c87c-4b6c-affe-709d6d27fe0a.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/9a104867-c87c-4b6c-affe-709d6d27fe0a.png)'
- en: In the preceding snapshot, the split button is customized with icons, the create
    command button icon is aligned to the right side, and the width of the overlay
    increased to accommodate both icons and text.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的快照中，分割按钮定制了图标，创建命令按钮图标对齐到右侧，并且覆盖的宽度增加以容纳图标和文本。
- en: The complete demo application with instructions is available on GitHub at
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的演示应用程序和说明可在GitHub上找到
- en: '[https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/split-button](https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/split-button).'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/split-button](https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/split-button)。'
- en: Selecting a value with ToggleButton and SelectButton
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用ToggleButton和SelectButton选择一个值
- en: 'ToggleButton provides a way to select a Boolean value using a button. The `ngModel`
    directive is used to define a two-way data binding to a Boolean property. That
    is, preselection of the toggle button is achieved by enabling the Boolean property.
    A basic example of ToggleButton usage would be as follows:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: ToggleButton提供了一种使用按钮选择布尔值的方法。`ngModel`指令用于将双向数据绑定到布尔属性。也就是说，通过启用布尔属性来实现切换按钮的预选。ToggleButton使用的基本示例如下：
- en: '[PRE6]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The following screenshot shows a snapshot result of the basic example:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了基本示例的快照结果：
- en: '![](assets/fbd75010-8282-4eaa-9657-b691ed004ba9.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/fbd75010-8282-4eaa-9657-b691ed004ba9.png)'
- en: 'The ToggleButton also provided customized options such as `onLabel`, `offLabel`,
    `onIcon`, and `offIcon` over default labels and icons. The label components associated
    with the toggle button need to trigger the focus of button while clicking on the
    label, this can be achieved with the `inputId` attribute. The customized toggle
    button with labels, icons, and events would be as follows:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: ToggleButton还提供了自定义选项，如`onLabel`、`offLabel`、`onIcon`和`offIcon`，用于覆盖默认标签和图标。与切换按钮相关的标签组件需要在单击标签时触发按钮的焦点，这可以通过`inputId`属性实现。具有标签、图标和事件的自定义切换按钮如下：
- en: '[PRE7]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'In the preceding example, all kinds of font-awesome icons can be used for the
    `icon` attributes. The following screenshot shows a snapshot result of the customized
    example:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的例子中，可以为`icon`属性使用各种font-awesome图标。以下屏幕截图显示了自定义示例的快照结果：
- en: '![](assets/c55958c7-703a-4b2a-a64d-a370493a03ba.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c55958c7-703a-4b2a-a64d-a370493a03ba.png)'
- en: The user is notified of user actions using the `onChange` event. At the same
    time, user interactions are prevented using the `disabled` property.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 用户使用`onChange`事件来通知用户操作。同时，使用`disabled`属性来阻止用户交互。
- en: SelectButton
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SelectButton
- en: 'The SelectButton component is used to choose single or multiple items from
    a list in the form of buttons. Each item in the list of options is defined as
    the `SelectItem` interface with a label-value pair properties. The options are
    binding through the `ngModel` property with a two-way binding, which results in
    the default selection based on the backend component data. A basic example of
    the select button usage would be as follows:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: SelectButton组件用于从按钮形式的列表中选择单个或多个项目。选项列表中的每个项目都被定义为具有标签值对属性的`SelectItem`接口。选项通过`ngModel`属性进行绑定，实现双向绑定，这将根据后端组件数据进行默认选择。选择按钮使用的基本示例如下：
- en: '[PRE8]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'In the preceding example, all the Prime libraries are collected as an array
    for the `options` property. The following screenshot shows a snapshot result of
    the select button example:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的例子中，所有Prime库都被收集为`options`属性的数组。以下屏幕截图显示了选择按钮示例的快照结果：
- en: '![](assets/472a7106-967d-4f86-b4d4-ab8f3273833e.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/472a7106-967d-4f86-b4d4-ab8f3273833e.png)'
- en: In the preceding example, only one item is selected at a time (single selection)
    but there is also a possibility to select multiple items using the `multiple`
    property (that is, `multiple="true"`). In this scenario, the selected array list
    should not point to a null or undefined value.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的例子中，一次只能选择一个项目（单选），但也可以使用`multiple`属性选择多个项目（即`multiple="true"`）。在这种情况下，所选的数组列表不应指向空值或未定义的值。
- en: The select button components support one event callback named `onChange`, which
    will be invoked on the click of the default button element.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 选择按钮组件支持一个名为`onChange`的事件回调，该事件将在单击默认按钮元素时被调用。
- en: 'The complete demo application with instructions is available on GitHub:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的演示应用程序及说明可在GitHub上找到：
- en: '[https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/togglebutton](https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/togglebutton)'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/togglebutton](https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/togglebutton)'
- en: '[https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/selectbutton](https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/selectbutton)'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/selectbutton](https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/selectbutton)'
- en: Grouping buttons with Toolbar
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Toolbar 分组按钮
- en: 'Toolbar is a grouping or container component for buttons and other web resources.
    The Toolbar content is wrapped in two `div` elements, one for aligning content
    on the left-hand side using `.ui-toolbar-group-left` class and another one for
    aligning content on the right-hand side using the `.ui-toolbar-group-right` class.
    An example of the Toolbar component with different buttons, input controls, and
    text content would be as follows:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: Toolbar 是按钮和其他 Web 资源的分组或容器组件。Toolbar 内容包装在两个 `div` 元素中，一个用于使用 `.ui-toolbar-group-left`
    类在左侧对齐内容，另一个用于使用 `.ui-toolbar-group-right` 类在右侧对齐内容。Toolbar 组件的示例，包括不同的按钮、输入控件和文本内容，如下所示：
- en: '[PRE9]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The following screenshot shows a snapshot result of the Toolbar as an example:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了 Toolbar 的快照结果：
- en: '![](assets/941297a2-251d-4c2f-a16f-fbe77d4c6492.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/941297a2-251d-4c2f-a16f-fbe77d4c6492.png)'
- en: In the preceding snapshot, the commonly used Toolbar buttons are placed on left-hand
    side and secondary (or additional information) placed on the right-hand side.
    The skinning features are provided through the `style` and `styleClass` attributes.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述快照中，常用的 Toolbar 按钮放在左侧，次要（或附加信息）放在右侧。通过 `style` 和 `styleClass` 属性提供了皮肤特性。
- en: The complete demo application with instructions is available on GitHub at
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的演示应用程序及说明可在 GitHub 上找到
- en: '[https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/toolbar](https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/toolbar).'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/toolbar](https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/toolbar).'
- en: Arranging your view with Panels and FieldSets
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Panel 和 FieldSet 排列您的视图
- en: Most websites and dashboards need grouping or container components to highlight
    title and description. PrimeNG offers many variations of container components.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数网站和仪表板需要分组或容器组件来突出标题和描述。PrimeNG 提供了许多容器组件的变体。
- en: Panel
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Panel
- en: 'As a generic grouping component for web content, Panel has features such as
    toggling and custom content. A basic definition of the Panel would be as follows:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 作为 Web 内容的通用分组组件，Panel 具有切换和自定义内容等功能。Panel 的基本定义如下：
- en: '[PRE10]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The preceding definition of the Panel will display PrimeNG details inside the
    container as shown in the following screenshot:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: Panel 的上述定义将在容器内显示 PrimeNG 详细信息，如下屏幕截图所示：
- en: '![](assets/29c6545e-9907-41bc-a3d9-ec4ac4673208.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/29c6545e-9907-41bc-a3d9-ec4ac4673208.png)'
- en: 'The Panel is going to be more user friendly, with toggleable (`toggleable="true"`)
    and custom header content features. The toggleable feature defines the content
    as either expanded or collapsed. The initial state of the Panel content (expanded
    or collapsed) defined with the `collapsed` attribute; by default, the content
    section will be expanded, whereas the customized header and footer is defined
    through the `p-header` and `p-footer` tags which accepts text, images, icons,
    and many more. For example, the customized header with list of PrimeNG resources
    in the form of drop-down would be as follows:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: Panel将更加用户友好，具有可切换（`toggleable="true"`）和自定义标题内容功能。可切换功能将内容定义为展开或折叠。面板内容的初始状态（展开或折叠）由`collapsed`属性定义；默认情况下，内容部分将展开，而自定义的标题和页脚通过`p-header`和`p-footer`标签定义，可以接受文本、图像、图标等。例如，以下是以下拉列表形式显示PrimeNG资源列表的自定义标题的示例：
- en: '![](assets/a2425719-c412-4575-bb70-c9768ecd7ba9.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/a2425719-c412-4575-bb70-c9768ecd7ba9.png)'
- en: We can catch the user actions before toggling and after toggling using `onBeforeToggle`
    and `onAfterToggle` callbacks.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`onBeforeToggle`和`onAfterToggle`回调在切换之前和之后捕获用户操作。
- en: FieldSet
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: FieldSet
- en: 'FieldSet is a grouping component with a content toggle feature. At the top,
    legend defines a caption and draws a box around the body content. The FieldSet
    example with `toggleable` feature would be as follows:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: FieldSet是一个带有内容切换功能的分组组件。在顶部，图例定义了标题并在主体内容周围绘制了一个框。具有`toggleable`功能的FieldSet示例如下：
- en: '[PRE11]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The preceding definition of the FieldSet will be displayed as shown in the
    following screenshot:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 如下所示，前面的FieldSet的定义将显示为以下截图：
- en: '![](assets/fa2b66d1-e871-473e-9049-5d1d0762253a.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/fa2b66d1-e871-473e-9049-5d1d0762253a.png)'
- en: Similar to the Panel component, FieldSet provides a custom legend through the
    `p-header` attribute (that is, the customized header content).
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 与Panel组件类似，FieldSet通过`p-header`属性（即自定义的标题内容）提供了自定义的图例。
- en: The FieldSet caption text is managed by the `legend` property, whereas toggle
    features are controlled by `toggleable` and `collapsed` attributes. There are
    two event callbacks named `onBeforeToggle` and `onAfterToggle` available for any
    custom logic implementation.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: FieldSet的标题文本由`legend`属性管理，而切换功能由`toggleable`和`collapsed`属性控制。有两个名为`onBeforeToggle`和`onAfterToggle`的事件回调可用于任何自定义逻辑实现。
- en: 'The complete demo application with instructions is available on GitHub:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的演示应用程序及说明可在GitHub上找到：
- en: '[https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/panel](https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/panel)'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/panel](https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/panel)'
- en: '[https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/fieldset](https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/fieldset)'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/fieldset](https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/fieldset)'
- en: Vertical stacked panels with Accordion
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 带有手风琴的垂直堆叠面板
- en: 'Accordion is a container component that provides the ability to group contents
    in the form of multiple tabs. The content can be text, images, or any other components.
    All the tab contents are stacked in a vertical order. A basic definition of the
    Accordion component with different versions of Angular details would be as follows:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 手风琴是一个容器组件，可以以多个选项卡的形式对内容进行分组。内容可以是文本、图像或任何其他组件。所有选项卡内容都以垂直顺序堆叠。带有不同版本Angular细节的手风琴组件的基本定义如下：
- en: '[PRE12]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The preceding Accordion will be displayed with vertical panels as shown in
    the following screenshot:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如下所示，前面的手风琴将显示为垂直面板：
- en: '![](assets/4ad75ae0-322c-4fca-807b-815bc554337d.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/4ad75ae0-322c-4fca-807b-815bc554337d.png)'
- en: In the preceding simple example, the Accordion will display the tab contents
    one at a time. There is a provision in the component to display multiple tab contents
    by enabling the `multiple` attribute. The Accordion can be customized with powerful
    features such as customized headers, tab events, default selected tabs, and disabled
    behavior.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的简单示例中，Accordion将一次显示一个选项卡内容。组件中有一个选项可以通过启用`multiple`属性来显示多个选项卡内容。Accordion可以通过强大的功能进行自定义，如自定义标题、选项卡事件、默认选定的选项卡和禁用行为。
- en: 'The customized definition of the Accordion component would be as follows:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义的Accordion组件定义如下：
- en: '[PRE13]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'In the preceding example, the customized header is created with the `p-header`
    tag, which consists of Angular logos and text content. The Accordion will be displayed
    with customized advanced features as shown in the following image:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的示例中，使用`p-header`标签创建了自定义标题，其中包含Angular标志和文本内容。Accordion将显示带有自定义高级功能的内容，如下图所示：
- en: '![](assets/6a6eb8c2-0a37-4dee-84c0-ba46a81007cb.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/6a6eb8c2-0a37-4dee-84c0-ba46a81007cb.png)'
- en: The Accordion component supports two event callbacks named `onOpen` and `onClose`,
    which invoked while opening and closing the tabs, respectively.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: Accordion组件支持两个名为`onOpen`和`onClose`的事件回调，分别在打开和关闭选项卡时调用。
- en: PrimeNG 4.1 release introduced the `activeIndex` property, which defines the
    active tab or an array of indexes to change selected tab programmatically. For
    example, `[activeIndex]="0,1"`. The complete demo application with instructions
    is available on GitHub at
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: PrimeNG 4.1版本引入了`activeIndex`属性，用于定义活动选项卡或要以编程方式更改的索引数组。例如，`[activeIndex]="0,1"`。完整的演示应用程序及说明可在GitHub上找到
- en: '[https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/accordion](https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/accordion).'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/accordion](https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/accordion).'
- en: Grouping content with tabs in TabView
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在TabView中使用选项卡对内容进行分组
- en: 'TabView is a tabbed Panel component to group content in the form of vertical
    and horizontal tabs. The default TabView will display the tabs in horizontal orientation
    and only one tab can be selected at a time to view the content. A basic definition
    of the TabView component would be as follows:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: TabView是一个选项卡面板组件，用于以垂直和水平选项卡的形式对内容进行分组。默认的TabView将以水平方向显示选项卡，并且一次只能选择一个选项卡来查看内容。TabView组件的基本定义如下：
- en: '[PRE14]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The preceding TabView will be displayed with horizontal panels as shown in
    the following screenshot:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的TabView将显示为水平面板，如下面的截图所示：
- en: '![](assets/773c11f7-febc-43f3-ab45-40457f2dc336.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/773c11f7-febc-43f3-ab45-40457f2dc336.png)'
- en: 'Each tab is represented with `p-tabPanel`. The orientation of the tabs can
    be altered using the `orientation` attribute. It supports four different orientations:
    `top`, `bottom`, `left`, and `right`. `Top` is the default orientation.'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 每个选项卡都用`p-tabPanel`表示。可以使用`orientation`属性改变选项卡的方向。它支持四种不同的方向：`top`、`bottom`、`left`和`right`。`top`是默认方向。
- en: The component also supports various other advanced features such as the `closable`
    tabs (`closable="true"`), events (`onChange` to invoke on tab change, `onClose`
    to invoke on tab close), default selection using the `selection` attribute, and
    disable the tabs using the `disabled` attribute.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 该组件还支持各种其他高级功能，如`closable`选项卡（`closable="true"`）、事件（`onChange`在选项卡更改时调用，`onClose`在选项卡关闭时调用）、使用`selection`属性进行默认选择，以及使用`disabled`属性禁用选项卡。
- en: 'The `onChange` event object exposes two attributes which are accessible in
    the component class:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '`onChange`事件对象公开了两个在组件类中可访问的属性：'
- en: '| `onChange` |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| `onChange` |'
- en: '`event.originalEvent`: Native click event'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`event.originalEvent`: 原生点击事件'
- en: '`event.index`: Index of the selected tab'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`event.index`: 选定选项卡的索引'
- en: '|'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE15]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The `onClose` event object exposes three attributes, which are accessible in
    the component class:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '`onClose`事件对象公开了三个属性，在组件类中可以访问：'
- en: '| `onClose` |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '`onClose` |'
- en: '`event.originalEvent`: Native click event'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`event.originalEvent`: 原生点击事件'
- en: '`event.index`: Index of the closed tab'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`event.index`: 关闭选项卡的索引'
- en: '`event.close`: Callback to actually close the tab, only available if `controlClose`
    is enabled'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`event.close`: 回调以实际关闭选项卡，仅在启用`controlClose`时可用'
- en: '|'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE16]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'A customized definition of the TabView component would be as follows:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: TabView组件的自定义定义如下：
- en: '[PRE17]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The preceding TabView will be displayed as shown in the following screenshot:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的TabView将显示如下截图所示：
- en: '![](assets/7e400ef3-fe7a-427d-9b0d-f2f09e4ba243.png)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/7e400ef3-fe7a-427d-9b0d-f2f09e4ba243.png)'
- en: Remember that only the `orientation`, `activeIndex`, `style`, and `styleClass`
    properties applied for the TabView element whereas all other attributes need to
    be defined for the tab Panel element.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，TabView元素只应用`orientation`，`activeIndex`，`style`和`styleClass`属性，而所有其他属性都需要为选项卡面板元素定义。
- en: The complete demo application with instructions is available on GitHub at
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的演示应用程序及说明可在GitHub上找到
- en: '[https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/tabview](https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/tabview).'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/tabview](https://github.com/ova2/angular-development-with-primeng/tree/master/chapter4/tabview).'
- en: Summary
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: At the end of this chapter, you will know how to deal with various Buttons and
    Panel components, depending on given use case. Initially, we covered all kinds
    of Button components. At first, we started with click button variations such as
    Button, RadioButton, and SplitButton components; after that we moved on to select
    value button variations such as ToggleButton and SelectButton components, then
    followed by explaining how to group multiple buttons using the Toolbar component.
    Later, we moved to container components such as various Panel components available
    in PrimeNG suite. The Panel components tour gets started with arranging views
    effectively using Panels and FieldSets, then how to use vertically stacked Accordion
    component, followed by grouping content with multiple tabs inside the TabView
    component.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章结束时，您将了解如何根据给定的用例处理各种按钮和面板组件。最初，我们涵盖了各种按钮组件。首先，我们从点击按钮变体开始，如Button，RadioButton和SplitButton组件；之后，我们转向选择值按钮变体，如ToggleButton和SelectButton组件，然后解释如何使用Toolbar组件将多个按钮分组。稍后，我们转向PrimeNG套件中提供的各种面板组件。面板组件之旅从有效地安排视图开始，使用Panels和FieldSets，然后介绍如何使用垂直堆叠的Accordion组件，以及如何在TabView组件内部使用多个选项卡对内容进行分组。
- en: The next chapter will give a detailed insight on data iteration components such
    as DataTable, export CSV data, DataList, OrderList, PickList, Schedule, and followed
    by tree hierarchical components such as Tree and TreeTable components. All these
    components explained with all possible features in a step-by-step approach.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将详细介绍数据迭代组件，如DataTable，导出CSV数据，DataList，OrderList，PickList，Schedule，以及树形分层组件，如Tree和TreeTable组件。所有这些组件都将以逐步的方式解释其所有可能的特性。
