["```js\n    $ cp -R ch18 ch19\n    ```", "```js\n    $ npm install -g vercel@33.5.3\n    ```", "```js\n    $ vercel\n    ```", "```js\n    $ mongosh \"<connection-string>\"\n    ```", "```js\n    > db.posts.drop()\n    > db.users.drop()\n    ```", "```js\n    $ vercel\n    ```", "```js\n    $ vercel --prod\n    ```", "```js\n    /** @type {import('next').NextConfig} */\n    const nextConfig = {\n      output: 'standalone',\n    }\n    export default nextConfig\n    ```", "```js\n    node_modules\n    .env*\n    .vscode\n    .git\n    ```", "```js\n    FROM node:20 AS base\n    ```", "```js\n    FROM base AS build\n    ```", "```js\n    WORKDIR /app\n    COPY package.json .\n    COPY package-lock.json .\n    ```", "```js\n    RUN npm install\n    RUN npm install sharp\n    ```", "```js\n    COPY . .\n    ```", "```js\n    ARG DATABASE_URL\n    ARG JWT_SECRET\n    ARG BASE_URL\n    ```", "```js\n    RUN npm run build\n    ```", "```js\n    FROM base AS final\n    ```", "```js\n    WORKDIR /app\n    ```", "```js\n    RUN addgroup --system --gid 1001 nodejs\n    RUN adduser --system --uid 1001 nextjs\n    ```", "```js\n    COPY --from=build /app/public ./public\n    RUN mkdir -p .next\n    RUN chown nextjs:nodejs .next\n    COPY --from=build /app/.next/standalone ./\n    COPY --from=build /app/.next/static ./.next/static\n    ```", "```js\n    EXPOSE 3000\n    ENV PORT 3000\n    ENV HOSTNAME \"0.0.0.0\"\n    ENV NODE_ENV production\n    ```", "```js\n    USER nextjs\n    CMD [\"node\", \"server.js\"]\n    ```", "```js\n    $ docker build \\\n      -t blog-nextjs \\\n      --build-arg \"DATABASE_URL=mongodb://host.docker.internal:27017/blog\" \\\n      --build-arg \"JWT_SECRET=replace-with-random-secret\" \\\n      --build-arg \"BASE_URL=http://localhost:3000\" \\\n    blog-nextjs as the name for our image and the necessary environment variables for building the image. Do not forget the dot (.) at the end of the command, as that is what specifies the build context, including where to look for the Dockerfile!\n    ```", "```js\n    $ docker run \\\n      -d \\\n      --name blog-app \\\n      -p 3000:3000 \\\n      -e \"DATABASE_URL=mongodb://host.docker.internal:27017/blog\" \\\n      -e \"JWT_SECRET=replace-with-random-secret\" \\\n      -e \"BASE_URL=http://localhost:3000\" \\\n      --restart unless-stopped \\\n    blog-app in the background (daemon mode) published to port 3000, then specified the environment variables and told Docker to restart the container if it crashes. Lastly, we specified the image name, which is blog-nextjs (the image we built in the previous step).\n    ```"]