- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: NgRx is an implementation of the popular pattern, Redux, that's meant for use
    with Angular. It is entirely possible to create an Angular application without
    NgRx. You might even be very successful in doing so. There are situations, though,
    where Redux can really help; you can get that help by using NgRx.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: NgRx 是 Redux 流行模式的实现，旨在与 Angular 一起使用。完全有可能创建一个不使用 NgRx 的 Angular 应用程序。你甚至可能会在这方面非常成功。然而，在某些情况下，Redux
    确实可以提供帮助；你可以通过使用 NgRx 来获得这种帮助。
- en: So, what is Redux and when do we need it? Redux is about adding predictability
    to your app. Predictability is about knowing who did what to the state in your
    application.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，什么是 Redux，我们何时需要它呢？Redux 是关于给你的应用程序增加可预测性。可预测性意味着知道谁在应用程序中对状态做了什么。
- en: Single source of truth is a concept that Redux lives up to as it promotes adding
    all your data to one store. At any given moment, you will be able to tell what
    state your application is in. This is great if you want to save the state and
    come back to it (also called rehydration) like you would in a game where you create
    a save point and later resume your game from that save point.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 单一的真实来源是一个 Redux 实现的概念，因为它促进了将所有数据添加到一个存储中。在任何给定时刻，你都将能够了解你的应用程序处于什么状态。如果你想在游戏中创建一个保存点并稍后从该保存点恢复游戏，那么保存状态并返回到它是非常好的（也称为重新水合）。
- en: It's not only about having a single source of truth; it's also about knowing
    who is allowed to change the content, or the state, of the store. A challenge
    you often face is that as an application grows, you need to add a lot of views
    and controllers, you gradually lose the overview of what code affects what state
    in the application. Redux helps you with this by ensuring that a view can't change
    the state directly but will have to dispatch actions that represent the intent
    of how you want the state to change.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这不仅关乎有一个单一的真实来源；还关乎知道谁被允许更改存储的内容或状态。你经常面临的一个挑战是，随着应用程序的增长，你需要添加许多视图和控制台，你逐渐失去了对哪些代码影响应用程序中哪些状态的全面了解。Redux
    通过确保视图不能直接更改状态，而必须发出代表你希望状态如何更改的意图的操作来帮助你解决这个问题。
- en: Another thing that might happen is that a lot of user interaction kicks off
    a lot of changes to the state. Some of those actions should lead to immediate
    changes and some lead to asynchronous actions that will eventually change the
    state of the application. The important thing at this point is that we ensure
    that all those changes happen in the right order. Redux helps us with that by
    queuing up all the actions and ensures that our app changes its state in a predictable
    way.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个可能发生的情况是，大量的用户交互会触发对状态的许多更改。其中一些操作应导致立即更改，而另一些则导致最终会改变应用程序状态的异步操作。在这个阶段，重要的是确保所有这些更改都按正确的顺序发生。Redux
    通过排队所有操作并确保我们的应用程序以可预测的方式更改状态来帮助我们做到这一点。
- en: A very important aspect of Redux is that when it changes the state, it does
    not mutate it. It replaces the state with a copy of the old state, but with the
    latest action applied to it. If we take our game analogy again, imagine that you
    have a game and you want to add a potion to your backpack. When you do that in
    Redux, we replace the main character; we replace it with a main character that
    has a potion in its backpack. The fact that we do things this way makes it easy
    for us to remember each previous state and return to an earlier state if we need
    to, which is known as time-travel-debugging. To enable us to replace the previous
    state with a new state, we are using something called pure functions. Pure functions
    ensure that we only create a copy of the data instead of mutating it.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Redux 的一个非常重要的方面是，当它更改状态时，它不会对其进行修改。它用旧状态的副本替换状态，但应用了最新的操作。如果我们再次使用我们的游戏类比，想象一下你有一个游戏，你想要在你的背包中添加一瓶药水。当你在
    Redux 中这样做时，我们替换了主要角色；我们用背包里有药水的主要角色来替换它。我们这样做的事实使得我们很容易记住每个先前的状态，并在需要时返回到较早的状态，这被称为时间旅行调试。为了使我们能够用新状态替换旧状态，我们正在使用一种称为纯函数的东西。纯函数确保我们只创建数据的副本，而不是对其进行修改。
- en: There are a lot of benefits to knowing what state your app contains at a given
    point. However, not all the state in your app will need Redux. It comes down to
    preference. Some prefer to put all the state in the store, some prefer to put
    some state in the store, and some other state is fine if it only lives as local
    state in a specific component. Think of it this way, if you were to restore your
    app, what state would be okay to lose; the answer may be a drop-down selection
    made or something else, if anything. Having everything in the store will ensure
    that you don't, by mistake, make extra Ajax calls if the store already holds the
    data, so it is a way of helping you with caching as well.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 了解应用在特定时刻包含的状态有很多好处。然而，并非应用中的所有状态都需要Redux。这取决于个人偏好。有些人喜欢将所有状态放入存储中，有些人喜欢将部分状态放入存储中，而有些状态如果只作为特定组件的本地状态存在也是可以的。可以这样想，如果你要恢复应用，哪些状态是可以丢失的；答案可能是下拉选择或其他，如果有的话。将所有内容放入存储中可以确保你不会因为错误地调用额外的Ajax请求，如果存储中已经持有数据，因此这也是一种帮助你缓存的方式。
- en: Who this book is for
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书面向的对象
- en: This book is intended for Angular developers who have written an app or two
    and are looking for a more structured way to handle data management. This means
    you ideally have a decent grasp of JavaScript, HTML, and CSS and know how to scaffold
    an Angular application using angular-cli, and you also know how to make AJAX requests
    using the HttpClient service in Angular.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书旨在为编写过一个或两个应用的Angular开发者提供帮助，他们正在寻找一种更结构化的方式来处理数据管理。这意味着你理想情况下应该对JavaScript、HTML和CSS有相当的了解，知道如何使用angular-cli搭建Angular应用，并且知道如何使用Angular的HttpClient服务进行Ajax请求。
- en: What this book covers
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书涵盖的内容
- en: '[Chapter 1](6a4e361c-0567-4d80-b889-2643e199c96a.xhtml), *Quick Look Back at
    Data Services for Simple Apps*, covers how to work with services and how Angular
    dependency injection helps out. It also brings up the MVC pattern and discusses
    cohesion and coupling.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[第1章](6a4e361c-0567-4d80-b889-2643e199c96a.xhtml)，*简单应用的快速回顾数据服务*，介绍了如何使用服务和Angular依赖注入如何提供帮助。它还提到了MVC模式，并讨论了内聚性和耦合性。'
- en: '[Chapter 2](81d377c1-aafe-4eff-a7cd-a1b64629454c.xhtml), *1.21 Gigawatt – Flux
    Pattern Explained*, teaches what the Flux pattern is and what concepts it consists
    of. It shows how to implement the Flux pattern using stores, a dispatcher, and
    several views.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[第2章](81d377c1-aafe-4eff-a7cd-a1b64629454c.xhtml)，*1.21吉瓦——Flux模式解释*，讲解了Flux模式是什么以及它包含哪些概念。它展示了如何使用存储、分发器和几个视图来实现Flux模式。'
- en: '[Chapter 3](fb400b4b-5f47-4df8-96e8-ec0032370c66.xhtml), *Asynchronous Programming*,
    looks at what asynchronous means and talks about callbacks, promises, async/await,
    and how the async library can help us create order in our asynchronous code.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[第3章](fb400b4b-5f47-4df8-96e8-ec0032370c66.xhtml)，*异步编程*，探讨了异步的含义，并讨论了回调、承诺、async/await以及异步库如何帮助我们创建有序的异步代码。'
- en: '[Chapter 4](8b39d931-ad22-4fea-8856-ab22c8cb077a.xhtml), *Functional Reactive
    Programming*, compares declarative and imperative programming and looks at a subset
    of declarative programming, functional programming. We drill down into certain
    properties of functional programming, such as higher-order functions, immutability,
    and recursion. Furthermore, we look at how to make code reactive and what reactive
    means.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[第4章](8b39d931-ad22-4fea-8856-ab22c8cb077a.xhtml)，*函数式响应式编程*，比较了声明式和命令式编程，并查看声明式编程的一个子集——函数式编程。我们深入探讨了函数式编程的某些特性，如高阶函数、不可变性和递归。此外，我们探讨了如何使代码响应式以及响应式的含义。'
- en: '[Chapter 5](84bb33e0-d186-4abe-9b3f-10ba1ae911c8.xhtml), *RxJS Basics*, introduces
    the RxJS library. Furthermore, it brings up concepts such as Observable, Producer,
    and Observer. It further discusses how the Observable is the asynchronous concept
    that we need to unify all our asynchronous concepts into one. We also touch on
    operators and what they are. Lastly, we attempt to build our own micro implementation
    of RxJS to further understand what''s going on under the hood.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[第5章](84bb33e0-d186-4abe-9b3f-10ba1ae911c8.xhtml)，*RxJS基础*，介绍了RxJS库。此外，它还提出了诸如可观察对象、生产者和观察者等概念。它进一步讨论了可观察对象是如何将所有异步概念统一为一个异步概念。我们还涉及到操作符及其含义。最后，我们尝试构建自己的RxJS微实现，以进一步理解底层的工作原理。'
- en: '[Chapter 6](887ffe0b-5c42-47b8-9fd7-9e13e4a8d0a4.xhtml), *Manipulating Stream
    and Their Values*, focuses a lot on educating the reader on operators, the thing
    that gives RxJS its power. The reader should leave this chapter with a lot more
    knowledge about how to manipulate data as well as Observables.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[第6章](887ffe0b-5c42-47b8-9fd7-9e13e4a8d0a4.xhtml)，*操作流及其值*，着重于教育读者了解操作符，这是RxJS获得其力量的关键。读者应该带着更多关于如何操作数据和Observables的知识离开这一章。'
- en: '[Chapter 7](f9ddd481-07d2-4008-a72d-384454489d5b.xhtml), *RxJS Advanced*, goes
    deeper and tries to explain more advanced concepts in RxJS, such as hot and cold
    Observables, subjects, error handling, and how to test your RxJS code with Marble
    testing.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](f9ddd481-07d2-4008-a72d-384454489d5b.xhtml)，*RxJS高级*，深入探讨了RxJS中更高级的概念，例如热和冷Observables、subjects、错误处理，以及如何使用Marble测试来测试您的RxJS代码。'
- en: '[Chapter 8](e29180be-1bdf-4fdb-805b-333607fd6e0d.xhtml), *Redux*, demonstrates
    the Redux pattern and explains how it came from the Flux pattern and improved
    upon some of its paradigms and concepts. The reader will learn how it works in
    practice by learning to build their own Redux and also using the same, involving
    a couple of views.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[第8章](e29180be-1bdf-4fdb-805b-333607fd6e0d.xhtml)，*Redux*，展示了Redux模式，并解释了它是如何从Flux模式演变而来，并改进了一些其范式和概念。读者将通过学习构建自己的Redux以及使用相同的模式，包括几个视图，来了解它在实践中的工作方式。'
- en: '[Chapter 9](f57e66b8-c58d-4735-90fb-0d0e9638e8a5.xhtml), *NgRx – Reduxing that
    Angular App*, explores what NgRx is and what it consists of. It also shows the
    reader how to put it in to use by adding it to an Angular application. Concepts
    such as store are explained and demoed, and the reader will learn how to debug
    and handle side effects with the Effects library.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章](f57e66b8-c58d-4735-90fb-0d0e9638e8a5.xhtml)，*NgRx – Reduxing that Angular
    App*，探讨了NgRx是什么以及它由什么组成。它还向读者展示了如何将其添加到Angular应用程序中以投入使用。解释并演示了诸如store等概念，读者将学习如何使用Effects库进行调试和处理副作用。'
- en: '[Chapter 10](3b2b35d3-b023-468d-814d-d76907110933.xhtml)*, NgRx – In Depth*,
    covers the Entity library, which allows you to write way less code by reducing
    a lot of boilerplate. It also shows how you can put a router''s state in the store.
    Furthermore, we look at how to test NgRx, how to build it yourself, and lastly,
    we cover Schematics, which will help us further by allowing us to scaffold the
    most common constructs we need to work with in NgRx.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[第10章](3b2b35d3-b023-468d-814d-d76907110933.xhtml)*，NgRx – In Depth*，涵盖了Entity库，它通过减少大量样板代码，允许你编写更少的代码。它还展示了如何将路由的状态放入store中。此外，我们探讨了如何测试NgRx，如何自己构建它，最后，我们涵盖了Schematics，这将通过允许我们构建在NgRx中需要工作的最常见结构来进一步帮助我们。'
- en: To get the most out of this book
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为了最大限度地利用本书
- en: This book is about building Angular applications using NGRX. To get the most
    out of the book you need a basic understanding of the Angular framework and should
    be able to scaffold an Angular application using the Angular-CLI or be able to
    set up an Angular project through Webpack, if that is your preferred way. It's
    good to have a decent understanding of JavaScript and TypeScript. Most of all
    a curious mind is really all you need. It's a good idea to have NodeJs installed
    on your machine.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 本书是关于使用NGRX构建Angular应用程序的。为了最大限度地利用本书，您需要对Angular框架有一个基本的了解，并且应该能够使用Angular-CLI构建Angular应用程序，或者如果您更喜欢这种方式，能够通过Webpack设置Angular项目。对JavaScript和TypeScript有一个良好的理解是很好的。最重要的是，一个好奇的心是您真正需要的。在您的机器上安装NodeJs是个好主意。
- en: Download the example code files
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from your account at [www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[www.packtpub.com](http://www.packtpub.com)的账户下载此书的示例代码文件。如果您在其他地方购买了此书，您可以访问[www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便将文件直接通过电子邮件发送给您。
- en: 'You can download the code files by following these steps:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过以下步骤下载代码文件：
- en: Log in or register at [www.packtpub.com](http://www.packtpub.com/support).
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[www.packtpub.com](http://www.packtpub.com/support)登录或注册。
- en: Select the SUPPORT tab.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择SUPPORT标签。
- en: Click on Code Downloads & Errata.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击代码下载与勘误。
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在搜索框中输入书籍名称，并遵循屏幕上的说明。
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 文件下载后，请确保使用最新版本的软件解压缩或提取文件夹：
- en: WinRAR/7-Zip for Windows
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows上的WinRAR/7-Zip
- en: Zipeg/iZip/UnRarX for Mac
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mac上的Zipeg/iZip/UnRarX
- en: 7-Zip/PeaZip for Linux
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux 下的 7-Zip/PeaZip
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Architecting-Angular-Applications-with-Redux-RxJs-and-NgRx](https://github.com/PacktPublishing/Architecting-Angular-Applications-with-Redux-RxJs-and-NgRx).
    We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 本书代码包也托管在 GitHub 上，网址为 [https://github.com/PacktPublishing/Architecting-Angular-Applications-with-Redux-RxJs-and-NgRx](https://github.com/PacktPublishing/Architecting-Angular-Applications-with-Redux-RxJs-and-NgRx)。我们还有其他来自我们丰富图书和视频目录的代码包，可在
    **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**
    上找到。去看看吧！
- en: Conventions used
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用了多种文本约定。
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "We need to install `webpack` by typing the following in our
    terminal."'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '`CodeInText`：表示文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟 URL、用户输入和 Twitter 账号。以下是一个示例：“我们需要在终端中键入以下内容来安装
    `webpack`。”'
- en: 'A block of code is set as follows:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望您注意代码块中的特定部分时，相关的行或项目将以粗体显示：
- en: '[PRE1]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都按以下方式编写：
- en: '[PRE2]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "Let''s add an item to our store by adding a value to our input
    element and pressing the Save button."'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**：表示新术语、重要单词或您在屏幕上看到的单词。例如，菜单或对话框中的单词在文本中显示如下。以下是一个示例：“让我们通过向我们的输入元素添加一个值并按保存按钮来向我们的存储中添加一个条目。”'
- en: Warnings or important notes appear like this.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要提示如下所示。
- en: Tips and tricks appear like this.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 小技巧和技巧如下所示。
- en: Get in touch
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们始终欢迎读者的反馈。
- en: '**General feedback**: Email `feedback@packtpub.com` and mention the book title
    in the subject of your message. If you have questions about any aspect of this
    book, please email us at `questions@packtpub.com`.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**总体反馈**：请发送电子邮件至 `feedback@packtpub.com`，并在邮件主题中提及书籍标题。如果您对本书的任何方面有疑问，请通过电子邮件联系我们的
    `questions@packtpub.com`。'
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**勘误**：尽管我们已经尽最大努力确保内容的准确性，但错误仍然可能发生。如果您在这本书中发现了错误，我们将不胜感激，如果您能向我们报告这一错误。请访问
    [www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata)，选择您的书籍，点击勘误提交表单链接，并输入详细信息。'
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packtpub.com` with a
    link to the material.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**盗版**：如果您在互联网上以任何形式发现我们作品的非法副本，我们将不胜感激，如果您能向我们提供位置地址或网站名称。请通过电子邮件联系我们的 `copyright@packtpub.com`，并提供材料的链接。'
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您有兴趣成为作者**：如果您在某个领域有专业知识，并且您有兴趣撰写或为书籍做出贡献，请访问 [authors.packtpub.com](http://authors.packtpub.com/)。'
- en: Reviews
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评论
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 请留下评论。一旦您阅读并使用过这本书，为什么不在这本书购买的网站上留下评论呢？潜在读者可以查看并使用您的客观意见来做出购买决定，Packt 可以了解您对我们产品的看法，我们的作者也可以看到他们对书籍的反馈。谢谢！
- en: For more information about Packt, please visit [packtpub.com](https://www.packtpub.com/).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如需了解 Packt 的更多信息，请访问 [packtpub.com](https://www.packtpub.com/)。
