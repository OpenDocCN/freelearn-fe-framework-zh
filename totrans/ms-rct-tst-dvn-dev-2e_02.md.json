["```js\n    describe(\"AppointmentsDayView\", () => {\n      let container;\n      beforeEach(() => {\n        container = document.createElement(\"div\");\n        document.body.replaceChildren(container);\n      });\n      const render = (component) =>\n        act(() =>      \n          ReactDOM.createRoot(container).render(component)\n        );\n      it(\"renders a div with the right id\", () => {\n        render(<AppointmentsDayView appointments={[]} />);\n        expect(\n          document.querySelector(\n            \"div#appointmentsDayView\"\n          )\n        ).not.toBeNull();\n      });\n    });\n    ```", "```js\n    FAIL test/Appointment.test.js\n      Appointment\n    ✓ renders the customer first name (18ms)\n    ✓ renders another customer first name (2ms)\n      AppointmentsDayView\n    ✕ renders a div with the right id (7ms)\n    ● AppointmentsDayView › renders a div with the right id\n        ReferenceError: AppointmentsDayView is not defined\n    ```", "```js\n    import {\n      Appointment,\n      AppointmentsDayView,\n    } from \"../src/Appointment\";\n    ```", "```js\n    export const AppointmentsDayView = () => {};\n    ```", "```js\n    ● AppointmentsDayView › renders a div with the right id\n    expect(received).not.toBeNull()\n    ```", "```js\n    export const AppointmentsDayView = () => (\n      <div id=\"appointmentsDayView\"></div>\n    );\n    ```", "```js\n    it(\"renders an ol element to display appointments\", () => {\n      render(<AppointmentsDayView appointments={[]} />);\n      const listElement = document.querySelector(\"ol\");\n      expect(listElement).not.toBeNull();\n    });\n    ```", "```js\n    ● AppointmentsDayView › renders an ol element to display appointments\n    expect(received).not.toBeNull()\n    Received: null\n    ```", "```js\n    export const AppointmentsDayView = () => (\n      <div id=\"appointmentsDayView\"> \n        <ol />\n      </div>\n    );\n    ```", "```js\n    it(\"renders an li for each appointment\", () => {\n      const today = new Date();\n      const twoAppointments = [\n        { startsAt: today.setHours(12, 0) },\n        { startsAt: today.setHours(13, 0) },\n      ];\n      render(\n        <AppointmentsDayView \n          appointments={twoAppointments}\n        />\n      );\n      const listChildren =\n        document.querySelectorAll(\"ol > li\");\n      expect(listChildren).toHaveLength(2);\n    });\n    ```", "```js\n    ● AppointmentsDayView › renders an li for each appointment\n    expect(received).toHaveLength(expected)\n    Expected length: 2\n    Received length: 0\n    Received object: []\n    ```", "```js\n    export const AppointmentsDayView = (\n      { appointments }\n    ) => (\n      <div id=\"appointmentsDayView\"> \n        <ol>\n          {appointments.map(() => (\n            <li />\n          ))}\n        </ol>\n      </div>\n    );\n    ```", "```js\n      console.error\n        Warning: Each child in a list should have a unique \"key\" prop.\n        Check the render method of AppointmentsDayView.\n        ...\n    PASS test/Appointment.test.js\n      Appointment\n    ✓ renders the customer first name (19ms)\n    ✓ renders another customer first name (2ms)\n      AppointmentsDayView\n    ✓ renders a div with the right id (7ms)\n    ✓ renders an ol element to display appointments (16ms)\n    ✓ renders an li for each appointment (16ms)\n    ```", "```js\n    <ol>\n      {appointments.map(appointment => (\n        <li key={appointment.startsAt} />\n      ))}\n    </ol>\n    ```", "```js\n    it(\"renders the time of each appointment\", () => {\n      const today = new Date();\n      const twoAppointments = [\n        { startsAt: today.setHours(12, 0) },\n        { startsAt: today.setHours(13, 0) },\n      ];\n      render(\n        <AppointmentsDayView \n          appointments={twoAppointments}\n        />\n      );\n      const listChildren = \n        document.querySelectorAll(\"li\");\n      expect(listChildren[0].textContent).toEqual(\n        \"12:00\"\n      );\n      expect(listChildren[1].textContent).toEqual(\n        \"13:00\"\n      );\n    });\n    ```", "```js\n● AppointmentsDayView › renders the time of each appointment\nexpect(received).toEqual(expected) // deep equality\nExpected: \"12:00\"\nReceived: \"\"\n```", "```js\n    const appointmentTimeOfDay = (startsAt) => {\n      const [h, m] = new Date(startsAt)\n        .toTimeString()\n        .split(\":\");\n      return `${h}:${m}`;\n    }\n    ```", "```js\n    <ol>\n      {appointments.map(appointment => (\n        <li key={appointment.startsAt}>\n          {appointmentTimeOfDay(appointment.startsAt)}\n        </li>\n      ))}\n    </ol>\n    ```", "```js\n    PASS test/Appointment.test.js\n      Appointment\n    ✓ renders the customer first name (19ms)\n    ✓ renders another customer first name (2ms)\n      AppointmentsDayView\n    ✓ renders a div with the right id (7ms)\n    ✓ renders an ol element to display appointments (16ms)\n    ✓ renders an li for each appointment (6ms)\n    ✓ renders the time of each appointment (3ms)\n    ```", "```js\n    it(\"initially shows a message saying there are no appointments today\", () => {\n      render(<AppointmentsDayView appointments={[]} />);\n      expect(document.body.textContent).toContain(\n        \"There are no appointments scheduled for today.\"\n      );\n    });\n    ```", "```js\n    return (\n      <div id=\"appointmentsDayView\">\n        ...\n        <p>There are no appointments scheduled for today.</p>\n      </div>\n    );\n    ```", "```js\n    it(\"selects the first appointment by default\", () => {\n      render(\n        <AppointmentsDayView \n          appointments={twoAppointments}\n        />\n      );\n      expect(document.body.textContent).toContain(\n        \"Ashley\"\n      );\n    });\n    ```", "```js\n    const twoAppointments = [\n      {\n        startsAt: today.setHours(12, 0),\n        customer: { firstName: \"Ashley\" },\n      },\n      {\n        startsAt: today.setHours(13, 0),\n        customer: { firstName: \"Jordan\" },\n      },\n    ];\n    ```", "```js\n    <div id=\"appointmentsDayView\">\n      ...\n      {appointments.length === 0 ? (\n        <p>There are no appointments scheduled for today.</p>\n      ) : (\n        <Appointment {...appointments[0]} />\n      )}\n    </div>\n    ```", "```js\n    it(\"has a button element in each li\", () => {\n      render(\n        <AppointmentsDayView \n          appointments={twoAppointments}\n        />\n      );\n      const buttons =\n       document.querySelectorAll(\"li > button\");\n      expect(buttons).toHaveLength(2);\n      expect(buttons[0].type).toEqual(\"button\");\n    });\n    ```", "```js\n    ...\n    <li key={appointment.startsAt}>\n      <button type=\"button\">\n        {appointmentTimeOfDay(appointment.startsAt)}\n      </button>\n    </li>\n    ...\n    ```", "```js\n    it(\"renders another appointment when selected\", () => {\n      render(\n        <AppointmentsDayView \n          appointments={twoAppointments}\n        />\n      );\n      const button = \n        document.querySelectorAll(\"button\")[1];\n      act(() => button.click());\n      expect(document.body.textContent).toContain(\n        \"Jordan\"\n      );\n    });\n    ```", "```js\n    ● AppointmentsDayView › renders appointment when selected\n        expect(received).toContain(expected)\n\n        Expected substring: \"Jordan\"\n        Received string:    \"12:0013:00Ashley\"\n    ```", "```js\n    import React, { useState } from \"react\";\n    ```", "```js\n    export const AppointmentsDayView = (\n      { appointments }\n    ) => {\n      return (\n        <div id=\"appointmentsDayView\">\n          ...\n        </div>\n      );\n    };\n    ```", "```js\n    const [selectedAppointment, setSelectedAppointment] =\n      useState(0);\n    ```", "```js\n    <div id=\"appointmentsDayView\">\n      ...\n      <Appointment\n        {...appointments[selectedAppointment]}\n      />\n    </div>\n    ```", "```js\n    {appointments.map((appointment, i) => (\n      <li key={appointment.startsAt}>\n        <button type=\"button\">\n          {appointmentTimeOfDay(appointment.startsAt)}\n        </button>\n      </li>\n    ))}\n    ```", "```js\n    <button\n      type=\"button\"\n      onClick={() => setSelectedAppointment(i)}\n    >\n    ```", "```js\n    PASS test/Appointment.test.js\n      Appointment\n        ✓ renders the customer first name (18ms)\n        ✓ renders another customer first name (2ms)\n      AppointmentsDayView\n        ✓ renders a div with the right id (7ms)\n        ✓ renders multiple appointments in an ol element (16ms)\n        ✓ renders each appointment in an li (4ms)\n        ✓ initially shows a message saying there are no appointments today (6ms)\n        ✓ selects the first element by default (2ms)\n        ✓ has a button element in each li (2ms)\n        ✓ renders another appointment when selected (3ms)\n    ```", "```js\nconst today = new Date();\nconst at = (hours) => today.setHours(hours, 0);\nexport const sampleAppointments = [\n  { startsAt: at(9), customer: { firstName: \"Charlie\" } },\n  { startsAt: at(10), customer: { firstName: \"Frankie\" } },\n  { startsAt: at(11), customer: { firstName: \"Casey\" } },\n  { startsAt: at(12), customer: { firstName: \"Ashley\" } },\n  { startsAt: at(13), customer: { firstName: \"Jordan\" } },\n  { startsAt: at(14), customer: { firstName: \"Jay\" } },\n  { startsAt: at(15), customer: { firstName: \"Alex\" } },\n  { startsAt: at(16), customer: { firstName: \"Jules\" } },\n  { startsAt: at(17), customer: { firstName: \"Stevie\" } },\n];\n```", "```js\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { AppointmentsDayView } from \"./Appointment\";\nimport { sampleAppointments } from \"./sampleData\";\nReactDOM.createRoot(\n  document.getElementById(\"root\")\n).render(\n  <AppointmentsDayView appointments={sampleAppointments} />\n);\n```", "```js\n    npm install --save-dev webpack webpack-cli babel-loader\n    ```", "```js\n    \"build\": \"webpack\",\n    ```", "```js\n    const path = require(\"path\");\n    const webpack = require(\"webpack\");\n    module.exports = {\n      mode: \"development\",\n      module: {\n        rules: [\n          {\n            test: /\\.(js|jsx)$/,\n            exclude: /node_modules/,\n            loader: \"babel-loader\",\n          },\n        ],\n      },\n    };\n    ```", "```js\n    mkdir dist\n    touch dist/index.xhtml\n    ```", "```js\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <title>Appointments</title>\n      </head>\n      <body>\n        <div id=\"root\"></div>\n        <script src=\"img/main.js\"></script>\n      </body>\n    </html>\n    ```", "```js\n    npm run build\n    ```", "```js\nmodules by path ./src/*.js 2.56 KiB\n  ./src/index.js 321 bytes [built] [code generated]\n  ./src/Appointment.js 1.54 KiB [built] [code generated]\n  ./src/sampleData.js 724 bytes [built] [code generated]\nwebpack 5.65.0 compiled successfully in 1045 ms\n```"]