- en: '*Chapter 6*: Improving Your Site''s Search Engine Optimization'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第六章*：提升你的网站搜索引擎优化'
- en: In this chapter, you will learn about how **search engine optimization** (**SEO**)
    works, what search engines look for within your site pages, and how to improve
    your site's presence on the web. We will also dive into other uses of metadata
    to make visually enticing social share previews for your site. By the end of this
    chapter, you will have created a reusable SEO component to provide meta information
    on every page. We will also create a sitemap to make it easier for search engines
    to understand our site. Finally, we will also learn how to stop our site from
    appearing in search engines if you would rather not have it publicly visible.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将了解搜索引擎优化（**SEO**）是如何工作的，搜索引擎在你的网站页面中寻找什么，以及如何提高你的网站在网上的存在感。我们还将深入了解其他元数据的使用，以制作视觉吸引人的社交分享预览。到本章结束时，你将创建一个可重复使用的SEO组件，为每个页面提供元信息。我们还将创建一个站点地图，以便搜索引擎更容易理解我们的网站。最后，我们还将学习如何阻止你的网站在搜索引擎中显示，如果你不希望它公开可见。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Introducing SEO
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍SEO
- en: Creating an SEO component
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建SEO组件
- en: Exploring meta previews
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索元预览
- en: Learning about XML sitemaps
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解XML站点地图
- en: Hiding your site from search engines
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隐藏你的网站不被搜索引擎收录
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To complete this chapter, you will need to have completed [*Chapter 5*](B15983_05_ePub_RK.xhtml#_idTextAnchor080),
    *Working with Images*.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成本章，你需要已经完成了[*第五章*](B15983_05_ePub_RK.xhtml#_idTextAnchor080)，*与图像一起工作*。
- en: The code for this chapter can be found at [https://github.com/PacktPublishing/Elevating-React-Web-Development-with-Gatsby-4/tree/main/Chapter06](https://github.com/PacktPublishing/Elevating-React-Web-Development-with-Gatsby-4/tree/main/Chapter06).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码可以在[https://github.com/PacktPublishing/Elevating-React-Web-Development-with-Gatsby-4/tree/main/Chapter06](https://github.com/PacktPublishing/Elevating-React-Web-Development-with-Gatsby-4/tree/main/Chapter06)找到。
- en: Introducing SEO
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍SEO
- en: SEO is the practice of improving the chances of search engines such as Google,
    Bing, and Yahoo, recommending your site's content to users as the best result
    for a given query or problem.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: SEO是提高搜索引擎如Google、Bing和Yahoo推荐你的网站内容作为给定查询或问题的最佳结果的实践。
- en: Important Note
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Within this chapter, you will get an overview of what SEO is, why it's important,
    and how to implement pages with components that boost their SEO ranking. SEO is
    a vast subject and not something that can be covered in its entirety within this
    book. As such, you are encouraged to take what you learn in this chapter and build
    on it through your research.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将了解什么是SEO，为什么它很重要，以及如何实现包含提升SEO排名组件的页面。SEO是一个庞大的主题，本书无法全面涵盖。因此，我们鼓励你将本章学到的知识通过研究来进一步拓展。
- en: Google will be the search engine that this chapter focuses on. Google has a
    92% share of the search engine market worldwide. With all other search engines
    combined, taking less than a 10% share of the search engine market, there is no
    doubt that Google is dominating this space. Because of this, it is the logical
    search engine to gear this chapter toward.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Google将是本章关注的搜索引擎。Google在全球搜索引擎市场占有92%的份额。与其他所有搜索引擎合并，市场份额不到10%，毫无疑问，Google正在主导这个领域。正因为如此，将本章内容针对Google是合乎逻辑的。
- en: 'If you want search engines to recommend your content, there is a trinity of
    tasks that need to be worked on in tandem:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望搜索引擎推荐你的内容，有三个任务需要协同工作：
- en: Ensuring your content can be discovered by search engine web crawlers.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保你的内容可以被搜索引擎的网络爬虫发现。
- en: Showing search engines that you're a trustworthy source of information.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向搜索引擎展示你是一个值得信赖的信息来源。
- en: Making your content user-friendly and inviting with a great UX, content hierarchy,
    and multimedia.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过优秀的UX、内容层次结构和多媒体，使你的内容对用户友好且吸引人。
- en: By investing time in implementing and improving these three things, the search
    engine will give you the most precious form of traffic – **organic traffic**.
    The best part? It's free! When Google shows your site as a part of a results page,
    you do not pay for its ranking or when it is clicked.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 通过投入时间实施和改进这三件事，搜索引擎将给你最宝贵的流量形式——**有机流量**。最好的部分？它是免费的！当Google将你的网站作为结果页面的一部分展示时，你不需要为其排名或点击付费。
- en: So, what's in it for the search engine? Ads and sponsors. Whenever search users
    search on Google, you will also be presented with results from sponsors that have
    been paid for, and occasionally personalized ads too. This is how search engines
    make their money and to keep their revenue stream consistent, they need you to
    keep coming back. To do that, they need to make sure that they bring you the best
    possible content for your search so that you use them again for your next search.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，这对搜索引擎有什么好处呢？广告和赞助商。每当搜索用户在谷歌上搜索时，你也会看到来自付费赞助商的结果，偶尔还有个性化广告。这就是搜索引擎赚钱的方式，为了保持收入流的稳定，他们需要你不断回来。为了做到这一点，他们需要确保为你提供最佳的内容，以便你在下一次搜索时再次使用他们。
- en: Now that we understand what search engines are looking for, let's learn about
    the important on-page signals that we can give to search engines to help them
    rank our site.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了搜索引擎在寻找什么，让我们来了解一下我们可以提供给搜索引擎的重要页面信号，以帮助他们对我们网站进行排名。
- en: On-page search engine optimization
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 页面搜索引擎优化
- en: '**On-page signals** are signals that a search engine can obtain from a site
    page. As your site pages are within your control, improving on-page signals is
    the easiest thing to get right and the easiest way to influence your site ranking.
    As a result, we will spend most of our time improving these signals in this chapter.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**页面信号**是搜索引擎可以从网站页面获取的信号。由于你的网站页面在你的控制之下，提高页面信号是最容易做对的事情，也是影响网站排名的最简单方式。因此，我们将在本章中花费大部分时间来提高这些信号。'
- en: On-page signals can be split into two groups – technical and content signals.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 页面信号可以分为两组——技术信号和内容信号。
- en: Technical signals
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 技术信号
- en: 'Technical signals are those related to your site''s code:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 技术信号是与你的网站代码相关的那些信号：
- en: '**Speed**: Search engines want users to receive their results quickly, so pages
    that are fast receive a boost in ranking.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**速度**：搜索引擎希望用户能够快速收到他们的结果，因此快速加载的页面在排名上会有提升。'
- en: '**Mobile Responsiveness**: Most content on the web is consumed via mobile these
    days, so having a great mobile user experience is very important. Search engines
    are considering this more and more, with Google''s index now being mobile-first.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**移动响应性**：如今，大多数网络内容都是通过移动设备消费的，因此拥有良好的移动用户体验非常重要。搜索引擎越来越重视这一点，现在谷歌的索引已经以移动优先为原则。'
- en: '**Security**: Ensuring your website is secure improves your site''s credibility.
    For example, **HTTPS** sites receive a boost over **HTTP** sites.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全性**：确保你的网站安全可以提高你网站的信誉。例如，**HTTPS** 网站比 **HTTP** 网站有优势。'
- en: Content signals
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 内容信号
- en: 'Content signals are those related to the copy and links present on your site
    page:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 内容信号是与你网站页面上的副本和链接相关的那些信号：
- en: '**Content Hierarchy**: The title, content headings, and page hierarchy are
    very important.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内容层次结构**：标题、内容标题和页面层次结构非常重要。'
- en: '**Page Content**: Google is always on the lookout for high-quality and accurate
    content that ultimately answers a user''s query. Keep this in mind when you''re
    creating pages and populating them. Your content needs to serve a real purpose
    for your site visitors.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**页面内容**：谷歌一直在寻找高质量和准确的内容，这些内容最终能够回答用户的查询。当你创建页面并填充它们时，请记住这一点。你的内容需要为你的网站访客提供真正的目的。'
- en: '**Rich Content**: Google looks beyond the raw copy nowadays. The web is filled
    with multimedia content. Google is looking for content that contains images and
    videos instead of raw text. Multimedia content allows for better user interaction
    with your content and is therefore favored.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**丰富内容**：如今，谷歌不仅仅关注原始文本。网络充满了多媒体内容。谷歌正在寻找包含图片和视频而不是原始文本的内容。多媒体内容允许用户更好地与你的内容互动，因此更受青睐。'
- en: '**Recently Updated**: If the content within your pages has not been changed
    for a while, Google may treat its content as stale. Google is actively checking
    that the content of your page was created recently. By ensuring that your content
    is "fresh," Google can be sure your content is recent.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**最近更新**：如果你的页面内容有一段时间没有更改，谷歌可能会将其内容视为过时。谷歌正在积极检查你的页面内容是否最近创建的。通过确保你的内容“新鲜”，谷歌可以确信你的内容是最近的。'
- en: '**Outbound links**: By referencing content externally, this tells Google that
    the information is accurate as it is like content contained on multiple sites.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**外部链接**：通过引用外部内容，这告诉谷歌信息是准确的，因为它类似于多个网站上的内容。'
- en: As you might be starting to realize by looking at these signals, you can sink
    vast amounts of time into these factors. It's up to you to decide how valuable
    search ranking and social media sharing are for your site, which will, in turn,
    determine how much time you should focus on implementing what is within this chapter.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 通过查看这些信号，你可能已经开始意识到，你可以将这些因素投入大量的时间。这取决于你决定搜索引擎排名和社交媒体分享对你网站的价值，这将反过来决定你应该花多少时间来实施本章中提到的内容。
- en: Now that we understand what SEO is, let's turn our attention to how we can improve
    our on-page SEO ranking with an SEO component.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了什么是SEO，让我们将注意力转向如何通过SEO组件来提高我们的页面SEO排名。
- en: Creating an SEO component
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个SEO组件
- en: 'Every site on the web has meta tags. Meta tags are snippets of text and image
    content that provide a summary of a web page. This data gets rendered in the browser
    whenever someone shares your site or when it appears within a search engine. Let''s
    create an SEO component so that we can have rich previews that entice users to
    visit our site:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 网上的每个网站都有元标签。元标签是提供网页摘要的文本和图像内容的片段。当有人分享你的网站或它出现在搜索引擎中时，这些数据会在浏览器中渲染。让我们创建一个SEO组件，以便我们可以拥有丰富的预览，吸引用户访问我们的网站：
- en: 'Install the necessary dependencies:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装必要的依赖项：
- en: '[PRE0]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '`react-helmet-async` is a dependency that manages all the changes that are
    made to your document head.'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`react-helmet-async`是一个依赖项，它管理对文档头所做的所有更改。'
- en: 'Include the `gatsby-plugin-react-helmet-async` plugin in your `gatsby-config.js`
    file:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的`gatsby-config.js`文件中包含`gatsby-plugin-react-helmet-async`插件：
- en: '[PRE1]'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: import React from "react";
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: import React from "react";
- en: head within our React components and pages when required.
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当需要时，在React组件和页面中使用`head`。
- en: '[PRE2]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Create a new file inside `src/components` called `SEO.js`. This is the file
    in which we will create our SEO component.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`src/components`内部创建一个名为`SEO.js`的新文件。这是我们将在其中创建我们的SEO组件的文件。
- en: 'Open the newly created file and add the following code:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开新创建的文件并添加以下代码：
- en: '[PRE3]'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Here, we are adding the language as an HTML attribute. We also added the `title`
    tag, a title template, and a `description` as metadata. The title template is
    useful if you want to have a consistent format. Let's imagine that the title we
    are passing in is `Home`. In this case, the template's final page title would
    be `Home · My Site`.
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这里，我们添加了语言作为HTML属性。我们还添加了`title`标签、标题模板和`description`作为元数据。如果想要有一个一致的格式，标题模板就很有用。让我们假设我们传递的标题是`Home`。在这种情况下，模板的最终页面标题将是`Home
    · My Site`。
- en: 'You are now ready to use your SEO component on your pages, so let''s try it
    out! We will use the `src/pages/index.js` file as an example:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可以在你的页面上使用你的SEO组件了，让我们试试吧！我们将使用`src/pages/index.js`文件作为示例：
- en: '[PRE4]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Here, you can see the component embedded within our index page. We have added
    the `title` and `description` props to ensure these can populate the `<title>`
    and `<description>` tags contained within the SEO component. If you run `gatsby
    develop` at this point, you should see the title of the tab change to match your
    new title.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以看到组件嵌入在我们的首页中。我们添加了`title`和`description`属性，以确保这些可以填充SEO组件中包含的`<title>`和`<description>`标签。如果你现在运行`gatsby
    develop`，你应该看到标签页的标题改变以匹配你的新标题。
- en: 'We can also provide `title` and `description` using data from our GraphQL data.
    In our blog page template file (`src/templates/blog-page.js`), we could use the
    blog post''s `frontmatter` to populate the SEO component:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用我们的GraphQL数据提供`title`和`description`。在我们的博客页面模板文件（`src/templates/blog-page.js`）中，我们可以使用博客文章的`frontmatter`来填充SEO组件：
- en: '[PRE5]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Here, we are passing `title` and `desc` from `frontmatter` of the Markdown post
    to the SEO component so that it can use these pieces of information to generate
    the tags.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将`title`和`desc`从Markdown文章的`frontmatter`传递给SEO组件，以便它可以使用这些信息来生成标签。
- en: Now that we have the basics set up, how do we enhance our site previews to make
    them more appealing within social media? Let's find out.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经设置了基础知识，我们如何增强我们的网站预览，使其在社交媒体中更具吸引力？让我们来看看。
- en: Exploring meta previews
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索元预览
- en: If you've ever shared a website with a friend via Twitter, Slack, or any other
    instant messaging service, you probably saw a nice preview image, title, and description
    appear in a card to give the user insight into where you are sending them. This
    is achieved with meta tags.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你曾经通过Twitter、Slack或任何其他即时通讯服务与朋友分享过网站，你可能看到过一张漂亮的预览图片、标题和描述出现在卡片中，以使用户了解你将他们发送到何处。这是通过元标签实现的。
- en: We've already included a couple of these (`title` and `description` meta tags)
    within our search component, but here, we will implement two other common types
    – **OpenGraph** and Twitter metadata. We will then learn how to merge and validate
    these tags.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经在我们的搜索组件中包含了一些这些（`title`和`description`元标签），但在这里，我们将实现两种其他常见类型 – **OpenGraph**和Twitter元数据。然后我们将学习如何合并和验证这些标签。
- en: Open Graph metadata
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Open Graph元数据
- en: '**Open Graph** is an internet protocol that was originally designed and created
    by Facebook with a single purpose – to unify and standardize metadata within web
    pages to get better representations of the content of the page. The protocol does
    this by adding specific meta tags to your site header. These tags provide details
    about the content of your site pages. This could include information as basic
    as the page''s title or maybe something more complex, such as how long a video
    on a page is. By populating the appropriate fields, we can create a bundled summary
    of what our site page looks like.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**Open Graph**是一个由Facebook最初设计和创建的互联网协议，其单一目的是统一和标准化网页内的元数据，以获得更好的页面内容表示。该协议通过向您的网站标题中添加特定的元标签来实现这一点。这些标签提供了有关您网站页面内容的信息。这可能包括从页面标题这样基本的信息到页面上的视频时长这样更复杂的信息。通过填充适当的字段，我们可以创建一个关于我们的网站页面外观的捆绑摘要。'
- en: 'We can add Open Graph meta tags via our existing `SEO` component by adding
    them to the `meta` prop of the `Helmet` component:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过向`Helmet`组件的`meta`属性添加Open Graph元标签，通过我们现有的`SEO`组件添加Open Graph元标签：
- en: '[PRE6]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Here, we are implementing Open Graph tags for the content's `title`, `description`,
    `type`, and `image`. As you can see, all open graph tags have the `og` prefix.
    These are just a few of the meta tags that are available via the protocol.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们正在为内容的`title`、`description`、`type`和`image`实现Open Graph标签。正如您所看到的，所有Open
    Graph标签都有`og`前缀。这些只是通过协议可用的元标签中的一小部分。
- en: For a full list of all the available types, visit the Open Graph protocol website
    ([https://ogp.me](https://ogp.me)).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看所有可用类型的完整列表，请访问Open Graph协议网站([https://ogp.me](https://ogp.me))。
- en: Twitter metadata
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Twitter元数据
- en: 'Like Facebook, Twitter also decided to create its own meta tags like Open Graph.
    All Twitter tags use the `twitter` prefix instead of `og`. One thing that separates
    Twitter tags from Open Graph''s is that Twitter also has a tag for the content''s
    display format on its platform. The first type is `summary`:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 与Facebook一样，Twitter也决定创建自己的元标签，如Open Graph。所有Twitter标签都使用`twitter`前缀而不是`og`。与Open
    Graph标签区分开来的一点是，Twitter在其平台上还有一个用于内容显示格式的标签。第一种类型是`summary`：
- en: '![Figure 6.1 – Twitter summary card'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.1 – Twitter摘要卡片'
- en: '](img/Figure_6.1_B15983.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.1_B15983.jpg)'
- en: Figure 6.1 – Twitter summary card
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.1 – Twitter摘要卡片
- en: '`summary` shows a small summary preview of the site page. If you are looking
    for something larger with an image preview, you can use the `summary_large_image`
    type instead:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '`summary`显示网站页面的简短摘要预览。如果您正在寻找带有图像预览的更大内容，可以使用`summary_large_image`类型代替：'
- en: '![Figure 6.2 – Twitter summary card with a large image'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.2 – 带有大型图像的Twitter摘要卡片'
- en: '](img/Figure_6.2_B15983.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.2_B15983.jpg)'
- en: Figure 6.2 – Twitter summary card with a large image
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.2 – 带有大型图像的Twitter摘要卡片
- en: As you can see, this type shows a larger image that is much more enticing to
    the user.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，这种类型显示了一个更大的图像，对用户来说更具吸引力。
- en: 'We can add Twitter meta tags via our existing `SEO` component by adding them
    to the `meta` prop of the `Helmet` component:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过向`Helmet`组件的`meta`属性添加Twitter元标签，通过我们现有的`SEO`组件添加Twitter元标签：
- en: '[PRE7]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Though many of these tags are self-explanatory, it is worth calling out the
    `twitter:creator` tag. If you place your Twitter username as the content for this
    property, Twitter will be able to identify you as the creator of the site.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然许多标签都是不言自明的，但值得指出的是`twitter:creator`标签。如果您将您的Twitter用户名作为此属性的值，Twitter将能够识别您为网站的创建者。
- en: Now that we have implemented both Open Graph and Twitter meta tags, let's combine
    and merge the two.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经实现了Open Graph和Twitter元标签，让我们将它们合并和合并。
- en: Merging tags
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 合并标签
- en: You may have noticed that there is a little bit of duplication between the data
    we are providing via Twitter tags and Open Graph tags. For example, in both cases,
    we are providing a title (`twitter:title` and `og:title`). There is no harm in
    including these duplicates. Only a few bytes are added to your page by including
    this redundancy.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能已经注意到，我们在通过Twitter标签和Open Graph标签提供的数据之间存在一些重复。例如，在两种情况下，我们都在提供标题（`twitter:title`和`og:title`）。包含这些重复内容并没有什么害处。包含这种冗余只会为您的页面增加几个字节。
- en: But if you would like to keep things clean, it is possible to reduce the number
    of tags. Twitter scrapes your site page – if it does not find the Twitter tag
    it is looking for, it will fall back to the Open Graph tags if they are present.
    This is great for duplicates such as the title and description, but it is still
    important to include those tags that are Twitter-specific, such as the card type.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 但如果您希望保持整洁，减少标签数量是可能的。Twitter 会抓取您的网站页面——如果它找不到它正在寻找的 Twitter 标签，并且如果存在，它将回退到
    Open Graph 标签。这对于标题和描述等重复项来说很好，但仍然重要的是要包含那些特定的 Twitter 标签，例如卡片类型。
- en: 'Now, let''s merge the Open Graph and Twitter tags we found in the previous
    two sections to create a subset that serves both formats without redundancy:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们将我们在前两个部分中找到的 Open Graph 标签和 Twitter 标签合并，以创建一个既服务于这两种格式又没有冗余的子集：
- en: '[PRE8]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Here, we can see that we have completely omitted the Twitter tags for `title`,
    `description`, and `image` as they will fall back to the Open Graph tags. We have,
    however, retained the Twitter tags for `creator` and `card` as they are not available
    via Open Graph.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以看到我们已经完全省略了 `title`、`description` 和 `image` 的 Twitter 标签，因为它们将回退到 Open
    Graph 标签。然而，我们保留了 `creator` 和 `card` 的 Twitter 标签，因为它们不通过 Open Graph 提供。
- en: Now that we understand how to make our site look great when we share it, what
    about when it is shared for us by a search engine? How do we highlight the information
    we want it to care about?
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了如何使我们的网站在分享时看起来很棒，那么当它被搜索引擎分享时呢？我们如何突出我们希望它关注的信息？
- en: Validating tags
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 验证标签
- en: 'Regardless of whether you have implemented Open Graph tags, Twitter tags, or
    both, you will want to ensure that your tags are working correctly before sharing
    your site pages online. Both Facebook and Twitter have created applications to
    preview how links that are shared on their platforms will be displayed:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您是否实现了 Open Graph 标签、Twitter 标签或两者都实现，您在将网站页面在线分享之前都希望确保您的标签能够正确工作。Facebook
    和 Twitter 都创建了应用程序来预览在它们平台上分享的链接将如何显示：
- en: 'Twitter Card Validator: [https://cards-dev.twitter.com/validator](https://cards-dev.twitter.com/validator)'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Twitter 卡片验证器: [https://cards-dev.twitter.com/validator](https://cards-dev.twitter.com/validator)'
- en: 'Facebook Sharing Debugger: [https://developers.facebook.com/tools/debug](https://developers.facebook.com/tools/debug)'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Facebook 分享调试器: [https://developers.facebook.com/tools/debug](https://developers.facebook.com/tools/debug)'
- en: These tools perform a very similar function – they scrape the web page that's
    entered for any relevant meta tags that you have defined. Then, they display what
    a preview of the site would look like on their platform using these tags. There
    are also third-party services that will validate for both of these platforms at
    the same time, such as MetaTags.io ([https://metatags.io](https://metatags.io)).
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这些工具执行非常相似的功能——它们会抓取输入的网页上的任何相关元标签，您已经定义了这些标签。然后，它们使用这些标签在其平台上显示网站预览的样子。还有一些第三方服务可以同时验证这两个平台，例如
    MetaTags.io ([https://metatags.io](https://metatags.io))。
- en: Tip
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士
- en: The validators mentioned here only work with sites that are hosted on public
    servers. You will not be able to test your meta tags using these without deploying
    your site first. You will learn more about how to deploy your site in [*Chapter
    9*](B15983_09_ePub_RK.xhtml#_idTextAnchor127), *Deployment and Hosting*.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这里提到的验证器仅适用于托管在公共服务器上的网站。您必须首先部署您的网站，才能使用这些工具测试您的元标签。您将在 [*第 9 章*](B15983_09_ePub_RK.xhtml#_idTextAnchor127)
    中了解更多关于如何部署您的网站的信息，*部署和托管*。
- en: At this point, you should feel comfortable with creating and testing meta tags.
    Now, let's turn our attention to how we can make our site easier for web crawlers
    to interpret.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你应该已经熟悉了创建和测试元标签。现在，让我们关注如何使我们的网站更容易被网络爬虫解释。
- en: Learning about XML sitemaps
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解 XML 站点地图
- en: 'A sitemap is a special file that provides information about the web pages and
    files on your site, as well as their relationships. Creating this file allows
    web crawlers to gather information about your site without having to crawl your
    site manually. It helps us highlight to search engines which pages we specifically
    want them to look at. Let''s create a sitemap for our site:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 站点地图是一个特殊的文件，它提供了关于您网站上网页和文件的信息，以及它们之间的关系。创建此文件允许网络爬虫在无需手动爬取网站的情况下收集有关您网站的信息。它帮助我们向搜索引擎突出显示我们特别希望他们查看的页面。让我们为我们的网站创建一个站点地图：
- en: 'Install the `gatsby-plugin-sitemap` dependency:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 `gatsby-plugin-sitemap` 依赖项：
- en: '[PRE9]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Update your `gatsby-config.js` file:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新您的 `gatsby-config.js` 文件：
- en: '[PRE10]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: By including this plugin, Gatsby will automatically create a sitemap when building
    the site. It's important to remember that this plugin only generates output when
    running in production. When you're using `gatsby develop`, you will not see your
    sitemap file being created. Only when the `gatsby build` command is running will
    the sitemap file be created.
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过包含这个插件，Gatsby将在构建网站时自动创建一个网站地图。重要的是要记住，这个插件仅在运行在生产环境中时生成输出。当你使用`gatsby develop`时，你将看不到你的网站地图文件被创建。只有当运行`gatsby
    build`命令时，才会创建网站地图文件。
- en: 'Now that we have followed those steps, let''s verify our implementation. Run
    `gatsby build && gatsby serve` and navigate to `/sitemap/sitemap-index.xml` on
    your site. This page should show you some **XML** data that looks like this:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经遵循了那些步骤，让我们验证我们的实现。运行`gatsby build && gatsby serve`，然后导航到你的网站上的`/sitemap/sitemap-index.xml`。这个页面应该会显示一些类似以下的**XML**数据：
- en: '[PRE11]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'This page is the index of your sitemap and tells search engines where to find
    your site data. In your case, you will probably see a single entry, similar to
    the one shown in the preceding code block. If you follow the path in the `<loc>`
    tag `(/sitemap/sitemap-0.xml`), you will find something like this:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这个页面是你的网站地图的索引，告诉搜索引擎在哪里找到你的网站数据。在你的情况下，你可能会看到一个单独的条目，类似于前面代码块中显示的。如果你遵循`<loc>`标签中的路径（`/sitemap/sitemap-0.xml`），你会找到类似以下的内容：
- en: '[PRE12]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: In this list, you should see an entry for each page on the site, with a `changefreq`
    and a `priority`. If the site pages appear in this list, then Google can find
    information about your pages without having to manually crawl your site. Congratulations!
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个列表中，你应该会看到网站上每个页面的条目，包括`changefreq`和`priority`。如果网站页面出现在这个列表中，那么谷歌可以找到关于你页面的信息，而无需手动爬取你的网站。恭喜你！
- en: Important Note
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Your site's 404 page and its development variants are always excluded from the
    sitemap, so you don't have to worry about filtering these pages out.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 你的网站的404页面及其开发变体始终被排除在网站地图之外，所以你不必担心过滤掉这些页面。
- en: Google has built a great tool for validating your sitemap, as well as other
    search analytics – Google Search Console. You can use it to check your site's
    indexing status and optimize the visibility of your site based on which queries
    are driving traffic to your website. You can try it out by visiting [https://search.google.com/search-console/about](https://search.google.com/search-console/about).
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌已经为验证你的网站地图以及其他搜索分析构建了一个很好的工具——谷歌搜索控制台。你可以用它来检查你网站的索引状态，并根据哪些查询驱动流量到你的网站来优化你网站的可见性。你可以通过访问[https://search.google.com/search-console/about](https://search.google.com/search-console/about)来尝试它。
- en: We now understand how to make it easy for Google to find and display our site,
    but what if we want to do the opposite and stop our site from appearing in search
    engines? We'll look at this in the next section.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经了解了如何让谷歌轻松找到并显示我们的网站，但如果我们想做的相反，让我们的网站不在搜索引擎中显示呢？我们将在下一节中探讨这个问题。
- en: Hiding your site from search engines
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 隐藏你的网站不被搜索引擎发现
- en: 'To prevent your page from appearing within Google and other search engines,
    you must update the `<head>` property of the page so that it includes the following
    meta tag:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 为了防止你的页面出现在谷歌和其他搜索引擎中，你必须更新页面的`<head>`属性，使其包含以下元标签：
- en: '[PRE13]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: By including a `noindex` meta tag, crawlers that crawl that page and see the
    tag will drop the page from their search results. This happens regardless of whether
    the site is being linked to any other site on the internet.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 通过包含一个`noindex`元标签，爬虫在爬取该页面并看到该标签时，会将其从搜索结果中删除。这无论网站是否被链接到互联网上的其他网站都会发生。
- en: 'Much like our `SEO` component, we could make this addition to a component so
    that we can reuse it across the pages when needed:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 就像我们的`SEO`组件一样，我们可以在组件中添加这个功能，以便在需要时跨页面重用：
- en: Create a new file in `src/components/layout` called `NoRobots.js`.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`src/components/layout`目录下创建一个名为`NoRobots.js`的新文件。
- en: 'Open the newly created file and add the following code to it:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开新创建的文件，并添加以下代码到其中：
- en: '[PRE14]'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: This component adds the `noindex` metadata to `head` when it's included on any
    page. Using this component in this way gives us the flexibility to make a few
    pages hidden while still allowing the rest to be indexed.
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个组件在包含在任何页面上时，会在`head`中添加`noindex`元数据。以这种方式使用这个组件，我们可以在隐藏一些页面同时仍然允许其他页面被索引的情况下，获得灵活性。
- en: 'To hide static resources such as images within your site from search engines,
    we need to include a `robots.txt` file. This file is used by search engine crawlers
    to determine which parts of your site it can access. There is a plugin called
    `gatsby-plugin-robots-txt` that has been set up to make creating this file painless.
    Let''s implement this plugin now:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 要隐藏您网站中的静态资源，如图片，以避免被搜索引擎索引，我们需要包含一个`robots.txt`文件。这个文件被搜索引擎爬虫用来确定它可以访问您网站的哪些部分。有一个名为`gatsby-plugin-robots-txt`的插件已经设置好了，使得创建这个文件变得简单易行。现在让我们来实现这个插件：
- en: 'Install the `gatsby-plugin-robots-txt` dependency:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装`gatsby-plugin-robots-txt`依赖项：
- en: '[PRE15]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Update your `gatsby-config.js` file with the following code:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码更新您的`gatsby-config.js`文件：
- en: '[PRE16]'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: We now have a clear understanding of how to omit both pages and assets from
    search engines.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在清楚地了解了如何从搜索引擎中排除页面和资源。
- en: Summary
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned what SEO is and what signals search engines use
    to identify quality content. We created an `SEO` component that we can use to
    add meta information to our site pages. Then, we enhanced this with Open Graph
    and Twitter meta tags for better site previews on social media platforms. We also
    implemented a sitemap to help search engines index our site effectively. Finally,
    we learned how to hide our site from search engines.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了SEO是什么以及搜索引擎用来识别优质内容的信号。我们创建了一个`SEO`组件，我们可以用它来为我们的网站页面添加元信息。然后，我们通过添加Open
    Graph和Twitter元标签来增强它，以便在社交媒体平台上获得更好的网站预览。我们还实现了一个网站地图，以帮助搜索引擎有效地索引我们的网站。最后，我们学习了如何使我们的网站从搜索引擎中隐藏。
- en: In the next chapter, we will learn how to test and audit our site. We will also
    explore how to audit our site page's SEO. By learning how to audit our site pages,
    we can identify ways to improve the speed of our pages too, which will also boost
    our SEO ranking.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何测试和审计我们的网站。我们还将探索如何审计我们网站页面的SEO。通过学习如何审计我们的网站页面，我们可以找到提高页面速度的方法，这也会提升我们的SEO排名。
