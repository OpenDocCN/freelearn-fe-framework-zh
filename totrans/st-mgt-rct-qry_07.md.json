["```js\nimport axios from \"axios\";\nimport { useQuery } from \"@tanstack/react-query\";\nconst fetchData = async ({ queryKey }) => {\n  const { username } = queryKey[0];\n  const { data } = await axios.get(\n    `https://danieljcafonso.builtwithdark.com/\n      react-query-api/${username}`\n  );\n  return data;\n};\nexport async function getServerSideProps() {\n  const user = await fetchData({ queryKey: [{ username:\n    \"danieljcafonso\" }] });\n  return { props: { user } };\n}\nexport default function InitialData (props) {\n  const { data } = useQuery({\n    queryKey: [{ queryIdentifier: \"api\", username:\n      \"danieljcafonso\" }],\n    queryFn: fetchData,\n    initialData: props.user,\n  });\n  return <div>This page is server side generated\n    {data.hello}</div>;\n}\n```", "```js\nimport axios from \"axios\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { json } from \"@remix-run/node\";\nconst fetchData = async ({ queryKey }) => {\n  const { username } = queryKey[0];\n  const { data } = await axios.get(\n    `https://danieljcafonso.builtwithdark.com/\n      react-query-api/${username}`\n  );\n  return data;\n};\nexport async function loader() {\n  const user = await fetchData({ queryKey: [{ username:\n    \"danieljcafonso\" }] });\n  return json({ user });\n}\nexport default function InitialData() {\n  const { user } = useLoaderData();\n  const { data } = useQuery({\n    queryKey: [{ queryIdentifier: \"api\", username:\n      \"danieljcafonso\" }],\n    queryFn: fetchData,\n    initialData: user,\n  });\n  return <div>This page is server side rendered\n    {data.hello}</div>;\n}\n```", "```js\nimport { useState } from \"react\";\nimport {\n  Hydrate,\n  QueryClient,\n  QueryClientProvider,\n} from \"@tanstack/react-query\";\nexport default function App({ Component, pageProps }) {\n  const [queryClient] = useState(() => new QueryClient());\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Hydrate state={pageProps.dehydratedState}>\n        <Component {...pageProps} />{\" \"}\n      </Hydrate>\n    </QueryClientProvider>\n  );\n}\n```", "```js\nimport axios from \"axios\";\nimport { dehydrate, QueryClient, useQuery } from\n  \"@tanstack/react-query\";\nconst fetchData = async ({ queryKey }) => {\n  const { username } = queryKey[0];\n  const { data } = await axios.get(\n    `https://danieljcafonso.builtwithdark.com/\n      react-query-api/${username}`\n  );\n  return data;\n};\nexport async function getServerSideProps() {\n  const queryClient = new QueryClient();\n  await queryClient.prefetchQuery(\n    [{ queryIdentifier: \"api\", username: \"danieljcafonso\" }],\n    fetchData\n  );\n  return { props: { dehydratedState: dehydrate(queryClient) } };\n}\nexport default function SSR() {\n  const { data } = useQuery({\n    queryKey: [{ queryIdentifier: \"api\", username:\n      \"danieljcafonso\" }],\n    queryFn: fetchData,\n  });\n  return <div>This page is server-side-rendered\n    {data.hello}</div>;\n}\n```", "```js\n    npm i use-dehydrated-state\n    ```", "```js\n    yarn add use-dehydrated-state\n    ```", "```js\n    pnpm add use-dehydrated-state\n    ```", "```js\nimport {\n  ...\n  Outlet,\n} from \"@remix-run/react\";\nimport { useState } from \"react\";\nimport {\n  Hydrate,\n  QueryClient,\n  QueryClientProvider,\n} from \"@tanstack/react-query\";\nimport { useDehydratedState } from \"use-dehydrated-state\";\nexport default function App() {\n  const [queryClient] = useState(() => new QueryClient());\n  const dehydratedState = useDehydratedState();\n  return (\n    ...\n       <QueryClientProvider client={queryClient}>\n         <Hydrate state={dehydratedState}>\n           <Outlet />\n         </Hydrate>\n       </QueryClientProvider>\n     ...\n  );\n}\n```", "```js\nimport axios from \"axios\";\nimport { dehydrate, QueryClient, useQuery } from \"@tanstack/react-query\";\nimport { json } from \"@remix-run/node\";\nconst fetchData = async ({ queryKey }) => {\n  const { username } = queryKey[0];\n  const { data } = await axios.get(\n    `https://danieljcafonso.builtwithdark.com/\n      react-query-api/${username}`\n  );\n  return data;\n};\nexport async function loader() {\n  const queryClient = new QueryClient();\n  await queryClient.prefetchQuery(\n    [{ queryIdentifier: \"api\", username: \"danieljcafonso\" }],\n    fetchData\n  );\n  return json({ dehydratedState: dehydrate(queryClient) });\n}\nexport default function Index() {\n  const { data } = useQuery({\n    queryKey: [{ queryIdentifier: \"api\", username:\n      \"danieljcafonso\" }],\n    queryFn: fetchData,\n  });\n  return <div>This page is server side rendered\n    {data.hello}</div>;\n}\n```"]