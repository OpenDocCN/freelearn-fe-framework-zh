["```js\nnpm install @schematics/angular\nnest add @nestjs/azure-func-http\n```", "```js\n{\"items\":id\":\"30\",\"description\":\"Plank\"},{\"id\":\"29\",\"description\":\"Dumbbell Bench Press\"},{\"id\":\"28\",\"description\":\"Seated Leg Curl\"},{\"id\":\"27\",\"description\":\"Cable Curl\"},{\"id\":\"26\",\"description\":\"Glute Bridge\"},{\"id\":\"25\",\"description\":\"Skull Crusher\"},{\"id\":\"24\",\"description\":\"Arnold Press\"},{\"id\":\"23\",\"description\":\"Inverted Row\"},{\"id\":\"22\",\"description\":\"Chest Fly\"},{\"id\":\"21\",\"description\":\"Hanging Leg Raise\"},{\"id\":\"20\",\"description\":\"Side Lateral Raise\"},{\"id\":\"19\",\"description\":\"Front Squat\"},{\"id\":\"18\",\"description\":\"Seated Row\"},{\"id\":\"17\",\"description\":\"Romanian Deadlift\"},{\"id\":\"16\",\"description\":\"Bicep Curl\"},{\"id\":\"15\",\"description\":\"Calf Raise\"},{\"id\":\"14\",\"description\":\"Tricep Dip\"},{\"id\":\"13\",\"description\":\"Push-up\"},{\"id\":\"12\",\"description\":\"Leg Curl\"},{\"id\":\"11\",\"description\":\"Incline Bench Press\"},{\"id\":\"10\",\"description\":\"Hammer Curl\"}, {\"id\":\"9\",\"description\":\"Lunges\"},{\"id\":\"8\",\"description\":\"Dumbbell Curl\"},{\"id\":\"7\",\"description\":\"Pull-up\"},{\"id\":\"6\",\"description\":\"Shoulder Press\"},{\"id\":\"5\",\"description\":\"Bench Press\"},{\"id\":\"4\",\"description\":\"Leg Press\"},{\"id\":\"3\",\"description\":\"Barbell \nRow\"},{\"id\":\"2\",\"description\":\"Squat\"},{\"id\":\"1\",\"description\":\"Deadlift\"}],\"hasNext\":false}\n```", "```js\nng generate environments\n```", "```js\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000'\n};\n```", "```js\nexport const environment = {\n  production: true,\n  apiUrl: 'https://gymdiaryangularboook.azurewebsites.net/api',\n};\n```", "```js\n. . .\nimport { environment } from 'src/environments/environment';\n@Injectable()\nexport class HostInterceptor implements HttpInterceptor {\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    const url = environment.apiUrl;\n. . .\n}\n```", "```js\n. . .\nimport { environment } from 'src/environments/environment';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  loadService = inject(LoadService);\n  toaster = inject(ToastrService);\n  title = 'gym-diary';\n  ngOnInit(): void {\n    if (environment.production) {\n      this.toaster.info('Production Build!');\n    } else {\n      this.toaster.info('Development Build!');\n    }\n  }\n}\n```", "```js\nng serve --configuration production\n```", "```js\nng build\n```", "```js\n\"configurations\": {\n  \"production\": {\n    \"budgets\": [\n      {\n        \"type\": \"initial\",\n        \"maximumWarning\": \"500kb\",\n        \"maximumError\": \"1mb\"\n      },\n      {\n        \"type\": \"anyComponentStyle\",\n        \"maximumWarning\": \"2kb\",\n        \"maximumError\": \"4kb\"\n      }\n    ],\n    \"outputHashing\": \"all\"\n  },\n  . . .\n  \"defaultConfiguration\": \"production\"\n}\n```", "```js\nserver {\n  listen 80;\n  sendfile on;\n  default_type application/octet-stream;\n  gzip on;\n  gzip_http_version 1.1;\n  gzip_disable      \"MSIE [1-6]\\.\";\n  gzip_min_length   1100;\n  gzip_vary         on;\n  gzip_proxied      expired no-cache no-store private auth;\n  gzip_types        text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;\n  gzip_comp_level   9;\n  root /usr/share/nginx/html;\n  location / {\n    try_files $uri $uri/ /index.html =404;\n  }\n}\n```", "```js\nnode_modules\n```", "```js\nFROM node:18-alpine as build\nCOPY package.json package-lock.json ./\nRUN npm ci && mkdir /gym-app && mv ./node_modules ./gym-app/\nWORKDIR /gym-app\nCOPY . .\nRUN npm run build\nFROM nginx:1.25-alpine\nCOPY nginx.default.conf /etc/nginx/conf.d/default.conf\nRUN rm -rf /usr/share/nginx/html/*\nCOPY --from=build /gym-app/dist/gym-diary /usr/share/nginx/html\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n```", "```js\ndocker run -p 8080:80 gymdiary\n```"]