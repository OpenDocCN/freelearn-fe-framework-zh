- en: Chapter 8. Showing Content in Lightboxes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 8 章。在灯箱中显示内容
- en: It has become common to see galleries of photos displayed in lightboxes on the
    web. Lightboxes can be useful for other things too — playing videos, showing additional
    information, displaying important information to site visitors, or even showing
    other websites. In this chapter, we'll cover how to use the flexible and adaptable
    Colorbox plugin to create lightboxes for a variety of purposes.
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在网上经常看到以灯箱形式展示照片图库已经变得很普遍了。灯箱还可以用于其他用途 — 播放视频、显示附加信息、向网站访问者显示重要信息，甚至显示其他网站。在本章中，我们将介绍如何使用灵活且适应性强的
    Colorbox 插件为各种用途创建灯箱。
- en: 'In this chapter, we''ll take a look at how to use the Colorbox plugin to:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍如何使用 Colorbox 插件来：
- en: Create a simple photo gallery
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个简单的相册
- en: Customize photo gallery settings
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义相册设置
- en: Build a fancy login box
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建一个花哨的登录框
- en: Play a collection of videos
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 播放一系列视频
- en: Create a one-page website portfolio
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个单页网站作品集
- en: Simple photo gallery
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简单相册
- en: A simple photo gallery is probably the most common use for lightboxes. We'll
    set up a page that shows thumbnails of each photo and displays the full-size image
    in a lightbox when the thumbnail is clicked. To get started, you'll need a series
    of photographs with smaller size thumbnails of each.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 简单相册可能是使用灯箱最常见的用途之一。我们将设置一个页面，显示每张照片的缩略图，并在点击缩略图时在灯箱中显示全尺寸图像。要开始，请准备一系列带有每个缩略图的较小尺寸的照片。
- en: 'Here''s an example of a photo displayed in a lightbox:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个在灯箱中显示的照片的示例：
- en: '![Simple photo gallery](img/6709OS_08_01.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![简单相册](img/6709OS_08_01.jpg)'
- en: Time for action — setting up a simple photo gallery
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作时间 — 设置简单相册
- en: 'We''ll walk through creating a simple photo gallery with the Colorbox plugin:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 Colorbox 插件创建一个简单的相册，我们将逐步进行：
- en: 'We''ll get started by setting up a basic HTML page and associated files and
    folders just like we did in [Chapter 1](ch01.html "Chapter 1. Designer, Meet jQuery"),
    *Designer, Meet jQuery*. The body of the HTML document will contain a list of
    thumbnails:'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将开始设置一个基本的 HTML 页面和相关文件和文件夹，就像我们在 [第 1 章](ch01.html "第 1 章。设计师，见到 jQuery")
    中所做的那样，*设计师，见到 jQuery*。HTML 文档的主体将包含缩略图列表：
- en: '[PRE0]'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note that we've wrapped each thumbnail in a link to the full-size version of
    the image. If you load the page in a browser, you'll see that the page works for
    users with JavaScript disabled. Clicking a thumbnail opens the full-size image
    in the browser. The back button takes you back to the gallery.
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，我们将每个缩略图都包装在到图像全尺寸版本的链接中。如果在浏览器中加载页面，你会看到页面适用于禁用 JavaScript 的用户。点击缩略图会在浏览器中打开全尺寸图像。点击后退按钮会返回到相册。
- en: Note that we've also included a `title` attribute on each link. This is helpful
    for our site visitors as it will show a short description of the image in a tooltip
    when they hover over the thumbnail with their mouse, but it will also be used
    later on for the Colorbox plugin. We've also included a `rel` attribute on each
    link and set it equal to ireland. This will make selecting our group of links
    to Ireland images easy when we're ready to add the Colorbox plugin magic.
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，我们还在每个链接上包含了一个 `title` 属性。对于我们的网站访问者来说，这对他们很有帮助，因为当他们用鼠标悬停在缩略图上时，它将显示图像的简短描述。但是稍后也将用于
    Colorbox 插件。我们还在每个链接上包含了一个 `rel` 属性，并将其设置为 ireland。这将使我们在准备添加 Colorbox 插件魔法时很容易选择我们的爱尔兰图像组。
- en: 'Next, we''ll add a bit of CSS to lay our images out in a grid. Open your `styles.css`
    file and add these styles:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将添加一些 CSS 来将图像布局在网格中。打开你的 `styles.css` 文件并添加这些样式：
- en: '[PRE1]'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![Time for action — setting up a simple photo gallery](img/6709OS_08_02.jpg)'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![操作时间 — 设置简单相册](img/6709OS_08_02.jpg)'
- en: Feel free to play around a bit with the CSS to create a different layout for
    your image thumbnails if you'd like.
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你愿意的话，可以随意调整一下 CSS，为你的图片缩略图创建不同的布局。
- en: Now, let's add the jQuery magic. We're going to be using Color Powered's Colorbox
    plugin. Head over to [http://jacklmoore.com/colorbox](http://jacklmoore.com/colorbox)
    to find the downloads, documentation, and demos. You'll find the download link
    in the **Download** section, near the top of the page. Just click the current
    version number to download a ZIP file.![Time for action — setting up a simple
    photo gallery](img/6709OS_08_03.jpg)
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们添加 jQuery 魔法。我们将使用 Color Powered 的 Colorbox 插件。请前往 [http://jacklmoore.com/colorbox](http://jacklmoore.com/colorbox)
    查找下载、文档和演示。你会在**下载**部分找到下载链接，在页面顶部附近。只需点击当前版本号下载 ZIP 文件。![操作时间 — 设置简单相册](img/6709OS_08_03.jpg)
- en: Unzip the folder and have a look inside. You'll find the plugin script file
    itself, of course, but a lot of other goodies as well.![Time for action — setting
    up a simple photo gallery](img/6709OS_08_04.jpg)
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解压缩文件夹并查看其内容。你会找到插件脚本文件本身，当然还有许多其他好东西。![行动时间——设置简单的照片库](img/6709OS_08_04.jpg)
- en: The plugin code itself is in the `colorbox` folder — you'll find both the development
    and minified versions. The five example folders each contain an example file (`index.html`)
    that shows the plugin in action. Why five different folders? Each folder contains
    the same basic example, but with five different looks for the Colorbox. These
    same examples can be viewed on the Colorbox website by clicking numbers in the
    **View Demos** section on the website.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 插件代码本身位于`colorbox`文件夹中——你会找到开发和压缩版本。五个示例文件夹中每个都包含一个示例文件（`index.html`），展示了插件的作用。为什么有五个不同的文件夹？每个文件夹包含相同的基本示例，但Colorbox有五种不同的外观。这些相同的示例可以在Colorbox网站上点击网站上**查看演示**部分中的数字来查看。
- en: Right out of the box, the plugin's developers are providing us with five different
    possibilities for our Colorbox's look and feel. And if that's not enough choice,
    they've also included a `colorbox.ai` ( **Adobe Illustrator**) file that contains
    all of the image assets used to create these five different looks. You can customize
    them to your heart's content and then export your new fully custom look from Illustrator
    to create your own appearance. Changing colors and special effects is straightforward
    enough, but remember that if you change the size and shape of the image assets,
    you'll have to touch up the accompanying CSS file to accommodate the new sizes.
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 开箱即用，插件的开发人员为我们提供了五种不同的Colorbox外观和感觉的可能性。如果这还不够选择，他们还包含了一个包含用于创建这五种不同外观的所有图像资产的`colorbox.ai`（**Adobe
    Illustrator**）文件。您可以随心所欲地自定义它们，然后从Illustrator中导出您的新完全自定义外观，以创建您自己的外观。更改颜色和特效非常简单，但请记住，如果更改图像资产的大小和形状，您将不得不修改相应的CSS文件以适应新的大小。
- en: Try out each of the different examples, either on the website or using the example
    files included in the ZIP download, and note that the appearance, size, placement
    of the back and forward buttons, the close button, the caption, the pagination
    indicator (image 1 of 3), and so on, are all controlled via CSS—not the plugin
    code itself. This makes it very easy to customize the look and feel—it's all done
    via CSS rather than in JavaScript.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试每个不同的示例，无论是在网站上还是使用ZIP下载中包含的示例文件，并注意外观、大小、前进和后退按钮的位置、关闭按钮、标题、分页指示器（图像1/3）等都是通过CSS而不是插件代码本身控制的。这使得定制外观和感觉非常容易——所有这些都是通过CSS而不是JavaScript完成的。
- en: Inside the ZIP download, in the `colorbox` folder, you'll find the plugin code
    a file named `jquery.colorbox-min.js`. Copy this file to your own `scripts` folder.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在ZIP下载中，在`colorbox`文件夹中，你会找到插件代码一个名为`jquery.colorbox-min.js`的文件。将此文件复制到你自己的`scripts`文件夹中。
- en: We'll get started by choosing one of the provided CSS skins. Pick your favorite,
    then copy and paste its CSS file to your own `styles` folder. Open up the `images`
    folder for that CSS skin and copy and paste the images from that folder to your
    own `images` folder. Once you've chosen a skin, your own setup should look like
    the following:![Time for action — setting up a simple photo gallery](img/6709OS_08_05.jpg)
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将从选择提供的CSS外观中开始。选择你喜欢的外观，然后将其CSS文件复制粘贴到你自己的`styles`文件夹中。打开该CSS外观的`images`文件夹，并将该文件夹中的图像复制粘贴到你自己的`images`文件夹中。一旦你选择了一个外观，你自己的设置应该如下所示：![行动时间——设置简单的照片库](img/6709OS_08_05.jpg)
- en: The `index.html` file contains the HTML with thumbnail images that link to full-size
    versions. The `images` folder contains the images provided with my chosen Colorbox
    skin, alongside my own images for my slideshow, both the thumbnail and full-size
    versions. My `scripts` folder contains jQuery (`jquery.js`) and the Colorbox plugin
    script (`jquery.colorbox-min.js`). My `styles` folder contains the CSS file for
    the Colorbox skin I chose.
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`index.html`文件包含了链接到全尺寸版本的缩略图图像的HTML。`images`文件夹包含了与我选择的Colorbox外观提供的图像以及我的幻灯片秀的自己的图像，包括缩略图和全尺寸版本。我的`scripts`文件夹包含了jQuery（`jquery.js`）和Colorbox插件脚本（`jquery.colorbox-min.js`）。我的`styles`文件夹包含了我选择的Colorbox外观的CSS文件。'
- en: 'We do have to open up `colorbox.css` to make a minor set of edits. In the example
    files, the CSS file is not in a `styles` or `css` folder, but rather sits at the
    top level alongside the `index.html` file. We''ve chosen to follow our preferred
    convention and store our CSS in our `styles` folder. This means that we''ll have
    to open up the `colorbox.css` file and update the references to images in the
    CSS. I''ll have to replace references like this:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们必须打开 `colorbox.css` 进行一组微小的编辑。在示例文件中，CSS 文件不在 `styles` 或 `css` 文件夹中，而是与 `index.html`
    文件一样位于顶层。我们选择遵循我们的首选约定，并将我们的 CSS 存储在我们的 `styles` 文件夹中。这意味着我们将不得不打开 `colorbox.css`
    文件并更新 CSS 中的图像引用。我将不得不替换以下引用：
- en: '[PRE2]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'with references like this:'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 具有以下引用：
- en: '[PRE3]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: I'm just telling the CSS to go up one level and then look for the `images` folder.
    You should be able to replace all of these quickly by using the Find and Replace
    functionality of your text editor.
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我只是告诉 CSS 向上一级查找，然后查找 `images` 文件夹。您应该可以通过使用文本编辑器的查找和替换功能快速替换所有这些内容。
- en: Next, open up your `index.html` file and attach the `colorbox.css` file in the
    head section, before your own `styles.css:`
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，打开您的 `index.html` 文件，并在您自己的 `styles.css` 之前的 head 部分附加 `colorbox.css` 文件：
- en: '[PRE4]'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'And then head down to the bottom of the file, just before the closing`</body>`
    tag, and attach the Colorbox plugin, after jQuery and before your own `scripts.js`
    file:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在文件底部，在关闭`</body>`标签之前，将 Colorbox 插件附加在 jQuery 之后，但在您自己的 `scripts.js` 文件之前：
- en: '[PRE5]'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now, remember that `rel="ireland`" attribute we included on each of our links?
    We''re going to use that in our JavaScript to select all of our Ireland image
    links for the Colorbox plugin. Open your `scripts.js` file and write the attribute
    selector to select all links with a `rel` attribute equal to `ireland` inside
    of the document ready statement:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，记住我们在每个链接上包含的 `rel="ireland"` 属性吗？我们将在 JavaScript 中使用它来选择 Colorbox 插件的所有爱尔兰图片链接。打开您的
    `scripts.js` 文件，并在文档就绪语句中编写属性选择器，以选择具有 `rel` 属性等于 `ireland` 的所有链接：
- en: '[PRE6]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The only thing left to do is call the `colorbox()` method on those links the
    Colorbox plugin will take care of everything else for us:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 唯一剩下的事情就是在这些链接上调用 `colorbox()` 方法，Colorbox 插件会为我们处理其他所有事情：
- en: '[PRE7]'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Now if you open the page in the browser and click one of the thumbnail images,
    you'll see the full-size image open up in a Colorbox. You can navigate through
    all of the full-size images without having to close the lightbox, thanks to the
    back and forward buttons included. You can also move between the images by pressing
    the left and right arrow keys on your keyboard. The pagination indicator helps
    you to see where you are in the collection of photos. You'll also notice that
    the `title` attribute included on each link gets re-used as an image caption for
    each image. The Colorbox can be closed by clicking the close button, clicking
    outside the Colorbox, or by hitting the Esc key on your keyboard. All in all,
    it's a pretty nice experience right out of the box.
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，如果您在浏览器中打开页面并单击缩略图图像之一，您将看到全尺寸图像在 Colorbox 中打开。您可以通过后退和前进按钮在所有全尺寸图像之间导航，而无需关闭灯箱。您还可以通过在键盘上按左右箭头键之间移动图像。分页指示器可帮助您查看您在照片集合中的位置。您还会注意到，每个链接上包含的
    `title` 属性被重新用作每个图像的图像标题。可以通过单击关闭按钮、单击 Colorbox 外部或按键盘上的 Esc 键来关闭 Colorbox。总的来说，这是一个非常好的开箱即用的体验。
- en: What just happened?
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚刚发生了什么？
- en: We used the Colorbox jQuery plugin to turn a list of links to images into a
    lightbox that allows site visitors to navigate through the full-size images without
    leaving the page. We used the `title` attribute of the links to provide captions
    for the images. We used one of the five Colorbox styles provided with the plugin
    to create a nicely-designed lightbox.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用 Colorbox jQuery 插件将图像链接列表转换为灯箱，让站点访问者能够在不离开页面的情况下浏览全尺寸图像。我们使用链接的 `title`
    属性为图像提供标题。我们使用插件提供的五种 Colorbox 样式之一来创建一个设计良好的灯箱。
- en: Customizing Colorbox's behavior
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义 Colorbox 的行为
- en: If you take a look through the **Settings** section of the Colorbox website,
    you'll see that you have plenty of options for customizing how the Colorbox behaves.
    Let's take a look at how we can put some of these options to use. For this section,
    we'll keep working with the files we set up in the previous section.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您查看 Colorbox 网站的 **Settings** 部分，您会看到有很多选项可以自定义 Colorbox 的行为方式。让我们看看如何利用其中一些选项。对于本节，我们将继续使用上一节设置的文件。
- en: Transition
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 过渡
- en: First up, we'll try out the different transition effects that are available.
    The default transition is `elastic`. If your full-size images are all different
    sizes, you'll see that Colorbox uses a nice resizing animation to transition between
    them. The other options for transitions are `fade` and `none`. Let's take a look
    at how we can modify the transition.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将尝试不同的可用过渡效果。默认过渡效果是`elastic`。如果您的全尺寸图像尺寸各不相同，您会发现Colorbox使用一个漂亮的调整大小动画来在它们之间进行过渡。过渡的其他选项包括`fade`和`none`。让我们看看如何修改过渡。
- en: Time for action — using a custom transition
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 —— 使用自定义过渡
- en: 'Follow these steps to change the default transition between images:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤更改图片之间的默认过渡效果：
- en: 'For this example, we''ll take a look at how to use the `fade` transition. Open
    your `scripts.js` file. All we have to do is pass the `fade` value for the transition
    key to the `colorbox()` method as follows:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于这个例子，我们将看一下如何使用`fade`过渡。打开您的`scripts.js`文件。我们所要做的就是将`fade`值传递给`colorbox()`方法的过渡关键字，如下所示：
- en: '[PRE8]'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Note that we've added some curly braces inside the parentheses. Inside these
    curly braces, we can pass in key/value pairs to customize different aspects of
    the Colorbox. In this case, the key is `transition` and the value is 'fade'.
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，我们在括号内添加了一些花括号。在这些花括号内，我们可以传递键/值对以定制Colorbox的不同方面。在这种情况下，关键字是`transition`，值是'fade'。
- en: If you reload the page in the browser, click one of the thumbnails then click
    the next and previous buttons to flip through the images, you'll see that the
    Colorbox fades out and then back in between each image.
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您在浏览器中重新加载页面，点击其中一个缩略图，然后点击下一个和上一个按钮来浏览图片，您会发现Colorbox在每张图片之间淡出然后淡入。
- en: What if we decided we'd rather get rid of the transitions altogether? We'd simply
    have to change the value for the `transition` key to`'none':`
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们决定完全取消过渡会怎样？我们只需将`transition`关键字的值更改为`'none'`即可：
- en: '[PRE9]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Now if you refresh the page in the browser, you'll see that the images change
    without any transition effect between them.
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，如果您在浏览器中刷新页面，您会发现图片之间没有任何过渡效果。
- en: What just happened?
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚才发生了什么？
- en: We saw how to take advantage of one of the available settings with the Colorbox
    plugin and modified the transition between images as our site visitor moves through
    them.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到了如何利用Colorbox插件中的一个可用设置，并修改了当我们的网站访问者浏览图片时的过渡效果。
- en: Fixed size
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 固定大小
- en: In a case where the photos you're loading into the Colorbox are of widely varying
    different sizes, you might decide that all the resizing is distracting to the
    site visitors and that you want to set a fixed size for the Colorbox. That's easy
    to do as well, by passing in a couple more key/value pairs. Looking through the
    documentation, you'll see that there are lots of settings for controlling the
    width and height of the Colorbox. To keep things simple, we're going to use `width`
    and `height`.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在加载到Colorbox中的照片尺寸差异很大的情况下，您可能会决定所有调整大小会使网站访问者分心，您想为Colorbox设置一个固定大小。这也很容易做到，只需再传入几个键/值对即可。浏览文档，您会发现有很多用于控制Colorbox宽度和高度的设置。为了保持简单，我们将使用`width`和`height`。
- en: Time for action — setting a fixed size
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 —— 设置固定大小
- en: 'Follow these steps to set a fixed width and height for the Colorbox:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤为Colorbox设置固定宽度和高度：
- en: 'Open up your `scripts.js` file. We''re going to make a few changes to our code
    to set a fixed `width` and `height` for the Colorbox:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的`scripts.js`文件。我们将对我们的代码进行一些更改，为Colorbox设置固定的`width`和`height`：
- en: '[PRE10]'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Now if you refresh the page in the browser, you'll see that the Colorbox remains
    the same size. No matter what size the images or the browser window is, the Colorbox
    will always fill 90% of the width and 60% of the height of the browser window.
    The images inside resize proportionally to fit into the available space if they
    are too large.
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，如果您在浏览器中刷新页面，您会发现Colorbox保持相同的大小。无论图像或浏览器窗口的大小如何，Colorbox始终会填充浏览器窗口宽度的90%和高度的60%。如果图像过大，图像内部会按比例调整大小以适应可用空间。
- en: What just happened?
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚才发生了什么？
- en: We set the `width` and `height` settings to percentage values. This is a really
    helpful option if you have large photos that could potentially be larger than
    your site visitor's browser window. Setting the `width` and `height` to percentage
    values ensures that in this case, the Colorbox will be 90% of the width and 60%
    of the height of the site visitor's browser window, no matter what size the browser
    window happens to be. That way if the browser window is small, the site visitor
    will be able to see the complete photo.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将`width`和`height`设置为百分比值。如果你有可能比您站点访问者的浏览器窗口还大的大照片，这是一个非常有用的选项。将`width`和`height`设置为百分比值可以确保在这种情况下，Colorbox
    将是站点访问者浏览器窗口宽度的 90%，高度的 60%，无论浏览器窗口的大小是多少。这样，如果浏览器窗口很小，站点访问者仍然能够看到完整的照片。
- en: 'Colorbox also provides some other settings for width and height:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: Colorbox 还为宽度和高度提供了一些其他设置：
- en: innerWidth/innerHeight
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: innerWidth/innerHeight
- en: These keys provide `width` and `height` values for the content inside the Colorbox
    instead of for the Colorbox itself. This can be helpful in cases where you know
    the exact width and height of the actual content, for example a video player.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这些键为 Colorbox 内部内容提供了`width`和`height`值，而不是为 Colorbox 本身提供。在您知道实际内容的确切宽度和高度的情况下，例如视频播放器，这可能很有帮助。
- en: InitialWidth/initialHeight
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: InitialWidth/initialHeight
- en: Colorbox is very flexible and can be used for a variety of different content
    (as we'll see shortly). Setting an `intialWidth` and `initialHeight` allow you
    to control the size of the Colorbox before any content is loaded in. If you load
    in content via Ajax, it can take a few moments to load into the Colorbox. Setting
    `initialWidth` and `initialHeight` allows you to specify how large the Colorbox
    should be while you wait for the content to load in.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: Colorbox 非常灵活，可以用于各种不同的内容（我们马上就会看到）。设置`intialWidth`和`initialHeight`允许您在加载任何内容之前控制
    Colorbox 的大小。如果通过 Ajax 加载内容，可能需要一些时间才能加载到 Colorbox 中。设置`initialWidth`和`initialHeight`允许您指定在等待内容加载时
    Colorbox 应该有多大。
- en: maxWidth/maxHeight
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: maxWidth/maxHeight
- en: These keys allow you to set a maximum width and maximum height for the Colorbox.
    If the content is smaller, then the box will appear smaller on the screen. But
    when you're loading in larger contents, they won't exceed the `maxWidth` and `maxHeight`
    values you specify. For example, if you wanted to set up a Colorbox for images
    in a variety of sizes, you could allow the Colorbox to resize with fade or elastic
    transitions between images, but set a `maxWidth` and `maxHeight` to be sure that
    larger images wouldn't exceed the site visitor's browser window.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 这些键允许您为 Colorbox 设置最大宽度和最大高度。如果内容较小，则框将在屏幕上显示为较小的尺寸。但是当您加载较大的内容时，它们不会超过您指定的`maxWidth`和`maxHeight`
    值。例如，如果您想为各种大小的图像设置 Colorbox，您可以允许 Colorbox 在图像之间使用淡入淡出或弹性过渡来调整大小，但是设置`maxWidth`和`maxHeight`可以确保较大的图像不会超过站点访问者的浏览器窗口。
- en: Creating a slideshow
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建一个幻灯片
- en: Colorbox also provides us with an option to automatically cycle through all
    the images so the site visitor doesn't have to continually click the next button
    to see them all.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: Colorbox 还为我们提供了一个选项，可以自动循环显示所有图片，这样站点访问者就不必不断点击下一个按钮来查看它们。
- en: Time for action — creating a slideshow
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间——创建幻灯片
- en: 'Here''s how we can turn our lightbox image gallery into a slideshow:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将我们的灯箱图片库变成幻灯片的方法如下：
- en: Open `scripts.js`. We're going to add another key/value pair to our settings.
    To create a slideshow inside our Colorbox, set the `slideshow` key to `true:`
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`scripts.js`。我们将向我们的设置添加另一个键/值对。要在我们的 Colorbox 中创建幻灯片，将`slideshow`键设置为`true`：
- en: '[PRE11]'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now if you refresh the page in the browser, you''ll see that after you open
    the Colorbox, it automatically cycles through the images, using whichever transition
    effect you''ve chosen. A link is provided so that site visitors can stop the slideshow
    at any time:'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，如果您在浏览器中刷新页面，您会看到在您打开 Colorbox 后，它会自动循环显示图片，使用您选择的任何转换效果。提供一个链接，以便站点访问者随时可以停止幻灯片：
- en: '![Time for action — creating a slideshow](img/6709OS_08_06.jpg)'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间——创建幻灯片](img/6709OS_08_06.jpg)'
- en: 'Colorbox provides a few more keys we can use to control the slideshow. We can
    provide a value for `slideshowSpeed` to set the number of milliseconds each photo
    will be displayed. If we don''t want the slideshow to automatically play, we can
    set `slideshowAuto` to `false`. We can change the text that appears in the link
    to start and stop the slideshow by passing in values for the `slideshowStart`
    and `slideshowStop` keys, respectively. That would all look like this:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Colorbox 提供了更多我们可以用来控制幻灯片演示的键。我们可以为 `slideshowSpeed` 提供一个值来设置每张照片显示的毫秒数。如果我们不想要幻灯片自动播放，我们可以将
    `slideshowAuto` 设置为 `false`。我们可以通过为 `slideshowStart` 和 `slideshowStop` 键传入值来更改链接中显示的启动和停止幻灯片的文本，分别如下所示：
- en: '[PRE12]'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: With this code, we've set up our slideshow to show each photo for 2 seconds
    (2000 milliseconds), to not start the slideshow automatically, and to customize
    the text on the links that start and stop the slideshow.
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过这段代码，我们设置了我们的幻灯片演示每张照片显示 2 秒（2000 毫秒），不自动启动幻灯片演示，并定制了启动和停止幻灯片的链接上的文本。
- en: Note that each key/value pair is separated by a comma, but that there's no comma
    after the last key/value pair. No comma after the last one is only important for
    Internet Explorer — if you accidentally put a comma after the last key/value pair
    in Internet Explorer, it will throw an error and none of your JavaScripts will
    work. Other browsers will ignore the error and continue to work gracefully. Always
    test your work in Internet Explorer before you make it available to the public.
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，每个键/值对之间用逗号分隔，但是在最后一个键/值对后面没有逗号。在 Internet Explorer 中，最后一个后面没有逗号只是很重要 ——
    如果你在 Internet Explorer 中意外地在最后一个键/值对后面放了一个逗号，它会抛出一个错误，你的 JavaScript 将无法工作。其他浏览器会忽略该错误并继续优雅地工作。在将工作提供给公众之前，请始终在
    Internet Explorer 中测试您的工作。
- en: Let's talk for a minute about the \' that appears in the text I want to use
    for the link to start and stop the slideshow. Since these are strings, I have
    to wrap them in quote marks, either 'single' quote or "double" quotes will work,
    and it's a matter of personal preference which you choose. If I want to then use
    quote marks in my string, I have to escape them I have to escape them — which
    is the JavaScript way of saying I have to tell JavaScript that those are part
    of my string and not characters that JavaScript should pay attention to.
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 让我们谈一谈出现在我想用于启动和停止幻灯片演示的链接文本中的 \'。由于这些是字符串，我必须将它们用引号括起来，可以是 ' 单引号也可以是 " 双引号，并且是个人偏好选择哪个。如果我想在我的字符串中使用引号，我必须转义它们
    —— 这是 JavaScript 说我必须告诉 JavaScript 那些是我的字符串的一部分而不是 JavaScript 应该注意的字符的方式。
- en: 'If I were to write my string this way:'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我按照这种方式编写我的字符串：
- en: '[PRE13]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: this would cause an error. As far as JavaScript is concerned, the ' in Let's
    is the closing single quote for the string — and JavaScript has no idea what to
    do with the rest of the line.
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将导致错误。就 JavaScript 而言，Let's 中的 ' 是字符串的结束单引号 —— 而 JavaScript 不知道如何处理行的其余部分。
- en: 'In this case, if my personal preference were for using double quotes for writing
    strings, I wouldn''t have to do anything at all. This would be perfectly acceptable:'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这种情况下，如果我的个人偏好是使用双引号来编写字符串，我就不需要做任何事情。这将是完全可以接受的：
- en: '[PRE14]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Since we're using double quotes around our string, there's no chance that JavaScript
    will accidentally read it as the end of our string. Once JavaScript sees an opening
    " character, it automatically looks for the matching ending " character.
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于我们在字符串周围使用双引号，JavaScript 不会意外地将其读取为我们字符串的结尾。一旦 JavaScript 看到一个开头的 " 字符，它就会自动寻找匹配的结尾
    " 字符。
- en: Now that we've got our slideshow customized, refresh the page in the browser
    and click one of the image thumbnails to open the Colorbox. The only visible difference
    is the addition of the **Let's get started** link. Clicking it kicks off the slideshow
    and switches the link to say Ok, that's enough, so that we can stop the slideshow.
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在我们已经定制了我们的幻灯片演示，在浏览器中刷新页面并点击一个图片缩略图来打开 Colorbox。唯一可见的区别是添加了**让我们开始吧**链接。点击它启动幻灯片演示并将链接更改为说好了，这样我们就可以停止幻灯片演示。
- en: What just happened?
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚刚发生了什么？
- en: We saw how to create and customize a slideshow. We did this by taking the simple
    lightbox photo gallery and customizing it by passing a series of key/value pairs
    to the `colorbox()` method.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到了如何创建和定制幻灯片演示。我们通过向 `colorbox()` 方法传递一系列键/值对来获取简单的灯箱照片库并进行定制。
- en: Fancy login
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 炫酷的登录
- en: It's nice enough to be able to use a lightbox for displaying images and slideshows,
    but Colorbox is more capable and flexible than that. In this section, we'll take
    a look at showing a login form in a Colorbox. Note that our login form isn't hooked
    up to anything and won't actually function in the sample case. But this same technique
    can be applied to a dynamic site to allow your site visitors to view the login
    form in a lightbox.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 使用lightbox来显示图片和幻灯片已经足够好了，但是Colorbox比这更有能力和灵活。在本节中，我们将看看如何在Colorbox中显示一个登录表单。请注意，我们的登录表单没有连接到任何东西，在示例情况下实际上不会起作用。但是这个相同的技术可以应用于一个动态站点，让你的站点访客可以在lightbox中查看登录表单。
- en: Time for action — creating a fancy login form
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 执行操作-创建一个花哨的登录表单
- en: 'Follow these steps to create a login form in a lightbox:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤在lightbox中创建一个登录表单：
- en: 'We''ll get started by setting up an HTML page and associated files and folders
    like we did in [Chapter 1](ch01.html "Chapter 1. Designer, Meet jQuery"), *Designer,
    Meet jQuery*. Our HTML page will contain a header that displays a login form.
    It''s common for sites to enable people to login from any page on the site:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将开始设置一个HTML页面和相关的文件和文件夹，就像我们在[第1章](ch01.html "Chapter 1. Designer, Meet jQuery")中所做的那样，*Designer,
    Meet jQuery*。我们的HTML页面将包含一个显示登录表单的标题。通常情况下，站点允许人们从站点的任何页面登录：
- en: '[PRE15]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Next, we''ll open `styles.css` and add some CSS, so that the header displays
    with the title on the left and the form on the right:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将打开`styles.css`并添加一些CSS，以便标题显示在左侧，表单显示在右侧：
- en: '[PRE16]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'If you view the page in a browser, you''ll see the following:'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你在浏览器中查看页面，你会看到以下内容：
- en: '![Time for action — creating a fancy login form](img/6709OS_08_07.jpg)'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![执行操作-创建一个花哨的登录表单](img/6709OS_08_07.jpg)'
- en: This is perfectly acceptable for users without JavaScript enabled — they'll
    be able to log into the site from any page. But I do think it's a bit cluttery.
    So if the site visitor has JavaScript enabled, we will hide the login form, and
    show it in a Colorbox when the site visitor is ready to log in.
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于没有启用JavaScript的用户来说，这是完全可以接受的-他们可以从任何页面登录到网站。但我认为这有点凌乱。所以如果网站访问者启用了JavaScript，我们将隐藏登录表单，并在网站访问者准备登录时在Colorbox中显示它。
- en: 'Next, we''ll get ready to use the Colorbox plugin the same way we did in the
    previous section: choose one of the provided styles for the Colorbox and attach
    its stylesheet to the head section of our document, move all the required images
    to your `image` directory and update the path to the images in the CSS, and attach
    the Colorbox plugin at the foot of the document, between jQuery and our `scripts.js`
    tag.'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将准备使用Colorbox插件，方式与我们在上一节中所做的一样：选择一个提供的Colorbox样式，并将其样式表附加到文档的头部，将所有必需的图片移动到你的`image`目录并更新CSS中的图片路径，并将Colorbox插件附加到文档的底部，在jQuery和我们的`scripts.js`标签之间。
- en: 'Once all that''s out of the way, we''re ready to write our JavaScript. Open
    up `scripts.js` and write your document ready statement:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦所有这些都搞定了，我们就可以开始编写我们的JavaScript了。打开`scripts.js`并编写你的文档就绪语句：
- en: '[PRE17]'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The first thing we''d like to do is hide the login form. We''re going to do
    that using JavaScript rather than CSS because we do want the login form to be
    visible for the site visitors who don''t have JavaScript enabled. We want to hide
    the form immediately as soon as the page is loaded, so we''ll write our hiding
    code inside the `ready()` method for the document:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们要做的第一件事是隐藏登录表单。我们将使用JavaScript而不是CSS来做到这一点，因为我们希望对于没有启用JavaScript的网站访问者来说，登录表单是可见的。我们希望在页面加载后立即隐藏表单，所以我们将在文档的`ready()`方法内编写我们的隐藏代码：
- en: '[PRE18]'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: You'll notice that we created a variable called `form` and used it to store
    the jQuery selector for the form. We're going to have to refer to the login form
    several times in our code. We could write `$('#login-form')` each time we wanted
    to select the login form, but each time, jQuery would have to look through the
    DOM of the page to find it anew. If we store it in a variable, our code will run
    faster and be more efficient since jQuery will not have to find the login form
    each time we refer to it.
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你会注意到我们创建了一个名为`form`的变量，并用它来存储表单的jQuery选择器。我们将不得不在我们的代码中多次引用登录表单。我们可以每次想要选择登录表单时都写`$('#login-form')`，但是每次，jQuery都要重新查找DOM页面来找到它。如果我们将它存储在一个变量中，我们的代码将运行得更快，更高效，因为jQuery不必每次引用它时都查找登录表单。
- en: If you refresh the page in the browser, you'll see that the login form has disappeared.
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你在浏览器中刷新页面，你会发现登录表单已经消失了。
- en: 'But now we need a way for site visitors to be able to show it again to be able
    to log in. We''ll use jQuery to add a login link to the page, which will appear
    right where the form was:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 但是现在我们需要一个让网站访问者能够再次显示它以便登录的方法。我们将使用 jQuery 在页面上添加一个登录链接，它将出现在表单原来的位置：
- en: '[PRE19]'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Already, we''re referring to the form again — inserting the login link before
    the form. We already included some styles in the CSS to style the link and display
    it where we''d like. If you refresh the page in the browser, you''ll see the login
    form has been replaced by a login link:'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 已经，我们再次提到了表单 —— 在表单之前插入登录链接。我们已经在 CSS 中包含了一些样式，来样式化链接并将其显示在我们想要的位置。如果你在浏览器中刷新页面，你会看到登录表单被一个登录链接替换了：
- en: '![Time for action — creating a fancy login form](img/6709OS_08_08.jpg)'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![操作时间 —— 创建一个花哨的登录表单](img/6709OS_08_08.jpg)'
- en: 'But clicking the login link doesn''t do anything. Let''s fix that by adding
    in some Colorbox magic. We''ll select our login link and call the `colorbox()`
    method as follows:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 但是点击登录链接没有任何反应。让我们通过添加一些 Colorbox 魔法来解决这个问题。我们将选择我们的登录链接，并调用 `colorbox()` 方法，如下所示：
- en: '[PRE20]'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Refresh the page in the browser and try clicking the link. Hmmm...not really
    what we had in mind, right? We have to tell Colorbox that we want to load up some
    content that's already on the page.
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 刷新浏览器页面，然后尝试点击链接。嗯... 这不是我们想要的结果，对吧？我们必须告诉 Colorbox 我们想加载一些已经在页面上的内容。
- en: 'We already put the reference to the login form in the `href` attribute of the
    link, so we''ll use that to our advantage. We''ll pass a couple of key/value pairs
    to the `colorbox()` method to tell Colorbox that we want to load some content
    that''s already on the page and exactly which content we want to show:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们已经在链接的 `href` 属性中放置了登录表单的引用，所以我们会利用这一点。我们将向 `colorbox()` 方法传递一些键值对，告诉 Colorbox
    我们想加载一些已经在页面上的内容，并确切地指定我们想要显示的内容：
- en: '[PRE21]'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Refresh the page in the browser and you'll see that the Colorbox opens, but
    it appears to be empty. That's because we hid our form. It's been loaded into
    the Colorbox, but it's hidden from view.
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 刷新浏览器页面，你会看到 Colorbox 打开了，但是它似乎是空的。那是因为我们隐藏了我们的表单。它已经加载到了 Colorbox 中，但是被隐藏了。
- en: 'We''ll use another key/value pair to tell Colorbox to show the form when the
    Colorbox opens:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将使用另一个键值对来告诉 Colorbox 在 Colorbox 打开时显示表单：
- en: '[PRE22]'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '`onOpen` is one of the keys provided by the Colorbox plugin. It allows us to
    write a function that will be run when the Colorbox opens. In this case, I''m
    going to find my form and show it. Now if you refresh the page in the browser,
    you''ll be able to see the form in the ColorBox as follows:'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`onOpen` 是 Colorbox 插件提供的键之一。它允许我们编写一个函数，该函数将在 Colorbox 打开时运行。在这种情况下，我将找到我的表单并显示它。现在，如果你在浏览器中刷新页面，你将能够在
    ColorBox 中看到表单如下：'
- en: '![Time for action — creating a fancy login form](img/6709OS_08_09.jpg)'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![操作时间 —— 创建一个花哨的登录表单](img/6709OS_08_09.jpg)'
- en: 'This looks fine enough, and we''ll touch this up with a bit of CSS in a moment
    to make it look even better. But what happens when you close the Colorbox? That
    pesky login form is visible again in the header. So we''ll pass another key/value
    pair to our `colorbox()` method to hide the form when the Colorbox closes:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这看起来已经足够好了，我们稍后会用一点 CSS 来修饰一下，让它看起来更好一些。但是当你关闭 Colorbox 时会发生什么？那个讨厌的登录表单又出现在头部了。所以我们会向我们的
    `colorbox()` 方法传递另一个键值对，在 Colorbox 关闭时隐藏表单：
- en: '[PRE23]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: That will make sure our form is hidden when the Colorbox is closed so it doesn't
    show up in the header again.
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将确保我们的表单在 Colorbox 关闭时被隐藏，这样它就不会再次出现在头部。
- en: 'Now, let''s make our login form look a bit friendlier. Open up `styles.css`
    and add some CSS that styles the login form inside the lightbox:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们让我们的登录表单看起来更友好一些。打开 `styles.css` 文件，然后添加一些 CSS，样式化光箱内的登录表单：
- en: '[PRE24]'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'And we also want to make the login form box a bit wider, so we''re going to
    pass a `width` key to the `colorbox()` method as follows:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还希望将登录表单框变宽一点，所以我们会向 `colorbox()` 方法传递一个 `width` 键，如下所示：
- en: '[PRE25]'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Now, if you refresh the page in the browser, you''ll see our Colorbox is indeed
    400 pixels wide and our login form has taken on the nice chunky appearance we
    wanted with our CSS, but there''s still a bit of a problem. Our form is too tall
    for the Colorbox:'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，如果你在浏览器中刷新页面，你会看到我们的 Colorbox 确实是 400 像素宽，我们的登录表单已经采用了我们想要的用 CSS 创建的漂亮的块状外观，但还有一个小问题。我们的表单对于
    Colorbox 来说太高了：
- en: '![Time for action — creating a fancy login form](img/6709OS_08_10.jpg)'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![操作时间 —— 创建一个花哨的登录表单](img/6709OS_08_10.jpg)'
- en: The Colorbox script hasn't realized that our form has a different set of CSS
    once it's displayed inside the Colorbox — it's still expecting the form to be
    of the same height it was when it was displayed in the header. But that form is
    much smaller. If you put your mouse over the login form and scroll down, you'll
    see the rest of the login form is there — we just can't see it.
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Colorbox 脚本并没有意识到我们的表单在显示在 Colorbox 内部时具有不同的 CSS —— 它仍然期望表单的高度与在标题中显示时的高度相同。但是，该表单要小得多。如果你把鼠标放在登录表单上并向下滚动，你会看到剩下的登录表单在那里
    —— 我们只是看不到它。
- en: 'We don''t want any scrolling in our Colorbox, so we''ll turn that off and we''ll
    tell the Colorbox to resize itself to its content instead by passing a couple
    more key/value pairs to the `colorbox()` method as follows:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们不希望在我们的 Colorbox 中出现任何滚动，所以我们将关闭它，并通过向 `colorbox()` 方法传递一些额外的键/值对告诉 Colorbox
    调整大小以适应其内容：
- en: '[PRE26]'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The scrolling key allows us to turn off any scrolling inside the Colorbox, and
    the `onComplete` key is a callback function that's called as soon as content loads
    into the Colorbox. As soon as the content loads into the Colorbox, we're going
    to call a method that the Colorbox plugin has made available to us to resize the
    Colorbox to accommodate its content.
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 滚动键允许我们关闭 Colorbox 内部的任何滚动，并且 `onComplete` 键是一个回调函数，在内容加载到 Colorbox 中后立即调用。一旦内容加载到
    Colorbox 中，我们将调用一个 Colorbox 插件提供给我们的方法来调整 Colorbox 的大小以容纳其内容。
- en: Now, if you refresh the page in the browser, you'll see the Colorbox slide open
    to a larger height to accommodate the new CSS for our form. Perfect!
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，如果你在浏览器中刷新页面，你会看到 Colorbox 滑动打开以适应我们表单的新 CSS 而变得更高。完美！
- en: '![Time for action — creating a fancy login form](img/6709OS_08_11.jpg)'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![操作时间 — 创建漂亮的登录表单](img/6709OS_08_11.jpg)'
- en: What just happened?
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚刚发生了什么？
- en: We learned how to take a simple header login form and change it to a login link
    that opens a login form in a Colorbox when clicked. We worked through any potential
    problems caused by this approach by passing in callback functions as values for
    keys specified in the Colorbox plugin documentation. We learned how to call functions
    to run when the Colorbox opens, when the content is loaded into the Colorbox,
    and when the Colorbox closes. We learned that we can force the Colorbox to resize
    to accommodate its current contents by calling the `$.colorbox.resize()` method.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 我们学会了如何将简单的标题登录表单更改为在单击时在 Colorbox 中打开登录表单的登录链接。我们通过将回调函数传递给 Colorbox 插件文档中指定的键的值来解决了此方法可能引起的任何潜在问题。我们学会了在
    Colorbox 打开时调用函数、当内容加载到 Colorbox 中时以及当 Colorbox 关闭时运行函数。我们学会了通过调用 `$.colorbox.resize()`
    方法强制 Colorbox 调整大小以适应其当前内容。
- en: Video player
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 视频播放器
- en: Colorbox is flexible enough to be used to display a video player as content.
    We'll link out to a YouTube video, then add some Colorbox magic to display the
    video in a Colorbox. Please note that this example makes use of Ajax, and will
    therefore only work if you upload your files to a server or if you create a server
    on your own computer.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: Colorbox 是足够灵活的，可以用来显示视频播放器作为内容。我们将链接到一个 YouTube 视频，然后添加一些 Colorbox 魔法来在 Colorbox
    中显示视频。请注意，此示例使用了 Ajax，因此只有在上传文件到服务器或在您自己的计算机上创建服务器时才会起作用。
- en: Time for action — showing a video in a lightbox
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作时间 — 在灯箱中显示视频
- en: 'Follow these steps to set up Colorbox to play a set of videos:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤设置 Colorbox 以播放一组视频：
- en: 'We''ll get started as we usually do, by setting up a basic HTML file and associated
    files and folders, just like we did in [Chapter 1](ch01.html "Chapter 1. Designer,
    Meet jQuery"), *Designer, Meet jQuery*. In the body of our HTML document, we''re
    going to include a link to a YouTube video:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将像通常一样开始，通过设置一个基本的 HTML 文件和关联的文件和文件夹，就像我们在[第1章](ch01.html "第1章。设计师，见 jQuery")中所做的那样，*设计师，见
    jQuery*。在我们 HTML 文档的主体中，我们将包含一个指向 YouTube 视频的链接：
- en: '[PRE27]'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Note a couple of things about my video link. First, I'm using the embed URL
    for the video rather than the link to YouTube's video page. For users without
    JavaScript enabled, this will take them to a stand-alone video player page on
    YouTube's site. For users with JavaScript enabled, it will ensure that only the
    video player is loaded into the Colorbox rather than the full YouTube video page.
    Second, I'm adding a parameter to the URL for the video, setting `autoplay` to
    1\. This is how you can make embedded YouTube videos automatically play when the
    site visitor views your page. It's generally a bad idea to have a video autoplay,
    but in this case, the user will have already clicked a link that says **Watch
    the video**, so it seems like a safe bet that they'll be expecting a video to
    play once they've clicked that link.
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意关于我的视频链接的一些事情。首先，我使用的是视频的嵌入式 URL，而不是指向 YouTube 视频页面的链接。对于未启用 JavaScript 的用户，这将把他们带到
    YouTube 网站上的独立视频播放器页面。对于启用了 JavaScript 的用户，这将确保只有视频播放器加载到 Colorbox 中，而不是完整的 YouTube
    视频页面。其次，我向视频的 URL 添加了一个参数，将`autoplay`设置为 1。这是在访问者查看页面时如何使嵌入式 YouTube 视频自动播放的方法。通常情况下，自动播放视频是一个不好的主意，但在这种情况下，用户已经点击了一个标有
    **观看视频** 的链接，所以他们很可能在点击链接后期待视频播放。
- en: Next, just as with the other Colorbox examples so far, you'll need to attach
    your chosen Colorbox skin CSS file in the head of your document, make sure the
    images are available, update the path to the images in the CSS if necessary, and
    finally attach the Colorbox plugin in the foot of the document.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，就像迄今为止的其他 Colorbox 示例一样，您需要在文档的头部附加您选择的 Colorbox 皮肤 CSS 文件，确保图像可用，如果需要的话，请更新
    CSS 中图像的路径，并最后在文档的底部附加 Colorbox 插件。
- en: 'Now, we''ll open up our `scripts.js` file and get set to write up our custom
    JavaScript. We''ll get started with the document ready statement:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将打开我们的`scripts.js`文件，并准备好编写我们的自定义 JavaScript。我们将从文档就绪语句开始：
- en: '[PRE28]'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Next, we''ll select the video link and call the `colorbox()` method:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将选择视频链接并调用`colorbox()`方法：
- en: '[PRE29]'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: But if we refresh the page in a browser and attempt to view the video, we get
    an error. That's because we're attempting to load in the video via Ajax, and because
    of browser security restrictions, we can't make asynchronous requests to a different
    server. In this case, we're trying to make a call to [http://youtube.com](http://youtube.com),
    but that's not where our Colorbox page is hosted, so the browser blocks our request.
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 但是，如果我们在浏览器中刷新页面并尝试查看视频，我们会收到一个错误。那是因为我们试图通过 Ajax 加载视频，由于浏览器的安全限制，我们不能对不同服务器进行异步请求。在这种情况下，我们试图调用
    [http://youtube.com](http://youtube.com)，但这不是我们 Colorbox 页面托管的地方，所以浏览器阻止了我们的请求。
- en: 'Luckily, we can create an `iframe` and load our external content into the `iframe`.
    And also luckily, Colorbox provides a way for us to do so easily. We''ll just
    pass a key/value pair to the `colorbox()` method setting `iframe` to `true` like
    the following:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 幸运的是，我们可以创建一个`iframe`并将我们的外部内容加载到`iframe`中。而且幸运的是，Colorbox 提供了一种让我们轻松实现这一点的方法。我们只需向`colorbox()`方法传递一个键/值对，将`iframe`设置为`true`，就像下面这样：
- en: '[PRE30]'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Now our video loads into the Colorbox, but the Colorbox has no idea how large
    our video can be, so we can't see it.
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在我们的视频加载到了 Colorbox 中，但是 Colorbox 不知道我们的视频有多大，所以我们看不到它。
- en: 'We''ll have to tell Colorbox how big we expect our video player to be. We''ll
    do this by passing in key/value pairs for the `innerWidth` and `innerHeight`.
    We''re using `innerWidth` and `innerHeight` rather than width and height in this
    case because we''re passing in how large we want the video player (or content)
    to be, rather than how large we want the Colorbox to be:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们必须告诉 Colorbox 我们期望视频播放器有多大。我们将通过为`innerWidth`和`innerHeight`传递键/值对来实现这一点。在这种情况下，我们使用`innerWidth`和`innerHeight`而不是宽度和高度，因为我们传递的是我们想要视频播放器（或内容）的大小，而不是我们想要
    Colorbox 的大小：
- en: '[PRE31]'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'We can also use the Colorbox to create a way for users to easily view several
    videos. Let''s go back into `index.html` and add a list of favorite videos to
    our page instead of just one link to a video. We''ll use a `rel` attribute set
    to `favorites` for each one and provide a `title` attribute so our videos will
    display a caption underneath:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还可以使用 Colorbox 创建一种让用户轻松查看多个视频的方式。让我们回到`index.html`，而不是只添加一个视频链接，我们将在页面上添加一个收藏视频的列表。我们为每个视频设置一个`rel`属性为`favorites`，并提供一个`title`属性，这样我们的视频就会在下面显示标题：
- en: '[PRE32]'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The only update we have to make to our JavaScript in `scripts.js` is to update
    the selector. Instead of selecting one single link by ID, we''re going to select
    our set of favorites links by their `rel` attribute:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们在`scripts.js`中唯一需要更新的是更新选择器。我们不再通过ID选择单个链接，而是通过它们的`rel`属性选择我们的一组收藏链接：
- en: '[PRE33]'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: If you view the page in the browser, you'll see that you have a caption under
    the video and next and previous buttons that allow you to navigate between the
    videos without closing the Colorbox.
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您在浏览器中查看页面，您会发现在视频下有一个标题，并且有下一个和上一个按钮，允许您在不关闭Colorbox的情况下在视频之间导航。
- en: 'The only thing that''s a bit awkward is that our pagination indicator says
    Image 1 of 3 when we''re showing videos, not images. Luckily, Colorbox provides
    a way for us to customize this text with the `current` key:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 唯一有点尴尬的是，当我们显示视频而不是图像时，我们的分页指示器显示“图像1/3”。幸运的是，Colorbox提供了一种让我们使用`current`键自定义此文本的方法：
- en: '[PRE34]'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Now, our pagination indicator correctly reads Video 1 of 3\. Our site visitors
    can easily move from video to video without having to close the Colorbox and each
    video displays a caption:'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，我们的分页指示器正确显示为Video 1 of 3。我们的网站访客可以轻松地从一个视频转移到另一个视频，而不必关闭Colorbox，每个视频都显示标题：
- en: '![Time for action — showing a video in a lightbox](img/6709OS_08_12.jpg)'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间——在灯箱中显示视频](img/6709OS_08_12.jpg)'
- en: What just happened?
  id: totrans-175
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚刚发生了什么？
- en: We learned how to create both a stand-alone video player and a multiple video
    player inside a Colorbox. We learned how to pass in key/value pairs to tell the
    Colorbox to load in external content in an `iframe`, working around cross-domain
    Ajax restrictions. We also learned how to modify the pagination indicator text
    to fit our current content type. We used the `innerWidth` and `innerHeight` keys
    to set the video player's size.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 我们学会了如何在Colorbox中创建独立的视频播放器和多个视频播放器。我们学会了传递键/值对以告诉Colorbox在`iframe`中加载外部内容，以解决跨域Ajax限制。我们还学会了如何修改分页指示器文本以适应我们当前的内容类型。我们使用了`innerWidth`和`innerHeight`键来设置视频播放器的大小。
- en: One-page web gallery
  id: totrans-177
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 单页网页画廊
- en: Next up, we'll take a look at how we can create a single-page web gallery to
    show off your favorite sites or all the incredible sites you've designed yourself.
    Note that this example makes use of Ajax, so you'll either have to upload your
    pages to a web server or create a web server on your own computer to see it in
    action.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将看看如何创建一个单页网页画廊，展示你喜欢的网站或你自己设计的所有令人难以置信的网站。请注意，此示例使用了Ajax，因此您必须将您的页面上传到网络服务器，或者在您自己的计算机上创建一个网络服务器才能看到其运行情况。
- en: Time for action — creating a one-page web gallery
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间——创建一个单页网页画廊
- en: 'Follow these steps to create a one-page web gallery:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤创建一个单页网页画廊：
- en: 'We''ll get started by setting up a basic HTML file and associated files and
    folders, just like we did in [Chapter 1](ch01.html "Chapter 1. Designer, Meet
    jQuery"), *Designer, Meet jQuery*. Inside the body of our HTML document, we''ll
    create a list of links to the sites we want to include in our design gallery:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将从设置一个基本的HTML文件和相关文件和文件夹开始，就像我们在[第1章](ch01.html "第1章。设计师，遇见jQuery")中所做的那样，*设计师，遇见jQuery*。在我们的HTML文档的主体中，我们将创建一个链接列表，链接到我们想在我们的设计画廊中包含的网站：
- en: '[PRE35]'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Note that I've added a `rel` attribute equal to `gallery` to each link.
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，我为每个链接都添加了等于`gallery`的`rel`属性。
- en: Now, just as with the other Colorbox examples, choose a style and attach the
    stylesheet in the header of the document, make all the necessary images available
    to your page, update the path to the images in the CSS if necessary, and attach
    the Colorbox plugin at the bottom of the page.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，就像其他Colorbox示例一样，选择一个样式并将样式表附加到文档的头部，在页面中使所有必要的图像可用，如果需要更新CSS中图像的路径，并在页面底部附加Colorbox插件。
- en: 'Next, we''ll open our `scripts.js` file and add our document ready statement:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将打开我们的`scripts.js`文件并添加我们的文档就绪语句：
- en: '[PRE36]'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Next, we''ll select all links with the `rel` attribute equal to `gallery` and
    call the `colorbox()` method:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将选择所有`rel`属性等于`gallery`的链接，并调用`colorbox()`方法：
- en: '[PRE37]'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Just as we did with the video example, we'll set the `iframe` key to `true`
    since we're loading in content from other domains. I'm also going to set the `width`
    and `height` of the ColorBox to `90%`, so that it takes up nearly the entire browser
    window. I'm also going to adjust the pagination indicator text to read `Web Site`
    instead of `Image:`
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就像我们在视频示例中所做的一样，我们将`iframe`键设置为`true`，因为我们正在从其他域加载内容。我还将ColorBox的`width`和`height`设置为`90％`，这样它几乎占据了整个浏览器窗口。我还将调整分页指示器文本，将其更改为`Web
    Site`，而不是`Image:`。
- en: '[PRE38]'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Now, if you refresh the page in the browser, you can see that clicking one of
    the links opens a Colorbox and loads that website into the Colorbox. A site visitor
    can interact with the loaded website just as they would if they had loaded it
    into a separate browser window, browsing through pages, and so on. When finished
    with one site, they can click the next arrow to visit the next website in the
    list and then hit the Esc key on the keyboard or click the close button or anywhere
    outside the Colorbox to close the Colorbox when they're finished.
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，如果您在浏览器中刷新页面，您会发现单击其中一个链接会打开一个 Colorbox 并将该网站加载到 Colorbox 中。网站访客可以与加载的网站进行交互，就像他们将其加载到单独的浏览器窗口中一样，浏览页面等。完成一个站点后，他们可以单击下一个箭头访问列表中的下一个网站，然后在完成时单击键盘上的
    Esc 键或单击关闭按钮或单击 Colorbox 外部的任何地方关闭 Colorbox。
- en: Note
  id: totrans-192
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that it is possible for website owners to block your ability to load their
    sites into an `iframe`. If you have set up a local server using MAMP or WAMP,
    then you might notice that the Google example won't load into your page. It will,
    however, load if you upload your code to an external server. Be sure to test all
    the sites you want to use in your web gallery to ensure that they work as expected.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，网站所有者有可能阻止您将其网站加载到 `iframe` 中的能力。如果您使用 MAMP 或 WAMP 设置了本地服务器，那么您可能会注意到 Google
    示例无法加载到您的页面中。但是，如果您将代码上传到外部服务器，则可以加载。务必测试您要在网站图库中使用的所有站点，以确保它们按预期工作。
- en: What just happened?
  id: totrans-194
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚刚发生了什么？
- en: We used much of what we learned creating a Colorbox video player to display
    external websites inside a Colorbox. This allows our site visitor to browse a
    collection of websites without ever leaving our page. We once again told Colorbox
    to load our content into an `iframe` to work around cross-domain Ajax restrictions.
    We customized the pagination indicator text, and set a width and height for our
    Colorbox.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 我们利用创建 Colorbox 视频播放器所学到的大部分内容来在 Colorbox 中显示外部网站。这允许我们的网站访客在不离开我们的页面的情况下浏览一系列网站。我们再次告诉
    Colorbox 将我们的内容加载到 `iframe` 中，以解决跨域 Ajax 限制。我们自定义了分页指示器文本，并为 Colorbox 设置了宽度和高度。
- en: Summary
  id: totrans-196
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: We've looked at several uses for the adaptable and flexible Colorbox plugin,
    which can be used to display any kind of content in a lightbox. It can be used
    to create browsable image galleries, give access to forms and video players without
    cluttering up the page with clunky UI elements, and even to create a browsable
    website gallery. The ColorBox plugin is completely styled with CSS, making it
    possible for the lightbox to have any appearance you can dream up. The plugin
    even includes vector image assets that can be used as a starting point for creating
    your own lightbox design. The behavior of the lightbox can be modified by passing
    a series of key/value pairs to the `colorbox()` method, making the Colorbox plugin
    suitable for any possible lightbox use.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看过了适应性和灵活性的颜色框插件的几种用法，它可以用来在灯箱中显示任何类型的内容。它可用于创建可浏览的图像库，提供对表单和视频播放器的访问，而不会在页面上堆积笨重的
    UI 元素，甚至可以创建可浏览的网站图库。颜色框插件完全由 CSS 样式化，使得灯箱可以呈现您想象出的任何外观。该插件甚至包括可用作创建自己的灯箱设计起点的矢量图像资源。通过向
    `colorbox()` 方法传递一系列键值对，可以修改灯箱的行为，使得 Colorbox 插件适用于任何可能的灯箱用途。
- en: 'Next up, we''ll take a look at another common website task: creating slideshows.'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将看一下另一个常见的网站任务：创建幻灯片演示。
