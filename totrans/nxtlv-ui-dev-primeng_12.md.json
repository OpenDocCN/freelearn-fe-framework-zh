["```js\n    npm install @ngx-translate/core @ngx-translate/http-loader --save\n    ```", "```js\n    // translation.provider.ts\n    import { HttpClient } from '@angular/common/http'\n    import { importProvidersFrom, makeEnvironmentProviders } from '@angular/core'\n    import { TranslateLoader, TranslateModule } from '@ngx-translate/core'\n    import { TranslateHttpLoader } from '@ngx-translate/http-loader'\n    export function HttpLoaderFactory(http: HttpClient) {\n      return new TranslateHttpLoader(http)\n    }\n    export const provideTranslation = () =>\n      makeEnvironmentProviders([\n        importProvidersFrom(\n          TranslateModule.forRoot({\n            defaultLanguage: 'en',\n            loader: {\n              provide: TranslateLoader,\n              useFactory: HttpLoaderFactory,\n              deps: [HttpClient],\n            },\n          })\n        ),\n      ])\n    // app.config.ts\n    export const appConfig: ApplicationConfig = {\n      providers: [\n        ...\n        provideHttpClient(),\n        provideTranslation()\n      ],\n    }\n    ```", "```js\n    // en.json\n    {\n      \"greeting\": \"Hello!\",\n      \"welcome\": \"Welcome to our application.\"\n    }\n    // vi.json\n    {\n      \"greeting\": \"Xin chào!\",\n      \"welcome\": \"Chào mùng đên vói úng dung cúa chúng tôi.\"\n    }\n    ```", "```js\n    @Component({\n      standalone: true,\n      template: `\n        <h2>Ngx Translate</h2>\n        <h1>{{ 'greeting' | translate }}</h1>\n        <p>{{ 'welcome' | translate }}</p>\n      `,\n      imports: [CommonModule, TranslateModule],\n    })\n    export default class NgxTranslateComponent {}\n    ```", "```js\nimport { TranslateService } from '@ngx-translate/core'\nimport { DropdownChangeEvent, DropdownModule } from 'primeng/dropdown'\n@Component({\n  standalone: true,\n  selector: 'primengbook-language',\n  template: `\n    <p-dropdown\n      [options]=\"languages\"\n      optionLabel=\"label\"\n      optionValue=\"value\"\n      (onChange)=\"switchLanguage($event)\"\n    />\n  `,\n  imports: [CommonModule, DropdownModule],\n})\nexport class LanguageComponent {\n  private translationService = inject(TranslateService)\n  languages = [\n    {\n      label: 'English',\n      value: 'en',\n    },\n    {\n      label: 'Tiếng Việt',\n      value: 'vi',\n    },\n  ]\n  switchLanguage(event: DropdownChangeEvent) {\n    this.translationService.use(event.value)\n  }\n}\n```", "```js\n// translation.provider.ts\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/main/', '.json')\n}\n```", "```js\n// lazy-translation.provider.ts\nfunction HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/lazy/', '.json')\n}\nexport const provideLazyTranslation = () =>\n  makeEnvironmentProviders([\n    importProvidersFrom(\n      TranslateModule.forChild({\n        defaultLanguage: 'en',\n        isolate: true,\n        loader: {\n          provide: TranslateLoader,\n          useFactory: HttpLoaderFactory,\n          deps: [HttpClient],\n        },\n      })\n    ),\n  ])\n// app.routes.ts\nexport const appRoutes: Route[] = [\n  ...\n  {\n    path: 'ngx-lazy-translate',\n    loadComponent: () => import('./pages/ngx-lazy-translate.component'),\n    providers: [provideLazyTranslation()],\n  },\n]\n```", "```js\nprivate updateHtmlTag(lang: string) {\n  let direction = 'ltr'\n  if (['ar'].includes(lang)) {\n    direction = 'rtl'\n  }\n  this.document.getElementsByTagName('html')[0].setAttribute('lang', lang)\n  this.document.getElementsByTagName('body')[0].setAttribute('dir', direction)\n}\n```", "```js\n    {\n        \"vi\": {\n            \"dayNames\": [\"Chủ nhật\", \"Thứ hai\", \"Thứ ba\", \"Thứ tư\", \"Thứ năm\", \"Thứ sáu\", \"Thứ bảy\"],\n            \"dayNamesShort\": [\"CN\", \"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\"],\n            \"dayNamesMin\": [\"CN\", \"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\"],\n            \"monthNames\": [\"Tháng Giêng\", \"Tháng Hai\", \"Tháng Ba\", \"Tháng Tư\", \"Tháng Năm\", \"Tháng Sáu\", \"Tháng Bảy\", \"Tháng Tám\", \"Tháng Chín\", \"Tháng Mười\", \"Tháng Mười một\", \"Tháng Mười hai\"],\n            \"monthNamesShort\": [\"Giêng\", \"Hai\", \"Ba\", \"Tư\", \"Năm\", \"Sáu\", \"Bảy\", \"Tám\", \"Chín\", \"Mười\", \"Mười một\", \"Mười hai\"],\n             }\n       }\n    ```", "```js\n    // assets/i18n/main/vi.json\n    {\n      \"greeting\": \"Chào mừng đến chương 12\",\n      \"welcome\": \"Chào mừng đến với ứng dụng của chúng tôi.\",\n      \"primeng\": {\n        \"accept\": \"Có\",\n        \"reject\": \"Không\",\n        \"choose\": \"Chọn\",\n        \"cancel\": \"Hủy\",\n        \"dayNames\": [\n          \"Chủ nhật\",\n          \"Thứ hai\",\n          \"Thứ ba\",\n          \"Thứ tư\",\n          \"Thứ năm\",\n          \"Thứ sáu\",\n          \"Thứ bảy\"\n        ],\n        …\n      }\n    }\n    ```", "```js\n    // language.component.ts\n    private primeNgConfig = inject(PrimeNGConfig)\n    switchLanguage(event: DropdownChangeEvent) {\n    ...\n      this.translateService.get('primeng').subscribe((res) => {\n        this.primeNgConfig.setTranslation(res)\n      })\n    }\n    primeng key using the translateService.get() method. Once the translation value is obtained, it is passed to the primeNgConfig.setTranslation() method to set the translation for the primeng library. This ensures that PrimeNG components and features display their text and messages in the appropriate language.\n    ```"]