- en: Chapter 5. Creating Custom Tooltips
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第五章 制作自定义工具提示
- en: Now that we've seen how powerful plugins are and how easy they make advanced
    functionality, let's see how we can take advantage of another plugin to make custom
    tooltips.
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 现在我们已经看到插件有多强大以及它们如何轻松地实现高级功能，让我们看看如何利用另一个插件来制作自定义工具提示。
- en: Browsers automatically create tooltips when you include the title attribute
    — usually on a link or an image. When your site visitor hovers their mouse cursor
    over the item or moves focus to the item by tabbing to it, the tooltip will appear
    — usually as a small yellow box that appears to be floating over the page. Tooltips
    are a great way to add a little additional information to your page. Screen reader
    software reads out tooltip text for site visitors with disabilities who are using
    assistive technology, making them useful for enhancing accessibility. Furthermore,
    title attributes on images and links can help search engines index your content
    more effectively.
  id: totrans-2
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当您包含`title`属性时，浏览器会自动创建工具提示 —— 通常在链接或图像上。当您的网站访客将鼠标悬停在该项上或通过按 Tab 键将焦点移到该项上时，工具提示将显示
    —— 通常为一个看起来悬浮在页面上的小黄色框。工具提示是向页面添加一些附加信息的好方法。屏幕阅读器软件会为使用辅助技术的残障网站访客朗读出工具提示文本，从而增强可访问性。此外，图像和链接上的`title`属性可以帮助搜索引擎更有效地索引您的内容。
- en: 'In this chapter, we''ll learn:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '在本章中，我们将学习:'
- en: How to use Craig Thompson's qTip plugin to replace the browser's default tooltips
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用克雷格·汤普森的 qTip 插件来替换浏览器的默认工具提示
- en: How to customize the appearance of the qTip tooltips
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何自定义 qTip 工具提示的外观
- en: How to enhance a navigation bar with custom tooltips
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何通过自定义工具提示增强导航栏
- en: How to display Ajax content in custom tooltips
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在自定义工具提示中显示 Ajax 内容
- en: Simple custom text tooltips
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简单的自定义文本工具提示
- en: I hope I've convinced you that `title` attributes are great for enhancing both
    the usability and accessibility of your site. The only problem with tooltips is
    that they can't be customized in any way. Each browser has its own style of tooltip
    and that style is not customizable via CSS. Sometimes this is fine, but sometimes
    it's nice to have more control over the appearance of tooltips.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 希望我已经说服了你，`title` 属性对于增强网站的可用性和可访问性都很棒。工具提示的唯一问题是它们无法以任何方式定制。每个浏览器都有自己的工具提示样式，并且这种样式不能通过
    CSS 定制。有时这没关系，但有时控制工具提示的外观会更好。
- en: Time for action — simple text tooltips
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 — 简单文本工具提示
- en: 'We''ll start off working with tooltips by making a simple replacement for the
    browser''s default tooltip that we can style any way we''d like:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '我们将通过制作一个简单的替代浏览器默认工具提示的工具提示来开始工作，我们可以自定义样式:'
- en: 'Set up a basic HTML file and associated files and folders like we did in [Chapter
    1](ch01.html "Chapter 1. Designer, Meet jQuery"), *Designer, Meet jQuery*. Our
    HTML file should contain a set of links that each have a `title` attribute like
    this:'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '设置一个基本的 HTML 文件以及像我们在[第一章](ch01.html "第一章。设计师，见 jQuery")中所做的那样的相关文件和文件夹，*设计师，见
    jQuery*。我们的 HTML 文件应包含一组链接，每个链接都有一个像这样的`title`属性:'
- en: '[PRE0]'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Open that page in a browser and move your mouse over the links. You'll see the
    text contained in the `title` attribute shown in a tooltip. Exactly where the
    tooltip appears and exactly what it looks like will depend on your browser, but
    here's how it looks in mine (Google Chrome on Mac OS):![Time for action — simple
    text tooltips](img/6709_05_01.jpg)
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在浏览器中打开该页面，并将鼠标移动到链接上。您将看到`title`属性中包含的文本显示为工具提示。工具提示出现的位置和外观取决于您的浏览器，但以下是我的浏览器（Mac
    OS 上的 Google Chrome）中的外观:![行动时间 — 简单文本工具提示](img/6709_05_01.jpg)
- en: Now, let's spruce that up a bit by replacing the default browser tooltip with
    our own styled one. First, we'll need to download Craig Thompson's qTip plugin.
    It's available from [http://craigsworks.com/projects/qtip2](http://craigsworks.com/projects/qtip2).
    His site has a list of features, several sample demos, the documentation you'll
    need to learn to use the plugin, a forum where you can get help, and the files
    needed are available for download. Head to the download page, and you'll see a
    checklist of options to help you download the right version.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们将其美化一下，用我们自己的样式替换默认的浏览器工具提示。首先，我们需要下载克雷格·汤普森的 qTip 插件。可以从[http://craigsworks.com/projects/qtip2](http://craigsworks.com/projects/qtip2)获取。他的网站上列出了一些功能、几个示例演示、您需要学习使用插件的文档、一个可以获取帮助的论坛，并且所需的文件可供下载。转到下载页面，您将看到一个选项清单，帮助您下载正确的版本。
- en: 'Let''s walk through this page one section at a time:'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '让我们逐个部分地浏览此页面:'
- en: '![Time for action — simple text tooltips](img/6709_05_02.jpg)'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![操作时间 —— 简单文本工具提示](img/6709_05_02.jpg)'
- en: '**Step 1** gives us a number of options for downloading the script. In the
    section titled **Version**, I''m going to select **Stable** version so that I
    get the latest version of the script that has been tested thoroughly. Those wanting
    to experiment with and test the plugin as the developer works on it, can select
    the nightly build.'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**第 1 步**为我们提供了多种下载脚本的选项。在标题为**版本**的部分，我将选择**稳定**版本，这样我就可以得到经过彻底测试的最新版本的脚本。那些想要在开发者开发插件时尝试和测试插件的人可以选择夜间版本。'
- en: In the **Extras** section, I'm going to uncheck **jQuery 1.5** since I have
    already downloaded jQuery and attached it to my project. If you're starting a
    new project and haven't yet downloaded jQuery, you can leave this checked to download
    jQuery simultaneously with the plugin.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**额外**部分，我将取消**jQuery 1.5**的选择，因为我已经下载了 jQuery 并将其附加到我的项目中。如果您正在启动一个新项目，并且还没有下载
    jQuery，您可以将其选中以与插件同时下载 jQuery。
- en: In the **Styles** section, I'm going to leave all three sets of styles selected,
    since I want as many options as possible for styling my tooltips. Likewise, I'm
    going to leave all options selected in the **Plugins** section since I'll be working
    on a variety of different types of tooltips and taking advantage of these different
    features. If you wanted to simply create simple text-based tooltips, you could
    uncheck all of these extras and get a much smaller download file. These extras
    are only needed if you're going to be taking advantage of the extra features.
    It's a nice feature of this plugin that we can pick and choose just the functionality
    we want in order to keep our JavaScript files as small as possible.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**样式**部分，我将保留所有三组样式选中，因为我希望尽可能多地选择样式来设置我的工具提示。同样，在**插件**部分，我将保留所有选项选中，因为我将会使用各种不同类型的工具提示，并利用这些不同的功能。如果你只想创建简单的基于文本的工具提示，你可以取消所有这些额外的选项，这样可以得到一个更小的下载文件。这些额外的功能只在你要利用额外功能时才需要。这个插件的一个很好的功能是，我们可以挑选我们想要的功能，以尽可能保持我们的
    JavaScript 文件尽可能小。
- en: '**Step 2** offers an automatic converter for anyone who is updating their code
    that might have previously used an earlier version of the plugin. We can ignore
    this step since we''re newcomers to the qTip plugin.'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**第 2 步**为那些正在更新他们的代码，可能之前使用了插件的早期版本的任何人提供了一个自动转换器。由于我们是 qTip 插件的新手，所以我们可以忽略这一步。'
- en: '**Step 3** gives us the opportunity to tell the plugin developer about our
    site that uses the plugin in exchange for a chance to be featured on the plugin''s
    home page gallery. Since we''re only doing some practice exercises in this chapter,
    we won''t use this now, but it may be something for you to consider for your own
    projects later on.'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**第 3 步**为我们提供了一个机会，告诉插件开发者我们的网站使用了插件，并有机会被列入插件主页的画廊中。由于在本章节中我们只是做了一些练习，所以我们现在不会使用这个，但这可能是你以后在自己的项目中考虑的事情。'
- en: '**Step 4** requires us to accept the terms of the license. This plugin is licensed
    under the open source MIT and GPLv2 licenses, which makes it free for us to use,
    modify and even redistribute the code, provided the license or link to the license
    is included in the files. The license is already included in the plugin files
    when you download them, so as long as you don''t edit those files to remove the
    license, you''ll be fine.'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**第 4 步**要求我们接受许可证的条款。该插件根据开源 MIT 和 GPLv2 许可证授权，这使得我们可以自由使用、修改甚至重新分发代码，只要在文件中包含许可证或链接到许可证。当您下载这些文件时，许可证已经包含在插件文件中了，所以只要您不编辑这些文件以删除许可证，您就不会有问题。'
- en: Finally, we can click the **Download qTip** button, and your browser will download
    a ZIP file for you. Unzip it and examine its contents. Inside, we'll find two
    CSS files and two JavaScript files. (You might have an extra JavaScript file if
    you elected to download jQuery as well as the plugin script).![Time for action
    — simple text tooltips](img/6709_05_03.jpg)
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们可以点击**下载 qTip**按钮，您的浏览器将为您下载一个 ZIP 文件。解压它并检查其内容。在内部，我们会找到两个 CSS 文件和两个 JavaScript
    文件。（如果您选择同时下载 jQuery 和插件脚本，可能会有一个额外的 JavaScript 文件）。![操作时间 —— 简单文本工具提示](img/6709_05_03.jpg)
- en: 'Let''s start with the two CSS files. We have `jquery.qtip.css` and `jquery.qtip.min.css`.
    These two files have exactly the same content. The difference between them is
    that the second file is minified, making it smaller and ideal for use in production.
    The other file is the development version that we could easily edit ourselves
    or use as an example if we wanted to write our own styles for our tooltips instead
    of using the prebuilt styles. You''ll select one of the files and attach it to
    your page. In this example, I''m going to use the minified version of the file
    to keep the file as small as possible since I don''t want to write my own styles
    at this point. Copy `jquery.qtip.min.css` to your own `styles` folder, and then
    attach the file to your HTML document in the`<head>` section:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们从两个CSS文件开始。我们有`jquery.qtip.css`和`jquery.qtip.min.css`。这两个文件的内容完全相同。它们之间的区别在于第二个文件被缩小了，使其更小且更适合在生产中使用。另一个文件是开发版本，如果我们想要为我们的工具提示编写自己的样式而不是使用预构建的样式，我们可以轻松地编辑它或将其用作示例。您将选择其中一个文件并将其附加到您的页面上。在本示例中，为了使文件尽可能小，我将使用文件的经过缩小的版本，因为此时我不想编写自己的样式。将`jquery.qtip.min.css`复制到您自己的`styles`文件夹中，然后将文件附加到HTML文档的`<head>`部分：
- en: '[PRE1]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: I'm attaching the qTip stylesheet before my own `styles.css` to make it easier
    for me to override styles in the qTip stylesheet if I want to.
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我将qTip样式表附加到自己的`styles.css`之前，这样如果需要，我就可以更轻松地覆盖qTip样式表中的样式。
- en: 'Next, let''s look at the JavaScript files. We have `jquery.qtip.js` and `jquery.qtip.min.js`.
    Just like the CSS files, these are two different versions of the same file, and
    we simply have to pick one and attach it to our HTML document. The first file,
    `jquery.qtip.js`, is the development version of the file, and the largest file
    at 94K. The second file is minified and weighs in at only 41K. Since we don''t
    need to edit the plugin and are going to be using it as is, let''s select the
    minified version. Copy `jquery.qtip.min.js` to your own `scripts` folder and attach
    it at the bottom of your HTML file, in between jQuery and our own `scripts.js`
    file:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，让我们看看JavaScript文件。我们有`jquery.qtip.js`和`jquery.qtip.min.js`。就像CSS文件一样，这是同一个文件的两个不同版本，我们只需选择一个并将其附加到我们的HTML文档即可。第一个文件`jquery.qtip.js`是文件的开发版本，大小为94K，而第二个文件是经过缩小的，只有41K。由于我们不需要编辑插件，而是要直接使用它，让我们选择经过缩小的版本。将`jquery.qtip.min.js`复制到您自己的`scripts`文件夹中，并将其附加到HTML文件底部，在jQuery和我们自己的`scripts.js`文件之间：
- en: '[PRE2]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The last thing we need to do is call the plugin code. Open your `scripts.js`
    file and add the document ready statement and function:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要做的最后一件事是调用插件代码。打开您的`scripts.js`文件并添加文档准备好的语句和函数：
- en: '[PRE3]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Inside the function, select all links in the document that have `title` attributes
    and call the `qtip()` method on those links:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在函数内部，选择文档中所有具有`title`属性的链接，并在这些链接上调用`qtip()`方法：
- en: '[PRE4]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Now, when you view the page in the browser and move your mouse over the links
    with `title` attributes, you'll see the qTip-styled tooltips instead of the browser's
    default tooltips:![Time for action — simple text tooltips](img/6709_05_04.jpg)
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，当您在浏览器中查看页面并将鼠标移动到具有`title`属性的链接上时，您将看到qTip样式的工具提示，而不是浏览器的默认工具提示：![操作时间 ——
    简单文本工具提示](img/6709_05_04.jpg)
- en: Even better, these tooltips will appear with this same style, no matter which
    browser and operating system we're using.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更好的是，无论我们使用哪个浏览器和操作系统，这些工具提示都会以相同的样式显示。
- en: What just happened?
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚才发生了什么？
- en: We downloaded the qTip plugin and attached one CSS file and one JavaScript file
    to our HTML document. Then we added just a couple of lines of jQuery code to activate
    the custom tooltips.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们下载了qTip插件并将一个CSS文件和一个JavaScript文件附加到我们的HTML文档中。然后我们只添加了几行jQuery代码来激活自定义工具提示。
- en: 'We selected all the link elements on the page that had a `title` attribute.
    We did this by taking advantage of jQuery''s attribute selectors:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们选择了页面上所有具有`title`属性的链接元素。我们利用了jQuery的属性选择器来实现这一点：
- en: '[PRE5]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Putting `title` in brackets after our element selector means that we only want
    those links on the page that have a `title` attribute.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的元素选择器后面加上`title`括号意味着我们只想要页面上具有`title`属性的链接。
- en: Once we've selected those links, all that's left to do is to call the `qtip()`
    method that the qTip plugin provided for us. The `qtip()` method takes care of
    all the actions that need to be done to replace the default tooltip with a custom
    one. But what if we want to use some of the other styles included with qTip?
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们选择了这些链接，剩下的就是调用qTip插件为我们提供的`qtip()`方法了。`qtip()`方法会处理所有需要做的动作，以替换默认的工具提示为自定义的工具提示。但是如果我们想使用qTip配备的其他样式呢？
- en: Customizing qTip's appearance
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义qTip的外观
- en: You've undoubtedly noticed that the top-left corner of the qTip aligns with
    the bottom-right corner of the link when the mouse hovers over the link, and that
    the tooltip appears as a yellow box with a small arrow on the side. The qTip plugin
    offers lots of options for customizing where the tooltip appears and what it looks
    like and it does so in a straightforward and easy to understand way.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 毫无疑问，当鼠标悬停在链接上时，qTip的左上角与链接的右下角对齐，工具提示显示为黄色方框并且侧边有一个小箭头。qTip插件提供了很多选项来定制工具提示的位置和外观，而且使用起来直观而易懂。
- en: Time for action — customizing qTips
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实战任务 — 自定义qTips
- en: 'Let''s take a look at the options we have for customizing the appearance of
    qTip''s tooltips:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下我们对自定义qTip工具提示外观的选项：
- en: Let's say that we want to change the position of the tooltip. qTip gives us
    plenty of options for positioning our tooltips on our page.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设我们想改变工具提示的位置。qTip为我们在页面上定位工具提示提供了很多选项。
- en: We can match up any of these points on the tooltip to any of these points on
    the link:![Time for action — customizing qTips](img/6709_05_05.jpg)
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以把工具提示的任何一个点与链接的任何一个点匹配起来：![实战任务 — 自定义qTips](img/6709_05_05.jpg)
- en: 'In this example, we''ll match up the middle of the link''s right side with
    the middle of the tooltip''s left side, so that the tooltip appears directly to
    the right of the link. We simply need to pass some additional information to the
    `qTip()` method. We''ll keep working with the files we set up in the last example.
    Open your `scripts.js` file and pass this additional information to the `qtip()`
    method:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这个例子中，我们将把链接右侧的中间和工具提示左侧的中间匹配起来，这样工具提示就会直接出现在链接的右侧。我们只需要向`qTip()`方法传递一些额外的信息。我们将继续使用上一个例子中设置的文件。打开你的`scripts.js`文件，并将这些额外的信息传递给`qtip()`方法：
- en: '[PRE6]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The developer's goal was for this to make sense in plain language. Speaking
    from the tooltip's point of view, we're going to align my center-left at the link's
    center-right. As you can see when we refresh the page in the browser, the tooltip
    now appears directly to the right of the link.
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 开发人员的目标是使之用通俗的语言来解释。从工具提示的角度来说，我们将把我的中心左侧与链接的中心右侧对齐。当我们在浏览器中刷新页面时，你会看到工具提示现在直接出现在链接的右侧。
- en: '![Time for action — customizing qTips](img/6709_05_06.jpg)'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![实战任务 — 自定义qTips](img/6709_05_06.jpg)'
- en: In addition to changing the position of the tooltip, we can change the appearance
    of the tooltip itself. The CSS included with the plugin includes several color
    schemes and styles. These different colors and styles are applied by adding CSS
    classes to our tooltip. Let's take a look at how we add these CSS classes.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 除了改变工具提示的位置，我们还可以改变工具提示本身的外观。插件中包含的CSS包括几种颜色方案和样式。通过向我们的工具提示添加CSS类，可以应用不同的颜色和样式。让我们看看如何添加这些CSS类。
- en: '[PRE7]'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Now when we view our tooltip in the browser, we see that it''s blue:'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '现在当我们在浏览器中查看工具提示时，我们发现它是蓝色的:'
- en: '![Time for action — customizing qTips](img/6709_05_07.jpg)'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![实战任务 — 自定义qTips](img/6709_05_07.jpg)'
- en: 'The color schemes provided with qTip include:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'qTip提供的颜色方案包括:'
- en: '`ui-tooltip` (the default yellow color scheme)'
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ui-tooltip`（默认的黄色方案）'
- en: '`ui-tooltip-light` (black text on a white tooltip)'
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ui-tooltip-light`（在白色工具提示上的黑色文字）'
- en: '`ui-tooltip-dark` (white text on a dark grey tooltip)'
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ui-tooltip-dark`（在深灰色工具提示上的白色文字）'
- en: '`ui-tooltip-red`'
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ui-tooltip-red`'
- en: '`ui-tooltip-green`'
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ui-tooltip-green`'
- en: '`ui-tooltip-blue`'
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ui-tooltip-blue`'
- en: You can add any one of these classes to your tooltips to adjust the color scheme.
  id: totrans-63
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以将这些类中的任意一个添加到你的工具提示中，以调整颜色方案。
- en: For CSS3-capable browsers, qTip also offers some fancier styles. These styles
    won't be seen in browsers that don't support the CSS3 specification, but in most
    cases, that should be fine. These styles can be considered as progressive enhancement
    for the browsers that can display them. Site visitors using a less capable browser
    will still be able to see and read the tooltips without any trouble. They just
    won't see the fancier styles applied. The available styles are as follows:![Time
    for action — customizing qTips](img/6709_05_08.jpg)
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于支持 CSS3 的浏览器，qTip 还提供了一些更花哨的样式。这些样式在不支持 CSS3 规范的浏览器中看不到，但在大多数情况下，这应该没问题。这些样式可以被视为对能够显示它们的浏览器的渐进增强。使用较低版本浏览器的网站访问者仍然可以看到和阅读提示，没有任何问题。他们只是看不到应用了更花哨的样式。可用的样式如下所示：![操作时间
    — 自定义 qTips](img/6709_05_08.jpg)
- en: 'Just like with the color schemes, we can take advantage of these styles by
    adding CSS classes to our tooltips. Multiple CSS classes can be added to a tooltip
    like so:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与配色方案一样，我们可以通过向提示添加 CSS 类来利用这些样式。可以像这样向提示添加多个 CSS 类：
- en: '[PRE8]'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This code creates a tooltip that is blue and has a shadow.
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此代码创建了一个蓝色带阴影的提示。
- en: What just happened?
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚才发生了什么？
- en: We saw how we can pass position and style values to the qTip method to customize
    the appearance of our tooltips. We learned the color schemes and styles that are
    included with the qTip plugin, and learned how we can use those styles in our
    own pages to customize the qTip tooltips.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到了如何将位置和样式值传递给 qTip 方法以自定义我们的提示外观。我们了解了 qTip 插件包含的颜色方案和样式，并学会了如何在我们自己的页面中使用这些样式来自定义
    qTip 提示。
- en: Custom styles for tooltips
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提示的自定义样式
- en: We can also write our own color schemes and styles for our tooltips if none
    of the available options are quite right for our site.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有任何可用选项完全适合我们的站点，我们还可以编写自己的颜色方案和样式。
- en: Time for action — writing custom tooltip styles
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作时间 — 编写自定义提示样式
- en: 'Let''s take a look at how we can write our own custom styles for qTip''s tooltips
    by writing a new purple color scheme:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何编写我们自己的 qTip 提示的自定义样式，编写一个新的紫色配色方案：
- en: 'We''ll get started by examining the CSS that codes up the red tooltip style
    that comes with qTip. You''ll find this bit of CSS inside the `jquery.qtip.css`
    file that was included with the qTip download. Here are all the CSS styles that
    affect the red tooltips:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将开始检查编码了红色提示样式的 CSS，这是 qTip 自带的。你会在随 qTip 下载的 `jquery.qtip.css` 文件中找到这段 CSS。以下是影响红色提示的所有
    CSS 样式：
- en: '[PRE9]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'From examining this CSS, we can see that all we need to do to create a new
    color scheme is to create a new class name and four shades of purple to create
    a new style. Here''s the CSS for my purple color scheme. Open your `styles.css`
    file and add these styles:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过检查这段 CSS，我们可以看到要创建新的颜色方案，我们只需要创建一个新的类名和四种紫色色调来创建新的样式。这是我的紫色配色方案的 CSS。打开你的
    `styles.css` 文件并添加这些样式：
- en: '[PRE10]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Now, to take advantage of our new purple tooltip style, we simply have to adjust
    our jQuery code to add the newly created `ui-tooltip-purple` class to our tooltips.
    Open `scripts.js` and adjust the classes being added to the tooltips:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，要利用我们的新紫色提示样式，我们只需调整我们的 jQuery 代码，将新创建的 `ui-tooltip-purple` 类添加到我们的提示中。打开
    `scripts.js` 文件并调整添加到提示中的类：
- en: '[PRE11]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now, when you preview the link in the browser, you will see a purple tooltip,
    as shown in the following screenshot:'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，在浏览器中预览链接时，你将看到一个紫色的提示，如下截图所示：
- en: '![Time for action — writing custom tooltip styles](img/6709_05_09.jpg)'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![操作时间 — 编写自定义提示样式](img/6709_05_09.jpg)'
- en: What just happened?
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚才发生了什么？
- en: Using one of the CSS classes provided with qTip, we wrote our own custom style
    and applied it to our tooltips. You can use any CSS styles you'd like to create
    a custom appearance for the qTip tooltips. There's virtually no limit to the possibilities
    for styles when you start mixing in color and font choices, background images,
    border styles, and so on.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 qTip 提供的一个 CSS 类，我们编写了自己的自定义样式并将其应用到了我们的提示中。你可以使用任何 CSS 样式来为 qTip 提示创建自定义外观。当你开始混合颜色和字体选择、背景图片、边框样式等时，几乎没有限制样式的可能性。
- en: Have a go hero — create a tooltip of your own design
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 动手试试 — 创建自己设计的提示
- en: Try writing your own CSS class to style the tooltips. Try a new color scheme,
    new font styles and sizes, text shadows, box shadows — anything you can think
    of to make the tooltips match the design of a site or really stand out.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试编写自己的 CSS 类来为提示样式。尝试新的配色方案、新的字体样式和大小、文字阴影、盒阴影 — 任何你能想到的，以使提示与网站设计相匹配或真正突出。
- en: Enhancing navigation with tooltips
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用工具提示增强导航
- en: Once you know how to make custom tooltips, you'll find there are lots of possible
    uses for them. Let's take a look at enhancing a standard navigation bar with custom
    tooltips using the qTip plugin.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你知道如何制作自定义工具提示，你会发现它们有很多可能的用途。让我们看看如何使用qTip插件增强标准导航栏的自定义工具提示。
- en: Time for action — building a fancy navigation bar
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 —— 建立一个花哨的导航栏
- en: 'Let''s take a look at how we can use custom-designed tooltips to add a little
    progressively enhanced punch to a basic navigation bar:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何使用定制设计的工具提示为基本导航栏添加一些逐步增强的效果：
- en: 'Let''s start by setting up a basic HTML page with associated folders and files
    just as we did in [Chapter 1](ch01.html "Chapter 1. Designer, Meet jQuery"), *Designer,
    Meet jQuery*. In the body of the document, include a simple navigation bar like
    this:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们从设置一个带有关联文件夹和文件的基本HTML页面开始，就像我们在[第1章](ch01.html "Chapter 1. Designer, Meet
    jQuery")中所做的一样，*Designer, Meet jQuery*。在文档的主体中，包含一个简单的导航栏，就像这样：
- en: '[PRE12]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Next, we''ll add some CSS styles to our navigation bar. There''s a lot of CSS
    here because I''m using a gradient as a background and it requires a lot of different
    CSS for different browsers right now. Add these lines of CSS to your `styles.css`
    file. If you prefer a different style, feel free to customize the CSS to suit
    your own taste:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将为我们的导航栏添加一些CSS样式。这里有很多CSS，因为我正在使用渐变作为背景，而且目前不同的浏览器需要很多不同的CSS。将这些CSS行添加到你的`styles.css`文件中。如果你喜欢不同的风格，请随意自定义CSS以适应你自己的口味：
- en: '[PRE13]'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Now we have a navigation bar horizontally across our page, like this:![Time
    for action — building a fancy navigation bar](img/6709_05_10.jpg)
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们的页面上有了一个水平的导航栏，就像这样：![行动时间 —— 建立一个花哨的导航栏](img/6709_05_10.jpg)
- en: I've included `title` attributes on my links and when I move my mouse over the
    navigation links, those are visible. I'd like to replace these boring browser
    default tooltips with friendly-looking conversation bubbles below my navigation.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我在我的链接上包含了`title`属性，当我将鼠标移动到导航链接上时，它们是可见的。我想用友好的对话框替换这些无聊的浏览器默认工具提示，在我的导航下方。
- en: 'Just like we did in the previous example, we''re going to copy the qTip CSS
    and JavaScript to our own styles and scripts folders and attach them to the HTML
    document:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就像我们在上一个例子中所做的那样，我们要复制qTip的CSS和JavaScript到我们自己的styles和scripts文件夹中，并将它们附加到HTML文档中：
- en: '[PRE14]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Next, open your `scripts.js` file so we can call the `qtip()` method and pass
    in our customizations. We''ll start off nearly the same way as last time, except
    that we''ll use a different selector, since we only want to select links inside
    the navigation bar:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，打开你的`scripts.js`文件，这样我们就可以调用`qtip()`方法并传递我们的自定义内容。我们将几乎像上次那样开始，只是我们将使用不同的选择器，因为我们只想选择导航栏内的链接：
- en: '[PRE15]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Now the default tooltips are replaced with qTip-styled tooltips.
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在默认的工具提示已经被qTip样式的工具提示替换了。
- en: 'Next, we''re going to create our own style for the navigation tooltips, so
    we''ll write some new CSS to make them look like speech bubbles. Add these styles
    to your `styles.css` file:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将为导航工具提示创建我们自己的样式，所以我们将编写一些新的CSS使它们看起来像对话框。将这些样式添加到你的`styles.css`文件中：
- en: '[PRE16]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Now that we''ve got a new CSS style for our tooltips ready to go, we just have
    to add this new class to the tooltips. Go back to `scripts.js` and add the new
    class to the JavaScript:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经准备好了新的工具提示CSS样式，我们只需将这个新类添加到工具提示中即可。回到`scripts.js`，并将新类添加到JavaScript中：
- en: '[PRE17]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Next, let''s position the speech bubbles so that they appear underneath each
    of the navigation links. In `scripts.js`, pass the position information to the
    `qtip()` method:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，让我们将对话框定位到每个导航链接的下方。在`scripts.js`中，将位置信息传递给`qtip()`方法：
- en: '[PRE18]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Now, we need to control the width of the tooltips so they don''t appear too
    wide. We''ll set the width to 150px:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要控制工具提示的宽度，使其不要显得太宽。我们将宽度设置为150px：
- en: '[PRE19]'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Now the last thing we''ll do is change the way the tooltips appear and disappear
    from the page. By default, the qTip plugin uses a very quick and subtle fade in
    and fade out. Let''s change that, so that the tooltips slide into view and slide
    back out of view:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们要做的最后一件事是改变工具提示从页面上出现和消失的方式。默认情况下，qTip插件使用非常快速和微妙的淡入淡出效果。让我们改变一下，让工具提示滑入视图并滑出视图：
- en: '[PRE20]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Now when you view the page in a browser, you can see the conversation bubbles
    slide into view underneath each navigation link when you move your mouse over
    the link, and slide back out of view when you move your mouse off the link.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在当您在浏览器中查看页面时，您可以看到对话气泡在您将鼠标悬停在链接上时从下方滑入视图，并在您将鼠标移出链接时滑出视图。
- en: What just happened?
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚刚发生了什么？
- en: We reviewed how to create and attach a custom CSS style to qTip's tooltips and
    how to position the tooltip wherever you'd like it to appear. We also learned
    how to control the width of the tooltips to ensure we get a uniform size.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们回顾了如何创建和附加自定义 CSS 样式到 qTip 的工具提示，以及如何定位工具提示在任何你想要的位置。我们还学会了如何控制工具提示的宽度，以确保我们得到统一的大小。
- en: Then we saw how to override the default show and hide behaviors and replace
    them with custom animations. In this case, we used jQuery's `slideDown()` effect
    to show the tooltips. We passed a value of 300 to the `slideDown()` method, which
    means the animation will take 300 milliseconds to complete, or about a third of
    a second. I've found that if an animation takes much longer than that, site visitors
    get impatient waiting for it.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们看到了如何覆盖默认的显示和隐藏行为，并用自定义动画替换它们。在这种情况下，我们使用了 jQuery 的 `slideDown()` 效果来显示工具提示。我们向
    `slideDown()` 方法传递了一个值为 300，这意味着动画将花费 300 毫秒完成，或者大约三分之一秒。我发现如果动画持续时间超过这个时间，网站访客会因等待而感到不耐烦。
- en: Next, we overrode the default hide behavior with jQuery's `slideUp()` method.
    I passed a value of 100, meaning the animation will complete rather quickly in
    about one-tenth of a second. When this animation runs, the site visitor has already
    decided to move on, so it's best to get the information out of their way as quickly
    as possible.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们使用 jQuery 的 `slideUp()` 方法覆盖了默认的隐藏行为。我传递了一个值为 100，意味着动画将在大约十分之一秒内完成。当此动画运行时，网站访客已经决定继续前进，因此最好尽快将信息移出他们的视线。
- en: Showing other content in tooltips
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在工具提示中显示其他内容
- en: So far we've seen how we can customize the appearance of qTip's tooltips, controlling
    their appearance, animation, and position. However, we've only used the tooltips
    to show text, namely the text we've placed inside a link's `title` attribute.
    We have a lot of more powerful options, though. We can load just about any content
    we'd like into our tooltips. We can also make sure the tooltips appear when an
    item is clicked instead of hovered over. Let's take a look at how we can load
    in content from another HTML page into our tooltips when we click on a link.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经看到了如何自定义 qTip 工具提示的外观，控制它们的外观、动画和位置。然而，我们只是用工具提示来显示文本，即我们放置在链接的 `title`
    属性中的文本。然而，我们有更强大的选项。我们可以加载几乎任何内容到我们的工具提示中。我们还可以确保当项目被点击而不是悬停在上面时出现工具提示。让我们看看当我们点击链接时如何将内容从另一个
    HTML 页面加载到我们的工具提示中。
- en: In this section, we'll dive into using Ajax for the first time. In case you
    aren't familiar, **Ajax** is a method for fetching some new content from the server
    and displaying it to the site visitor without having to completely refresh the
    page. Because the browser is only getting and displaying just the bit of information
    the site visitor needs, it's often much faster and snappier.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将首次深入使用 Ajax。如果您不熟悉，**Ajax** 是一种从服务器获取一些新内容并将其显示给网站访问者的方法，而无需完全刷新页面。因为浏览器只是获取并显示网站访问者所需的那一部分信息，所以它通常会更快速、更敏捷。
- en: Just a quick note before we dive into Ajax for the first time. Modern browsers
    have several security rules for Ajax requests. You won't be able to simply view
    your ajaxified HTML files in a browser as we've been doing up until this point.
    In order to view the Ajax in action, you'll either have to upload your files to
    a server before viewing them, or you'll have to set up a server on your own computer.
    If you're a Mac user, I highly recommend **MAMP**, which has both a free and a
    premium paid version. You can get more information and download MAMP from [http://www.mamp.info](http://www.mamp.info).
    If you're on Windows, I highly recommend **WampServer**, which is free. You can
    get more information and download WampServer from [http://www.wampserver.com.](http://www.wampserver.com.)
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们第一次深入Ajax之前，先简单说明一下。现代浏览器有很多对Ajax请求的安全规定。你不会像之前那样简单地在浏览器中查看你的ajaxified HTML文件。为了观看Ajax的操作，你要么必须将你的文件上传到服务器上，然后再查看它们，要么你必须在自己的电脑上搭建一个服务器。如果你是Mac用户，我强烈推荐使用**MAMP**，它有免费和高级付费版本。你可以从[http://www.mamp.info](http://www.mamp.info)获取更多信息并下载MAMP。如果你使用Windows，我强烈推荐使用**WampServer**，它是免费的。你可以从[http://www.wampserver.com.](http://www.wampserver.com.)获取更多信息并下载WampServer。
- en: Time for action — building custom Ajax tooltips
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 创建自定义Ajax工具提示
- en: 'Follow these steps to set up some tooltips that display Ajax content:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤设置一些显示Ajax内容的工具提示：
- en: 'We''ll get started by creating an HTML document and associated files and folders
    like we did in [Chapter 1](ch01.html "Chapter 1. Designer, Meet jQuery"), *Designer,
    Meet jQuery*. Our HTML page should contain a couple paragraphs of text that have
    some links to further information. My first HTML document looks like the following:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将从创建一个HTML文档和相关文件夹和文件开始，就像我们在[第1章](ch01.html "Chapter 1. Designer, Meet jQuery")
    *设计师，遇见jQuery*中所做的那样。我们的HTML页面应该包含一些段落文字，其中有一些链接指向更多信息。我的第一个HTML文档看起来如下：
- en: '[PRE21]'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'We need an easy way to select the three more information links, so we''ll add
    a CSS class to each one like this:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要一种轻松的方法来选择这三个更多信息链接，所以我们会像这样给每一个添加一个CSS类：
- en: '[PRE22]'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Next, we need to create a set of short pages that each contain a photo and
    a caption for each of the links in my previous text. Here''s a sample of one of
    my short HTML pages:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要创建一组简短的页面，每个页面中都包含一个链接和前文中链接的标题。以下是我其中一个简短HTML页面的示例：
- en: '[PRE23]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: As you can see, the file is extremely small and simple.
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如你所见，文件非常小而简单。
- en: Create an `infoboxes` directory alongside the main page. Save your simple HTML
    file to this directory, and then create more simple files one for each link in
    the main document.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在主页旁边创建一个`infoboxes`目录。将你的简单HTML文件保存到这个目录中，并为主文档中的每个链接创建更多的简单文件。
- en: Now, if you open the main page in a browser and click the links in the text,
    you'll see that these short, plain pages load up in the browser. We've got the
    basic functionality down, so next we'll move on to progressively enhancing our
    page for those with JavaScript enabled.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果你在浏览器中打开主页并点击文本中的链接，你会发现这些简短而普通的页面加载到了浏览器中。我们已经掌握了基本功能，接下来我们将逐步增强页面功能，以满足那些启用了JavaScript的用户。
- en: 'We''ll use the purple color scheme that we set up earlier in the chapter for
    our tooltips, so let''s add the CSS for the `ui-tooltip-purple` class to the `styles.css`
    file:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将使用在本章前面设置的紫色配色方案来为我们的工具提示添加CSS，所以让我们把`ui-tooltip-purple`类的CSS添加到`styles.css`文件中：
- en: '[PRE24]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Now that we''ve got our HTML and CSS all set up, let''s dive into the JavaScript.
    Attach the qTip plugin at the bottom of the page, between jQuery and your `scripts.js`
    file:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经设置好了HTML和CSS，让我们开始学习JavaScript。在页面底部，介于jQuery和你的`scripts.js`文件之间，添加qTip插件：
- en: '[PRE25]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Next, open `scripts.js` and we''ll get started with our document ready function:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，打开`scripts.js`，我们将开始使用我们的文档就绪功能：
- en: '[PRE26]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Next, we''re going to call the `qtip()` method in a slightly different way
    than we have before. Inside the `qtip()` method, we need to easily get to the
    information about just the link we''re working with, so we''re going to use jQuery''s
    `each()` method to loop through them one at a time. That will look like this:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将以与以往略有不同的方式调用`qtip()`方法。在`qtip()`方法内部，我们需要轻松地获取与我们正在处理的链接相关的信息，因此我们将使用jQuery的`each()`方法逐个循环处理它们。代码如下：
- en: '[PRE27]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Now, if you refresh the page in your browser, you'll see that nothing happens
    when you hover over the links. This is because our links don't have `title` attributes,
    and that's what the qTip plugin is looking for by default. However, we can override
    that default to insert any content we'd like into our tooltips.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果你在浏览器中刷新页面，你会发现当你悬停在链接上时什么也不会发生。这是因为我们的链接没有`title`属性，默认情况下 qTip 插件正在寻找它。然而，我们可以覆盖默认值，插入我们想要的任何内容到我们的工具提示中。
- en: 'We''re going to be displaying those simple HTML pages we set up inside our
    tooltips. Even though Ajax requests tend to be quick, there could still be a bit
    of a delay, so let''s get ready to use Ajax by adding a loading message that will
    display for our site visitors while they wait for the real content to show up:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将在工具提示中显示我们设置的简单 HTML 页面。尽管 Ajax 请求往往很快，但仍可能会有一些延迟，所以让我们准备使用 Ajax，在我们的站点访问者等待真正的内容显示时显示一个加载消息：
- en: '[PRE28]'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Now when you refresh the page in the browser, you'll see the tooltips contain
    the **Loading...** text.
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，当你在浏览器中刷新页面时，你会发现工具提示包含**正在加载...**的文本。
- en: 'We want to switch the behavior of the tooltips so that they show up when the
    link is clicked instead of when the mouse hovers over. We also want to make sure
    that only one tooltip is visible on the page at a time. If the site visitor opens
    a tooltip while another is already open, the first one should close so they don''t
    end up with many tooltips open all over the screen. This is how we''ll do that:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们希望改变工具提示的行为，使其在点击链接时显示，而不是在鼠标悬停时显示。我们还希望确保页面上一次只能看到一个工具提示。如果站点访问者在另一个工具提示已经打开的情况下打开了一个工具提示，第一个工具提示应该关闭，以免他们在屏幕上到处打开许多工具提示。我们将这样做：
- en: '[PRE29]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Now if you refresh the page in a browser, you'll see that the tooltip no longer
    appears when we hover over the links.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果你在浏览器中刷新页面，你会发现当我们悬停在链接上时工具提示不再出现了。
- en: 'However, when we click on the links right now, we''re taken to the short simple
    HTML page we set up. We have to tell the browser to ignore the link because we
    have other plans in mind. We can cancel the default behavior by adding this line
    of code above our earlier code and inside the document ready statement:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 但是，当我们现在点击链接时，我们被带到了我们设置的简单的 HTML 页面。我们必须告诉浏览器忽略这个链接，因为我们有其他计划。我们可以通过在我们早期的代码之上并在文档就绪语句内添加这一行代码来取消默认行为：
- en: '[PRE30]'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: What we're doing here is binding a function that fires when the links are clicked.
    Our function is pretty simple. We pass the current link to the function (e in
    this case for brevity, but we could have named it almost anything), and then we
    tell the browser to prevent the default link behavior.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们在这里做的是绑定一个在链接被点击时触发的函数。我们的函数很简单。我们将当前链接传递给函数（在这种情况下是 e，为了简洁起见，但我们几乎可以将其命名为任何东西），然后告诉浏览器阻止默认链接行为。
- en: Now if you refresh the page in the browser, you'll see that the tooltips appear
    when we click on the links — clicking the links no longer takes us off to a new
    page.
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，如果你在浏览器中刷新页面，你会发现当我们点击链接时工具提示出现了 —— 点击链接不再将我们带到新页面。
- en: 'But we could write our code in a more succinct way. Remember that jQuery allows
    us to chain methods, one right after the other. In this case, we can chain the
    `bind()` method directly to the end of the `each()` method we wrote earlier. The
    new JavaScript will look like this:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 但是我们可以用更简洁的方式编写我们的代码。记住，jQuery 允许我们链式调用方法，一个接一个。在这种情况下，我们可以直接将`bind()`方法链到我们之前编写的`each()`方法的末尾。新的
    JavaScript 代码将如下所示：
- en: '[PRE31]'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Next, let''s adjust the style of our tooltips by adding a drop shadow and applying
    the purple color scheme we wrote to our tooltips:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，让我们通过添加阴影和应用我们为工具提示编写的紫色配色方案来调整工具提示的样式：
- en: '[PRE32]'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Now when you refresh the page in the browser, you'll see that we have purple
    tooltips that have a drop shadow. We're getting closer.
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，当你在浏览器中刷新页面时，你会发现我们有紫色的工具提示，带有阴影。我们离目标越来越近了。
- en: Next, let's add in the Ajax magic to load our simple HTML pages into the tooltips.
    Remember, this will only work from a server, so to see this step in action, you'll
    either have to upload your files to a server, or else set up a server on your
    own computer.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，让我们加入 Ajax 魔法，将我们的简单 HTML 页面加载到工具提示中。请记住，这只能从服务器上运行，所以要看到这一步的效果，你要么必须将文件上传到服务器上，要么在自己的计算机上设置一个服务器。
- en: 'To tell the tooltips to fetch content via Ajax, all we have to do is pass the
    URL of the content we''d like to fetch. In this case, we''ve already linked out
    to that content. We just have to grab the link URL from each link. That''s easily
    accessible to us by using the `attr()` method of jQuery. That will look like this:'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要通知工具提示通过 Ajax 获取内容，我们只需要传递我们想要获取的内容的 URL。在这种情况下，我们已经链接到了那个内容。我们只需要从每个链接中获取链接
    URL。我们可以通过使用 jQuery 的 `attr()` 方法很容易地获取到这个URL。代码如下：
- en: '[PRE33]'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'In this case, `$(this)` is referring to the current link. I call the `attr()`
    method and pass that method the attribute I would like to fetch, in this case
    the `href` attribute of the link contains the information that I want. The `attr()`
    method can be used to fetch any attribute — an `src` attribute of an image, a
    `title` attribute of any element, a `cellspacing` attribute of a table, and so
    on:'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这种情况下，`$(this)` 指的是当前链接。我调用 `attr()` 方法，并传递我想要获取的属性，在这种情况下，链接的 `href` 属性包含了我想要的信息。`attr()`
    方法可以用于获取任何属性——图像的 `src` 属性，任何元素的 `title` 属性，表格的 `cellspacing` 属性，等等：
- en: '[PRE34]'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Now that we know how to get the `href` attribute of our link, we''ll use that
    to tell the tooltip which URL to use to get the content for our tooltip:'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们知道如何获取我们链接的 `href` 属性，我们将使用它来告诉工具提示要使用哪个 URL 来获取工具提示的内容：
- en: '[PRE35]'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Refresh your browser and click on one of the links — you'll see the purple tooltip
    pop up with the HTML content from our simple HTML pages. Pretty amazing that fetching
    content with Ajax can be that simple, isn't it?
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 刷新浏览器，然后点击其中一个链接——你会看到紫色的工具提示弹出，显示我们简单的 HTML 页面中的 HTML 内容。使用 Ajax 获取内容是如此简单，是不是很惊人？
- en: Now, let's make a couple of other final tweaks to the tooltips to make them
    even better.
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，让我们对工具提示进行一些其他最后的调整，使它们变得更好。
- en: 'First, we''ll add a title bar to the tooltips. To get some custom text for
    this, let''s go back to each of the links in the `index.html` file and add a `title`
    attribute that contains the text to display at the top of the tooltips:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们将为工具提示添加一个标题栏。为了获得一些自定义文本，让我们回到 `index.html` 文件中的每个链接，并添加一个包含要在工具提示顶部显示的文本的
    `title` 属性：
- en: '[PRE36]'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Now, we can fetch the `title` attribute of these links in much the same way
    that we fetched the URL of the `href` attribute and pass it to qTip as the title
    text for the tooltip. While we''re at it, we can also pass in a `true` value for
    button to show a small close button at the top-right of the tooltip:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以以类似的方式获取这些链接的 `title` 属性，就像我们获取了 `href` 属性的 URL 一样，并将其传递给 qTip 作为工具提示的标题文本。顺便说一下，我们还可以为
    button 传递一个 `true` 值，以在工具提示的右上角显示一个小的关闭按钮：
- en: '[PRE37]'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Now when you refresh the browser, you'll see a darker title bar with a close
    button appear at the top of each tooltip.
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在当你刷新浏览器，你会看到每个工具提示顶部会出现一个带有关闭按钮的较深色标题栏。
- en: 'However, if you try to move your mouse over to click the close button, you''ll
    see that the tooltip disappears before you can get there. We changed the show
    value of the tooltip to show on a click instead of on a mouse hover, but we never
    changed the hide value — the tooltip is still being hidden when we move our mouse
    off the link. This is a little bit awkward, so I''m going to change the hide value
    to `unfocus` so that the tooltip will be hidden when the link loses focus or when
    the site visitor clicks the close button on the tooltip:'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 但是，如果你试图移动鼠标点击关闭按钮时，你会看到工具提示在你到达之前就消失了。我们将工具提示的显示值改为在点击时显示而不是鼠标悬停时显示，但我们从未改变隐藏值——当我们移开鼠标离开链接时，工具提示仍然被隐藏。这有点尴尬，所以我将隐藏值改为`unfocus`，这样当链接失去焦点或网站访问者单击工具提示的关闭按钮时，工具提示将被隐藏：
- en: '[PRE38]'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Refresh your browser and you'll see that the interaction is much better now.
    Our site visitor doesn't have to carefully leave their mouse over the link in
    order to view the content inside our tooltip. And our tooltip is still easy to
    remove — the site visitor can click the close button, or click anywhere outside
    the tooltip on the page and the tooltips hide.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 刷新浏览器，你会发现交互现在好多了。我们网站的访问者不必小心将鼠标悬停在链接上以查看工具提示内的内容。而且我们的工具提示仍然容易移除——网站访问者可以点击关闭按钮，或者在页面上工具提示外的任何地方单击，工具提示就会隐藏起来。
- en: 'Now, there''s just one thing left to do, and that''s to position the tooltips
    right where we''d like them to appear. I want to show my tooltips centered below
    the links, so I''ll match up the top-center of the tooltip with the bottom-center
    of the link:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，只剩下一件事要做，那就是将工具提示定位到我们希望它们出现的位置。我希望我的工具提示在链接下方居中显示，所以我将工具提示的顶部中心与链接的底部中心对齐：
- en: '[PRE39]'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Now, if you refresh the page in the browser and click the links, you'll see
    the tooltips slide into place from their default position.
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，如果你在浏览器中刷新页面并点击链接，你会看到工具提示从默认位置滑动到指定位置。
- en: 'Our tooltips are looking good, but we still have a couple of problems. One
    is that the animation of the tooltip from the bottom corner to the middle of the
    tooltip is a little bit distracting. To work around this, let''s set the `effect`
    value to `false`. That way the tooltip will show up where it''s supposed to without
    the animation of sliding into place. The other problem is that, depending on the
    size of your browser window, sometimes the tooltips are cut off and display outside
    the screen area. To make sure this doesn''t happen, we''ll set the `viewport`
    value to the window like the following:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们的工具提示看起来不错，但我们仍然有一些问题。一个问题是工具提示从底角到中间位置的动画有点分散注意力。为了解决这个问题，让我们将 `effect` 值设置为
    `false`。这样工具提示将直接出现在应该出现的位置，而不会有滑动到指定位置的动画效果。另一个问题是，根据浏览器窗口的大小，有时工具提示会被裁剪并显示在屏幕区域之外。为了确保这种情况不会发生，我们将
    `viewport` 值设置为窗口，如下所示：
- en: '[PRE40]'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Now you'll see when you reload the page in the browser, that the tooltip will
    display centered below the link if possible, but if that would put it outside
    the window area, then the tooltip will adjust its position to the best possible
    place for display in relation to the link. We lose a bit of control over just
    where the tooltip appears, but we can make sure that our site visitors will always
    be able to see the tooltip's content, which is more important.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在当你在浏览器中重新加载页面时，如果可能的话，工具提示将显示在链接下方的中心位置，但如果这会使其超出窗口区域，则工具提示将调整其位置以确保在与链接相关的最佳位置显示。我们失去了对工具提示出现位置的一些控制，但我们可以确保我们的网站访问者始终能够看到工具提示的内容，这更重要。
- en: '![Time for action — building custom Ajax tooltips](img/6709_05_11.jpg)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![行动时间 — 构建自定义 Ajax 工具提示](img/6709_05_11.jpg)'
- en: Summary
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We covered a lot of ground in this chapter. We learned how to use the qTip plugin
    to replace the browser's default tooltips with custom-designed tooltips. We saw
    how to take the customization a bit further by adding speech-bubble tooltips to
    a navigation bar. And finally, we used Ajax to pull in some external content,
    customizing not only the appearance of the tooltip, but also pulling in custom
    content, adding a title bar and close button, ensuring the tooltip would always
    be visible, and customizing the show and hide behaviors of the tooltip. I hope
    that you can see how flexible the qTip plugin is and how many uses it can have
    beyond just customizing the appearance of tooltips. Have fun experimenting with
    all the different settings listed in the plugin's documentation and see how creative
    you can be in customizing the appearance of your tooltips.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们涵盖了很多内容。我们学习了如何使用 qTip 插件来替换浏览器默认的工具提示为自定义设计的工具提示。我们看到如何通过在导航栏中添加气泡工具提示来进一步定制化。最后，我们使用
    Ajax 来拉取一些外部内容，不仅定制了工具提示的外观，还拉取了自定义内容，添加了标题栏和关闭按钮，确保工具提示始终可见，并定制了工具提示的显示和隐藏行为。我希望你能看到
    qTip 插件有多灵活，以及它除了定制工具提示外还有多种用途。愿你在尝试插件文档中列出的所有不同设置时玩得开心，并发挥你在定制工具提示外观方面的创意。
- en: Next up, we'll take a look at creating nicely designed and animated dropdown
    navigation menus.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将看看如何创建设计精美且动画效果出色的下拉式导航菜单。
