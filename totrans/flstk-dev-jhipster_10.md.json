["```js\n> curl https://github.com/jhipster/jhipster-registry/releases/download/v*<version>*/jhipster-registry-*<version>*.war \n```", "```js\n> ./jhipster-registry-<version>.war --security.user.password=admin --jhipster.security.authentication.jwt.secret=secret-key --spring.cloud.config.server.native.search.locations=file:./central-config\n```", "```js\n--security.user.password=admin\n```", "```js\n--jhipster.security.authentication.jwt.secret=secret-key\n```", "```js\n--spring.cloud.config.server.native.search.locations\n```", "```js\nconfigserver:\n    name: JHipster Registry config server\n    status: Connected to the JHipster Registry config server using ...\njhipster:\n    security:\n        authentication:\n            jwt:\n               secret: awesome-my-secret-token-to-change-in-production\n```", "```js\n> git clone https://github.com/jhipster/jhipster-registry\n```", "```js\n> cd jhipster-registry\n```", "```js\n> ./mvnw \n```", "```js\n> ./mvnw -Pprod\n```", "```js\n> ./mvnw -Pprod package\n> target/jhipster-registry-<version>.war --spring.profiles.active=prod,git\n```", "```js\n> cd gateway\n> docker-compose -f src/main/docker/jhipster-registry.yml up\n```", "```js\nversion: 2\nservices:\n    jhipster-registry: \n        image: jhipster/jhipster-registry:v3.2.3\n        volumes:\n            - ./central-server-config:/central-config\n        environment:\n            - SPRING_PROFILES_ACTIVE=dev\n            - SECURITY_USER_PASSWORD=admin\n            - JHIPSTER_REGISTRY_PASSWORD=admin\n            - SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCH_LOCATION= file:./central-config\n        ports:\n            -8761:8761\n```", "```js\n> cd online-store\n> ./gradlew\n```", "```js\nUserDTO {\n    activated (boolean, optional),\n    authorities (Array[string], optional),\n    createdBy (string, optional),\n    createdDate (string, optional),\n    email (string, optional),\n    firstName (string, optional),\n    id (integer, optional),\n    imageUrl (string, optional),\n    langKey (string, optional),\n    lastModifiedDate (string, optional),\n    lastModifiedBy (string optional),\n    lastName (string, optional),\n    login (string)\n}\n```", "```js\n> cd invoice\n> ./gradlew\n```", "```js\n> cd notification\n> ./gradlew\n```", "```js\nrelationship OneToMany {\n     ...\n     ProductOrder{invoice} to Invoice{order},\n     ...\n}\n```", "```js\nentity ProductOrder {\n    placedDate Instant required\n    status OrderStatus required\n    invoiceId Long\n    code String required\n}\n```", "```js\nmicroservice Invoice, Shipment with Invoice\nentity Invoice {\n    date Instant required\n    details String\n    status InvoiceStatus required\n    paymentMethod PaymentMethod required\n    paymentDate Instant required\n    paymentAmount BigDecimal required\n}\n\nenum InvoiceStatus {\n    PAID, ISSUED, CANCELLED\n}\n\nentity Shipment {\n    trackingCode String\n    date Instant required\n    details String\n}\n\nenum PaymentMethod {\n    CREDIT_CARD, CASH_ON_DELIVERY, PAYPAL\n}\n\nrelationship OneToMany {\n    Invoice{shipment} to Shipment{invoice}\n}\n\nservice * with serviceClass\npaginate Invoice, Shipment with pagination\nmicroservice * with invoice\n```", "```js\nentity Notification {\n    date Instant required\n    details String\n    sentDate Instant required\n    format NotificationType required\n    userId Long required\n    productId Long required\n}\n\nenum NotificationType {\n    EMAIL, SMS, PARCEL\n}\n```", "```js\nmicroservice * with notification\n```", "```js\n> cd e-commerce-app/online-store \n> jhipster import-jdl online-store.jh\n> jhipster import-jdl ../notification/notification-jdl.jh --skip-ui-  \n   grouping\n> jhipster import-jdl ../invoice/invoice-jdl.jh --skip-ui-grouping\n```", "```js\n> cd e-commerce-app/notification \n> jhipster import-jdl notification-jdl.jh \n```", "```js\n> cd e-commerce-app/invoice \n> jhipster import-jdl invoice-jdl.jh\n```", "```js\n> cd e-commerce-app\n> git init\n> git add --all\n> git commit -am \"entities generated using JDL\"\n```", "```js\n/**\n* A Product Owner\n*/\n...\npublic class ProductOrder implements Serializable {\n...\n@Column(name = \"invoice_id\")\nprivate Long invoiceId;\n...\n}\n```"]