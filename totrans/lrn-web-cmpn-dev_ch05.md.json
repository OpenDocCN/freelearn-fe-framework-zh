["```js\nbower install mozbrick/brick\n\n```", "```js\n<script src=\"img/platform.js\">\n</script>\n<link rel=\"import\" href=\"bower_components/brick/dist/brick.html\">\n\n```", "```js\n<brick-calendar></brick-calendar>\n\n```", "```js\n<script src=\"img/strong>\"></script>\n<link rel=\"import\" href=\"bower_components/brick- calendar/dist/brick-calendar.html\">\n```", "```js\n<brick-flipbox>\n <!--Content goes here -->\n </brick-flipbox>\n\n```", "```js\n<script src=\"img/strong>\"></script>\n<link rel=\"import\" href=\"bower_components/brick- flipbox/dist/brick-flipbox.html\">\n```", "```js\n<!doctype html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>Brick FlipBox Element Demo</title>\n    <script src=\"img/platform.js\"></script>\n    <link rel=\"import\" href=\"../bower_components/brick- flipbox/dist/brick-flipbox.html\">\n    <style>\n        .myBox {\n            width: 100px;\n            height: 80px;\n            margin-bottom: 20px;\n        }\n        .myBox > div:first-child {\n            background: red;\n        }\n        .myBox > div:last-child {\n            background: blue;\n        }\n    </style>\n</head>\n<body>\n\n<brick-flipbox class=\"myBox\">\n <div>Front Side : 1</div>\n <div>Back Side : 2</div>\n</brick-flipbox>\n<button id=\"toggleButton\">Flip</button>\n\n<script>\n window.addEventListener('WebComponentsReady',function(){\n var flipbox = document.querySelector('brick-flipbox'),\n toggleButton = document.getElementById('toggleButton');\n flipbox.direction = 'left';\n toggleButton.addEventListener(\"click\", function(){\n flipbox.toggle();\n console.log(\"flipped : \"+flipbox.flipped);\n });\n });\n</script>\n</body>\n</html>\n```", "```js\n<brick-deck>\n <brick-card></brick-card>\n <brick-card></brick-card>\n ...\n</brick-deck>\n\n```", "```js\n<script src=\"img/strong>\"></script>\n<link rel=\"import\" href=\"bower_components/brick-deck/dist/brick- deck.html\">\n```", "```js\n<!DOCTYPE html>\n<html>\n<head lang=\"en\">\n    <meta charset=\"UTF-8\">\n    <title>Brick Deck Element Demo</title>\n    <script src=\"img/platform.js\"></script>\n    <link rel=\"import\" href=\"../bower_components/brick- deck/dist/brick-deck.html\">\n    <style>\n        brick-deck{\n            width: 150px;\n            height: 150px;\n            margin-bottom: 20px;\n        }\n        brick-card:nth-child(even){\n            background: darkgreen;\n            color:#ffffff;\n        }\n        brick-card:nth-child(odd){\n            background: blue;\n            color:#ffffff;\n        }\n    </style>\n</head>\n<body>\n <brick-deck selected-index=\"0\" transition-type=\"slide-up\">\n <brick-card selected>Card 0 : Mango</brick-card>\n <brick-card>Card 1 : Apple</brick-card>\n <brick-card>Card 2 : Orange</brick-card>\n <brick-card>Card 3 : Grapes</brick-card>\n </brick-deck>\n <button id=\"prevButton\">Previous Card</button>\n <button id=\"nextButton\">Next Card</button>\n    <script>\n window.addEventListener('WebComponentsReady',function(){\n var deck = document.querySelector('brick-deck'),\n nextButton = document.getElementById('nextButton'),\n prevButton = document.getElementById('prevButton');\n nextButton.addEventListener(\"click\", function(){\n deck.nextCard();\n });\n prevButton.addEventListener(\"click\", function(){\n deck.previousCard();\n });\n });\n    </script>\n</body>\n</html>\n```", "```js\n<brick-tabbar>\n <brick-tabbar-tab></brick-tabbar-tab>\n ...\n</brick-tabbar>\n\n```", "```js\n<script src=\"img/strong>\"></script>\n<link rel=\"import\" href=\"bower_components/brick-tabbar/dist/brick- tabbar.html\">\n```", "```js\n<!doctype html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>Brick Tabbar Element Demo</title>\n    <script src=\"img/platform.js\"></script>\n    <link rel=\"import\" href=\"../bower_components/brick- tabbar/dist/brick-tabbar.html\">\n</head>\n<body>\n<brick-tabbar>\n <brick-tabbar-tab id=\"fruits\" selected>\n Fruits\n </brick-tabbar-tab>\n <brick-tabbar-tab id=\"flowers\">\n Flowers\n </brick-tabbar-tab>\n <brick-tabbar-tab id=\"vegetables\">\n Vegetables\n </brick-tabbar-tab>\n</brick-tabbar>\n\n<button name=\"fruits\">Select Fruits</button>\n<button name=\"flowers\">Select Flowers</button>\n<button name=\"vegetables\">Select Vegetables</button>\n\n<script>\n window.addEventListener('WebComponentsReady',function(){\n var buttonList = document.querySelectorAll(\"button\");\n for (var i = 0; i < buttonList.length; ++i) {\n var item = buttonList[i];\n item.addEventListener(\"click\", function(e){\n var name = e.target.name,\n targetTabBar = document.getElementById(name);\n targetTabBar.select();\n });\n }\n });\n</script>\n</body>\n</html>\n```", "```js\n<brick-action></brick-action>\n\n```", "```js\n<script src=\"img/strong>\"></script>\n<link rel=\"import\" href=\"bower_components/brick-action/dist/brick- action.html\">\n```", "```js\n<!doctype html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>Brick Action Element Demo</title>\n    <script src=\"img/platform.js\"></script>\n    <link rel=\"import\" href=\"../bower_components/brick-flipbox/dist/brick-flipbox.html\">\n    <link rel=\"import\" href=\"../bower_components/brick-action/dist/brick-action.html\">\n    <style>\n        brick-flipbox {\n            width: 300px;\n            height: 80px;\n            margin-bottom: 20px;\n            color: #fff;\n        }\n        brick-flipbox > div:first-child {\n            background: red;\n        }\n        brick-flipbox > div:last-child {\n            background: blue;\n        }\n    </style>\n</head>\n<body>\n<brick-flipbox id=\"fruitFlowerbox\">\n <div>\n Apple, Mango, Oranges\n </div>\n <div>\n Lotus, Rose, Lily\n </div>\n</brick-flipbox>\n<brick-action target=\"fruitFlowerbox\" action=\"toggle\">\n <button>Toggle Fruits & Flowers</button>\n</brick-action>\n</body>\n</html>\n```", "```js\n<brick-menu>\n <brick-item></brick-item>\n...\n</brick-menu>\n\n```", "```js\n<script src=\"img/strong>\"></script>\n<link rel=\"import\" href=\"bower_components/brick-menu/dist/brick- menu.html\">\n```", "```js\n<!doctype html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>Brick Menu Element Demo</title>\n    <script src=\"img/platform.js\"></script>\n    <link rel=\"import\" href=\"../bower_components/brick- menu/dist/brick-menu.html\">\n</head>\n<body>\n\n<brick-menu>\n <brick-item selected>Fruits</brick-item>\n <brick-item>Flowers</brick-item>\n <brick-item>Vegetables</brick-item>\n <brick-item>Beverages</brick-item>\n</brick-menu>\n\n</body>\n</html>\n```", "```js\n    <script src=\"img/x-tag-components.min.js\"></script>\n\n    ```", "```js\n    <template id=\"clockTemplate\">\n     <style>\n            :host .clock {\n                display: inline-flex;\n                justify-content: space-around;\n                background: floralwhite;\n                font-size: 2rem;\n                font-family: serif;\n            }\n            :host .clock .hour,\n            :host .clock .minute,\n            :host .clock .second {\n                color: tomato;\n                padding: 1.5rem;\n                text-shadow: 0px 1px grey;\n            }\n     </style>\n     <div class=\"clock\">\n     <div class=\"hour\"></div>\n     <div class=\"minute\"></div>\n     <div class=\"second\"></div>\n     </div>\n    </template>\n\n    ```", "```js\n    <script>\n        (function() {\n           var thisDoc = document._currentScript.ownerDocument;\n     xtag.register('ts-clock', {\n     lifecycle: {\n     created: function() {\n           var shadowRoot = this.createShadowRoot(),\n              template=thisDoc.getElementById('clockTemplate'),\n           templateContent = template.content,\n           activeClockTemplate=templateContent.cloneNode(true);\n                     shadowRoot.appendChild(activeClockTemplate);\n       },\n       accessors: {\n          hour: {attribute: {}},\n          minute: {attribute: {}},\n          second: {attribute: {}}\n        },\n       inserted: function() {\n          var clockElement = this;\n          window.setInterval(function() {\n            \tvar date = new Date();\n            \tclockElement.setAttribute(\"hour\", date.getHours());\n         clockElement.setAttribute(\"minute\",date.getMinutes());\n          clockElement.setAttribute(\"second\",date.getSeconds());\n                        }, 1000);\n      },\n       attributeChanged: function(attributeName, oldValue, newValue) {\n         var shadowRootNode = this.shadowRoot,\n             hourPlaceholder = shadowRootNode.querySelector('.hour'),\n                            minutePlaceholder = shadowRootNode.querySelector('.minute'),\n                            secondPlaceHolder = shadowRootNode.querySelector('.second');\n                        switch (attributeName) {\n                            case \"hour\":\n                                hourPlaceholder.innerText = this.getAttribute(\"hour\");\n                                break;\n                            case \"minute\":\n                                minutePlaceholder.innerText = this.getAttribute(\"minute\");\n                                break;\n                            case \"second\":\n                                secondPlaceHolder.innerText = this.getAttribute(\"second\");\n                                break;\n                        }\n                    }\n                }\n            });\n        })();\n    </script>\n    ```", "```js\n<!DOCTYPE html>\n<html>\n<head lang=\"en\">\n    <meta charset=\"UTF-8\">\n    <title>ts-clock element demo</title>\n    <link rel=\"import\" href=\"ts-clock.html\">\n</head>\n<body>\n    <ts-clock></ts-clock>\n<script>\n    window.addEventListener('WebComponentsReady',function(){\n      var tsClock = document.querySelector(\"ts-clock\");\n      window.setTimeout(function(){\n        console.log(\"Hour : \",tsClock.getAttribute('hour'));\n        console.log(\"Minute : \",tsClock.getAttribute('minute'));\n        console.log(\"Second : \",tsClock.getAttribute('second'));\n      },1000)\n    });\n</script>\n</body>\n</html>\n```", "```js\n    <link rel=\"import\" href=\"ts-clock.html\">\n    ```", "```js\n    <ts-clock></ts-clock>\n    ```"]