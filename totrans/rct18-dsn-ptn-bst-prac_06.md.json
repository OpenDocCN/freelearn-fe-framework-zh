["```js\nconst style = {\n  color: 'palevioletred',\n  backgroundColor: 'papayawhip'\n}\n\nconst Button = () => <button style={style}>Click me!</button> \n```", "```js\nconst style = {\n  height: 100\n} \n```", "```js\nimport { useState, ChangeEvent } from 'react'\nconst FontSize = () => {\n  const [value, setValue] = useState<number>(16)\n}\nexport default FontSize \n```", "```js\nconst handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n  setValue(Number(e.target.value))\n} \n```", "```js\nreturn (\n  <input\n    type=\"number\"\n    value={value}\n    onChange={handleChange}\n    style={{ fontSize: value }}\n  />\n) \n```", "```js\ndisplay: -webkit-flex;\ndisplay: flex; \n```", "```js\n<button style=\"color:palevioletred;background-color:papayawhip;\">Click me!</button> \n```", "```js\nnpm init \n```", "```js\nnpm install --save-dev webpack webpack-dev-server webpack-cli \n```", "```js\nnpm install --save-dev @babel/core @babel/preset-env @babel/preset-react ts-loader \n```", "```js\nnpm install --save-dev style-loader css-loader \n```", "```js\nnpm install --save-dev html-webpack-plugin fork-ts-checker-webpack-plugin typescript \n```", "```js\nnpm install react react-dom \n```", "```js\n{\n  \"presets\": [\"@babel/preset-env\", \"@babel/preset-react\"]\n} \n```", "```js\n\"scripts\": {\n  \"dev\": \"webpack serve --mode development --port 3000\"\n} \n```", "```js\nmodule.exports = {} \n```", "```js\nentry: './src/index.tsx' \n```", "```js\nmodule: {\n  rules: [\n    {\n        test: /\\.(tsx|ts)$/,\n        exclude: /node_modules/,\n        use: {\n            loader: 'ts-loader',\n            options: {\n          transpileOnly: true\n            }\n        }\n    },\n    {\n        test: /\\.css/,\n        use: [\n            'style-loader',\n            'css-loader?modules=true'\n        ]\n    }\n  ]\n} \n```", "```js\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\nconst ForkTsCheckerWebpackPlugin = require('fork-ts-checker-webpack-plugin')\nplugins: [\n  new ForkTsCheckerWebpackPlugin(),\n  new HtmlWebpackPlugin({\n    title: 'Your project name',\n    template: './src/index.xhtml',\n    filename: './index.xhtml'\n  })\n] \n```", "```js\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\nconst path = require('path')\nconst ForkTsCheckerWebpackPlugin = require('fork-ts-checker-webpack-plugin')\nconst isProduction = process.env.NODE_ENV === 'production'\nmodule.exports = {\n  devtool: !isProduction ? 'source-map' : false, // We generate source maps\n  // only for development\n  entry: './src/index.tsx',\n  output: { // The path where we want to output our bundles\n    path: path.resolve(__dirname, 'dist'),\n    filename: '[name].[hash:8].js',\n    sourceMapFilename: '[name].[hash:8].map',\n    chunkFilename: '[id].[hash:8].js',\n    publicPath: '/'\n  },\n  resolve: {\n    extensions: ['.ts', '.tsx', '.js', '.json', '.css'] // Here we add the\n    // extensions we want to support\n  },\n  target: 'web',\n  mode: isProduction ? 'production' : 'development', // production mode\n  // minifies the code\n  module: {\n    rules: [\n        {\n            test: /\\.(tsx|ts)$/,\n            exclude: /node_modules/,\n            use: {\n            loader: 'ts-loader',\n          options: {\n              transpileOnly: true\n          }\n         }\n        },\n        {\n            test: /\\.css/,\n            use: [\n          'style-loader',\n          'css-loader?modules=true'\n            ]\n        }\n    ]\n  },\n  plugins: [\n    new ForkTsCheckerWebpackPlugin(),\n    new HtmlWebpackPlugin({\n      title: 'Your project name',\n      template: './src/index.xhtml',\n      filename: './index.xhtml'\n    })\n  ],\n  optimization: { // This is to split our bundles into vendor and main\n    splitChunks: {\n      cacheGroups: {\n          default: false,\n          commons: {\n        test: /node_modules/,\n        name: 'vendor',\n        chunks: 'all'   \n          }\n      }\n  }\n}\n} \n```", "```js\n{\n  \"compilerOptions\": {\n    \"allowJs\": true,\n    \"allowSyntheticDefaultImports\": true,\n    \"baseUrl\": \"src\",\n    \"esModuleInterop\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"isolatedModules\": true,\n    \"jsx\": \"react-jsx\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"node\",\n    \"noEmit\": true,\n    \"noFallthroughCasesInSwitch\": true,\n    \"noImplicitAny\": false,\n    \"resolveJsonModule\": true,\n    \"skipLibCheck\": true,\n    \"sourceMap\": true,\n    \"strict\": true,\n    \"target\": \"esnext\"\n  },\n  \"include\": [\"src/**/*.ts\", \"src/**/*.tsx\"],\n  \"exclude\": [\"node_modules\"]\n} \n```", "```js\ndeclare module '*.css' {\n  const content: Record<string, string>\n  export default content\n} \n```", "```js\nimport { createRoot } from 'react-dom/client'\nconst App = () => {\n  return <div>Hello World</div>\n}\n createRoot(document.getElementById('root') as HTMLElement).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n) \n```", "```js\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\n      />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n    <title><%= htmlWebpackPlugin.options.title %></title>\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html> \n```", "```js\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <title>Your project name</title>\n    <script defer src=\"img/vendor.12472959.js\"></script>\n    <script defer src=\"img/main.12472959.js\"></script>\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html> \n```", "```js\nimport { createRoot } from 'react-dom/client' \n```", "```js\nconst Button = () => <button>Click me!</button> \n```", "```js\ncreateRoot(document.getElementById('root') as HTMLElement).render(<Button />) \n```", "```js\n.button {\n  background-color: #ff0000;\n  width: 320px;\n  padding: 20px;\n  border-radius: 5px;\n  border: none;\n  outline: none;\n} \n```", "```js\nimport styles from './index.css' \n```", "```js\n{\n  button: \"_2wpxM3yizfwbWee6k0UlD4\"\n} \n```", "```js\nconst Button = () => (\n  <button className={styles.button}>Click me!</button>\n); \n```", "```js\n<button class=\"_2wpxM3yizfwbWee6k0UlD4\">Click me!</button> \n```", "```js\n<style type=\"text/css\">\n  ._2wpxM3yizfwbWee6k0UlD4 {\n    background-color: #ff0000;\n    width: 320px;\n    padding: 20px;\n    border-radius: 5px;\n    border: none;\n    outline: none;\n  }\n</style> \n```", "```js\n.button:hover {\n  color: #fff;\n}\n\n.button:active {\n  position: relative;\n  top: 2px;\n}\n\n@media (max-width: 480px) {\n  .button {\n    width: 160px;\n  }\n} \n```", "```js\n._2wpxM3yizfwbWee6k0UlD4:hover {\n  color: #fff;\n}\n\n._2wpxM3yizfwbWee6k0UlD4:active {\n  position: relative;\n  top: 2px;\n}\n\n@media (max-width: 480px) {\n  ._2wpxM3yizfwbWee6k0UlD4 {\n    width: 160px;\n  }\n} \n```", "```js\n{\n  test: /\\.css/,\n  use: [\n    {\n        loader: 'style-loader'\n    },\n    {\n        loader: 'css-loader',\n        options: {\n            modules: {\n          localIdentName: '[local]--[hash:base64:5]'\n        }\n     }\n    }\n  ]\n} \n```", "```js\n<button class=\"button--2wpxM\">Click me!</button> \n```", "```js\n:global .button {\n  ...\n} \n```", "```js\n.button {\n  ...\n} \n```", "```js\n.background-red {\n  background-color: #ff0000;\n} \n```", "```js\n.button {\n  composes: background-red;\n  width: 320px;\n  padding: 20px;\n  border-radius: 5px;\n  border: none;\n  outline: none;\n} \n```", "```js\n<button class=\"_2wpxM3yizfwbWee6k0UlD4 Sf8w9cFdQXdRV_i9dgcOq\">Click me!</button> \n```", "```js\n.Sf8w9cFdQXdRV_i9dgcOq {\n  background-color: #ff0000;\n}\n\n._2wpxM3yizfwbWee6k0UlD4 {\n  width: 320px;\n  padding: 20px;\n  border-radius: 5px;\n  border: none;\n  outline: none;\n} \n```", "```js\n.mb0 {\n  margin-bottom: 0;\n} \n```", "```js\n.fw6 {\n  font-weight: 600;\n} \n```", "```js\n<h2 class=\"mb0 fw6\">Hello React</h2> \n```", "```js\n.title {\n  composes: mb0 fw6;\n} \n```", "```js\n<h2 className={styles.title}>Hello React</h2> \n```", "```js\n<h2 class=\"title--3JCJR mb0--21SyP fw6--1JRhZ\">Hello React</h2> \n```", "```js\nnpm install styled-components \n```", "```js\nimport styled from 'styled-components' \n```", "```js\nconst Button = styled.button`\n  backgroundColor: #ff0000;\n  width: 320px;\n  padding: 20px;\n  borderRadius: 5px;\n  border: none;\n  outline: none;\n`; \n```", "```js\n<button class=\"kYvFOg\">Click me!</button> \n```", "```js\n.kYvFOg {\n  background-color: #ff0000;\n  width: 320px;\n  padding: 20px;\n  border-radius: 5px;\n  border: none;\n  outline: none;\n} \n```", "```js\nconst Button = styled.button`\n  background-color: #ff0000;\n  width: 320px;\n  padding: 20px;\n  border-radius: 5px;\n  border: none;\n  outline: none;\n  &:hover {\n    color: #fff;\n  }\n  &:active {\n    position: relative;\n    top: 2px;\n  }\n` \n```", "```js\nconst Button = styled.button`\n  background-color: #ff0000;\n  width: 320px;\n  padding: 20px;\n  border-radius: 5px;\n  border: none;\n  outline: none;\n  &:hover {\n    color: #fff;\n  }\n  &:active {\n    position: relative;\n    top: 2px;\n  }\n  @media (max-width: 480px) {\n    width: 160px;\n  }\n`; \n```"]