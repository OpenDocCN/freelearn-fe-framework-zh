- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: '*React* has been my main development tool lately. In my experience both as
    a developer and a computer user, I found most of what I love in the end is non-heavy
    stuff. While big names come and go often, there''re certain things left behind.
    For instance, the way to build a website has been reshaped and refined over the
    past twenty years, but the general process of building it hasn''t changed much.
    You still need to create an *HTML* file, design the layout, and host it somewhere
    on a server.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*React* 最近一直是我主要的开发工具。在我的经验中，无论是作为开发者还是计算机用户，我发现最终我喜欢的都是一些轻量级的东西。虽然大公司来来去去很常见，但总有某些东西被保留下来。例如，过去二十年中，构建网站的方式已经重塑和改进，但构建网站的一般过程并没有太大变化。你仍然需要创建一个
    *HTML* 文件，设计布局，并在服务器上的某个地方托管它。'
- en: When it comes to the **user interface** (**UI**), there's another topic that
    can benefit you in a similar way. That is state. From *jQuery* and *Angular* to
    *React*, from the web to other non-desktop platforms (such as *Electron* or *React
    Native*), no matter where you go, there's a technical question that you need to
    answer now *– how does the screen know there's a change to apply?* When I was
    back in college, I never asked this type of question. I generally assumed the
    computer just worked that way.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 当谈到 **用户界面** (**UI**) 时，还有一个可以以类似方式帮助你的话题。那就是状态。从 *jQuery* 和 *Angular* 到 *React*，从网页到其他非桌面平台（如
    *Electron* 或 *React Native*），无论你走到哪里，都有一个技术问题需要你现在回答——屏幕如何知道需要应用变化？当我还在大学的时候，我从未问过这类问题。我通常认为计算机就是这样工作的。
- en: Of course, now I know the computer works that way because someone made it. What's
    fascinating about the UI is when the state gets in the picture. Back in the early
    days, we didn't talk about state at all. But now state is everywhere, although
    there's still no textbook definition for it or how we should learn it in the first
    place. Suffice to say, state is still a relatively young topic in the web development
    industry.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，现在我知道计算机是这样工作的，因为有人创造了它。UI 最吸引人的地方是当状态出现。在早期，我们根本不谈论状态。但现在状态无处不在，尽管还没有教科书定义它或我们应该如何学习它。但可以肯定的是，状态在网页开发行业中仍然是一个相对较新的话题。
- en: In this book, I'll attempt, by using *React* as the underlying technology, to
    explore and learn how states are introduced and implemented. I hope, by doing
    that, we will have a better picture in the end to answer the question *– how is
    a render engine driven by states?*
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我将尝试使用 *React* 作为底层技术，探索和学习状态是如何引入和实现的。我希望通过这样做，我们最终能对“渲染引擎是如何由状态驱动的？”这个问题有一个更清晰的了解。
- en: Who this book is for
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书面向的对象
- en: The ideal reader of this book is an engineer who has been writing *JavaScript*
    for a few years but doesn't necessarily have experience with *React* and/or the
    function component. For readers with less *JavaScript* experience, we include
    a live playground via *CodePen* so that you can experiment with each topic in
    no time.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书的理想读者是一个已经编写了几年 *JavaScript* 的工程师，但不一定有 *React* 和/或函数组件的经验。对于经验较少的 *JavaScript*
    读者，我们通过 *CodePen* 提供了一个实时沙盒，这样你可以立即尝试每个主题。
- en: If you do have experience with *React*, or even Hooks, that's fine; this book
    will show you how Hooks are implemented within the function component. Moreover,
    a stripped-down version of the *React* source code pertaining to each Hook is
    also included in each chapter, so you will get a deeper understanding if you are
    an experienced *React* programmer.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经有 *React* 的经验，或者甚至有 Hooks 的经验，那也很好；这本书将向你展示 Hooks 在函数组件中的实现方式。此外，每个章节还包含与每个
    Hook 相关的简化版 *React* 源代码，如果你是一个有经验的 *React* 程序员，这将帮助你更深入地理解。
- en: What this book covers
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书涵盖的内容
- en: '[*Chapter 1*](B17963_01_Epub.xhtml#_idTextAnchor018), *Introducing the Function
    Component*, explains what a function component is with an explanation of its props
    and the basic parent/child relationship. You will then get some tips on how to
    write a function component. At the end of the chapter, you will see a practical
    function component example, `Nav`.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第一章*](B17963_01_Epub.xhtml#_idTextAnchor018)，*介绍函数组件*，通过解释其属性和基本的父子关系来解释什么是函数组件。然后你将获得一些关于如何编写函数组件的技巧。在章节的结尾，你将看到一个实际的函数组件示例，`Nav`。'
- en: '[*Chapter 2*](B17963_02_Epub.xhtml#_idTextAnchor055), *Crafting States in Functions*,
    shows how to craft a special variable called state in function components. We
    will see what benefits a state can provide, including requesting a new update
    and listening to a value change. We will also see an example of applying a state
    to a **Single Page Application** (**SPA**). We will also take a close look at
    what role states play in the *UI*.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第二章*](B17963_02_Epub.xhtml#_idTextAnchor055)，*在函数组件中构建状态*，展示了如何构建一个称为状态的特殊变量。我们将看到状态可以提供哪些好处，包括请求新的更新和监听值的变化。我们还将看到一个将状态应用于**单页应用**（**SPA**）的例子。我们还将仔细研究状态在*UI*中扮演的角色。'
- en: '[*Chapter 3*](B17963_03_Epub.xhtml#_idTextAnchor080), *Hooking into React*,
    goes through the challenges we face when creating a good state solution, and then
    we''ll see how *React* architects provide the solution with the underlying Hook.
    We will then introduce Hooks, learn about their calling order, and learn how to
    avoid running into the conditional Hook issue in real applications.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第三章*](B17963_03_Epub.xhtml#_idTextAnchor080)，*深入React*，探讨了我们在创建良好的状态解决方案时面临的挑战，然后我们将看到React架构师如何通过底层的Hook提供解决方案。然后我们将介绍Hooks，了解它们的调用顺序，并学习如何在实际应用中避免遇到条件Hook问题。'
- en: '[*Chapter 4*](B17963_04_Epub.xhtml#_idTextAnchor113), *Use State to Jumpstart
    Components*, covers built-in Hooks, starting with the `useState` Hook. We will
    first explain how state is used in *React* and then walk through the data structure
    and source code behind `useState`, and we''ll also describe common usages of dispatching
    states. We''ll give `useState` a test drive and provide two practical examples
    of applying `useState` to the `Avatar` and `Tooltip` components.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第四章*](B17963_04_Epub.xhtml#_idTextAnchor113)，*使用State启动组件*，涵盖了内置Hooks，从`useState`
    Hook开始。我们首先解释状态在React中的使用，然后了解`useState`背后的数据结构和源代码，并描述常见的状态分发用法。我们将对`useState`进行测试，并提供将`useState`应用于`Avatar`和`Tooltip`组件的两个实用示例。'
- en: '[*Chapter 5*](B17963_05_Epub.xhtml#_idTextAnchor157), *Use Effect to Handle
    Side Effects*, introduces side effects, walks through the data structure and source
    code behind `useEffect`, and provides various scenarios in which you invoke effects.
    We will also demonstrate a couple of pitfalls of using `useEffect` and ways to
    avoid them. And we''ll use `useEffect` in two practical examples, Window Size
    and a Fetch API.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第五章*](B17963_05_Epub.xhtml#_idTextAnchor157)，*使用Effect处理副作用*，介绍了副作用，了解了`useEffect`背后的数据结构和源代码，并提供了各种触发效果的场景。我们还将演示使用`useEffect`的一些陷阱以及避免它们的方法。然后我们将使用`useEffect`在两个实用示例中，窗口大小和Fetch
    API中。'
- en: '[*Chapter 6*](B17963_06_Epub.xhtml#_idTextAnchor203), *Use Memo to Boost Performance*,
    explains how we can run into performance degradation issues in a typical web application.
    Then we will walk through the design and source code behind `useMemo` and describe
    various ways of reusing a value conditionally. We''ll then apply the optimization
    technique to two common cases, clicking to search and debouncing the search.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第六章*](B17963_06_Epub.xhtml#_idTextAnchor203)，*使用Memo提升性能*，解释了在典型的Web应用中我们如何遇到性能下降问题。然后我们将了解`useMemo`背后的设计和源代码，并描述各种条件重用值的方法。然后我们将优化技术应用于两个常见情况，点击搜索和搜索防抖。'
- en: '[*Chapter 7*](B17963_07_Epub.xhtml#_idTextAnchor237), *Use Context to Cover
    an Area*, introduces an area updates and how *React* contexts are used to share
    a value to an area. Then, we will walk through the data structure and source code
    behind `useContext` to consume the shared value. At the end of the chapter, we''ll
    provide two practical examples of applying contexts to a Theme and a Table.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第七章*](B17963_07_Epub.xhtml#_idTextAnchor237)，*使用Context覆盖区域*，介绍了区域更新以及React
    contexts如何用于将值共享到区域。然后，我们将了解`useContext`背后的数据结构和源代码以消费共享值。在章节末尾，我们将提供两个将上下文应用于主题和表格的实用示例。'
- en: '[*Chapter 8*](B17963_08_Epub.xhtml#_idTextAnchor278), *Use Ref to Hide Stuff*,
    explains how to access a *DOM* element via a ref, and we''ll walk through the
    design and source code behind the `useRef` Hook. We will also describe how to
    work with a persistent value without dispatching an update. Finally, we''ll apply
    refs to a couple of practical problems, such as clicking outside of the menu,
    avoiding memory leaks, setting up a mule, and locating the current value.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第八章*](B17963_08_Epub.xhtml#_idTextAnchor278)，*使用Ref隐藏内容*，解释了如何通过ref访问*DOM*元素，我们将了解`useRef`
    Hook背后的设计和源代码。我们还将描述如何在不触发更新的情况下处理持久值。最后，我们将把refs应用于一些实际问题，例如点击菜单外，避免内存泄漏，设置中继站，和定位当前值。'
- en: '[*Chapter 9*](B17963_09_Epub.xhtml#_idTextAnchor314), *Use Custom Hooks to
    Reuse Logic*, gathers all the Hooks we have learned about so far and explains
    how to create a custom Hook for our own needs. We will introduce custom Hooks
    and then write a couple of custom Hooks step by step, including `useToggle`, `useWindow`,
    `useAsync`, `useDebounced`, `useClickOutside`, `useCurrent`, and `useProxy`.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第9章*](B17963_09_Epub.xhtml#_idTextAnchor314)，*使用自定义钩子重用逻辑*，汇集了我们迄今为止所学的所有钩子，并解释了如何创建一个自定义钩子来满足我们的需求。我们将逐步介绍自定义钩子，并编写几个自定义钩子，包括`useToggle`、`useWindow`、`useAsync`、`useDebounced`、`useClickOutside`、`useCurrent`和`useProxy`。'
- en: '[*Chapter 10*](B17963_10_Epub.xhtml#_idTextAnchor363), *Building a Website
    with React*, discusses *React* in general, especially the role *React* plays in
    web development. We will approach this topic from three perspectives to see how
    *React* puts resources together to build a site, including *JavaScript ES6* features,
    *CSS-in-JS* approaches, and the transformation from *HTML*-like lines into *JavaScript*
    expressions.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第10章*](B17963_10_Epub.xhtml#_idTextAnchor363)，*使用React构建网站*，一般性地讨论了 *React*，特别是
    *React* 在网页开发中的作用。我们将从三个角度来探讨这个话题，看看 *React* 如何将资源组合起来构建一个网站，包括 *JavaScript ES6*
    特性、*CSS-in-JS* 方法以及将类似 *HTML* 的行转换为 *JavaScript* 表达式的转换。'
- en: To get the most out of this book
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为了充分利用这本书，
- en: One of the goals of this book is for you to get hands-on experience using *React*
    and Hooks. Following are a couple of options that you can follow to get the most
    out of the content before you start.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的一个目标是通过使用 *React* 和 Hooks，让你获得实际操作经验。以下是一些你可以在开始之前采取的选项，以充分利用内容。
- en: Refresh your knowledge of React
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 温习React知识
- en: 'If you haven''t used *React* lately or are not familiar with its cutting-edge
    features, I recommended you jump to [*Chapter 10*](B17963_10_Epub.xhtml#_idTextAnchor363),
    *Building a Website with React*, to get an overview of the three building blocks
    that *React* relies upon to build a website: JavaScript, CSS, and HTML.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你最近没有使用过 *React* 或者不熟悉其前沿特性，我建议你跳转到 [*第10章*](B17963_10_Epub.xhtml#_idTextAnchor363)，*使用React构建网站*，以了解
    *React* 依赖的三个构建块来构建网站：JavaScript、CSS和HTML的概览。
- en: While reading the book, feel free to visit this chapter often if you run into
    new syntax that you are not familiar with, or you simply want to gain more insights
    into how each building block is utilized in *React*.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在阅读书籍时，如果你遇到不熟悉的语法，或者只是想更深入地了解每个构建块在 *React* 中的使用方法，请随时查看这一章节。
- en: Use a browser without building the code
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用无需构建代码的浏览器
- en: 'If you don''t have a local environment to work with the code or you simply
    don''t want to build the code, you can access the examples from an online server
    at [https://codepen.io/windmaomao/pen/ExvYPEX](https://codepen.io/windmaomao/pen/ExvYPEX).
    You should get `Hello World` printed on your screen in no time. Each chapter comes
    with a couple of playground links that you can click to follow. They appear as
    follows in the book:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有本地环境来编写代码，或者你只是不想构建代码，你可以从在线服务器[https://codepen.io/windmaomao/pen/ExvYPEX](https://codepen.io/windmaomao/pen/ExvYPEX)访问示例。你很快就会在屏幕上看到打印出的
    `Hello World`。每个章节都附带了一些操场链接，你可以点击它们来跟随。它们在书中的显示如下：
- en: Playground – Hello World
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 操场 – Hello World
- en: Feel free to play with this online example at [https://codepen.io/windmaomao/pen/ExvYPEX](https://codepen.io/windmaomao/pen/ExvYPEX).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以随意在这个在线示例[https://codepen.io/windmaomao/pen/ExvYPEX](https://codepen.io/windmaomao/pen/ExvYPEX)上尝试。
- en: Build the code yourself
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自己编写代码
- en: If you are a hands-on person and would like to follow the code step by step
    in each chapter, you need to have *React* installed in one of your projects. Instructions
    to set up a *React* project from scratch are as follows.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是一个喜欢动手实践的人，并且想在每一章中逐步跟随代码，你需要在你的一些项目中安装 *React*。从头开始设置 *React* 项目的说明如下。
- en: npm
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: npm
- en: 'Visit the Node.js website, [https://nodejs.org](https://nodejs.org), to grab
    the latest versions of `Node.js` and `npm`. Pick the right version for your operating
    system and install it. To find out if everything has been installed properly,
    open a terminal, and run the following command:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 访问 Node.js 网站，[https://nodejs.org](https://nodejs.org)，获取 `Node.js` 和 `npm`
    的最新版本。选择适合你操作系统的正确版本并安装它。为了检查是否已正确安装，打开终端，并运行以下命令：
- en: '[PRE0]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If you see a version number returned by the preceding command, Node.js has been
    installed.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你看到前一个命令返回的版本号，说明 Node.js 已安装。
- en: Create React App
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建React应用
- en: 'You can get your *React* project up and running quickly by using the following
    command:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过以下命令快速启动你的 *React* 项目：
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Replace `my-app` with your desired application name. Once you have the projects
    ready, you can go into the `my-app` folder and launch it:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 将`my-app`替换为你希望的应用程序名称。一旦项目准备就绪，你可以进入`my-app`文件夹并启动它：
- en: '[PRE2]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: That's it, you should see an application on your local computer. Now you can
    try the source code out by pasting our code over your project and compiling it
    locally.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样，你应该能在你的本地计算机上看到一个应用程序。现在你可以通过将我们的代码粘贴到你的项目中并本地编译来尝试源代码。
- en: Download the color images
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载彩色图像
- en: 'We also provide a PDF file that has color images of the screenshots and diagrams
    used in this book. You can download it here: [https://static.packt-cdn.com/downloads/9781803235950_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781803235950_ColorImages.pdf).'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了一个包含本书中使用的截图和图表的彩色图像的PDF文件。您可以在此处下载：[https://static.packt-cdn.com/downloads/9781803235950_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781803235950_ColorImages.pdf)。
- en: Conventions used
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用了多种文本约定。
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: "The element can be as simple as `h1`, a `div` element,
    or it can be an artificial element that does things differently."'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`文本中的代码`: 表示文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter昵称。以下是一个示例：“元素可以像`h1`、一个`div`元素那样简单，也可以是一个执行不同操作的人工元素。”'
- en: 'A block of code is set as follows:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE3]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起你对代码块中特定部分的注意时，相关的行或项目将被设置为粗体：
- en: '[PRE4]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For instance, words in menus or dialog boxes appear in **bold**. Here is an example:
    "This flag can be used to decide if the UI should display the **Logout** or **Login** button."'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**：表示新术语、重要单词或你在屏幕上看到的单词。例如，菜单或对话框中的单词会显示为**粗体**。以下是一个示例：“此标志可用于决定UI是否应显示**注销**或**登录**按钮。”'
- en: Tips or Important Notes
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士或重要注意事项
- en: Appear like this.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来像这样。
- en: Get in touch
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们读者的反馈总是受欢迎的。
- en: '`customercare@packtpub.com` and mention the book title in the subject of your
    message.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在邮件主题中提及书籍标题，并发送至`customercare@packtpub.com`。
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    and fill in the form.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**勘误表**：尽管我们已经尽最大努力确保内容的准确性，但错误仍然可能发生。如果您在这本书中发现了错误，我们将非常感激您向我们报告。请访问[www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)并填写表格。'
- en: '`copyright@packt.com` with a link to the material.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 通过链接材料发送至`copyright@packt.com`。
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果你有兴趣成为作者**：如果你在某个领域有专业知识，并且你感兴趣的是撰写或为书籍做出贡献，请访问[authors.packtpub.com](http://authors.packtpub.com)。'
- en: Share Your Thoughts
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分享你的想法
- en: Once you've read *Designing React Hooks the Right Way*, we'd love to hear your
    thoughts! Please [click here to go straight to the Amazon review page](https://www.packtpub.com/)
    [https://packt.link/r/1803235950/](https://packt.link/r/1803235950/) for this
    book and share your feedback.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你阅读了《正确设计React Hooks》这本书，我们很乐意听听你的想法！请[点击此处直接进入亚马逊评论页面](https://www.packtpub.com/)
    [https://packt.link/r/1803235950/](https://packt.link/r/1803235950/)并为这本书分享你的反馈。
- en: Your review is important to us and the tech community and will help us make
    sure we're delivering excellent quality content.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 你的评论对我们和科技社区都很重要，并将帮助我们确保我们提供高质量的内容。
