["```js\n<template>\n  <header class=\"w-full block p-4 border-b bg-blue-300     border-gray-700\">\n    <h2 class=\"text-xl text-gray-800\">Profile Card Generator</h2>\n  </header>\n</template>\n```", "```js\n<template>\n  <div id=\"app\">\n    <AppHeader />\n  </div>\n</template>\n<script>\nimport AppHeader from './components/AppHeader.vue'\nexport default {\n  components: {\n    AppHeader\n  }\n}\n</script>\n```", "```js\n<template>\n  <section class=\"md:w-2/3 h-64 bg-red-200 flex\">\n  <!-- Inputs -->\n  </section>\n</template>\n```", "```js\n<template>\n  <section class=\"md:w-1/3 h-64 bg-blue-200 flex\">\n  <!-- Profile Card -->\n  </section>\n</template>\n```", "```js\n<template>\n    <!-- rest of template, including AppHeader -->\n    <div class=\"flex flex-col md:flex-row\">\n      <AppProfileForm />\n      <AppProfileDisplay />\n    </div>\n    <!-- rest of template -->\n</template>\n<script>\n// other imports\nimport AppProfileForm from './components/AppProfileForm.vue'\nimport AppProfileDisplay from './components/AppProfileDisplay.vue'\nexport default {\n  components: {\n    // other component definitions\n    AppProfileForm,\n    AppProfileDisplay,\n  }\n}\n</script>\n```", "```js\n<template>\n  <section class=\"md:w-2/3 h-64 bg-red-200 flex flex-col p-12     items-center\">\n    <!-- Inputs -->\n    <div class=\"flex flex-col\">\n      <label class=\"flex text-gray-800 mb-2\" for=\"name\">Name\n      </label>\n      <input\n        id=\"name\"\n        type=\"text\"\n        name=\"name\"\n        class=\"border-2 border-solid border-blue-200 rounded           px-2 py-1\"\n      />\n    </div>\n  </section>\n</template>\n```", "```js\n<template>\n      <!-- rest of the template -->\n      <input\n        id=\"name\"\n        type=\"text\"\n        name=\"name\"\n        class=\"border-2 border-solid border-blue-200 rounded           px-2 py-1\"\n        v-model=\"name\"\n      />\n      <!-- rest of the template -->\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      name: '',\n    }\n  }\n}\n</script>\n```", "```js\n<template>\n    <!-- rest of template -->\n    <div class=\"flex flex-row mt-12\">\n      <button type=\"submit\" @click=\"submitForm()\">Submit</button>\n    </div>\n    <!-- rest of template -->\n</template>\n<script>\nexport default {\n  // rest of component\n  methods: {\n    submitForm() {\n      this.$emit('submit', {\n        name: this.name\n      })\n    }\n  }\n}\n</script>\n```", "```js\n<script>\nexport default {\n  // rest of component\n  data() {\n    return {\n      formData: {}\n    }\n  },\n  methods: {\n    update(formData) {\n      this.formData = formData\n    }\n  }\n  // rest of component\n}\n</script>\n```", "```js\n<template>\n    <!-- rest of template -->\n      <AppProfileForm @submit=\"update($event)\" />\n    <!-- rest of template -->\n</template>\n```", "```js\n<script>\nexport default {\n  props: {\n    formData: {\n      type: Object,\n      default() {\n        return {}\n      }\n    }\n  }\n}\n</script>\n```", "```js\n<template>\n  <section class=\"md:w-1/3 h-64 bg-blue-200 flex p-12\">\n    <!-- Profile Card -->\n    <h3 class=\"font-bold font-lg\">{{ formData.name }}</h3>\n  </section>\n</template>\n```", "```js\n<template>\n    <!-- rest of template -->\n      <AppProfileDisplay :form-data=\"formData\" />\n    <!-- rest of template -->\n</template>\n```", "```js\n    <template>\n      <section class=\"md:w-2/3 flex flex-col p-12 items-center\">\n        <!-- rest of template -->\n        <div class=\"flex flex-col mt-2\">\n          <label class=\"flex text-gray-800 mb-2\" for=\"occupation\">Occupation</label>\n          <input\n            id=\"occupation\"\n            type=\"text\"\n            name=\"occupation\"\n            class=\"border-2 border-solid border-blue-200 rounded           px-2 py-1\"\n          />\n        </div>\n        <!-- rest of template -->\n      </section>\n    </template>\n    ```", "```js\n    <script>\n    export default {\n      // rest of component\n      data() {\n        return {\n          // other data properties\n          occupation: '',\n        }\n      },\n      // rest of component\n    }\n    ```", "```js\n    <template>\n      <!-- rest of template -->\n          <input\n            id=\"occupation\"\n            type=\"text\"\n            name=\"occupation\"\n            v-model=\"occupation\"\n            class=\"border-2 border-solid border-blue-200 rounded           px-2 py-1\"\n          />\n      <!-- rest of template -->\n    </template>\n    ```", "```js\n    <script>\n    export default {\n      // rest of component\n      methods: {\n        submitForm() {\n          this.$emit('submit', {\n            // rest of event payload\n            occupation: this.occupation\n          })\n        }\n      }\n    }\n    </script>\n    ```", "```js\n    <template>\n      <section class=\"md:w-1/3 flex flex-col p-12\">\n        <!-- rest of template -->\n        <p class=\"mt-2\">{{ formData.occupation }}</p>\n      </section>\n    </template>\n    ```", "```js\n    <template>\n      <!-- rest of template -->\n        <div class=\"w-1/2 flex md:flex-row mt-12\">\n          <button\n            class=\"flex md:w-1/2 justify-center\"\n            type=\"button\"\n          >\n            Clear\n          </button>\n          <button\n            class=\"flex md:w-1/2 justify-center\"\n            type=\"submit\"\n            @click=\"submitForm()\"\n          >\n            Submit\n          </button>\n        </div>\n      <!-- rest of template -->\n    </template>\n    ```", "```js\n    <script>\n    export default {\n      // rest of the component\n      methods: {\n        // other methods\n        clear() {\n          this.name = ''\n          this.occupation = ''\n        }\n      }\n      // rest of the component\n    }\n    ```", "```js\n    <template>\n      <!-- rest of template -->\n          <button\n            class=\"flex md:w-1/2 justify-center\"\n    Submit button, it will propagate data to AppProfileDisplay as follows:![Figure 8.13: AppProfileForm and AppProfileDisplay with data filled in \n    and submitted with a Clear button\n    ](img/B15218_08_13.jpg)Figure 8.13: AppProfileForm and AppProfileDisplay with data filled in and submitted with a Clear buttonUnfortunately, `AppProfileDisplay` still has stale data, as shown in the following screenshot:![Figure 8.14: AppProfileForm and AppProfileDisplay with only AppProfileForm cleared AppProfileDisplay still has stale data\n    ](img/B15218_08_14.jpg)Figure 8.14: AppProfileForm and AppProfileDisplay with only AppProfileForm cleared AppProfileDisplay still has stale data\n    ```", "```js\n    <script>\n    export default {\n      // rest of component\n      methods: {\n        // other methods\n        clear() {\n          // rest of the clear() method\n          this.$emit('submit', {})\n        }\n      }\n    }\n    </script>\n    ```", "```js\nimport Vue from 'vue'\nconst eventBus = new Vue()\n```", "```js\n// rest of main.js file\nconsole.log('Registering subscriber to \"fieldChanged\"')\neventBus.$on('fieldChanged', (event) => {\n  console.log(`Received event: ${JSON.stringify(event)}`)\n})\n```", "```js\n// rest of main.js file\nconsole.log('Triggering \"fieldChanged\" for \"name\"')\neventBus.$emit('fieldChanged', {\n  name: 'name',\n  value: 'John Doe'\n})\nconsole.log('Triggering \"fieldChanged\" for \"occupation\"')\neventBus.$emit('fieldChanged', {\n  name: 'occupation',\n  value: 'Developer'\n})\n```", "```js\n// rest of main.js, including other subscriber\nconst subscriber = (event) => {\n  console.log('Subscriber 2 received event: ${JSON.stringify     (event)}')\n}\nconsole.log('Registering subscriber 2')\neventBus.$on('fieldChanged', subscriber)\nconsole.log('Triggering \"fieldChanged\" for \"company\"')\neventBus.$emit('fieldChanged', {\n  name: 'company',\n  value: 'Developer'\n})\nconsole.log('Unregistering subscriber 2')\neventBus.$off('fieldChanged', subscriber)\nconsole.log('Triggering \"fieldChanged\" for \"occupation\"')\neventBus.$emit('fieldChanged', {\n  name: 'occupation',\n  value: 'Senior Developer'\n})\n```", "```js\nimport Vue from 'vue'\nexport default new Vue()\n```", "```js\n<script>\nimport eventBus from '../event-bus'\nexport default {\n  // rest of component\n  methods: {\n    submitForm() {\n      eventBus.$emit('profileUpdate', {\n        name: this.name,\n        occupation: this.occupation\n      })\n    },\n    clear() {\n      this.name = ''\n      this.occupation = ''\n      eventBus.$emit('profileUpdate', {})\n    }\n  }\n}\n</script>\n```", "```js\n<script>\nimport eventBus from '../event-bus'\nexport default {\n  mounted() {\n    eventBus.$on('profileUpdate', this.update)\n  },\n  beforeDestroy() {\n    eventBus.$off('profileUpdate', this.update)\n  },\n  data() {\n    return {\n      formData: {}\n    }\n  },\n  methods: {\n    update(formData) {\n      this.formData = formData\n    }\n  }\n}\n</script>\n```", "```js\n<template>\n  <!-- rest of template -->\n      <AppProfileForm />\n      <AppProfileDisplay />\n  <!-- rest of template -->\n</template>\n```", "```js\n<script>\nimport AppHeader from './components/AppHeader.vue'\nimport AppProfileForm from './components/AppProfileForm.vue'\nimport AppProfileDisplay from './components/AppProfileDisplay.vue'\nexport default {\n  components: {\n    AppHeader,\n    AppProfileForm,\n    AppProfileDisplay,\n  }\n}\n</script>\n```", "```js\n    <template>\n      <header class=\"w-full flex flex-row p-4 border-b     bg-blue-300 border-gray-700\">\n        <h2 class=\"text-xl flex text-gray-800\">Profile Card       Generator</h2>\n        <button class=\"flex ml-auto text-gray-800 items-center\">\n          Reset\n        </button>\n      </header>\n    </template>\n    ```", "```js\n    <script>\n    import eventBus from '../event-bus'\n    export default {\n      methods: {\n        clear() {\n          eventBus.$emit('profileUpdate', {})\n        }\n      }\n    }\n    </script>\n    ```", "```js\n    <template>\n      <!-- rest of template -->\n        <button\n          @click=\"clear()\"\n          class=\"flex ml-auto text-gray-800 items-center\"\n        >\n          Reset\n        </button>\n      <!-- rest of template -->\n    </template>\n    ```", "```js\n    <script>\n    import eventBus from '../event-bus'\n    export default {\n      mounted() {\n        eventBus.$on('profileUpdate', this.handleProfileUpdate)\n      },\n      beforeDestroy() {\n        eventBus.$off('profileUpdate', this.handleProfileUpdate)\n      },\n      // rest of component\n      methods: {\n        // other methods\n        handleProfileUpdate(formData) {\n          this.name = formData.name || ''\n          this.occupation = formData.occupation || ''\n        }\n      }\n    }\n    </script>\n    ```", "```js\n    <template>\n      <!-- rest of template -->\n        <div class=\"flex align-center mt-12\">\n          <button\n            type=\"submit\"\n            @click=\"submitForm()\"\n          >\n            Submit\n          </button>\n        </div>\n      <!-- rest of template -->\n    </template>\n    ```", "```js\nimport Vue from 'vue'\nimport Vuex from 'vuex'\nVue.use(Vuex)\n```", "```js\nexport default new Vuex.Store({\n  state: {\n    formData: {\n      name: '',\n      occupation: ''\n    }\n  },\n})\n```", "```js\n// other imports\nimport store from './store'\n// other imports and code\nnew Vue({\n  render: h => h(App),\n  store\n}).$mount('#app')\n```", "```js\n<script>\nexport default {\n  computed: {\n    formData() {\n      return this.$store.state.formData\n    }\n  }\n}\n</script>\n```", "```js\nexport default new Vuex.Store({\n  // other store properties\n  mutations: {\n    profileUpdate(state, payload) {\n      state.formData = {\n        name: payload.name || '',\n        occupation: payload.occupation || ''\n      }\n    }\n  }\n})\n```", "```js\n<script>\nexport default {\n  methods: {\n    clear() {\n      this.$store.commit('profileUpdate', {})\n    }\n  }\n}\n</script>\n```", "```js\n<script>\nexport default {\n  // rest of component\n  methods: {\n    submitForm() {\n      this.$store.commit('profileUpdate', {\n        name: this.name,\n        occupation: this.occupation\n      })\n    },\n    // other methods\n  }\n}\n</script>\n```", "```js\nexport default new Vuex.Store({\n  // other store properties\n  mutations: {\n    // other mutations\n    profileClear(state) {\n      state.formData = {\n        name: '',\n        occupation: ''\n      }\n    }\n  }\n})\n```", "```js\n<script>\nexport default {\n  methods: {\n    clear() {\n      this.$store.commit('profileClear')\n    }\n  }\n}\n</script>\n```", "```js\n<script>\nexport default {\n  created() {\n    this.$store.subscribe((mutation) => {\n      if (mutation.type === 'profileClear') {\n        this.resetProfileForm()\n      }\n    })\n  },\n  // other component properties\n  methods: {\n    // other methods\n    resetProfileForm() {\n      this.name = ''\n      this.occupation = ''\n    }\n  }\n}\n</script>\n```", "```js\n    <template>\n      <!-- rest of template -->\n        <div class=\"flex flex-col mt-2\">\n          <label class=\"flex text-gray-800 mb-2\"         for=\"organization\">Organization</label>\n          <input\n            id=\"occupation\"\n            type=\"text\"\n            name=\"organization\"\n            class=\"border-2 border-solid border-blue-200           rounded px-2 py-1\"\n          />\n        </div>\n      <!-- rest of template -->\n    </template>\n    ```", "```js\n    // imports & Vuex setup\n    export default new Vuex.Store({\n      state: {\n        formData: {\n          // rest of formData fields\n          organization: ''\n        }\n      },\n      mutations: {\n        profileUpdate(state, payload) {\n          state.formData = {\n            // rest of formData fields\n            organization: payload.organization || '',\n          }\n        },\n        profileClear(state) {\n          state.formData = {\n            // rest of formData fields\n            organization: ''\n          }\n        }\n      }\n    })\n    ```", "```js\n    <template>\n      <!-- rest of template -->\n        <div class=\"flex flex-col mt-2\">\n          <label class=\"flex text-gray-800 mb-2\"         for=\"organization\">Organization</label>\n          <input\n            id=\"occupation\"\n            type=\"text\"\n            name=\"organization\"\n            v-model=\"organization\"\n            class=\"border-2 border-solid border-blue-200 rounded           px-2 py-1\"\n          />\n        </div>\n      <!-- rest of template -->\n    </template>\n    <script>\n    export default {\n      // rest of component\n      data() {\n        return {\n          // other data properties\n          organization: ''\n        }\n      }\n    }\n    </script>\n    ```", "```js\n    <script>\n    export default {\n      // rest of component\n      methods: {\n        submitForm() {\n          this.$store.commit('profileUpdate', {\n            // rest of payload\n            organization: this.organization\n          })\n        },\n        resetProfileForm() {\n          // other resets\n          this.organization = ''\n        }\n      }\n    }\n    </script>\n    ```", "```js\n    <template>\n      <!-- rest of template -->\n        <p class=\"mt-2\">\n          {{ formData.occupation }}\n          <span v-if=\"formData.organization\">\n            at {{ formData.organization }}\n          </span>\n        </p>\n      <!-- rest of template -->\n    </template>\n    ```"]