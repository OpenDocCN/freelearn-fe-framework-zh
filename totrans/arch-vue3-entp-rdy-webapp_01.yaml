- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: Getting Started with Vue.js 3
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Vue.js 3 入门
- en: Before we start learning how to develop enterprise-ready applications with Vue.js
    3, you need to understand Vue 3 and the different features it is bundled with
    to help you navigate through building scalable and enterprise-ready applications.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始学习如何使用 Vue.js 3 开发企业级应用之前，你需要了解 Vue 3 以及它附带的不同特性，这些特性将帮助你导航构建可扩展的企业级应用。
- en: In this chapter, we will cover the essential aspects of Vue 3 that will directly
    influence how we develop an enterprise application with Vue.js 3\. This background
    information will put you in a better position to grasp the terms and concepts
    of Vue 3 and help you understand how to build and scale an enterprise-ready application.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍 Vue 3 的基本方面，这将直接影响我们如何使用 Vue.js 3 开发企业级应用。这些背景信息将使你更好地理解 Vue 3 的术语和概念，并帮助你了解如何构建和扩展企业级应用。
- en: 'We will cover the following key topics in this chapter:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下关键主题：
- en: Overview of Vue.js
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vue.js 概述
- en: Introducing Vue.js 3
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍 Vue.js 3
- en: Building your first Vue.js 3 app
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建你的第一个 Vue.js 3 应用
- en: Once you’ve worked through each of these topics, you will be ready to get started
    with building your first enterprise-ready Vue.js 3 application.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你掌握了这些主题，你就可以开始构建你的第一个企业级 Vue.js 3 应用了。
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To get started, we recommend that you have a basic knowledge of JavaScript with
    Node.js installed on your computer and must have built projects using Vue.js before.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，我们建议你具备基本的 JavaScript 知识，并在你的电脑上安装 Node.js，并且必须使用 Vue.js 构建过项目。
- en: Overview of Vue.js
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Vue.js 概述
- en: Vue.js is an open source progressive JavaScript frontend web framework used
    to develop interactive frontend web interfaces. It is a very popular and simplified
    JavaScript framework that focuses on the view layer of web development. It can
    be easily integrated into big and enterprise web development projects.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Vue.js 是一个开源的渐进式 JavaScript 前端 Web 框架，用于开发交互式前端 Web 界面。它是一个非常流行且简化的 JavaScript
    框架，专注于 Web 开发的视图层。它可以轻松集成到大型和企业级 Web 开发项目中。
- en: Vue.js is a framework that opens the door for developers to create and manage
    large and scalable projects with ease, as the code structure and development environment
    are developer-friendly.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Vue.js 是一个框架，它为开发者打开了轻松创建和管理大型和可扩展项目的门户，因为代码结构和开发环境对开发者友好。
- en: In the next section, we will introduce you to the wonders of Vue 3 and the Composition
    API.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将向你介绍 Vue 3 和组合 API 的奇妙之处。
- en: Introducing Vue.js 3
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 Vue.js 3
- en: 'The official Vue.js 3 version was released in September 2020 with highly documented,
    highly readable, well-structured resources to help you start using Vue 3\. Evan
    You in his article *The process: Making Vue 3* ([https://increment.com/frontend/making-vue-3/](https://increment.com/frontend/making-vue-3/))
    mentioned that one of the key reasons for the rewrite was to leverage a new language
    feature, *Proxy*.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 官方的 Vue.js 3 版本于 2020 年 9 月发布，提供了高度文档化、易于阅读、结构良好的资源，帮助你开始使用 Vue 3。Evan You 在他的文章《过程：制作
    Vue 3》([https://increment.com/frontend/making-vue-3/](https://increment.com/frontend/making-vue-3/))
    中提到，重写的一个关键原因是利用新的语言特性，*代理*。
- en: Proxy allows the framework to intercept operations on objects. A core feature
    of Vue is the ability to listen to changes made to the user-defined state and
    reactively update the DOM. In Vue 3, using the Proxy feature is the key to resolving
    the reactivity-related issues in Vue 2.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 代理允许框架拦截对对象的操作。Vue 的一个核心特性是能够监听用户定义状态的变化，并反应性地更新 DOM。在 Vue 3 中，使用代理特性是解决 Vue
    2 中反应性相关问题的关键。
- en: Most importantly, Vue 3 was completely rewritten in TypeScript and has all the
    advantages of a modern framework that come with using TypeScript.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 最重要的是，Vue 3 完全使用 TypeScript 重新编写，并拥有使用 TypeScript 所带来的现代框架的所有优势。
- en: In this section, we will explore some of the features and improvements that
    resonate with building an enterprise application and, most importantly, the new
    Composition API.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将探讨一些与构建企业应用相关的特性和改进，最重要的是，新的组合 API。
- en: 'We’ll cover the following topics:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将涵盖以下主题：
- en: Vue 3 performance
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vue 3 性能
- en: Tree-shaking support
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 树摇支持
- en: The Composition API
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组合 API
- en: These topics give you a glimpse at the features of Vue.js 3 and we will start
    with what we are already familiar with in Vue in this book.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这些主题让你对 Vue.js 3 的特性有了初步的了解，我们将在本书中从我们已熟悉的 Vue 开始。
- en: Vue 3 performance
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Vue 3 性能
- en: The performance increase in Vue 3 is excellent for enterprise applications because
    any lag in the core framework can result in a loss of funds given the gigantic
    nature of an enterprise project.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Vue 3的性能提升对企业级应用来说非常出色，因为核心框架中的任何延迟都可能导致资金损失，考虑到企业级项目的巨大规模。
- en: Vue 3 has sped up performance by 55% compared to previous versions. Also, the
    updates are up to 133% faster, which is excellent for developing and testing large
    enterprise projects before deployment. Also, memory usage is reduced by 54%, cutting
    down computing costs drastically on enterprise projects.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 与前版本相比，Vue 3将性能提高了55%，更新速度也快了133%，这对于在部署前开发和测试大型企业级项目来说是非常出色的。此外，内存使用量减少了54%，大幅降低了企业级项目的计算成本。
- en: Tree-shaking support
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 摇树优化支持
- en: Tree-shaking is the process of eliminating dead, useless, or unused code, which
    drastically decreases the build size of an application if you compare this to
    an enterprise application with thousands of files and—sometimes unknowingly—unused
    files that can lead to a bloated and heavy project.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 摇树优化是消除死代码、无用代码或未使用代码的过程，如果与拥有数千个文件且有时不知情地存在未使用文件的企业级应用相比，这会大幅减少应用的构建大小。
- en: Vue 3 supports tree-shaking right out of the box, eliminating unused files and
    code, thereby decreasing the build size and increasing the project’s performance.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Vue 3原生支持摇树优化，可以消除未使用的文件和代码，从而减小构建大小并提高项目的性能。
- en: The Composition API
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 组合式API
- en: The Composition API is an entirely new addition and the most significant change
    to Vue 3\. It requires relearning the concepts and total discarding the Options
    API used in Vue 2\. While the Composition API advances, the previous Options API
    will continue to be supported. In this book, we use the Composition API because
    of the readability and performance improvements that come with it.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 组合式API是一个全新的添加，也是Vue 3最重大的变化。它需要重新学习概念，并完全摒弃Vue 2中使用的Options API。虽然组合式API在进步，但之前的Options
    API将继续得到支持。在这本书中，我们使用组合式API，因为它带来了可读性和性能的提升。
- en: Why the Composition API?
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为什么需要组合式API？
- en: When building a simple application, the component-based architecture alone has
    proven to be the best approach to developing such an application where individual
    components can be reused to improve maintainability and flexibility.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 当构建一个简单的应用时，仅凭组件式架构已被证明是开发此类应用的最佳方法，其中各个组件可以被重用以提高可维护性和灵活性。
- en: However, when building enterprise-ready applications with hundreds of components,
    from collective experience, it is proven that component-based architecture alone
    might not be enough, especially when your application is getting big but sharing
    and reusing code even within components becomes very important, and thus the introduction
    of the Composition API.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当构建具有数百个组件的企业级应用时，根据集体经验，仅凭组件式架构可能不足以满足需求，尤其是在应用规模扩大，即使在组件内部共享和重用代码也变得非常重要的情况下，因此引入了组合式API。
- en: Code example
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 代码示例
- en: Let’s imagine we are building an enterprise to-do application with unique features
    such as filters and search capabilities. Using the Options API, we will approach
    this project using the traditional `data`, `computed`, and `watch` methods.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们假设我们正在构建一个具有独特功能（如过滤和搜索能力）的企业级待办事项应用。我们将使用Options API，并采用传统的`data`、`computed`和`watch`方法来处理这个项目。
- en: 'The following code block shows how to create and manage a Vue component using
    the Options API from Vue 2:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码块展示了如何使用Vue 2的Options API创建和管理Vue组件：
- en: '[PRE0]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The preceding component handles many responsibilities, as you can see in the
    following points:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 以下组件处理了许多职责，如下所述：
- en: Getting the `Todo` repository from an external API and refreshing it on user
    changes
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从外部API获取`Todo`仓库并在用户更改时刷新它
- en: Searching the `Todo` repository using the `searchQuery` string
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`searchQuery`字符串搜索`Todo`仓库
- en: Filtering the `Todo` repository using the `filters` object
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`filters`对象过滤`Todo`仓库
- en: Organizing your component’s logic as in the previous example works perfectly,
    but at the same time poses a huge challenge to readability and maintainability
    for larger and enterprise projects with bigger components’ logic.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 将组件的逻辑组织方式如前例所示运作得非常完美，但同时也对更大规模和企业的项目，尤其是组件逻辑更复杂的项目的可读性和可维护性提出了巨大的挑战。
- en: Wouldn’t it be perfect if we could collocate code related to the same logical
    concern? That’s exactly what the Composition API enables us to do.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们能够将相关逻辑关注点的代码集中在一起，那岂不是完美？这正是组合式 API 能够让我们做到的。
- en: 'Let’s rewrite the same component using the Composition API to see the improvement
    and readability benefits gained by using it:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用组合式 API 重新编写相同的组件，以查看使用它所获得的改进和可读性优势：
- en: '[PRE1]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The Composition API is a great addition, especially for developing enterprise-ready
    applications. We can move the `computed`, `mounted`, and `watch` lifecycle hooks
    into a standalone composition function and import it into the script with `setup`,
    making it readable, flexible, and maintainable. To learn more about the Composition
    API, visit the official documentation ([https://v3.vuejs.org/guide/composition-api-introduction.html#why-composition-api](https://v3.vuejs.org/guide/composition-api-introduction.html#why-composition-api)),
    which is outside the scope of this book.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 组合式 API 是一个很好的补充，特别是对于开发企业级应用。我们可以将 `computed`、`mounted` 和 `watch` 生命周期钩子移动到一个独立的组合函数中，并通过
    `setup` 在脚本中导入它，使其易于阅读、灵活且易于维护。要了解更多关于组合式 API 的信息，请访问官方文档（[https://v3.vuejs.org/guide/composition-api-introduction.html#why-composition-api](https://v3.vuejs.org/guide/composition-api-introduction.html#why-composition-api)），它超出了本书的范围。
- en: So far, we have covered an overview of Vue 3 and the newly introduced features
    of Vue that are handy for building enterprise-ready and scalable production-grade
    applications. We have also covered the basics of the Composition API to foster
    your understanding of building your modern enterprise application with Vue 3.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经概述了 Vue 3 以及 Vue 新引入的功能，这些功能对于构建企业级和可扩展的生产级应用非常有用。我们还介绍了组合式 API 的基础知识，以帮助您理解如何使用
    Vue 3 构建现代企业级应用。
- en: In the next section, we will put your knowledge to the test by learning how
    to build your first Vue 3 application using Vite as the build tool.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将通过学习如何使用 Vite 作为构建工具来构建您的第一个 Vue 3 应用程序来测试您的知识。
- en: According to the official documentation ([https://vitejs.dev/guide/](https://vitejs.dev/guide/)),
    Vite is a build tool that aims to provide a faster and leaner development experience
    for modern web projects. It is based on Rollup, and it’s configured to support
    most sensible defaults for modern JavaScript frameworks.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 根据官方文档（[https://vitejs.dev/guide/](https://vitejs.dev/guide/)），Vite 是一个旨在为现代网络项目提供更快、更精简的开发体验的构建工具。它基于
    Rollup，并配置为支持大多数合理的默认设置，适用于现代 JavaScript 框架。
- en: Building your first Vue.js 3 app
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建 Vue.js 3 的第一个应用
- en: Vue.js can be integrated into projects in multiple ways depending on the requirements
    because it is incrementally adaptable.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 根据需求，Vue.js 可以以多种方式集成到项目中，因为它具有增量适应性。
- en: We will create a completely blank new Vue 3 project, or you can use the migration
    guide ([https://v3.vuejs.org/guide/migration/migration-build.html#overview](https://v3.vuejs.org/guide/migration/migration-build.html#overview))
    to migrate your Vue 2 project to Vue to follow along.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建一个完全空白的新 Vue 3 项目，或者您可以使用迁移指南（[https://v3.vuejs.org/guide/migration/migration-build.html#overview](https://v3.vuejs.org/guide/migration/migration-build.html#overview)）将您的
    Vue 2 项目迁移到 Vue 3 以便跟随。
- en: In this section, we are going to cover how to build our Vue 3 application using
    the Vite **command-line** **interface** (**CLI**).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将介绍如何使用 Vite 的 **命令行界面**（**CLI**）构建我们的 Vue 3 应用程序。
- en: Creating a Vue 3 app with Vite
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Vite 创建 Vue 3 应用
- en: To create our first Vue 3 application, we will use the recommended **Vite**
    web development tool. Vite is a web development build tool that allows for lightning-fast
    code serving due to its native ES Module import approach.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建我们的第一个 Vue 3 应用程序，我们将使用推荐的 **Vite** 网络开发工具。Vite 是一个网络开发构建工具，由于其本地的 ES 模块导入方法，它允许快速提供代码服务。
- en: In this book, we will be building an enterprise-ready Pinterest clone project,
    and all the backend data management of the project will be developed and hosted
    with **Strapi**.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我们将构建一个企业级 Pinterest 克隆项目，并且该项目的所有后端数据管理都将由 **Strapi** 开发和托管。
- en: 'Type along with these simple commands:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 按照这些简单的命令输入：
- en: '[PRE2]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The preceding commands will create a `pinterest-app-clone` folder with Vue
    3 installed and set up properly. Once done, open your favorite browser and access
    the web page with `localhost:3000`. This is what the web page will look like:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将创建一个包含 Vue 3 并正确设置的 `pinterest-app-clone` 文件夹。完成后，打开您喜欢的浏览器并访问 `localhost:3000`
    的网页。这就是网页的外观：
- en: '![Figure 1.1 – A screenshot of the newly installed Vue 3](img/Figure_1.01_B17237.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.1 – 新安装的 Vue 3 的截图](img/Figure_1.01_B17237.jpg)'
- en: Figure 1.1 – A screenshot of the newly installed Vue 3
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.1 – 新安装的 Vue 3 的截图
- en: In this section, we explored Vue 3, the Composition API, and how to get started
    building your first application with Vue 3\. In the next section, we will learn
    about the Strapi CMS that we will use for data and content management.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们探讨了 Vue 3、Composition API 以及如何开始使用 Vue 3 构建你的第一个应用。在下一节中，我们将了解我们将用于数据和管理内容的
    Strapi CMS。
- en: What is the Strapi CMS?
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是 Strapi CMS？
- en: Strapi is an open source headless CMS based on Node.js that is used to develop
    and manage content or data using RESTful APIs and GraphQL.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Strapi 是一个基于 Node.js 的开源无头 CMS，用于通过 RESTful API 和 GraphQL 开发和管理内容或数据。
- en: With Strapi, we can scaffold our API faster and consume the content via APIs
    using any HTTP client or GraphQL-enabled frontend.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Strapi，我们可以更快地搭建我们的 API，并通过任何 HTTP 客户端或 GraphQL 兼容的前端来消费内容。
- en: Scaffolding a Strapi project
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 搭建 Strapi 项目
- en: 'Scaffolding a new Strapi project is very simple and works precisely like installing
    a new frontend framework. Follow these steps to scaffold a new Strapi project:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 搭建新的 Strapi 项目非常简单，其工作方式与安装新的前端框架完全相同。按照以下步骤搭建新的 Strapi 项目：
- en: 'Run either of the following commands and test them out in your default browser:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下任一命令并在你的默认浏览器中测试它们：
- en: '[PRE3]'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The preceding command will scaffold a new Strapi project in the directory you
    specified.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将在你指定的目录中搭建一个新的 Strapi 项目。
- en: Next, run `yarn build` to build your app and, lastly, `yarn develop` to run
    the new project if it doesn’t start automatically.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，运行 `yarn build` 来构建你的应用，最后，如果项目没有自动启动，运行 `yarn develop`。
- en: 'The `yarn develop` command will open a new tab with a page to register your
    new admin of the system:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '`yarn develop` 命令将打开一个新标签页，显示一个页面以注册系统的新管理员：'
- en: '![Figure 1.2 – The registration page](img/Figure_1.02_B17237.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.2 – 注册页面](img/Figure_1.02_B17237.jpg)'
- en: Figure 1.2 – The registration page
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.2 – 注册页面
- en: Go ahead and fill out the form and click on the **Submit** button to create
    a new admin.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请继续填写表格并点击**提交**按钮以创建新的管理员。
- en: As we progress in this book, we will customize our Strapi backend instance to
    reflect Pinterest data modeling.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我们在本书中的进展，我们将定制我们的 Strapi 后端实例以反映 Pinterest 数据建模。
- en: Summary
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This chapter started with an overview of Vue.js and why Vue.js can be used to
    develop enterprise-ready applications. We discussed the latest release of Vue.js
    and how it improves the performance aspect of the framework by introducing a tree-shaking
    feature right out of the box. We then introduced the Composition API, a Vue 3
    feature that improves the readability, maintainability, and scalability of Vue
    3 for building and deploying enterprise applications. We also looked at creating
    our first Vue 3 application using Vite and the fundamental reasons for using Vite
    instead of the other available options.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 本章从 Vue.js 的概述开始，讨论了为什么 Vue.js 可以用来开发企业级应用。我们讨论了 Vue.js 的最新版本以及它是如何通过引入开箱即用的
    tree-shaking 功能来提高框架的性能方面的。然后，我们介绍了 Composition API，这是 Vue 3 的一个特性，它提高了 Vue 3
    在构建和部署企业应用时的可读性、可维护性和可扩展性。我们还探讨了如何使用 Vite 创建我们的第一个 Vue 3 应用，以及使用 Vite 而不是其他可用选项的基本原因。
- en: Finally, we introduced the Strapi CMS, the backend stack and a headless CMS
    for building and modeling backend applications and APIs. With Strapi, we will
    only focus on building and scaling our enterprise frontend Pinterest-clone application
    using Vue 3 while the Strapi CMS handles the backend.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们介绍了 Strapi CMS，它是用于构建和建模后端应用和 API 的后端堆栈和无头 CMS。使用 Strapi，我们将专注于使用 Vue 3
    构建 和扩展我们的企业级 Pinterest-clone 应用，而 Strapi CMS 将处理后端。
- en: In the next chapter, we will dive deeper into using Vuex, Vue Router, and Axios
    to build an enterprise-ready app. You will learn how to properly utilize these
    libraries to develop large-scale applications with maintainability and scalability,
    and by the end of the chapter, you will have learned how to set up your backend
    with Strapi and connect it to Vue 3.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将更深入地探讨如何使用 Vuex、Vue Router 和 Axios 来构建一个企业级应用。你将学习如何正确地利用这些库来开发具有可维护性和可扩展性的大型应用，到本章结束时，你将学会如何使用
    Strapi 设置你的后端并将其连接到 Vue 3。
