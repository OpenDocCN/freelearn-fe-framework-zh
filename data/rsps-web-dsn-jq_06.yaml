- en: Chapter 6. Building Responsive Image Sliders
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 6 章。构建响应式图片轮播器
- en: The image slider has been used a lot and has become a very popular web element.
    On a website, with beautiful transitions and animations, captions and descriptions,
    and the use of custom timings, an attractive business presentation is delivered
    online. Also, a good image slider can display a product showcase, catches the
    user's attention, and improves its sale.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 图片轮播器被广泛使用，已经成为非常受欢迎的网络元素。在网站上，通过美丽的过渡和动画、标题和描述以及使用自定义时间，可以在线呈现出一个吸引人的业务展示。此外，一个好的图片轮播器可以展示产品橱窗，吸引用户的注意力，并提高其销售额。
- en: 'In this chapter we will learn about:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中我们将学习以下内容：
- en: Different types of responsive image sliders
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不同类型的响应式图片轮播器
- en: Introducing touch gestures in user experience
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引入触摸手势在用户体验中
- en: Implementing touch events with JavaScript plugins
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 JavaScript 插件实现触摸事件
- en: Responsive image sliders
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 响应式图片轮播器
- en: Opening a website and seeing an image slider in the header area is common nowadays.
    Image sliders display highlighted content, which are really useful, within a limited
    space. Although the free space is more limited when a site is viewed through mobile
    devices, the slider element still catches the client's attention.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个网站并在头部区域看到一个图片轮播器是很常见的现象。图片轮播器显示突出内容，在有限的空间内确实非常有用。虽然当通过移动设备查看网站时可用空间更加有限，但轮播器元素仍然能够吸引客户的注意力。
- en: The difference between how much area can be used to display a highlighted content
    and the resource available to render it is really big if compared with desktop,
    where we generally do not have problems with script performance, and the interaction
    of each transition is performed through the use of arrow signs to switch images.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果与桌面相比，可以用于显示突出内容的区域和用于呈现它的资源的差异真的很大，通常情况下我们不会遇到脚本性能问题，并且每个转换的交互是通过使用箭头标志来切换图片。
- en: 'When the responsive era started, the way that people normally interacted with
    image sliders was observed, and changes, such as the way to change each slide,
    were identified, based on the progressive enhancement concept. The solution was
    to provide a similar experience to the users of mobile devices: the adoption of
    gestures and touches on image slider elements for devices that accept them instead
    of displaying fallbacks.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当响应式时代开始时，观察了人们通常与图片轮播器互动的方式，并根据渐进增强的概念确定了变化，例如改变每个幻灯片的方式。解决方案是为移动设备的用户提供类似的体验：在支持的设备上对图片轮播器元素进行手势和触摸操作，而不是显示回退。
- en: With the constant evolution of browsers and technologies, there are many image
    slider plugins with responsive characteristics. My personal favorite plugins are
    Elastislide, FlexSlider2, ResponsiveSlides, Slicebox, and Swiper. There are plenty
    available, and the only way to find one you truly like is to try them!
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 随着浏览器和技术的不断发展，有许多具有响应特性的图片轮播器插件。我个人最喜欢的插件是 Elastislide、FlexSlider2、ResponsiveSlides、Slicebox
    和 Swiper。有很多可用的，找到真正喜欢的一个的唯一方法是尝试它们！
- en: Let's look in detail at how each of them works.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们详细了解它们的工作原理。
- en: Elastislide plugin
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Elastislide 插件
- en: Elastislide is a responsive image slider that will adapt its size and behavior
    in order to work on any screen size based on jQuery. This jQuery plugin handles
    the slider's structure, including images with percentage-based width inside, displaying
    it horizontally or vertically with a predefined minimum number of shown images.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Elastislide 是一个响应式图片轮播器，它会根据 jQuery 在任何屏幕尺寸上工作的大小和行为进行调整。这个 jQuery 插件处理了轮播器的结构，包括内部百分比宽度的图片，水平或垂直显示它，以及预定义的最小显示图片数量。
- en: Elastislide is licensed under the MIT license and can be downloaded from [https://github.com/codrops/Elastislide](https://github.com/codrops/Elastislide).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Elastislide 使用 MIT 许可证，可以从 [https://github.com/codrops/Elastislide](https://github.com/codrops/Elastislide)
    下载。
- en: When we are implementing an image slider, simply decreasing the container size
    and displaying a horizontal scrollbar will not solve the problem for small devices
    gracefully. The recommendation is to resize the internal items too. Elastislide
    fixes this resizing issue very well and defines the minimum elements we want to
    show instead of simply hiding those using CSS.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们实现一个图片轮播器时，仅仅减小容器的尺寸并显示一个水平滚动条并不能优雅地解决小设备的问题。建议是也要调整内部项目的大小。Elastislide 很好地解决了这个调整大小的问题，并定义了我们想要显示的最小元素，而不是仅仅使用
    CSS 隐藏它们。
- en: Also, Elastislide uses a complementary and customized version of jQuery library
    named jQuery++. jQuery++ is another JavaScript library very useful to deal with
    DOM and special events. In this case, Elastislide has a custom version of jQuery++,
    which enables the plugin working with **swipe events** on touch devices.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Elastislide 使用了一种名为 jQuery++ 的补充和定制版本的 jQuery 库。jQuery++ 是另一个处理 DOM 和特殊事件非常有用的
    JavaScript 库。在这种情况下，Elastislide 使用了一个定制版本的 jQuery++，这使得插件能够在触摸设备上处理**滑动事件**。
- en: How to do it
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何操作
- en: 'As we will see four different applications of this plugin for the same carousel,
    we will use the same HTML carousel''s structure and may modify only the JavaScript
    before executing the plugin, specifying the parameters:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们将在同一个轮播图中看到此插件的四个不同应用，我们将使用相同的 HTML 轮播图结构，只需在执行插件之前修改 JavaScript，指定参数即可：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'At the bottom of the DOM (before the `</body>` closing tag), we will need to
    include the jQuery and jQuery++ libraries (required for this solution), and then
    the ElastiSlide script:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DOM 底部（在 `</body>` 结束标签之前），我们需要包含 jQuery 和 jQuery++ 库（此解决方案所需），然后再包含 ElastiSlide
    脚本：
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Then, include the CSS stylesheet inside the `<head>` tag:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在 `<head>` 标签内包含 CSS 样式表：
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Alright, now we already have the basis to show four different examples. For
    each example, you must add different parameters when executing the plugin script,
    in order to get different rendering, depending on the project need.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 好了，现在我们已经有了展示四个不同示例的基础。对于每个示例，当执行插件脚本时，必须添加不同的参数，以便根据项目需求获得不同的渲染效果。
- en: Example 1 – minimum of three visible images (default)
  id: totrans-25
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 示例 1 – 至少显示三张图片（默认）
- en: 'In this first example, we will see the default visual and behavior, and whether
    we will put the following code right after it, including the ElastiSlide plugin:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一个示例中，我们将看到默认的视觉效果和行为，以及是否在其后放置以下代码，包括 ElastiSlide 插件：
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The default options that come with this solution are:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 此解决方案提供的默认选项包括：
- en: Minimum three items will be shown
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 至少显示三个项目
- en: Speed of scroll effect is 0.5 seconds
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 滚动效果的速度为 0.5 秒
- en: Horizontal orientation
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 水平方向
- en: Easing effect is defined as ease-in-out
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缓动效果定义为 ease-in-out
- en: The carousel will start to show the first image on the list
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轮播图将开始显示列表中的第一张图片
- en: 'The following screenshot represents what the implementation of this code will
    look like. Look at the difference between its versions shown on tablets and smartphones:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图显示了此代码的实现效果。注意在平板电脑和智能手机上显示的版本之间的差异：
- en: '![Example 1 – minimum of three visible images (default)](img/3602OS_06_01.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![示例 1 – 至少显示三张图片（默认）](img/3602OS_06_01.jpg)'
- en: Example 2 – vertical with a minimum of three visible images
  id: totrans-36
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 示例 2 – 垂直方向，至少显示三张图片
- en: 'There is an option to render the carousel vertically, just by changing one
    parameter. Furthermore, we may speed up the scrolling effect. Remember to include
    the same files used in Example 1, and then insert the following code into the
    DOM:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个选项可以使轮播图以垂直方向呈现，只需更改一个参数。此外，我们可以加快滚动效果。请记得包含与示例 1 中使用的相同文件，并在 DOM 中插入以下代码：
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'By default, three images are displayed as a minimum. But this minimum value
    can be modified as we will see in our next example:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，至少显示三张图片。但是，这个最小值可以根据我们将在下一个示例中看到的情况进行修改：
- en: '![Example 2 – vertical with a minimum of three visible images](img/3602OS_06_02.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![示例 2 – 垂直方向，至少显示三张图片](img/3602OS_06_02.jpg)'
- en: Example 3 – fixed wrapper with a minimum of two visible images
  id: totrans-41
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 示例 3 – 固定包装器，至少显示两张图片
- en: In this example, we will define the minimum visible items in the carousel, the
    difference may be noticed when the carousel is viewed on small screens and the
    images will not reduce too much. Also, we may define the image to be shown starting
    from the third one.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，我们将定义轮播图中可见项目的最小值，当在小屏幕上查看轮播图时，可以注意到差异，并且图片不会缩小太多。此外，我们还可以定义从第三张图片开始显示的图片。
- en: 'Remember to include the same files that were used in Example 1, and then execute
    the scripts informing the following parameters and positioning them after including
    the ElastiSlide plugin:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 请记得包含与示例 1 中使用的相同文件，并在包含 ElastiSlide 插件之后执行脚本，提供以下参数并将其定位：
- en: '[PRE5]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![Example 3 – fixed wrapper with a minimum of two visible images](img/3602OS_06_03.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![示例 3 – 固定包装器，至少显示两张图片](img/3602OS_06_03.jpg)'
- en: Example 4 – minimum of four images visible in an image gallery
  id: totrans-46
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 示例 4 – 图片库中至少显示四张图片
- en: 'In the fourth example, we can see many JavaScript implementations. However,
    the main objective of this example is to show the possibility which this plugin
    provides to us. Through the use of plugin callback functions and private functions
    we may track the click and the current image, and then handle this image change
    on demand by creating an image gallery:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在第四个示例中，我们可以看到许多 JavaScript 实现。然而，此示例的主要目标是展示此插件为我们提供的可能性。通过使用插件回调函数和私有函数，我们可以跟踪点击和当前图像，然后通过创建图像画廊按需处理此图像更改：
- en: '[PRE6]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![Example 4 – minimum of four images visible in an image gallery](img/3602OS_06_04.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![示例 4 – 图像画廊中可见的最少四幅图像](img/3602OS_06_04.jpg)'
- en: For this purpose, ElastiSlide may not have big advantages if compared with other
    plugins because it depends on our extra development to finalize this gallery.
    So, let's see what the next plugin offers to solve this problem.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，与其他插件相比，ElastiSlide 可能没有太大优势，因为它依赖于我们的额外开发来完成这个画廊。因此，让我们看看下一个插件提供了什么来解决这个问题。
- en: FlexSlider2 – a fully responsive slider
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: FlexSlider2 – 完全响应式滑块
- en: FlexSlider2 is a lightweight jQuery plugin for image slider which includes fade
    and slide animations, touch gestures for mobile devices, and a bunch of customizable
    options.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: FlexSlider2 是一个轻量级的 jQuery 图像滑块插件，包括淡入淡出和滑动动画、移动设备的触摸手势以及一堆可定制的选项。
- en: FlexSlider2 is demonstrating a constant confidence in the developers' community,
    and some of the known **CMS** (**Content Management Systems**), such as Drupal
    and WordPress, have already imported this plugin to be used on their systems since
    the plugin was released in 2011.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 自从 2011 年发布以来，FlexSlider2 在开发者社区中一直展示着持续的信心，并且一些已知的**CMS**（**内容管理系统**），如 Drupal
    和 WordPress，已经导入了此插件以在其系统中使用。
- en: The stable Version 2.0 also supports users with old browsers since Safari 4,
    Chrome 4, Firefox 3.6, Opera 10, and IE7\. Android and iOS devices are supported
    as well.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 稳定的版本 2.0 也支持使用旧浏览器的用户，自 Safari 4、Chrome 4、Firefox 3.6、Opera 10 和 IE7 开始。同时也支持
    Android 和 iOS 设备。
- en: How to do it
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何做
- en: To see the wide variety of options which this plugin provides, we will see the
    following three application examples of the most-used plugin options. We will
    start by showing the default layout of the slider. Then, we will see a slider
    using a navigation to support a situation where we have a high quantity of images
    to be shown, and in the last example we will see another way to configure a carousel
    of images provided by FlexSlider2.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 为了查看此插件提供的各种选项，我们将看到以下三个应用示例中最常用的插件选项。我们将从显示滑块的默认布局开始。然后，我们将看到一个使用导航来支持显示大量图像的情况的滑块，最后一个示例中我们将看到另一种配置
    FlexSlider2 提供的图像轮播的方式。
- en: You may find the downloadable files at [https://github.com/woothemes/FlexSlider](https://github.com/woothemes/FlexSlider);
    for the additional plugin options, we recommend you to read the well-done documentation
    on the official website of the plugin at [http://www.woothemes.com/flexslider/](http://www.woothemes.com/flexslider/).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在 [https://github.com/woothemes/FlexSlider](https://github.com/woothemes/FlexSlider)
    找到可下载的文件；对于附加的插件选项，我们建议您阅读插件官方网站上的完善文档 [http://www.woothemes.com/flexslider/](http://www.woothemes.com/flexslider/)
    。
- en: Example 1 – basic slider (default)
  id: totrans-58
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 示例 1 – 基本滑块（默认）
- en: 'Let''s start by including the CSS stylesheet inside the `<head>` tag:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从在`<head>`标签内包含 CSS 样式表开始：
- en: '[PRE7]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'At the bottom of the DOM (before the `</body>` closing tag), we will need to
    include two files: jQuery library and FlexSlider2 script.'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DOM 底部（在`</body>`结束标记之前），我们需要包含两个文件：jQuery 库和 FlexSlider2 脚本。
- en: '[PRE8]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Good so far, the first example starts here, when we are defining the carousel
    structure using a simple unordered list. There are only two requirements for it,
    which are, defining a `flexslider` class to the wrapping `<div>` and the `slides`
    class to `<ul>`.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，第一个示例从这里开始，我们正在定义一个简单的无序列表来定义轮播结构。对此只有两个要求，即将`flexslider`类定义为包装 `<div>`
    和将`slides`类定义为`<ul>`。
- en: '[PRE9]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'After including the FlexSlider2 library, let''s add this following code to
    execute the script. We will see the default visual and behavior of this plugin
    only displaying the common slide of image elements inside the carousel:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在包含 FlexSlider2 库后，让我们添加以下代码来执行脚本。我们将只显示轮播中普通图像元素的默认外观和行为：
- en: '[PRE10]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The style that comes with this plugin seems beautiful on smartphones and desktop
    versions:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 此插件附带的样式在智能手机和桌面版本上看起来很漂亮：
- en: '![Example 1 – basic slider (default)](img/3602OS_06_05.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![示例 1 – 基本滑块（默认）](img/3602OS_06_05.jpg)'
- en: Example 2 – slider with carousel slider as navigation control
  id: totrans-69
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 示例 2 – 使用轮播滑块作为导航控制器
- en: The initial HTML structure is almost the same, but now we have to duplicate
    the slides structure for carousel. By executing the JavaScript function, the relationship
    between these two elements is identified and connected to the expected behavior.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 初始HTML结构几乎相同，但现在我们必须为轮播复制幻灯片结构。通过执行JavaScript函数，识别这两个元素之间的关系，并连接到期望的行为。
- en: Remember to include the same files used in Example 1, and then insert the following
    code into the HTML code.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 记得包含示例 1 中使用的相同文件，然后将以下代码插入HTML代码中。
- en: '[PRE11]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: To create this image gallery, we must identify the elements which the plugins
    will affect by using IDs, avoiding any kind of behavior conflicts. Comparing this
    example with Example 1, where FlexSlider2 was instantiated only once, we have
    two calls to the plugin script.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建这个图片画廊，我们必须通过使用ID来识别插件将影响的元素，避免任何行为冲突。将此示例与示例 1 进行比较，在示例 1 中，FlexSlider2只实例化了一次，我们对插件脚本进行了两次调用。
- en: In the first part of the following code, the slideshow of pictures is being
    created, and in addition some other options that the plugin offers, such as `animation`,
    `itemWidth`, `itemMargin`, and `asNavFor`, are being complemented.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下代码的第一部分中，正在创建图片幻灯片，并补充一些插件提供的其他选项，比如`animation`、`itemWidth`、`itemMargin`和`asNavFor`。
- en: 'In the second part of this code, the navigation control is being created:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在此代码的第二部分中，正在创建导航控制器：
- en: '[PRE12]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Tip
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The `asNavFor` option transforms `#slider` in a thumbnail navigation for `#carousel`.
    And the `sync` option creates a mirror of actions performed on `#slider` to `#carousel`.
    For example, if the user navigates through the slider, the carousel items will
    follow the actions showing the same active slider and vice versa.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '`asNavFor`选项将`#slider`转换为`#carousel`的缩略图导航。而`sync`选项则创建了一个镜像，将在`#slider`上执行的操作同步到`#carousel`上。例如，如果用户通过滑块导航，轮播项目将跟随操作，显示相同的活动滑块，反之亦然。'
- en: 'Very simple, professional, and useful! So, let''s see this responsive slider
    visual with navigation control on small devices and a desktop:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 非常简单、专业、且实用！因此，让我们看看这个响应式滑块在小设备和桌面上的带导航控制的视觉效果：
- en: '![Example 2 – slider with carousel slider as navigation control](img/3602OS_06_06.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![示例 2 – 使用轮播滑块作为导航控制器](img/3602OS_06_06.jpg)'
- en: Example 3 – carousel setting minimum and maximum range
  id: totrans-81
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 示例 3 – 轮播设置最小和最大范围
- en: 'Remember to include the same files used in Example 1, and then insert the following
    code into the HTML code. Notice that it uses the same HTML structure as the first
    example:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 记得包含示例 1 中使用的相同文件，然后将以下代码插入HTML代码中。请注意，它使用与第一个示例相同的HTML结构：
- en: '[PRE13]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'However, to build it we need to change the JavaScript code, where we inform
    different parameters such as `itemWidth`, `itemMargin`, `minItems`, and `maxItems`,
    as we will see in the following code:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，为了构建它，我们需要更改JavaScript代码，在那里我们会通知不同的参数，如`itemWidth`、`itemMargin`、`minItems`和`maxItems`，如我们将在以下代码中看到的那样：
- en: '[PRE14]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Note
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The options `itemWidth` and `itemMargin` should be measured and defined in pixels,
    but do not worry, the plugin will handle this fixed unit very well.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '`itemWidth`和`itemMargin`选项应该用像素进行度量和定义，但不用担心，插件会处理这个固定单位得很好。'
- en: 'Also, `minItems` and `maxItems` are being used to define the values of minimum/maximum
    elements displayed on the screen depending on the device width. In the following
    screenshot, we will see the preceding code in practice in both versions, mobile
    and desktop:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，`minItems`和`maxItems`被用来定义根据设备宽度在屏幕上显示的最小/最大元素数量值。在下一个屏幕截图中，我们将看到前面的代码在移动设备和桌面两个版本中的实际应用：
- en: '![Example 3 – carousel setting minimum and maximum range](img/3602OS_06_07.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![示例 3 – 设置轮播的最小和最大范围](img/3602OS_06_07.jpg)'
- en: ResponsiveSlides – the best of basic slides
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ResponsiveSlides – 基本幻灯片中的最佳解决办法
- en: ResponsiveSlides is a jQuery plugin, which is a very lightweight solution that
    basically acts in two different modes. Also, it just automatically fades the images,
    or operates as a responsive image container with pagination and/or navigation
    to fade between the slides.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: ResponsiveSlides是一个jQuery插件，是一个非常轻量级的解决方案，基本上处于两种不同的模式。它可以自动淡化图像，或者作为具有分页和/或导航以在幻灯片之间淡化的响应式图像容器。
- en: ResponsiveSlides performs on a wide range of browsers including the older versions
    of IE and the Android Version 2.3 and above. It also adds the CSS `max-width`
    support for IE6 and other browsers that do not natively support it. This property
    helps to keep it responsive for small screens.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: ResponsiveSlides可以在各种浏览器上执行，包括旧版IE和Android版本2.3及以上。它还为不本地支持的IE6和其他浏览器添加了CSS
    `max-width`支持。这个属性有助于使其在小屏幕上响应。
- en: This plugin has two dependencies which are the jQuery library and that all of
    the images must have the same dimensions.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这个插件有两个依赖项，分别是jQuery库和所有图片必须具有相同的尺寸。
- en: You will find the downloadable files and more details about plugin options at
    [https://github.com/viljamis/ResponsiveSlides.js](https://github.com/viljamis/ResponsiveSlides.js).
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[https://github.com/viljamis/ResponsiveSlides.js](https://github.com/viljamis/ResponsiveSlides.js)找到可下载的文件以及关于插件选项的更多详细信息。
- en: How do to it
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何做到这一点
- en: In the following sections, you will find three examples where we can see the
    main features which this plugin offers. In the first example, we will see which
    files are necessary for working it out and what are the default options of ResponsiveSlides.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分中，您将找到三个示例，其中我们可以看到这个插件提供的主要功能。在第一个示例中，我们将看到哪些文件是必要的，并且ResponsiveSlides的默认选项是什么。
- en: In the second example, we will add various parameters to check how this plugin
    can be customized and meet the needs of our projects.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二个示例中，我们将添加各种参数来检查这个插件如何可以定制化并满足我们项目的需求。
- en: In the third example, we will implement an additional navigation through images,
    facilitating the user access to go to the specific slide they want to view.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在第三个示例中，我们将通过图片实现额外的导航，方便用户访问并查看他们想要的特定幻灯片。
- en: Example 1
  id: totrans-99
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 示例1
- en: 'So, we will start by including the CSS file responsible for ResponsiveSlides
    theme inside the `<head>` tag:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们将首先在`<head>`标签内包含ResponsiveSlides主题的CSS文件：
- en: '[PRE15]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'After that, the plugin supports the use of a simple HTML unordered list to
    craft our slideshow. However, we need to define a classname for this `<ul>`, making
    sure the plugin will detect which `<ul>` must be transformed:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，插件支持使用简单的HTML无序列表来制作我们的幻灯片。但是，我们需要为这个`<ul>`定义一个类名，确保插件能够检测到哪个`<ul>`必须被转换：
- en: '[PRE16]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Then, at the bottom of the DOM (before the `</body>` closing tag), we should
    include the jQuery library and ResponsiveSlides script.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在DOM底部（在`</body>`结束标签之前），我们应该包含jQuery库和ResponsiveSlides脚本。
- en: '[PRE17]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Now, we will just have to execute the ResponsiveSlides script for `<ul>` with
    the `rslides` class when the site has loaded. Let''s put this code after the inclusion
    of ResponsiveSlides:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们只需在网站加载后为带有`rslides`类的`<ul>`执行ResponsiveSlides脚本。让我们在包含ResponsiveSlides的代码之后放置这段代码：
- en: '[PRE18]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Tip
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Inside the `demo.css` file (that comes with plugin files), there is a bunch
    of CSS stylesheets, which may help us customize the slideshow. This file is not
    required, but it makes a lot of difference on the visual and may be useful for
    further references.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在附带插件文件的`demo.css`文件中，有一堆CSS样式表，这些可能帮助我们自定义幻灯片。这个文件不是必需的，但对视觉有很大的区别，可能对进一步的参考有用。
- en: 'This is the default visual of the plugin:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这是插件的默认视觉效果：
- en: '![Example 1](img/3602OS_06_08.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![示例1](img/3602OS_06_08.jpg)'
- en: Example 2
  id: totrans-112
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 示例2
- en: So, we will start the same way as we did with the previous example by including
    the CSS file inside the `<head>` tag, then at the bottom of the DOM code (before
    the `</body>` closing tag), we will include the jQuery library and ResponsiveSlides
    script.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们将像之前的示例一样开始，先在`<head>`标签内包含CSS文件，然后在DOM代码底部（在`</body>`结束标签之前）包含jQuery库和ResponsiveSlides脚本。
- en: For this example, we added a div wrapping to the slideshow `slider_container`,
    helping us to position the arrows and the caption text for each slide. If some
    projects need this caption text to explain the slide, ResponsiveSlides may handle
    this feature very well.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个示例，我们添加了一个包裹幻灯片`slider_container`的div，帮助我们定位箭头和每个幻灯片的标题文本。如果某些项目需要这个标题文本来解释幻灯片，ResponsiveSlides可以很好地处理这个特性。
- en: 'So, let''s test it on this next slideshow:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，让我们在下一个幻灯片上测试一下：
- en: '[PRE19]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Then, remember to execute the ResponsiveSlides script for `<div>` with the
    `slider-example2` ID when the site has loaded, by putting this code after the
    inclusion of ResponsiveSlides:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，请记得在网站加载后为带有`slider-example2` ID的`<div>`执行ResponsiveSlides脚本，将这段代码放在包含ResponsiveSlides的代码之后：
- en: '[PRE20]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Tip
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: It is also possible to inform the plugin to render only next/previous arrows
    with no pager navigation by setting `false` for the `pager` option and `true`
    for the `nav` option.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以通过将 `pager` 选项设置为 `false` 并将 `nav` 选项设置为 `true` 来通知插件仅呈现下一个/上一个箭头而无需分页导航。
- en: 'In the following screenshot, we will see this example with the caption and
    navigation arrows styles from `demo.css`, which come with the plugin:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的屏幕截图中，我们将看到这个示例的标题和导航箭头样式，这些样式来自于与插件一起提供的 `demo.css`：
- en: '![Example 2](img/3602OS_06_09.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![示例 2](img/3602OS_06_09.jpg)'
- en: Example 3
  id: totrans-123
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 示例 3
- en: 'This example is focused on creating a custom navigation, based on thumbnail
    images and images created by us previously, offering another way to the user to
    display a slideshow gallery. In order to build it, we will insert other simple
    unordered lists showing thumbnail images and setting an ID to inform to the plugin
    later:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例侧重于创建一个基于缩略图图像和我们之前创建的图像的自定义导航，为用户提供另一种显示幻灯片库的方式。为了构建它，我们将插入其他简单的无序列表，显示缩略图图像并设置一个
    ID，以后向插件提供信息：
- en: '[PRE21]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Again, we must ensure that the CSS file will be included inside the `<head>`
    tag, then include the jQuery library and ResponsiveSlides script at the bottom
    of the HTML code. When we execute ResponsiveSlides for `#slider-example3`, we
    will set the `manualControls` option and specify our custom pager navigation ID
    for that thumbnail image structure, as follows:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们必须确保 CSS 文件将被包含在 `<head>` 标签内，然后在 HTML 代码底部包含 jQuery 库和 ResponsiveSlides
    脚本。当我们对 `#slider-example3` 执行 ResponsiveSlides 时，我们将设置 `manualControls` 选项，并指定我们自定义的缩略图图像结构的分页导航
    ID，如下所示：
- en: '[PRE22]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The following screenshot depicts the visual of this navigation feature implemented:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图描述了实现此导航功能的视觉效果：
- en: '![Example 3](img/3602OS_06_10.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![示例 3](img/3602OS_06_10.jpg)'
- en: Swiper – performatic touch image slider
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Swiper – 高性能触摸图片滑块
- en: Swiper is a lightweight mobile touch slider with hardware-accelerated transitions
    (where supported) and amazing native behavior. It is intended to be used on mobile
    websites, but also works great on modern desktop browsers.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: Swiper 是一个轻量级的移动触摸滑块，具有硬件加速转换（在支持的情况下）和惊人的本机行为。它旨在用于移动网站，但在现代桌面浏览器上也非常出色。
- en: 'There are two reasons why this plugin is my favorite: its performance is really
    good, especially on smartphones, and it also allows a desktop user to feel almost
    the same touch gestures experienced when navigating through the slider content.'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 这个插件成为我最喜欢的两个原因是：它的性能真的很好，特别是在智能手机上，而且它还可以让桌面用户几乎感受到在浏览器中导航时体验到的触摸手势。
- en: You can download this solution from [https://github.com/nolimits4web/Swiper/](https://github.com/nolimits4web/Swiper/).
    For more information about plugin options, visit [http://www.idangero.us/sliders/swiper/api.php](http://www.idangero.us/sliders/swiper/api.php).
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从 [https://github.com/nolimits4web/Swiper/](https://github.com/nolimits4web/Swiper/)
    下载此解决方案。有关插件选项的更多信息，请访问 [http://www.idangero.us/sliders/swiper/api.php](http://www.idangero.us/sliders/swiper/api.php)。
- en: How to do it
  id: totrans-134
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何实现
- en: 'So, we will start by including the JS and CSS files inside the `<head>` tag:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们将从在 `<head>` 标签中引入 JS 和 CSS 文件开始：
- en: '[PRE23]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Now, we will execute the Swiper script, informing the `container` and `pagination`
    classes:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将执行 Swiper 脚本，指定 `container` 和 `pagination` 类：
- en: '[PRE24]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Note that this CSS file only customizes the slide animation. Even so, we need
    to add the following code to customize the slide structure as we want, complementing
    the styles that come with Swiper:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，这个 CSS 文件只是定制了幻灯片动画。即便如此，我们需要添加以下代码来定制幻灯片结构，以满足我们的需求，补充来自 Swiper 的样式：
- en: '[PRE25]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'After that, the plugin supports the use of a simple HTML unordered list to
    craft our slideshow. Also, we need to define some class names for this structure
    in order to ensure the plugin performs:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，该插件支持使用简单的 HTML 无序列表来制作我们的幻灯片。此外，我们需要为该结构定义一些类名，以确保插件的正常运行：
- en: '[PRE26]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The `swiper-container` and `swiper-wrapper` classes are wrapped by all the slider
    structure. Also, the `swiper-slide` class defines the div as a slide item and
    the `pager` class specifies the div which will display the slide pagination.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '所有滑块结构都由 `swiper-container` 和 `swiper-wrapper` 类包裹。此外，`swiper-slide` 类定义 div
    作为幻灯片项，而 `pager` 类指定将显示幻灯片分页的 div。 '
- en: 'The visual adopted on the site demonstration provided by the plugin developers
    is beautiful; however, those styles are not inside `idangerous.swiper.css`. It
    still depends on our entire slide customization, as we will see in the following
    screenshot:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 插件开发者提供的网站演示采用的视觉效果很漂亮；但是，这些样式不包括在`idangerous.swiper.css`中。它仍然依赖于我们对整个幻灯片的自定义，接下来我们将在以下截图中看到：
- en: '![How to do it](img/3602OS_06_11.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![如何做](img/3602OS_06_11.jpg)'
- en: Featured options
  id: totrans-146
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 特色选项
- en: 'By analyzing the code, this plugin seems very clever and provides a fast rendering
    to the browser. Another important consideration is the constant update by the
    community, fixing major and minor mistakes. Its current differences from other
    plugins are:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 通过分析代码，该插件似乎非常聪明，并且可以快速地渲染到浏览器上。另一个重要的考虑是社区的不断更新，修复了主要和次要的错误。它与其他插件的当前差异是：
- en: Vertical/horizontal sliding
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 垂直/水平滑动
- en: Rich API
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 丰富的API
- en: Flexible configuration
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 灵活的配置
- en: Nested Swipers
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 嵌套的Swipers
- en: 3D flow
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3D流
- en: In the plugin Version 1.8.5, they introduced the 3D flow complement to the Swiper.
    It simply provides an amazing realistic 3D gallery with dynamic shadows, providing
    a big advantage compared to other slider plugins. Let's see how to implement it.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在插件版本1.8.5中，他们引入了3D流补充到Swiper中。它简单地提供了一个带动态阴影的惊人真实的3D画廊，相比其他幻灯片插件有很大的优势。让我们看看如何实现它。
- en: Using the 3D flow style on Swiper
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在Swiper上使用3D流样式
- en: 'Since it is a complement of Swiper, we need to include the same files of the
    previous example, starting by the CSS on `<head>`. Also, append these following
    new JS and CSS files referred to the 3D flow styles:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 由于它是Swiper的补充，我们需要包括与前面示例相同的文件，先从`<head>`中的CSS开始。然后，追加下面这些新的JS和CSS文件，用于引用3D流样式：
- en: '[PRE27]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Now, let''s change the code we have used to execute Swiper previously. The
    following one has many parameters, which come with it by default, and it will
    execute our 3D-flow script:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们改变我们之前用于执行Swiper的代码。以下代码具有许多参数，这些参数默认情况下附带它，并且它将执行我们的3D流脚本：
- en: '[PRE28]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Alright, look at the big difference this complement may bring to the slider
    visual. Just by using the CSS3 Transform, the Swiper plugin may provide us an
    automatic way to display a different slideshow effect:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，看看这个补充可能带给幻灯片视觉上的巨大差异。仅仅通过使用CSS3 Transform，Swiper插件就可以为我们提供一种自动显示不同幻灯片效果的方式：
- en: '![Using the 3D flow style on Swiper](img/3602OS_06_12.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![在Swiper上使用3D流样式](img/3602OS_06_12.jpg)'
- en: By visiting the site [http://www.idangero.us/sliders/swiper/plugins/3dflow.php](http://www.idangero.us/sliders/swiper/plugins/3dflow.php),
    we will find more examples and other usage options for 3D flow.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 通过访问网站 [http://www.idangero.us/sliders/swiper/plugins/3dflow.php](http://www.idangero.us/sliders/swiper/plugins/3dflow.php)，我们将找到更多示例和其他3D流的用法选项。
- en: Slicebox – a slice animation when using slide images
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Slicebox - 当使用幻灯片图像时进行切片动画
- en: The Slicebox is a jQuery plugin for responsive 3D image sliders with a graceful
    fallback (for older browsers that do not support the new CSS properties).
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: Slicebox是一个jQuery插件，用于具有优雅回退（用于不支持新CSS属性的旧浏览器）的响应式3D图像幻灯片。
- en: The visual effect of this plugin is really cool. Once the slide is changed,
    the image is sliced in three or five pieces of image and it is rotated, showing
    an incredible effect.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 该插件的视觉效果真的很酷。一旦幻灯片改变，图像就被切成三到五个部分，并且旋转，呈现出令人难以置信的效果。
- en: How to do it
  id: totrans-165
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何做
- en: 'So, after downloading the plugin from [https://github.com/codrops/Slicebox](https://github.com/codrops/Slicebox),
    we will start by including the CSS file inside the `<head>` tag:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在从[https://github.com/codrops/Slicebox](https://github.com/codrops/Slicebox)下载插件后，我们将首先在`<head>`标签内包含CSS文件：
- en: '[PRE29]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'However, there is a wrapping configuration missing in CSS that comes with the
    plugin and should be made by us:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在插件中有一个缺少的CSS包装配置，这需要我们自己来完成：
- en: '[PRE30]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'After that, we will make use of a simple HTML-unordered list to craft our slideshow,
    and define some required IDs for this structure, such as `sb-slider`, `shadow`,
    `nav-arrows`, and `nav-dots`, and name code sections for the plugin reading:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们将使用一个简单的HTML无序列表来制作我们的幻灯片，并为这个结构定义一些必需的ID，比如`sb-slider`，`shadow`，`nav-arrows`和`nav-dots`，以及插件用于阅读的命名代码部分：
- en: '[PRE31]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Also, there are some utility classes complementing the code such as `wrapper`
    (for slider wrapping) and `sb-description` (to display the content as the slider
    description).
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有一些辅助类来补充代码，比如`wrapper`（用于包装幻灯片）和`sb-description`（用于显示幻灯片描述）。
- en: 'At the bottom of DOM (before the `</body>` closing tag), include the jQuery
    and Slicebox libraries:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在DOM的底部（在`</body>`结束标签之前），包括jQuery和Slicebox库：
- en: '[PRE32]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: After that, we will execute the Slicebox script by inserting the next code.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们将通过插入下一行代码来执行Slicebox脚本。
- en: Tip
  id: totrans-176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: However, in my opinion, this is the major problem of this plugin because there
    are many lines of code exposed to us.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在我看来，这个插件的主要问题是有许多行的代码向我们暴露了。
- en: The following code is too extensive and avoiding typos, you will find the code
    to be downloaded from [http://www.packtpub.com/support](http://www.packtpub.com/support).
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码太庞大了，避免出现打字错误，你会发现可以从[http://www.packtpub.com/support](http://www.packtpub.com/support)下载该代码。
- en: 'This is a screenshot of the effect on mobile devices and desktops:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 这是移动设备和桌面的效果截图：
- en: '![How to do it](img/3602OS_06_13.jpg)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![如何做](img/3602OS_06_13.jpg)'
- en: Introducing touch gestures to user experience
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引入触摸手势到用户体验
- en: 'Touchscreen devices are ruling the mobile platform nowadays. Most of the smartphones
    and tablets have many elements using touch gestures and now it''s coming to our
    desktop development. In his article *Optimizing for Touch Across Devices*, *Luke
    Wroblewski* says:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 触摸屏设备如今统治着移动平台。大多数智能手机和平板电脑都有许多使用触摸手势的元素，现在这也逐渐应用到我们的桌面开发中。在他的文章*跨设备优化触摸*中，*Luke
    Wroblewski*说：
- en: '"So what does it mean to consider touch across all screen sizes? Two things:
    touch target sizes and placement of controls."'
  id: totrans-183
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “那么，考虑到所有屏幕尺寸的触摸意味着什么？两个东西：触摸目标尺寸和控件的放置。”
- en: '*Luke Wroblewski* highlights two of the most important points to consider with
    responsive touch design: touch target sizes and placement of controls:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '*Luke Wroblewski*强调了响应式触摸设计中要考虑的两个最重要的要点：触摸目标尺寸和控件的放置：'
- en: '**Touch target sizes**: They are relatively easy to implement and any navigation
    system that needs to work with touch needs to have menu options that can be comfortably
    used by people with imprecise fingers to prevent accidental taps and errors. Some
    articles mentioning the minimum measure of touchable area should be 44 px.'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**触摸目标尺寸**：它们相对容易实现，任何需要与触摸交互的导航系统都需要有菜单选项，可以被手指不精确的人舒适地使用，以防止意外触碰和错误。一些提到可触摸区域最小尺寸应为44像素的文章。'
- en: '**Placement of controls**: Controls need to be positioned in a way that aligns
    with how people hold and use touch-enabled devices. The bottom area of a smartphone
    screen is where we want to put an application''s most common and important interactions
    so that they may be reached quickly and easily, as shown in the following website
    example:![Introducing touch gestures to user experience](img/3602OS_06_14.jpg)'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**控件的放置**：控件需要以与人们拿着和使用触摸设备的方式相一致的方式放置。智能手机屏幕的底部区域是我们想要放置应用程序的最常见和重要的交互的地方，以便它们可以快速轻松地到达，如下网站示例所示：![引入触摸手势到用户体验](img/3602OS_06_14.jpg)'
- en: 'Similarly, we can look at tablet postures or at how people typically hold tablet
    computers. People hold them with their two hands along the sides, or just type
    over the screen on their lap:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 同样地，我们可以看一下平板电脑的姿势，或者人们通常是如何拿着平板电脑的。人们用两只手沿着两侧拿着它们，或者只是在大腿上敲击屏幕：
- en: '![Introducing touch gestures to user experience](img/3602OS_06_15.jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![引入触摸手势到用户体验](img/3602OS_06_15.jpg)'
- en: Implementing touch events with JavaScript plugins
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用JavaScript插件实现触摸事件
- en: There are some important JavaScript extensions and plugins that allow us to
    integrate touch gestures into our responsive website, improving the user interaction
    experience. Some examples are QuoJS and Hammer.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些重要的JavaScript扩展和插件，允许我们将触摸手势集成到我们的响应式网站中，改善用户交互体验。一些例子包括QuoJS和Hammer。
- en: QuoJS – simple touch interaction library
  id: totrans-191
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: QuoJS – 简单的触摸交互库
- en: It is a micro, modular, object-oriented, and concise JavaScript library that
    simplifies the HTML document traversing, event handling, and Ajax interactions
    for rapid mobile web development.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个微型、模块化、面向对象和简洁的JavaScript库，简化了HTML文档的遍历、事件处理和Ajax交互，用于快速的移动Web开发。
- en: Note that QuoJS does not require jQuery for its working; however, it is a simple
    and good plugin.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，QuoJS不需要jQuery来工作；然而，它是一个简单而好的插件。
- en: This lightweight plugin, with 5-6 KB when gzipped, allows us to have powerful
    writing, flexibility, and adapted code. You will find the downloadable files at
    [https://github.com/soyjavi/QuoJS](https://github.com/soyjavi/QuoJS) and further
    details about some extra options at [http://quojs.tapquo.com/](http://quojs.tapquo.com/).
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 这个轻量级插件，在gzip压缩后仅有5-6 KB，使我们能够拥有强大的写作、灵活性和适应性的代码。你可以在[https://github.com/soyjavi/QuoJS](https://github.com/soyjavi/QuoJS)找到可下载的文件，并在[http://quojs.tapquo.com/](http://quojs.tapquo.com/)找到有关一些额外选项的更多详细信息。
- en: 'QuoJS have these gestures to help us:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: QuoJS 有这些手势来帮助我们：
- en: Single tap
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单击
- en: Hold (650ms+)
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 长按（650ms+）
- en: Double tap
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 双击
- en: And different types of Swipe, Pinch, and Rotate are included in its code package
    too.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 其代码包中还包括了不同类型的滑动、捏和旋转。
- en: How to do it
  id: totrans-200
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 怎么做
- en: At the bottom of the DOM (before the `</body>` closing tag), include the QuoJS
    script; only then will we be able to execute the script by creating event listeners.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DOM 底部（在 `</body>` 结束标签之前），包含 QuoJS 脚本；只有这样，我们才能通过创建事件监听器执行脚本。
- en: 'In the following example, we will implement an action if users hold their finger
    over the element with the ID equal to the toolbox:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的例子中，如果用户将手指放在与工具箱 ID 相等的元素上，我们将实现一个动作。
- en: '[PRE33]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: QuoJS uses the `$$` symbol in the syntax, avoiding conflicts with the `$` jQuery
    symbol which we are probably using on websites.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: QuoJS 在语法中使用`$$`符号，避免与我们可能在网站上使用的`$`jQuery符号发生冲突。
- en: Hammer – a nice multitouch library
  id: totrans-205
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Hammer – 一个不错的多点触控库
- en: Hammer is a jQuery lightweight library for multitouch gestures with only 3 KB
    when gzipped.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: Hammer 是一个 jQuery 轻量级的多点触控手势库，压缩后只有 3 KB。
- en: 'Hammer supports these gestures:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: Hammer 支持这些手势：
- en: Tap
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轻触
- en: DoubleTap
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 双击
- en: Swipe
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 滑动
- en: Drag
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拖拽
- en: Pinch
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 捏
- en: Rotate
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 旋转
- en: Each gesture triggers useful events and event data that comes with the plugin.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 每个手势触发有用的事件和插件提供的事件数据。
- en: How to do it
  id: totrans-215
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 怎么做
- en: 'First of all, let''s download the library from [https://github.com/EightMedia/hammer.js](https://github.com/EightMedia/hammer.js).
    At the bottom of the DOM (before the `</body>` closing tag), include the Hammer
    script and then we will be able to execute the script by creating event listeners:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们从[https://github.com/EightMedia/hammer.js](https://github.com/EightMedia/hammer.js)下载库。在
    DOM 底部（在 `</body>` 结束标签之前），包含 Hammer 脚本，然后我们将能够通过创建事件监听器执行脚本：
- en: '[PRE34]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Tip
  id: totrans-218
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Sometimes the version that does not require jQuery seems faster, but it might
    not work in all browsers. To switch the versions, we just need to replace the
    `jquery.hammer.min.js` file with `hammer.min.js`.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，不需要 jQuery 的版本似乎更快，但在所有浏览器中可能不起作用。要切换版本，只需用`hammer.min.js`替换`jquery.hammer.min.js`文件。
- en: 'Let''s see an example:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个例子：
- en: '[PRE35]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: In this example, it captures the touch interaction and applies the `open-box`
    class on objects. However, there are many other touch events to work on and further
    details on its usage may be found at [https://github.com/EightMedia/hammer.js/wiki](https://github.com/EightMedia/hammer.js/wiki).
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，它捕捉了触摸交互，并在对象上应用了`open-box`类。然而，还有许多其他的触摸事件需要处理，更多关于其用法的细节可以在[https://github.com/EightMedia/hammer.js/wiki](https://github.com/EightMedia/hammer.js/wiki)找到。
- en: Exercise 6 – creating an image slider using the Swiper plugin
  id: totrans-223
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习 6 – 使用 Swiper 插件创建一个图片幻灯片
- en: 'Just to remind us, this is a screenshot of our initial design:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 只是为了提醒我们，这是我们最初设计的一个截图：
- en: '![Exercise 6 – creating an image slider using the Swiper plugin](img/3602OS_06_16.jpg)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![练习 6 – 使用 Swiper 插件创建一个图片幻灯片](img/3602OS_06_16.jpg)'
- en: Tip
  id: totrans-226
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: This image is just a suggestion. You can find any image to replace this one.
    The main focus here is the creation of a responsive image slider within a responsive
    label.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 这张图片只是一个建议。你可以找到任何图片来替换它。这里的重点是在一个响应式标签内创建一个响应式图片幻灯片。
- en: 'Now, just select one image per slide, and by using the Swiper solution, insert
    a slogan on each slider:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，只需选择每个幻灯片一张图片，并使用 Swiper 解决方案，在每个幻灯片上插入一个标语：
- en: Flexibility is everything
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 灵活性就是一切
- en: A few well-designed movements
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些设计良好的动作
- en: Muscle control develops the body uniformly
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 肌肉控制使身体均匀发展
- en: Physical fitness is the first requisite of happiness
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 身体健康是幸福的首要条件
- en: As we saw in [Chapter 4](ch04.html "Chapter 4. Designing Responsive Text"),
    *Designing Responsive Text*, the use of `@font-face` is highly recommended for
    responsive websites. So, complementing this exercise, use the free font Titan
    One from Google Fonts for customizing the slogans.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在[第 4 章](ch04.html "Chapter 4. Designing Responsive Text")中所看到的，*设计响应式文本*，高度建议在响应式网站中使用`@font-face`。因此，为了补充这个练习，使用
    Google Fonts 提供的免费字体 Titan One 进行标语的自定义。
- en: Tip
  id: totrans-234
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Remember to use the FontSquirrel kit if necessary.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 记得在必要时使用 FontSquirrel 工具包。
- en: Summary
  id: totrans-236
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have learned about slider plugins prepared for responsive
    sites such as the Elastislide, FlexSlider, ResponsiveSlides, Swiper, and Slicebox.
    We have also learned how to build them, their advantages, and effect characteristics.
    Although many of these slider plugins have already implemented gesture touches,
    as we saw in this chapter, we have also shown you how to incorporate touch functions
    by using the QuoJS and Hammer libraries.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经学习了为响应式网站准备的滑块插件，如Elastislide、FlexSlider、ResponsiveSlides、Swiper和Slicebox。我们还学习了如何构建它们，它们的优点和效果特性。尽管许多这些滑块插件已经实现了手势触摸，正如我们在本章中所见，我们还向您展示了如何使用QuoJS和Hammer库来整合触摸功能。
- en: In the next chapter, we will see how to deal with tables in small width devices.
    We will see how to implement each technique that has often been used, such as
    horizontal scrolling, reducing visible columns, and converting into stack table.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看到如何在小宽度设备上处理表格。我们将了解如何实现经常使用的每种技术，例如水平滚动、减少可见列和转换为堆叠表格。
