["```js\nobject getInitialState()\n```", "```js\nvar FormComponent = React.createClass({\n  getInitialState:function(){\n    return {\n      name: 'Doel',\n      id: 1\n    };\n    },\n  render : function() {\n    return <div>\n      My name is {this.state.name}\n      and my id is {this.state.id}.\n    </div>;\n  }\n});\nReact.renderComponent(\n  <FormComponent />,\n  document.body\n);\n```", "```js\nvar InterfaceComponent = React.createClass({\n  getInitialState : function() {\n    return {\n      name : \"doel\"\n    };\n  },\n  handleClick : function() {\n    this.setState({\n      name : \"doel sengupta\"\n    });\n  },\n  render : function() {\n    return <div onClick={this.handleClick}>\n      hello {this.state.name}, your name is successfully updated!\n    </div>;\n  }\n});\nReact.renderComponent(\n  <InterfaceComponent />,\n  document.body\n);\n```", "```js\nindex.html:\n```", "```js\n<!DOCTYPE html>\n<html>\n<head>\n<script src=\"img/react.min.js\"></script>\n<script src=\"img/JSXTransformer.js\"></script>\n    <script src=\"img/jquery.min.js\"></script>\n  <script src=\"img/react-dom.js\"></script>\n  <meta charset=\"utf-8\">\n  <title>My React App</title>\n</head>\n<body>\n  <div id=\"myApp\"></div>\n    <script type=\"text/jsx\", src=\"img/replace_state.js\"></script>\n</body>\n</html>\n```", "```js\n//calling replaceSet() method \nvar FormComponent = React.createClass({\n  getInitialState : function() {\n    return {\n      first_name : \"michael\",\n      last_name : \"jackson\"\n    };\n  },\n  handleClick : function() {\n    this.replaceState({\n      last_name : \"jordan\"\n    });\n  },\n  render : function() {\n    return <div onClick={this.handleClick}>\n      Hi {this.first_name + \" \" + this.state.last_name }\n    </div>;\n  }\n});\n```", "```js\nindex.html:\n```", "```js\n<!DOCTYPE html>\n<html>\n<head>\n<script src=\"img/react.min.js\"></script>\n<script src=\"img/JSXTransformer.js\"></script>\n    <script src=\"img/jquery.min.js\"></script>\n  <script src=\"img/react-dom.js\"></script>\n  <meta charset=\"utf-8\">\n  <title>My React App</title>\n</head>\n<body>\n  <div id=\"myApp\"></div>\n    <script type=\"text/jsx\", src=\"img/react_state.js\"></script>\n</body>\n</html>\n```", "```js\nreact_state.js file:\n```", "```js\n/* declaration of React component1 with initial values and the changed value to be set in  the update function.\n*/\nvar Component1 =\nReact.createClass({\n  getInitialState:function(){\n    return {\n      name: 'hi',\n      id: 1\n    };\n  },\n  update: function(e){\n    this.setState({name: e.target.value});\n  },\n  render:function(){\n    return (\n      <div>\n/* The render method returns the Component2 with props name and the value to be called on update method*/\n < Component2 name={this.state.name} update={this.update} />\n      </div>\n      );\n\n  }\n});\n/* Declaration of Component2 which calls the update function when onChange method is called. */\nvar Component2 = React.createClass({\n  render:function(){\n    return (\n      <div>\n <input type=\"text\" onChange={this.props.update} />\n <br />\n <b>{this.props.name}</b>\n      </div>\n      );\n\n  }\n});\nReactDOM.render(< Component1 name=\"this is the text property\"  />, document.getElementById('myApp'));\n```", "```js\n/* React component EventBox is decalred which shows the different functions it fires in response of diffenrent Synthetic events.*/\nvar EventBox = React.createClass({\n\n  getInitialState:function(){\n    return {e: 'On initial page load'}\n  },\n\n  update: function(e){\n    this.setState({e: e.type})\n  },\n\n  render:function(){\n    return (\n      <div>\n        <textarea\n/*Following are the various events (on the left hand side ). In response of all these events then the update function is called. */\n onKeyDown={this.update}\n onKeyPress={this.update}\n onCopy={this.update}\n onFocus={this.update}\n onBlur={this.update}\n onDoubleClick={this.update}\n/>\n        <h1>{this.state.e}</h1>\n      </div>\n    );});\n```", "```js\nReactDOM.render(<EventBox />, document.getElementById('myTextarea'));\n```", "```js\nindex.js file:\n```", "```js\n/* React component MyBrowserDimension, with nativeEvent attribute which is needed for manipulating the underlying browser events(window.innerWidth, window.innerHeight). */\nvar MyBrowserDimension = React.createClass({\ngetInitialState:function(){\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n  },\n\n  update: function(){\n    this.setState({\n     height: window.innerHeight,\n     width: window.innerWidth\n    });\n  },\n\n//componentDidMount is called after the component is mounted and //has a DOM presentation. This is often a place where we will //attach generic DOM events.\n\n  componentDidMount:function(){\n    window.addEventListener('resize', this.update );\n    window.addEventListener('resize', this.update );\n  },\n\n  componentWillUnmount:function(){\n    window.removeEventListener('resize', this.update );\n    window.removeEventListener('resize', this.update );\n  },\n\n  render:function(){\n    return <div>\n      <p>My Browser Window current Inner Width is: {this.state.width} pixels</p>\n      <p>My Browser Window current height is {this.state.height} pixels</p>\n    </div>;\n  }\n});\n\nReactDOM.render(<MyBrowserDimension />, document.getElementById('myApp'));\n```", "```js\n<!DOCTYPE html>\n<html>\n<head>\n<script src=\"img/react.js\"></script>\n<script src=\"img/react-dom.js\"></script>\n<script src=\"img/JSXTransformer.js\"></script>\n  <meta charset=\"utf-8\">\n  <title>React DOM attributes</title>\n</head>\n<body>\n<div id=\"myApp\"></div>\n    <script type=\"text/jsx\", src=\"img/index.js\"></script>\n</html>\n```", "```js\n<html>\n  <head>\n    <title>Learning React State</title>\n    <script src=\"img/react-0.13.3.js\"></script>\n    <script src=\"img/JSXTransformer-0.13.3.js\"></script>\n  </head>\n  <body>\n    <h1>Facebook User's list of likes</h1>\n    <div id=\"user\"></div>\n    <div id=\"main\"></div>\n    <a onClick='logout()' href='#'>Logout</a>\n    <script>\n      window.fbAsyncInit = function() {\n        FB.init({\n          appId      : '1512084142440038',\n          xfbml      : true,\n          version    : 'v2.2'\n        });\n\n        checkLoginStatusAndLoadUserLikes();\n      };\n\n      (function(d, s, id){\n         var js, fjs = d.getElementsByTagName(s)[0];\n         if (d.getElementById(id)) {return;}\n         js = d.createElement(s); js.id = id;\n         js.src = \"//connect.facebook.net/en_US/sdk/debug.js\";\n         fjs.parentNode.insertBefore(js, fjs);\n       }(document, 'script', 'facebook-jssdk'));\n    </script>\n\n    <script type=\"text/jsx\" src=\"img/index.js\"></script>\n  </body>\n</html>\n```", "```js\n// The following code block explains in order to login to user's Facebook //account and call the function internally( loginAndLoadUserLikes) if //successfully connected.\nfunction checkLoginStatusAndLoadUserLikes() {\n  FB.getLoginStatus(function(response) {\n    if (response.status === 'connected') {\n      loadUserAndLikes();\n    } else {\n      loginAndLoadUserLikes();\n    }\n  });\n}\n\nfunction loginAndLoadUserLikes() {\n  FB.login(function(response) {\n    loadUserAndLikes();\n  }, {scope: 'user_likes'});\n}\n\n//Once logged in, this method should load the details of the specific user.\nvar UserDetails = React.createClass({\n  render: function () {\n    return (\n      <section id=\"user-details\">\n        <a href={this.props.userDetails.link} target=\"__blank\">\n          {this.props.userDetails.name}\n        </a>\n        {' | '}\n        <a href=\"#\" onClick={this.handleLogout}>Logout</a>\n      </section>\n    )\n  },\n\n//Specified user should be able to logout from the respective account  \nhandleLogout: function () {\n    FB.logout(function () {\n      alert(\"You're logged out, refresh the page in order to login again.\");\n    });\n  }\n});\n\n//Once logged in, this method should load the likes pages of the specific user.\nfunction loadUserAndLikes () {\n  FB.api('/me', function (userResponse) {\n    React.render(<UserDetails userDetails={userResponse} />, document.getElementById('user'));\n\n    var fields = { fields: 'category,name,picture.type(normal)' };\n    FB.api('/me/likes', fields, function (likesResponse) {\n      React.render(<UserLikesList list={likesResponse.data} />, document.getElementById('main'));\n    });\n  });\n}\n\n//Once logged in, this method should list the liked pages of the specific user.\nvar UserLikesList = React.createClass({\n  render: function() {\n    var items = this.props.list.map(function (likeObject) {\n      return <UserLikeItem data={likeObject} />;\n    });\n\n    return (\n      <ul id=\"user-likes-list\">\n        {items}\n      </ul>\n    );\n  }\n});\nvar UserLikeItem = React.createClass({\n getInitialState: function() {\n return {data_name: this.props.data.name};\n },\n handleClick: function(){\n this.setState({\n data_name: 'I liked it'})\n },\n\n render: function() {\n var props_data = this.props.data;\n\n return (\n <div onClick={this.handleClick}>\n <img src={props_data.picture.data.url} title={props_data.name} />\n <h1> {this.state.data_name}  <small>{props_data.category}</small></h1>\n </div>\n    );\n  }\n});\n```"]