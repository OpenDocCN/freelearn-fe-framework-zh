- en: Icons - Enhance Icons to Match Your Look and Feel
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, you''ll learn about the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Coloring icons
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scaling icons
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dynamically loading icons
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Themed icons
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing more icons
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Icons play a big part in any Material-UI application. Even if you don't set
    out to explicitly use them, icons are used by many components by default. If a
    Material-UI component doesn't use icons by default, you can often find direct
    support for integrating Material-UI icons. Icons play an important role in the
    usability of your application—they provide a means to quickly scan the screen
    for meaning, instead of having to parse text all of the time.
  prefs: []
  type: TYPE_NORMAL
- en: Coloring icons
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Material-UI icon components accept a `color` property that takes a named theme
    color and applies it to the icon.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This example uses a Storybook control to change the `color` property of the
    icons that are rendered:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2dbc6969-67b8-4938-ba39-5ea20f569ce2.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Here''s some code that renders several icons that use the selected `color`
    value:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The `color` property defaults to `inherit`, which means that icons will be
    the same color as their parent components. Let''s walk through the different color
    values and see what these icons from the example look like:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Inherit  | The `inherit` color value will use the color value from the parent
    component style: | ![](img/5efdbea7-8b20-4921-aa2d-d7f0362fa368.png) |'
  prefs: []
  type: TYPE_TB
- en: '| Primary | The `primary` color applies the `palette.primary.``main` theme
    color to the icon: | ![](img/7a1b4082-6e03-48ea-83b8-18fb7244463e.png) |'
  prefs: []
  type: TYPE_TB
- en: '| Secondary | The `secondary` color applies the `palette.secondary.``main` theme
    color to the icon: | ![](img/843f25f6-006f-4b79-ba6b-38130a1abf0a.png) |'
  prefs: []
  type: TYPE_TB
- en: '| Action | The `action` color applies the `palette.action.``active` theme color
    to the icon: | ![](img/07c980aa-150f-416f-a6b4-dd1572ef831c.png) |'
  prefs: []
  type: TYPE_TB
- en: '| Error | The `error` color applies the `palette.error.``main` theme color
    to the icon: | ![](img/ea0d5a91-73aa-4b8e-a2db-fe22ff945098.png) |'
  prefs: []
  type: TYPE_TB
- en: '| Disabled | The `disabled` color applies the `palette.action.``disabled` theme
    color to the icon: | ![](img/1ab30baf-4b2e-4192-a927-e4c661489bb0.png) |'
  prefs: []
  type: TYPE_TB
- en: See also
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Icon demos: [https://material-ui.com/style/icons/](https://material-ui.com/style/icons/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Icon API documentation: [https://material-ui.com/api/icon/](https://material-ui.com/api/icon/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scaling icons
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The `fontSize` property of the Material-UI icon components accepts a string
    value that represents a predetermined icon size. The reason the property is called
    `fontSize` instead of `size` is because the `fontSize` CSS property is what determines
    the size of an icon. The default is `24px`.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This example uses a Storybook control to change the `fontSize` property of
    the icons that are rendered:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/160790bb-920a-4b05-90f3-1f80999b2da3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Here''s some code that renders several icons that use the selected `fontSize`
    value:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The default value of `fontSize` is `default`. Let's walk through the different
    size options of Material-UI icons and see how they look.
  prefs: []
  type: TYPE_NORMAL
- en: Default
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The `default` value sets the icon size to 24 pixels:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6bb21f8e-f169-4db2-9220-a540da3fb172.png)'
  prefs: []
  type: TYPE_IMG
- en: Inherit
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The `inherit` value sets the icon to whatever `fontSize` its parent component
    is set to. In this example, the icons inherit 16 pixels as the `fontSize`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7e957317-f600-42fe-8262-e183c11673d1.png)'
  prefs: []
  type: TYPE_IMG
- en: Small
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The `small` value sets the icon size to 20 pixels:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f96316b8-74fd-4213-94e6-40247a72a9ba.png)'
  prefs: []
  type: TYPE_IMG
- en: Large
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The `large` value sets the icon size to 36 pixels:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2d515d2a-687d-4ebe-8d41-965f390cf448.png)'
  prefs: []
  type: TYPE_IMG
- en: See also
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Icon demos: [https://material-ui.com/style/icons/](https://material-ui.com/style/icons/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Icon API documentation: [https://material-ui.com/api/icon/](https://material-ui.com/api/icon/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dynamically loading icons
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: On screens that only have a handful of icons on them, you can directly import
    them as components without any issues. This can be challenging if you have a screen
    with many icons or if your application as a whole uses lots of icons (the latter
    case increases the bundle size). The answer, in both cases, is to load Material-UI
    icons lazily/dynamically.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can leverage the `lazy()` higher-order component from React. Also from React,
    the `Suspense` component provides placeholders in your UI while your `lazy` components
    are fetched and rendered. This overall approach is how code-splitting is handled
    in React—Material-UI icons happen to be a good use case.
  prefs: []
  type: TYPE_NORMAL
- en: 'This example uses a Storybook control to select the icon category to load:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0609a5a4-b72f-4c7a-a840-cafa45a0eae4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Here''s the code to create `lazy icon` components that load dynamically:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Here''s what you''ll see when the screen first loads:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/54e7ed6b-4118-4d49-94a7-6cd39d7a2a89.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Here''s what you''ll see if you select the `Av` category:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/423f4f54-b34a-4916-8f56-85fbea9f22cf.png)'
  prefs: []
  type: TYPE_IMG
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The `lazy()` function takes a function that returns a call to `import()`. It
    returns a `lazy` component:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'This code doesn''t actually `import` the `ThreeDRotation` icon. It builds a
    new component that imports the icon when it''s rendered. For example, the following
    will cause the icon to be imported:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'You can actually see this for yourself if you look at the Network tab in `dev`
    tools while running this example. The `Action` category is selected by default,
    so you can see the network requests to load the `lazy` components that are being
    rendered:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3682e251-3def-4d59-a6b4-0e6ba19a55c9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Then, if you change the selected category to `Communication`, you''ll see several
    more network requests to load the lazy icons in this category that are now being
    rendered:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f46f068f-66b7-4d21-b127-f6cce5c0e6cc.png)'
  prefs: []
  type: TYPE_IMG
- en: See also
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Icon demos: [https://material-ui.com/style/icons/](https://material-ui.com/style/icons/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Icon API documentation: [https://material-ui.com/api/icon/](https://material-ui.com/api/icon/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Themed icons
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Material-UI icons have themes that can be applied to them. They are not to be
    confused with Material-UI themes that apply styles to every Material-UI component
    that you use; icon themes are specifically for icons. To use a themed icon, you
    have to import a different version of it.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To help explore the different icon themes, this example uses a Storybook control
    that allows you to change the icon theme:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/890321b5-b1b5-4832-b5ba-3148eb332a32.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Here''s the source:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If you take a look at the `themes` object, you can see that each theme has
    the same icons in it, but their `import` paths are slightly different. For example,
    the `Attachment` icon is imported by the `Filled` theme, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'In the `Rounded` theme, here''s how the same icon is imported:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: You append the theme name to the icon name to change the theme of the icon.
    The same pattern follows for each of them.
  prefs: []
  type: TYPE_NORMAL
- en: Not every icon changes when the theme changes. It really just depends on the
    icon shape and whether it makes sense to, with the given theme. The `import` will
    still work, but there isn't always a visual change.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s explore them now:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Filled | The `Filled` theme is the default. Here''s what it looks like when
    applied to the example: | ![](img/dd0cf33b-0a77-4557-a4b0-7d991154480c.png) |'
  prefs: []
  type: TYPE_TB
- en: '| Outlined | Take a look at the preceding `Filled` theme—notice that some icons
    are actually outlined by default.Here''s what the `Outlined` theme looks like
    when applied to the example: | ![](img/c624b650-d85b-41a1-9856-9a39d80692a3.png)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Rounded | Here''s what the `Rounded` theme looks like when applied to the
    example: | ![](img/74efca1a-823a-4d8d-83ca-6d8dedffddd3.png) |'
  prefs: []
  type: TYPE_TB
- en: '| Two tone | Here''s what the `TwoTone` theme looks like when applied to the
    example: | ![](img/401295a4-a80f-4716-b6a8-fc66d88ae00b.png) |'
  prefs: []
  type: TYPE_TB
- en: '| Sharp | Here''s what the `Sharp` theme looks like when applied to the example:
    | ![](img/192a4a87-64d0-4103-b734-592835e0f1f3.png) |'
  prefs: []
  type: TYPE_TB
- en: See also
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Icon demos: [https://material-ui.com/style/icons/](https://material-ui.com/style/icons/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Icon API documentation: [https://material-ui.com/api/icon/](https://material-ui.com/api/icon/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing more icons
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The `mdi-material-ui` package provides a staggering number of icons, available
    for you to use in your Material-UI applications in the same way as you would use
    the built-in icons.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The first step is to install the package and make it available in your project:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Now you''re ready to `import` icons from this package and use them:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Here''s what the icons look like when you load the screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e0aaba0c-a15e-40fc-aa3c-c3b869882d12.png)'
  prefs: []
  type: TYPE_IMG
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The icons from `mdi-material-design` are just like the icons from `@material-ui/icons`.
    They're imported and rendered as React components. You find the name of the icon
    that you need by looking it up on [https://materialdesignicons.com/](https://materialdesignicons.com/).
    Anywhere you can use the official Material-UI icons, such as in buttons, you can
    also use icons from `mdi-material-ui`.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Material Design icons package: [https://materialdesignicons.com/](https://materialdesignicons.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Icon demos: [https://material-ui.com/style/icons/](https://material-ui.com/style/icons/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Icon API documentation: [https://material-ui.com/api/icon/](https://material-ui.com/api/icon/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
