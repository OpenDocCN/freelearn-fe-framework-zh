["```js\n    npm run serve ng-cypress-starter \n    ```", "```js\n    cd start && npm install --save-dev @nx/cypress \n    ```", "```js\n    cd start && nx g @nx/cypress:cypress-project ng-cypress-starter-e2e --project=ng-cypress-starter --directory apps/chapter11/ng-cypress-starter-e2e \n    ```", "```js\n    node scripts/rename-app.js chapter11 ng-cypress-starter-e2e start \n    ```", "```js\n    npm run e2e ng-cypress-starter \n    ```", "```js\n    export const getHeaderTitle = () =>\n      cy.get('.toolbar__title'); \n    ```", "```js\n    import { getHeaderTitle } from '../support/app.po';\n\n    describe('ng-cypress-starter', () => {\n      beforeEach(() => cy.visit('/'));\n\n      it('should display the correct header title', () => {\n        getHeaderTitle().should('contain.text','Your first\n    Cypress test in Angular');\n      });\n    }); \n    ```", "```js\nimport { defineConfig } from 'cypress'\nexport default defineConfig({\n  e2e: {\n    baseUrl: 'http://localhost:4200',\n  },\n}) \n```", "```js\n    npm run e2e ng-cy-element-visibility \n    ```", "```js\n    export const getHeaderTitle = () =>\n     cy.get('.toolbar__title');\n    **export****const****getToggleCounterButton** **= () =>**\n    **cy.****get****(****'[data-test-id=\"toggleCounterBtn\"]'****);**\n    **export****const****getCounterCard** **= () => cy.****get****(**\n    **'[data-test-id=\"counterCard\"]'****);**\n    **export****const****getCounterActions** **= () =>** **getCounterCard****()**\n    **.****find****(****'button'****);** \n    ```", "```js\n    ...\n    <main class=\"content\" role=\"main\">\n    <div class=\"...\">\n    <button **data-test-id****=****\"toggleCounterBtn\"**\n     (click)=\"toggleCounterVisibility()\">Toggle Counter\n            Visibility</button>\n    <app-counter **data-test-id****=****\"counterCard\"**\n    *ngIf=\"visibility ===\n      visibilityOptions.Visible\"></app-counter>\n    </div>\n    </main> \n    ```", "```js\n    import { **getCounterCard**, getHeaderTitle, **getToggleCounterButton** } from '../support/app.po';\n    describe('ng-cypress-starter', () => {\n      beforeEach(() => cy.visit('/'));\n      it('should display the correct header title', () => ...});\n      **it****(****'should toggle visibility of counter card when the**\n    **toggle button is clicked'****,** **() =>** **{**\n    **getCounterCard****().****should****(****'****exist'****);**\n    **getToggleCounterButton****().****click****();**\n    **getCounterCard****().****should****(****'not.exist'****);**\n    **getToggleCounterButton****().****click****();**\n    **getCounterCard****().****should****(****'exist'****);**\n      }**);**\n    }); \n    ```", "```js\n    import { **getCounterActions**, getCounterCard, getHeaderTitle, getToggleCounterButton } from '../support/app.po';\n    describe('ng-cypress-starter', () => {\n      ...\n      **it****(****'should show the action buttons when the counter card is hovered'****,**\n    **() =>** **{** \n    **getCounterCard****().****trigger****(****'mouseover'****);** \n    **getCounterActions****().****should****(****'have.length'****,** **3****);** \n    **getCounterActions****().****contains****(****'Increment'****)**\n    **.****should****(****'be.visible'****);** \n    **getCounterActions****().****contains****(****'Decrement'****)**\n    **.****should****(****'be.visible'****);** \n    **getCounterActions****().****contains****(****'Reset'****)**\n    **.****should****(****'be.visible'****);** \n    **});**\n    }); \n    ```", "```js\n    cd start && npm install --save-dev cypress-real-events \n    ```", "```js\n    ...\n    // Import commands.js using ES2015 syntax:\n    **/// <reference types=\"cypress-real-events\" />**\n    import './commands';\n    **import****'cypress-real-events/support'****;**\n    ... \n    ```", "```js\n    ...\n    describe('ng-cypress-starter', () => {\n      ...\n\n      it('should show the action buttons when the counter card is hovered', () =>\n        {\n        getCounterCard()**.****realHover****();**\n        ...\n      })\n    }); \n    ```", "```js\n    npm run e2e ng-cy-forms \n    ```", "```js\n    **export****const****getHeaderTitle** **= () => cy.****get****(****'.toolbar__title'****);**\n    **export****const****getVersionInput** **= () => cy.****get****(****'[data-test-id=\"versionInput\"]'****);**\n    **export****const****getRequiredError** **= () => cy.****get****(****'[data-test-id=\"versionReqErr\"]'****);**\n    **export****const****getMismatchError** **= () => cy.****get****(****'[data-test-id=\"versionMismatchErr\"]'****);**\n    **export****const****getSubmitButton** **= () => cy.****get****(****'[data-test-id=\"submitVersionBtn\"]'****);**\n    **export****const****getLogsListItems** **= () => cy.****get****(****'[data-test-id=\"logsList\"] .logs__item'****);**\n    **export****const****getLatestVersion** **= () => cy.****get****(****'[data-test-id=\"latestVersion\"]'****);** \n    ```", "```js\n    import { getHeaderTitle, **getSubmitButton, getVersionInput** } from '../support/app.po';\n    describe('ng-cy-forms', () => {\n      beforeEach(() => cy.visit('/'));\n      it('should display the correct header title', () => {...});\n      **it****(****'should have the submit button disabled on invalid input'****,** **() =>** **{**\n    **getVersionInput****().****type****(****'invalid input'****);**\n    **getSubmitButton****().****should****(****'be.disabled'****);**\n    **getVersionInput****().****clear****();**\n    **getSubmitButton****().****should****(****'be.disabled'****);**\n    **getVersionInput****().****type****(****'0.0.1'****);**\n    **getSubmitButton****().****should****(****'be.enabled'****);**\n    **});**\n    }); \n    ```", "```js\n    ...\n    import { getHeaderTitle, getLatestVersion, **getLogsListItems**, getSubmitButton, getVersionInput } from '../support/app.po';\n\n    describe('ng-cy-forms', () => {\n      ...\n      **it****(****'should add a new version log on valid version submission'****,** **() =>** **{**\n    **getLogsListItems****().****should****(****'have.length'****,** **1****);**\n    **getVersionInput****().****type****(****'0.0.1'****);**\n    **getSubmitButton****().****click****();**\n    **getLogsListItems****().****should****(****'have.length'****,** **2****);**\n    **getLogsListItems****().****eq****(****1****).****then****(****el** **=>** **{**\n    **expect****(**\n    **el.****text****().****trim****()**\n    **).****to****.****eq****(****'version changed to 0.0.1'****)**\n    **});**\n    **});**\n    }); \n    ```", "```js\n    ...\n    **describe****(****'ng-cy-forms'****,** **() =>** **{**\n    **...**\n    **it****(****'should display the latest version'****,** **() =>** **{**\n    **getLatestVersion****().****should****(****'have.text'****,** **'Latest Version = 0.0.0'****);**\n    **getVersionInput****().****type****(****'0.0.1'****);**\n    **getSubmitButton****().****click****();**\n    **getLatestVersion****().****should****(****'have.text'****,** **'Latest Version = 0.0.1'****);**\n    **});**\n    **});** \n    ```", "```js\n    import { getHeaderTitle, getLatestVersion, getLogsListItems, **getRequiredError**, getSubmitButton, getVersionInput } from '../support/app.po';\n\n    describe('ng-cy-forms', () => {\n      ...\n      **it****(****'should show the version required error when the input ** **gets clered after typing something'****, () => {**\n    **getVersionInput****().****type****(****'0.0.1'****);**\n    **getVersionInput****().****clear****();**\n    **getRequiredError****().****should****(**'exist'**);**\n    **getRequiredError****().****should****(**'be.visible'**);**\n    **getRequiredError****().****then****(el => {**\n    **expect****(**\n    **el.****text****().****trim****()**\n    **).to.****eq****(**'Version number is required'**)**\n    **});**\n    **});**\n    }); \n    ```", "```js\n    ...\n    import { getHeaderTitle, getLatestVersion, getLogsListItems, **getMismatchError**, getRequiredError, getSubmitButton, getVersionInput } from '../support/app.po';\n    describe('ng-cy-forms', () => {\n      ...\n      **it****(****'should show the invalid input error when the ** **version input is invalid'****,** **() =>** **{**\n    **getVersionInput****().****type****(****'abc123'****);**\n    **getMismatchError****().****should****(****'exist'****);**\n    **getMismatchError****().****should****(****'be.visible'****);**\n    **getMismatchError****().****then****(****el** **=>** **{**\n    **expect****(**\n    **el.****text****().****trim****()**\n    **).****to****.****eq****(****'Version number does not match the pattern (x.x.x)'****)**\n    **});**\n    **});**\n    }); \n    ```", "```js\ngetSubmitButton().should('be.disabled'); \n```", "```js\ngetLogsListItems().eq(1).then(el => {\n  expect(\n     el.text().trim()\n  ).to.eq('version changed to 0.0.1')\n}); \n```", "```js\n    npm run e2e ng-cy-http-requests \n    ```", "```js\n    export const getUsersCards = () => {\n      return cy.get('app-users ul li');\n    }\n\n    export const getSearchInput = () => {\n      return cy.get('[data-test-id=\"searchUsersInput\"]');\n    } \n    ```", "```js\n    import { getUsersCards } from '../support/users.po';\n    describe('ng-cy-http-requests > users', () => {\n      beforeEach(() => cy.visit('/users'));\n      it('should get the users list from the server and display', () => {\n        getUsersCards().should('have.length', 10);\n      });\n    }); \n    ```", "```js\n    import { **getSearchInput**, getUsersCards } from '../support/users.po';\n\n    describe('ng-cy-http-requests > users', () => { \n      ...\n      **it****(****'****should get the users list on searching'****,** **() =>** **{**\n    **getSearchInput****().****type****(****'rube'****);**\n    **getUsersCards****().****should****(****'have.length'****,** **1****);**\n    **getUsersCards****().****find****(****'h4'****).****should****(**\n    **el** **=>** **{**\n    **expect****(**\n    **el.****text****().****trim****()**\n    **).****to****.****eq****(**\n    **'Ruben Wheeler'**\n    **)**\n    **}**\n    **);**\n    **});**\n    }); \n    ```", "```js\n    …\n    **import** **{** **EMPTY****,** **Observable****, delay, map, mergeMap,** **of** **}** **from****'rxjs'****;**\n    @Injectable({\n      providedIn: 'root'\n    })\n    export class UserService {\n      http = inject(HttpClient);\n      getAll(): Observable<User[]> {\n        return **of****(****EMPTY****)**\n    **.****pipe****(**\n    **delay****(****5000****),**\n    **mergeMap****(****() =>** **{**\n    **return****this****.****http****.****get****<****User****[]>(**\n    **'/assets/users.json'****)**\n    **})**\n    **);**\n      }\n      ...} \n    ```", "```js\n    ...\n    describe('ng-cy-http-requests > users', () => {\n      **beforeEach****(****() =>** **{**\n    **cy.****intercept****(****'/assets/users.json'****).****as****(****'searchUsers'****);**\n    **cy.****visit****(****'/users'****);**\n    **});**\n      ...\n    }); \n    ```", "```js\n    ...\n    describe('ng-cy-http-requests > users', () => {\n      ...\n      it('should get the users list from the server and display', () => {\n        **cy.****wait****(****'@searchUsers'****, {**\n    **timeout****:** **10000**\n    **});**\n    getUsersCards().should('have.length', 10);\n      });\n      it('should get the users list on searching', () => {\n        getSearchInput().type('rube');\n        **cy.****wait****(****'@searchUsers'****, {**\n    **timeout****:** **10000**\n    **});**\n    getUsersCards().should('have.length', 1);\n        getUsersCards().find('h4').should(...);\n      });\n    }); \n    ```", "```js\n    npm run e2e ng-cy-bun-pack \n    ```", "```js\n    ...\n    describe('Users List Page', () => {\n      ...\n      **it****(****'should show the no results found message on search'****,** **() =>** **{**\n    **const** **{ $ } =** **Cypress****;**\n    **cy.****wait****(****'@searchUsers'****);**\n    **const** **searchInput = $(****'[data-test- id=\"searchUsersInput\"]'****);**\n    **console****.****log****(searchInput);**\n    **})**\n    }); \n    ```", "```js\n    it('should show the no results found message on search', () => {\n        const { $ } = Cypress;\n        cy.wait('@searchUsers');\n        const searchInput = $('[data-test-id=\"searchUsersInput\"]');\n        **cy.****wrap****(searchInput).****type****(****'abc123'****);**\n    }); \n    ```", "```js\n    ...\n    export const getNoResultsMessage = () => {\n      return cy.get('[data-test-id=\"noResultsFoundMessage\"]');\n    } \n    ```", "```js\n    it('should show the no results found message on search', () => {\n        const { $ } = Cypress;\n        cy.wait('@searchUsers');\n        const searchInput = $('[data-test-id=\"searchUsersInput\"]');\n        cy.wrap(searchInput).type('abc123');\n        getNoResultsMessage().then((el) => {\n          console.log(el);\n        });\n      }); \n    ```", "```js\n    it('should show the no results found message on search', () => {\n        const { $ } = Cypress;\n        cy.wait('@searchUsers');\n        const searchInput = $('[data-test-\n     id=\"searchUsersInput\"]');\n        cy.wrap(searchInput).type('abc123');\n        getNoResultsMessage().then((el) => {\n          **expect****(el).****to****.****exist****;**\n    **expect****(el.****text****().****trim****()).****to****.****eq****(****'Nothing returned for ** **the following search'****);**\n        });\n      }); \n    ```", "```js\n    ...\n    describe('Users List Page', () => {\n      ...\n      **it****(****'should show the dob on each user in the correct format'****,** **() =>** **{**\n    **const** **{ $, _ } =** **Cypress****;**\n    **cy.****wait****(****'@searchUsers'****);**\n    **getUsersCards****().****then****(****(****cards****) =>** **{**\n    **_.****forEach****(cards,** **(****card****) =>** **{**\n    **const** **cardItem = $(card);**\n    **const** **dobText = cardItem.****find****(****'.dob'****).****text****();**\n    **const** **dob = dobText.****split****(****'Birthday:'****)[****1****].****trim****();**\n    **expect****(dobRegex.****test****(**\n    **dob**\n    **)).****to****.****be****.****true****;**\n    **})**\n    **});**\n    **});**\n    }); \n    ```", "```js\n    ...\n    describe('Users List Page', () => {\n      ...\n      **it****(****'should have unique names for all the users'****,** **() =>** **{**\n    **const** **{ $, _ } =** **Cypress****;**\n    **cy.****wait****(****'@searchUsers'****);**\n    **getUsersCards****().****then****(****(****cards****) =>** **{**\n    **const** **names = _.****map****(cards,** **(****card****) =>** **{**\n    **const** **cardItem = $(card);**\n    **return** **cardItem.****find****(****'h4'****).****text****();**\n    **});**\n    **const** **uniqueNames = _.****uniq****(names);**\n    **expect****(names.****length****).****to****.****equal****(uniqueNames.****length****);**\n    **});**\n    **});**\n    }); \n    ```", "```js\n    ...\n    describe('Users List Page', () => {\n      ...\n      **it****(****'should go to the user details page with the user uuid'****,** **() =>** **{**\n    **const** **{ minimatch, $ } =** **Cypress****;**\n    **getUsersCards****().****then****(****(****cards****) =>** **{**\n    **const** **userCard = cards[****0****];**\n    **const** **uuid = $(userCard).****attr****(****'ng-reflect-router-link'****)**\n    **.****split****(****'/users/'****)[****1****];**\n    **cy.****wrap****(userCard).****click****();**\n    **cy.****url****().****should****(****(****url****) =>** **{**\n    **const** **urlMatches =** **minimatch****(url,**\n    **`****${location.origin}****/users/****${uuid}*****`****,**\n    **{** **debug****:** **true** **});**\n    **expect****(urlMatches).****to****.****equal****(****true****);**\n    **});**\n    **});**\n    **});**\n    }); \n    ```", "```js\n    npm run e2e ng-cy-mock-data with-server \n    ```", "```js\n    export const getHeaderTitle = () =>\n     cy.get('.toolbar__title');\n    export const getFruits = () => cy.get('.fruits__item');\n    **export****const****getFruitSelector** **= () => cy.****get****(****'[data-test-id=\"fruitSelector\"'****);**\n    **export****const****getAddItemSubmitButton** **= () =>**\n    **cy.****get****(****'[data-test-id=\"addItemSubmitBtn\"'****);**\n    **export****const****getSuccessToast** **= () => cy.****get****(****'#toast-container .toast-success'****);**\n    **export****const****getErrorToast** **= () => cy.****get****(****'#toast-****container .toast-error'****);** \n    ```", "```js\n    import { **getAddItemSubmitButton**, **getFruitSelector**, getFruits, getHeaderTitle, **getSuccessToast** } from '../support/app.po';\n\n    describe('ng-cy-mock-data', () => {\n      beforeEach(() => {\n        cy.visit('/')\n      });\n\n      …\n\n      **it****(****'should add a bucket item to the list'****,** **() =>** **{**\n    **getFruitSelector****().****select****(****'Apple** **![](img/B18469_11_001.png)****'****);**\n    **getAddItemSubmitButton****().****click****();**\n    **getSuccessToast****().****should****(****'be.visible'****);**\n    **getSuccessToast****().****then****(****el => {**\n    **expect****(el.****text****().****trim****()).to.****eq****(****'Bucket item added'****);**\n    **});**\n    **getFruits****().****should****(****'have.length'****,** **5****);**\n    **});** \n\n    }); \n    ```", "```js\n    {\n    \"bucket\": [\n    { \"id\": 1, \"name\": \"Apple ![](img/B18469_11_001.png)\" },\n    { \"id\": 2, \"name\": \"Banana ![](img/B18469_11_003.png)\" },\n    { \"id\": 3, \"name\": \"Grapes ![](img/B18469_11_004.png)\" },\n    { \"id\": 4, \"name\": \"Cherry ![](img/B18469_11_005.png)\" }\n    ]\n    } \n    ```", "```js\n    ...\n    describe('ng-cy-mock-data', () => {\n      **beforeEach****(****() =>** **{**\n    **cy.****fixture****(****\"get-bucket\"****)**\n    **.****then****(****(****response****) =>** **{**\n    **cy.****intercept****(****'GET'****,** **'http://localhost:3333/api/bucket'****,**\n    **response)**\n    **return** **cy.****fixture****(****\"-bucket\"****);**\n    **})**\n    **.****visit****(****'/'****)**\n    **})**;\n         ...\n    }); \n    ```", "```js\n    {\n    \"fruit\": { \"id\": 5, \"name\": \"Apple ![](img/B18469_11_001.png)\" }\n    } \n    ```", "```js\n    ...\n\n    describe('ng-cy-mock-data', () => {\n      beforeEach(() => {\n        cy.fixture(\"get-bucket\")\n          .then((getBucketResp) => {\n            cy.intercept('GET', 'http://localhost:3333/api/bucket',\n              getBucketResp)\n            **return** **cy.****fixture****(****\"add-bucket-item\"****);**\n          })\n          **.****then****(****(****addItemResp****) =>** **{**\n    **cy.****intercept****(****'POST'****,**\n    **'http://localhost:3333/api/bucket'****, addItemResp)**\n    **})**\n    .visit('/')\n      });\n      ...\n    }); \n    ```", "```js\n    ...\n    describe('ng-cy-mock-data', () => {\n      ...\n      **it****(****'should delete a bucket item from the list'****,** **() =>** **{**\n    **getFruits****().****should****(****'have.length'****,** **4****);**\n    **getFruits****().****eq****(****0****).****find****(****'.fruits__item__delete-icon'****).****click****();**\n    **getSuccessToast****().****should****(****'be.visible'****);**\n    **getSuccessToast****().****then****(****el** **=>** **{**\n    **expect****(el.****text****().****trim****()).****to****.****eq****(****'Bucket item deleted'****);**\n    **});**\n    **getFruits****().****should****(****'have.length'****,** **3****);**\n    **});**\n    }); \n    ```", "```js\n    { \"success\": true } \n    ```", "```js\n    ...\n    describe('ng-cy-mock-data', () => {\n      beforeEach(() => {\n        cy.fixture(\"get-bucket\")\n          .then((response) => {\n            cy.intercept('GET', 'http://localhost:3333/api/bucket',\n              response)\n            return cy.fixture(\"add-bucket-item\");\n          })\n          .then((response) => {\n            cy.intercept('POST', 'http://localhost:3333/api/bucket',\n              response)\n            **return** **cy.****fixture****(****\"delete-bucket-item\"****);**\n          })\n          **.****then****(****(****deleteItemResp****) =>** **{** \n    **cy.****intercept****(****'DELETE'****,**\n    **'****http://localhost:3333/api/bucket/*'****,**\n    **deleteItemResp)** \n    **})**\n          .visit('/')\n      });\n      ...\n    }); \n    ```"]