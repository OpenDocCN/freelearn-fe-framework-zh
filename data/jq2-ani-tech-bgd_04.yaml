- en: Chapter 4. Navigation Animation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 4 章 导航动画
- en: '*In this chapter, we''re going to look at some animation methods for navigation.
    Navigation allows our users to move around to different pages in our site. Adding
    a bit of animation to this common website feature will spice up our web projects.
    Spicy is good!*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*在本章中，我们将讨论一些用于导航的动画方法。导航允许用户在我们的网站中的不同页面之间移动。在这个常见的网站功能中添加一些动画将为我们的Web项目增添一些情趣。辣味是好的！*'
- en: 'Here''s a look at the things we''ll be learning in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是本章我们将学习的内容：
- en: Adding and removing a CSS class to an element when our mouse pointer enters
    and leaves the element
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当我们的鼠标指针进入和离开元素时，向元素添加和删除CSS类
- en: Changing the styles of a hovered element using the `animate()` method, along
    with specifying a duration
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`animate()`方法更改悬停元素的样式，同时指定持续时间
- en: Learning how to smoothly scroll the window to a page element
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何平滑地滚动窗口到页面元素
- en: We're going to make an example that smoothly scrolls and changes the page background
    color when a link is clicked. Fancy!
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们将制作一个示例，当单击链接时平滑滚动并更改页面背景颜色。花哨！
- en: Creating simple navigation animations
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建简单的导航动画
- en: We're going to start by simply changing the background color on an anchor tag
    (`<a>`) when we hover over it. This is the simplest form of navigation animation,
    so this is a good place to start. We're going to change the background color by
    adding a class to the element. This will easily allow us to build in more styles
    to the class if needed.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从简单地在鼠标悬停在锚标签（`<a>`）上时更改背景颜色开始。这是导航动画的最简单形式，所以这是一个很好的开始。我们将通过向元素添加类来更改背景颜色。这将轻松地允许我们根据需要构建更多样式到类中。
- en: Note
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: We'll be using jQuery UI again in this chapter to make up for the lack of support
    for color animation in jQuery 2.0\. Refer to the previous chapter on where to
    download the jQuery UI library.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中我们将再次使用jQuery UI来弥补jQuery 2.0中对颜色动画的支持不足。请参考上一章关于从哪里下载jQuery UI库。
- en: Configuring addClass() and removeClass()
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置addClass()和removeClass()
- en: 'The syntax of `addClass()` and `removeClass()` may look like the following
    (square brackets denote optional arguments):'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '`addClass()`和`removeClass()`的语法可能如下所示（方括号表示可选参数）：'
- en: '```js'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '```js'
- en: $(selector).addClass( className [,duration] [,easing] [,complete] );
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: $(selector).addClass( className [,duration] [,easing] [,complete] );
- en: $(selector).removeClass( className [,duration] [,easing] [,complete] );
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: $(selector).removeClass( className [,duration] [,easing] [,complete] );
- en: '```'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Note
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: It's important to note that `duration` isn't a jQuery option on `addClass()`
    or `removeClass()`. This option is being added in by the jQuery UI and is called
    a method override.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要注意，`duration`不是`addClass()`或`removeClass()`的jQuery选项。这个选项是由jQuery UI添加的，并且被称为方法重写。
- en: Time for action – setting up our navigation
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 设置我们的导航
- en: 'Let''s create our navigation structure and basic animation by performing the
    following steps:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过执行以下步骤创建我们的导航结构和基本动画：
- en: We'll start by creating a new document based on our template file from the first
    chapter, naming it `navigation-animation1.html` and saving it in our `jquery-animation`
    directory.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将从根据第一章的模板文件创建一个新文档开始，将其命名为`navigation-animation1.html`并保存在我们的`jquery-animation`目录中。
- en: 'Next, we''ll need to add the jQuery UI library after our jQuery library by
    adding this line:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要在我们的jQuery库之后添加jQuery UI库，方法是添加这一行：
- en: '```js'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: <script src="img/jquery-ui.min.js"></script>
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <script src="img/jquery-ui.min.js"></script>
- en: '```'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Then, we will add the following HTML code into our newly created document under
    the `<body>` tag:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将把以下HTML代码添加到我们新创建的文档中的`<body>`标签下：
- en: '```js'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: <nav>
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <nav>
- en: <a href="#">Link1</a>
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <a href="#">链接1</a>
- en: <a href="#">Link2</a>
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <a href="#">链接2</a>
- en: <a href="#">Link3</a>
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <a href="#">链接3</a>
- en: <a href="#">Link4</a>
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <a href="#">链接4</a>
- en: <a href="#">Link5</a>
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <a href="#">链接5</a>
- en: <a href="#">Link6</a>
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <a href="#">链接6</a>
- en: <a href="#">Link7</a>
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <a href="#">链接7</a>
- en: </nav>
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </nav>
- en: '```'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Save the following code to a file `navigation-animation1.css` and link it to
    our HTML document:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码保存到名为`navigation-animation1.css`的文件中，并将其链接到我们的HTML文档：
- en: '```js'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: nav a {
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: nav a {
- en: display:block;
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: display:block;
- en: float:left;
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: float:left;
- en: padding:5px 10px;
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: padding:5px 10px;
- en: background:#DDD;
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: background:#DDD;
- en: '}'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: nav a.hover {background:#F0F;}
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: nav a.hover {background:#F0F;}
- en: '```'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Add this code into our empty anonymous function so we can get our script moving:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此代码添加到我们的空匿名函数中，以便我们的脚本能够运行：
- en: '```js'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: $("nav a").hover(function(){
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("nav a").hover(function(){
- en: $(this).addClass("hover", 300);
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $(this).addClass("hover", 300);
- en: '}, function(){'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}, function(){'
- en: $(this).removeClass("hover", 300);
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $(this).removeClass("hover", 300);
- en: '});'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: '*What just happened?*'
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We used the `hover()` handler to tell our navigation link what to do when our
    mouse cursor enters and leaves the element. We also set the duration to `300`
    (milliseconds) so the `hover()` method animation is slightly delayed and gives
    us the animation effect we want.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用 `hover()` 处理程序告诉我们的导航链接当鼠标光标进入和离开元素时该做什么。我们还将持续时间设置为 `300`（毫秒），以便 `hover()`
    方法动画略有延迟，并为我们提供所需的动画效果。
- en: 'The following screenshot is an illustration of how the animation should work
    by moving the cursor from the first link through the last one:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图是说明动画应该如何工作的示例，通过从第一个链接移动光标到最后一个链接：
- en: '![What just happened?](img/9642OS_04_01.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![刚才发生了什么？](img/9642OS_04_01.jpg)'
- en: Have a go hero – extending our hover style
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 动手试一试 - 扩展我们的悬停样式
- en: Have a go and see what other effects can be achieved by adding additional styles
    to our `hover` class. For starters, try changing the element's `height` and `position`.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试一下，看看通过向我们的 `hover` 类添加其他样式可以实现什么其他效果。首先，尝试更改元素的 `height` 和 `position`。
- en: Using the stop() method
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 stop() 方法
- en: The previous example is a simple way to allow for easy updates to the styles.
    You'll notice that if you hover over all the navigation links very quickly, going
    back and forth several times and then stop, the animation continues until it's
    played out each animation. This isn't generally a very desirable effect, so we
    need to add the `stop()` method to stop the previous animation before the next
    one starts. We need to adjust our code a bit since `addClass()` and `removeClass()`
    can't be stopped in the animation queue. For this, we'll be using the `animate()`
    method to allow us to stop the animations.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 上一个示例是一种简单的方式，允许轻松更新样式。您会注意到，如果您非常快地将鼠标悬停在所有导航链接上，来回多次并停止，动画会继续播放直到每个动画都播放完毕。这通常不是一种非常理想的效果，因此我们需要添加
    `stop()` 方法来在下一个动画开始之前停止上一个动画。由于 `addClass()` 和 `removeClass()` 无法在动画队列中停止，因此我们需要调整我们的代码一点。为此，我们将使用
    `animate()` 方法来允许我们停止动画。
- en: Time for action – adding the stop() method
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 添加 `stop()` 方法
- en: To stop our animations before the next one starts, we'll need to modify our
    code a little. Adding `stop()` before the `animate()` effect is what we'll need
    to do.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个动画开始之前停止我们的动画，我们需要稍微修改我们的代码。在 `animate()` 效果之前添加 `stop()` 就是我们需要做的。
- en: 'Using the same file as before (`navigation-animation1.html`), we''re going
    to update the code in our anonymous function with the following code (the new
    code is highlighted):'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 使用与之前相同的文件（`navigation-animation1.html`），我们将在我们的匿名函数中更新代码，用以下代码替换（新代码已突出显示）：
- en: '```js'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '```js'
- en: $("nav a").hover(function(){
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: $("nav a").hover(function(){
- en: $(this).stop().animate({ backgroundColor:"#F0F" }, 300);
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: $(this).stop().animate({ backgroundColor:"#F0F" }, 300);
- en: '}, function(){'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '}, function(){'
- en: $(this).stop().animate({ backgroundColor:"#DDD" }, 300);
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: $(this).stop().animate({ backgroundColor:"#DDD" }, 300);
- en: '});'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: '*What just happened?*'
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: You'll notice that if we quickly move our pointer over the navigation links
    now (moving our cursor back and forth), the previous animation stops before the
    next one starts. This is a much more elegant animation than the previous one.
    Just like spicy, we like elegant too.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我们迅速将鼠标指针移动到导航链接上（来回移动光标），您会注意到上一个动画在下一个动画开始之前会停止。这比以前的动画更优雅。就像香辣一样，我们也喜欢优雅。
- en: Animating the window with scrollTop()
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 `scrollTop()` 动画窗口
- en: In the previous chapter, we learned how to use `scrollTop()` to make the background
    image of our `<body>` element animate on the page in different directions and
    speeds. In the next example, we're going to use `scrollTop()` to animate the window
    by smoothly scrolling to an element on the page.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们学习了如何使用 `scrollTop()` 来使我们 `<body>` 元素的背景图像在页面上以不同的方向和速度动画。在下一个示例中，我们将使用
    `scrollTop()` 来通过平滑滚动到页面上的一个元素来动画窗口。
- en: The *smooth scrolling* animation method can be used to visually indicate to
    our users that the position of our window has changed based on an action they
    take on the page, generally following a mouse click of an element. This animation
    method is often used exactly as we're going to build it and is referred to as
    a *one pager*.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '*平滑滚动* 动画方法可以用于向我们的用户视觉地指示窗口位置已根据他们在页面上采取的操作而更改，通常是在鼠标单击元素后。这种动画方法通常被称为*一页式*，正如我们将要构建的一样。'
- en: Time for action – scripting our smooth scrolling animation
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 编写我们的平滑滚动动画
- en: 'In the following steps, we''re going to create our smooth-scrolling, one pager
    animation that will animate to different sections of the content in our page:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的步骤中，我们将创建我们的平滑滚动、单页动画，它将动画到页面内容的不同部分：
- en: First, let's start by making a new file using our template `smooth-scrolling.html`,
    and then saving it in our `jquery-animation` folder.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，让我们从使用我们的模板 `smooth-scrolling.html` 创建一个新文件开始，然后将其保存在我们的 `jquery-animation`
    文件夹中。
- en: 'Second, we''re going to add in our jQuery UI library again by inserting the
    following code directly below our jQuery library (the new code has been highlighted):'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 其次，我们将再次添加我们的 jQuery UI 库，方法是直接在我们的 jQuery 库下面插入以下代码（新代码已经被突出显示）：
- en: '```js'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: <script src="img/jquery.js"></script>
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <script src="img/jquery.js"></script>
- en: <script src="img/jquery-ui.min.js"></script>
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <script src="img/jquery-ui.min.js"></script>
- en: '```'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Next, we need to add the following CSS code to a new file named `smooth-scrolling.css`
    and link it in `smooth-scrolling.html`:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要将以下 CSS 代码添加到一个名为 `smooth-scrolling.css` 的新文件中，并在 `smooth-scrolling.html`
    中链接它：
- en: '```js'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: body, html {
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: body, html {
- en: margin:0;
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: margin:0;
- en: padding:0;
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: padding:0;
- en: '}'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: body {background:#CCC;}
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: body {background:#CCC;}
- en: nav {
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: nav {
- en: width:100%;
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: width:100%;
- en: position:fixed;
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: position:fixed;
- en: top:0;
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: top:0;
- en: padding:10px 0;
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: padding:10px 0;
- en: text-align:center;
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: text-align:center;
- en: 'outline:1px dotted #FFF;'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'outline:1px dotted #FFF;'
- en: background:#EEE;
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: background:#EEE;
- en: background-color:rgba(255, 255, 255, 0.9);
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: background-color:rgba(255, 255, 255, 0.9);
- en: '}'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: nav a {
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: nav a {
- en: color:#222;
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: color:#222;
- en: margin:0 10px;
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: margin:0 10px;
- en: text-decoration:none;
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: text-decoration:none;
- en: '}'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: content {margin-top:50px;}
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: content {margin-top:50px;}
- en: content div {
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: content div {
- en: height:400px;
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: height:400px;
- en: margin:10px;
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: margin:10px;
- en: padding:10px;
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: padding:10px;
- en: 'outline:1px solid #FFF;'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'outline:1px solid #FFF;'
- en: background:#EEE;
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: background:#EEE;
- en: background-color:rgba(255, 255, 255, 0.8);
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: background-color:rgba(255, 255, 255, 0.8);
- en: '}'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Then, we''ll add the following HTML code under the `<body>` tag:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将以下 HTML 代码添加到 `<body>` 标签下面：
- en: '```js'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: <nav>
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <nav>
- en: <a href="#link1">Link1</a>
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <a href="#link1">链接1</a>
- en: <a href="#link2">Link2</a>
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <a href="#link2">链接2</a>
- en: <a href="#link3">Link3</a>
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <a href="#link3">链接3</a>
- en: <a href="#link4">Link4</a>
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <a href="#link4">链接4</a>
- en: <a href="#link5">Link5</a>
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <a href="#link5">链接5</a>
- en: <a href="#link6">Link6</a>
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <a href="#link6">链接6</a>
- en: <a href="#link7">Link7</a>
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <a href="#link7">链接7</a>
- en: </nav>
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </nav>
- en: <div class="content">
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div class="content">
- en: <div id="link1">Link1</div>
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div id="link1">链接1</div>
- en: <div id="link2">Link2</div>
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div id="link2">链接2</div>
- en: <div id="link3">Link3</div>
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div id="link3">链接3</div>
- en: <div id="link4">Link4</div>
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div id="link4">链接4</div>
- en: <div id="link5">Link5</div>
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div id="link5">链接5</div>
- en: <div id="link6">Link6</div>
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div id="link6">链接6</div>
- en: <div id="link7">Link7</div>
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div id="link7">链接7</div>
- en: </div>
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </div>
- en: '```'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Finally, add the following to our anonymous function:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，将以下内容添加到我们的匿名函数中：
- en: '```js'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: $("a[href^='#']").click(function(e){
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("a[href^='#']").click(function(e){
- en: var pos = $(this.hash).offset().top - 50;
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var pos = $(this.hash).offset().top - 50;
- en: $("body, html").stop().animate({ scrollTop:pos }, 1000);
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("body, html").stop().animate({ scrollTop:pos }, 1000);
- en: e.preventDefault();
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: e.preventDefault();
- en: '});'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: '*What just happened?*'
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: 'We used the `click()` handler with a complicated looking selector. The selector
    we used means: select all anchor tags (`<a>`) whose `href` attribute begins with
    (`^`) a pound sign (`#`).'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了 `click()` 处理程序与一个看起来复杂的选择器。我们使用的选择器意味着：选择所有 `href` 属性以井号 (`#`) 开头的锚标签
    (`<a>`)。
- en: Our selector will be the `<body>` tag for this example and we're using the `animate()`
    method to handle our dirty work. The `stop()` method is used again so the previous
    animation stops before the next one begins. We're setting a new variable named
    `pos` to hold the position of the clicked link (`<a>`) from the top of the page
    using `offset().top`. Also, we're subtracting `50` from the `pos` variable as
    an offset because we want the top of the `content` element to land just under
    the navigation bar. We set the duration of the animation to `1000` milliseconds,
    because we want it to take 1 second for the animation to jump from the current
    position on the page to the next.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个示例，我们的选择器将是 `<body>` 标签，我们正在使用 `animate()` 方法来处理我们的繁重工作。再次使用 `stop()` 方法，以便在下一个动画开始之前停止前一个动画。我们设置一个名为
    `pos` 的新变量，用来保存点击链接（`<a>`）距页面顶部的位置，使用 `offset().top`。此外，我们从 `pos` 变量中减去 `50` 作为偏移量，因为我们希望
    `content` 元素的顶部落在导航栏的下方。我们将动画的持续时间设置为 `1000` 毫秒，因为我们希望动画从页面上的当前位置跳转到下一个位置需要 1
    秒钟的时间。
- en: Smooth scrolling and page background color
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 平滑滚动和页面背景颜色
- en: Now, let's take the two animation methods we learned above and merge them together
    into one. This example will use the smooth scrolling method to jump to our linked
    elements and change the page background color at the same time.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们将上面学到的两种动画方法合并到一起。此示例将使用平滑滚动方法跳转到我们的链接元素，并同时更改页面背景颜色。
- en: 'The following screenshot illustrates the stopping points of the corresponding
    links after they''re clicked in our navigation bar:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了在我们的导航栏中点击链接后对应链接的停止点：
- en: '![Smooth scrolling and page background color](img/9642OS_04_02.jpg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![平滑滚动和页面背景色](img/9642OS_04_02.jpg)'
- en: Time for action – creating the super animation
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间-创建超级动画
- en: To merge our previous two examples together, we'll need to create a new file
    and mix our CSS and jQuery code from both the examples together. Of course, we'll
    need to make a few adjustments to allow them to work together.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 将我们之前的两个示例合并在一起，我们需要创建一个新文件，并将来自两个示例的 CSS 和 jQuery 代码混合在一起。当然，我们需要进行一些调整，以使它们能够一起工作。
- en: Create a new document called `navigation-animation2.html` using the file template
    and save it under our `jquery-animation` folder.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用文件模板创建名为 `navigation-animation2.html` 的新文档，并将其保存在我们的 `jquery-animation` 文件夹下。
- en: 'Then, place the following CSS code into a new file called `navigation-animation2.css`,
    and link it in the HTML document we just created:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，将以下 CSS 代码放入一个名为 `navigation-animation2.css` 的新文件中，并在我们刚创建的 HTML 文档中链接它：
- en: '```js'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: body, html {
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: body, html {
- en: margin:0;
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: margin:0;
- en: padding:0;
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: padding:0;
- en: '}'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: body {background:#F00;}
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: body {background:#F00;}
- en: nav {
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: nav {
- en: width:100%;
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: width:100%;
- en: position:fixed;
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: position:fixed;
- en: top:0;
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: top:0;
- en: padding:10px 0;
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: padding:10px 0;
- en: text-align:center;
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: text-align:center;
- en: 'outline:1px solid #FFF;'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'outline:1px solid #FFF;'
- en: background:#EEE;
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: background:#EEE;
- en: background-color:rgba(255, 255, 255, 0.5);
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: background-color:rgba(255, 255, 255, 0.5);
- en: '}'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: nav a {
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: nav a {
- en: color:#222;
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: color:#222;
- en: margin:0 10px;
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: margin:0 10px;
- en: text-decoration:none;
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: text-decoration:none;
- en: '}'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: content {margin-top:50px;}
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: content {margin-top:50px;}
- en: content div {
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: content div {
- en: height:400px;
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: height:400px;
- en: margin:10px;
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: margin:10px;
- en: padding:10px;
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: padding:10px;
- en: 'outline:1px solid #FFF;'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'outline:1px solid #FFF;'
- en: background:#EEE;
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: background:#EEE;
- en: background-color:rgba(255, 255, 255, 0.8);
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: background-color:rgba(255, 255, 255, 0.8);
- en: '}'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Finally, we need to place the following code into our anonymous function:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们需要将以下代码放入我们的匿名函数中：
- en: '```js'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: $("a[href^='#']").click(function(e){
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("a[href^='#']").click(function(e){
- en: e.preventDefault();
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: e.preventDefault();
- en: var link = $(this).index() + 1;
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var link = $(this).index() + 1;
- en: var background = "";
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var background = "";
- en: if (link == 1) {
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: if (link == 1) {
- en: background = "#F00"        //red
  id: totrans-197
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: background = "#F00"        //红色
- en: '} else if (link == 2) {'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '} else if (link == 2) {'
- en: background = "#FF5000"     //orange
  id: totrans-199
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: background = "#FF5000"     //橙色
- en: '} else if (link == 3) {'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '} else if (link == 3) {'
- en: background = "#FF0"        //yellow
  id: totrans-201
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: background = "#FF0"        //黄色
- en: '} else if (link == 4) {'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '} else if (link == 4) {'
- en: background = "#0F0"        //green
  id: totrans-203
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: background = "#0F0"        //绿色
- en: '} else if (link == 5) {'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '} else if (link == 5) {'
- en: background = "#0FF"        //light blue
  id: totrans-205
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: background = "#0FF"        //浅蓝色
- en: '} else if (link == 6) {'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '} else if (link == 6) {'
- en: background = "#00F"        //dark blue
  id: totrans-207
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: background = "#00F"        //深蓝色
- en: '} else if (link == 7) {'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '} else if (link == 7) {'
- en: background = "#F0F"        //fuschia
  id: totrans-209
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: background = "#F0F"        //紫红色
- en: '}'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: var pos = $(this.hash).offset().top - 50;
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var pos = $(this.hash).offset().top - 50;
- en: $("body, html").stop().animate({ scrollTop:pos, backgroundColor:background },
    1000);
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("body, html").stop().animate({ scrollTop:pos, backgroundColor:background },
    1000);
- en: '});'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: '*What just happened?*'
  id: totrans-215
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: The first thing we did was add a new `link` variable. This will hold the index
    value of the link that our user clicks on. We incremented the index value by `1`
    because the `index()` method is zero-based, and it's been a long day, so we don't
    want to deal with starting at zero when we count up.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 我们做的第一件事是添加一个新的 `link` 变量。这将保存我们的用户点击的链接的索引值。我们将索引值递增了 `1`，因为 `index()` 方法是从零开始的，而且今天已经很长时间了，所以我们不想从零开始计数。
- en: The `background` variable is declared to ward off those filthy JavaScript error
    monsters, as always. We created an `if` statement to handle the hex values of
    background colors. The `background` variable gets set to the color (that we defined)
    of the link that's clicked.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '`background` 变量被声明以抵御那些肮脏的 JavaScript 错误怪物，一如既往。我们创建了一个 `if` 语句来处理背景颜色的十六进制值。`background`
    变量被设置为点击的链接的颜色（我们定义的）。'
- en: Our selector for this magic trick will be the `<body>` tag again, because we're
    both scrolling to another position on the page and changing the background color
    of the page as well. This is the same code as before, except this time, we added
    `backgroundColor` and are setting the value (background) from the if statement
    above.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 我们这个魔术技巧的选择器将再次是`<body>`标签，因为我们既要滚动到页面上的另一个位置，又要改变页面的背景颜色。这与之前的代码相同，唯一不同的是，这次我们添加了`backgroundColor`，并且根据上面的if语句设置了值（背景）。
- en: Have a go hero – extending the script further
  id: totrans-219
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 挑战英雄 – 进一步扩展脚本
- en: 'Try to think of some added functionality to our merged animation example. Here
    are a few ideas to get you going:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试为我们合并的动画示例添加一些功能。以下是一些启发你的想法：
- en: Dynamically change the height of the content `<div>` elements to the height
    of the window (don't forget to add in a window resize function)
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 动态地将内容`<div>`元素的高度改变为窗口的高度（不要忘记添加窗口调整大小函数）
- en: Change the background color using a window scroll function so that it changes
    colors if you manually scroll down the page and not just by clicking on the links
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用窗口滚动功能改变背景颜色，这样当你手动滚动页面时，颜色就会改变，而不仅仅是通过点击链接实现
- en: Fade in the content `<div>` elements once they come into view either by clicking
    on the links or by manually scrolling down the page
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当内容`<div>`元素通过点击链接或手动滚动页面进入视图时，进行淡入
- en: Automatically scroll through the content without having to click on the links
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动滚动内容，无需点击链接
- en: Pop quiz – the ^ symbol and the stop() method
  id: totrans-225
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 突击测验 – 符号^ 与 stop() 方法
- en: Q1\. What does the `^` symbol mean in our `<a>` selector?
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: Q1\. 我们在`<a>`选择器中使用符号^代表什么意思？
- en: It means "equals"
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它表示“等于”
- en: It means "contains"
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它表示“包含”
- en: It means "starts with"
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它表示“以…开始”
- en: It means "ends with"
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它表示“以…结束”
- en: Q2\. What does the `stop()` method do?
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: Q2\. `stop()`方法的作用是什么？
- en: It stops the animation queue on the selected element(s)
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它会停止所选元素的动画队列
- en: It stops the page from loading
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它会阻止页面加载
- en: It stops all the animations on the page
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它会停止页面上的所有动画
- en: It stops animations from running until the page is reloaded
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它会阻止动画运行，直到页面重新加载
- en: Summary
  id: totrans-236
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned how to change the styles on an element based on
    our mouse interactions, using `addClass()` and `removeClass()`, and how to control
    the speed (duration) of adding and removing those classes with a little help from
    jQuery UI's method overrides.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们学会了如何根据鼠标交互来改变元素的样式，使用`addClass()`和`removeClass()`，以及如何通过jQuery UI的方法覆盖来控制添加和移除这些类的速度（持续时间）。
- en: Then, we learned how to smoothly scroll the window to a specified element on
    our page. Later, we merged both of our examples together into one example that
    would smoothly scroll the window and fade our page's background color. Also in
    this chapter, we found a puppy. What's that? You didn't find a puppy? You must
    have missed a semi-colon somewhere.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 接着，我们学会了如何平滑地将窗口滚动到页面上指定的元素。之后，我们将两个示例合并成了一个示例，这个示例可以平滑地滚动窗口并让页面背景颜色淡入。同时在这一章中，我们找到了一只小狗。什么？你没有找到小狗？你一定是错过了某个分号。
- en: Now that we've added a little spice to our navigation elements, we're going
    to learn how to give some life to our form inputs in the next chapter. Some of
    the things we'll learn in the next chapter are form validation animation, visually
    changing the form to alert the user of a problem with their submission, and how
    to shake the form if we need the user to fix one of their entries.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经为我们的导航元素添加了一些活力，接下来，我们将在下一章中学习如何为我们的表单输入添加一些生命。下一章中我们将学到一些内容，包括表单验证动画，视觉上改变表单以提醒用户提交时出现问题，并且如何在需要用户修正输入时摇动表单。
