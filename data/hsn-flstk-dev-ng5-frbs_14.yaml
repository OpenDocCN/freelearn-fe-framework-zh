- en: Transforming Our App into a PWA
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将我们的应用转化为PWA
- en: '**Progressive Web App** (**PWA**) is a new way to develop a web application.
    As a part of this chapter, you will learn about PWA and explore features that
    make an application PWA-compliant. As a part of this, we will add our friends
    application to mobile home screens, and this will make our friends application
    a part of other mobile-native apps. We will also cover offline mode for our application
    so that we can show data for our users to browse. Finally, we will audit our application
    in the **Lighthouse** tool, which provides a good insight into our Progressive
    Web Application.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**渐进式Web应用**（**PWA**）是开发Web应用的一种新方式。作为本章的一部分，你将了解PWA并探索使应用符合PWA规范的功能。作为其中的一部分，我们将把我们的朋友应用添加到移动主屏幕上，这样我们的朋友应用就成为了其他原生移动应用的组成部分。我们还将涵盖我们应用的离线模式，以便我们可以向用户展示可浏览的数据。最后，我们将使用**Lighthouse**工具对我们的应用进行审计，该工具为我们提供了关于我们渐进式Web应用的宝贵见解。'
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Introduction to PWA
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PWA简介
- en: Introduction to service worker
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务工人简介
- en: Adding our application to phone home screens
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将我们的应用添加到手机主屏幕
- en: Enabling offline mode
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用离线模式
- en: Compliance testing using Lighthouse
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Lighthouse进行合规性测试
- en: Introduction to PWA
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PWA简介
- en: PWA is a web app that uses enhanced features to deliver a mobile app-like experience
    to the users. This web application meets certain requirements and is deployed
    to the Firebase server, which is accessible through URL and indexed by the Google
    search engine. Progressive web application development is a paradigm shift in
    recent years to make your web application universally available.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: PWA是一种使用增强功能为用户提供类似移动应用体验的Web应用。这种Web应用满足某些要求，并部署到Firebase服务器上，通过URL可访问并由Google搜索引擎索引。近年来，渐进式Web应用开发是一种范式转变，使您的Web应用能够普遍可用。
- en: 'The following are a few of the features that make an application PWA-compliant:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些使应用符合PWA规范的功能：
- en: '**Power of website and app**: The application is optimized to work perfectly
    well on mobiles and in browsers. It has all the capabilities of a mobile app,
    such as offline mode and push notifications.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网站和应用的强大功能**：该应用针对移动设备和浏览器进行了优化，可以完美地工作。它具有移动应用的所有功能，例如离线模式和推送通知。'
- en: '**App store not required**: Similar to a website, we don''t require an app
    store and this is readily available for use with the latest software update.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**无需应用商店**：类似于网站，我们不需要应用商店，并且可以通过最新的软件更新立即使用。'
- en: '**App-Like**: The web application looks like a mobile application. It appears
    along with other mobile apps and occupies the full screen as a normal app.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**类似应用**：Web应用看起来像移动应用。它与其他移动应用一起出现，并以正常应用的方式占据整个屏幕。'
- en: '**Connectivity-Independent**: These apps are independent of network types.
    They work quite well on weak networks, which gives users a seamless experience.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**连接无关性**：这些应用不依赖于网络类型。它们在弱网络环境下也能很好地工作，为用户提供无缝的使用体验。'
- en: '**Additions to the home screen**: This allows a user to add our website to
    their home screen so that they become a part of the app family. Users can frequently
    launch the application without opening the browser.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主屏幕添加**：这允许用户将我们的网站添加到他们的主屏幕上，使其成为应用家族的一部分。用户可以频繁启动应用而无需打开浏览器。'
- en: '**Safe**: This app works on HTTPS, so they are safe from attacks or hacks.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全**：此应用在HTTPS上运行，因此它们免受攻击或黑客攻击。'
- en: '**Push Notification**: With the advent of service worker, it is possible to
    send push notifications to a web application. This is really helpful in engaging
    the user with our application.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**推送通知**：随着服务工人的出现，可以向Web应用发送推送通知。这对与我们的应用吸引用户非常有帮助。'
- en: '**Searchable**: Similar to a website, this app is searchable using Google Search.
    We can optimize our website with keywords so that PWA apps are recognizable and
    easily searchable by users.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可搜索**：类似于网站，此应用可以通过Google搜索进行搜索。我们可以通过关键词优化我们的网站，以便PWA应用可被用户识别并轻松搜索。'
- en: '**Link able**: This kind of app is easily shareable via links just like a normal
    web application.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可链接**：这种应用可以通过链接轻松分享，就像普通Web应用一样。'
- en: Introduction to service worker
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 服务工人简介
- en: Service worker is a script that runs in background. This background script does
    not interact with DOM elements. This helps support features such as push notification
    and offline mode, and service worker will be greatly enhanced in future to support
    other new features.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 服务工作者（service worker）是一个在后台运行的脚本。此后台脚本不与 DOM 元素交互。这有助于支持推送通知和离线模式等功能，并且服务工作者将在未来得到大幅增强以支持其他新功能。
- en: 'The following are the prerequisites for service worker:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是为服务工作者（service worker）的先决条件：
- en: '**Browser support**: Service worker is supported in the Chrome, Firefox, and
    Opera browsers, and the support will be extended for other browsers soon.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**浏览器支持**: 服务工作者在 Chrome、Firefox 和 Opera 浏览器中得到支持，并且对其他浏览器的支持也将很快扩展。'
- en: '**HTTPS support**: **Hyper text transfer protocol secure** (**HTTPS**) is a
    secure version of HTTP and is one of the prerequisites for PWA. This ensures that
    all communication between browser and server is encrypted.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**HTTPS 支持**: **超文本传输协议安全**（HTTPS）是 HTTP 的安全版本，也是 PWA 的先决条件之一。这确保了浏览器和服务器之间所有通信都是加密的。'
- en: Adding our application to phone home screens
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将我们的应用程序添加到手机主屏幕
- en: 'This is one of the most important features of Progressive Web Apps and provides
    many advantages, as follows:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这是渐进式 Web 应用程序（Progressive Web Apps）最重要的功能之一，提供了许多优势，如下所示：
- en: '**Easier access**: Users normally put their most-used app on the home screen,
    as this provides easier access to the application'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**更易访问**: 用户通常将最常用的应用程序放在主屏幕上，因为这提供了更方便的应用程序访问。'
- en: '**Engagement**: A user can engage with our application more frequently'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**参与度**: 用户可以更频繁地与我们的应用程序互动。'
- en: 'The steps involved in making our web application appear on the home screen
    are as follows:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 使我们的 Web 应用程序出现在主屏幕上的步骤如下：
- en: In order to give our web application a mobile app appearance, we will modify
    the `manifest.json` file as shown in the following code.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了使我们的 Web 应用程序具有移动应用的外观，我们将按照以下代码修改 `manifest.json` 文件。
- en: Open the friends application in your phone's Chrome browser using the deployed
    application URL available from your Firebase portal. The page prompts you with
    an option to add the application to the home screen.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用从 Firebase 门户提供的已部署应用程序 URL 在您的手机 Chrome 浏览器中打开朋友应用。页面会提示您将应用程序添加到主屏幕。
- en: 'Here''s the `manifest.json` file:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 `manifest.json` 文件：
- en: '[PRE0]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Take a look at the following detailed description of properties:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下属性的详细描述：
- en: '`name`: This name appears when the add to home screen banner appears and Chrome
    gives the option to modify the name dynamically.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`: 当添加到主屏幕的横幅出现，并且 Chrome 提供修改名称的选项时，此名称将显示。'
- en: '`short_name`: This appears below the application icon in the phone home screen.
    In our application, `name` and `short_name` are the same.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`short_name`: 这将出现在手机主屏幕中的应用程序图标下方。在我们的应用程序中，`name` 和 `short_name` 是相同的。'
- en: '`icons`: According to the PWA standard, the recommended icon size is 192 x
    192, and this icon appears on phone home screens.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`icons`: 根据 PWA 标准，推荐的图标大小为 192 x 192，此图标将出现在手机主屏幕上。'
- en: '`background_color`: The specified background color appears as the icon''s background
    color.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`background_color`: 指定的背景颜色将作为图标的背景颜色显示。'
- en: '`theme_color`: When a user clicks on the friends application on the home screen,
    this color appears in the splash screen of your mobile application.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`theme_color`: 当用户点击主屏幕上的朋友应用时，此颜色将出现在您的移动应用启动屏幕上。'
- en: '`display`: Android Chrome gives native style when a page is opened, as it removes
    the navigation bar and give up tab to task switcher.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`display`: 当页面打开时，Android Chrome 会提供原生样式，因为它移除了导航栏并将标签页切换到任务切换器。'
- en: '`start_url`: This page is `index.html` in web applications, and typically this
    is our home page.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`start_url`: 此页面是 Web 应用程序中的 `index.html`，通常这是我们主页。'
- en: '`orientation`: This enforces either portrait or landscape orientation.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`orientation`: 这强制执行纵向或横向方向。'
- en: 'Our application on a phone home screen looks like this:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的应用程序在手机主屏幕上的外观如下所示：
- en: '![](img/00074.jpeg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00074.jpeg)'
- en: 'The splash screen for our app screen looks as follows:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应用程序的启动屏幕如下所示：
- en: '![](img/00075.jpeg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00075.jpeg)'
- en: Enabling offline mode
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启用离线模式
- en: In this section, we will cover how to enable offline mode for our application,
    which helps the user open our web application without an internet connection.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将介绍如何为我们的应用程序启用离线模式，这有助于用户在没有互联网连接的情况下打开我们的 Web 应用程序。
- en: 'In order to support offline mode, we have to cache resources in the client
    browser, and for that, we use the precache plugin to cache our resources using
    service worker. It creates the service worker file using **sw-precache**. The
    steps involved are as follows:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 为了支持离线模式，我们必须在客户端浏览器中缓存资源，为此，我们使用 precache 插件通过服务工作者来缓存我们的资源。它使用 **sw-precache**
    创建服务工作者文件。涉及的步骤如下：
- en: '**Installing the plugin**: The first step is to install the precache plugin
    in our current project using the following command:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**安装插件**：第一步是在我们的当前项目中使用以下命令安装 precache 插件：'
- en: '[PRE1]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Creating precache JavaScript**: The precache plugin uses the precache configuration
    file to define resources to cache in the client browser. For more details about
    the precache plugin, refer to [https://github.com/goldhand/sw-precache-webpack-plugin](https://github.com/goldhand/sw-precache-webpack-plugin).'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**创建预缓存 JavaScript**：precache 插件使用 precache 配置文件来定义客户端浏览器中要缓存的资源。有关 precache
    插件的更多详细信息，请参阅 [https://github.com/goldhand/sw-precache-webpack-plugin](https://github.com/goldhand/sw-precache-webpack-plugin)。'
- en: 'Here''s the complete `precache.config.js`:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这是完整的 `precache.config.js`：
- en: '[PRE2]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Configuring package.json**: Once we create the configuration file, we need
    to create a new build tag called `pwa` and refer the cache file in`package.json`.'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**配置 package.json**：一旦我们创建了配置文件，我们需要创建一个新的构建标签称为 `pwa` 并在 `package.json` 中引用缓存文件。'
- en: 'Here''s the modified `package.json` :'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这是修改后的 `package.json`：
- en: '[PRE3]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**Registering service worker**: Once we create the new build, we need to register
    the service worker that is created by the precache plugin in `index.html`, as
    follows. Here''s the modified `index.html`:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**注册服务工作者**：一旦我们创建了新的构建，我们需要在 `index.html` 中注册由 precache 插件创建的服务工作者，如下所示。这是修改后的
    `index.html`：'
- en: '[PRE4]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**Running the new build script**: Once we configure the service worker, we
    can run the production build using the following command; this will create all
    the files with service worker in their distribution folder:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**运行新的构建脚本**：一旦我们配置了服务工作者，我们可以使用以下命令运行生产构建；这将创建所有包含服务工作者的文件到它们的分发文件夹中：'
- en: '[PRE5]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**Deploying**: Finally, we deploy the newly created files to Firebase. Once
    they are deployed, we can open the application on our phone''s home screen, and
    it will cache all the required resources in the client browser.'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**部署**：最后，我们将新创建的文件部署到 Firebase。一旦部署，我们可以在手机的首页上打开应用程序，并且它将在客户端浏览器中缓存所有必需的资源。'
- en: Compliance testing using Lighthouse
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Lighthouse 进行合规性测试
- en: Lighthouse is an open source automated tool. It audits the application on performance,
    accessibility, progressive web apps, and so on. This is available with Chrome's
    developer tools in the Audits tab. So, go to the Chrome developer tool, then open
    the Audits tab, and click on the Perform an audit... button
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Lighthouse 是一个开源的自动化工具。它审计应用程序的性能、可访问性、渐进式网络应用程序等。这可以通过 Chrome 开发者工具中的“审计”标签获得。因此，前往
    Chrome 开发者工具，然后打开“审计”标签，并点击“执行审计...”按钮
- en: 'In order to see improvements in our application, we can use this tool in two
    phases:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在我们的应用程序中看到改进，我们可以在这个工具的两个阶段中使用它：
- en: '**Without any PWA changes**: We can run this tool without any of the preceding
    changes in our application and take a look at the performance. Since our application
    does not comply with the PWA criteria, our score will not be good.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**无需任何 PWA 变更**：我们可以在我们的应用程序中不进行任何前面的更改运行此工具，并查看性能。由于我们的应用程序不符合 PWA 标准，我们的分数将不会很好。'
- en: 'Take a look at the following screenshot showing the score when we run Lighthouse—it
    fails in five audits and the score is shown in red:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下截图，显示我们运行 Lighthouse 时的分数——它在五个审计中失败，分数以红色显示：
- en: '![](img/00076.jpeg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00076.jpeg)'
- en: '**With PWA changes**: Now, apply all the PWA changes as discussed in this chapter
    in our friends application, then run this tool and take a look at our audit performance.
    As shown in the following screenshot, our PWA score is 82 and is shown in green:'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用 PWA 变更**：现在，在我们的朋友应用程序中应用本章中讨论的所有 PWA 变更，然后运行此工具并查看我们的审计性能。如图所示，我们的 PWA
    分数为 82，并以绿色显示：'
- en: '![](img/00077.jpeg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00077.jpeg)'
- en: Summary
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we discussed progressive web apps. We covered PWAs and all
    their key features. We discussed service worker, which supports push notification,
    offline mode, and so on. We enhanced `manifest.json` for our web application and
    added our application to a phone home screen. We enabled the offline cache using
    the `sw-precache` plugin. Finally, we used the Lighthouse tool to evaluate our
    application's PWA compliance.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了渐进式网络应用。我们涵盖了 PWAs 及其所有关键特性。我们讨论了支持推送通知、离线模式等服务工作者。我们增强了我们的网络应用的 `manifest.json`，并将我们的应用程序添加到手机主屏幕。我们使用
    `sw-precache` 插件启用了离线缓存。最后，我们使用 Lighthouse 工具评估了我们的应用程序的 PWA 合规性。
- en: Finally, we come to the end of our book, but this is not the end of web application
    development. This books introduced you to a practical approach to Angular and
    Firebase. You need to carry forward this knowledge and develop another live application;
    this will give you a lot of confidence.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们来到了本书的结尾，但这并不是网络应用开发的终点。本书向您介绍了一种实用的 Angular 和 Firebase 方法。您需要将这一知识传承下去，开发另一个实时应用程序；这将给您带来极大的信心。
- en: All the best for your next application using Angular and Firebase!
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 祝您使用 Angular 和 Firebase 的下一个应用程序一切顺利！
