["```js\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <ScrollView style={styles.scroll}>\n        {new Array(20).fill(null).map((v, i) => (\n          <View key={i}>\n            <Text style={[styles.scrollItem, styles.text]}>Some text</Text>\n            <ActivityIndicator style={styles.scrollItem} size=\"large\" />\n            <Switch style={styles.scrollItem} />\n          </View>\n        ))}\n      </ScrollView>\n    </View>\n  );\n} \n```", "```js\nscroll: {\n    height: 1,\n    alignSelf: \"stretch\",\n  }, \n```", "```js\ntype ButtonProps = {\n  label: string;\n  onPress: () => void;\n};\nexport const OpacityButton = ({ label, onPress }: ButtonProps) => {\n  return (\n    <TouchableOpacity\n      style={styles.button}\n      onPress={onPress}\n      activeOpacity={0.5}\n    >\n      <Text style={styles.buttonText}>{label}</Text>\n    </TouchableOpacity>\n  );\n};\nexport const HighlightButton = ({ label, onPress }: ButtonProps) => {\n  return (\n    <TouchableHighlight\n      style={styles.button}\n      underlayColor=\"rgba(112,128,144,0.3)\"\n      onPress={onPress}\n    >\n      <Text style={styles.buttonText}>{label}</Text>\n    </TouchableHighlight>\n  );\n}; \n```", "```js\nbutton: {\n    padding: 10,\n    margin: 5,\n    backgroundColor: \"azure\",\n    borderWidth: 1,\n    borderRadius: 4,\n    borderColor: \"slategrey\",\n  },\n  buttonText: {\n    color: \"slategrey\",\n  }, \n```", "```js\nconst PressableButton = () => {\n  const [text, setText] = useState(\"Not Pressed\");\n  return (\n    <Pressable\n      onPressIn={() => setText(\"Pressed\")}\n      onPressOut={() => setText(\"Press\")}\n      onLongPress={() => {\n        setText(\"Long Pressed\");\n      }}\n      delayLongPress={500}\n      style={({ pressed }) => [\n        {\n          opacity: pressed ? 0.5 : 1,\n        },\n        styles.button,\n      ]}\n    >\n      <Text>{text}</Text>\n    </Pressable>\n  );\n}; \n```", "```js\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <OpacityButton onPress={() => {}} label=\"Opacity\" />\n      <HighlightButton onPress={() => {}} label=\"Highlight\" />\n      <PressableButton />\n    </View>\n  );\n} \n```", "```js\nexport default function SwipableAndCancellable() {\n  const [items, setItems] = useState(\n    new Array(10).fill(null).map((v, id) => ({ id, name: \"Swipe Me\" }))\n  );\n  function onSwipe(id: number) {\n    return () => {\n      setItems(items.filter((item) => item.id !== id));\n    };\n  }\n  return (\n    <View style={styles.container}>\n      {items.map((item) => (\n        <Swipeable\n          key={item.id}\n          onSwipe={onSwipe(item.id)}\n          name={item.name}\n          width={200}\n        />\n      ))}\n    </View>\n  );\n} \n```", "```js\ntype SwipeableProps = {\n  name: string;\n  width: number;\n  onSwipe: () => void;\n};\nexport default function Swipeable({ name, width, onSwipe }: SwipeableProps) {\n  function onScroll(e: NativeSyntheticEvent<NativeScrollEvent>) {\n    console.log(e.nativeEvent.contentOffset.x);\n    e.nativeEvent.contentOffset.x >= width && onSwipe();\n  }\n  return (\n    <View style={styles.swipeContainer}>\n      <ScrollView\n        horizontal\n        snapToInterval={width}\n        showsHorizontalScrollIndicator={false}\n        scrollEventThrottle={10}\n        onScroll={onScroll}\n      >\n        <View style={[styles.swipeItem, { width }]}>\n          <Text style={styles.swipeItemText}>{name}</Text>\n        </View>\n        <View style={[styles.swipeBlank, { width }]} />\n      </ScrollView>\n    </View>\n  );\n} \n```", "```js\n swipeContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    width: 200,\n    height: 30,\n    marginTop: 50,\n  },\n  swipeItem: {\n    height: 30,\n    backgroundColor: \"azure\",\n    justifyContent: \"center\",\n    borderWidth: 1,\n    borderRadius: 4,\n    borderColor: \"slategrey\",\n  },\n  swipeItemText: {\n    textAlign: \"center\",\n    color: \"slategrey\",\n  },\n  swipeItemBlank: {\n    height: 30,\n  }, \n```"]