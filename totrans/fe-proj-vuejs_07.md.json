["```js\n<transition name=\"fade-in\">\n  <h1>{{ msg }}</h1>\n</transition>\n```", "```js\n<style>\n.fade-in-enter {\n  opacity: 0;\n}\n</style>\n```", "```js\n.fade-in-enter-active {\n  transition: opacity 3s easein;\n}\n```", "```js\n    .fade-in-enter-active, .fade-in-leave-active {\n      transition: opacity 3s ease-in;\n    }\n    ```", "```js\n    .fade-in-enter, .fade-in-leave-to {\n      opacity: 0;\n    }\n    ```", "```js\nvue create hello-world\n```", "```js\n<transition name=\"slide\">\n  <h1 v-if=\"show\">{{ msg }}</h1>\n</transition>\n```", "```js\n@keyframes slide {\n  0% { transform: translateX(-100px)}\n  100% { transform: translateX(0px)}\n}\n```", "```js\n.slide-enter, .slide-leave-to {\n  transform: translateX(-100px);\n}\n.slide-enter-active {\n  animation: slide 5s;\n}\n.slide-leave-active {\n  animation: slide 5s reverse;\n}\n```", "```js\n<script>\nexport default {\n  name: 'HelloWorld',\n  data: {\n    showHello: true,\n  },\n  props: {\n    msg: String\n  }\n}\n</script>\n```", "```js\n<transition\n      name=\"slide\"\n      enter-active-class=\"swing\"\n      leave-active-class=\"tada\"\n    >\n      <h1 v-if=\"show\">{{ msg }}</h1>\n    </transition>\n```", "```js\n.tada {\n  animation-fill-mode: both;\n  animation-name: tada;\n  animation-duration: 3s;\n}\n.swing {\n  animation-fill-mode: both;\n  transform-origin: top center;\n  animation-duration: 2s;\n  animation-name: swing;\n}\n```", "```js\n@keyframes tada {\n  0% {\n    transform: scale3d(1, 1, 1);\n }\n  10%, 20% {\n    transform: scale3d(.8, .9, .8) rotate3d(0, 0, 1, -5deg);\n  }\n  30%, 50%, 70%, 90% {\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 5deg);\n  }\n  40%, 60%, 80% {\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -5deg);\n  }\n  100% {\n    transform: scale3d(1, 1, 1);\n  }\n@keyframes swing {\n  20% { transform: rotate(5deg); }\n  40% { transform: rotate(-10deg); }\n  60% { transform: rotate(5deg); }\n  80% { transform: rotate(-10deg); }\n  100% { transform: rotate(0deg); }\n}\n```", "```js\n<script>\nexport default {\n  name: 'HelloWorld',\n  data: {\n    showHello: true,\n  },\n  props: {\n    msg: String\n  }\n}\n</script>\n```", "```js\n    npm install velocity-animate \n    #Or\n    yarn add velocity-animate\n    ```", "```js\n    npm install gsap\n    #or\n    yarn add gsap\n    ```", "```js\n<transition\n  @before-enter=\"beforeEnter\"\n  @enter=\"enter\"\n  @leave=\"leave\"\n>\n  <h1 v-if=\"show\">{{ msg }}</h1>\n</transition>\n```", "```js\n<script>\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      show: false\n    }\n  },\n  methods: {\n    beforeEnter() {\n      //...\n    },\n    enter() {\n      //...\n    },\n    leave() {\n      //...\n    }\n  }\n}\n</script>\n```", "```js\n    beforeEnter(el) {\n      el.style.opacity = 0;\n    },\n    enter(el, done) {\n      TweenMax.to(el, 2, {\n        opacity: 1,\n        fontSize: '20px',\n        onComplete: done\n      })\n    },\n    leave(el, done) {\n      const tl = new TimelineMax({\n        onComplete: done\n      });\n\n      tl.to(el, {rotation: -270,duration: 1, ease: \"elastic\"})\n        .to(el, {rotation: -360})\n        .to(el, {\n          rotation: -180,\n          opacity: 0\n        });\n    }\n```", "```js\nTimelineMax.to(<element>, <effect properties>, <time position>)\nTweenMax.to(<element>, <effect properties>, <time position>)\n```", "```js\n<transition\n      @before-enter=\"beforeEnter\"\n      @enter=\"enter\"\n      @leave=\"leave\"\n      :css=\"false\"\n    >\n      <h1 v-if=\"show\">{{ msg }}</h1>\n```", "```js\n    <template>\n      <div>\n        <div class=\"editor--wrapper\">\n          <textarea ref=\"textArea\" class=\"editor\">\n          </textarea>\n          <button @click=\"onSendClick()\" class=\"editor--submit\">\n          Submit</button>\n        </div>\n        <section v-if=\"message\" class=\"message--display\">\n          <h4>Your saved message: </h4>\n          <span>{{message}}</span>\n        </section>\n      </div>\n    </template>\n    ```", "```js\n    <transition name=\"slide-right\">\n          <section v-if=\"message\" class=\"message--display\">\n            <h4>Your saved message: </h4>\n            <span>{{message}}</span>\n          </section>\n        </transition>\n    ```", "```js\n    <script>\n    export default {\n      data() {\n        return {\n          message: ''\n        }\n      },\n      methods: {\n        onSendClick() {\n          const message = this.$refs.textArea.value;\n          this.message = message;\n          this.$refs.textArea.value = '';\n        }\n      }\n    }\n    </script>\n    ```", "```js\n    <style scoped>\n    @keyframes slide-right {\n      100% {\n        transform: translateX(0)\n      }\n    }\n    </style>\n    ```", "```js\n    .slide-right {\n      animation: 1s slide-right 1s forwards;\n      transform:translateX(-100%);\n      transition: border-top 2s ease;\n    }\n    .slide-left {\n      animation: 1s slide-right 1s reverse;\n      transform:translateX(-100%);\n    }\n    ```", "```js\n    .slide-right-enter {\n      border-top: 0;\n    }\n    ```", "```js\n    <transition\n          name=\"slide-right\"\n          enter-active-class=\"slide-right\"\n          leave-active-class=\"slide-left\"\n        >\n    Add CSS stylings using CSS Flexbox to make the editor look nice:\n    .editor--wrapper {\n      display: flex;\n      flex-direction: column;\n    }\n    .editor {\n      align-self: center;\n      width: 200px;\n    }\n    .editor--submit {\n      margin: 0.5rem auto;\n      width: 50px;\n      align-self: center;\n    }\n    .message--display {\n      margin-top: 1rem;\n      border-top: 1px solid lightgray;\n    }\n    ```", "```js\n<transition-group name=\"fade\">\n  <p v-for=\"message in messages\" :key=\"message\" v-show=\"show\">\n    {{message}}\n  </p>\n</transition-group>\n```", "```js\n.fade-enter-active, .fade-leave-active {\n  transition: all 2s;\n}\n.fade-enter, .fade-leave-active {\n  opacity: 0;\n  transform: translateX(30px);\n}\n```", "```js\n<transition-group\n  name=\"fade\"\n  tag=\"div\"\n>\n  <p v-for=\"message in messages\" :key=\"message\" v-show=\"show\">\n      {{message}}\n  </p>\n</transition-group>\n```", "```js\n.fade-move {\n  transition: transform 2s ease-in;\n}\n```", "```js\n<transition-group\n    appear=\"true\"\n    tag=\"div\"\n>\n    <p v-for=\"message in messages\" :key=\"message\">{{message}}</p>\n</transition-group>\n```", "```js\n<transition-group\n  appear=\"true\"\n  appear-class=\"fade-enter\"\n  appear-active-class=\"fade-enter-active\"\n  tag=\"div\"\n>\n  <p v-for=\"message in messages\" :key=\"message\">{{message}}</p>\n</transition-group>\n```", "```js\n    <transition-group\n          appear\n          name=\"flip\"\n          tag=\"div\"\n        >\n          <p v-for=\"message in messages\" :key=\"message\"\n      class=\"message--item\"\n          >{{message}}</p>\n        </transition-group>\n    ```", "```js\n    <style scoped>\n      .flip-enter, .flip-leave-to {\n        opacity: 0;\n        transform: translateY(20px);\n      }\n    </style>\n    ```", "```js\n    .message--item {\n      transition: all 2s;\n    }\n    ```", "```js\n    .flip-leave-active {\n      position: absolute;\n    }\n    .flip-move {\n      transition: transform 1s;\n    }\n    ```", "```js\n    <button @click=\"sorting()\">Sort A-Z</button>\n    <button @click=\"sorting(true)\">Sort Z-A</button>\n    <button @click=\"shuffle()\">Shuffle</button>\n    ```", "```js\n    export default {\n      data() {\n        return {\n          messages: [\n            'Hello, how are you?',\n            'The weather is nice',\n            'This is message feed',\n            'And I am the fourth message',\n            'Chapter 7 is fun',\n            'Animation is super awesome',\n            'Sorry, I didn't know you called',\n            'Be patient, animation comes right up'\n          ],\n          show: false\n        }\n      },\n    }\n    ```", "```js\n      methods: {\n        sorting(isDescending) {\n          this.messages.sort();\n          if (isDescending) { this.messages.reverse(); }\n        },\n        shuffle() {\n          this.messages.sort(() => Math.random() - 0.5);\n        }\n      }\n    ```", "```js\n<transition\n  name=\"zoom\"\n  mode=\"out-in\"\n>\n  <router-view/>\n</transition>\n```", "```js\n/**Zoom animation **/\n.zoom-enter-active,\n.zoom-leave-active {\n  animation-duration: 0.3s;\n  animation-fill-mode: both;\n  animation-name: zoom;\n}\n.zoom-leave-active {\n  animation-direction: reverse;\n}\n@keyframes zoom {\n  from {\n    opacity: 0;\n    transform: scale3d(0.4, 0.4, 0.4);\n  }\n 100% {\n    opacity: 1;\n }\n}\n```", "```js\n        <transition :name=\"transition\" :mode=\"mode\">\n          <router-view/>\n        </transition>\n    ```", "```js\n      data() {\n        return {\n          transition: 'fade',\n          mode: 'out-in',\n        };\n      },\n    ```", "```js\n    <style>\n      .fade-enter, .fade-leave-to {\n        opacity: 0;\n      }\n      .fade-enter-active, .fade-leave-active {\n        transition: opacity 1s ease-in;\n      }\n    </style>\n    ```", "```js\n    /**Zoom animation */\n    .zoom-enter-active,\n    .zoom-leave-active {\n      animation-duration: 0.5s;\n      animation-fill-mode: both;\n      animation-name: zoom;\n    }\n    .zoom-leave-active {\n      animation-direction: reverse;\n    }\n    @keyframes zoom {\n     from {\n        opacity: 0;\n        transform: scale3d(0.4, 0.4, 0.4);\n     }\n      100% {\n        opacity: 1;\n      }\n    }\n    ```", "```js\n    #app {\n      font-family: 'Avenir', Helvetica, Arial, sans-serif;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n      text-align: center;\n      color: #2c3e50;\n    }\n    #nav {\n      padding: 30px;\n    }\n    #nav a {\n      font-weight: bold;\n      color: #2c3e50;\n    }\n    #nav a.router-link-exact-active {\n      color: #42b983;\n    }\n    ```", "```js\n      {\n        path: '/messages',\n        name: 'messages',\n        meta: {\n          transition: 'zoom',\n        },\n        component: () => import(/* webpackChunkName: \"about\" */       '../views/Messages.vue')\n      }\n    ```", "```js\n    const routes = [\n      {\n        path: '/',\n        name: 'home',\n        component: Home\n      },\n      {\n        path: '/about',\n        name: 'about',\n        component: () => import(/* webpackChunkName: \"about\" */       '../views/About.vue')\n      },\n      {\n        path: '/messages',\n        name: 'messages',\n        meta: {\n          transition: 'zoom',\n        },\n        component: () => import(/* webpackChunkName: \"messages\" */       '../views/Messages.vue')\n      }\n    ]\n    ```", "```js\n    created() {\n        this.$router.beforeEach((\n          to, // The destination route\n          from, //The source route\n          next //The function to trigger to resolve the hook\n        ) => {\n          let transition = 'fade';\n          if (to.meta && to.meta.transition) {\n            transition = to.meta.transition;\n          }\n          this.transition = transition;\n          next();\n        })\n      }\n    ```", "```js\n    yarn serve\n    ```", "```js\nyarn add gsap\n#or\nnpm install gsap\n```", "```js\ngsap.to(el, {duration: 3, opacity: 1, onComplete: done});\n```", "```js\ngsap.to(\".green\", {duration: 3, x: 500, rotation: 360});\n```", "```js\ngsap.from(\".red\", {duration: 3, x: 300, scale: 0.5, opacity: 0});\n```", "```js\ngsap.fromTo(target, fromValues, toValues)\n```", "```js\ngsap.fromTo(\".grey\",\n    { duration: 3, opacity: 0, scale: 0.5, x: 600 },\n    { duration: 3, opacity: 1, scale: 1, x: 200, rotation: 360}\n  )\n```", "```js\n    vue create Exercise7.04\n    ```", "```js\n    yarn add gsap\n    # OR\n    npm install gsap\n    ```", "```js\n    import gsap from 'gsap'\n    ```", "```js\n    <img ref=\"logo\" alt=\"Vue logo\" src=\"img/logo.png\">\n    ```", "```js\n      mounted() {\n        const { logo } = this.$refs;\n        gsap.to(logo, {duration: 30, rotation: 3600});\n      }\n    ```", "```js\ngsap.from(\".bubble\", 2, {\n      scale: 0.2,\n      rotation: 16,\n      ease: \"bounce\",\n    })\n```", "```js\ngsap.to(\".bubble\", 2, {\n      scale: 0.2,\n      rotation: 16,\n      ease: Back.easeOut.config(1.7),\n    })\n    gsap.to(\".bubble\", 4, {\n      scale: 1.2,\n      rotation: '-=16',\n      ease: Elastic.easeOut.config(2.5, 0.5),\n    })\n```", "```js\ngsap.to('.stagger-box', 2, {\n      scale: 0.1,\n      y: 60,\n      yoyo: true,\n      repeat: 1,\n      ease: Power1.inOut,\n      delay:1,\n      stagger: {\n        amount: 1.5,\n        grid: \"auto\",\n        from: \"center\"\n      }\n    })\n```", "```js\nimport { TimelineMax } from 'gsap';\nconst tl = new TimelineMax({\n  onComplete: done\n})\n//OR\nconst tl = gsap.timeline();\n```", "```js\nvar tl = gsap.timeline({ repeat: -1});\n      tl.to(\"#box-green\", {duration: 2, x: 550})\n      //1 second after end of timeline (gap)\n      tl.to(\"#box-red\", {duration: 2, x: 550, scale: 0.5}, \"+=1\")\n      //0.5 seconds before end of timeline (overlap)\n      tl.to(\"#box-purple\", {duration: 2, rotation: 360, x:550,         scale: 1.2, ease: \"bounce\"}, \"-=1\")\n```", "```js\nvar tl = gsap.timeline({ defaults: { duration: 2 }, repeat: -1});\ntl.to(\"#box-green\", { x: 550 })\n  .to(\"#box-red\", { scale: 0.5, x: 450 })\n  .to(\"#box-purple\", { scale: 1.2, ease: \"bounce\", x: 500 })\n```", "```js\ntl.to(\"#box-green\", { x: 550 })\n  .to(\"#box-red\", { scale: 0.5, x: 450 }, \"+=1\")\n  .to(\"#box-purple\", { scale: 1.2, ease: \"bounce\", x: 500 }, \"-=1\")\n```"]