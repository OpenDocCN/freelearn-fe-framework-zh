["```js\nimport React from \"react\";\n\nclass PageAdmin extends React.Component {\n    render() {\n        return <ol>...page objects</ol>;\n    }\n}\n\nexport default PageAdmin;\n```", "```js\nclass Backend {\n    getAll() {\n        // ...returns an array of pages\n    }\n\n    update(id, property, value) {\n        // ...updates a page\n    }\n\n    delete(id) {\n        // ...deletes a page\n    }\n}\n```", "```js\nvar backend = new Backend();\n\nReactDOM.render(\n    <PageAdmin backend={backend} />,\n    document.querySelector(\".react\")\n);\n```", "```js\nclass PageAdmin extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            \"pages\": []\n        };\n    }\n\n    componentWillMount() {\n        this.setState({\n \"pages\": this.props.backend.getAll()\n });\n    }\n\n    render() {\n        return <ol>\n            {this.state.pages.map(function(page) {\n return <li key={page.id}>a new page</li>\n })}\n        </ol>;\n    }\n}\n```", "```js\nimport React from \"react\";\n\nclass Page extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n \"isEditing\": false\n };\n    }\n\n    render() {\n if (this.state.isEditing) {\n return <PageEditor />;\n }\n\n return <PageView />;\n    }\n}\n\nexport default Page;\n```", "```js\nimport React from \"react\";\n\nclass PageEditor extends React.Component {\n    render() {\n        return <form>\n            <input type=\"text\" name=\"title\" />\n            <textarea name=\"body\"></textarea>\n            <button>back</button>\n        </form>;\n    }\n}\n\nexport default PageEditor;\n```", "```js\nimport React from \"react\";\n\nclass PageView extends React.Component {\n    render() {\n        return <div>\n            {this.props.title}\n            <button>edit</button>\n            <button>delete</button>\n        </div>;\n    }\n}\n\nexport default PageView;\n```", "```js\nrender() {\n    return <ol>\n        {this.state.pages.map(function(page) {\n            return <li key={page.id}>\n                <Page {...page} />\n            </li>;\n        })}\n    </ol>;\n}\n```", "```js\nrender() {\n    if (this.state.isEditing) {\n        return <PageEditor {...this.props} />;\n    }\n\n    return <PageView {...this.props} />;\n}\n```", "```js\nclass Page extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n \"isEditing\": false\n };\n    }\n\n    render() {\n        if (this.state.isEditing) {\n            return <PageEditor\n                {...this.props}\n                onCancel={this.onCancel.bind(this)}\n                />;\n        }\n\n        return <PageView\n            {...this.props}\n            onPageEdit={this.onEdit.bind(this)}\n            />;\n    }\n\n    onEdit() {\n this.setState({\n \"isEditing\": true\n });\n }\n\n onCancel() {\n this.setState({\n \"isEditing\": false\n });\n }\n}\n```", "```js\nclass PageEditor extends React.Component {\n    render() {\n        return <form>\n            <input type=\"text\" name=\"title\" />\n            <textarea name=\"body\"></textarea>\n            <button>save</button>\n            <button\n                onClick={this.onCancel.bind(this)}\n                >back</button>\n        </form>;\n    }\n\n    onCancel(event) {\n        event.preventDefault();\n        this.props.onCancel();\n    }\n}\n```", "```js\nclass PageView extends React.Component {\n    render() {\n        return <div>\n            {this.props.title}\n            <button\n                onClick={this.props.onEdit}\n                >edit</button>\n            <button>delete</button>\n        </div>;\n    }\n}\n```", "```js\nimport React from \"react\";\n\nclass Component extends React.Component {\n    bind(...methods) {\n        methods.map(\n            method => this[method] = this[method].bind(this)\n        )\n    }\n}\n\nexport default Component;\n```", "```js\nimport Component from \"component\";\n\nclass PageView extends Component {\n    constructor(props) {\n        super(props);\n\n        this.bind(\n \"onDelete\"\n );\n    }\n\n    render() {\n        return <div>\n            {this.props.title}\n            <button\n                onClick={this.props.onEdit}\n                >edit</button>\n            <button\n                onClick={this.onDelete}\n                >delete</button>\n        </div>;\n    }\n\n    onDelete() {\n this.props.onDelete(\n this.props.id\n );\n }\n}\n```", "```js\nimport Component from \"component\";\n\nclass PageEditor extends Component {\n    constructor(props) {\n        super(props);\n\n        this.bind(\n\"onCancel\",\n \"onUpdate\"\n );\n    }\n\n    render() {\n        return <form>\n            <input\n                type=\"text\"\n                name=\"title\"\n                value={this.props.title}\n onChange={this.onUpdate}\n               />\n           <textarea\n               name=\"body\"\n               value={this.props.body}\n onChange={this.onUpdate}>\n </textarea>\n            <button\n                onClick={this.onCancel}>\n                cancel\n            </button>\n        </div>;\n    }\n\n onUpdate() {\n this.props.onUpdate(\n this.props.id,\n event.target.name,\n event.target.value\n );\n }\n\n onCancel(event) {\n event.preventDefault();\n this.props.onCancel();\n }\n}\n```", "```js\nimport Component from \"component\";\n\nclass PageAdmin extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            \"pages\": []\n        };\n\n this.bind(\n \"onUpdate\",\n \"onDelete\"\n );\n    }\n\n    componentWillMount() {\n        this.setState({\n            \"pages\": this.props.backend.getAll()\n        });\n    }\n\n    render() {\n        return <ol>\n            {this.state.pages.map(function(page) {\n                return <li key={page.id}>\n                    <Page\n                        {...page}\n                        onUpdate={this.onUpdate}\n                        onDelete={this.onDelete}\n                        />\n                </li>;\n            })}\n        </ol>;\n    }\n\n    onUpdate(...params) {\n this.props.backend.update(...params);\n }\n\n onDelete(...params) {\n this.props.backend.delete(...params);\n }\n}\n```", "```js\nclass Backend {\n    constructor() {\n        this.deleted = [];\n this.updates = [];\n\n this.pages = [\n {\n \"id\": 1,\n \"title\": \"Home\",\n \"body\": \"...\"\n },\n {\n \"id\": 2,\n \"title\": \"About Us\",\n \"body\": \"...\"\n },\n {\n \"id\": 3,\n \"title\": \"Contact Us\",\n \"body\": \"...\"\n },\n {\n \"id\": 4,\n \"title\": \"Products\",\n \"body\": \"...\"\n }\n ];\n    }\n\n    getAll() {\n        return this.pages\n .filter(page => {\n return this.deleted.indexOf(page.id) == -1\n })\n .map(page => {\n var modified = page;\n\n this.updates.forEach((update) => {\n if (update[0] == page.id) {\n modified[update[1]] = update[2];\n }\n });\n return modified;\n });\n    }\n\n    update(id, property, value) {\n        this.updates.push([id, property, value]);\n    }\n\n    delete(id) {\n        this.deleted.push(id);\n    }\n}\n```", "```js\nclass PageEditor extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            \"changed\": false\n        };\n\n        this.bind(\n            \"onCancel\",\n            \"onUpdate\"\n        );\n    }\n\n    isChanged(next, previous) {\n return JSON.stringify(next) !== JSON.stringify(previous)\n }\n\n componentWillReceiveProps(props) {\n this.setState({\n \"changed\": this.isChanged(props, this.props)\n });\n }\n\n    render() {\n        return <div>\n            <input\n                type=\"text\"\n                name=\"title\"\n                value={this.props.title}\n                onChange={this.onUpdate}\n                />\n            <textarea\n                name=\"body\"\n                value={this.props.body}\n                onChange={this.onUpdate}>\n            </textarea>\n            <button\n                onClick={this.onCancel}>\n                cancel\n            </button>\n        </div>;\n    }\n\n    onUpdate() {\n        this.props.onUpdate(\n            this.props.id,\n            event.target.name,\n            event.target.value\n        );\n    }\n\n onCancel(event) {\n event.preventDefault();\n this.props.onCancel();\n }\n}\n```", "```js\nclass PageView extends Component {\n    constructor(props) {\n        super(props);\n\n        this.bind(\n            \"onDelete\"\n        );\n    }\n\n    isChanged(next, previous) {\n return JSON.stringify(next) !== JSON.stringify(previous)\n }\n\n shouldComponentUpdate(props, state) {\n return this.isChanged(props, this.props);\n }\n\n    render() {\n        return <div>\n            {this.props.title}\n            <button\n                onClick={this.props.onEdit}\n                >edit</button>\n            <button\n                onClick={this.onDelete}\n                >delete</button>\n        </div>;\n    }\n\n    onDelete() {\n        this.props.onDelete(\n            this.props.id\n        );\n    }\n}\n```"]