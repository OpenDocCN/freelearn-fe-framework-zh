["```js\n\"typecheck\": \"tsc --noEmit\",\n\"lint\": \"eslint ./src\",\n\"prettier\": \"prettier ./src --check\",\n```", "```js\nname: Check files on push\non: push\njobs:\n  run-checks:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - name: install modules\n        run: npm install\n      - name: run typecheck\n        run: npm run typecheck\n      - name: run prettier check for code styling\n        run: npm run prettier\n      - name: run eslint check for code errors\n        run: npm run lint\n```", "```js\nname: Check files on push alternative\non: push\njobs:\n  typecheck:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - uses: actions/setup-node@v2\n        with:\n          node-version: '14'\n      - uses: actions/cache@v2\n        id: npm-cache\n        with:\n          path: '**/node_modules'\n          key: ${{ runner.os }}-node-${{\n               hashFiles('**/package-lock.json') }}\n      - name: Install dependencies if not cached\n        if: steps.npm-cache.outputs.cache-hit != 'true'\n        run: npm install\n      - name: run typecheck\n        run: npm run typecheck\n  prettier:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - uses: actions/setup-node@v2\n        with:\n          node-version: '14'\n      - uses: actions/cache@v2\n        id: npm-cache\n        with:\n          path: '**/node_modules'\n          key: ${{ runner.os }}-node-${{\n               hashFiles('**/package-lock.json') }}\n      - name: Install dependencies if not cached\n        if: steps.npm-cache.outputs.cache-hit != 'true'\n        run: npm install\n      - name: run prettier check for code styling\n        run: npm run prettier\n  lint:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - uses: actions/setup-node@v2\n        with:\n          node-version: '14'\n      - uses: actions/cache@v2\n        id: npm-cache\n        with:\n          path: '**/node_modules'\n          key: ${{ runner.os }}-node-${{\n               hashFiles('**/package-lock.json') }}\n      - name: Install dependencies if not cached\n        if: steps.npm-cache.outputs.cache-hit != 'true'\n        run: npm install\n      - name: run eslint check for code errors\n        run: npm run lint\n```", "```js\n  ios-release-build:\n    steps:\n    - activate-ssh-key@4:\n        run_if: '{{getenv \"SSH_RSA_PRIVATE_KEY\" | ne \"\"}}'\n    - git-clone@4: {}\n    - npm@1:\n        inputs:\n        - command: install\n    - cocoapods-install@2: {}\n    - script@1:\n        inputs:\n        - content: |-\n            cd scripts\n            bash getTranslationsCrowdin.sh\n    - set-ios-info-plist-unified@1:\n        inputs:\n        - bundle_version: „$VERSION_NUMBER_IOS\"\n        - info_plist_file: \"$BITRISE_SOURCE_DIR_PLIST\"\n    - manage-ios-code-signing@1:\n    - xcode-archive@4.3:\n        inputs:\n        - project_path: \"$BITRISE_PROJECT_PATH\"\n        - distribution_method: app-store\n        - export_method: app-store\n    - deploy-to-itunesconnect-deliver@2:\n```"]