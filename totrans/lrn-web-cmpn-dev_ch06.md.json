["```js\nbower install react\n\n```", "```js\n<script src=\"img/strong>\"></script>\n<script src=\"img/strong>\"></script>\n```", "```js\n<script src=\"img/strong>\"></script>\n<script src=\"img/strong>\"></script>\n```", "```js\nvar reactElement = React.createElement(type, properties, children);\n\n```", "```js\nReact.render(reactElement, targetDOMNode)\n\n```", "```js\n<!DOCTYPE html>\n<html>\n<head lang=\"en\">\n    <meta charset=\"UTF-8\">\n    <title>ReactJS Without JSX Demo</title>\n    <script src=\"img/strong>\"></script>\n    <style>\n .headerStyle{\n color: red;\n }\n    </style>\n</head>\n<body>\n    <script>\n var helloMessage = React.createElement('h1',\n { className: 'headerStyle' }, 'Hello ReactJS');\n React.render(helloMessage, document.body);\n    </script>\n</body>\n</html>\n```", "```js\n<script type=\"text/jsx\">\n   //JSX code goes here\n</script>\n```", "```js\nReact.createClass(objectSpecification)\n\n```", "```js\n<!DOCTYPE html>\n<html>\n<head lang=\"en\">\n    <meta charset=\"UTF-8\">\n    <title>ReactJS With JSX Demo</title>\n    <script src=\"img/strong>\"></script>\n    <script src=\"img/strong>\"></script>\n    <style>\n .headerStyle{\n color: red;\n }\n    </style>\n</head>\n<body>\n<script type=\"text/jsx\">\n var HelloMessage = React.createClass({\n render: function() {\n return (\n <h1 className=\"headerStyle\">\n Hello ReactJS\n </h1>\n );\n }\n });\n React.render(<HelloMessage/>, document.body);\n</script>\n</body>\n</html>\n```", "```js\nvar styleObject={\n styleAttribute: \"styleValue\",\n };\n\n```", "```js\n<!DOCTYPE html>\n<html>\n<head lang=\"en\">\n    <meta charset=\"UTF-8\">\n    <title>ReactJS inline style demo</title>\n    <script src=\"img/react.js\"></script>\n    <script src=\"img/JSXTransformer.js\"></script>\n</head>\n<body>\n<script type=\"text/jsx\">\n var messageStyle={\n color: \"red\",\n border:\"1px solid grey\",\n boxShadow:\"2px 2px 2px lightGrey\",\n padding: \"20px\",\n width: \"200px\"\n },\n        GoodMorning = React.createClass({\n            render: function() {\n                return (\n                  <div style={messageStyle}>\n                    Good Morning Developers\n                  </div>\n                );\n            }\n    });\n    React.render(<GoodMorning/>, document.body);\n</script>\n</body>\n</html>\n```", "```js\n<!DOCTYPE html>\n<html>\n<head lang=\"en\">\n    <meta charset=\"UTF-8\">\n    <title>ReactJS Event Demo</title>\n    <script src=\"img/react.js\"></script>\n    <script src=\"img/JSXTransformer.js\"></script>\n</head>\n<body>\n<script type=\"text/jsx\">\n    var SayHello = React.createClass({\n helloHandler: function(event){\n alert(\"Hello Developers\");\n },\n        render: function() {\n            return (\n              <button onClick = {this.helloHandler}>\nClick Me\n  </button>\n            );\n        }\n    });\n    React.render(<SayHello/>, document.body);\n</script>\n</body>\n</html>\n```", "```js\n<!DOCTYPE html>\n<html>\n<head lang=\"en\">\n    <meta charset=\"UTF-8\">\n    <title> ReactJS NonDOM Attribute Demo </title>\n    <script src=\"img/react.js\"></script>\n    <script src=\"img/JSXTransformer.js\"></script>\n</head>\n<body>\n<script type=\"text/jsx\">\n    var StudentsReport = React.createClass({\n        render: function() {\n            var studentDetails = {\n                headerHTML:{\n __html: \"<i>Student List</i>\"\n },\n                subject:\"Mathematics\",\n                list: [\n                    {roll:123, name:\"Sandeep\"},\n                    {roll:124, name:\"Surabhi\"}\n                ]\n            };\n            return (\n              <div>\n                <h1 dangerouslySetInnerHTML={studentDetails.headerHTML}>\n </h1>\n <h3 ref=\"subjectName\">{studentDetails.subject}</h3>\n                <ol>\n                {studentDetails.list.map(function(student) {\n                    return <li key={student.roll}>{student.name}</li>;\n                })}\n                </ol>\n                  <button onClick={this.logSubject}>Log Subject</button>\n              </div>\n            );\n        },\n      logSubject: function(event){\n console.log(\"Subject React Element: \",this.refs.subjectName);\nconsole.log(\"Subject DOM Element: \",this.refs.subjectName.getDOMNode());\n        }\n    });\n    React.render(<StudentsReport />, document.body);\n</script>\n</body>\n</html>\n```", "```js\n    <h1 dangerouslySetInnerHTML={studentDetails.headerHTML}>\n    </h1>\n\n    ```", "```js\n    <ol>\n      {studentDetails.list.map(function(student) {\n     return <li key={student.roll}>{student.name}</li>;\n     })}\n    </ol>\n    ```", "```js\n        this.refs.subjectName\n\n        ```", "```js\n        this.refs.subjectName.getDOMNode()\n\n        ```", "```js\n<script type=\"text/jsx\">\n    var Welcome = React.createClass({\n        getDefaultProps: function(){\n            console.log(\"inside getDefaultProps method\");\n            return{\n                myName:\"Sandeep\"\n            };\n        }, getInitialState:function(){\n            console.log(\"inside getInitialState method\");\n            return null;\n        },componentWillMount:function(){\n            console.log(\"inside componentWillMount method\");\n        },componentDidMount:function(){\n            console.log(\"inside componentDidMount method\");\n        },render: function() {\n            console.log(\"inside render method\");\n            return (\n <div>\n <h1>Welcome {this.props.myName}</h1>\n <button onClick={this.changeName}>\n Change myName to John\n </button>\n <button onClick={this.removeHandler}>\n Remove Welcome Element\n </button>\n </div>\n            );\n        },componentWillReceiveProps:function(){\n           console.log(\"inside componentWillReceiveProps method\");\n        },shouldComponentUpdate:function(){\n            console.log(\"inside shouldComponentUpdate method\");\n            return true;\n        },componentWillUpdate:function(){\n            console.log(\"inside componentWillUpdate method\");\n        },componentDidUpdate:function(){\n            console.log(\"inside componentDidUpdate method\");\n        },componentWillUnmount:function(){\n            console.log(\"inside componentWillUnmount method\");\n        },changeName:function(){\n            this.setProps({myName :\"John\"})\n        },removeHandler: function(){\n            var thisElement = this.getDOMNode();\n            this.unmountComponent(thisElement);\n        }\n    });React.render(<Welcome/>, document.body);\n</script>\n```", "```js\n<script type=\"text/jsx\">\n    var StudentResult = React.createClass({\n        getInitialState: function(){\n            return{\n                result:\" \"\n            };\n        },\n        calculateResult: function(){\n            var refScore = this.refs.studentScore.getDOMNode().value,\n                score = parseInt(refScore,10);\n            if(score > 30){\n                this.setState({result: \"PASS\"})\n            }else if(score < 30){\n                this.setState({result: \"FAIL\"})\n            }else{\n                this.setState({result:\"\"})\n            }\n        },\n        render: function() {\n            return (\n             <div className=\"score-container\">\n                <input type=\"number\" ref=\"studentScore\"\n                       onChange={this.calculateResult}\n                       placeholder=\"Enter student score\"/>\n                 <h2>Result :{this.state.result}</h2>\n             </div>\n            );\n        }\n    });\n    React.render(<StudentResult/>, document.body);\n</script>\n```", "```js\nnpm install -g react-tools\n\n```", "```js\nvar ShowDate = React.createClass({\n    getDefaultProps: function(){\n        return{\n            today: new Date().toDateString()\n        };\n    },\n    render: function() {\n        return (\n            <h1>\n            Today: {this.props.today}\n            </h1>\n        );\n    }\n});\nReact.render(<ShowDate/>, document.body);\n```", "```js\njsx dev production --no-cache-dir\n\n```", "```js\nvar ShowDate = React.createClass({\n displayName: \"ShowDate\",\n    getDefaultProps: function(){\n        return{\n            today: new Date().toDateString()\n        };\n    },\n    render: function() {\n        return (\n            React.createElement(\"h1\", null, \n            \"Today: \", this.props.today\n            )\n        );\n    }\n});\nReact.render(React.createElement(ShowDate, null), document.body);\n```", "```js\n<!DOCTYPE html>\n<html>\n<head lang=\"en\">\n    <meta charset=\"UTF-8\">\n    <title>ReactJS precompilation demo</title>\n    <script src=\"img/react.js\"></script>\n</head>\n<body>\n<script src=\"img/react-date.js\"></script>\n</body>\n</html>\n```", "```js\njsx --watch dev production\n\n```", "```js\n<script type=\"text/jsx\">\n    var TsClock = React.createClass({\n        getDefaultProps: function(){\n            return{\n                hour: \"HH\",\n                minute: \"MM\",\n                second: \"SS\"\n            };\n        },\n        render: function() {\n            return (\n              <div className=\"clock\">\n                  <div className=\"hour\">\n{this.props.hour}\n  </div>\n                  <div className=\"minute\">\n{this.props.minute}\n  </div>\n                  <div className=\"second\">\n{this.props.second}\n  </div>\n              </div>\n            );\n        },\n        updateClock: function(){\n            var clock = new Date();\n            this.setProps({\n                hour : clock.getHours(),\n                minute: clock.getMinutes(),\n                second: clock.getSeconds()\n            });\n        },\n        componentDidMount: function(){\n            window.setInterval(this.updateClock, 1000);\n        }\n    });\n    React.render(<TsClock/>, document.body);\n</script>\n```", "```js\n  <style>\n        .clock {\n            display: inline-flex;\n            justify-content: space-around;\n            background: floralwhite;\n            font-size: 2rem;\n            font-family: serif;\n        }\n        .clock .hour,\n        .clock .minute,\n        .clock .second {\n            color: tomato;\n            padding: 1.5rem;\n            text-shadow: 0px 1px grey;\n        }\n  </style>\n```"]