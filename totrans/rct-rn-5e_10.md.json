["```js\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nexport default function MyApp() {\n  const textStyle = {\n    backgroundColor: \"#cfe8fc\",\n    margin: 1,\n    textAlign: \"center\",\n  };\n  return (\n    <>\n      <Container maxWidth=\"sm\">\n        <Typography sx={textStyle}>sm</Typography>\n      </Container>\n      <Container maxWidth=\"md\">\n        <Typography sx={textStyle}>md</Typography>\n      </Container>\n      <Container maxWidth=\"lg\">\n        <Typography sx={textStyle}>lg</Typography>\n      </Container>\n    </>\n  );\n} \n```", "```js\nconst headerFooterStyle = {\n  textAlign: \"center\",\n  height: 50,\n};\nconst mainStyle = {\n  textAlign: \"center\",\n  padding: \"8px 16px\",\n};\nconst Item = styled(Paper)(() => ({\n  height: \"100%\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\nexport default function App() {\n  return (\n    <Grid container spacing={2} sx={{ backgroundColor: \"#F3F6F9\" }}>\n      <Grid xs={12}>\n        <Item sx={headerFooterStyle}>\n          <Typography sx={mainStyle}>Header</Typography>\n        </Item>\n      </Grid>\n      <Grid xs=\"auto\">\n        <Item>\n          <Stack spacing={1}>\n            <Typography sx={mainStyle}>Nav Item 1</Typography>\n            <Typography sx={mainStyle}>Nav Item 2</Typography>\n            <Typography sx={mainStyle}>Nav Item 3</Typography>\n            <Typography sx={mainStyle}>Nav Item 4</Typography>\n          </Stack>\n        </Item>\n      </Grid>\n      <Grid xs>\n        <Item>\n          <Typography sx={mainStyle}>Main content</Typography>\n        </Item>\n      </Grid>\n      <Grid xs={12}>\n        <Item sx={headerFooterStyle}>\n          <Typography sx={mainStyle}>Footer</Typography>\n        </Item>\n      </Grid>\n    </Grid>\n  );\n} \n```", "```js\n<Grid xs={12}>\n  <Item sx={headerFooterStyle}>\n    <Typography sx={mainStyle}>Header</Typography>\n  </Item>\n</Grid> \n```", "```js\n<Grid xs=\"auto\">\n  <Item>\n    <Stack spacing={1}>\n      <Typography sx={mainStyle}>Nav Item 1</Typography>\n      <Typography sx={mainStyle}>Nav Item 2</Typography>\n      <Typography sx={mainStyle}>Nav Item 3</Typography>\n      <Typography sx={mainStyle}>Nav Item 4</Typography>\n    </Stack>\n  </Item>\n</Grid> \n```", "```js\n<Grid xs>\n  <Item>\n    <Typography sx={mainStyle}>Main content</Typography>\n  </Item>\n</Grid> \n```", "```js\n<BrowserRouter>\n  <Button onClick={toggleDrawer}>Open Nav</Button>\n  <section>\n    <Routes>\n      <Route path=\"/first\" element={<First />} />\n      <Route path=\"/second\" element={<Second />} />\n      <Route path=\"/third\" element={<Third />} />\n    </Routes>\n  </section>\n  <Drawer open={open} onClose={toggleDrawer}>\n    <div\n      style={{ width: 250 }}\n      role=\"presentation\"\n      onClick={toggleDrawer}\n      onKeyDown={toggleDrawer}\n    >\n      <List component=\"nav\">\n        {links.map((link) => (\n          <NavLink\n            key={link.url}\n            to={link.url}\n            style={{ color: \"black\", textDecoration: \"none\" }}\n          >\n            {({ isActive }) => (\n              <ListItemButton selected={isActive}>\n                <ListItemText primary={link.name} />\n              </ListItemButton>\n            )}\n          </NavLink>\n        ))}\n      </List>\n    </div>\n  </Drawer>\n</BrowserRouter> \n```", "```js\n<Button onClick={toggleDrawer}>Open Nav</Button>\n<section>\n  <Routes>\n    <Route path=\"/first\" element={<First />} />\n    <Route path=\"/second\" element={<Second />} />\n    <Route path=\"/third\" element={<Third />} />\n  </Routes>\n</section> \n```", "```js\nconst [open, setOpen] = useState(false);\nconst toggleDrawer = ({ type, key }: { type?: string; key?: string }) => {\n  if (type === \"keydown\" && (key === \"Tab\" || key === \"Shift\")) {\n    return;\n  }\n  setOpen(!open);\n}; \n```", "```js\n<List component=\"nav\">\n  {links.map((link) => (\n    <NavLink\n      key={link.url}\n      to={link.url}\n      style={{ color: \"black\", textDecoration: \"none\" }}\n    >\n      {({ isActive }) => (\n        <ListItemButton selected={isActive}>\n          <ListItemText primary={link.name} />\n        </ListItemButton>\n      )}\n    </NavLink>\n  ))}\n</List> \n```", "```js\nconst links = [\n  { url: \"/first\", name: \"First Page\" },\n  { url: \"/second\", name: \"Second Page\" },\n  { url: \"/third\", name: \"Third Page\" },\n]; \n```", "```js\nexport default function App() {\n  return <RouterProvider router={router} />;\n}\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <RouteLayout />,\n    children: [\n      {\n        path: \"/page1\",\n        element: <Typography>Item One</Typography>,\n      }, // same routes for /page2 and /page3\n    ],\n  },\n]);\nfunction RouteLayout() {\n  const routeMatch = useRouteMatch([\"/\", \"/page1\", \"/page2\", \"/page3\"]);\n  const currentTab = routeMatch?.pattern?.path;\n  return (\n    <Box>\n      <Tabs value={currentTab}>\n        <Tab label=\"Item One\" component={Link} to=\"/page1\" value=\"/page1\" />\n        <Tab label=\"Item Two\" component={Link} to=\"/page2\" value=\"/page2\" />\n        <Tab label=\"Item Three\" component={Link} to=\"/page3\" value=\"/page3\" />\n      </Tabs>\n      <Outlet />\n    </Box>\n  );\n} \n```", "```js\nfunction useRouteMatch(patterns: readonly string[]) {\n  const { pathname } = useLocation();\n  for (let i = 0; i < patterns.length; i += 1) {\n    const pattern = patterns[i];\n    const possibleMatch = matchPath(pattern, pathname);\n    if (possibleMatch !== null) {\n      return possibleMatch;\n    }\n  }\n  return null;\n} \n```", "```js\nexport default function Checkboxes() {\n  const [checkbox, setCheckbox] = React.useState(false);\n  const [radio, setRadio] = React.useState(\"First\");\n  return (\n    <div>\n      <FormControlLabel\n        label={'Checkbox ${checkbox ? \"(checked)\" : \"\"}'}\n        control={\n          <Checkbox\n            checked={checkbox}\n            onChange={() => setCheckbox(!checkbox)}\n          />\n        }\n      />\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">{radio}</FormLabel>\n        <RadioGroup value={radio} onChange={(e) => setRadio(e.target.value)}>\n          <FormControlLabel value=\"First\" label=\"First\" control={<Radio />} />\n          <FormControlLabel value=\"Second\" label=\"Second\" control={<Radio />} />\n          <FormControlLabel value=\"Third\" label=\"Third\" control={<Radio />} />\n        </RadioGroup>\n      </FormControl>\n    </div>\n  );\n} \n```", "```js\nimport { useState } from \"react\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nexport default function MySelect() {\n  const [value, setValue] = useState<string | undefined>();\n  return (\n    <FormControl>\n      <InputLabel id=\"select-label\">My Select</InputLabel>\n      <Select\n        labelId=\"select-label\"\n        id=\"select\"\n        label=\"My Select\"\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n        inputProps={{ id: \"my-select\" }}\n      >\n        <MenuItem value=\"first\">First</MenuItem>\n        <MenuItem value=\"second\">Second</MenuItem>\n        <MenuItem value=\"third\">Third</MenuItem>\n      </Select>\n    </FormControl>\n  );\n} \n```", "```js\nexport default function MyTextInput() {\n  const [value, setValue] = useState(\"\");\n  return (\n    <TextField\n      label=\"Name\"\n      value={value}\n      onChange={(e) => setValue(e.target.value)}\n      margin=\"normal\"\n    />\n  );\n} \n```", "```js\ntype ButtonColor = \"primary\" | \"secondary\";\nexport default function App() {\n  const [color, setColor] = useState<ButtonColor>(\"secondary\");\n  const updateColor = () => {\n    setColor(color === \"secondary\" ? \"primary\" : \"secondary\");\n  };\n  return (\n    <Stack direction=\"row\" spacing={2}>\n      <Button variant=\"contained\" color={color} onClick={updateColor}>\n        Contained\n      </Button>\n      <Button color={color} onClick={updateColor}>\n        Text\n      </Button>\n      <Button variant=\"outlined\" color={color} onClick={updateColor}>\n        Outlined\n      </Button>\n      <IconButton color={color} onClick={updateColor}>\n        <AndroidIcon />\n      </IconButton>\n    </Stack>\n  );\n} \n```", "```js\nconst StyledButton = styled(Button)(({ theme }) => ({\n  \"&.MuiButton-root\": { margin: theme.spacing(1) },\n  \"&.MuiButton-contained\": { borderRadius: 50 },\n  \"&.MuiButton-sizeSmall\": { fontWeight: theme.typography.fontWeightLight },\n}));\nexport default function App() {\n  return (\n    <>\n      <StyledButton>First</StyledButton>\n      <StyledButton variant=\"contained\">Second</StyledButton>\n      <StyledButton size=\"small\" variant=\"outlined\">\n        Third\n      </StyledButton>\n    </>\n  );\n} \n```", "```js\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nconst theme = createTheme({\n  typography: {\n    fontSize: 11,\n  },\n  components: {\n    MuiMenuItem: {\n      styleOverrides: {\n        root: {\n          marginLeft: 15,\n          marginRight: 15,\n        },\n      },\n    },\n  },\n});\nexport default function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Menu anchorEl={document.body} open={true}>\n        <MenuItem>First Item</MenuItem>\n        <MenuItem>Second Item</MenuItem>\n        <MenuItem>Third Item</MenuItem>\n      </Menu>\n    </ThemeProvider>\n  );\n} \n```"]