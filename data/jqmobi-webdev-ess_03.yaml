- en: Chapter 3. Enhancing Pages with Headers, Footers, and Toolbars
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 3 章。通过标题、页脚和工具栏增强页面
- en: Toolbars provide a simple way to add navigation elements to a mobile web site.
    They can be especially useful for consistent, or site-wide navigation controls
    that users can always refer to when navigating through your application.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 工具栏提供了一种简单的方法来为移动网站添加导航元素。它们可以为用户始终可以在导航应用程序中浏览时参考的一致性或站点范围导航控件提供特别有用的功能。
- en: 'In this chapter, we will:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将：
- en: Talk about how to create both headers and footers
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 讨论如何同时创建标题和页脚
- en: Discuss how to turn these headers and footers into useful toolbars
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 讨论如何将这些标题和页脚转换为有用的工具栏
- en: Demonstrate how to create fixed positioned toolbars that always show up, no
    matter how large the content of a particular page is
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 演示如何创建固定定位的工具栏，无论页面的内容多大，它们都会始终显示出来
- en: Show an example of navigation bars
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 展示导航栏的示例
- en: Important preliminary points
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 重要的预备知识点
- en: As mentioned in the previous chapter, all of the code from this chapter is available
    via the ZIP file downloaded at Github. Most of the code samples in this chapter
    are short, therefore the complete code should be used when testing.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一章所述，本章的所有代码都可以通过在 Github 下载的 ZIP 文件中获得。本章中的大多数代码示例都很简短，因此在测试时应使用完整的代码。
- en: Adding headers
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加标题
- en: You've already worked with headers before, so the code will be familiar. In
    this chapter, we will study them deeper and demonstrate how to add additional
    functionality, like buttons, to your site headers.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 您之前已经使用过标题，所以代码会很熟悉。在本章中，我们将更深入地研究它们，并演示如何向您的站点标题添加其他功能，例如按钮。
- en: 'If you remember, a header can be defined by simply using a div with the appropriate
    role:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您记得，标题可以通过简单地使用具有适当角色的div来定义：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The previous tag will add a nice black background to the text making it stand
    out a bit more, as shown in the following screenshot:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 前一个标签将为文本添加漂亮的黑色背景，使其更加突出，如下面的截图所示：
- en: '![Adding headers](img/7263_03_01.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![添加标题](img/7263_03_01.jpg)'
- en: 'However, we can make this even nicer. By including an `h1` tag around our text,
    jQuery Mobile will make the header even larger, and automatically center the text,
    as shown in the screenshot following the tag:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，我们可以做得更好。通过在我们的文本周围包含一个`h1`标签，jQuery Mobile将使标题变得更大，并自动居中文本，如以下标签后面的截图所示：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![Adding headers](img/7263_03_02.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![添加标题](img/7263_03_02.jpg)'
- en: 'Right away you can see the difference. We can further add functionality to
    headers by adding buttons. Buttons could be used for navigation (for example,
    to return to the home screen), or to provide links to related pages. Because the
    center of the header is used for text, there are only two *spaces* available for
    buttons one to the left and one to the right. Buttons can be added simply by creating
    links in your header. The first link will be to the left of the text and the second
    link to the right. The following code snippet is an example:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 立即您就能看到差别。我们可以通过添加按钮进一步增加标题的功能。按钮可以用于导航（例如返回主屏幕），或提供到相关页面的链接。因为标题的中心用于文本，所以只有两个*空格*可用于左侧和右侧的按钮。您只需在标题中创建链接即可添加按钮。第一个链接将位于文本左侧，第二个链接将位于右侧。以下代码片段是一个示例：
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'When viewed in the mobile browser, you can see the following screenshot:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在移动浏览器中查看时，您将看到以下截图：
- en: '![Adding headers](img/7263_03_03.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![添加标题](img/7263_03_03.jpg)'
- en: 'Notice how the simpler links were automatically turned into big buttons, making
    them easier to use and more "control like" for the header. You may be wondering,
    what if you only want one button, and want it on the right-hand side? Removing
    the first button and keeping the second in place will not work, as shown in the
    following code snippet:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，更简单的链接会自动转换为大按钮，使它们更易于使用，并对标题更具“控制”性。您可能会想，如果您只想要一个按钮，并且希望它在右侧，该怎么办？删除第一个按钮并保留第二个不起作用，如下面的代码片段所示：
- en: '[PRE3]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The previous code snippet creates a button in the header but on the left-hand
    side. In order to position the button to the right, simply add the class `ui-btn-right`.
    The following code snippet is an example:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的代码片段在标题中创建了一个按钮，但位于左侧。为了将按钮定位到右侧，只需添加类`ui-btn-right`。以下代码片段是一个示例：
- en: '[PRE4]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You can also specify `ui-btn-left` to place a link on the left-hand side, but
    as demonstrated in the previous code snippet, that''s the normal behavior:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以指定`ui-btn-left`将链接放在左侧，但如前面的代码片段所示，那是正常的行为：
- en: '![Adding headers](img/7263_03_04.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![添加标题](img/7263_03_04.jpg)'
- en: Icon sneak peak
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图标预览
- en: 'While not specifically a header toolbar feature, one interesting feature available
    to all buttons in jQuery Mobile is the ability to specify an icon. A set of simple,
    easily recognizable icons ship with jQuery Mobile and are available to use immediately.
    These icons will be discussed further in [Chapter 6](../Text/ch06.html "Chapter 6. Working
    with Forms and jQuery Mobile"), *Creating Mobile Optimized Forms*, but as a quick
    preview, the following code snippet shows a header with two customized icons:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然不是特定的页眉工具栏功能，但 jQuery Mobile 中所有按钮都可以使用的一个有趣功能是指定一个图标。jQuery Mobile 随附了一组简单易识别的图标，并可立即使用。这些图标将在[第
    6 章](../Text/ch06.html "第 6 章。处理表单和 jQuery Mobile")中进一步讨论，*创建移动优化表单*，但是作为一个快速预览，以下代码片段显示了一个带有两个自定义图标的页眉：
- en: '[PRE5]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Notice the new attribute, `data-icon`. When viewed in the browser, you get
    what is shown in the following screenshot:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 注意新属性 `data-icon`。在浏览器中查看时，你会看到以下截图所示内容：
- en: '![Icon sneak peak](img/7263_03_05.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![图标预览](img/7263_03_05.jpg)'
- en: Working with back buttons
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理返回按钮
- en: Depending on your user's hardware, they may or may not have a physical back
    button. For devices that do, like Android phones, hitting the back button will
    work just fine in a jQuery Mobile application. Whatever page the user was on previously
    will be loaded as soon as the button is clicked. But on other devices, like the
    iPhone, there is no such button to click. While you can provide links to navigate
    around pages yourself, jQuery Mobile provides some nice built in support for navigating
    backwards out of the box.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 根据用户的硬件，他们可能有或者没有物理返回按钮。对于有返回按钮的设备，比如安卓手机，在 jQuery Mobile 应用中点击返回按钮会很好用。用户点击按钮后，之前所在的页面会立即加载。但是在其他设备上，比如
    iPhone，没有这样的按钮可以点击。虽然你可以提供链接自己导航到其他页面，但 jQuery Mobile 提供了一些很好的内置支持，可以直接向后导航。
- en: 'There are two ways you can add an automatic back button. `Listing 3-1` shows
    a simple, two page jQuery Mobile site. In the second page, we''ve added a new
    data attribute, `data-add-back-btn="true"`. This will create a back button in
    the header of the second page automatically. Next, we also added a simple link
    in the page content. While the actual URL for the link is blank, make note of
    the `data-rel="back"` attribute. jQuery Mobile will detect this link and automatically
    send the user to the previous page. The following code snippet is an example:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种方式可以添加自动返回按钮。 `清单 3-1` 显示了一个简单的、两个页面的 jQuery Mobile 网站。在第二个页面中，我们添加了一个新的数据属性
    `data-add-back-btn="true"`。这将在第二个页面的页眉中自动创建一个返回按钮。接下来，我们还在页面内容中添加了一个简单的链接。虽然链接的实际
    URL 是空白的，请注意 `data-rel="back"` 属性。jQuery Mobile 会检测到此链接，并自动将用户发送到上一页。以下代码片段是一个示例：
- en: '[PRE6]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The following screenshot demonstrates the feature in action:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图展示了该功能的运行方式：
- en: '![Working with back buttons](img/7263_03_06.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![处理返回按钮](img/7263_03_06.jpg)'
- en: 'In case you''re curious, the text of the button can be customized by simply
    using another data attribute in your page div: `data-add-back-btn="true" data-back-btn-text="Return"`.
    You can turn on back button support globally and change the text via JavaScript
    as well. This will be discussed in [Chapter 9](../Text/ch09.html "Chapter 9. Working
    with Events"), *JavaScript Configuration and Utilities in jQuery Mobile*.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你好奇，按钮的文本可以通过在页面 div 中简单使用另一个数据属性来自定义：`data-add-back-btn="true" data-back-btn-text="返回"`。你也可以通过
    JavaScript 全局地启用返回按钮支持并更改文本。这将在[第 9 章](../Text/ch09.html "第 9 章。处理事件")中讨论，*jQuery
    Mobile 中的 JavaScript 配置和实用工具*。
- en: Working with footers
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理页脚
- en: 'Footers are going to be, for the most part, much like headers. We''ve previously
    demonstrated the use of the data-role to create a footer:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 页脚在大部分情况下会与页眉类似。我们之前演示过使用 data-role 创建页脚：
- en: '[PRE7]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'But, as with our headers, if we add the proper HTML inside the div tag, we
    can get even better formatting:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，就像我们的标题一样，如果我们在 div 标签内添加适当的 HTML，我们可以获得更好的格式：
- en: '[PRE8]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'With the addition of the `h4` tags, our footers are now centered and padded
    a bit to make them stand out more, as shown in the following screenshot:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 添加了 `h4` 标签后，我们的页脚现在居中并且稍微填充，以使它们更加突出，如以下截图所示：
- en: '![Working with footers](img/7263_03_07.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![处理页脚](img/7263_03_07.jpg)'
- en: 'As with headers, you can include buttons in the footer. Unlike headers, the
    buttons in a footer do not automatically position themselves to the left and right
    of the text. In fact, if you decide to make use of text and buttons, you want
    to ensure you remove the `h4` tag from the footer text or your footer will end
    up quite large. The following is a simple example with two buttons:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 与页眉一样，您可以在页脚中包含按钮。与页眉不同，页脚中的按钮不会自动定位到文本的左右两侧。事实上，如果您决定使用文本和按钮，您需要确保从页脚文本中删除`h4`标签，否则您的页脚会变得相当大。以下是一个简单的示例，其中包含两个按钮：
- en: '[PRE9]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The following screen shot demonstrates this change:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图展示了这个变化：
- en: '![Working with footers](img/7263_03_08.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![操作页脚](img/7263_03_08.jpg)'
- en: 'This works - but notice the buttons don''t have much space around them. You
    can improve that by adding a class called `ui-bar` to your footer `div` tag, as
    shown in the following code snippet:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这是有效的 - 但请注意按钮周围的空间不多。您可以通过将一个称为`ui-bar`的类添加到页脚`div`标签中来改进，如下面的代码片段所示：
- en: '[PRE10]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![Working with footers](img/7263_03_09.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![操作页脚](img/7263_03_09.jpg)'
- en: Creating fixed and full screen headers and footers
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建固定和全屏页眉和页脚
- en: In the previous discussion about headers and footers, you saw a few examples
    of how buttons can be added. These buttons could be useful for navigating in your
    site. But what if a particular page is somewhat long? A blog entry, for example,
    could be quite long, especially when viewed on a mobile device. As the user scrolls,
    the header, or footer, could be off screen. jQuery Mobile provides a way to create
    fixed position headers and footers. With this feature enabled, the header and
    footer will always be visible. They may disappear while the user scrolls, but
    as soon as they lift their finger and stop scrolling, the header and footer will
    reappear. This feature can be enabled by adding `data-position="fixed"` to the
    div tag used for either the header or footer. `Listing 3-2` demonstrates an example.
    In order to ensure the page actually scrolls, many paragraphs of text were repeated.
    This has been removed from the code in the book, but exists in the actual file.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面关于页眉和页脚的讨论中，您看到了一些如何添加按钮的示例。这些按钮可以用于在您的站点中导航。但是如果某个页面特别长怎么办？例如，博客条目在移动设备上查看时可能会非常长。当用户滚动时，页眉或页脚可能会离开屏幕。jQuery
    Mobile提供了一种创建固定位置页眉和页脚的方法。启用此功能后，页眉和页脚将始终可见。当用户滚动时，它们可能会消失，但只要他们抬起手指并停止滚动，页眉和页脚就会重新出现。可以通过向用于页眉或页脚的div标签添加`data-position="fixed"`来启用此功能。`清单3-2`展示了一个示例。为了确保页面实际上滚动，许多文本段落被重复。这已从书中的代码中删除，但存在于实际文件中。
- en: '[PRE11]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: We won't bother with a screenshot of this example as it won't exactly convey
    the feature well, but if you try this in your mobile device, notice while scrolling
    up and down, as soon as you lift your finger the header and footer will both pop
    in. This gives the user access to them no matter how large the page may be.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不会为这个示例提供截图，因为它不会很好地传达功能，但如果您在移动设备上尝试此操作，请注意，当您向上或向下滚动时，只要您抬起手指，页眉和页脚就会同时弹出。这使用户无论页面有多大都可以访问它们。
- en: Full screen positioning
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 全屏定位
- en: Another option to consider is what's called full screen positioning. This is
    a metaphor commonly used with pictures, but can also be used where fixed positioned
    headers and footers are used. In this scenario, the header and footer appear and
    disappear with clicks. So, with a photo, this allows you a view of the photo as
    it is, but also the ability to get the header and footer back with a simple click.
    Perhaps, instead of full screen positioning you can consider it as *retrievable*
    headers and footers instead. In general, this is best used when you want the content
    of the page to be viewed by itself, again, an excellent example of this would
    be pictures.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 要考虑的另一种选择是所谓的全屏定位。这是一个常用于图片的比喻，但也可以用于使用固定定位页眉和页脚的情况。在这种情况下，页眉和页脚会随着点击的出现和消失而出现和消失。因此，对于照片，这允许您查看照片的原样，但也可以通过简单的点击重新获取页眉和页脚。也许，与其称之为全屏定位，不如考虑将其视为*可检索的*页眉和页脚。一般来说，当您希望查看页面内容时最好使用，再次，这是一个很好的例子。
- en: 'To enable this feature, simply add `data-fullscreen="true"` to the div tag
    used to define the page. `Listing 3-3` demonstrates this feature, as shown in
    the following code snippet:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用此功能，只需将`data-fullscreen="true"`添加到用于定义页面的div标签中即可。`清单3-3`展示了此功能，如下面的代码片段所示：
- en: '[PRE12]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: As with the previous example, the previous code snippet doesn't translate very
    well to static screen shots. Open it up in your mobile browser and take a look.
    Remember, you can click multiple times to toggle on and off the effect.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 和前一个示例一样，前面的代码片段在静态截图中展示效果不太好。在手机浏览器中打开它，看一看吧。记住，你可以点击多次来切换效果的开启和关闭。
- en: Working with navigation bars
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用导航栏
- en: You've seen a few examples now which include buttons with headers and footers,
    but jQuery Mobile has a cleaner version of this called NavBars (or navigation
    bars). These are full screen-wide bars used to hold buttons. jQuery Mobile also
    supports highlighting one button at a time as an active button. When used for
    navigation, this is an easy way to mark a page as being active.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在已经看到了一些示例，其中包括带有页眉和页脚的按钮，但是 jQuery Mobile 还有一个更简洁的版本，称为 NavBars（或导航栏）。这些是全屏宽的条形用来放置按钮。jQuery
    Mobile 还支持将一个按钮标记为活动按钮。在用于导航时，这是一种标记页面为活动状态的简单方法。
- en: 'A NavBar is simply an unordered list wrapped in a div tag that uses `data-role="navbar"`.
    Placed inside a footer it looks similar to the following code snippet:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: NavBar 简单地说就是包含在使用`data-role="navbar"`的 div 标签中的无序列表。放在页脚中时，它看起来类似于以下代码片段：
- en: '[PRE13]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Notice the use of `class="ui-btn-active"` on the first link. This will mark
    the first button as active. jQuery Mobile won''t be able to do this for you automatically,
    so as you build each page and make use of `navbar`, you will have to *move* the
    class appropriately. The following screenshot shows how it looks:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 注意第一个链接使用了`class="ui-btn-active"`。这会将第一个按钮标记为活动状态。jQuery Mobile 不会自动为你完成这个操作，所以在构建每个页面并使用`navbar`时，你需要*适当地*移动类。以下截图显示了它的外观：
- en: '![Working with navigation bars](img/7263_03_10.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![Working with navigation bars](img/7263_03_10.jpg)'
- en: You can add up to 5 buttons and jQuery Mobile will appropriately size the buttons
    to make them fit. If you go over five, then the buttons will simply be split over
    multiple lines. Most likely this is not something you want to cover. Overwhelming
    the user with too many buttons is a sure way to confuse, and ultimately anger,
    your users.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 你最多可以添加5个按钮，jQuery Mobile 会适当调整按钮大小以使其适应。如果超过五个，则按钮将简单地分成多行。很可能这不是你想要的。用太多的按钮来混淆用户，最终只会激怒他们。
- en: 'You can also include a `navbar` in your header. If placed after the text, or
    any other buttons, jQuery Mobile will automatically drop it to the next line:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以在页眉中包括一个`navbar`。如果放置在文本或其他按钮之后，jQuery Mobile 将自动将其放置到下一行：
- en: '[PRE14]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![Working with navigation bars](img/7263_03_11.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![Working with navigation bars](img/7263_03_11.jpg)'
- en: You can see an example of both of these in action in the file named `header_and_footer_with_navbar.html`.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在名为`header_and_footer_with_navbar.html`的文件中看到这两者的应用示例。
- en: Persisting navigation bar footers across multiple pages
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 跨多个页面持久化导航栏页脚
- en: 'Let''s now take two of the previous topics and combine them into one incredibly
    cool little feature - multiple page persistent footers. It''s a bit more work,
    but you can create a footer NavBar that will not disappear when switching from
    page to page. In order to do this, you have to follow a few simple rules:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们将前面的两个主题合并成一个令人难以置信的小功能 - 多页面持久化页脚。这需要做一些额外工作，但你可以创建一个页脚 NavBar，在切换页面时不会消失。为了做到这一点，你需要遵循一些简单的规则：
- en: Your footer div must be present on all pages
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的页脚 div 必须出现在所有页面上
- en: Your footer div must use the same `data-id` value across all pages
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的页脚 div 必须在所有页面上使用相同的`data-id`值
- en: 'You must use two CSS classes: `ui-state-persist` and `ui-btn-active`, on the
    *active* page in the NavBar'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 NavBar 中的*活动*页面上，必须使用两个 CSS 类：`ui-state-persist` 和 `ui-btn-active`。
- en: You must also use the persistent footer feature
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你还必须使用持久化页脚功能
- en: That sounded a bit complex, but it's really just a tiny bit more HTML in your
    template. In `listing 3-4`, an index page for a fictional company makes use of
    a footer NavBar. Note the use of `ui-state-persist` and `ui-btn-active` for the
    currently selected page.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这听起来有点复杂，但实际上在模板中只需要增加一小部分HTML代码。在`listing 3-4`中，一个虚构公司的索引页面使用了页脚 NavBar。注意当前选定页面使用了`ui-state-persist`和`ui-btn-active`。
- en: '[PRE15]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The following screenshot shows how the complete page looks:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图显示了页面的完整外观：
- en: '![Persisting navigation bar footers across multiple pages](img/7263_03_12.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![Persisting navigation bar footers across multiple pages](img/7263_03_12.jpg)'
- en: 'We don''t need to worry so much about the other two pages. You can find them
    in the ZIP file you downloaded. The following code snippet is the footer section
    from the second page. Notice that the only change here is the movement of the
    `ui-btn-active` class:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不需要太担心另外两个页面。你可以在下载的ZIP文件中找到它们。以下代码片段是第二个页面的页脚部分。请注意，这里唯一的变化是`ui-btn-active`类的移动：
- en: '[PRE16]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Clicking from one page to another shows a smooth transition to each page, but
    the footer bar remains. Much like a framed site (don't shudder - frames weren't
    always looked at with scorn), the footer will stay as the user navigates throughout
    the site.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 点击从一个页面到另一个页面时，每个页面都显示平滑的过渡，但页脚栏保持不变。就像一个有框架的站点（不要抖动 - 框架并不总是被鄙视），当用户在整个站点中导航时，页脚将保持不变。
- en: Summary
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we discussed how to add headers, footers, and navigation bars
    (NavBars) to your jQuery Mobile pages. We showed how the proper div tags will
    create nicely formatted headers and footers on your page and how to make these
    headers and footers persist over a long page. Further, we demonstrated *full screen
    mode* for headers and footers. These are headers and footers that appear and disappear
    with clicks - perfect for images and other items you want to show in a full screen
    type view on your mobile device. Finally, we saw how to combine persistent footers
    and NavBars to create a footer that doesn't go away when the page changes.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了如何向您的jQuery Mobile页面添加标题、页脚和导航栏（NavBars）。我们展示了正确的div标记如何在您的页面上创建格式良好的标题和页脚，以及如何使这些标题和页脚在长页面中持续存在。此外，我们演示了*全屏模式*用于标题和页脚。这些是点击时出现和消失的标题和页脚
    - 完美用于您想在移动设备上以全屏视图显示的图像和其他项目。最后，我们看到了如何结合持久页脚和NavBars以创建页脚，当页面更改时不会消失。
- en: In the next chapter, we'll do a deep dive into lists. Lists are one of the primary
    ways folks add navigation and menus to their mobile sites. jQuery Mobile provides
    a plethora of options for creating and styling lists.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将深入探讨列表。列表是人们为其移动站点添加导航和菜单的主要方式之一。jQuery Mobile提供了大量选项来创建和样式化列表。
