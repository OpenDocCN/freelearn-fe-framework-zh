["```js\nng new my-blog --routing --style=scss \n```", "```js\n    import { NgModule } from '@angular/core';\n    import { RouterModule, Routes } from '@angular/router';\n    const routes: Routes = [];\n    @NgModule({\n      imports: [RouterModule.forRoot(routes)],\n      exports: [RouterModule]\n    })\n    export class AppRoutingModule { } \n    ```", "```js\n    import { NgModule } from '@angular/core';\n    import { BrowserModule } from '@angular/platform-browser';\n    **import** **{** **AppRoutingModule** **}** **from****'./app-routing.module'****;**\n    import { AppComponent } from './app.component';\n    @NgModule({\n      declarations: [\n        AppComponent\n      ],\n      imports: [\n        BrowserModule,\n        **AppRoutingModule**\n      ],\n      providers: [],\n      bootstrap: [AppComponent]\n    })\n    export class AppModule { } \n    ```", "```js\n    npm install bootstrap \n    ```", "```js\n    @import \"bootstrap/scss/bootstrap\"; \n    ```", "```js\n@import CSS rule accepts the absolute path of the bootstrap.scss file as an option without adding the extension.\n```", "```js\nng generate module core \n```", "```js\nng generate component header --path=src/app/core --module=core --export \n```", "```js\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n**import** **{** **HeaderComponent** **}** **from****'./header/header.component'****;**\n@NgModule({\n  declarations: [\n    **HeaderComponent**\n  ],\n  imports: [\n    CommonModule\n  ],\n**exports****: [**\n**HeaderComponent**\n **]**\n})\nexport class CoreModule { } \n```", "```js\n<nav class=\"navbar navbar-expand navbar-light bg-light\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\">Angular Projects</a>\n    <ul class=\"navbar-nav me-auto\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\">Articles</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\">Contact</a>\n      </li>\n    </ul>\n  </div>\n</nav> \n```", "```js\nng generate module shared \n```", "```js\nng generate component footer --path=src/app/shared --module=shared --export \n```", "```js\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n**import** **{** **FooterComponent** **}** **from****'./footer/footer.component'****;**\n@NgModule({\n  declarations: [\n    **FooterComponent**\n  ],\n  imports: [\n    CommonModule\n  ],\n**exports****: [**\n**FooterComponent**\n **]**\n})\nexport class SharedModule { } \n```", "```js\n    currentDate = new Date(); \n    ```", "```js\n    <nav class=\"navbar fixed-bottom navbar-light bg-light\">\n      <div class=\"container-fluid\">\n        <p>Copyright @{{currentDate | date: 'y'}}. All\n          Rights Reserved</p>\n      </div>\n    </nav> \n    ```", "```js\n    @NgModule({\n      declarations: [\n        AppComponent\n      ],\n      imports: [\n        BrowserModule,\n        AppRoutingModule,\n        **CoreModule****,**\n    **SharedModule**\n      ],\n      providers: [],\n      bootstrap: [AppComponent]\n    }) \n    ```", "```js\n    import { CoreModule } from './core/core.module';\n    import { SharedModule } from './shared/shared.module'; \n    ```", "```js\n    <app-header></app-header>\n    <app-footer></app-footer> \n    ```", "```js\n    ng generate module contact \n    ```", "```js\n    ng generate component contact --path=src/app/contact --module=contact --export --flat \n    ```", "```js\n    <div class=\"card mx-auto text-center border-light\" style=\"width: 18rem;\">\n      <img src=\"img/angular.png\" class=\"card-img-top\"\n        alt=\"Angular logo\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">Angular Projects</h5>\n        <p class=\"card-text\">\n          A personal blog created with the Angular\n          framework and the Scully static site generator\n        </p>\n        <a href=\"https://angular.io/\" target=\"_blank\"\n          class=\"card-link\">Angular</a>\n        <a href=\"https://scully.io/\" target=\"_blank\"\n          class=\"card-link\">Scully</a>\n      </div>\n    </div> \n    ```", "```js\n    import { NgModule } from '@angular/core';\n    import { RouterModule, Routes } from '@angular/router';\n    **import** **{** **ContactComponent** **}** **from****'****./contact/contact.component'****;**\n    const routes: Routes = [\n      **{** **path****:** **'contact'****,** **component****:** **ContactComponent** **}**\n    ];\n    @NgModule({\n      imports: [RouterModule.forRoot(routes)],\n      exports: [RouterModule]\n    })\n    export class AppRoutingModule { } \n    ```", "```js\n    @NgModule({\n      declarations: [\n        AppComponent\n      ],\n      imports: [\n        BrowserModule,\n        AppRoutingModule,\n        CoreModule,\n        SharedModule,\n        **ContactModule**\n      ],\n      providers: [],\n      bootstrap: [AppComponent]\n    }) \n    ```", "```js\n    <app-header></app-header>\n    **<****div****class****=****\"****container\"****>**\n    **<****router-outlet****></****router-outlet****>**\n    **</****div****>**\n    <app-footer></app-footer> \n    ```", "```js\n    <li class=\"nav-item\">\n      <a **routerLink****=****\"/contact\"****routerLinkActive****=****\"active\"**\n        class=\"nav-link\">Contact</a>\n    </li> \n    ```", "```js\nrouterLink directive points to the path property of the route configuration object. We have also added the routerLinkActive directive, which sets the active class on the anchor element when the specific route is activated.\n```", "```js\n    import { NgModule } from '@angular/core';\n    import { CommonModule } from '@angular/common';\n    import { HeaderComponent } from './header/header.component';\n    **import** **{** **RouterModule** **}** **from****'@angular/router'****;**\n    @NgModule({\n      declarations: [\n        HeaderComponent\n      ],\n      imports: [\n        CommonModule,\n        **RouterModule**\n      ],\n      exports: [\n        HeaderComponent\n      ]\n    })\n    export class CoreModule { } \n    ```", "```js\nng generate module articles --route=articles --module=app-routing \n```", "```js\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ArticlesComponent } from './articles.component';\nconst routes: Routes = [{ path: '', component: ArticlesComponent }];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ArticlesRoutingModule { } \n```", "```js\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ContactComponent } from './contact/contact.component';\nconst routes: Routes = [\n  { path: 'contact', component: ContactComponent },\n  **{** **path****:** **'articles'****,** **loadChildren****:** **() =>****import****(****'./articles/articles.module'****).****then****(****m** **=>** **m.****ArticlesModule****) }**\n];\n@NgModule({\n  imports: [**RouterModule****.****forRoot****(routes)**],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { } \n```", "```js\n    <li class=\"nav-item\">\n      <a **routerLink****=****\"/articles\"****routerLinkActive****=****\"active\"**\n        class=\"nav-link\">Articles</a>\n    </li> \n    ```", "```js\nconst routes: Routes = [\n  { path: 'contact', component: ContactComponent },\n  { path: 'articles', loadChildren: () => import('./articles/articles.module').then(m => m.ArticlesModule) },\n **{** **path****:** **''****,** **pathMatch****:** **'full'****,** **redirectTo****:** **'articles'** **},**\n **{** **path****:** **'**'****,** **redirectTo****:** **'articles'** **}**\n]; \n```", "```js\nnpm install @scullyio/init @scullyio/ng-lib @scullyio/scully @scullyio/scully-plugin-puppeteer --force \n```", "```js\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ContactModule } from './contact/contact.module';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\n**import** **{** **ScullyLibModule** **}** **from****'@scullyio/ng-lib'****;**\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CoreModule,\n    SharedModule,\n    ContactModule,\n    **ScullyLibModule**\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { } \n```", "```js\nimport { ScullyConfig } from '@scullyio/scully';\nexport const config: ScullyConfig = {\n  projectRoot: \"./src\",\n  projectName: \"my-blog\",\n  outDir: './dist/static',\n  routes: {\n  }\n}; \n```", "```js\nng generate @scullyio/init:markdown --project my-blog \n```", "```js\n    What name do you want to use for the module? (blog) \n    ```", "```js\n    What slug do you want for the markdown file? (id) \n    ```", "```js\n    Where do you want to store your markdown files? \n    ```", "```js\n    Under which route do you want your files to be requested? \n    ```", "```js\nimport {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {PostsComponent} from './posts.component';\nconst routes: Routes = [\n  {\n    path: ':id',\n    component: PostsComponent,\n  },\n  {\n    path: '**',\n    component: PostsComponent,\n  }\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PostsRoutingModule {} \n```", "```js\nroutes: {\n  '/posts/:id': {\n    type: 'contentFolder',\n    id: {\n      folder: \"./mdfiles\"\n    }\n  },\n} \n```", "```js\n<h3>ScullyIo content</h3>\n<hr>\n<!-- This is where Scully will inject the static HTML -->\n<scully-content></scully-content>\n<hr>\n<h4>End of content</h4> \n```", "```js\n    import { Component, **OnInit** } from '@angular/core';\n    **import** **{** **ScullyRoute****,** **ScullyRoutesService** **}** **from****'@scullyio/ng-lib'****;**\n    **import** **{** **Observable****, map }** **from****'rxjs'****;** \n    ```", "```js\n    export class ArticlesComponent **implements****OnInit** {\n    } \n    ```", "```js\n    constructor(private scullyService: ScullyRoutesService) { } \n    ```", "```js\n    posts$: Observable<ScullyRoute[]> | undefined; \n    ```", "```js\n    ngOnInit(): void {\n      this.posts$ = this.scullyService.available$.pipe(\n        map(posts => posts.filter(post => post.title))\n      );\n    } \n    ```", "```js\n    <div class=\"list-group mt-3\">\n      <a *ngFor=\"let post of posts$ | async\"\n        [routerLink]=\"post.route\" class=\"list-group-item\n          list-group-item-action\">\n        <div class=\"d-flex w-100 justify-content-between\">\n          <h5 class=\"mb-1\">{{post.title}}</h5>\n        </div>\n        <p class=\"mb-1\">{{post['description']}}</p>\n      </a>\n    </div> \n    ```", "```js\n    ng build \n    ```", "```js\n    npx scully --project my-blog \n    ```", "```js\n    npx scully serve --project my-blog \n    ```", "```js\n    ---\n    title: 2023-06-22-posts\n    description: 'blog description'\n    published: false\n    slugs:\n        - ___UNPUBLISHED___lj738su6_7mqWyfNdmNCwovaCCi2tZItsDKMPJGcG\n    ---\n    # 2023-06-22-posts \n    ```", "```js\n    ---\n    title: 2023-06-22-posts\n    description: 'blog description'\n    published: true\n    ---\n    # 2023-06-22-posts \n    ```", "```js\n    npx scully --project my-blog \n    ```", "```js\n    ng generate @scullyio/init:post --name=\"Angular and Scully\" \n    ```", "```js\n    What's the target folder for this post? (blog) \n    ```", "```js\n    ---\n    title: 'Angular and Scully'\n    description: 'How to build a blog with Angular and Scully'\n    published: true\n    ---\n    # Angular and Scully\n    Angular is a robust JavaScript framework that we can use to build excellent and performant web applications.\n    Scully is a popular static website generator that empowers the Angular framework with Jamstack characteristics.\n    You can find more about them in the following links:\n    - https://angular.io\n    - https://scully.io\n    - https://www.jamstack.org \n    ```"]