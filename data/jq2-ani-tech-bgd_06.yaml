- en: Chapter 6. Extended Animations with jQuery UI
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 6 章。使用 jQuery UI 进行扩展动画
- en: '*jQuery UI is the official user interface library for jQuery and adds a suite
    of interactive widgets such as tabs and accordions, a series of interaction helpers
    such as drag and drop, and a comprehensive set of effects that extend those provided
    natively by jQuery.*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*jQuery UI 是 jQuery 的官方用户界面库，添加了一套交互式小部件，如标签页和手风琴，一系列交互助手，如拖放，以及一套全面的效果，扩展了
    jQuery 原生提供的效果。*'
- en: 'Over the course of this chapter, we''ll be looking at the additional effects
    added by jQuery UI. Topics we''ll cover include:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将看到 jQuery UI 添加的额外效果。我们将涵盖的主题包括：
- en: Obtaining and setting up jQuery UI
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取和设置 jQuery UI
- en: The new effects added by jQuery UI
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: jQuery UI 添加的新效果
- en: Using the `effect()` method
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `effect()` 方法
- en: Extending the `show()`, `hide()`, and `toggle()` methods
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扩展 `show()`、`hide()` 和 `toggle()` 方法
- en: Using easing with jQuery UI
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 jQuery UI 中使用缓动
- en: Animating an element's color
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为一个元素的颜色添加动画
- en: Animated class transitions
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 动画类转换
- en: 'jQuery UI adds several new animation methods, as well as modifying several
    jQuery methods. The methods that we''ll be looking at in this chapter are:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery UI 添加了几种新的动画方法，以及修改了几种 jQuery 方法。本章将要讨论的方法包括：
- en: '`animate()`'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`animate()`'
- en: '`addClass()`'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`addClass()`'
- en: '`effect()`'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`effect()`'
- en: '`hide()`'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hide()`'
- en: '`switchClass()`'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`switchClass()`'
- en: '`show()`'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`show()`'
- en: '`toggle()`'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`toggle()`'
- en: Obtaining and setting up jQuery UI
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取和设置 jQuery UI
- en: jQuery UI is very easy to obtain and set up. There is an online tool that will
    build a custom download package for us containing just the parts of jQuery UI
    that we'll need. Due to the modular nature of jQuery UI it makes sense to minimize
    the code payload we use on any given web project, and so the ability to include
    only the modules of code we intend to use helps us to minimize any impact on the
    visitor our code may have.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 获取和设置 jQuery UI 非常简单。有一个在线工具可以为我们构建一个自定义下载包，其中只包含我们需要的 jQuery UI 部分。由于 jQuery
    UI 的模块化性质，尽量减少我们在任何给定的 Web 项目中使用的代码负载是有意义的，因此只包含我们打算使用的代码模块的能力有助于我们尽量减少我们的代码可能对访问者产生的任何影响。
- en: The jQuery UI download builder can be found at [http://jqueryui.com/download](http://jqueryui.com/download).
    The page is split into two sections with the components of the library listed
    towards the top and the theme details at the bottom. The download builder has
    a certain amount of intelligence, and will ensure that any dependencies are automatically
    selected when we choose the components we require.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery UI 下载构建器可以在 [http://jqueryui.com/download](http://jqueryui.com/download)
    找到。该页面分为两个部分，库的组件列在顶部，主题细节列在底部。下载构建器具有一定的智能，当我们选择所需的组件时，它将自动选择任何依赖项。
- en: '![Obtaining and setting up jQuery UI](img/9642_06_01.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![获取和设置 jQuery UI](img/9642_06_01.jpg)'
- en: The **Download Builder** page shown in the previous screenshot gives us everything
    we need to run any subset of the library components.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一个截图中显示的**下载构建器**页面为我们提供了运行库组件的任何子集所需的一切。
- en: All we'll be using in this chapter are the effects, so when we download a package
    we should only select the components found in the **Effects** subsection towards
    the bottom of the page. We don't need to include a theme, and we don't even need
    to include the library core. The effects can be used completely independent of
    the rest of the library; all we need is the **Effects Core** file and the individual
    effects we require. Make sure all of them are selected, and download the package.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中我们将只使用效果，所以当我们下载包时，应该只选择页面底部**效果**小节中找到的组件。我们不需要包括主题，甚至不需要包括库核心。这些效果可以完全独立于库的其余部分使用；我们所需要的只是**效果核心**文件和我们需要的各个效果。确保它们都被选择，并下载包。
- en: The download builder allows you to only download the pieces you need, because
    jQuery UI is basically an add-on. Breaking apart each piece, allows you to select
    only the pieces you need, which greatly cuts down on the file size of the plugin
    when customized.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 下载构建器允许您仅下载您需要的部分，因为 jQuery UI 基本上是一个附加组件。分解每个部分，允许您仅选择您需要的部分，这在定制时极大地减少了插件的文件大小。
- en: The package will give us everything we need to use the components that we've
    selected, including a copy of the latest stable release of jQuery, so when using
    jQuery UI, jQuery itself does not need to be downloaded separately.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这个包将为我们提供一切我们需要使用我们选择的组件，包括最新稳定版本的 jQuery 的副本，所以在使用 jQuery UI 时，jQuery 本身不需要单独下载。
- en: All of the JavaScript for each selected component is combined and compressed
    into a single file by the download builder, and any functional CSS or theme files
    will be combined into a single stylesheet. We don't need any of the theme files
    for working with the effects, but ensure the `.js` file from the archive provided
    by the download builder goes into our `js` folder.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 所选组件的所有 JavaScript 将由下载构建器合并并压缩为单个文件，并且任何功能性 CSS 或主题文件将被合并为单个样式表。我们不需要任何主题文件来处理效果，但确保从下载构建器提供的归档中的
    `.js` 文件进入我们的 `js` 文件夹。
- en: Creating a new template file
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建一个新的模板文件
- en: The examples in the remainder of this chapter will be short, mostly image-based
    examples that illustrate each effect in turn, so it makes sense to use a slightly
    different template file for them. Create a new template file by adding a reference
    to the jQuery UI source file directly after the jQuery one just before the closing
    `</body>` tag.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的其余部分中，示例将会很简短，主要是基于图像的示例，依次说明每个效果，因此使用稍微不同的模板文件是有道理的。通过在 jQuery 结束标签 `</body>`
    前直接添加对 jQuery UI 源文件的引用来创建一个新的模板文件。
- en: The new effects added by jQuery UI
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: jQuery UI 新增的效果
- en: 'At the time of writing, jQuery UI gives us 14 new, predefined animation effects
    to use in our pages; these are listed, together with a brief description of their
    usage, as follows:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，jQuery UI 提供了 14 个新的预定义动画效果供我们在页面中使用；下面列出了这些效果以及它们的简要用法：
- en: '| Animations | Description |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| 动画 | 描述 |'
- en: '| --- | --- |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `blind` | The target element is shown or hidden by rolling it down or up
    like a window blind. |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| `blind` | 通过像窗帘一样向下或向上滚动，显示或隐藏目标元素。'
- en: '| `bounce` | The target element is bounced horizontally or vertically for a
    specified number of times. |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| `bounce` | 目标元素水平或垂直地反弹指定次数。'
- en: '| `clip` | The target element is shown or hidden by moving opposing edges in
    towards the center of the element, or out to its full width or height. |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| `clip` | 通过将相对的边缘向元素中心移动或向外扩展到其完整宽度或高度，显示或隐藏目标元素。'
- en: '| `drop` | The element appears to drop onto or off of the page in order to
    show or hide it respectively. |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| `drop` | 元素看起来落在或离开页面，以便显示或隐藏它。'
- en: '| `explode` | The explode effect causes the target element to separate into
    a specified number of pieces before fading away, or to fade into view in several
    pieces before coming together to form the complete element. |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| `explode` | 爆炸效果使目标元素分成指定数量的碎片然后淡出，或者在几个碎片中淡入视图然后汇合形成完整元素。'
- en: '| `fold` | The element appears to fold closed or open. |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| `fold` | 元素看起来折叠关闭或打开。'
- en: '| `highlight` | The `background-color` property of the target element is set
    (to yellow by default, although this is configurable), and then fades away after
    a short interval. |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| `highlight` | 目标元素的 `background-color` 属性被设置（默认为黄色，尽管这是可配置的），然后在短时间后淡出。'
- en: '| `puff` | The target element increases in size slightly and then fades away.
    |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| `puff` | 目标元素稍微增大然后淡出。'
- en: '| `pulsate` | The target element''s opacity is adjusted a specified number
    of times, making the element appear to flicker on and off. |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| `pulsate` | 调整目标元素的不透明度指定次数，使元素似乎闪烁不断。'
- en: '| `scale` | The dimensions of the target element are adjusted to increase or
    decrease its size. |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| `scale` | 目标元素的尺寸被调整以增加或减小其大小。'
- en: '| `shake` | The target element is shaken a specified number of times. This
    effect is similar to the bounce effect with the key difference being that the
    distance of the shake remains the same on each iteration of the animation. |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| `shake` | 目标元素被震动指定次数。这种效果类似于反弹效果，其关键区别在于每次动画迭代时摇动的距离保持不变。'
- en: '| `size` | The dimensions of the target element are adjusted to increase or
    decrease its size. This effect is almost identical to `scale`. |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| `size` | 调整目标元素的尺寸以增加或减小其大小。此效果与 `scale` 几乎相同。'
- en: '| `slide` | The target element is made to slide in or out of view, horizontally
    or vertically. |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| `slide` | 目标元素被制造成水平或垂直地滑入或滑出视图。'
- en: '| `transfer` | The outline of the specified element is transferred to another
    element on the page. |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| `transfer` | 指定元素的轮廓被转移到页面上的另一个元素。'
- en: Using the effect API
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用效果 API
- en: 'jQuery UI introduces the `effect()` method, which can be used to trigger any
    of the effects listed in the previous table. The `effect()` method''s usage pattern
    is as follows:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery UI 引入了 `effect()` 方法，该方法可用于触发上表中列出的任何效果。`effect()` 方法的使用模式如下：
- en: '```js'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '```js'
- en: $(selector).effect( effect [,options] [,duration] [,complete] );
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: $(selector).effect( effect [,options] [,duration] [,complete] );
- en: '```'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: The name of the effect that we would like to use is always the first argument
    of the `effect()` method. It's supplied in the string format.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要使用的特效名称总是`effect()`方法的第一个参数。它以字符串格式提供。
- en: Each effect has custom configuration options that can be set to control how
    the effect displays. These options are set in a configuration object which is
    passed to the `effect()` method as the second argument, following the name of
    the effect.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 每个特效都有自定义配置选项，可以设置以控制特效的显示方式。这些选项是设置在配置对象中的，作为`effect()`方法的第二个参数，跟在特效名称后面。
- en: We can also supply a duration for the effect as an argument. Just like standard
    jQuery animations, we can supply either an integer representing the duration of
    the effect in milliseconds, or one of the strings `slow` or `fast`.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以作为参数为特效提供持续时间。就像标准的 jQuery 动画一样，可以提供一个整数，表示特效的持续时间（毫秒为单位），或者是字符串`slow`或`fast`。
- en: If no configuration is required, the duration may be passed to the `effect()`
    method as the second argument. If no duration is supplied, the default duration
    of `400` milliseconds will be used.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不需要配置，则持续时间可以作为第二个参数传递给`effect()`方法。如果没有提供持续时间，将使用默认持续时间`400`毫秒。
- en: Optionally, a callback function may be provided as the final argument. The supplied
    function will be executed once for each selected element when the effect ends.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 可选地，回调函数可以作为最后一个参数。提供的函数将在特效结束时针对每个选定元素执行一次。
- en: Let's look at a few examples of how the `effect()` method can be used.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看`effect()`方法可以如何使用一些示例。
- en: The bounce effect
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 弹跳特效
- en: The `bounce` effect is similar to, but much more controllable than, the `easeOutBounce`
    easing function. It can be used with either the effect API or show/hide logic
    depending on your requirements.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '`bounce`特效类似于`easeOutBounce`的缓动函数，但比后者更易控制。根据需求，可以使用特效 API 或显示/隐藏逻辑。'
- en: Syntax
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 语法
- en: '```js'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '```js'
- en: $(selector).effect( "bounce" [,configuration] [,duration] );
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: $(selector).effect( "bounce" [,configuration] [,duration]);
- en: '```'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Configuration options
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置选项
- en: 'The following configuration options are available for the bounce effect:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 弹跳特效有以下配置选项：
- en: '| Option | Default | Usage |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| 选项 | 默认 | 用法 |'
- en: '| --- | --- | --- |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `direction` | `"up"` | The direction of bounce. The other possible option
    is the string `down` |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| `direction` | `"up"` | 弹跳的方向。其他可能的选项是字符串 `down` |'
- en: '| `distance` | `20` | The initial distance of bounce (successive bounces reduce
    in distance) in pixels |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| `distance` | `20` | 弹跳的初始距离（连续弹跳会减少距离）以像素为单位 |'
- en: '| `mode` | `"effect"` | Whether to run the effect normally or use the show/hide
    logic, other values accepted may be the strings `show`, `hide`, or `toggle` |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| `mode` | `"effect"` | 是否正常运行特效，或使用显示/隐藏逻辑，其他可接受的值可能是字符串 `show`、`hide` 或 `toggle`
    |'
- en: '| `times` | `5` | The number of bounces |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| `times` | `5` | 弹跳的次数 |'
- en: Time for action – using the bounce effect
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动手实践 – 使用弹跳特效
- en: 'In this example we''ll see how the jQuery UI effect can be combined to create
    a bouncing ball that travels across the page:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们将看到如何结合 jQuery UI 特效来创建一个穿过页面的弹跳球：
- en: 'Use the following simple elements in the `<body>` of the template file:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在模板文件的`<body>`中使用以下简单元素：
- en: '```js'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: <div id="travel">
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div id="travel">
- en: <div id="ball"></div>
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div id="ball"></div>
- en: </div>
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </div>
- en: '```'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'All we need is a simple container `<div>` and an inner `<div>`. In the empty
    function at the end of the `<body>`, add the following script:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们只需要一个简单的容器 `<div>` 和一个内部的 `<div>`。在`<body>`末尾的空函数中，加入以下脚本：
- en: '```js'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: $("#ball").click(function() {
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("#ball").click(function() {
- en: $("#travel").animate({
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("#travel").animate({
- en: 'left: "+=300px"'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'left: "+=300px"'
- en: '}, 1500).find("div").effect( "bounce", { times: 4,'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}, 1500).find("div").effect( "bounce", { times: 4,'
- en: 'distance: 100 }, 1500 );'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 距离：100}, 1500);
- en: '});'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Save the file as `bounce.html`. We also need a few simple styles. Add the following
    CSS to a new file:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件保存为`bounce.html`。我们还需要一些简单的样式。将以下 CSS 添加到一个新文件中：
- en: '```js'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: '#travel {'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#travel {'
- en: position:absolute;
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: position:absolute;
- en: top:100px;
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: top:100px;
- en: '}'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '#ball {'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#ball {'
- en: width:150px;
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: width:150px;
- en: height:150px;
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: height:150px;
- en: cursor:pointer;
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cursor:pointer;
- en: background:url(../img/ball.jpg) no-repeat 0 0;
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 背景:url(../img/ball.jpg) no-repeat 0 0;
- en: '}'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: Save this as `bounce.css` in the `css` folder. When we run the page and click
    on the ball, we should find that it bounces along the page, gradually coming to
    a halt:![Time for action – using the bounce effect](img/9642_06_02.jpg)
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其保存为 `bounce.css`，放置在 `css` 文件夹中。当我们运行页面并点击球时，我们应该发现它会沿着页面弹跳，逐渐停止：![行动时间 -
    使用弹跳效果](img/9642_06_02.jpg)
- en: The previous composition shows the ball traveling across the page, bouncing
    up and down as it goes from left to right.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 前一组成将显示球横穿页面，从左到右弹跳上下。
- en: '*What just happened?*'
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚刚发生了什么？*'
- en: When the ball is clicked, we first use jQuery's `animate()` method to animate
    the `left` style property of the container, `#travel`, by 300 pixels, over a duration
    of 1.5 seconds. We slow this animation down to improve the appearance of the overall
    animation, but it is not strictly required. We then navigate down to the inner
    `<div>` element and use the `effect()` method, specifying the `bounce` effect.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 当点击球时，我们首先使用 jQuery 的 `animate()` 方法，通过 300 像素动画化容器 `#travel` 的 `left` 样式属性，在
    1.5 秒的持续时间内。我们减慢此动画以改善整体动画的外观，但这并不是严格要求的。然后，我们向下导航到内部 `<div>` 元素，并使用 `effect()`
    方法，指定 `bounce` 效果。
- en: We need to use both elements, `#travel` and `#ball`, because if we use the `animate()`
    and `effect()` methods on the same element, the bounce effect will go into the
    element's animation queue and the two animations will execute one after the other
    instead of running simultaneously.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要同时使用 `#travel` 和 `#ball` 元素，因为如果我们在同一元素上使用 `animate()` 和 `effect()` 方法，弹跳效果将进入元素的动画队列，两个动画将按顺序执行，而不是同时运行。
- en: The highlight effect
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 高亮效果
- en: The `highlight` effect is a simple but effective way to draw the visitor's attention
    to new items that have been added to the page, and is used for this purpose in
    many of today's leading web-based interfaces.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '`highlight` 效果是吸引访问者注意力的简单而有效的方法，用于突出显示页面中已添加的新项目，在今天许多领先的基于网络的界面中用于此目的。'
- en: Syntax
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 语法
- en: '```js'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '```js'
- en: $(selector).effect( "highlight" [,configuration] [,duration] );
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: $(selector).effect( "highlight" [,configuration] [,duration] );
- en: '```'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Configuration options
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置选项
- en: 'There are only two configuration options for the `highlight` effect; these
    are listed as follows:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 `highlight` 效果，只有两个配置选项；它们如下所列：
- en: '| Options | Default | Usage |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| 选项 | 默认值 | 用法 |'
- en: '| --- | --- | --- |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `color` | `"#ffff99"` | Sets the `background-color` property of the element
    being highlighted |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| `color` | `"#ffff99"` | 设置正在高亮显示的元素的 `background-color` 属性 |'
- en: '| `mode` | `"show"` | Sets whether the effect will be hidden or shown when
    used with the `effect()` method, other possible values include `hide`, `toggle`,
    or `effect` |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| `mode` | `"show"` | 设置使用 `effect()` 方法时效果是隐藏还是显示的，其他可能的值包括 `hide`、`toggle`
    或 `effect` |'
- en: Time for action – highlighting elements
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 高亮元素
- en: In this example we'll create a simple to-do list, with a series of default items
    that can be checked off. We can also allow new items to be added to the list and
    will apply the `highlight` effect to new items as they are added.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们将创建一个简单的待办事项列表，其中包含一系列可以勾选的默认项目。我们还可以允许将新项目添加到列表中，并在添加时将 `highlight`
    效果应用于新项目。
- en: 'Add the following HTML code to the `<body>` element of the template file:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下 HTML 代码添加到模板文件的 `<body>` 元素中：
- en: '```js'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: <div id="todo">
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div id="todo">
- en: <h2>Todo List</h2>
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <h2>待办事项列表</h2>
- en: <ul>
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <ul>
- en: <li><label><input type="checkbox">Item 1</label></li>
  id: totrans-126
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <li><label><input type="checkbox">项目 1</label></li>
- en: <li><label><input type="checkbox">Item 2</label></li>
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <li><label><input type="checkbox">项目 2</label></li>
- en: <li><label><input type="checkbox">Item 3</label></li>
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <li><label><input type="checkbox">项目 3</label></li>
- en: </ul>
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </ul>
- en: <input type="text" id="new">
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <input type="text" id="new">
- en: <button id="add">Add</button>
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <button id="add">添加</button>
- en: </div>
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </div>
- en: '```'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Add the behavior for our to-do list using the following code:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码为我们的待办事项列表添加行为：
- en: '```js'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: $("#add").click(function() {
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("#add").click(function() {
- en: var newItem = $("#new"),
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var newItem = $("#new"),
- en: text = newItem.val();
  id: totrans-138
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: text = newItem.val();
- en: if (text) {
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: if (text) {
- en: var li = $("<li>"),
  id: totrans-140
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: var li = $("<li>"),
- en: label = $("<label>").html("<input type=\"checkbox\">" +text).appendTo(li);
  id: totrans-141
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: label = $("<label>").html("<input type=\"checkbox\">" +text).appendTo(li);
- en: li.appendTo("#todo ul").effect("highlight", 2000);
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: li.appendTo("#todo ul").effect("highlight", 2000);
- en: newItem.val("");
  id: totrans-143
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: newItem.val("");
- en: '}'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: // prevent the form from submitting
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: // 阻止表单提交
- en: return false;
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: return false;
- en: '});'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Save this page as `highlight.html`. We also need some CSS for this example.
    In a new file in your text editor, add the following code:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此页面保存为 `highlight.html`。我们还需要一些 CSS 来完成此示例。在文本编辑器中新建一个文件，添加以下代码：
- en: '```js'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: '#todo {'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#todo {'
- en: width:208px;
  id: totrans-152
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: width:208px;
- en: font:normal 13px sans-serif;
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: font:normal 13px sans-serif;
- en: '}'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '#todo ul {'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#todo ul {'
- en: padding:0;
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: padding:0;
- en: margin-bottom:30px;
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: margin-bottom:30px;
- en: '}'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '#todo li { list-style-type:none; }'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#todo li { list-style-type:none; }'
- en: '#todo label {'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#todo label {'
- en: display:block;
  id: totrans-161
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: display:block;
- en: 'border-bottom:1px dotted #000;'
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'border-bottom:1px dotted #000;'
- en: '}'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: li input {
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: li input {
- en: position:relative;
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: position:relative;
- en: top:2px;
  id: totrans-166
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: top:2px;
- en: '}'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: input { margin-right:10px; }
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: input { margin-right:10px; }
- en: '```'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: Save this page as `highlight.css`.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此页面保存为`highlight.css`。
- en: When we run the page in a browser, we can add a new item and it will be highlighted
    briefly as the new item is added to the list:![Time for action – highlighting
    elements](img/9642_06_03.jpg)
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在浏览器中运行页面时，我们可以添加一个新项，并且它将在添加到列表时短暂地突出显示:![行动时间 – 突出显示元素](img/9642_06_03.jpg)
- en: In the previous screenshot we see the fade effect before it fades away from
    the newly added item.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一张截图中，我们看到了新添加的项目在从列表中淡出之前的淡出效果。
- en: '*What just happened?*'
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么?*'
- en: We add a click handler to the `<button>` element at the bottom of the list,
    which drives the functionality of the rest of the behavior. When the `<button>`
    element is clicked, we cache the selector for the `<input>` field and obtain the
    text that was entered into it.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在列表底部的`<button>`元素上添加了一个点击处理程序，它驱动了其他行为的功能。当点击`<button>`元素时，我们缓存了`<input>`字段的选择器，并获取了输入到其中的文本。
- en: If the variable holding the text is not empty, we then create new `<label>`
    and `<input>` elements. We add the text to the `<label>` element, as well, and
    then append the new item to the list. Finally, we apply the `highlight` effect
    and empty the `<input>` field.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 如果保存文本的变量不为空，那么我们就创建新的`<label>`和`<input>`元素。我们将文本添加到`<label>`元素中，然后将新项目附加到列表中。最后，我们应用`highlight`效果，并清空`<input>`字段。
- en: The pulsate effect
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 脉动效果
- en: The `pulsate` effect fades the element in and out of view a specified number
    of times so that the target element appears to pulsate. Like most of the effects
    we have looked at so far, it is easy to use and requires little or no configuration.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '`pulsate`效果让元素上下视图出现指定次数，以便目标元素看起来在脉动。像我们迄今为止看到的大多数效果一样，它很容易使用，并且需要很少或不需要配置。'
- en: Syntax
  id: totrans-178
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 语法
- en: '```js'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '```js'
- en: $(selector).effect( "pulsate", [,configuration] [,duration] );
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: $(selector).effect( "pulsate", [,configuration] [,duration] );
- en: '```'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Configuration options
  id: totrans-182
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置选项
- en: 'The `pulsate` effect also has just two configurable options; these are shown
    in the following table:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '`pulsate`效果也只有两个可配置的选项；这些在下表中显示：'
- en: '| Option | Default | Usage |'
  id: totrans-184
  prefs: []
  type: TYPE_TB
  zh: '| 选项 | 默认 | 用法 |'
- en: '| --- | --- | --- |'
  id: totrans-185
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `mode` | `"show"` | Sets whether the target element is shown or hidden when
    used with the `effect()` method, other possible values include `hide`, `toggle`,
    and `effect` |'
  id: totrans-186
  prefs: []
  type: TYPE_TB
  zh: '| `mode` | `"show"` | 设置目标元素在与`effect()`方法一起使用时是显示还是隐藏，其他可能的值包括`hide`、`toggle`和`effect`
    |'
- en: '| `times` | `5` | Sets the number of times the target element is pulsated |'
  id: totrans-187
  prefs: []
  type: TYPE_TB
  zh: '| `times` | `5` | 设置目标元素脉动的次数 |'
- en: Time for action – making an element pulsate
  id: totrans-188
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 – 使元素脉动
- en: In this example, we'll show a simple time sheet in which rows can be deleted
    by clicking a link. If a link is clicked, the corresponding row will be pulsated
    before it is removed.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们将展示一个简单的时间表，可以通过点击链接删除行。如果点击了链接，相应的行在删除之前会被脉动。
- en: 'Use the following markup in the template file:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在模板文件中使用以下标记：
- en: '```js'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: <table>
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <table>
- en: <tr>
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <tr>
- en: <th>Job Number</th>
  id: totrans-194
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <th>工作编号</th>
- en: <th>Start Time</th>
  id: totrans-195
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <th>开始时间</th>
- en: <th>End Time</th>
  id: totrans-196
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <th>结束时间</th>
- en: <th colspan="2">Total</th>
  id: totrans-197
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <th colspan="2">总时间</th>
- en: </tr>
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </tr>
- en: <tr>
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <tr>
- en: <td>05432</td>
  id: totrans-200
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <td>05432</td>
- en: <td>8:00</td>
  id: totrans-201
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <td>8:00</td>
- en: <td>8:43</td>
  id: totrans-202
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <td>8:43</td>
- en: <td>43 minutes</td>
  id: totrans-203
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <td>43 分钟</td>
- en: <td>
  id: totrans-204
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <td>
- en: <a class="delete" href="#" title="Delete this item">
  id: totrans-205
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <a class="delete" href="#" title="删除此项">
- en: Delete
  id: totrans-206
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 删除
- en: </a>
  id: totrans-207
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: </a>
- en: </td>
  id: totrans-208
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: </td>
- en: </tr>
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </tr>
- en: <tr>
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <tr>
- en: <td>05684</td>
  id: totrans-211
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <td>05684</td>
- en: <td>8:43</td>
  id: totrans-212
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <td>8:43</td>
- en: <td>10:21</td>
  id: totrans-213
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <td>10:21</td>
- en: <td>1 hour 38 minutes</td>
  id: totrans-214
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <td>1 小时 38 分钟</td>
- en: <td>
  id: totrans-215
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <td>
- en: <a class="delete" href="#" title="Delete this item">
  id: totrans-216
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <a class="delete" href="#" title="删除此项">
- en: Delete
  id: totrans-217
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 删除
- en: </a>
  id: totrans-218
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: </a>
- en: </td>
  id: totrans-219
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: </td>
- en: </tr>
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </tr>
- en: <tr>
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <tr>
- en: <td>05684</td>
  id: totrans-222
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <td>05684</td>
- en: <td>10:21</td>
  id: totrans-223
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <td>10:21</td>
- en: <td>13:30</td>
  id: totrans-224
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <td>13:30</td>
- en: <td>3 hour 9 minutes</td>
  id: totrans-225
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <td>3 小时 9 分钟</td>
- en: <td>
  id: totrans-226
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <td>
- en: <a class="delete" href="#" title="Delete this item">
  id: totrans-227
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <a class="delete" href="#" title="删除此项">
- en: Delete
  id: totrans-228
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 删除
- en: </a>
  id: totrans-229
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: </a>
- en: </td>
  id: totrans-230
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: </td>
- en: </tr>
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </tr>
- en: </table>
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </table>
- en: '```'
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Add the code to apply the effect to the closure at the bottom of the page:'
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加应用效果的代码到页面底部的闭包中：
- en: '```js'
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: $(".delete").click(function(e) {
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $(".delete").click(function(e) {
- en: e.preventDefault();
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: e.preventDefault();
- en: var row = $(this).closest("tr");
  id: totrans-238
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var row = $(this).closest("tr");
- en: row.closest("tr").children().css("backgroundColor","red").effect("pulsate",
    function() {
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: row.closest("tr").children().css("backgroundColor","red").effect("pulsate",
    function() {
- en: row.remove();
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: row.remove();
- en: '});'
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '});'
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Save this file as `pulsate.html`. Only a couple of styles are required for
    this example. These should go into a new file:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此文件保存为`pulsate.html`。这个例子只需要一些样式。这些应该放在一个新文件中：
- en: '```js'
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: table {
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: table {
- en: border-spacing:0;
  id: totrans-247
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: border-spacing:0;
- en: font:normal 13px sans-serif;
  id: totrans-248
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: font:normal 13px sans-serif;
- en: '}'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: th, td {
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: th, td {
- en: text-align:left;
  id: totrans-251
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: text-align:left;
- en: padding-right:20px;
  id: totrans-252
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: padding-right:20px;
- en: '}'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: Save this file in the `css` folder as `pulsate.css`.
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此文件保存在`css`文件夹中，命名为`pulsate.css`。
- en: Clicking the delete link in any row will apply the `pulsate` effect and then
    remove the table row:![Time for action – making an element pulsate](img/9642_06_04.jpg)
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击任何行中的删除链接将应用`pulsate`效果，然后删除该表行：![行动时间——使一个元素跳动](img/9642_06_04.jpg)
- en: The previous screenshot shows a single `pulsate` animation as it fades out.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 前一个截图显示了一个`pulsate`动画，当它淡出时。
- en: '*What just happened?*'
  id: totrans-258
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: When a **Delete** link is clicked on, our handler function first sets the `background-color`
    property of the `<tr>` element that the link is within. This is not mandatory
    for the effect, but it does help bring it to life.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 当点击**删除**链接时，我们的处理函数首先设置链接所在的`<tr>`元素的`background-color`属性。这对于效果并非必需，但确实有助于让效果栩栩如生。
- en: We then apply the `pulsate` effect to all of the `<td>` elements within the
    row using the `effect()` method. We need to apply the effect to the `<td>` elements
    instead of the `<tr>` element so that the effect works as intended in IE.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们使用`effect()`方法将`pulsate`效果应用于行中的所有`<td>`元素。我们需要将效果应用于`<td>`元素而不是`<tr>`元素，以便在IE中效果按预期工作。
- en: When the effect ends, our inline callback function will be executed, which removes
    the `<tr>` element. Obviously the `<tr>` element can only be removed once, and
    once it has been removed, subsequent attempts to remove it will just fail silently.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 当效果结束时，我们的内联回调函数将被执行，该函数会移除`<tr>`元素。显然，`<tr>`元素只能被移除一次，一旦被移除，随后的尝试将会静默失败。
- en: The shake effect
  id: totrans-262
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`shake`效果'
- en: The `shake` effect shakes the element that it is applied back and forth a specified
    number of times.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '`shake`效果使应用它的元素来回抖动指定次数。'
- en: Syntax
  id: totrans-264
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 语法
- en: '```js'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '```js'
- en: $(selector).effect( "shake", [,configuration] [,duration] );
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: $(selector).effect( "shake", [,configuration] [,duration] );
- en: '```'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Configuration options
  id: totrans-268
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置选项
- en: The `shake` effect exposes three configuration options that allow us to customize
    its behavior.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '`shake`效果公开了三个配置选项，允许我们自定义其行为。'
- en: 'The configuration options are listed in the following table:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 配置选项列在下表中：
- en: '| Option | Default | Usage |'
  id: totrans-271
  prefs: []
  type: TYPE_TB
  zh: '| 选项 | 默认值 | 用法 |'
- en: '| --- | --- | --- |'
  id: totrans-272
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `direction` | `"left"` | Sets the direction that the element moves in |'
  id: totrans-273
  prefs: []
  type: TYPE_TB
  zh: '| `direction` | `"left"` | 设置元素移动的方向 |'
- en: '| `distance` | `20` | Sets the number of pixels the element travels when it
    is shaken |'
  id: totrans-274
  prefs: []
  type: TYPE_TB
  zh: '| `distance` | `20` | 设置元素抖动时的像素数 |'
- en: '| `times` | `3` | Sets the number of times the element shakes |'
  id: totrans-275
  prefs: []
  type: TYPE_TB
  zh: '| `times` | `3` | 设置元素抖动的次数 |'
- en: Time for action – shaking an element
  id: totrans-276
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间——抖动一个元素
- en: The open source CMS WordPress uses the `shake` effect when incorrect login details
    are entered in the sign-in form for its backend administration area. In this example
    we can see how easy it is to implement this behavior using the `shake` effect.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 开源CMS WordPress在后端管理区域的登录表单中输入错误的登录详细信息时使用了`shake`效果。在这个例子中，我们可以看到使用`shake`效果实现此行为是多么简单。
- en: 'Add the following markup to the template file as the basis of the login form:'
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下标记添加到模板文件中，作为登录表单的基础：
- en: '```js'
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: <form>
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <form>
- en: <h2>Login</h2>
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <h2>登录</h2>
- en: <label>Username:<input id="name" type="text"></label>
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <label>用户名：<input id="name" type="text"></label>
- en: <label>Password:<input id="pass" type="text"></label>
  id: totrans-283
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <label>密码：<input id="pass" type="text"></label>
- en: <input type="submit" id="submit" value="Login">
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <input type="submit" id="submit" value="登录">
- en: </form>
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </form>
- en: '```'
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Now add the following code to the empty closure at the bottom of the template
    file:'
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在将以下代码添加到模板文件底部的空闭包中：
- en: '```js'
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: $("#submit").click(function(e) {
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("#submit").click(function(e) {
- en: e.preventDefault();
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: e.preventDefault();
- en: $("input").each(function(i, val) {
  id: totrans-291
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("input").each(function(i, val) {
- en: if (!$(this).val()) {
  id: totrans-292
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: if (!$(this).val()) {
- en: $(this).css("border", "1px solid red").effect("shake", {
  id: totrans-293
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: $(this).css("border", "1px solid red").effect("shake", {
- en: 'distance: 5 }, 100);'
  id: totrans-294
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'distance: 5 }, 100);'
- en: '}'
  id: totrans-295
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '});'
  id: totrans-296
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '});'
  id: totrans-297
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-298
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Save this file as `shake.html`. We also need a basic stylesheet for this example.
    Add the following CSS to a new file:'
  id: totrans-299
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此文件保存为`shake.html`。我们还需要一个基本的样式表来示例。将以下CSS添加到一个新文件中：
- en: '```js'
  id: totrans-300
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: form {
  id: totrans-301
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: form {
- en: width:145px;
  id: totrans-302
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: width:145px;
- en: padding:20px;
  id: totrans-303
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: padding:20px;
- en: margin:auto;
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: margin:auto;
- en: 'border:1px solid #000;'
  id: totrans-305
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'border:1px solid #000;'
- en: font:normal 13px sans-serif;
  id: totrans-306
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: font:normal 13px sans-serif;
- en: '}'
  id: totrans-307
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: h2 {
  id: totrans-308
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: h2 {
- en: font-size:14px;
  id: totrans-309
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: font-size:14px;
- en: margin-top:0;
  id: totrans-310
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: margin-top:0;
- en: '}'
  id: totrans-311
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: input {
  id: totrans-312
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: input {
- en: display:block;
  id: totrans-313
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: display:block;
- en: margin-bottom:10px;
  id: totrans-314
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: margin-bottom:10px;
- en: 'border:1px solid #000;'
  id: totrans-315
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'border:1px solid #000;'
- en: '}'
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-317
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: Save this file as `shake.css`.
  id: totrans-318
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此文件保存为`shake.css`。
- en: If we run the page in a browser and click the **Login** input button without
    completing either of the `<input>` fields, both fields will have their borders
    set to red and will shake from side to side:![Time for action – shaking an element](img/9642_06_05.jpg)
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们在浏览器中运行页面，并且点击**登录**输入按钮，而不填写任何一个`<input>`字段，两个字段都将边框设置为红色，并且会从一边摇摆到另一边：![行动时间
    - 摇摆一个元素](img/9642_06_05.jpg)
- en: In the previous screenshot, we see the text fields being shaken when they are
    left empty and the **Login** button is clicked.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的屏幕截图中，我们看到当输入框为空时并且点击**登录**按钮时，输入框会被摇晃。
- en: '*What just happened?*'
  id: totrans-321
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: When the **Login** button is clicked we simply check to see if each `<input>`
    has a value, and if not, we apply a red border and then call the `effect()` method
    specifying `shake` as the effect. We use a configuration object to reduce the
    distance the element moves, as well as specifying a relatively short duration.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 当点击**登录**按钮时，我们只需检查每个`<input>`是否有值，如果没有，我们就会应用红色边框，然后调用`effect()`方法，指定`shake`作为效果。我们使用配置对象来减少元素移动的距离，以及指定相对较短的持续时间。
- en: The size effect
  id: totrans-323
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 尺寸效果
- en: The `size` effect is used to resize an element, making it grow or shrink depending
    on its configuration. Unlike most of the other effects, the `size` effect must
    be configured for it to be used successfully.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '`size`效果用于调整元素的大小，使其根据其配置而增大或缩小。与大多数其他效果不同，`size`效果必须进行配置才能成功使用。'
- en: The `size` effect is also one of the only effects that has the base core file
    as well as another effect as a dependency. Most components rely only on the core
    file. As we downloaded the entire effect suite from the jQuery UI download builder,
    we don't need to worry about including the additional effect. It's already in
    the single file that the download builder created when we downloaded it at the
    start of the chapter.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: '`size`效果也是唯一一个具有基本核心文件以及另一个效果作为依赖关系的效果之一。大多数组件仅依赖于核心文件。由于我们从jQuery UI下载构建器下载了整个效果套件，因此无需担心包含额外效果。当我们在本章开头下载时，它已经在下载构建器创建的单个文件中。'
- en: Syntax
  id: totrans-326
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 语法
- en: '```js'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: '```js'
- en: $(selector).effect( "size", [,configuration] [,duration] );
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: $(selector).effect( "size", [,configuration] [,duration] );
- en: '```'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Configuration options
  id: totrans-330
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置选项
- en: 'The `size` effect gives us four configurable options, which are listed as follows:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '`size`效果给了我们四个可配置的选项，如下所示：'
- en: '| Option | Default | Usage |'
  id: totrans-332
  prefs: []
  type: TYPE_TB
  zh: '| 选项 | 默认值 | 用法 |'
- en: '| --- | --- | --- |'
  id: totrans-333
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `from` | `none` | Sets the size of the target element at the beginning of
    the animation. This option accepts an object with the `height` and `width` keys
    which are used to set the starting size of the target element. This option is
    not mandatory |'
  id: totrans-334
  prefs: []
  type: TYPE_TB
  zh: '| `from` | `none` | 设置动画开始时目标元素的大小。此选项接受一个对象，该对象具有`height`和`width`键，用于设置目标元素的起始大小。此选项不是强制性的
    |'
- en: '| `to` | `none` | Sets the size of the target element at the end of the animation.
    This option accepts an object with the `height` and `width` keys which are used
    to set the ending size of the target element. This option must be supplied |'
  id: totrans-335
  prefs: []
  type: TYPE_TB
  zh: '| `to` | `none` | 设置动画结束时目标元素的大小。此选项接受一个对象，该对象具有`height`和`width`键，用于设置目标元素的结束大小。此选项必须提供
    |'
- en: '| `origin` | `[''middle'',''center'']` | Sets the vanishing point for hiding
    animations, or the point from which it grows when used with show logic |'
  id: totrans-336
  prefs: []
  type: TYPE_TB
  zh: '| `origin` | `[''middle'',''center'']` | 设置隐藏动画的消失点，或者与显示逻辑一起使用时增长的点 |'
- en: '| `scale` | `"both"` | This option sets whether the whole `box` of the element
    (including border and padding CSS values) is scaled, just the `content`, or as
    in the default, `both` |'
  id: totrans-337
  prefs: []
  type: TYPE_TB
  zh: '| `scale` | `"both"` | 此选项设置元素的整个`box`（包括边框和填充的CSS值）是否被缩放，仅`content`，或者默认的`both`
    |'
- en: Time for action – resizing elements
  id: totrans-338
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 调整元素大小
- en: A popular use of growing and shrinking elements is the Fisheye menu, where elements
    grow when the mouse pointer hovers over them, and shrink back down when the pointer
    moves off of them. This effect is also used by the icons on the dock in Apple's
    OSX.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 增大和缩小元素的一个常见用途是鱼眼菜单，在鼠标指针悬停在它们上方时，元素会增大，当鼠标指针移出它们时，它们会缩小。这个效果也被苹果的OSX的码头上的图标使用。
- en: Using the `size` effect, we can implement our own basic Fisheye menu with just
    a few lines of code.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`size`效果，我们可以只用几行代码实现自己的基本鱼眼菜单。
- en: 'Add the following markup to the `<body>` of the template file:'
  id: totrans-341
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下标记添加到模板文件的`<body>`中：
- en: '```js'
  id: totrans-342
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: <div id="dock">
  id: totrans-343
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div id="dock">
- en: <a href="#" class="icon" id="finder">
  id: totrans-344
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <a href="#" class="icon" id="finder">
- en: <img src="img/finder.png"></a>
  id: totrans-345
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <img src="img/finder.png"></a>
- en: <a href="#" class="icon" id="mail">
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <a href="#" class="icon" id="mail">
- en: <img src="img/mail.png"></a>
  id: totrans-347
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <img src="img/mail.png"></a>
- en: <a href="#" class="icon" id="safari">
  id: totrans-348
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <a href="#" class="icon" id="safari">
- en: <img src="img/safari.png"></a>
  id: totrans-349
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <img src="img/safari.png"></a>
- en: <a href="#" class="icon" id="firefox">
  id: totrans-350
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <a href="#" class="icon" id="firefox">
- en: <img src="img/firefox_small.png"></a>
  id: totrans-351
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <img src="img/firefox_small.png"></a>
- en: <a href="#" class="icon" id="itunes">
  id: totrans-352
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <a href="#" class="icon" id="itunes">
- en: <img src="img/itunes.png"></a>
  id: totrans-353
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <img src="img/itunes.png"></a>
- en: </div>
  id: totrans-354
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </div>
- en: '```'
  id: totrans-355
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Add the following JavaScript to the third `<script>` element at the bottom
    of the `<body>` element:'
  id: totrans-356
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下JavaScript添加到`<body>`元素底部的第三个`<script>`元素中：
- en: '```js'
  id: totrans-357
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: $(".icon", "#dock").hover(function() {
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $(".icon", "#dock").hover(function() {
- en: $(this).stop().animate({
  id: totrans-359
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $(this).stop().animate({
- en: 'top: -31'
  id: totrans-360
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'top: -31'
- en: '}).find("img").stop().effect("size", {'
  id: totrans-361
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}).find("img").stop().effect("size", {'
- en: 'scale: "box", to: { width: 64, height: 64 }'
  id: totrans-362
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'scale: "box", to: { width: 64, height: 64 }'
- en: '});'
  id: totrans-363
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '}, function() {'
  id: totrans-364
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}, function() {'
- en: $(this).stop().animate({
  id: totrans-365
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $(this).stop().animate({
- en: 'top: -15'
  id: totrans-366
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'top: -15'
- en: '}).find("img").stop().effect("size", {'
  id: totrans-367
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}).find("img").stop().effect("size", {'
- en: 'scale: "box", to: { width: 48, height: 48 }'
  id: totrans-368
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'scale: "box", to: { width: 48, height: 48 }'
- en: '});'
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '});'
  id: totrans-370
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-371
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Save this file as `size.html`. We also need some styling. In a new file add
    the following code:'
  id: totrans-372
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此文件保存为`size.html`。我们还需要一些样式。在新文件中添加以下代码：
- en: '```js'
  id: totrans-373
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: '#dock {'
  id: totrans-374
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#dock {'
- en: width:380px;
  id: totrans-375
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: width:380px;
- en: height:90px;
  id: totrans-376
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: height:90px;
- en: position:fixed;
  id: totrans-377
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: position:fixed;
- en: bottom:0;
  id: totrans-378
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: bottom:0;
- en: background:url(../img/dock.png) no-repeat 0 0;
  id: totrans-379
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: background:url(../img/dock.png) no-repeat 0 0;
- en: '}'
  id: totrans-380
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: .icon {
  id: totrans-381
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: .icon {
- en: position:absolute;
  id: totrans-382
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: position:absolute;
- en: top:-15px;
  id: totrans-383
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: top:-15px;
- en: left:44px;
  id: totrans-384
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: left:44px;
- en: '}'
  id: totrans-385
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: .icon img { border:none; }
  id: totrans-386
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: .icon img { border:none; }
- en: '#mail { left:108px; }'
  id: totrans-387
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#mail { left:108px; }'
- en: '#safari { left:170px; }'
  id: totrans-388
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#safari { left:170px; }'
- en: '#firefox { left:229px; }'
  id: totrans-389
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#firefox { left:229px; }'
- en: '#itunes { left:289px; }'
  id: totrans-390
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#itunes { left:289px; }'
- en: '```'
  id: totrans-391
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: Save this file as `size.css` in the `css` folder.
  id: totrans-392
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此文件保存为`size.css`，保存在`css`文件夹中。
- en: When we run the file in a browser, we should see that the individual items in
    the menu grow and shrink as the mouse pointer moves over them:![Time for action
    – resizing elements](img/9642_06_06.jpg)
  id: totrans-393
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们在浏览器中运行文件时，应该看到菜单中的各个项目在鼠标指针移动到它们上方时变大和缩小：![动作时间 - 调整大小元素](img/9642_06_06.jpg)
- en: In the previous screenshot we see the menu as the pointer hovers over one of
    the items in the menu.
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一个截图中，我们看到鼠标指针悬停在菜单项上时的菜单。
- en: '*What just happened?*'
  id: totrans-395
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: We attach the `mouseenter` and `mouseleave` event handlers to each item within
    the dock using jQuery's `hover()` method, which accepts two functions, the first
    being executed on the `mouseenter` event, the second being executed on `mouseleave`.
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用jQuery的`hover()`方法将`mouseenter`和`mouseleave`事件处理程序附加到码头内的每个项目上，该方法接受两个函数，第一个函数在`mouseenter`事件上执行，第二个函数在`mouseleave`事件上执行。
- en: In the first function we use the `stop()` method to manage the queue and then
    animate the element's position by changing its `top` CSS value. Using `stop()`
    here prevents an unsightly jarring of the element's position on screen.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一个函数中，我们使用`stop()`方法来管理队列，然后通过更改其`top`CSS值来动画元素的位置。在这里使用`stop()`可以防止屏幕上元素位置的不美观的突变。
- en: We then navigate down the image inside the link and call the `stop()` method
    on this element, as well, before applying the `size` effect. We provide integer
    values for the `width` and `height` keys in a configuration object and as these
    values are larger than the dimensions of the image, the image will be increased
    in size.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们进入链接内的图像并在此元素上调用`stop()`方法，然后再应用`size`效果。我们为配置对象中的`width`和`height`键提供整数值，由于这些值大于图像的尺寸，因此图像将增大。
- en: Note
  id: totrans-399
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that when we use the `stop()` method with the image, it is to prevent a
    build-up of effects if the mouse pointer is repeatedly moved on and off one of
    the links. The second function is really the reverse of the first function, which
    simply resizes the element back to its original position and size.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，当我们在图像上使用`stop()`方法时，它是为了防止鼠标指针重复在链接上移动时效果堆积。第二个函数实际上是第一个函数的反向，它只是将元素调整回其原始位置和大小。
- en: The transfer effect
  id: totrans-401
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 传输效果
- en: The `transfer` effect simply transfers the outline of one element to another
    element. Like the `size` effect that we looked at a moment ago, the `transfer`
    effect will not work if it is not configured.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: '`transfer` 效果只是将一个元素的轮廓转移到另一个元素。与我们刚才看到的 `size` 效果一样，如果未经过配置，`transfer` 效果将无法生效。'
- en: Syntax
  id: totrans-403
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 语法
- en: '```js'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: '```js'
- en: $(selector).effect( "transfer", [,configuration] [,duration] );
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: $(selector).effect( "transfer", [,configuration] [,duration] );
- en: '```'
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Configuration options
  id: totrans-407
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置选项
- en: 'The `transfer` effect has only two configuration options, although only one
    of them needs to be set for the effect to work. The configuration options are
    listed in the following table:'
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: '`transfer` 效果仅有两个配置选项，尽管只需要设置其中一个即可使效果生效。配置选项列在以下表格中：'
- en: '| Option | Default | Usage |'
  id: totrans-409
  prefs: []
  type: TYPE_TB
  zh: '| 选项 | 默认值 | 用途 |'
- en: '| --- | --- | --- |'
  id: totrans-410
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `className` | `none` | The value of this option, if set, is added to the
    transfer element when the effect runs |'
  id: totrans-411
  prefs: []
  type: TYPE_TB
  zh: '| `className` | `none` | 如果设置了此选项的值，则在效果运行时将其添加到传输元素中 |'
- en: '| `to` | `none` | A jQuery selector that specifies the target element that
    the transfer element is sent to |'
  id: totrans-412
  prefs: []
  type: TYPE_TB
  zh: '| `to` | `none` | 指定传输元素发送到的目标元素的jQuery选择器 |'
- en: Time for action – transferring the outline of one element to another
  id: totrans-413
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 执行操作-将一个元素的轮廓转移到另一个元素上
- en: In this example we'll recreate a popular application installation dialog from
    OSX, and use the `transfer` effect to help show visitors where to drag the icon
    (the icon won't actually be draggable; all we're doing is looking at the `transfer`
    effect).
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，我们将重新创建OSX中流行的应用程序安装对话框，并使用 `transfer` 效果来帮助展示访问者将图标拖动到何处（实际上图标不可拖动；我们只是在观察
    `transfer` 效果）。
- en: 'Add the following elements to the `<body>` element of the template file to
    create the `install` dialog:'
  id: totrans-415
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在模板文件的 `<body>` 元素中添加以下元素以创建 `install` 对话框：
- en: '```js'
  id: totrans-416
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: <div id="install">
  id: totrans-417
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div id="install">
- en: <div id="firefox"></div>
  id: totrans-418
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div id="firefox"></div>
- en: <div id="apps"></div>
  id: totrans-419
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div id="apps"></div>
- en: </div>
  id: totrans-420
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </div>
- en: <p>To install the application, drag its icon over to the apps
  id: totrans-421
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <p>要安装应用程序，请将其图标拖动到应用程序文件夹
- en: folder icon.</p>
  id: totrans-422
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 文件夹图标。</p>
- en: <button id="show">Show me</button>
  id: totrans-423
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <button id="show">显示</button>
- en: '```'
  id: totrans-424
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Add the following script to the empty function at the bottom of the template
    file:'
  id: totrans-425
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下脚本添加到模板文件底部的空函数中：
- en: '```js'
  id: totrans-426
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: $("#show").click(function() {
  id: totrans-427
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("#show").click(function() {
- en: $("#firefox").effect("transfer", {
  id: totrans-428
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("#firefox").effect("transfer", {
- en: 'to: "#apps",'
  id: totrans-429
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'to: "#apps",'
- en: 'className: "ui-effect-transfer"'
  id: totrans-430
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类名： "ui-effect-transfer"
- en: '}, 1000);'
  id: totrans-431
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}, 1000);'
- en: '});'
  id: totrans-432
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-433
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Save the page as `transfer.html`. For the stylesheet add the following code
    to a new file:'
  id: totrans-434
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将页面保存为 `transfer.html`。 对于样式表，请将以下代码添加到新文件中：
- en: '```js'
  id: totrans-435
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: body {
  id: totrans-436
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: body {
- en: font:normal 14px sans-serif;
  id: totrans-437
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: font:normal 14px sans-serif;
- en: '}'
  id: totrans-438
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '#install {'
  id: totrans-439
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#install {'
- en: width:417px;
  id: totrans-440
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: width:417px;
- en: height:339px;
  id: totrans-441
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: height:339px;
- en: position:relative;
  id: totrans-442
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: position:relative;
- en: background:url(../img/install.jpg) no-repeat 0 0;
  id: totrans-443
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: background:url(../img/install.jpg) no-repeat 0 0;
- en: '}'
  id: totrans-444
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '#firefox {'
  id: totrans-445
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#firefox {'
- en: width:124px;
  id: totrans-446
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: width:124px;
- en: height:121px;
  id: totrans-447
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: height:121px;
- en: position:absolute;
  id: totrans-448
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: position:absolute;
- en: left:34px;
  id: totrans-449
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: left:34px;
- en: top:132px;
  id: totrans-450
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: top:132px;
- en: background:url(../img/firefox.png) no-repeat 0 0;
  id: totrans-451
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: background:url(../img/firefox.png) no-repeat 0 0;
- en: '}'
  id: totrans-452
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '#apps {'
  id: totrans-453
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#apps {'
- en: width:54px;
  id: totrans-454
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: width:54px;
- en: height:52px;
  id: totrans-455
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: height:52px;
- en: position:absolute;
  id: totrans-456
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: position:absolute;
- en: right:58px;
  id: totrans-457
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: right:58px;
- en: top:172px;
  id: totrans-458
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: top:172px;
- en: background:url(../img/apps.png) no-repeat 0 0;
  id: totrans-459
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: background:url(../img/apps.png) no-repeat 0 0;
- en: '}'
  id: totrans-460
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '.ui-effect-transfer { border:2px solid #7bee76; }'
  id: totrans-461
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '.ui-effect-transfer { border:2px solid #7bee76; }'
- en: '```'
  id: totrans-462
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: Save this file as `transfer.css` in the `css` folder.
  id: totrans-463
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此文件保存为 `transfer.css` 放在 `css` 文件夹中。
- en: When the `<button>` element is clicked on, an outline is transferred from the
    Firefox icon to the App folder icon to direct the visitor:![Time for action –
    transferring the outline of one element to another](img/9642_06_07.jpg)
  id: totrans-464
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当点击 `<button>` 元素时，Firefox 图标的轮廓会转移到应用程序文件夹图标上，以引导访问者：![执行操作-将一个元素的轮廓转移到另一个元素上](img/9642_06_07.jpg)
- en: The transfer element is resized as it moves from the starting element across
    to the target element. The animation is approximately 50 percent complete in the
    previous screenshot.
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 传输元素在从起始元素移动到目标元素时调整大小。在前一张截图中，动画完成了大约 50%。
- en: '*What just happened?*'
  id: totrans-466
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: In the underlying HTML we have a container `<div>` element, which is given the
    background image of the application install dialog box. Within this we have a
    `<div>` element, which is given the Firefox icon background, and a second `<div>`
    element, which is given the App folder icon. Both of the inner `<div>` elements
    are given `id` attributes for styling purposes and for easy selection with jQuery.
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: 在底层HTML中，我们有一个容器`<div>`元素，它被赋予了应用程序安装对话框的背景图像。在其中，我们有一个给定Firefox图标背景的`<div>`元素，以及一个给定应用程序文件夹图标的第二个`<div>`元素。这两个内部`<div>`元素都具有用于样式目的和轻松使用jQuery选择的`id`属性。
- en: In the script we add a click-handler function to the `<button>` element, which
    applies the effect every time the `<button>` element is clicked. The handler function
    calls the transfer effect on the `#firefox` element, which sets the icon as the
    starting element.
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 在脚本中，我们为`<button>`元素添加了一个单击处理程序函数，每次单击`<button>`元素时都会应用效果。处理程序函数在`#firefox`元素上调用传输效果，该效果将图标设置为起始元素。
- en: In the configuration object, we set the `to` option to a selector for the `apps`
    element, and the `className` option to the `ui-effect-transfer` string. This string
    is applied to the element as a class name and is used to add a green border to
    the transfer element while it is visible.
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: 在配置对象中，我们将`to`选项设置为`apps`元素的选择器，并将`className`选项设置为`ui-effect-transfer`字符串。此字符串将作为类名应用于元素，并在传输元素可见时用于添加绿色边框。
- en: Each time the `<button>` element is clicked on, the transfer element will be
    shown and will animate from the starting element (the Firefox icon) to the ending
    element (the Apps folder icon).
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 每次单击`<button>`元素时，传输元素都会显示，并且会从起始元素（Firefox图标）动画到结束元素（应用程序文件夹图标）。
- en: Pop quiz – using the effect API
  id: totrans-471
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 小测验-使用效果API
- en: Q1\. How many new effects does jQuery UI give us?
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: Q1\. jQuery UI给我们带来了多少种新效果？
- en: '2'
  id: totrans-473
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2'
- en: '18'
  id: totrans-474
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '18'
- en: '9'
  id: totrans-475
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '9'
- en: '14'
  id: totrans-476
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '14'
- en: Q2\. How is the effect we wish to use specified?
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: Q2\. 我们希望使用的效果如何指定？
- en: By calling the effect as a function, for example, `bounce()`
  id: totrans-478
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过调用函数来调用效果，例如，`bounce()`
- en: The name of the effect is passed in string format to the `effect()` method as
    the first argument, for example, `effect("bounce")`
  id: totrans-479
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 效果的名称以字符串格式作为第一个参数传递给`effect()`方法，例如，`effect("bounce")`
- en: 'The name of the effect is provided as the value of the `effect` key in an object
    passed to the `animate()` method, for example, `animate({ effect: "bounce" })`'
  id: totrans-480
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '效果的名称作为传递给`animate()`方法的对象中的`effect`键的值提供，例如，`animate({ effect: "bounce" })`'
- en: The name of the effect is passed as a string to an event helper, for example,
    `click("bounce")`
  id: totrans-481
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 效果的名称作为字符串传递给事件助手，例如，`click("bounce")`
- en: Using effects with the show and hide logic
  id: totrans-482
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用带有显示和隐藏逻辑的效果
- en: Some of the jQuery UI effects can also be used in conjunction with jQuery's
    `show()`, `hide()`, and `toggle()` methods when showing or hiding logic is required.
    In fact, some of the effects are better suited to this method of execution.
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: 一些jQuery UI效果也可以与jQuery的`show()`，`hide()`和`toggle()`方法结合使用，当需要显示或隐藏逻辑时。实际上，一些效果更适合这种执行方法。
- en: The blind effect
  id: totrans-484
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 盲效果
- en: The `blind` effect is the perfect example of an effect that is usually best
    used with the show/hide logic as opposed to the standard effect API. Although
    the `blind` effect will work with the standard effect API, what will happen is
    that the effect will run according to its default mode, but then the element will
    be put back into its original state. This is true for all effects that have a
    `mode` configuration option.
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: '`blind`效果是一个完美的例子，通常最好与显示/隐藏逻辑一起使用，而不是标准的效果API。虽然`blind`效果可以与标准效果API一起使用，但会发生的情况是效果会按照其默认模式运行，但然后元素将被放回到其原始状态。对于所有具有`mode`配置选项的效果都是如此。'
- en: Syntax
  id: totrans-486
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 语法
- en: '```js'
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: '```js'
- en: $(selector).hide|show|toggle|effect( "blind", [,configuration][,duration] );
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: $(selector).hide|show|toggle|effect( "blind", [,configuration][,duration] );
- en: '```'
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Configuration options
  id: totrans-490
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置选项
- en: 'The `blind` effect has the following configuration options:'
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: '`blind`效果具有以下配置选项：'
- en: '| Option | Default | Usage |'
  id: totrans-492
  prefs: []
  type: TYPE_TB
  zh: '| 选项 | 默认值 | 用法 |'
- en: '| --- | --- | --- |'
  id: totrans-493
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `direction` | `"vertical"` | Sets the axis along which the target element
    is shown or hidden |'
  id: totrans-494
  prefs: []
  type: TYPE_TB
  zh: '| `direction` | `"vertical"` | 设置沿着目标元素显示或隐藏的轴 |'
- en: '| `mode` | `"hide"` | Sets whether the element is shown or hidden when used
    with the `effect()` method. Other possible values include `show`, `toggle`, and
    `effect` |'
  id: totrans-495
  prefs: []
  type: TYPE_TB
  zh: '| `mode` | `"hide"` | 设置是否在与`effect()`方法一起使用时显示或隐藏元素。其他可能的值包括`show`，`toggle`和`effect`
    |'
- en: Time for action – using the blind effect
  id: totrans-496
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间-使用盲效果
- en: 'I mentioned earlier that the effect is reminiscent of a window blind rolling
    up or down, so let''s base our next example on that:'
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 我之前提到这个效果让人联想到窗帘升起或下降的情景，所以让我们的下一个例子以此为基础：
- en: 'In the `<body>` element of the template file add the following code:'
  id: totrans-498
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在模板文件的 `<body>` 元素中添加以下代码：
- en: '```js'
  id: totrans-499
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: <div id="window">
  id: totrans-500
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div id="window">
- en: <div id="blind"></div>
  id: totrans-501
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div id="blind"></div>
- en: </div>
  id: totrans-502
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </div>
- en: '```'
  id: totrans-503
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Implement the effect with the following script:'
  id: totrans-504
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下脚本实现效果：
- en: '```js'
  id: totrans-505
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: $("#window").click(function() {
  id: totrans-506
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("#window").click(function() {
- en: $("#blind").toggle("blind");
  id: totrans-507
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("#blind").toggle("blind");
- en: '});'
  id: totrans-508
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-509
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Save this file as `blind.html`. The stylesheet for this example is as follows:'
  id: totrans-510
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此文件保存为 `blind.html`。此示例的样式表如下：
- en: '```js'
  id: totrans-511
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: '#window {'
  id: totrans-512
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#window {'
- en: width:464px;
  id: totrans-513
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: width:464px;
- en: height:429px;
  id: totrans-514
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: height:429px;
- en: position:relative;
  id: totrans-515
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: position:relative;
- en: cursor:pointer;
  id: totrans-516
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cursor:pointer;
- en: background:url(../img/window.jpg) no-repeat 0 0;
  id: totrans-517
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: background:url(../img/window.jpg) no-repeat 0 0;
- en: '}'
  id: totrans-518
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '#blind {'
  id: totrans-519
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#blind {'
- en: display:none;
  id: totrans-520
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: display:none;
- en: width:332px;
  id: totrans-521
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: width:332px;
- en: height:245px;
  id: totrans-522
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: height:245px;
- en: position:absolute;
  id: totrans-523
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: position:absolute;
- en: left:64px;
  id: totrans-524
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: left:64px;
- en: top:113px;
  id: totrans-525
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: top:113px;
- en: background:url(../img/blind.png) no-repeat 0 100%;
  id: totrans-526
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: background:url(../img/blind.png) no-repeat 0 100%;
- en: '}'
  id: totrans-527
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-528
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: Save this as `blind.css` in the `css` folder.
  id: totrans-529
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此保存为 `blind.css`，放在 `css` 文件夹中。
- en: When we run the page in a browser, the blind should alternately roll down and
    up each time the window is clicked:![Time for action – using the blind effect](img/9642_06_08.jpg)
  id: totrans-530
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们在浏览器中运行页面时，每次点击窗口时，百叶窗应该交替卷下和卷起：![行动时间 - 使用百叶窗效果](img/9642_06_08.jpg)
- en: The previous screenshot shows the blind in its fully-open state.
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的屏幕截图显示了完全打开的百叶窗。
- en: '*What just happened?*'
  id: totrans-532
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚刚发生了什么？*'
- en: We set a click handler on the outer container which calls the `toggle()` method
    on the inner element. In the CSS, we set the inner element to be hidden initially,
    so the first time the container element is clicked, the inner element will be
    shown.
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在外部容器上设置了一个点击处理程序，该处理程序调用内部元素的 `toggle()` 方法。在 CSS 中，我们最初将内部元素设置为隐藏，因此第一次单击容器元素时，内部元素将显示。
- en: The clip effect
  id: totrans-534
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 剪裁效果
- en: The `clip` effect causes the element it is called upon to reduce in size vertically
    or horizontally until it disappears.
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: '`clip` 效果会导致调用它的元素垂直或水平缩小直到消失。'
- en: Syntax
  id: totrans-536
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 语法
- en: '```js'
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: '```js'
- en: $(selector).hide|show|toggle|effect( "clip", [,configuration][,duration] );
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: $(selector).hide|show|toggle|effect( "clip", [,configuration][,duration] );
- en: '```'
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Configuration options
  id: totrans-540
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置选项
- en: 'The configuration options we have at our disposal when using the `clip` effect
    allow us to control the direction in which the animation proceeds, and whether
    the element is shown or hidden:'
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `clip` 效果时，我们可以利用的配置选项允许我们控制动画进行的方向以及元素是显示还是隐藏的：
- en: '| Option | Default | Usage |'
  id: totrans-542
  prefs: []
  type: TYPE_TB
  zh: '| 选项 | 默认 | 用法 |'
- en: '| --- | --- | --- |'
  id: totrans-543
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `direction` | `"vertical"` | Sets the axis along which the element animates
    |'
  id: totrans-544
  prefs: []
  type: TYPE_TB
  zh: '| `direction` | `"vertical"` | 设置元素动画的轴线方向 |'
- en: '| `mode` | `"hide"` | Configures whether the element is hidden or shown. Other
    possible values are `show`, `toggle`, and `effect` |'
  id: totrans-545
  prefs: []
  type: TYPE_TB
  zh: '| `mode` | `"hide"` | 配置元素是隐藏还是显示。其他可能的值是 `show`、`toggle` 和 `effect` |'
- en: Time for action – clipping an element in and out
  id: totrans-546
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 剪裁元素进入和退出
- en: This effect is billed as being similar to what happens to the picture when an
    old television set is turned off, so let's work that into our example.
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: 此效果被称为类似于旧电视机关闭时图片的情景，所以让我们在例子中加以体现。
- en: 'Add the following elements to the `<body>` element of the template file:'
  id: totrans-548
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下元素添加到模板文件的 `<body>` 元素中：
- en: '```js'
  id: totrans-549
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: <div id="tv">
  id: totrans-550
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div id="tv">
- en: <div id="bg"></div>
  id: totrans-551
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div id="bg"></div>
- en: <div id="static"></div>
  id: totrans-552
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div id="static"></div>
- en: </div>
  id: totrans-553
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </div>
- en: '```'
  id: totrans-554
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Then, use the following simple script at the bottom of the page:'
  id: totrans-555
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在页面底部使用以下简单的脚本：
- en: '```js'
  id: totrans-556
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: $("#tv").click(function() {
  id: totrans-557
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("#tv").click(function() {
- en: $("#static").effect("clip");
  id: totrans-558
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("#static").effect("clip");
- en: '});'
  id: totrans-559
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-560
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Save this file as `clip.html`. The stylesheet for this example is as follows:'
  id: totrans-561
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此文件保存为 `clip.html`。此示例的样式表如下：
- en: '```js'
  id: totrans-562
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: '#tv {'
  id: totrans-563
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#tv {'
- en: width:300px;
  id: totrans-564
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: width:300px;
- en: height:269px;
  id: totrans-565
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: height:269px;
- en: position:relative;
  id: totrans-566
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: position:relative;
- en: cursor:pointer;
  id: totrans-567
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cursor:pointer;
- en: background:url(../img/tv.png) no-repeat 0 0;
  id: totrans-568
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: background:url(../img/tv.png) no-repeat 0 0;
- en: '}'
  id: totrans-569
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '#bg {'
  id: totrans-570
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#bg {'
- en: width:220px;
  id: totrans-571
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: width:220px;
- en: height:180px;
  id: totrans-572
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: height:180px;
- en: position:absolute;
  id: totrans-573
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: position:absolute;
- en: left:42px;
  id: totrans-574
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: left:42px;
- en: top:30px;
  id: totrans-575
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: top:30px;
- en: z-index:-2;
  id: totrans-576
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: z-index:-2;
- en: background-color:#000;
  id: totrans-577
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: background-color:#000;
- en: '}'
  id: totrans-578
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '#static {'
  id: totrans-579
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#static {'
- en: width:216px;
  id: totrans-580
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: width:216px;
- en: height:178px;
  id: totrans-581
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: height:178px;
- en: position:absolute;
  id: totrans-582
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: position:absolute;
- en: left:44px;
  id: totrans-583
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: left:44px;
- en: top:31px;
  id: totrans-584
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: top:31px;
- en: z-index:-1;
  id: totrans-585
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: z-index:-1;
- en: background:url(../img/static.gif) no-repeat 0 0;
  id: totrans-586
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: background:url(../img/static.gif) no-repeat 0 0;
- en: '}'
  id: totrans-587
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-588
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: Save this file in the `css` folder as `clip.css`.
  id: totrans-589
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此文件保存在 `css` 文件夹中为 `clip.css`。
- en: When the page is run, we should be able to click anywhere on the television
    and see the effect run:![Time for action – clipping an element in and out](img/9642_06_09.jpg)
  id: totrans-590
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当页面运行时，我们应该能够单击电视的任何位置并看到效果运行：![操作时间 - 剪切元素进入和退出](img/9642_06_09.jpg)
- en: The previous screenshot shows the static element as it is being clipped.
  id: totrans-591
  prefs: []
  type: TYPE_NORMAL
  zh: 前一个截图显示了静态元素被剪辑的情况。
- en: '*What just happened?*'
  id: totrans-592
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚刚发生了什么？*'
- en: The underlying page has a collection of elements on it with the outer container
    being styled to look like the television and a couple of inner elements, one of
    which is a simple background which sits behind the static element. Both inner
    containers use CSS `z-index` to sit behind the outer container.
  id: totrans-593
  prefs: []
  type: TYPE_NORMAL
  zh: 底层页面有一组元素，其中外部容器被样式化为电视，并有两个内部元素，其中一个是简单的背景，位于静态元素的后面。两个内部容器都使用 CSS `z-index`
    位于外部容器的后面。
- en: When any part of the television is clicked, the static element has the effect
    applied to it without any additional configuration, and because the default mode
    of the effect is `hide`, the element will be hidden automatically when the effect
    ends. To see the reverse of the effect, we could hide the static by default and
    set the mode to `show`, or we could set the `mode` to `toggle` and have the static
    alternately show and hide.
  id: totrans-594
  prefs: []
  type: TYPE_NORMAL
  zh: 当电视的任何部分被点击时，静态元素会自动应用效果，而无需任何额外的配置，因为效果的默认模式是 `hide`，所以在效果结束时元素会自动隐藏。要看到效果的反向，我们可以默认隐藏静态元素并将模式设置为
    `show`，或者我们可以将 `mode` 设置为 `toggle` 并让静态元素交替显示和隐藏。
- en: The drop effect
  id: totrans-595
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下拉效果
- en: The `drop` effect is used to show an element while sliding it open, or hide
    it while sliding it closed. This effect works on both the `position` and `opacity`
    of the element it is applied to.
  id: totrans-596
  prefs: []
  type: TYPE_NORMAL
  zh: '`drop` 效果用于在滑动打开元素时显示元素，或在滑动关闭元素时隐藏元素。该效果同时作用于所应用元素的 `position` 和 `opacity`。'
- en: Syntax
  id: totrans-597
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 语法
- en: '```js'
  id: totrans-598
  prefs: []
  type: TYPE_NORMAL
  zh: '```js'
- en: $(selector).hide|show|toggle|effect( "drop", [,configuration][,duration] );
  id: totrans-599
  prefs: []
  type: TYPE_NORMAL
  zh: $(selector).hide|show|toggle|effect( "drop", [,configuration][,duration] );
- en: '```'
  id: totrans-600
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Configuration options
  id: totrans-601
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置选项
- en: 'The `drop` effect allows us to control the direction in which the element drops,
    and whether it is shown or hidden:'
  id: totrans-602
  prefs: []
  type: TYPE_NORMAL
  zh: '`drop` 效果允许我们控制元素下降的方向，以及是否显示或隐藏：'
- en: '| Option | Default | Usage |'
  id: totrans-603
  prefs: []
  type: TYPE_TB
  zh: '| 选项 | 默认 | 用法 |'
- en: '| --- | --- | --- |'
  id: totrans-604
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `direction` | `"left"` | Sets the direction that the element drops in or
    out of the page. The other option is the string `right` |'
  id: totrans-605
  prefs: []
  type: TYPE_TB
  zh: '| `direction` | `"left"` | 设置元素进入或离开页面的方向。另一个选项是字符串 `right` |'
- en: '| `mode` | `"hide"` | Sets whether the element is shown or hidden when using
    the `effect()` method. Other possible values include `show`, `toggle`, and `effect`
    |'
  id: totrans-606
  prefs: []
  type: TYPE_TB
  zh: '| `mode` | `"hide"` | 设置使用 `effect()` 方法时元素是显示还是隐藏的。其他可能的值包括 `show`、`toggle`
    和 `effect` |'
- en: Time for action – using the effect
  id: totrans-607
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作时间 - 使用效果
- en: The social networking site Twitter introduced a novel effect whereby the system
    reports actions to the visitor by displaying a message that drops down at the
    top of the page. We can easily replicate this behavior using the `drop` effect.
  id: totrans-608
  prefs: []
  type: TYPE_NORMAL
  zh: 社交网络网站 Twitter 推出了一种新颖的效果，通过在页面顶部显示一个下拉消息来向访问者报告动作。我们可以很容易地使用 `drop` 效果复制这种行为。
- en: 'Add the following markup to the `<body>` element of our template page:'
  id: totrans-609
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下标记添加到我们模板页面的 `<body>` 元素中：
- en: '```js'
  id: totrans-610
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: <div id="confirmation">
  id: totrans-611
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div id="confirmation">
- en: <p>Your request has been completed!</p>
  id: totrans-612
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <p>您的请求已完成！</p>
- en: </div>
  id: totrans-613
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </div>
- en: '```'
  id: totrans-614
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Now, at the bottom of the page add the following code:'
  id: totrans-615
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在页面底部添加以下代码：
- en: '```js'
  id: totrans-616
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: $("#confirmation").effect("drop", {
  id: totrans-617
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("#confirmation").effect("drop", {
- en: 'mode: "show",'
  id: totrans-618
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'mode: "show",'
- en: 'direction: "up"'
  id: totrans-619
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'direction: "up"'
- en: '}, function() {'
  id: totrans-620
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}, function() {'
- en: var timer = function() {
  id: totrans-621
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: var timer = function() {
- en: '$("#confirmation").effect("drop", { mode: "hide",'
  id: totrans-622
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '$("#confirmation").effect("drop", { mode: "hide",'
- en: 'direction: "up"});'
  id: totrans-623
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'direction: "up"});'
- en: '}'
  id: totrans-624
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: setTimeout(timer, 3000);
  id: totrans-625
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: setTimeout(timer, 3000);
- en: '});'
  id: totrans-626
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-627
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Save the page as `drop.html`. We only need a few styles for this example. Create
    the following very basic stylesheet:'
  id: totrans-628
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将页面保存为 `drop.html`。对于这个示例，我们只需要一些基本样式。创建以下非常基本的样式表：
- en: '```js'
  id: totrans-629
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: body { background-color:#3cf; }
  id: totrans-630
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: body { background-color:#3cf; }
- en: '#confirmation {'
  id: totrans-631
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#confirmation {'
- en: display:none;
  id: totrans-632
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: display:none;
- en: width:100%;
  id: totrans-633
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: width:100%;
- en: height:60px;
  id: totrans-634
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: height:60px;
- en: position:absolute;
  id: totrans-635
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: position:absolute;
- en: top:0;
  id: totrans-636
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: top:0;
- en: left:0;
  id: totrans-637
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: left:0;
- en: z-index:999;
  id: totrans-638
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: z-index:999;
- en: background-color:#fff;
  id: totrans-639
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: background-color:#fff;
- en: text-align:center;
  id: totrans-640
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: text-align:center;
- en: font:normal 18px sans-serif;
  id: totrans-641
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: font:normal 18px sans-serif;
- en: '}'
  id: totrans-642
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '#confirmation p {'
  id: totrans-643
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#confirmation p {'
- en: margin:0;
  id: totrans-644
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: margin:0;
- en: position:relative;
  id: totrans-645
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: position:relative;
- en: top:18px;
  id: totrans-646
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: top:18px;
- en: '}'
  id: totrans-647
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-648
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: Save the CSS as `drop.css`.
  id: totrans-649
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 CSS 保存为 `drop.css`。
- en: When the page loads, the message should initially be displayed before fading
    away after a short interval:![Time for action – using the effect](img/9642_06_10.jpg)
  id: totrans-650
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当页面加载时，消息应该在短暂的间隔后显示，然后逐渐消失：![动作时间 - 使用效果](img/9642_06_10.jpg)
- en: The previous screenshot shows the message slowly being hidden. It will appear
    to slide up and fade out at the same time when being hidden after the timer interval
    has passed.
  id: totrans-651
  prefs: []
  type: TYPE_NORMAL
  zh: 上一张截图显示了消息慢慢被隐藏。当计时器间隔过去后，它会看起来同时向上滑动和淡出。
- en: '*What just happened?*'
  id: totrans-652
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚刚发生了什么？*'
- en: The underlying markup of the message itself is extremely simple; we just need
    a container and the actual message. In our example the message is hardcoded into
    the page, but we could easily set this dynamically depending on the action being
    reported.
  id: totrans-653
  prefs: []
  type: TYPE_NORMAL
  zh: 消息本身的底层标记非常简单；我们只需要一个容器和实际的消息。在我们的例子中，消息被硬编码到页面中，但根据报告的动作，我们可以很容易地动态设置它。
- en: The CSS is equally as simple, supplying a background color for the page to better
    highlight the message, and providing some basic styles for the container and the
    message itself. The most important rule (in this implementation) is that the container
    is initially hidden from view.
  id: totrans-654
  prefs: []
  type: TYPE_NORMAL
  zh: CSS 同样简单，为页面提供了一个背景颜色，以更好地突出消息，并为容器和消息本身提供了一些基本样式。最重要的规则（在这个实现中）是容器最初是隐藏的。
- en: Our script shows the message as soon as the page has loaded, but normally it
    would be triggered by the completion of some system action. We use the `effect()`
    method to initiate the effect and configure the `mode` to `show` and the `direction`
    to `up` (the element will still appear to drop downwards because it is positioned
    absolutely) using a configuration object passed as the second argument to the
    `effect()` method.
  id: totrans-655
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的脚本在页面加载后立即显示消息，但通常情况下，它会在完成某些系统操作后触发。我们使用`effect()`方法来启动效果，并使用配置对象作为`effect()`方法的第二个参数来配置`mode`为`show`，`direction`为`up`（由于它的绝对定位，元素仍然会向下掉落）。
- en: Within the callback function passed to the `effect` method, we create an inline
    function stored in the `timer` variable. Within this function we just hide the
    confirmation message, using the `effect()` method and setting the `mode` configuration
    option to `hide` and the `direction` option to `up` once again.
  id: totrans-656
  prefs: []
  type: TYPE_NORMAL
  zh: 在传递给`effect`方法的回调函数内部，我们创建了一个存储在`timer`变量中的内联函数。在这个函数内部，我们只是隐藏确认消息，使用`effect()`方法并再次将`mode`配置选项设置为`hide`，将`direction`选项设置为`up`。
- en: After this function definition, we use JavaScript's `setTimeout` function to
    execute the `timer` function after 3 seconds have elapsed. We use a closure to
    call our `timer` function in keeping with the current best practice.
  id: totrans-657
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个函数定义之后，我们使用 JavaScript 的`setTimeout`函数在 3 秒后执行`timer`函数。我们使用一个闭包来调用我们的`timer`函数，以保持当前的最佳实践。
- en: The explode effect
  id: totrans-658
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 爆炸效果
- en: The `explode` effect provides a great visual show by exploding the selected
    element into a specified number of pieces before fading them away. This effect
    can be used with both the effect API, as well as the `show`, `hide`, or `toggle`
    logic.
  id: totrans-659
  prefs: []
  type: TYPE_NORMAL
  zh: '`explode`效果通过将选定的元素炸成指定数量的碎片然后淡出，提供了一个很好的视觉效果。这个效果可以与效果 API 一起使用，也可以与`show`、`hide`或`toggle`逻辑一起使用。'
- en: Syntax
  id: totrans-660
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 语法
- en: '```js'
  id: totrans-661
  prefs: []
  type: TYPE_NORMAL
  zh: '```js'
- en: $(selector).hide|show|toggle|effect( "explode", [,configuration][,duration]
    );
  id: totrans-662
  prefs: []
  type: TYPE_NORMAL
  zh: $(selector).hide|show|toggle|effect( "explode", [,configuration][,duration]
    );
- en: '```'
  id: totrans-663
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Configuration options
  id: totrans-664
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置选项
- en: 'When using the `explode` effect we can control how many pieces the element
    is exploded into, and whether the element is shown or hidden:'
  id: totrans-665
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用`explode`效果时，我们可以控制元素爆炸成多少个碎片，以及元素是显示还是隐藏：
- en: '| Option | Default | Usage |'
  id: totrans-666
  prefs: []
  type: TYPE_TB
  zh: '| 选项 | 默认值 | 用法 |'
- en: '| --- | --- | --- |'
  id: totrans-667
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `mode` | `"hide"` | Sets whether the element is shown or hidden when used
    with the `effect()` method. Other values are `show`, `effect`, and `toggle` |'
  id: totrans-668
  prefs: []
  type: TYPE_TB
  zh: '| `mode` | `"hide"` | 设置在使用`effect()`方法时元素是显示还是隐藏。其他值是`show`、`effect`和`toggle`
    |'
- en: '| `pieces` | `9` | Sets the number of pieces the element is exploded into |'
  id: totrans-669
  prefs: []
  type: TYPE_TB
  zh: '| `pieces` | `9` | 设置元素爆炸成的碎片数量 |'
- en: Time for action – exploding an element
  id: totrans-670
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动作时间 - 爆炸元素
- en: In this example we will make an image explode.
  id: totrans-671
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们将使一个图片爆炸。
- en: 'Just add the following simple image to the `<body>` element of the template
    file:'
  id: totrans-672
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 只需将以下简单的图片添加到模板文件的`<body>`元素中：
- en: '```js'
  id: totrans-673
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: <img src="img/grenade.jpg" alt="Grenade">
  id: totrans-674
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <img src="img/grenade.jpg" alt="手榴弹">
- en: '```'
  id: totrans-675
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Then add the following equally simple code to the empty function at the bottom
    of the template file:'
  id: totrans-676
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在模板文件底部的空函数中添加以下同样简单的代码：
- en: '```js'
  id: totrans-677
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: $("img").click(function() {
  id: totrans-678
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("img").click(function() {
- en: $(this).effect("explode");
  id: totrans-679
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $(this).effect("explode");
- en: '});'
  id: totrans-680
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-681
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: Save this page as `explode.html`.
  id: totrans-682
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此页面保存为`explode.html`。
- en: This example is so simple we don't even need a stylesheet. Once we click on
    the grenade, it is exploded into the default number of pieces:![Time for action
    – exploding an element](img/9642_06_11.jpg)
  id: totrans-683
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这个示例非常简单，我们甚至不需要样式表。一旦我们点击手榴弹，它就会爆炸成默认数量的碎片：![行动时间-爆炸一个元素](img/9642_06_11.jpg)
- en: The exploded element fades away as the individual pieces of the element move
    apart.
  id: totrans-684
  prefs: []
  type: TYPE_NORMAL
  zh: 爆炸的元素随着元素的个体移开而逐渐消失。
- en: '*What just happened?*'
  id: totrans-685
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚刚发生了什么？*'
- en: In the example, all we need to do is attach a click handler directly to the
    image which applies the `explode` effect using the `effect()` method. No configuration
    in this instance is required because the default `mode` of the effect is `hide`.
  id: totrans-686
  prefs: []
  type: TYPE_NORMAL
  zh: 在示例中，我们所需要做的就是直接将点击处理程序附加到图像上，该处理程序使用`effect()`方法应用`explode`效果。在这种情况下，不需要配置，因为效果的默认`mode`是`hide`。
- en: Note
  id: totrans-687
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that we can also run this effect in reverse by setting the `mode` option
    to `show`, or by using the `show()` logic instead. In this scenario, we will see
    the target element constructed from a series of pieces that fade in and fly together—an
    explosion in reverse.
  id: totrans-688
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们还可以通过将`mode`选项设置为`show`或使用`show()`逻辑来以相反的方式运行此效果。在这种情况下，我们将看到目标元素由一系列淡入并飞到一起的碎片构成——一个逆向的爆炸。
- en: The fold effect
  id: totrans-689
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 折叠效果
- en: The `fold` effect simulates something being folded in half along one axis and
    then folded in half along the other axis. Of course, the element isn't actually
    folded in the 3D sense; first, one side of the element moves up a specified amount,
    and then another side is moved in and the element disappears.
  id: totrans-690
  prefs: []
  type: TYPE_NORMAL
  zh: '`fold`效果模拟了沿一条轴折叠一些东西，然后沿另一条轴折叠一半。当然，元素在三维意义上并没有折叠；首先，元素的一侧移动了指定的量，然后另一侧被移进来，元素消失了。'
- en: By default the effect uses the `hide` mode so it will automatically be hidden
    at the end of the animation. The element being folded is not scaled; it is clipped
    instead, so images and text will not squash up as the effect runs.
  id: totrans-691
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，该效果使用`hide`模式，因此在动画结束时会自动隐藏。被折叠的元素不会被缩放；它被剪切，因此在效果运行时图像和文本不会挤在一起。
- en: Syntax
  id: totrans-692
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 语法
- en: '```js'
  id: totrans-693
  prefs: []
  type: TYPE_NORMAL
  zh: '```js'
- en: $(selector).hide|show|toggle|effect( "fold", [,configuration][,duration] );
  id: totrans-694
  prefs: []
  type: TYPE_NORMAL
  zh: $(selector).hide|show|toggle|effect( "fold", [,configuration][,duration] );
- en: '```'
  id: totrans-695
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Configuration options
  id: totrans-696
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置选项
- en: 'The `fold` effect exposes three configurable options, which are shown in the
    following table:'
  id: totrans-697
  prefs: []
  type: TYPE_NORMAL
  zh: '`fold`效果暴露了三个可配置选项，如下表所示：'
- en: '| Option | Default | Usage |'
  id: totrans-698
  prefs: []
  type: TYPE_TB
  zh: '| 选项 | 默认 | 用法 |'
- en: '| --- | --- | --- |'
  id: totrans-699
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `horizFirst` | `false` | Sets whether the element is clipped along the horizontal
    axis first or not |'
  id: totrans-700
  prefs: []
  type: TYPE_TB
  zh: '| `horizFirst` | `false` | 设置元素首先是否沿水平轴剪切 |'
- en: '| `mode` | `"hide"` | Sets whether the element is shown or hidden when used
    with the `effect()` method. Other values may include `show`, `effect`, or `toggle`
    |'
  id: totrans-701
  prefs: []
  type: TYPE_TB
  zh: '| `mode` | `"hide"` | 设置在使用`effect()`方法时元素是显示还是隐藏。其他值可能包括`show`，`effect`或`toggle`
    |'
- en: '| `size` | `15` | This sets the distance of the first fold in pixels and can
    take either an integer, or a string specifying a value, such as a percentage |'
  id: totrans-702
  prefs: []
  type: TYPE_TB
  zh: '| `size` | `15` | 这设置了以像素为单位的第一个折叠的距离，可以是整数，也可以是指定值的字符串，例如百分比 |'
- en: Time for action – folding an element away
  id: totrans-703
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间-将元素折叠起来
- en: In this example, we'll apply the fold effect to a simple image of a piece of
    paper.
  id: totrans-704
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，我们将折叠效果应用于一张简单的纸张图片。
- en: 'All we need is an image; add the following code to the `<body>` element of
    the template file:'
  id: totrans-705
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们只需要一张图片；将以下代码添加到模板文件的`<body>`元素中：
- en: '```js'
  id: totrans-706
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: <img src="img/paper.jpg" alt="A piece of paper">
  id: totrans-707
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <img src="img/paper.jpg" alt="一张纸">
- en: '```'
  id: totrans-708
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Next, add the following simple script to the bottom of the page, in the empty
    function as with previous examples:'
  id: totrans-709
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，像以前的例子一样，在页面底部的空函数中添加以下简单脚本：
- en: '```js'
  id: totrans-710
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: $("img").click(function() {
  id: totrans-711
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("img").click(function() {
- en: '$(this).effect("fold", { size: "50%" }, 1000);'
  id: totrans-712
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '$(this).effect("fold", { size: "50%" }, 1000);'
- en: '});'
  id: totrans-713
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-714
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: Save this file as `fold.html`.
  id: totrans-715
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此文件保存为`fold.html`。
- en: This is another example that we don't need a stylesheet for. When the image
    is clicked, it should fold up and disappear:![Time for action – folding an element
    away](img/9642_06_12.jpg)
  id: totrans-716
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是另一个我们不需要样式表的例子。当点击图像时，它应该折叠起来并消失：![行动时间-将元素折叠起来](img/9642_06_12.jpg)
- en: In the previous screenshots, we see the image first as it starts out, then when
    the effect has hidden the bottom half of the image, and finally, as the top half
    of the image is being hidden. Notice that the target element is clipped and not
    resized.
  id: totrans-717
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一屏幕截图中，我们可以看到图像首先开始，然后是效果隐藏了图像的下半部分，最后，图像的上半部分正在被隐藏。请注意，目标元素被剪裁而不是重新调整大小。
- en: '*What just happened?*'
  id: totrans-718
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚刚发生了什么？*'
- en: We simply set a click handler on the `<img>` element, which will apply the `fold`
    effect. We specify the `size` option as `50%` so that the amount of fold along
    each axis is equal, and slow the effect down slightly by specifying a longer than
    default duration of `1000` milliseconds.
  id: totrans-719
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只是在`<img>`元素上设置了一个点击处理程序，将应用`fold`效果。我们将`size`选项指定为`50％`，以便每个轴上的折叠量是相等的，并通过指定比默认持续时间长的`1000`毫秒稍微减慢效果。
- en: The puff effect
  id: totrans-720
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: puff效果
- en: The `puff` effect expands the element it is applied to by a specified amount
    while fading it away to nothing, or fades it in and then shrinks it slightly,
    depending on how it is used.
  id: totrans-721
  prefs: []
  type: TYPE_NORMAL
  zh: '`puff`效果通过指定的数量使应用效果的元素扩展，并淡去到消失，或者淡入然后略微缩小，具体取决于如何使用它。'
- en: Syntax
  id: totrans-722
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 语法
- en: '```js'
  id: totrans-723
  prefs: []
  type: TYPE_NORMAL
  zh: '```js'
- en: $(selector).hide|show|toggle|effect( "puff", [,configuration][,duration] );
  id: totrans-724
  prefs: []
  type: TYPE_NORMAL
  zh: $(selector).hide|show|toggle|effect( "puff", [,configuration][,duration] );
- en: '```'
  id: totrans-725
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Configuration options
  id: totrans-726
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置选项
- en: 'The `puff` effect gives us control over the size that the element is increased
    to, and whether it is shown or hidden:'
  id: totrans-727
  prefs: []
  type: TYPE_NORMAL
  zh: '`puff`效果使我们能够控制元素增加的大小，以及它是显示还是隐藏：'
- en: '| Option | Default | Usage |'
  id: totrans-728
  prefs: []
  type: TYPE_TB
  zh: '| 选项 | 默认 | 用法 |'
- en: '| --- | --- | --- |'
  id: totrans-729
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `mode` | `"hide"` | Sets whether the element is displayed or hidden when
    used with the `effect()` method. Other possible values include `show`, `effect`,
    and `toggle` |'
  id: totrans-730
  prefs: []
  type: TYPE_TB
  zh: '| `mode` | `"hide"` | 设置与`effect()`方法一起使用时元素是显示还是隐藏。其他可能的值包括`show`，`effect`和`toggle`
    |'
- en: '| `percent` | `150` | Sets the size the element is scaled to in percent |'
  id: totrans-731
  prefs: []
  type: TYPE_TB
  zh: '| `百分比` | `150` | 设置元素以百分比进行缩放的大小 |'
- en: Time for action – making an element disappear in a puff
  id: totrans-732
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 时间已到 – 让元素在一瞬间消失
- en: In this example, we'll have a dialog box displayed in the center of the browser
    window and apply the `puff` effect to it when either the **OK** or **Cancel**
    buttons are clicked.
  id: totrans-733
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，当单击**确定**或**取消**按钮时，我们将在浏览器窗口的中心显示一个对话框，并对其应用`puff`效果。
- en: 'In the `<body>` element of our template file, add the following elements for
    the dialog:'
  id: totrans-734
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们的模板文件的`<body>`元素中，添加以下对话框元素：
- en: '```js'
  id: totrans-735
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: <div id="confirm">
  id: totrans-736
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div id="confirm">
- en: <img src="img/help.png" alt="Help Icon">
  id: totrans-737
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <img src="img/help.png" alt="帮助图标">
- en: <p>Are you sure you want to do that?</p>
  id: totrans-738
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <p>您确定要这样做吗？</p>
- en: <button>Ok</button><button>Cancel</button>
  id: totrans-739
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <button>确定</button><button>取消</button>
- en: </div>
  id: totrans-740
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </div>
- en: '```'
  id: totrans-741
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Add the accompanying script to the empty function as follows:'
  id: totrans-742
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在空函数中添加附带的脚本如下：
- en: '```js'
  id: totrans-743
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: $("#confirm").css({
  id: totrans-744
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("#confirm").css({
- en: 'left: $(window).width() / 2 - $("#confirm").width() / 2,'
  id: totrans-745
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'left: $(window).width() / 2 - $("#confirm").width() / 2，'
- en: 'top: $(window).height() / 2 - $("#confirm").height() / 2'
  id: totrans-746
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上：$(window).height() / 2 - $("#confirm").height() / 2
- en: '});'
  id: totrans-747
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: $("#confirm, button").click(function() {
  id: totrans-748
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("#confirm, button").click(function() {
- en: $("#confirm").effect("puff");
  id: totrans-749
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("#confirm").effect("puff");
- en: '});'
  id: totrans-750
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-751
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Save this page as `puff.html`. Add the following styles for the dialog box
    to a new file in your text editor:'
  id: totrans-752
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此页面另存为`puff.html`。在文本编辑器中的新文件中为对话框框添加以下样式：
- en: '```js'
  id: totrans-753
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: '#confirm {'
  id: totrans-754
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#confirm {'
- en: display:block;
  id: totrans-755
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 显示：块；
- en: width:400px;
  id: totrans-756
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 宽度：400px;
- en: height:120px;
  id: totrans-757
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 高度：120px;
- en: position:absolute;
  id: totrans-758
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 绝对定位；
- en: 'border:1px solid #ccc;'
  id: totrans-759
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 边框：1px实心#ccc;
- en: background:#EEE;
  id: totrans-760
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 背景：#EEE；
- en: font:normal 13px sans-serif;
  id: totrans-761
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 字体：普通13像素无细体；
- en: '}'
  id: totrans-762
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '#confirm img {'
  id: totrans-763
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#confirm img {'
- en: margin:20px 20px 0 20px;
  id: totrans-764
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: margin:20px 20px 0 20px;
- en: float:left;
  id: totrans-765
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 浮动到左侧；
- en: '}'
  id: totrans-766
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '#confirm p { margin:40px 0 0 0; }'
  id: totrans-767
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#confirm p { margin:40px 0 0 0; }'
- en: '#confirm button {'
  id: totrans-768
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#confirm button {'
- en: width:68px;
  id: totrans-769
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 宽度：68px;
- en: margin:20px 10px 0 0;
  id: totrans-770
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 边距：20px 10px 0 0；
- en: float:right;
  id: totrans-771
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 右浮动；
- en: '}'
  id: totrans-772
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-773
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: Save this new file as `puff.css` in the `css` directory.
  id: totrans-774
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`css`目录中将此新文件保存为`puff.css`。
- en: When we run the page in a browser, we should find that the dialog is initially
    centered in the window, and that clicking either of the `<button>` elements closes
    it using the `puff` effect:![Time for action – making an element disappear in
    a puff](img/9642_06_13.jpg)
  id: totrans-775
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在浏览器中运行页面时，我们应该发现对话框最初位于窗口的中心，并且单击`<button>`元素之一会使用`puff`效果关闭它：![行动时间 – 让元素在一瞬间消失](img/9642_06_13.jpg)
- en: The previous screenshot shows the dialog expanding while it is fading away.
  id: totrans-776
  prefs: []
  type: TYPE_NORMAL
  zh: 上一个截图显示了对话框扩展时正在消失。
- en: '*What just happened?*'
  id: totrans-777
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚刚发生了什么？*'
- en: The first part of our script centers the dialog in the window both vertically
    and horizontally. One point to note is that we cannot use `margin:auto` to center
    the dialog because it will lose these margins when the effect is applied.
  id: totrans-778
  prefs: []
  type: TYPE_NORMAL
  zh: 我们脚本的第一部分将对话框在窗口中垂直和水平居中。需要注意的一点是，我们不能使用`margin:auto`来居中对话框，因为在应用效果时它会丢失这些边距。
- en: The second part of the script simply adds click handlers to each of the `<button>`
    elements which apply the `puff` effect when they are clicked on.
  id: totrans-779
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本的第二部分只是为每个`<button>`元素添加点击处理程序，在单击它们时应用`puff`效果。
- en: The slide effect
  id: totrans-780
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 滑动效果
- en: The `slide` effect is very similar to the `drop` effect. The only difference
    is that with the `slide` effect, the opacity of the target element is not adjusted
    at all. It's also very similar to the slide family of effects exposed by jQuery
    itself, although with the jQuery UI `slide` effect, we're not restricted to the
    vertical axis—we can slide horizontally, too.
  id: totrans-781
  prefs: []
  type: TYPE_NORMAL
  zh: '`slide`效果与`drop`效果非常相似。唯一的区别是，使用`slide`效果时，目标元素的不透明度根本不会调整。它也与jQuery本身提供的滑动效果系列非常相似，尽管使用jQuery
    UI的`slide`效果，我们不限于垂直轴，我们也可以水平滑动。'
- en: Syntax
  id: totrans-782
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 语法
- en: '```js'
  id: totrans-783
  prefs: []
  type: TYPE_NORMAL
  zh: '```js'
- en: $(selector).hide|show|toggle|effect( "slide", [,configuration][,duration] );
  id: totrans-784
  prefs: []
  type: TYPE_NORMAL
  zh: $(selector).hide|show|toggle|effect( "slide", [,configuration][,duration] );
- en: '```'
  id: totrans-785
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Configuration options
  id: totrans-786
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置选项
- en: 'The `slide` effect has three configuration options which let us specify the
    direction and distance of the slide, and whether it is shown or hidden:'
  id: totrans-787
  prefs: []
  type: TYPE_NORMAL
  zh: '`slide`效果有三个配置选项，让我们可以指定滑动的方向和距离，以及是否显示或隐藏：'
- en: '| Option | Default | Usage |'
  id: totrans-788
  prefs: []
  type: TYPE_TB
  zh: '| 选项 | 默认 | 用法 |'
- en: '| --- | --- | --- |'
  id: totrans-789
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `direction` | `"left"` | Sets the direction the animation proceeds in |'
  id: totrans-790
  prefs: []
  type: TYPE_TB
  zh: '| `direction` | `"left"` | 设置动画进行的方向 |'
- en: '| `distance` | The width of the target element, including padding | Sets the
    distance that the target element slides to |'
  id: totrans-791
  prefs: []
  type: TYPE_TB
  zh: '| `distance` | 目标元素的宽度，包括填充 | 设置目标元素滑动的距离 |'
- en: '| `mode` | `"show"` | Sets whether the element is displayed or hidden when
    used with the `effect()` method. Other acceptable values are `hide`, `effect`,
    and `toggle` |'
  id: totrans-792
  prefs: []
  type: TYPE_TB
  zh: '| `mode` | `"show"` | 与`effect()`方法一起使用时设置元素显示或隐藏。其他可接受的值包括`hide`，`effect`和`toggle`
    |'
- en: Time for action – sliding elements in and out of view
  id: totrans-793
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 将元素滑动进出视图
- en: Displaying captions when a visitor hovers over an image is an interactive and
    interesting way of displaying additional information about the image without making
    your design appear cluttered. With the `slide` effect, we can easily animate the
    showing and hiding of the caption, which is what we'll do in this example.
  id: totrans-794
  prefs: []
  type: TYPE_NORMAL
  zh: 当访客悬停在图像上时显示标题是一种交互式和有趣的方式，可以显示有关图像的其他信息，而不会使设计看起来凌乱。使用`slide`效果，我们可以轻松地动画显示和隐藏标题，这就是我们在这个示例中要做的。
- en: 'Add the following code to the `<body>` element of the template file:'
  id: totrans-795
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到模板文件的`<body>`元素中：
- en: '```js'
  id: totrans-796
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: <div id="image">
  id: totrans-797
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div id="image">
- en: <img src="img/mantis.jpg" alt="Praying Mantis">
  id: totrans-798
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <img src="img/mantis.jpg" alt="Praying Mantis">
- en: '<div>Praying Mantis: Mantis religiosa</div>'
  id: totrans-799
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '<div>Praying Mantis: Mantis religiosa</div>'
- en: </div>
  id: totrans-800
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </div>
- en: '```'
  id: totrans-801
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Then, at the bottom of the page, in the empty function, add the following short
    script:'
  id: totrans-802
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在页面底部的空函数中，添加以下短脚本：
- en: '```js'
  id: totrans-803
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: $("#image").hover(function() {
  id: totrans-804
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("#image").hover(function() {
- en: $(this).find("div").stop(true, true).show("slide");
  id: totrans-805
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $(this).find("div").stop(true, true).show("slide");
- en: '}, function() {'
  id: totrans-806
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}, function() {'
- en: $(this).find("div").stop(true, true).hide("slide");
  id: totrans-807
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $(this).find("div").stop(true, true).hide("slide");
- en: '});'
  id: totrans-808
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-809
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Save this as `slide.html`. Next, create the following stylesheet:'
  id: totrans-810
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此文件保存为`slide.html`。接下来，创建以下样式表：
- en: '```js'
  id: totrans-811
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: '#image {'
  id: totrans-812
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#image {'
- en: position:relative;
  id: totrans-813
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: position:relative;
- en: float:left;
  id: totrans-814
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: float:left;
- en: '}'
  id: totrans-815
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '#image img { margin-bottom:-5px; }'
  id: totrans-816
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#image img { margin-bottom:-5px; }'
- en: '#image div {'
  id: totrans-817
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#image div {'
- en: display:none;
  id: totrans-818
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: display:none;
- en: width:100%;
  id: totrans-819
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: width:100%;
- en: padding:10px 0;
  id: totrans-820
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: padding:10px 0;
- en: position:absolute;
  id: totrans-821
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: position:absolute;
- en: left:0;
  id: totrans-822
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: left:0;
- en: bottom:0;
  id: totrans-823
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: bottom:0;
- en: top:auto!important;
  id: totrans-824
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: top:auto!important;
- en: text-align:center;
  id: totrans-825
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: text-align:center;
- en: font-style:italic;
  id: totrans-826
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: font-style:italic;
- en: background-color:#000;
  id: totrans-827
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: background-color:#000;
- en: color:#fff;
  id: totrans-828
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: color:#fff;
- en: '}'
  id: totrans-829
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-830
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: Save this file as `slide.css`.
  id: totrans-831
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此文件保存为`slide.css`。
- en: When we view the page we should find that the caption is displayed as soon as
    we move the mouse over the image, and then removed when we move the mouse off
    of it:![Time for action – sliding elements in and out of view](img/9642_06_14.jpg)
  id: totrans-832
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们查看页面时，应该发现当我们将鼠标移到图像上时立即显示标题，然后在我们将鼠标移出图像时将其移除：![行动时间 - 将元素滑动进出视图](img/9642_06_14.jpg)
- en: In the previous screenshots we see the caption sliding out from the left edge
    of the container.
  id: totrans-833
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的屏幕截图中，我们看到标题从容器的左边缘滑出。
- en: '*What just happened?*'
  id: totrans-834
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚刚发生了什么？*'
- en: The image and caption are held in a container so that the caption can be positioned
    accurately. We use jQuery's `hover()` method, which allows us to attach event
    handlers for both the `mouseover` and `mouseout` events, to show the caption by
    sliding it in, or hide it by sliding it out.
  id: totrans-835
  prefs: []
  type: TYPE_NORMAL
  zh: 图像和标题都放在一个容器中，以便可以精确定位标题。我们使用jQuery的`hover()`方法，它允许我们为`mouseover`和`mouseout`事件附加事件处理程序，通过滑动显示标题，或者通过滑动隐藏标题。
- en: We don't need any additional configuration in this simple example, but we do
    need to manage the queue effectively to stop a build-up of animations if the mouse
    pointer is moved on and off the image repeatedly, which we handle with the `stop()`
    method.
  id: totrans-836
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个简单的例子中，我们不需要任何额外的配置，但是我们需要有效地管理队列，以防止鼠标重复在图像上移动导致动画的积累，我们使用`stop()`方法来处理这个问题。
- en: The scale effect
  id: totrans-837
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 缩放效果
- en: The `scale` effect is very similar to the `size` effect that we looked at earlier,
    and as we saw, several effects actually require this effect as a dependency. The
    main difference between this effect and the `size` effect is that with `scale`,
    we can only specify a percentage that the target element should be scaled to,
    not supply exact pixel sizes.
  id: totrans-838
  prefs: []
  type: TYPE_NORMAL
  zh: '`scale`效果与我们之前看过的`size`效果非常相似，正如我们看到的那样，几个效果实际上都需要这个效果作为依赖项。这个效果与`size`效果的主要区别在于，使用`scale`时，我们只能指定目标元素应该缩放到的百分比，而不能提供精确的像素大小。'
- en: Syntax
  id: totrans-839
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 语法
- en: '```js'
  id: totrans-840
  prefs: []
  type: TYPE_NORMAL
  zh: '```js'
- en: $(selector).hide|show|toggle|effect( "scale", [,configuration][,duration] );
  id: totrans-841
  prefs: []
  type: TYPE_NORMAL
  zh: $(选择器).hide|show|toggle|effect( "scale", [,配置][,持续时间] );
- en: '```'
  id: totrans-842
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Configuration options
  id: totrans-843
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置选项
- en: The `scale` effect has more configuration options than any other effect added
    by jQuery UI.
  id: totrans-844
  prefs: []
  type: TYPE_NORMAL
  zh: '`scale`效果具有比jQuery UI添加的任何其他效果更多的配置选项。'
- en: 'The configuration options are listed in the following table:'
  id: totrans-845
  prefs: []
  type: TYPE_NORMAL
  zh: 配置选项列在以下表中：
- en: '| Option | Default | Usage |'
  id: totrans-846
  prefs: []
  type: TYPE_TB
  zh: '| 选项 | 默认 | 用法 |'
- en: '| --- | --- | --- |'
  id: totrans-847
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `direction` | `"both"` | Sets which axis the element is scaled along. Other
    options include `vertical` and `horizontal` |'
  id: totrans-848
  prefs: []
  type: TYPE_TB
  zh: '| `direction` | `"both"` | 设置元素沿着哪个轴缩放。其他选项包括`vertical`和`horizontal` |'
- en: '| `from` | none | Sets the starting dimensions of the element |'
  id: totrans-849
  prefs: []
  type: TYPE_TB
  zh: '| `from` | 无 | 设置元素的起始尺寸 |'
- en: '| `origin` | `[''middle'', ''center'']` | Sets the vanishing point of the element
    if it is being hidden, or the point from which it grows if it is being shown |'
  id: totrans-850
  prefs: []
  type: TYPE_TB
  zh: '| `origin` | `[''middle'', ''center'']` | 设置元素的消失点（如果元素被隐藏），或者从哪里增长（如果元素正在显示）
    |'
- en: '| `percent` | `0` | Sets the percentage by which the element will grow or shrink
    |'
  id: totrans-851
  prefs: []
  type: TYPE_TB
  zh: '| `percent` | `0` | 设置元素增长或缩小的百分比 |'
- en: '| `scale` | `"both"` | This option sets whether the whole `box` of the element
    (including border and padding CSS values) is scaled, just the `content`, or as
    in the default, `both` |'
  id: totrans-852
  prefs: []
  type: TYPE_TB
  zh: '| `scale` | `"both"` | 此选项设置元素的整个`box`（包括边框和填充的CSS值）是否缩放，只是`content`，或者像默认值`both`一样
    |'
- en: Time for action – scaling an element
  id: totrans-853
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间——缩放元素
- en: It's common practice on an image-heavy site to show a set of thumbnail images
    which link to a full-sized image that is displayed when the image is clicked,
    either inline in a modal pop up, or in a separate window. In this example we'll
    create a thumbnail image that scales to a full-sized version when clicked.
  id: totrans-854
  prefs: []
  type: TYPE_NORMAL
  zh: 在图片较多的网站上，通常会显示一组缩略图，这些缩略图链接到点击图片后显示的全尺寸图片，可以是内联的模态弹出，也可以是单独的窗口。在本例中，我们将创建一个缩略图，当点击后会缩放为全尺寸版本。
- en: 'Add the following few elements to the `<body>` element of the template file:'
  id: totrans-855
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下几个元素添加到模板文件的`<body>`元素中：
- en: '```js'
  id: totrans-856
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: <div id="container">
  id: totrans-857
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div id="container">
- en: <img src="img/europa.jpg" alt="Europa">
  id: totrans-858
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <img src="img/europa.jpg" alt="Europa">
- en: </div>
  id: totrans-859
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </div>
- en: '```'
  id: totrans-860
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'The script we need is a little longer, but is still pretty simple. In the empty
    function at the end of the page, add the following code:'
  id: totrans-861
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要的脚本有点长，但还是相当简单的。在页面末尾的空函数中，添加以下代码：
- en: '```js'
  id: totrans-862
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: $("img").click(function() {
  id: totrans-863
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("img").click(function() {
- en: var img = $(this);
  id: totrans-864
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: var img = $(this);
- en: if(!img.hasClass("full")) {
  id: totrans-865
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: if(!img.hasClass("full")) {
- en: img.addClass("full").effect("scale",
  id: totrans-866
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: img.addClass("full").effect("scale",
- en: '{ percent: 400, scale: "box",'
  id: totrans-867
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '{ 百分比: 400, 缩放: "盒子",'
- en: 'origin: [''top'',''left''] });'
  id: totrans-868
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'origin: [''top'',''left''] });'
- en: '} else {'
  id: totrans-869
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '} else {'
- en: img.removeClass("full").effect("scale",
  id: totrans-870
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: img.removeClass("full").effect("scale",
- en: '{ percent: 25, scale: "box",'
  id: totrans-871
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '{ 百分比: 25, 缩放: "盒子",'
- en: 'origin: [''top'',''left''] });'
  id: totrans-872
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'origin: [''top'',''left''] });'
- en: '}'
  id: totrans-873
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '});'
  id: totrans-874
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-875
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Save the page as `scale.html`. In the stylesheet for this example, we''ll need
    the following code:'
  id: totrans-876
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将页面保存为`scale.html`。在此示例的样式表中，我们需要以下代码：
- en: '```js'
  id: totrans-877
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: '#container {'
  id: totrans-878
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#container {'
- en: position:relative;
  id: totrans-879
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定位:相对;
- en: float:left;
  id: totrans-880
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: float:left;
- en: cursor:pointer;
  id: totrans-881
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 光标:指针;
- en: '}'
  id: totrans-882
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '#container img {'
  id: totrans-883
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#container img {'
- en: width:150px;
  id: totrans-884
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 宽度:150px;
- en: height:150px;
  id: totrans-885
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 高度:150px;
- en: '}'
  id: totrans-886
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-887
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: Save this file as `scale.css`.
  id: totrans-888
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此文件保存为`scale.css`。
- en: When we run the page we should find that clicking on the image causes it to
    be scaled up to 400 percent of its initial size:![Time for action – scaling an
    element](img/9642_06_15.jpg)
  id: totrans-889
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们运行页面时，应该发现点击图像会使其放大到其初始大小的400％：![执行步骤 - 缩放元素](img/9642_06_15.jpg)
- en: The previous screenshots illustrate the effect in action. Clicking on the image
    again will scale the image back to its initial state.
  id: totrans-890
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的屏幕截图展示了效果的实际操作。再次点击图像将使图像缩放回初始状态。
- en: '*What just happened?*'
  id: totrans-891
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: On the page our image is held in a simple `<div>` container. The image is scaled
    down from its original size using CSS, so when we scale the image up we will actually
    be returning it to full size, so it won't look blocky or fuzzy at all.
  id: totrans-892
  prefs: []
  type: TYPE_NORMAL
  zh: 在页面上，我们的图像存储在一个简单的`<div>`容器中。使用CSS将图像从其原始大小缩小，因此当我们放大图像时，实际上将其恢复到全尺寸，因此看起来不会有块状或模糊。
- en: In the script we first set a click handler on the image and then cache a reference
    to it so that we don't have to keep creating jQuery objects referring to this.
    If the image doesn't have a class name of `full`, we know the image has not been
    scaled up already, so we add the `full` class and then scale it up by 400 percent
    using the `percent` option.
  id: totrans-893
  prefs: []
  type: TYPE_NORMAL
  zh: 在脚本中，我们首先在图像上设置一个点击处理程序，然后缓存对其的引用，以便我们不必不断创建指向此的jQuery对象。如果图像没有`full`类名，我们知道图像尚未被放大，因此我们添加`full`类并使用`percent`选项将其放大400％。
- en: Once the image has been scaled, we then create a new anchor element which will
    be appended to the container element and used as a close button. We set the link's
    inner text and the `href` attribute, and then assign a click handler to it. Within
    this handler we prevent the browser following the link and then cache the selector
    once more, which this time points to the anchor.
  id: totrans-894
  prefs: []
  type: TYPE_NORMAL
  zh: 图像缩放后，我们创建一个新的锚元素，该元素将附加到容器元素并用作关闭按钮。我们设置链接的内部文本和`href`属性，然后为其分配一个点击处理程序。在此处理程序中，我们阻止浏览器跟随链接，然后再次缓存选择器，这次选择器指向锚点。
- en: We then reduce the image to a quarter of its size, retuning it back to its original
    dimensions. Once this is done we remove the close link.
  id: totrans-895
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们将图像缩小到其大小的四分之一，将其恢复到原始尺寸。完成此操作后，我们将删除关闭链接。
- en: Pop quiz – using show/hide logic
  id: totrans-896
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 突发测试 - 使用显示/隐藏逻辑
- en: Q1\. How are supported arguments passed to an effect?
  id: totrans-897
  prefs: []
  type: TYPE_NORMAL
  zh: Q1\. 支持的参数如何传递给效果？
- en: In string format as the second argument, for example, `show("blind", "vertical")`
  id: totrans-898
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作为第二个参数的字符串格式，例如，`show("blind", "vertical")`
- en: 'As values in a configuration object passed directly to the `animate()` method,
    for example, `animate({ effect: "blind", configuration: { direction: "vertical"
    })`'
  id: totrans-899
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '作为直接传递给`animate()`方法的配置对象中的值，例如，`animate({ effect: "blind", configuration:
    { direction: "vertical" })`'
- en: 'As values in a configuration object passed as the second argument, for example,
    `show("blind", { direction: "vertical" })`'
  id: totrans-900
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '作为第二个参数传递的配置对象中的值，例如，`show("blind", { direction: "vertical" })`'
- en: 'By setting the `effect.config` global property, for example, `$.effect.config
    = { direction: "vertical" })`'
  id: totrans-901
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '通过设置`effect.config`全局属性，例如，`$.effect.config = { direction: "vertical" })`'
- en: Q2\. What else can be passed to the method?
  id: totrans-902
  prefs: []
  type: TYPE_NORMAL
  zh: Q2\. 还可以传递什么给该方法？
- en: An integer or string representing the duration, and a callback function or function
    reference
  id: totrans-903
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 代表持续时间的整数或字符串，以及回调函数或函数引用
- en: Nothing
  id: totrans-904
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 无
- en: A Boolean that controls whether the animation should repeat indefinitely
  id: totrans-905
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个布尔值，控制动画是否应该无限重复
- en: A Boolean indicating whether further effects should be queued or executed in
    parallel
  id: totrans-906
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个布尔值，指示是否应该排队或并行执行进一步的效果
- en: Have a go hero – experimenting with the effect API
  id: totrans-907
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 亲自动手 - 尝试使用效果 API
- en: I would strongly recommend that you experiment with the effects that we have
    looked at in this section to see which ones work well with the `effect()` method
    and which ones work best with the show/hide logic, and so you can see exactly
    what happens when the ones that don't work so well are used. This should improve
    your ability to quickly decide exactly when and where each method is appropriate.
  id: totrans-908
  prefs: []
  type: TYPE_NORMAL
  zh: 我强烈建议您尝试在本节中查看的效果，以查看哪些效果与`effect()`方法配合使用效果良好，哪些效果最适合使用显示/隐藏逻辑，并且您可以清楚地看到在使用效果不佳时发生了什么。这应该可以提高您快速决定每种方法在何时何地适用的能力。
- en: Easing functions
  id: totrans-909
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 缓动函数
- en: Easing can be used with all of the jQuery UI effects with the exception of `explode`,
    although it can look a little strange in a few of the effects, such as `bounce`
    or `pulsate`. Easing can also be used if jQuery UI is present with standard jQuery.
  id: totrans-910
  prefs: []
  type: TYPE_NORMAL
  zh: 缓动可以与jQuery UI的所有效果一起使用，除了`explode`之外，尽管在一些效果中看起来可能有些奇怪，比如`bounce`或`pulsate`。如果jQuery
    UI存在，则还可以使用缓动与标准jQuery一起使用。
- en: Each fading method can have an easing type set by passing an argument into the
    animation method being used. The sliding animations are the same and can also
    accept an easing type as an argument. Let's take a moment to familiarize ourselves
    with what easing is exactly and how it can be used with jQuery animations.
  id: totrans-911
  prefs: []
  type: TYPE_NORMAL
  zh: 每种淡入淡出方法都可以通过将参数传递给正在使用的动画方法来设置缓动类型。滑动动画也是相同的，也可以接受缓动类型作为参数。让我们花一点时间了解一下缓动究竟是什么，以及如何将其与jQuery动画一起使用。
- en: Easing is a technique where the speed and/or the direction of animation are
    changed while the animation is running. Easing can make the animation start off
    slow and gradually speed up, start up fast and gradually slow down, and a whole
    host of other effects.
  id: totrans-912
  prefs: []
  type: TYPE_NORMAL
  zh: 缓动是一种技术，在动画运行时改变动画的速度和/或方向。缓动可以使动画以缓慢的速度开始并逐渐加速，以快速开始并逐渐减速，并产生一系列其他效果。
- en: 'jQuery has two modes of easing built in: `linear` and `swing`, with `swing`
    being the default for all types of animations. Sometimes, using the `linear` easing
    can help make a continuous animation run smoother, but the difference between
    `swing` and `linear` is subtle at best.'
  id: totrans-913
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery内置了两种缓动模式：`linear`和`swing`，其中`swing`是所有类型动画的默认模式。有时，使用`linear`缓动可以使连续动画运行更顺畅，但`swing`和`linear`之间的区别微妙至极。
- en: Note
  id: totrans-914
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Animated demos of all of the easing types can be viewed by going to the following
    URL:'
  id: totrans-915
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过访问以下网址查看所有缓动类型的动画演示：
- en: '[http://api.jqueryui.com/easings](http://api.jqueryui.com/easings).'
  id: totrans-916
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://api.jqueryui.com/easings](http://api.jqueryui.com/easings)。'
- en: 'The easing types of jQuery UI add-ins are listed in the following table:'
  id: totrans-917
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery UI插件的缓动类型列在以下表格中：
- en: '| `easeInQuad` | `easeOutQuad` | `easeInOutQuad` |'
  id: totrans-918
  prefs: []
  type: TYPE_TB
  zh: '| `easeInQuad` | `easeOutQuad` | `easeInOutQuad` |'
- en: '| `easeInCubic` | `easeOutCubic` | `easeInOutCubic` |'
  id: totrans-919
  prefs: []
  type: TYPE_TB
  zh: '| `easeInCubic` | `easeOutCubic` | `easeInOutCubic` |'
- en: '| `easeInQuart` | `easeOutQuart` | `easeInOutQuart` |'
  id: totrans-920
  prefs: []
  type: TYPE_TB
  zh: '| `easeInQuart` | `easeOutQuart` | `easeInOutQuart` |'
- en: '| `easeInQuint` | `easeOutQuint` | `easeInOutQuint` |'
  id: totrans-921
  prefs: []
  type: TYPE_TB
  zh: '| `easeInQuint` | `easeOutQuint` | `easeInOutQuint` |'
- en: '| `easeInExpo` | `easeOutExpo` | `easeInOutExpo` |'
  id: totrans-922
  prefs: []
  type: TYPE_TB
  zh: '| `easeInExpo` | `easeOutExpo` | `easeInOutExpo` |'
- en: '| `easeInSine` | `easeOutSine` | `easeInOutSine` |'
  id: totrans-923
  prefs: []
  type: TYPE_TB
  zh: '| `easeInSine` | `easeOutSine` | `easeInOutSine` |'
- en: '| `easeInCirc` | `easeOutCirc` | `easeInOutCirc` |'
  id: totrans-924
  prefs: []
  type: TYPE_TB
  zh: '| `easeInCirc` | `easeOutCirc` | `easeInOutCirc` |'
- en: '| `easeInElastic` | `easeOutElastic` | `easeInOutElastic` |'
  id: totrans-925
  prefs: []
  type: TYPE_TB
  zh: '| `easeInElastic` | `easeOutElastic` | `easeInOutElastic` |'
- en: '| `easeInBack` | `easeOutBack` | `easeInOutBack` |'
  id: totrans-926
  prefs: []
  type: TYPE_TB
  zh: '| `easeInBack` | `easeOutBack` | `easeInOutBack` |'
- en: '| `easeInBounce` | `easeOutBounce` | `easeInOutBounce` |'
  id: totrans-927
  prefs: []
  type: TYPE_TB
  zh: '| `easeInBounce` | `easeOutBounce` | `easeInOutBounce` |'
- en: Time for action – adding easing to effects
  id: totrans-928
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间-将缓动添加到效果
- en: 'To use easing, all we need to do is include the easing function name as a configuration
    option. For example, to add easing to the `blind.html` example that we looked
    at earlier, we could change the JavaScript so that it appeared as follows:'
  id: totrans-929
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用缓动，我们只需将缓动函数名称作为配置选项包含即可。例如，要为我们之前查看过的`blind.html`示例添加缓动，我们可以更改JavaScript，使其如下所示：
- en: '```js'
  id: totrans-930
  prefs: []
  type: TYPE_NORMAL
  zh: '```js'
- en: $("#window").click(function() {
  id: totrans-931
  prefs: []
  type: TYPE_NORMAL
  zh: $("#window").click(function() {
- en: '$("#blind").toggle("blind", { easing: "easeOutBounce" });'
  id: totrans-932
  prefs: []
  type: TYPE_NORMAL
  zh: '$("#blind").toggle("blind", { easing: "easeOutBounce" });'
- en: '});'
  id: totrans-933
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-934
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: '*What just happened?*'
  id: totrans-935
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚刚发生了什么？*'
- en: We use the configuration option, `easing`, with the name of the easing function
    as a string supplied as the value of the option. Any of the easing functions can
    be used by referencing their name in this way.
  id: totrans-936
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用配置选项`easing`，将缓动函数的名称作为字符串提供为选项的值。通过引用它们的名称，可以使用任何缓动函数。
- en: Using an object literal to add easing
  id: totrans-937
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用对象字面量添加缓动
- en: We can also change the format of the arguments we pass into the predefined animation
    methods in order to use easing. Prior to the easing argument being added to the
    animation methods (`fadeIn()`, `slideDown()`, and so on) in version 1.4.3 of jQuery,
    this was the defacto means of using easing with animation methods.
  id: totrans-938
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以改变我们传递给预定义动画方法的参数的格式，以便使用缓动。在jQuery的1.4.3版本之前，使用缓动与动画方法（`fadeIn()`、`slideDown()`等）的默认方法就是这样。
- en: 'Instead of providing string or numerical arguments (or a callback function),
    we can provide an object literal where each key refers to the duration, the easing
    type, and optionally a callback to call when the animation is complete. The usage
    then becomes as follows:'
  id: totrans-939
  prefs: []
  type: TYPE_NORMAL
  zh: 不是提供字符串或数字参数（或回调函数），我们可以提供一个对象文字，其中每个键都是持续时间、缓动类型，并且可选地是完成时要调用的回调。然后使用如下方式：
- en: '```js'
  id: totrans-940
  prefs: []
  type: TYPE_NORMAL
  zh: '```js'
- en: $(elements).toggle("blind", {
  id: totrans-941
  prefs: []
  type: TYPE_NORMAL
  zh: $(elements).toggle("blind", {
- en: 'duration: [duration],'
  id: totrans-942
  prefs: []
  type: TYPE_NORMAL
  zh: 'duration: [duration],'
- en: 'easing: [easing],'
  id: totrans-943
  prefs: []
  type: TYPE_NORMAL
  zh: 'easing: [easing],'
- en: 'complete: [callback]'
  id: totrans-944
  prefs: []
  type: TYPE_NORMAL
  zh: 'complete: [callback]'
- en: '});'
  id: totrans-945
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-946
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Have a go hero – using easing
  id: totrans-947
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 试一试吧——使用缓动
- en: Try out some of the other easing methods on some of our earlier examples. We'll
    be using easing wherever appropriate throughout the remainder of the book, but
    other than a cursory explanation these won't be focused on in any great detail.
  id: totrans-948
  prefs: []
  type: TYPE_NORMAL
  zh: 在一些早期示例中尝试一些其他缓动方法。在本书的剩余部分中，我们将在适当的地方使用缓动，但除了简要的解释之外，这些不会受到太多关注。
- en: Pop quiz – using easing
  id: totrans-949
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 小测验——使用缓动
- en: Q1\. How many easing types are there in total?
  id: totrans-950
  prefs: []
  type: TYPE_NORMAL
  zh: Q1\. 总共有多少种缓动类型？
- en: '20'
  id: totrans-951
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '20'
- en: '32'
  id: totrans-952
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '32'
- en: '17'
  id: totrans-953
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '17'
- en: '48'
  id: totrans-954
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '48'
- en: Q2\. What can we pass into an `effect()` method in the alternative format for
    using easing?
  id: totrans-955
  prefs: []
  type: TYPE_NORMAL
  zh: Q2\. 我们在使用缓动的备用格式时可以传递什么给`effect()`方法？
- en: An object with optional keys specifying the duration, easing type, and a function
    to call on complete
  id: totrans-956
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个带有可选键的对象，指定持续时间、缓动类型和完成时要调用的函数
- en: A string specifying the easing type
  id: totrans-957
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个指定缓动类型的字符串
- en: An array where the first item is the duration, the second is the easing type,
    and the third is a function to call on complete
  id: totrans-958
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个数组，其中第一个项目是持续时间，第二个是缓动类型，第三个是完成时要调用的函数
- en: An integer specifying the duration of easing
  id: totrans-959
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个指定缓动持续时间的整数
- en: Animating between different colors
  id: totrans-960
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在不同颜色之间进行动画
- en: As well as the complete range of easing functions, the `effects` core file also
    gives us the ability to attractively and smoothly animate between different colors.
    Several CSS properties can be animated, including the `color`, `background-color`,
    `border-color`, and `outlinecolor`.
  id: totrans-961
  prefs: []
  type: TYPE_NORMAL
  zh: 除了完整的缓动函数范围外，`effects`核心文件还为我们提供了在不同颜色之间吸引人且平滑地进行动画的能力。可以动画化几个CSS属性，包括`color`、`background-color`、`border-color`和`outlinecolor`。
- en: jQuery UI extends jQuery's `animate()` method to achieve color animations, so
    the syntax to implement it is the same as using `animate()`. For any other purpose,
    we just need to target one of the above CSS properties and supply a valid color
    value (hexadecimal, RGB/RGBa, HSL, and so on). Let's look at a basic example.
  id: totrans-962
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery UI通过扩展jQuery的`animate()`方法来实现颜色动画，因此实现它的语法与使用`animate()`相同。对于任何其他目的，我们只需要目标其中一个以上的CSS属性，并提供有效的颜色值（十六进制、RGB/RGBa、HSL等）。让我们看一个基本示例。
- en: Time for action – animating between colors
  id: totrans-963
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间——在颜色之间进行动画
- en: In this example, we'll use color animations to show that a form field has been
    left empty.
  id: totrans-964
  prefs: []
  type: TYPE_NORMAL
  zh: 在本示例中，我们将使用颜色动画来显示表单字段已被留空。
- en: 'In a fresh copy of the template file, use the following elements in the `<body>`
    of the page:'
  id: totrans-965
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在模板文件的`<body>`中使用以下元素：
- en: '```js'
  id: totrans-966
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: <input><button id="search">Search</button>
  id: totrans-967
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <input><button id="search">搜索</button>
- en: '```'
  id: totrans-968
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'To invoke the color changes when the `<button>` is clicked, we can use the
    following JavaScript in the empty function near the bottom of the document:'
  id: totrans-969
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在单击`<button>`时调用颜色更改，我们可以在文档底部附近的空函数中使用以下JavaScript：
- en: '```js'
  id: totrans-970
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: $("#search").click(function (e) {
  id: totrans-971
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("#search").click(function (e) {
- en: e.preventDefault();
  id: totrans-972
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: e.preventDefault();
- en: var input = $(this).prev();
  id: totrans-973
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var input = $(this).prev();
- en: if (input.val() == "") {
  id: totrans-974
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: if (input.val() == "") {
- en: input.animate({
  id: totrans-975
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: input.animate({
- en: 'backgroundColor: "#f78080",'
  id: totrans-976
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'backgroundColor: "#f78080",'
- en: 'borderColor: "#a72b2e"}, 1200);'
  id: totrans-977
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'borderColor: "#a72b2e"}, 1200);'
- en: '};'
  id: totrans-978
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '};'
- en: '});'
  id: totrans-979
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-980
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Save this page as `color-animations.html`. We literally only need a couple
    of styles for this example. We could probably get away with defining them in a
    `<style>` block in the `<head>` element of the page. We just use the following
    CSS:'
  id: totrans-981
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此页面保存为`color-animations.html`。对于这个示例，我们实际上只需要一些样式。我们可能可以在页面的`<head>`元素中的`<style>`块中定义它们。我们只需使用以下CSS：
- en: '```js'
  id: totrans-982
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: input {
  id: totrans-983
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: input {
- en: width:200px;
  id: totrans-984
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: width:200px;
- en: 'border:2px solid #27659f;'
  id: totrans-985
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'border:2px solid #27659f;'
- en: '}'
  id: totrans-986
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-987
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: When we run the page, we see that the text field changes color if the `<button>`
    element is clicked on while it is empty.
  id: totrans-988
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们运行页面时，如果在文本字段为空时单击了`<button>`元素，我们会看到文本字段的颜色会更改。
- en: '*What just happened?*'
  id: totrans-989
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: The CSS, while extremely small, is required in this example because the `<input>`
    field will lose any attractive styling provided by modern browsers when the colors
    are animated. Setting the CSS properties we are animating helps prevent this ugly
    switch.
  id: totrans-990
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，虽然CSS非常小，但是必需的，因为当颜色动画时，`<input>`字段将失去现代浏览器提供的任何吸引人的样式。设置我们正在动画化的CSS属性有助于防止这种丑陋的切换。
- en: In the script we simply cache a selector that points to the `<input>` field,
    and then test whether the field is empty. If it is, we call the `animate()` method,
    specifying the aspects of the target element we'd like to animate.
  id: totrans-991
  prefs: []
  type: TYPE_NORMAL
  zh: 在脚本中，我们只需缓存一个指向`<input>`字段的选择器，然后测试字段是否为空。如果是，我们调用`animate()`方法，指定我们想要动画化的目标元素的方面。
- en: Class transitions
  id: totrans-992
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 类过渡
- en: 'As well as extending jQuery''s `animate()` method in order to provide color
    animations, jQuery UI also extends some of jQuery''s element manipulation methods.
    The following methods are extended to provide class transitions:'
  id: totrans-993
  prefs: []
  type: TYPE_NORMAL
  zh: 除了扩展jQuery的`animate()`方法以提供颜色动画外，jQuery UI还扩展了一些jQuery的元素操作方法。以下方法被扩展以提供类过渡：
- en: '`addClass()`'
  id: totrans-994
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`addClass()`'
- en: '`removeClass()`'
  id: totrans-995
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`removeClass()`'
- en: '`toggleClass()`'
  id: totrans-996
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`toggleClass()`'
- en: 'jQuery UI also exposes a new method for transitioning between two classes:
    the `switchClass()` method, which accepts the current class and new class, as
    well as duration, easing, and callback arguments.'
  id: totrans-997
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery UI还公开了一种用于在两个类之间过渡的新方法：`switchClass()`方法，它接受当前类和新类，以及持续时间、缓动和回调参数。
- en: Time for action – transitioning between classes
  id: totrans-998
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 在类之间过渡
- en: We can rework our previous example so that it uses some of the class transition
    methods.
  id: totrans-999
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以重新调整以前的示例，以便使用一些类过渡方法。
- en: 'Add the class name `default` to the `<input>` element and then change the JavaScript
    so that it appears as follows:'
  id: totrans-1000
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将类名`default`添加到`<input>`元素中，然后更改JavaScript，使其如下所示：
- en: '```js'
  id: totrans-1001
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: $("#search").click(function(e) {
  id: totrans-1002
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("#search").click(function(e) {
- en: e.preventDefault();
  id: totrans-1003
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: e.preventDefault();
- en: var input = $(this).prev();
  id: totrans-1004
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var input = $(this).prev();
- en: if (input.val() == "") {
  id: totrans-1005
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: if (input.val() == "") {
- en: input.switchClass("default", "error", 1200);
  id: totrans-1006
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: input.switchClass("default", "error", 1200);
- en: '} else if (input.val() && input.hasClass("error")) {'
  id: totrans-1007
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '} else if (input.val() && input.hasClass("error")) {'
- en: input.removeClass("error", 1200);
  id: totrans-1008
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: input.removeClass("error", 1200);
- en: '}'
  id: totrans-1009
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '});'
  id: totrans-1010
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-1011
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Save the new page as `class-animation.html`. We''ll need to make some changes
    to the stylesheet as well. Create a new stylesheet and add the following rules
    to it (or change the styles in the `<head>` element of the page):'
  id: totrans-1012
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将新页面保存为`class-animation.html`。我们还需要对样式表进行一些更改。创建一个新的样式表，并添加以下规则（或在页面的`<head>`元素中更改样式）：
- en: '```js'
  id: totrans-1013
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: input { width:200px; }
  id: totrans-1014
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: input { width:200px; }
- en: 'input, .default { border:2px solid #27659f; }'
  id: totrans-1015
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'input, .default { border:2px solid #27659f; }'
- en: .error {
  id: totrans-1016
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: .error {
- en: 'border:2px solid #a72b2e;'
  id: totrans-1017
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'border:2px solid #a72b2e;'
- en: background-color:#f78080;
  id: totrans-1018
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 背景颜色：#f78080;
- en: '}'
  id: totrans-1019
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-1020
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: Save the new file as `class-animation.css`.
  id: totrans-1021
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将新文件保存为`class-animation.css`。
- en: Run the page in a browser and again, click the `<button>` element without entering
    anything into the text field. The `<input>` field should transition to the `error`
    class and appear the same as it did in the last example. This time, however, enter
    some text in the `<input>` field and click the `<button>` element again. The error
    should then transition back to default.
  id: totrans-1022
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在浏览器中运行页面，然后再次点击没有输入任何文本字段的`<button>`元素。`<input>`字段应该过渡到`error`类，并且与上一个示例中的样子相同。然而，这一次，在`<input>`字段中输入一些文本，然后再次点击`<button>`元素。错误应该转换回默认值。
- en: '*What just happened?*'
  id: totrans-1023
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚刚发生了什么？*'
- en: This time, if the `<input>` field has no value, we just call the `switchClass()`
    method, specifying the current class of default, the new class of `error`, and
    a duration of `1.2` seconds. Note that you must supply both the current and new
    classes for the example to work correctly.
  id: totrans-1024
  prefs: []
  type: TYPE_NORMAL
  zh: 这一次，如果`<input>`字段没有值，我们只需调用`switchClass()`方法，指定默认类的当前类，`error`的新类和`1.2`秒的持续时间。请注意，您必须为示例正确运行提供当前类和新类。
- en: In the next branch of the conditional, we check that the `<input>` field has
    both a value and a class name of `error`. If it does, we call the `removeClass()`
    method specifying just the class to remove and a duration. The duration is required
    in order to trigger the transition.
  id: totrans-1025
  prefs: []
  type: TYPE_NORMAL
  zh: 在条件的下一个分支中，我们检查`<input>`字段是否具有值和`error`类名。如果是，我们调用`removeClass()`方法，仅指定要删除的类和持续时间。需要持续时间以触发过渡效果。
- en: In the CSS we provide the default styling using the class name `default` as
    well as generally for all of the `<input>` fields. We need to do this because
    otherwise the element loses its styles while the `error` class is in the process
    of being removed, causing it to revert to a standard, unstyled `<input>` field.
  id: totrans-1026
  prefs: []
  type: TYPE_NORMAL
  zh: 在 CSS 中，我们使用`default`类名提供默认样式，通常适用于所有`<input>`字段。我们需要这样做，因为否则元素在正在移除`error`类时会丢失其样式，导致其恢复为标准的未样式化的`<input>`字段。
- en: Note
  id: totrans-1027
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '*Performance*: When using jQuery, it''s generally best that we change the class
    name of an element rather than manipulating an element''s `style` attribute directly.
    Because of this, it''s natural to assume that using `switchClass()` would be more
    efficient than using `animate()`.'
  id: totrans-1028
  prefs: []
  type: TYPE_NORMAL
  zh: '*性能*：在使用 jQuery 时，最好是改变元素的类名而不是直接操作元素的`style`属性。因此，自然而然地会认为使用`switchClass()`比使用`animate()`更有效率。'
- en: This, however, is not the case, as Firebug's profile tool will show. In the
    previous example, if the second branch of the conditional is removed and the page
    and both `color-animation.html` and `class-animation.html` are profiled, it is
    `color-animation.html` that wins by a margin of around 20 milliseconds.
  id: totrans-1029
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，情况并非如此，Firebug 的分析工具会显示出来。在前面的例子中，如果将条件语句的第二个分支移除，并对页面、`color-animation.html`和`class-animation.html`进行分析，结果会显示`color-animation.html`胜出，优势约为20毫秒。
- en: Pop quiz – easing, color, and class animations
  id: totrans-1030
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 小测验 - 缓动、颜色和类动画
- en: Q1\. How are easing functions specified?
  id: totrans-1031
  prefs: []
  type: TYPE_NORMAL
  zh: Q1\. 如何指定缓动函数？
- en: In string format as the third argument to the `effect()` method, for example,
    `effect("blind", {}, "easeOutBounce")`
  id: totrans-1032
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以字符串格式作为`effect()`方法的第三个参数，例如，`effect("blind", {}, "easeOutBounce")`
- en: As Boolean in a callback function, for example, `effect("blind", function()
    { easeOutBounce = true })`
  id: totrans-1033
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作为回调函数中的布尔值，例如，`effect("blind", function() { easeOutBounce = true })`
- en: Easing cannot be used
  id: totrans-1034
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不能使用缓动
- en: 'In string format as the value of the easing configuration option, for example,
    `effect("blind", { easing: "easeOutBounce" })`'
  id: totrans-1035
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '以字符串格式作为缓动配置选项的值，例如，`effect("blind", { easing: "easeOutBounce" })`'
- en: Q2\. Which method is extended to produce color animations?
  id: totrans-1036
  prefs: []
  type: TYPE_NORMAL
  zh: Q2\. 哪种方法被扩展以产生颜色动画？
- en: The `effect()` method
  id: totrans-1037
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`effect()`方法'
- en: The `show()` method
  id: totrans-1038
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`show()`方法'
- en: The `animate()` method
  id: totrans-1039
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`animate()`方法'
- en: The `switchClass()` method
  id: totrans-1040
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`switchClass()`方法'
- en: Summary
  id: totrans-1041
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter we looked at the complete range of effects that are added by
    the jQuery UI library. We looked at how they can be used with the `effect()` method,
    or the `show()`, `hide()`, and `toggle()` methods when necessary. We saw the configuration
    arguments that each effect takes, and their default values when used out of the
    box.
  id: totrans-1042
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们研究了 jQuery UI 库添加的完整范围的效果。我们看到了它们如何与`effect()`方法或必要时与`show()`、`hide()`和`toggle()`方法一起使用。我们了解了每个效果所接受的配置参数以及在默认情况下使用时的默认值。
- en: We also covered how jQuery UI extends the `animation()`, `addClass()`, and `removeClass()`
    methods, and the `switchClass()` method that it adds in order to add the ability
    to animate between colors and classes.
  id: totrans-1043
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还介绍了 jQuery UI 如何扩展`animation()`、`addClass()`和`removeClass()`方法，以及添加的`switchClass()`方法，以便实现在颜色和类之间进行动画处理的能力。
- en: 'The key points to take from this chapter include:'
  id: totrans-1044
  prefs: []
  type: TYPE_NORMAL
  zh: 从本章中要记住的要点包括：
- en: jQuery UI together with jQuery can be downloaded using the jQuery UI download
    builder, which builds a custom package, complete with a theme if required for
    you to download.
  id: totrans-1045
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: jQuery UI 与 jQuery 结合可以使用 jQuery UI 下载构建器下载，该构建器会构建一个自定义包，如果需要，还会附带一个主题供您下载。
- en: jQuery UI adds a total of 14 new, predefined effects to our animation toolkit.
    The effects are easy to use, but highly configurable.
  id: totrans-1046
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: jQuery UI 向我们的动画工具包中添加了共计14个新的预定义效果。这些效果易于使用，但高度可配置。
- en: The `effect()` method is the basic means of specifying an effect, its configuration
    options, a duration, and a callback function.
  id: totrans-1047
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`effect()`方法是指定效果、其配置选项、持续时间和回调函数的基本手段。'
- en: Some of the effects work much better with the `show()`, `hide()`, or `toggle()`
    methods, and are equally as easy to use with this aspect of the API.
  id: totrans-1048
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些效果与`show()`、`hide()`或`toggle()`方法配合使用效果更佳，并且与API的这一方面一样容易使用。
- en: The easing functions are built directly into jQuery UI and can be used by specifying
    them as values for the `easing` configuration option.
  id: totrans-1049
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缓动函数直接内置到 jQuery UI 中，可以通过将它们指定为`easing`配置选项的值来使用。
- en: jQuery UI also gives us the ability to transition an element's color or class
    name by extending some of jQuery's methods and adding the new `switchClass()`
    method.
  id: totrans-1050
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: jQuery UI 还通过扩展 jQuery 的一些方法并添加新的 `switchClass()` 方法，为我们提供了过渡元素颜色或类名的能力。
- en: In the next chapter, we'll switch back to jQuery and look at custom animations,
    including custom transitions, a custom-made slideshow, animating an element's
    dimensions, and how to create a jQuery animation plugin.
  id: totrans-1051
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将切换回 jQuery，并研究自定义动画，包括自定义过渡、自制幻灯片、元素尺寸动画以及如何创建 jQuery 动画插件。
