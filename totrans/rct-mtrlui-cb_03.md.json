["```js\nimport React, { useState } from 'react';\n\nimport Drawer from '@material-ui/core/Drawer';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nexport default function DrawerTypes({ classes, variant }) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Grid container justify=\"space-between\">\n      <Grid item>\n        <Drawer\n          variant={variant}\n          open={open}\n          onClose={() => setOpen(false)}\n        >\n          <List>\n            <ListItem\n              button\n              onClick={() => setOpen(false)}\n            >\n              <ListItemText>Home</ListItemText>\n            </ListItem>\n            <ListItem\n              button\n              onClick={() => setOpen(false)}\n            >\n              <ListItemText>Page 2</ListItemText>\n            </ListItem>\n            <ListItem\n              button\n              onClick={() => setOpen(false)}\n            >\n              <ListItemText>Page 3</ListItemText>\n            </ListItem>\n          </List>\n        </Drawer>\n      </Grid>\n      <Grid item>\n        <Button onClick={() => setOpen(!open)}>\n          {open ? 'Hide' : 'Show'} Drawer\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n```", "```js\n<Drawer\n  variant={variant}\n  open={open}\n  onClose={() => setOpen(false)}\n>\n  <List>\n    <ListItem\n      button\n      onClick={() => setOpen(false)}\n    >\n      <ListItemText>Home</ListItemText>\n    </ListItem>\n    <ListItem\n      button\n      onClick={() => setOpen(false)}\n    >\n      <ListItemText>Page 2</ListItemText>\n    </ListItem>\n    <ListItem\n      button\n      onClick={() => setOpen(false)}\n    >\n      <ListItemText>Page 3</ListItemText>\n    </ListItem>\n  </List>\n</Drawer>\n```", "```js\n<Button onClick={() => setOpen(!open)}>\n  {open ? 'Hide' : 'Show'} Drawer\n</Button>\n```", "```js\n<List>\n  <ListItem\n    button\n    onClick={() => setOpen(variant !== 'temporary')}\n  >\n    <ListItemText>Home</ListItemText>\n  </ListItem>\n  <ListItem\n    button\n    onClick={() => setOpen(variant !== 'temporary')}\n  >\n    <ListItemText>Page 2</ListItemText>\n  </ListItem>\n  <ListItem\n    button\n    onClick={() => setOpen(variant !== 'temporary')}\n  >\n    <ListItemText>Page 3</ListItemText>\n  </ListItem>\n</List>\n```", "```js\nimport React, { useState } from 'react';\n\nimport Drawer from '@material-ui/core/Drawer';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport WebIcon from '@material-ui/icons/Web';\n\nexport default function DrawerItemState() {\n  const [open, setOpen] = useState(false);\n  const [content, setContent] = useState('Home');\n  const [items] = useState([\n    { label: 'Home', Icon: HomeIcon },\n    { label: 'Page 2', Icon: WebIcon },\n    { label: 'Page 3', Icon: WebIcon, disabled: true },\n    { label: 'Page 4', Icon: WebIcon },\n    { label: 'Page 5', Icon: WebIcon, hidden: true }\n  ]);\n\n  const onClick = content => () => {\n    setOpen(false);\n    setContent(content);\n  };\n\n  return (\n    <Grid container justify=\"space-between\">\n      <Grid item>\n        <Typography>{content}</Typography>\n      </Grid>\n      <Grid item>\n        <Drawer open={open} onClose={() => setOpen(false)}>\n          <List>\n            {items\n              .filter(({ hidden }) => !hidden)\n              .map(({ label, disabled, Icon }, i) => (\n                <ListItem\n                  button\n                  key={i}\n                  disabled={disabled}\n                  onClick={onClick(label)}\n                >\n                  <ListItemIcon>\n                    <Icon />\n                  </ListItemIcon>\n                  <ListItemText>{label}</ListItemText>\n                </ListItem>\n              ))}\n          </List>\n        </Drawer>\n      </Grid>\n\n      <Grid item>\n        <Button onClick={() => setOpen(!open)}>\n          {open ? 'Hide' : 'Show'} Drawer\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n```", "```js\nconst [open, setOpen] = useState(false);\nconst [content, setContent] = useState('Home');\nconst [items] = useState([\n  { label: 'Home', Icon: HomeIcon },\n  { label: 'Page 2', Icon: WebIcon },\n  { label: 'Page 3', Icon: WebIcon, disabled: true },\n  { label: 'Page 4', Icon: WebIcon },\n  { label: 'Page 5', Icon: WebIcon, hidden: true }\n]);\n```", "```js\n<List>\n  {items\n    .filter(({ hidden }) => !hidden)\n    .map(({ label, disabled, Icon }, i) => (\n      <ListItem\n        button\n        key={i}\n        disabled={disabled}\n        onClick={onClick(label)}\n      >\n        <ListItemIcon>\n          <Icon />\n        </ListItemIcon>\n        <ListItemText>{label}</ListItemText>\n      </ListItem>\n    ))}\n</List>\n```", "```js\nconst ListItems = ({ items, onClick }) =>\n  items\n    .filter(({ hidden }) => !hidden)\n    .map(({ label, disabled, Icon }, i) => (\n      <ListItem\n        button\n        key={i}\n        disabled={disabled}\n        onClick={onClick(label)}\n      >\n        <ListItemIcon>\n          <Icon />\n        </ListItemIcon>\n        <ListItemText>{label}</ListItemText>\n      </ListItem>\n    ));\n```", "```js\n<Grid container justify=\"space-between\">\n  <Grid item>\n    <Typography>{content}</Typography>\n  </Grid>\n  <Grid item>\n    <Drawer open={open} onClose={() => setOpen(false)}>\n      <List>\n        <ListItems items={items} onClick={onClick} />\n      </List>\n    </Drawer>\n  </Grid>\n\n  <Grid item>\n    <Button onClick={() => setOpen(!open)}>\n      {open ? 'Hide' : 'Show'} Drawer\n    </Button>\n  </Grid>\n</Grid>\n```", "```js\nimport React, { useState } from 'react';\nimport { Route, Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport WebIcon from '@material-ui/icons/Web';\n\nconst styles = theme => ({\n  alignContent: {\n    alignSelf: 'center'\n  }\n});\n\nfunction DrawerItemNavigation({ classes }) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Grid container justify=\"space-between\">\n      <Grid item className={classes.alignContent}>\n        <Route\n          exact\n          path=\"/\"\n          render={() => <Typography>Home</Typography>}\n        />\n        <Route\n          exact\n          path=\"/page2\"\n          render={() => <Typography>Page 2</Typography>}\n        />\n        <Route\n          exact\n          path=\"/page3\"\n          render={() => <Typography>Page 3</Typography>}\n        />\n      </Grid>\n      <Grid item>\n        <Drawer\n          className={classes.drawerWidth}\n          open={open}\n          onClose={() => setOpen(false)}\n        >\n          <List>\n            <ListItem\n              component={Link}\n              to=\"/\"\n              onClick={() => setOpen(false)}\n            >\n              <ListItemIcon>\n                <HomeIcon />\n              </ListItemIcon>\n              <ListItemText>Home</ListItemText>\n            </ListItem>\n            <ListItem\n              component={Link}\n              to=\"/page2\"\n              onClick={() => setOpen(false)}\n            >\n              <ListItemIcon>\n                <WebIcon />\n              </ListItemIcon>\n              <ListItemText>Page 2</ListItemText>\n            </ListItem>\n            <ListItem\n              component={Link}\n              to=\"/page3\"\n              onClick={() => setOpen(false)}\n            >\n              <ListItemIcon>\n                <WebIcon />\n              </ListItemIcon>\n              <ListItemText>Page 3</ListItemText>\n            </ListItem>\n          </List>\n        </Drawer>\n      </Grid>\n      <Grid item>\n        <Button onClick={() => setOpen(!open)}>\n          {open ? 'Hide' : 'Show'} Drawer\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default withStyles(styles)(DrawerItemNavigation);\n```", "```js\n<Grid item className={classes.alignContent}>\n  <Route\n    exact\n    path=\"/\"\n    render={() => <Typography>Home</Typography>}\n  />\n  <Route\n    exact\n    path=\"/page2\"\n    render={() => <Typography>Page 2</Typography>}\n  />\n  <Route\n    exact\n    path=\"/page3\"\n    render={() => <Typography>Page 3</Typography>}\n  />\n</Grid>\n```", "```js\n<ListItem\n  component={Link}\n  to=\"/\"\n  onClick={() => setOpen(false)}\n>\n  <ListItemIcon>\n    <HomeIcon />\n  </ListItemIcon>\n  <ListItemText>Home</ListItemText>\n</ListItem>\n```", "```js\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { Switch, Route, Link, NavLink } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport WebIcon from '@material-ui/icons/Web';\n\nconst styles = theme => ({\n  alignContent: {\n    alignSelf: 'center'\n  },\n  activeListItem: {\n    color: theme.palette.primary.main\n  }\n});\n\nconst NavListItem = withStyles(styles)(\n  ({ classes, Icon, text, active, ...other }) => (\n    <ListItem component={NavLink} {...other}>\n      <ListItemIcon\n        classes={{\n          root: clsx({ [classes.activeListItem]: active })\n        }}\n      >\n        <Icon />\n      </ListItemIcon>\n      <ListItemText\n        classes={{\n          primary: clsx({\n            [classes.activeListItem]: active\n          })\n        }}\n      >\n        {text}\n      </ListItemText>\n    </ListItem>\n  )\n);\n\nconst NavItem = props => (\n  <Switch>\n    <Route\n      exact\n      path={props.to}\n      render={() => <NavListItem active={true} {...props} />}\n    />\n    <Route path=\"/\" render={() => <NavListItem {...props} />} />\n  </Switch>\n);\n\nfunction DrawerItemNavigation({ classes }) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Grid container justify=\"space-between\">\n      <Grid item className={classes.alignContent}>\n        <Route\n          exact\n          path=\"/\"\n          render={() => <Typography>Home</Typography>}\n        />\n        <Route\n          exact\n          path=\"/page2\"\n          render={() => <Typography>Page 2</Typography>}\n        />\n        <Route\n          exact\n          path=\"/page3\"\n          render={() => <Typography>Page 3</Typography>}\n        />\n      </Grid>\n      <Grid item>\n        <Drawer\n          className={classes.drawerWidth}\n          open={open}\n          onClose={() => setOpen(false)}\n        >\n          <List>\n            <NavItem\n              to=\"/\"\n              text=\"Home\"\n              Icon={HomeIcon}\n              onClick={() => setOpen(false)}\n            />\n            <NavItem\n              to=\"/page2\"\n              text=\"Page 2\"\n              Icon={WebIcon}\n              onClick={() => setOpen(false)}\n            />\n            <NavItem\n              to=\"/page3\"\n              text=\"Page 3\"\n              Icon={WebIcon}\n              onClick={() => setOpen(false)}\n            />\n          </List>\n        </Drawer>\n      </Grid>\n      <Grid item>\n        <Button onClick={() => setOpen(!open)}>\n          {open ? 'Hide' : 'Show'} Drawer\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default withStyles(styles)(DrawerItemNavigation);\n```", "```js\nconst NavItem = props => (\n  <Switch>\n    <Route\n      exact\n      path={props.to}\n      render={() => <NavListItem active={true} {...props} />}\n    />\n    <Route path=\"/\" render={() => <NavListItem {...props} />} />\n  </Switch>\n);\n```", "```js\nconst NavListItem = withStyles(styles)(\n  ({ classes, Icon, text, active, ...other }) => (\n    <ListItem component={NavLink} {...other}>\n      <ListItemIcon\n        classes={{\n          root: clsx({ [classes.activeListItem]: active })\n        }}\n      >\n        <Icon />\n      </ListItemIcon>\n      <ListItemText\n        classes={{\n          primary: clsx({\n            [classes.activeListItem]: active\n          })\n        }}\n      >\n        {text}\n      </ListItemText>\n    </ListItem>\n  )\n);\n```", "```js\nconst styles = theme => ({\n  alignContent: {\n    alignSelf: 'center'\n  },\n  activeListItem: {\n    color: theme.palette.primary.main\n  }\n});\n```", "```js\nimport React, { useState } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Typography from '@material-ui/core/Typography';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\n\nconst styles = theme => ({\n  alignContent: {\n    alignSelf: 'center'\n  }\n});\n\nconst ListItems = ({ items, onClick }) =>\n  items\n    .filter(({ hidden }) => !hidden)\n    .map(({ label, disabled, Icon }, i) => (\n      <ListItem\n        button\n        key={i}\n        disabled={disabled}\n        onClick={onClick(label)}\n      >\n        <ListItemIcon>\n          <Icon />\n        </ListItemIcon>\n        <ListItemText>{label}</ListItemText>\n      </ListItem>\n    ));\n\nconst DrawerSections = withStyles(styles)(({ classes }) => {\n  const [open, setOpen] = useState(false);\n  const [content, setContent] = useState('Home');\n  const [items] = useState({\n    cpu: [\n      { label: 'Add CPU', Icon: AddIcon },\n      { label: 'Remove CPU', Icon: RemoveIcon },\n      { label: 'Usage', Icon: ShowChartIcon }\n    ],\n    memory: [\n      { label: 'Add Memory', Icon: AddIcon },\n      { label: 'Usage', Icon: ShowChartIcon }\n    ],\n    storage: [\n      { label: 'Add Storage', Icon: AddIcon },\n      { label: 'Usage', Icon: ShowChartIcon }\n    ],\n    network: [\n      { label: 'Add Network', Icon: AddIcon, disabled: true },\n      { label: 'Usage', Icon: ShowChartIcon }\n    ]\n  });\n\n  const onClick = content => () => {\n    setOpen(false);\n    setContent(content);\n  };\n\n  return (\n    <Grid container justify=\"space-between\">\n      <Grid item className={classes.alignContent}>\n        <Typography>{content}</Typography>\n      </Grid>\n      <Grid item>\n        <Drawer open={open} onClose={() => setOpen(false)}>\n          <List>\n            <ListSubheader>CPU</ListSubheader>\n            <ListItems items={items.cpu} onClick={onClick} />\n            <ListSubheader>Memory</ListSubheader>\n            <ListItems items={items.memory} onClick={onClick} />\n            <ListSubheader>Storage</ListSubheader>\n            <ListItems items={items.storage} onClick={onClick} />\n            <ListSubheader>Network</ListSubheader>\n            <ListItems items={items.network} onClick={onClick} />\n          </List>\n        </Drawer>\n      </Grid>\n\n      <Grid item>\n        <Button onClick={() => setOpen(!open)}>\n          {open ? 'Hide' : 'Show'} Drawer\n        </Button>\n      </Grid>\n    </Grid>\n  );\n});\n\nexport default DrawerSections;\n```", "```js\nconst [open, setOpen] = useState(false);\nconst [content, setContent] = useState('Home');\nconst [items] = useState({\n  cpu: [\n    { label: 'Add CPU', Icon: AddIcon },\n    { label: 'Remove CPU', Icon: RemoveIcon },\n    { label: 'Usage', Icon: ShowChartIcon }\n  ],\n  memory: [\n    { label: 'Add Memory', Icon: AddIcon },\n    { label: 'Usage', Icon: ShowChartIcon }\n  ],\n  storage: [\n    { label: 'Add Storage', Icon: AddIcon },\n    { label: 'Usage', Icon: ShowChartIcon }\n  ],\n  network: [\n    { label: 'Add Network', Icon: AddIcon, disabled: true },\n    { label: 'Usage', Icon: ShowChartIcon }\n  ]\n});\n```", "```js\n<List>\n  <ListSubheader>CPU</ListSubheader>\n  <ListItems items={items.cpu} onClick={onClick} />\n  <ListSubheader>Memory</ListSubheader>\n  <ListItems items={items.memory} onClick={onClick} />\n  <ListSubheader>Storage</ListSubheader>\n  <ListItems items={items.storage} onClick={onClick} />\n  <ListSubheader>Network</ListSubheader>\n  <ListItems items={items.network} onClick={onClick} />\n</List>\n```", "```js\n<ListSubheader>\n  <Button\n    disableRipple\n    classes={{ root: classes.listSubheader }}\n    onClick={toggleSection('cpu')}\n  >\n    CPU\n  </Button>\n</ListSubheader>\n```", "```js\nconst styles = theme => ({\n  alignContent: {\n    alignSelf: 'center'\n  },\n  listSubheader: {\n    padding: 0,\n    minWidth: 0,\n    color: 'inherit',\n    '&:hover': {\n      background: 'inherit'\n    }\n  }\n});\n```", "```js\nconst toggleSection = name => () => {\n  setSections({ ...sections, [name]: !sections[name] });\n};\n```", "```js\nconst [sections, setSections] = useState({\n  cpu: true,\n  memory: false,\n  storage: false,\n  network: false\n});\n```", "```js\nconst ListItems = ({ items, visible, onClick }) => (\n  <Collapse in={visible}>\n    {items\n      .filter(({ hidden }) => !hidden)\n      .map(({ label, disabled, Icon }, i) => (\n        <ListItem\n          button\n          key={i}\n          disabled={disabled}\n          onClick={onClick(label)}\n        >\n          <ListItemIcon>\n            <Icon />\n          </ListItemIcon>\n          <ListItemText>{label}</ListItemText>\n        </ListItem>\n      ))}\n  </Collapse>\n);\n```", "```js\n<ListItems\n  visible={sections.cpu}\n  items={items.cpu}\n  onClick={onClick}\n/>\n```", "```js\nimport React, { useState, Fragment } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  flex: {\n    flex: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  toolbarMargin: theme.mixins.toolbar\n});\n\nconst MyToolbar = withStyles(styles)(\n  ({ classes, title, onMenuClick }) => (\n    <Fragment>\n      <AppBar>\n        <Toolbar>\n          <IconButton\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={onMenuClick}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            variant=\"title\"\n            color=\"inherit\"\n            className={classes.flex}\n          >\n            {title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.toolbarMargin} />\n    </Fragment>\n  )\n);\n\nconst MyDrawer = withStyles(styles)(\n  ({ classes, variant, open, onClose, setTitle }) => (\n    <Drawer variant={variant} open={open} onClose={onClose}>\n      <List>\n        <ListItem\n          button\n          onClick={() => {\n            setTitle('Home');\n            onClose();\n          }}\n        >\n          <ListItemText>Home</ListItemText>\n        </ListItem>\n        <ListItem\n          button\n          onClick={() => {\n            setTitle('Page 2');\n            onClose();\n          }}\n        >\n          <ListItemText>Page 2</ListItemText>\n        </ListItem>\n        <ListItem\n          button\n          onClick={() => {\n            setTitle('Page 3');\n            onClose();\n          }}\n        >\n          <ListItemText>Page 3</ListItemText>\n        </ListItem>\n      </List>\n    </Drawer>\n  )\n);\n\nfunction AppBarInteraction({ classes }) {\n  const [drawer, setDrawer] = useState(false);\n  const [title, setTitle] = useState('Home');\n\n  const toggleDrawer = () => {\n    setDrawer(!drawer);\n  };\n\n  return (\n    <div className={classes.root}>\n      <MyToolbar title={title} onMenuClick={toggleDrawer} />\n      <MyDrawer\n        open={drawer}\n        onClose={toggleDrawer}\n        setTitle={setTitle}\n      />\n    </div>\n  );\n}\n\nexport default withStyles(styles)(AppBarInteraction);\n```", "```js\nconst MyToolbar = withStyles(styles)(\n  ({ classes, title, onMenuClick }) => (\n    <Fragment>\n      <AppBar>\n        <Toolbar>\n          <IconButton\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={onMenuClick}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            variant=\"title\"\n            color=\"inherit\"\n            className={classes.flex}\n          >\n            {title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.toolbarMargin} />\n    </Fragment>\n  )\n);\n```", "```js\nconst MyDrawer = withStyles(styles)(\n  ({ classes, variant, open, onClose, setTitle }) => (\n    <Drawer variant={variant} open={open} onClose={onClose}>\n      <List>\n        <ListItem\n          button\n          onClick={() => {\n            setTitle('Home');\n            onClose();\n          }}\n        >\n          <ListItemText>Home</ListItemText>\n        </ListItem>\n        <ListItem\n          button\n          onClick={() => {\n            setTitle('Page 2');\n            onClose();\n          }}\n        >\n          <ListItemText>Page 2</ListItemText>\n        </ListItem>\n        <ListItem\n          button\n          onClick={() => {\n            setTitle('Page 3');\n            onClose();\n          }}\n        >\n          <ListItemText>Page 3</ListItemText>\n        </ListItem>\n      </List>\n    </Drawer>\n  )\n);\n```", "```js\nfunction AppBarInteraction({ classes }) {\n  const [drawer, setDrawer] = useState(false);\n  const [title, setTitle] = useState('Home');\n\n  const toggleDrawer = () => {\n    setDrawer(!drawer);\n  };\n\n  return (\n    <div className={classes.root}>\n      <MyToolbar title={title} onMenuClick={toggleDrawer} />\n      <MyDrawer\n        open={drawer}\n        onClose={toggleDrawer}\n        setTitle={setTitle}\n      />\n    </div>\n  );\n}\n```", "```js\naboveDrawer: {\n  zIndex: theme.zIndex.drawer + 1\n}\n```", "```js\n<AppBar className={classes.aboveDrawer}>\n```", "```js\n<div\n  className={clsx({\n    [classes.toolbarMargin]: variant === 'persistent'\n  })}\n/>\n```", "```js\nconst onItemClick = title => () => {\n  setTitle(title);\n  setDrawer(variant === 'temporary' ? false : drawer);\n};\n```", "```js\n<List>\n  <ListItem button onClick={onItemClick('Home')}>\n    <ListItemText>Home</ListItemText>\n  </ListItem>\n  <ListItem button onClick={onItemClick('Page 2')}>\n    <ListItemText>Page 2</ListItemText>\n  </ListItem>\n  <ListItem button onClick={onItemClick('Page 3')}>\n    <ListItemText>Page 3</ListItemText>\n  </ListItem>\n</List>\n```"]