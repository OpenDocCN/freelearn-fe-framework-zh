- en: Chapter 7. AJAX Methods
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 7 章。AJAX 方法
- en: She's out of sync
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 她失去了同步
- en: ''
  id: totrans-2
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: She entered through the exit
  id: totrans-3
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 她从出口进入
- en: ''
  id: totrans-4
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: And never stopped to think
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 从未停下来思考
- en: ''
  id: totrans-6
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: —Devo
  id: totrans-7
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: ——Devo
- en: ''
  id: totrans-8
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '"Out of Sync"'
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '"失去同步"'
- en: The AJAX capabilities in jQuery help us to load data from the server without
    a browser page refresh. In this chapter, we'll examine each of the available AJAX
    methods and functions. We'll see various ways of initiating an AJAX request, as
    well as several methods that can observe the requests that are in progress at
    any time.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery 中的 AJAX 功能帮助我们从服务器加载数据，而不需要浏览器页面刷新。在本章中，我们将检查每个可用的 AJAX 方法和函数。我们将看到启动
    AJAX 请求的各种方式，以及可以随时观察到正在进行的请求的几种方法。
- en: Low-Level Interface
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 低级接口
- en: These methods can be used to make arbitrary AJAX requests.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这些方法可用于进行任意的 AJAX 请求。
- en: $.ajax()
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: $.ajax()
- en: '| Perform an asynchronous HTTP (AJAX) request.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '| 执行异步 HTTP（AJAX）请求。'
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '|'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: 'settings: A map of options for the request can contain the following items:'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: settings：请求选项的映射可以包含以下项：
- en: '`url`: A string containing the URL to which the request is sent.'
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`url`：包含发送请求的 URL 的字符串。'
- en: '`type` (optional): A string defining the HTTP method to use for the request
    (`GET` or `POST`). The default value is `GET`.'
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`type`（可选）：定义用于请求的 HTTP 方法的字符串（`GET` 或 `POST`）。默认值为 `GET`。'
- en: '`dataType` (optional): A string defining the type of data expected back from
    the server (`xml, html, json`, or `script`).'
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dataType`（可选）：定义从服务器返回的数据类型的字符串（`xml，html，json` 或 `script`）。'
- en: '`ifModified` (optional): A Boolean indicating whether the server should check
    if the page is modified before responding to the request.'
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ifModified`（可选）：一个布尔值，指示服务器在响应请求之前是否应检查页面是否已修改。'
- en: '`timeout` (optional): Number of milliseconds after which the request will time
    out in failure.'
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timeout`（可选）：请求失败时的超时毫秒数。'
- en: '`global` (optional): A Boolean indicating whether global AJAX event handlers
    will be triggered by this request. The default value is `true`.'
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`global`（可选）：一个布尔值，指示此请求是否会触发全局 AJAX 事件处理程序。默认值为 `true`。'
- en: '`beforeSend` (optional): A callback function that is executed before the request
    is sent.'
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`beforeSend`（可选）：在发送请求之前执行的回调函数。'
- en: '`error` (optional): A callback function that is executed if the request fails.'
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`error`（可选）：请求失败时执行的回调函数。'
- en: '`success` (optional): A callback function that is executed if the request succeeds.'
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`success`（可选）：请求成功时执行的回调函数。'
- en: '`complete` (optional): A callback function that executes whenever the request
    finishes.'
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`complete`（可选）：无论请求是否完成都会执行的回调函数。'
- en: '`data` (optional): A map or string that is sent to the server with the request.'
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data`（可选）：与请求一起发送到服务器的映射或字符串。'
- en: '`processData` (optional): A Boolean indicating whether to convert the submitted
    data from an object form into a query-string form. The default value is `true`.'
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`processData`（可选）：一个布尔值，指示是否将提交的数据从对象形式转换为查询字符串形式。默认值为 `true`。'
- en: '`contentType` (optional): A string containing a MIME content type to set for
    the request. The default value is `application/x-www-form-urlencoded`.'
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`contentType`（可选）：包含要为请求设置的 MIME 内容类型的字符串。默认值为 `application/x-www-form-urlencoded`。'
- en: '`async` (optional): A Boolean indicating whether to perform the request asynchronously.
    The default value is `true`.'
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`async`（可选）：一个布尔值，指示是否异步执行请求。默认值为 `true`。'
- en: Return Value
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: The `XMLHttpRequest` object that was created.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 创建的 XMLHttpRequest 对象。
- en: Description
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The `$.ajax()` function underlies all AJAX requests sent by jQuery. This function
    is seldom directly called as several higher-level alternatives like `$.post()`
    and `.load()` are available and are easier to use. If less common options are
    required, though, `$.ajax()` can be used for more flexibility.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '`$.ajax()` 函数是 jQuery 发送的所有 AJAX 请求的基础。这个函数很少直接调用，因为有几个更高级的替代方法可用，如 `$.post()`
    和 `.load()`，并且更容易使用。但是，如果需要不太常见的选项，`$.ajax()` 可以提供更大的灵活性。'
- en: 'At its simplest, the `$.ajax()` function must atleast specify a URL from which
    the data is to be loaded:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在其最简单的形式下，`$.ajax()` 函数必须至少指定要加载数据的 URL：
- en: '[PRE1]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Note
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Even this sole required parameter can be made optional by setting a default
    using the `$.ajaxSetup()` function.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 即使这个唯一的必需参数也可以通过使用 `$.ajaxSetup()` 函数设置默认值来变为可选。
- en: 'This example, using the only required option, loads the contents of the specified
    URL, but does nothing with the result. To use the result, we can implement one
    of the callback functions. The `beforeSend, error, success`, and `complete` options
    take callback functions that are invoked at the appropriate times:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这个例子，使用唯一的必需选项，加载了指定URL的内容，但对结果没有做任何操作。要使用结果，我们可以实现其中一个回调函数。`beforeSend，error，success`和`complete`选项接受在适当时候被调用的回调函数：
- en: '`beforeSend`: called before the request is sent; the `XMLHttpRequest` object
    is passed as a parameter to it.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`beforeSend`：在发送请求之前调用；`XMLHttpRequest`对象作为一个参数传递给它。'
- en: '`error`: called if the request fails. The `XMLHttpRequest` object is passed
    as a parameter as a string indicating the error type, and an exception object
    if applicable.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`error`：如果请求失败，将`XMLHttpRequest`对象作为参数调用，以及一个指示错误类型的字符串和一个（如适用）异常对象。'
- en: '`success`: called if the request succeeds. The returned data is passed as the
    parameter to it.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`success`：如果请求成功，将返回的数据作为其参数传递。'
- en: '`complete`: called when the request finishes, whether in failure or success.
    The `XMLHttpRequest` object as well as a string containing the success or error
    code are passed as a parameters to it.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`complete`：当请求完成时调用，无论成功与否。将`XMLHttpRequest`对象以及一个包含成功或错误代码的字符串作为参数传递给它。'
- en: 'To make use of the returned HTML, we can implement a `success` handler:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用返回的HTML，我们可以实现一个`success`处理程序：
- en: '[PRE2]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Such a simple example would generally be better served by using `.load()` or
    `$.get()`.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这样一个简单的例子通常最好使用`.load()`或`$.get()`来提供服务。
- en: The `$.ajax()` function relies on the server to provide information about the
    retrieved data. If the server reports the return data as XML, the result can be
    traversed using normal XML methods or jQuery's selectors. If another type is detected,
    such as HTML in the example above, the data is treated as text.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '`$.ajax()`函数依赖于服务器提供有关检索数据的信息。如果服务器将返回数据报告为XML，结果可以使用普通的XML方法或jQuery的选择器来遍历。如果检测到其他类型，比如上面的例子中的HTML，数据将被视为文本。'
- en: Different data handling can be achieved by using the `dataType` option. Besides
    plain `xml`, the `dataType` can be `html, json`, or `script`. If `html` is specified,
    any embedded JavaScript inside the retrieved data is executed before the HTML
    is returned as a string. Similarly, `script` will execute the JavaScript that
    is pulled back from the server and return the script itself as textual data. The
    `json` option uses `eval()` to parse the fetched data file as a JavaScript object,
    and return the constructed object as the result data.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用`dataType`选项，可以实现不同的数据处理。除了纯粹的`xml`之外，`dataType`还可以是`html，json`或`script`。如果指定了`html`，检索数据中的任何嵌入JavaScript在返回HTML字符串之前将被执行。类似地，`script`将执行从服务器拉回的JavaScript，并将脚本本身作为文本数据返回。`json`选项使用`eval()`来解析获取的数据文件，并将构造的对象作为结果数据返回。
- en: Note
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: We must ensure that the MIME type that is reported by the web server matches
    our choice of `dataType`. In particular, `xml` must be declared by the server
    as `text/xml` for consistent results.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须确保Web服务器报告的MIME类型与我们选择的`dataType`匹配。特别是，`xml`必须由服务器声明为`text/xml`以获得一致的结果。
- en: By default, AJAX requests are sent using the `GET HTTP` method. If the `POST`
    method is required, the method can be specified by setting a value for the `type`
    option. This option affects how the contents of the `data` option are sent to
    the server.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，AJAX请求使用`GET HTTP`方法发送。如果需要`POST`方法，可以通过为`type`选项设置一个值来指定方法。这个选项影响`data`选项的内容如何发送到服务器。
- en: 'The `data` option can contain either a query string of the form `key1=value1&key2=value2`,
    or a map of the form `{key1: ''value1'', key2: ''value2''}`. If the latter form
    is used, the data is converted into a query string before it is sent. This processing
    can be prevented by setting `processData` to `false`. The processing might be
    undesirable if we wish to send an XML object to the server; in this case, we would
    also want to change the `contentType` option from `application/x-www-form-urlencoded`
    to a more appropriate MIME type.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '`data`选项可以包含形式为`key1=value1&key2=value2`的查询字符串，或形式为`{key1: ''value1'', key2:
    ''value2''}`的映射。如果使用后一种形式，数据在发送之前会被转换为查询字符串。如果希望将XML对象发送到服务器，则可以通过将`processData`设置为`false`来阻止这种处理。如果我们希望发送XML对象到服务器，可能并不需要这个处理；在这种情况下，我们还希望将`contentType`选项从`application/x-www-form-urlencoded`更改为一个更合适的MIME类型。'
- en: The remaining options—`ifModified, timeout, global`, and `async`—are rarely
    required. For information on `ifModified`, please refer to the `$.getIfModified()`
    function. Request timeouts can usually be set as a global default using `$.ajaxSetup()`
    rather than for specific requests with the `timeout` option. The `global` option
    prevents registered handlers that use `.ajaxSend(), .ajaxError()`, or similar
    methods from firing when triggered by this request. This can be useful to, for
    example, suppress a loading indicator that we implemented with `.ajaxSend()` if
    the requests are frequent and brief. Lastly, the default value for `async` option
    is `true`, indicating that the code execution can be continued after the request
    is made. Setting this option to `false` is strongly discouraged as it can cause
    the browser to become unresponsive.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 其余选项——`ifModified、timeout、global`和`async`——很少需要。有关`ifModified`的信息，请参阅`$.getIfModified()`函数。请求超时通常可以使用`$.ajaxSetup()`设置为全局默认值，而不是使用`timeout`选项针对特定请求设置。`global`选项阻止注册的处理程序使用`.ajaxSend()、.ajaxError()`或类似方法在此请求触发时触发。例如，如果请求频繁且简短，则可以使用此选项来禁止我们使用`.ajaxSend()`实现的加载指示器。最后，`async`选项的默认值为`true`，表示在请求完成后可以继续执行代码。强烈不建议将此选项设置为`false`，因为它可能导致浏览器无响应。
- en: Tip
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Rather than making requests synchronous using this option, better results can
    be achieved using the *blockUI* plug-in..
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此选项使请求同步不如使用*blockUI*插件效果更好。
- en: The `$.ajax()` function returns the `XMLHttpRequest` object that it creates.
    This can generally be discarded, but it does provide a lower-level interface for
    observing and manipulating the request. In particular, calling `.abort()` on the
    object will halt the request before it completes.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '`$.ajax()`函数返回它创建的`XMLHttpRequest`对象。通常可以丢弃此对象，但它确实提供了一个更低级别的接口来观察和操作请求。特别是，在对象上调用`.abort()`将在请求完成之前停止请求。'
- en: $.ajaxSetup()
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: $.ajaxSetup()
- en: '| Sets default values for future AJAX requests.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '| 为将来的AJAX请求设置默认值。'
- en: '[PRE3]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '|'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: 'settings: A map of options for future requests. Same possible items as in `$.ajax()`.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置：用于未来请求的选项映射。与`$.ajax()`中可能的项相同。
- en: Return Value
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: None.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 无。
- en: Description
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: For details on the settings available for `$.ajaxSetup()`, please refert to
    `$.ajax()`. All subsequent AJAX calls using any function will use the new settings,
    unless overridden by the individual calls, until the next invocation of `$.ajaxSetup()`.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 有关`$.ajaxSetup()`可用设置的详细信息，请参阅`$.ajax()`。所有使用任何函数的后续AJAX调用将使用新的设置，除非被单独调用覆盖，直到下一次调用`$.ajaxSetup()`为止。
- en: 'For example, we could set a default value for the URL parameter before pinging
    the server repeatedly:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在反复ping服务器之前，我们可以为URL参数设置一个默认值：
- en: '[PRE4]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Now each time an AJAX request is made, this URL will be used automatically:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在每次进行AJAX请求时，将自动使用此URL：
- en: '[PRE5]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Shorthand Methods
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 快捷方法
- en: These methods perform the more common types of AJAX requests in less code.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这些方法使用更少的代码执行更常见类型的AJAX请求。
- en: $.get()
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: $.get()
- en: '| Loads data from the server using a GET HTTP request.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '| 使用GET HTTP请求从服务器加载数据。'
- en: '[PRE6]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '|'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: 'url: A string containing the URL to which the request is sent'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: URL：包含要发送请求的URL的字符串
- en: 'data: (optional): A map of data that is sent with the request'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据：（可选）：发送请求的数据的映射
- en: 'success: (optional): A function that is executed if the request succeeds'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 成功：（可选）：如果请求成功则执行的函数
- en: Return Value
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: The `XMLHttpRequest` object that was created.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 创建的`XMLHttpRequest`对象。
- en: Description
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'This is a shorthand AJAX function, which is equivalent to:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简写的AJAX函数，等价于：
- en: '[PRE7]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The callback is passed the returned data, which will be an XML root element
    or a text string depending on the MIME type of the response.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 回调函数传递了返回的数据，这将是一个XML根元素或文本字符串，具体取决于响应的MIME类型。
- en: 'Most implementations will specify a success handler:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数实现将指定一个成功处理程序：
- en: '[PRE8]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This example fetches the requested HTML snippet and inserts it on the page.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例获取所请求的HTML片段并将其插入页面。
- en: $.getIfModified()
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: $.getIfModified()
- en: '| Loads data from the server using a `GET HTTP` request if it has changed since
    the last request.'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '| 如果自上次请求以来已更改，则使用`GET HTTP`请求从服务器加载数据。'
- en: '[PRE9]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '|'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: 'url: A string containing the URL to which the request is sent'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: URL：包含要发送请求的URL的字符串
- en: 'data: (optional): A map of data that is sent with the request'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据：（可选）：发送请求的数据的映射
- en: 'success: (optional): A function that is executed if the request succeeds'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 成功：（可选）：如果请求成功则执行的函数
- en: Return Value
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: The `XMLHttpRequest` object that was created.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 创建的`XMLHttpRequest`对象。
- en: Description
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'This is a shorthand AJAX function, which is equivalent to:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简写的 AJAX 函数，相当于：
- en: '[PRE10]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The callback is passed the returned data, which will be an XML root element
    or a text string depending on the MIME type of the response.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 回调传递了返回的数据，这将是一个 XML 根元素或一个文本字符串，具体取决于响应的 MIME 类型。
- en: 'Most implementations will specify a success handler:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数实现都会指定一个成功处理程序：
- en: '[PRE11]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This example fetches the requested HTML snippet and inserts it on the page.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例获取所请求的 HTML 片段，并将其插入到页面中。
- en: When the AJAX request is sent, an `If-Modified-Since` HTTP header is added.
    Web servers are supposed to honor this and omit the data if the file is unchanged.
    This can be exploited to save bandwidth when refreshing data from within a page.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 发送 AJAX 请求时，将添加一个`If-Modified-Since`的 HTTP 标头。Web 服务器应该遵守这一点，并在文件未更改时省略数据。这可以用来节省带宽，当在页面内刷新数据时。
- en: A response that the page is not modified is still treated as a `success`. In
    this case the callback will still be executed, but no data will be available.
    The callback should trap for this to avoid discarding previously-fetched data.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 仍将未修改的页面响应视为`success`。在这种情况下，回调仍将被执行，但不会有数据可用。回调应该捕获这一点，以避免丢弃以前获取的数据。
- en: .load()
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .load()
- en: '| Loads data from the server and places the returned HTML into the matched
    element.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '| 从服务器加载数据，并将返回的 HTML 放入匹配的元素中。'
- en: '[PRE12]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '|'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: 'url: A string containing the URL to which the request is sent'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'url: 包含发送请求的 URL 的字符串'
- en: 'data (optional): A map of data that is sent with the request'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'data (可选): 要发送的数据的映射'
- en: 'success (optional): A function that is executed if the request succeeds'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'success (可选): 如果请求成功，则执行的函数'
- en: Return Value
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: The jQuery object, for chaining purposes.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery 对象，用于链式调用。
- en: Description
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'This method is the simplest way to fetch data from the server. It is roughly
    equivalent to `$.get(url, data, success)` except that it is a method rather than
    a global function and it has an implicit callback function. When a successful
    response is detected, `.load()` sets the HTML contents of the matched element
    to the returned data. This means that most uses of the method can be quite simple:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法是从服务器获取数据的最简单方法。它大致等同于`$.get(url, data, success)`，不同之处在于它是一个方法而不是一个全局函数，并且它具有一个隐式回调函数。当检测到成功响应时，`.load()`将匹配元素的
    HTML 内容设置为返回的数据。这意味着该方法的大多数用法都可以非常简单：
- en: '[PRE13]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The provided callback, if any, is executed after this post-processing has been
    performed:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 提供的回调（可选）在执行此后处理后执行：
- en: '[PRE14]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The POST method is used if data is provided; otherwise, GET is assumed.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 如果提供了数据，则使用 POST 方法；否则，假定为 GET。
- en: Note
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The event handling suite also has a method named `.load()`. Which one is fired
    depends on the set of arguments passed.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 事件处理套件还有一个名为`.load()`的方法。哪一个被触发取决于传递的参数集。
- en: .loadIfModified()
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .loadIfModified()
- en: '| Loads data from the server, if it has changed since the last request, and
    places the returned HTML into the matched element.'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '| 从服务器加载数据，如果自上次请求以来已更改，则将返回的 HTML 放入匹配的元素中。'
- en: '[PRE15]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '|'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: 'url: A string containing the URL to which the request is sent'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'url: 包含发送请求的 URL 的字符串'
- en: 'data: (optional): A map of data that is sent with the request'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ' (可选): 要发送的数据的映射'
- en: 'success: (optional): A function that is executed if the request succeeds'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'success: (可选): 如果请求成功，则执行的函数'
- en: Return Value
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: The jQuery object, for chaining purposes.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery 对象，用于链式调用。
- en: Description
  id: totrans-139
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'This method is roughly equivalent to `$.getIfModified(url, data, success)`
    except that it is a method rather than a global function and it has an implicit
    callback function. When a successful response is detected, `.loadIfModified()`
    sets the HTML contents of the matched element to the returned data. This means
    that most uses of the method can be quite simple:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法大致等同于`$.getIfModified(url, data, success)`，不同之处在于它是一个方法而不是一个全局函数，并且它具有一个隐式回调函数。当检测到成功响应时，`.loadIfModified()`将匹配元素的
    HTML 内容设置为返回的数据。这意味着该方法的大多数用法都可以非常简单：
- en: '[PRE16]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The provided callback, if any, is executed after this post-processing has been
    performed:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 提供的回调（如果有）在执行此后处理后执行：
- en: '[PRE17]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The POST method is used if data is provided; otherwise, GET is assumed.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 如果提供了数据，则使用 POST 方法；否则，假定为 GET。
- en: For more information on how the modification date checking works, see `$.getIfModified()`.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解修改日期检查的工作原理，请参见`$.getIfModified()`。
- en: $.post()
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: $.post()
- en: '| Loads data from the server using a `POST HTTP` request.'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '| 使用 `POST HTTP` 请求从服务器加载数据。'
- en: '[PRE18]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '|'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-150
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: 'url: A string containing the URL to which the request is sent'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'url: 包含发送请求的 URL 的字符串'
- en: 'data: (optional): A map of data that is sent with the request'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: （可选）：随请求发送的数据映射
- en: 'success: (optional): A function that is executed if the request succeeds'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: success:（可选）：如果请求成功，则执行的函数
- en: Return Value
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: The `XMLHttpRequest` object that was created.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 创建的 `XMLHttpRequest` 对象。
- en: Description
  id: totrans-156
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'This is a shorthand AJAX function, which is equivalent to:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简写的 AJAX 函数，相当于：
- en: '[PRE19]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The callback is passed the returned data, which will be an XML root element
    or a text string depending on the MIME type of the response.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 回调函数传递返回的数据，这将是一个 XML 根元素或一个取决于响应的 MIME 类型的文本字符串。
- en: 'Most implementations will specify a success handler:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数实现将指定一个成功处理程序：
- en: '[PRE20]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: This example fetches the requested HTML snippet and inserts it on the page.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 这个例子获取请求的 HTML 片段并将其插入到页面上。
- en: Pages fetched with `POST` are never cached, so the `ifModified` option has no
    effect on these requests.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `POST` 获取的页面永远不会被缓存，因此 `ifModified` 选项对这些请求没有影响。
- en: $.getJSON()
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: $.getJSON()
- en: '| Loads JSON-encoded data from the server using a `GET HTTP` request.'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '| 使用 `GET HTTP` 请求从服务器加载 JSON 编码的数据。'
- en: '[PRE21]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '|'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-168
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: 'url: A string containing the URL to which the request is sent'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'url: 包含发送请求的 URL 的字符串'
- en: 'data: (optional): A map of data that is sent with the request'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: （可选）：随请求发送的数据映射
- en: 'success: (optional): A function that is executed if the request succeeds'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: success:（可选）：如果请求成功，则执行的函数
- en: Return Value
  id: totrans-172
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: The `XMLHttpRequest` object that was created.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 创建的 `XMLHttpRequest` 对象。
- en: Description
  id: totrans-174
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'This is a shorthand AJAX function, which is equivalent to:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简写的 AJAX 函数，相当于：
- en: '[PRE22]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The callback is passed the returned data, which will be a JavaScript object
    or array as defined by the JSON structure and parsed using the `eval()` function.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 回调函数传递返回的数据，这将根据 JSON 结构定义并使用 `eval()` 函数解析为 JavaScript 对象或数组。
- en: For details on the JSON format, see [http://json.org/](http://json.org/).
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 有关 JSON 格式的详细信息，请参阅 [http://json.org/](http://json.org/)。
- en: 'Most implementations will specify a success handler:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数实现将指定一个成功处理程序：
- en: '[PRE23]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'This example, of course, relies on the structure of the JSON file:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，此示例依赖于 JSON 文件的结构：
- en: '[PRE24]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Using this structure, the example inserts the first string and second number
    from the file onto the page. If there is a syntax error in the JSON file, the
    request will usually fail silently; avoid frequent hand-editing of JSON data for
    this reason.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个结构，示例将文件的第一个字符串和第二个数字插入到页面上。如果 JSON 文件中存在语法错误，请求通常会静默失败；为此避免频繁手动编辑 JSON
    数据。
- en: $.getScript()
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: $.getScript()
- en: '| Loads a JavaScript from the server using a `GET HTTP` request, and executes
    it.'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '| 使用 `GET HTTP` 请求从服务器加载 JavaScript，并执行它。'
- en: '[PRE25]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '|'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-188
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: 'url: A string containing the URL to which the request is sent'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'url: 包含发送请求的 URL 的字符串'
- en: 'success: (optional): A function that is executed if the request succeeds'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: success:（可选）：如果请求成功，则执行的函数
- en: Return Value
  id: totrans-191
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: The `XMLHttpRequest` object that was created.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 创建的 `XMLHttpRequest` 对象。
- en: Descritpion
  id: totrans-193
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'This is a shorthand AJAX function, which is equivalent to:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简写的 AJAX 函数，相当于：
- en: '[PRE26]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The callback is passed the returned JavaScript file. This is generally not useful
    as the script will already have run at this point.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 回调函数传递返回的 JavaScript 文件。这通常是没有用的，因为此时脚本已经运行。
- en: 'The script is executed in the global context, so it can refer to other variables
    and use jQuery functions. Included scripts should have some impact on the current
    page:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本在全局上下文中执行，因此可以引用其他变量并使用 jQuery 函数。包含的脚本应该对当前页面产生一定的影响：
- en: '[PRE27]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The script can then be included and run by referencing the file name:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 然后可以通过引用文件名来包含并运行脚本：
- en: '[PRE28]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: In Safari, the script is not guaranteed to execute before the success callback
    is invoked. Practically speaking, this means that the code in the callback should
    not call functions or reference variables defined in the external script without
    at least a small delay.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Safari 中，不能保证在调用成功回调之前执行脚本。实际上，这意味着回调中的代码不应该在没有至少小延迟的情况下调用在外部脚本中定义的函数或引用变量。
- en: Global AJAX Event Handlers
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 全局 AJAX 事件处理程序
- en: These methods register handlers to be called when certain events take place
    for any AJAX request on the page.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 这些方法注册处理程序，以在页面上发生任何 AJAX 请求时调用。
- en: .ajaxComplete()
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .ajaxComplete()
- en: '| Registers a handler to be called when AJAX requests complete.'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '| 注册一个处理程序，以在 AJAX 请求完成时调用。'
- en: '[PRE29]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '|'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-208
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: 'handler: The function to be invoked'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理程序：要调用的函数
- en: Return Value
  id: totrans-210
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: The jQuery object, for chaining purposes.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 用于链式调用的 jQuery 对象。
- en: Description
  id: totrans-212
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: Whenever an AJAX request completes, jQuery triggers the `ajaxComplete` event.
    All the handlers that have been registered with the `.ajaxComplete()` method are
    executed at this time.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 每当 AJAX 请求完成时，jQuery 会触发 `ajaxComplete` 事件。所有已使用 `.ajaxComplete()` 方法注册的处理程序都在此时执行。
- en: 'To observe this method in action, we can set up a basic AJAX load request:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 要观察此方法的操作，我们可以设置一个基本的 AJAX 加载请求：
- en: '[PRE30]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'We can attach our event handler to any element:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将我们的事件处理程序附加到任何元素上：
- en: '[PRE31]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Now, we can make an AJAX request using any jQuery method:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以使用任何 jQuery 方法进行 AJAX 请求：
- en: '[PRE32]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: When the user clicks the button and the AJAX request completes, the log message
    is displayed.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户单击按钮并且 AJAX 请求完成时，日志消息会被显示。
- en: 'All `ajaxComplete` handlers are invoked, regardless of what AJAX request was
    completed. If we must differentiate between the requests, we can use the parameters
    passed to the handler. Each time an `ajaxComplete` handler is executed, it is
    passed the event object, the `XMLHttpRequest` object, and the settings object
    that was used in the creation of the request. For example, we can restrict our
    callback to only handling events dealing with a particular URL:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 所有 `ajaxComplete` 处理程序都会被调用，不管完成了什么 AJAX 请求。如果我们必须区分这些请求，我们可以使用传递给处理程序的参数。每次执行
    `ajaxComplete` 处理程序时，都会传递事件对象、`XMLHttpRequest` 对象以及用于创建请求的设置对象。例如，我们可以将回调限制为仅处理与特定
    URL 相关的事件：
- en: '[PRE33]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: .ajaxError()
  id: totrans-223
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .ajaxError()
- en: '| Registers a handler to be called when AJAX requests complete with an error.'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '| 注册一个处理程序，以在 AJAX 请求完成时带有错误时调用。'
- en: '[PRE34]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '|'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-227
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: 'handler: The function to be invoked'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理程序：要调用的函数
- en: Return Value
  id: totrans-229
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: The jQuery object, for chaining purposes.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 用于链式调用的 jQuery 对象。
- en: Description
  id: totrans-231
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: Whenever an AJAX request completes with an error, jQuery triggers the `ajaxError`
    event. All the handlers that have been registered with the `.ajaxError()` method
    are executed at this time.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 每当 AJAX 请求完成并出现错误时，jQuery 会触发 `ajaxError` 事件。所有已使用 `.ajaxError()` 方法注册的处理程序都在此时执行。
- en: 'To observe this method in action, we can set up a basic AJAX load request:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 要观察此方法的操作，我们可以设置一个基本的 AJAX 加载请求：
- en: '[PRE35]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'We can attach our event handler to any element:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将我们的事件处理程序附加到任何元素上：
- en: '[PRE36]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Now, we can make an AJAX request using any jQuery method:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以使用任何 jQuery 方法进行 AJAX 请求：
- en: '[PRE37]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: When the user clicks the button and the AJAX request fails, because the requested
    file is missing, the log message is displayed.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户单击按钮并且 AJAX 请求失败时，因为请求的文件不存在，日志消息会被显示。
- en: 'All `ajaxError` handlers are invoked, regardless of what AJAX request was completed.
    If we must differentiate between the requests, we can use the parameters passed
    to the handler. Each time an `ajaxError` handler is executed, it is passed the
    event object, the `XMLHttpRequest` object, and the settings object that was used
    in the creation of the request. If the request failed because JavaScript raised
    an exception, the exception object is passed to the handler as a fourth parameter.
    For example, we can restrict our callback to only handling events dealing with
    a particular URL:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 所有 `ajaxError` 处理程序都会被调用，不管完成了什么 AJAX 请求。如果我们必须区分这些请求，我们可以使用传递给处理程序的参数。每次执行
    `ajaxError` 处理程序时，都会传递事件对象、`XMLHttpRequest` 对象以及用于创建请求的设置对象。如果请求失败是因为 JavaScript
    引发了异常，则异常对象会作为第四个参数传递给处理程序。例如，我们可以将回调限制为仅处理与特定 URL 相关的事件：
- en: '[PRE38]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: .ajaxSend()
  id: totrans-242
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .ajaxSend()
- en: '| Registers a handler to be called when AJAX requests begins.'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '| 注册一个处理程序，以在 AJAX 请求开始时调用。'
- en: '[PRE39]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '|'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-246
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: 'handler: The function to be invoked'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理程序：要调用的函数
- en: Return Value
  id: totrans-248
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: The jQuery object, for chaining purposes.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 用于链式调用的 jQuery 对象。
- en: Description
  id: totrans-250
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: Whenever an AJAX request is about to be sent, jQuery triggers the `ajaxSend`
    event. All the handlers that have been registered with the `.ajaxSend()` method
    are executed at this instant of time.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 每当 AJAX 请求即将发送时，jQuery 会触发 `ajaxSend` 事件。所有已使用 `.ajaxSend()` 方法注册的处理程序都在此时执行。
- en: 'To observe this method in action, we can set up a basic AJAX load request:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 要观察此方法的操作，我们可以设置一个基本的 AJAX 加载请求：
- en: '[PRE40]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'We can attach our event handler to any element:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将我们的事件处理程序附加到任何元素上：
- en: '[PRE41]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Now, we can make an AJAX request using any jQuery method:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以使用任何 jQuery 方法进行 AJAX 请求：
- en: '[PRE42]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: When the user clicks the button and the AJAX request is about to begin, the
    log message is displayed.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户点击按钮并且AJAX请求即将开始时，日志消息将被显示。
- en: 'All `ajaxSend` handlers are invoked, regardless of what AJAX request is to
    be sent. If we must differentiate between the requests, we can use the parameters
    passed to the handler. Each time an `ajaxSend` handler is executed, it is passed
    the event object, the `XMLHttpRequest` object, and the settings object that was
    used in the creation of the request. For example, we can restrict our callback
    to only handling events dealing with a particular URL:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 所有的`ajaxSend`处理程序都会被调用，无论要发送什么AJAX请求。如果我们必须区分这些请求，我们可以使用传递给处理程序的参数。每次执行`ajaxSend`处理程序时，都会传递事件对象、`XMLHttpRequest`对象和在创建请求时使用的设置对象。例如，我们可以限制我们的回调只处理与特定URL相关的事件：
- en: '[PRE43]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: .ajaxStart()
  id: totrans-261
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .ajaxStart()
- en: '| Registers a handler to be called when the first AJAX request begins.'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '| 注册一个处理程序，当第一个AJAX请求开始时调用。'
- en: '[PRE44]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '|'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-265
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: 'handler: The function to be invoked'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理程序：要调用的函数
- en: Return Value
  id: totrans-267
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: The jQuery object, for chaining purposes.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 用于链接目的的jQuery对象。
- en: Description
  id: totrans-269
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: Whenever an AJAX request is about to be sent, jQuery checks whether there are
    any other outstanding AJAX requests. If none are in progress, jQuery triggers
    the `ajaxStart` event. All the handlers that have been registered with the `.ajaxStart()`
    method are executed at this instant of time.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 每当一个AJAX请求即将发送，jQuery都会检查是否还有其他尚未完成的AJAX请求。如果没有进行中的请求，jQuery就会触发`ajaxStart`事件。所有使用`.ajaxStart()`方法注册的处理程序都会在这个时间点执行。
- en: 'To observe this method in action, we can set up a basic AJAX load request:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 要观察这种方法的实际应用，我们可以设置一个基本的AJAX加载请求：
- en: '[PRE45]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'We can attach our event handler to any element:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将我们的事件处理程序附加到任何元素：
- en: '[PRE46]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Now, we can make an AJAX request using any jQuery method:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以使用任何jQuery方法进行AJAX请求：
- en: '[PRE47]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: When the user clicks the button and the AJAX request is sent, the log message
    is displayed.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户点击按钮并且AJAX请求被发送时，日志消息将会被显示。
- en: .ajaxStop()
  id: totrans-278
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .ajaxStop()
- en: '| Registers a handler to be called when all AJAX requests have completed.'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '| 注册一个处理程序，当所有AJAX请求都完成时调用。'
- en: '[PRE48]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '|'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-282
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: 'handler: The function to be invoked'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理程序：要调用的函数
- en: Return Value
  id: totrans-284
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: The jQuery object, for chaining purposes.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 用于链接目的的jQuery对象。
- en: Description
  id: totrans-286
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: Whenever an AJAX request completes, jQuery checks whether there are any other
    outstanding AJAX requests; if none are remaining, jQuery triggers the `ajaxStop`
    event. All the handlers that have been registered with the `.ajaxStop()` method
    are executed at this instant of time.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 每当一个AJAX请求完成，jQuery都会检查是否还有其他尚未完成的AJAX请求；如果没有，jQuery就会触发`ajaxStop`事件。所有使用`.ajaxStop()`方法注册的处理程序都会在这个时间点执行。
- en: 'To observe this method in action, we can set up a basic AJAX load request:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 要观察这种方法的实际应用，我们可以设置一个基本的AJAX加载请求：
- en: '[PRE49]'
  id: totrans-289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'We can attach our event handler to any element:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将我们的事件处理程序附加到任何元素：
- en: '[PRE50]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Now, we can make an AJAX request using any jQuery method:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以使用任何jQuery方法进行AJAX请求：
- en: '[PRE51]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: When the user clicks the button and the AJAX request completes, the log message
    is displayed.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户点击按钮并且AJAX请求完成时，日志消息将被显示。
- en: Note
  id: totrans-295
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Because `.ajaxStart(), .ajaxStop(), .ajaxSend(), ajaxError()`, and `.ajaxComplete()`
    are implemented as a methods rather than global functions, we can use the keyword
    `this` as we do here to refer to the selected elements within the callback function.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 因为`.ajaxStart(), .ajaxStop(), .ajaxSend(), ajaxError()`和`.ajaxComplete()`都作为方法而不是全局函数实现，我们可以像这样使用关键字`this`来引用回调函数中的选定元素。
- en: .ajaxSuccess()
  id: totrans-297
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .ajaxSuccess()
- en: '| Registers a handler to be called when AJAX requests are successfully completed.'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: '| 注册一个处理程序，当AJAX请求成功完成时调用。'
- en: '[PRE52]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '|'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-301
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: 'handler: The function to be invoked'
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理程序：要调用的函数
- en: Return Value
  id: totrans-303
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: The jQuery object, for chaining purposes.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 用于链接目的的jQuery对象。
- en: Description
  id: totrans-305
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: Whenever an AJAX request is successfully completed, jQuery triggers the `ajaxSuccess`
    event. All the handlers that have been registered with the `.ajaxSuccess()` method
    are executed at this instant of time.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 每当一个AJAX请求成功完成，jQuery就会触发`ajaxSuccess`事件。所有使用`.ajaxSuccess()`方法注册的处理程序都会在这个时间点执行。
- en: 'To observe this method in action, we can set up a basic AJAX load request:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 要观察这种方法的实际应用，我们可以设置一个基本的AJAX加载请求：
- en: '[PRE53]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'We can attach our event handler to any element:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将我们的事件处理程序附加到任何元素：
- en: '[PRE54]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Now, we can make an AJAX request using any jQuery method:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以使用任何jQuery方法进行AJAX请求：
- en: '[PRE55]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: When the user clicks the button and the AJAX request successfully completes,
    the log message is displayed.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户单击按钮并且 AJAX 请求成功完成时，将显示日志消息。
- en: Tip
  id: totrans-314
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Because `.ajaxSuccess()` is implemented as a method rather than a global function,
    we can use the `this` keyword as we do here to refer to the selected elements
    within the callback function.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 因为 `.ajaxSuccess()` 被实现为方法而不是全局函数，所以我们可以像这样使用 `this` 关键字来在回调函数中引用所选元素。
- en: 'All `ajaxSuccess` handlers are invoked, regardless of what AJAX request was
    completed. If we must differentiate between the requests, we can use the parameters
    passed to the handler. Each time an `ajaxSuccess` handler is executed, it is passed
    the event object, the `XMLHttpRequest` object, and the settings object that was
    used in the creation of the request. For example, we can restrict our callback
    only to handling events dealing with a particular URL:'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 所有的 `ajaxSuccess` 处理程序都会被调用，无论完成了什么 AJAX 请求。如果我们必须区分这些请求，我们可以使用传递给处理程序的参数。每次执行
    `ajaxSuccess` 处理程序时，它都会传递事件对象、`XMLHttpRequest` 对象和用于创建请求的设置对象。例如，我们可以将我们的回调限制为仅处理涉及特定
    URL 的事件：
- en: '[PRE56]'
  id: totrans-317
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Helper Function
  id: totrans-318
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 辅助函数
- en: This function assists with common idioms encountered when performing AJAX tasks.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数协助执行 AJAX 任务时遇到的常见习语。
- en: .serialize()
  id: totrans-320
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`.serialize()`'
- en: '| Encodes a set of form elements as a string for submission.'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: '| 将一组表单元素编码为提交字符串。'
- en: '[PRE57]'
  id: totrans-322
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '|'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-324
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: None.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 无。
- en: Return Value
  id: totrans-326
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: A string containing the serialized representation of the elements.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 包含元素序列化表示的字符串。
- en: Description
  id: totrans-328
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `.serialize()` method creates a text string in standard URL-encoded notation.
    It operates on a jQuery object representing a set of form elements. The form elements
    can be of several types:'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '`.serialize()` 方法使用标准的 URL 编码表示法创建一个文本字符串。它在表示一组表单元素的 jQuery 对象上操作。表单元素可以是几种类型：'
- en: '[PRE58]'
  id: totrans-330
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'We can serialize all of these element types after selecting them:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在选择它们之后对所有这些元素类型进行序列化：
- en: '[PRE59]'
  id: totrans-332
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'This produces a standard-looking query string:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 这将生成一个标准的查询字符串。
- en: '[PRE60]'
  id: totrans-334
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: The string is close to, but not exactly the same as, the one that would be produced
    by the browser during a normal form submission. The `.submit()` method uses the
    `.name` and `.value` properties of each element to create the string, so in cases
    where these properties do not reflect the actual form values, the string can be
    incorrect. For example, the checkbox in the example above always has a `.value`
    of `8`, whether or not the box is checked.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 该字符串接近于，但不完全相同于，在正常表单提交期间浏览器将生成的字符串。`.submit()` 方法使用每个元素的 `.name` 和 `.value`
    属性来创建字符串，因此在这些属性不反映实际表单值的情况下，字符串可能不正确。例如，上面的示例中的复选框始终具有 `.value` 为 `8` 的值，无论框是否被选中。
- en: For a more robust solution, the *form* plug-in is available. Its methods provide
    an encoding that matches the one provided by a browser.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 为了得到更健壮的解决方案，*form* 插件是可用的。它的方法提供了与浏览器提供的相匹配的编码。
