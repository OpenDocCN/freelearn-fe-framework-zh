["```js\ngit clone https://github.com/PacktPublishing/ReasonML-Quick-Start-Guide.git\ncd ReasonML-Quick-Start-Guide\ncd Chapter08/app-start\nnpm install\n```", "```js\nnpm install --save-dev @glennsl/bs-jest\n```", "```js\n\"bs-dev-dependencies\": [\"@glennsl/bs-jest\"]\n```", "```js\ncd Chapter08/app-start\nmkdir __tests__\n```", "```js\n/* bsconfig.json */\n...\n\"sources\": [\n  {\n    \"dir\": \"src\",\n    \"subdirs\": true\n  },\n  {\n    \"dir\": \"__tests__\",\n    \"type\": \"dev\"\n  }\n],\n...\n```", "```js\n/* package.json */\n\"test\": \"jest\"\n```", "```js\n/* __tests__/First_test.re */\nopen Jest;\n\ndescribe(\"Expect\", () =>\n  Expect.(test(\"toBe\", () =>\n            expect(1 + 2) |> toBe(3)\n          ))\n);\n```", "```js\n FAIL lib/es6/__tests__/First_test.bs.js\n  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    This usually means that you are trying to import a file which Jest\n    cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform\n    your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can\n       specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in\n       your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets)\n       you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the\n    docs:\n    https://jestjs.io/docs/en/configuration.html\n\n    Details:\n\n    .../lib/es6/__tests__/First_test.bs.js:3\n    import * as Jest from \"@glennsl/bs-jest/lib/es6/src/jest.js\";\n           ^\n\n    SyntaxError: Unexpected token *\n\n      at ScriptTransformer._transformAndBuildScript (node_modules/jest-\n      runtime/build/script_transformer.js:403:17)\n\nTest Suites: 1 failed, 1 total\nTests: 0 total\nSnapshots: 0 total\nTime: 1.43s\nRan all test suites.\nnpm ERR! Test failed. See above for more details.\n```", "```js\n/* bsconfig.json */\n...\n\"package-specs\": [\n  {\n    \"module\": \"es6\"\n  }\n],\n...\n```", "```js\n/* bsconfig.json */\n...\n\"package-specs\": [\n  {\n    \"module\": \"commonjs\"\n  }\n],\n...\n```", "```js\n/* webpack.config.js */\n...\nentry: \"./lib/js/src/Index.bs.js\", /* changed es6 to js */\n...\n```", "```js\n PASS lib/js/__tests__/First_test.bs.js\n  Expect\n    ✓ toBe (4ms)\n\nTest Suites: 1 passed, 1 total\nTests: 1 passed, 1 total\nSnapshots: 0 total\nTime: 1.322s\nRan all test suites.\n```", "```js\nnpm install babel-core@6.26.3 babel-jest@23.6.0 babel-preset-env@1.7.0\n```", "```js\n/* .babelrc */\n{\n  \"presets\": [\"env\"]\n}\n```", "```js\n/* package.json */\n...\n\"jest\": {\n \"transformIgnorePatterns\": [\n \"/node_modules/(?!@glennsl|bs-platform|bs-css|reason-react)\"\n ]\n}\n```", "```js\n PASS lib/es6/__tests__/First_test.bs.js\n  Expect\n    ✓ toBe (7ms)\n\nTest Suites: 1 passed, 1 total\nTests: 1 passed, 1 total\nSnapshots: 0 total\nTime: 1.041s\nRan all test suites.\n```", "```js\nlet getCustomer = customers => {\n  let id = getId(pathname);\n  customers |> Js.Array.find(customer => customer.CustomerType.id == id);\n};\n```", "```js\nlet getCustomerById = (customers, id) => {\n customers |> Js.Array.find(customer => customer.CustomerType.id == id);\n};\n```", "```js\nopen Jest;\n\ndescribe(\"Customer\", () =>\n  Expect.(\n    test(\"can create a customer\", () => {\n      let customers: array(CustomerType.t) = [|\n        {\n          id: 1,\n          name: \"Irita Camsey\",\n          address: {\n            street: \"69 Ryan Parkway\",\n            city: \"Kansas City\",\n            state: \"MO\",\n            zip: \"00494\",\n          },\n          phone: \"8169271752\",\n          email: \"icamsey0@over-blog.com\",\n        },\n        {\n          id: 2,\n          name: \"Luise Grayson\",\n          address: {\n            street: \"2756 Gale Trail\",\n            city: \"Jacksonville\",\n            state: \"FL\",\n            zip: \"23566\",\n          },\n          phone: \"9044985243\",\n          email: \"lgrayson1@netlog.com\",\n        },\n        {\n          id: 3,\n          name: \"Derick Whitelaw\",\n          address: {\n            street: \"45 Southridge Par\",\n            city: \"Lexington\",\n            state: \"KY\",\n            zip: \"08037\",\n          },\n          phone: \"4079634850\",\n          email: \"dwhitelaw2@fema.gov\",\n        },\n      |];\n      let customer: CustomerType.t =\n        Customer.getCustomerById(customers, 2) |> Belt.Option.getExn;\n      expect((customer.id, customer.name)) |> toEqual((2, \"Luise \n       Grayson\"));\n    })\n  )\n);\n```", "```js\n FAIL lib/es6/__tests__/Customers_test.bs.js\n  ● Test suite failed to run\n\n    Error: No message was provided\n\nTest Suites: 1 failed, 1 total\nTests: 0 total\nSnapshots: 0 total\nTime: 1.711s\nRan all test suites.\n```", "```js\n/* Customer.re */\nlet customers = DataBsJson.(parse(getItem(\"customers\"))); /* this is the problem */\n```", "```js\n/* Customer.re */\nlet getCustomers = () => DataBsJson.(parse(getItem(\"customers\")));\n```", "```js\n/* Customer.re */\n...\ntype state = {\n  mode,\n  customer: CustomerType.t,\n  customers: array(CustomerType.t),\n};\n\n...\n\nlet getCustomers = () => DataBsJson.(parse(getItem(\"customers\")));\n\nlet getCustomerById = (customers, id) => {\n customers |> Js.Array.find(customer => customer.CustomerType.id == id);\n};\n\n...\n\ninitialState: () => {\n  let mode = Js.String.includes(\"create\", pathname) ? Create : Update;\n  let customers = getCustomers();\n  {\n    mode,\n    customer:\n      switch (mode) {\n      | Create => getDefault(customers)\n      | Update =>\n        Belt.Option.getWithDefault(\n          getCustomerById(customers, getId(pathname)),\n          getDefault(customers),\n        )\n      },\n    customers,\n  };\n},\n\n...\n\n/* within the reducer */\nReasonReact.UpdateWithSideEffects(\n  {\n    ...state,\n    customer: {\n      id: state.customer.id,\n      name: getInputValue(\"input[name=name]\"),\n      address: {\n        street: getInputValue(\"input[name=street]\"),\n        city: getInputValue(\"input[name=city]\"),\n        state: getInputValue(\"input[name=state]\"),\n        zip: getInputValue(\"input[name=zip]\"),\n      },\n      phone: getInputValue(\"input[name=phone]\"),\n      email: getInputValue(\"input[name=email]\"),\n    },\n  },\n  self => {\n    let customers =\n      switch (self.state.mode) {\n      | Create =>\n        Belt.Array.concat(state.customers, [|self.state.customer|])\n      | Update =>\n        Belt.Array.setExn(\n          state.customers,\n          Js.Array.findIndex(\n            customer =>\n              customer.CustomerType.id == self.state.customer.id,\n            state.customers,\n          ),\n          self.state.customer,\n        );\n        state.customers;\n      };\n\n    let json = customers->DataBsJson.toJson;\n    DataBsJson.setItem(\"customers\", json);\n  },\n);\n```", "```js\n PASS lib/es6/__tests__/Customers_test.bs.js\n  Customer\n    ✓ can create a customer (5ms)\n\nTest Suites: 1 passed, 1 total\nTests: 1 passed, 1 total\nSnapshots: 0 total\nTime: 1.179s\nRan all test suites.\n```", "```js\nWe've found a bug for you!\n/__tests__/Customers_test.re 45:9-28\n\n43  |];\n44  let customer: CustomerType.t =\n45  Customer.getCustomer(customers, 2) |> Belt.Option.getExn;\n46  expect((customer.id, customer.name)) |> toEqual((2, \"Luise Grayson\")\n      );\n47  })\n\nThe value getCustomer can't be found in Customer\n\nHint: Did you mean getCustomers?\n```"]