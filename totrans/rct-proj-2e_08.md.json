["```js\nyarn global add expo-cli\n```", "```js\nnpm install -g expo-cli\n```", "```js\nexpo init chapter-8\n```", "```js\ncd chapter-8\nyarn start\n```", "```js\nchapter-8 \n  |- node_modules \n  |- assets\n  |- package.json \n  |- App.js\n  |- app.json \n  |- babel.config.js  \n\n```", "```js\nyarn add @react-navigation/native\n```", "```js\nexpo install react-native-screens react-native-safe-area-context\n```", "```js\n    yarn add @react-navigation/native-stack@react-navigation/elements\n    ```", "```js\n      import { StatusBar } from 'expo-status-bar';\n      import React from 'react';\n      import { StyleSheet, Text, View } from \n        'react-native';\n    + import { NavigationContainer } \n        from '@react-navigation/native';\n    + import { createNativeStackNavigator } \n        from '@react-navigation/native-stack';\n    + const Stack = createNativeStackNavigator();\n      export default function App() {\n        // ...\n    ```", "```js\n    import React from 'react';\n    import { StyleSheet, Text, View } from 'react-native';\n    export default function Home() {\n      return (\n        <View style={styles.container}>\n          <Text>Home screen</Text>\n        </View>\n      );\n    }\n    const styles = StyleSheet.create({\n      container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n    });\n    ```", "```js\n      import { StatusBar } from 'expo-status-bar';\n      import React from 'react';\n    - import { StyleSheet, Text, View } from \n        'react-native';\n    + import { StyleSheet } from 'react-native';\n      import { NavigationContainer } \n        from '@react-navigation/native';\n      import { createNativeStackNavigator } \n        from '@react-navigation/native-stack';\n    + import Home from './screens/Home';\n    const Stack = createNativeStackNavigator();\n    export default function App() {\n      export default function App() {\n        return (\n    -     <View style={styles.container}>\n    -       <Text>Open up App.js to start working on your \n              app!</Text>\n    +     <NavigationContainer>\n                  <StatusBar style='auto' />\n    +       <Stack.Navigator>\n    +         <Stack.Screen name='Home' component={Home} \n              />\n    +       </Stack.Navigator>\n    +     </NavigationContainer>\n    -     </View>\n        );\n      }\n      // ...\n    ```", "```js\n    import React from 'react';\n    import { StyleSheet, Text, View } from 'react-native';\n    export default function Game() {\n      return (\n        <View style={styles.container}>\n          <Text>Game screen</Text>\n        </View>\n      );\n    }\n    const styles = StyleSheet.create({\n      container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n    });\n    ```", "```js\n      import { StatusBar } from 'expo-status-bar';\n      import React from 'react';\n      import { StyleSheet } from 'react-native';\n      import { NavigationContainer } \n        from '@react-navigation/native';\n      import { createNativeStackNavigator } \n        from '@react-navigation/native-stack';\n      import Home from './screens/Home';\n    + import Game from './screens/Game';\n      const Stack = createNativeStackNavigator();\n      export default function App() {\n        return (\n          <NavigationContainer>\n            <StatusBar style='auto' />\n    -       <Stack.Navigator>\n    +       <Stack.Navigator initialRouteName='Home'>\n              <Stack.Screen name='Home' component={Home} \n              />\n    +         <Stack.Screen name='Game' component={Game} \n              />\n            </Stack.Navigator>\n          </NavigationContainer>\n        );\n      }\n      // ...\n    ```", "```js\n      import React from 'react';\n    - import { StyleSheet, Text, View } from \n        'react-native';\n    + import { StyleSheet, View, Button } from \n        'react-native';\n    + import { useNavigation } from \n        '@react-navigation/native';\n      export default function Home() {\n    +   const navigation = useNavigation();\n        return (\n          <View style={styles.container}>\n    -       <Text>Home screen</Text>\n    +       <Button onPress={() => navigation.navigate(\n              'Game')} title='Start game!' />\n          </View>\n        );\n      }\n      // ...\n    ```", "```js\n    - import React from 'react';\n    - import { StyleSheet, Text, View } from \n        'react-native';\n    + import React, { useEffect, useState } from 'react';\n    + import { Button, StyleSheet, Text, View, Alert }\n        from 'react-native';\n    + import { useNavigation } from \n        '@react-navigation/native';\n      export default function Game() {\n    +   const baseNumber = Math.floor(Math.random() *\n          100);\n    +   const score = Math.floor(Math.random() * 100);\n    +   const [choice, setChoice] = useState('');\n\n        return (\n          <View style={styles.container}>\n          // ...\n    ```", "```js\n        // ...\n        return (\n          <View style={styles.container}>\n    -       <Text>Game screen</Text>\n    +       <Text>Starting: {baseNumber}</Text>\n    +       <Button onPress={() => setChoice('higher')} \n              title='Higher' />\n    +       <Button onPress={() => setChoice('lower')}\n              title='Lower' />\n          </View>\n        );\n      }\n      const styles = StyleSheet.create({\n        // ...\n    ```", "```js\n      // ...\n    + const navigation = useNavigation();\n    + useEffect(() => {\n    +   if (choice) {\n    +     const winner =\n    +       (choice === 'higher' && score > baseNumber) ||\n    +       (choice === 'lower' && baseNumber > score);\n    +     Alert.alert(`You've ${winner ? 'won' : 'lost'}`,\n            `You scored: ${score}`);\n    +     navigation.goBack();\n    +   }\n    + }, [baseNumber, score, choice]);\n      return (\n        <View style={styles.container}>\n        // ...\n    ```", "```js\n      import React from 'react';\n    - import { StyleSheet, View, Button } from \n        'react-native';\n    + import { StyleSheet, Text, View, TouchableHighlight\n        } from 'react-native';\n      import { useNavigation } from \n        '@react-navigation/native';\n      export default function Home() {\n        const navigation = useNavigation();\n\n        return (\n          <View style={styles.container}>\n    -       <Button onPress={() => navigation.navigate(\n              'Game')} title='Start game!' />\n    +       <TouchableHighlight\n    +         onPress={() => navigation.navigate('Game')}\n    +         style={styles.button}\n    +       >\n    +         <Text style={styles.buttonText}>\n                Start game!</Text>\n    +       </TouchableHighlight>\n          </View>\n        );\n      }\n      // ...\n    ```", "```js\n      // ...\n      const styles = StyleSheet.create({\n        container: {\n          flex: 1,\n          backgroundColor: '#fff',\n          alignItems: 'center',\n          justifyContent: 'center',\n        },\n    +   button: {\n    +     width: 300,\n    +     height: 300,\n    +     display: 'flex',\n    +     alignItems: 'center',\n    +     justifyContent: 'space-around',\n    +     borderRadius: 150,\n    +     backgroundColor: 'purple',\n    +   },\n    +   buttonText: {\n    +     color: 'white',\n    +     fontSize: 48,\n    +   },\n      });\n    ```", "```js\n      import React, { useEffect, useState } from 'react';\n      import {\n    -   Button,\n        StyleSheet,\n        Text,\n        View,\n        Alert,\n    +   TouchableHighlight,\n      } from 'react-native';\n        import { useNavigation } from \n          '@react-navigation/native';\n      export default function Game() {\n        // ...\n        return (\n          <View style={styles.container}>\n    -       <Text>Starting: {baseNumber}</Text>\n    -       <Button onPress={() => setChoice('higher')}\n    title='Higher' /> \n    -       <Button onPress={() => setChoice('lower')}\n              title='Lower' />\n    +       <Text style={styles.baseNumber}>\n              Starting: {baseNumber}</Text>\n    +       <TouchableHighlight onPress={() =>\n              setChoice('higher')} style={styles.button}>\n    +         <Text style={styles.buttonText}>Higher\n              </Text>\n    +       </TouchableHighlight>\n    +       <TouchableHighlight onPress={() =>\n                setChoice('lower')} style={styles.button}>\n    +         <Text style={styles.buttonText}>Lower</Text>\n    +       </TouchableHighlight>\n          </View>\n        );\n      }\n      // ...\n    ```", "```js\n      // ...\n      const styles = StyleSheet.create({\n        container: {\n          flex: 1,\n          backgroundColor: '#fff',\n          alignItems: 'center',\n          justifyContent: 'center',\n        },\n    +   baseNumber: {\n    +     fontSize: 48,\n    +     marginBottom: 30,\n    +   },\n    +   button: {\n    +     display: 'flex',\n    +     alignItems: 'center',\n    +     justifyContent: 'space-around',\n    +     borderRadius: 15,\n    +     padding: 30,\n    +     marginVertical: 15,\n    +   },\n    +   buttonText: {\n    +     color: 'white',\n    +     fontSize: 24,\n    +   },\n      });\n    ```", "```js\n      // ...\n      return (\n        <View style={styles.container}>\n          <Text style={styles.baseNumber}>\n            Starting: {baseNumber}</Text>\n          <TouchableHighlight\n            onPress={() => setChoice('higher')}\n    -       style={styles.button}\n    +       style={[styles.button, styles.buttonGreen]}\n          >\n            <Text style={styles.buttonText}>Higher</Text>\n          </TouchableHighlight>\n          <TouchableHighlight\n            onPress={() => setChoice('lower')}\n    -       style={styles.button}\n    +       style={[styles.button, styles.buttonRed]}\n          >\n            <Text style={styles.buttonText}>Lower</Text>\n          </TouchableHighlight>\n        </View>\n      );\n      // ...\n    ```", "```js\n      // ...\n      const styles = StyleSheet.create({\n        // ...\n    +   buttonRed: {\n    +     backgroundColor: 'red',\n    +   },\n    +   buttonGreen: {\n    +     backgroundColor: 'green',\n    +   },\n        buttonText: {\n          color: 'white',\n          fontSize: 24,\n        },\n      });\n    ```", "```js\n    import React from 'react';\n    import { StyleSheet, Text, TouchableHighlight } \n      from 'react-native';\n    export default function AnimatedButton({ action, \n      onPress }) {\n            return (\n        <TouchableHighlight\n          onPress={onPress}\n          style={[\n            styles.button,\n            action === 'higher' ? styles.buttonGreen :\n              styles.buttonRed,\n          ]}\n        >\n          <Text style={styles.buttonText}>{action}</Text>\n        </TouchableHighlight>\n      );\n    }\n    ```", "```js\n    // ...\n    const styles = StyleSheet.create({\n      button: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n        borderRadius: 15,\n        padding: 30,\n        marginVertical: 15,\n      },\n      buttonRed: {\n        backgroundColor: 'red',\n      },\n      buttonGreen: {\n        backgroundColor: 'green',\n      },\n      buttonText: {\n        color: 'white',\n        fontSize: 24,\n        textTransform: 'capitalize',\n      },\n    });\n    ```", "```js\n      import React, { useEffect, useState } from 'react';\n      import {\n        StyleSheet,\n        Text,\n        View,\n        Alert,\n    -   TouchableHighlight,\n      } from 'react-native';\n      import { useNavigation } from \n        '@react-navigation/native';\n    + import AnimatedButton from \n        '../components/AnimatedButton';\n\n      export default function Game() {\n        // ...\n        return (\n          <View style={styles.container}>\n            <Text style={styles.baseNumber}>\n              Starting: {baseNumber}</Text>\n    -       <TouchableHighlight onPress={() =>\n              setChoice('higher')} style={[styles.button,\n                styles.buttonGreen]}>\n    -         <Text style={styles.buttonText}>Higher\n              </Text>\n    -       </TouchableHighlight>\n    -       <TouchableHighlight onPress={() =>\n              setChoice('lower')} style={[styles.button,\n                styles.buttonRed]}>\n    -         <Text style={styles.buttonText}>Lower</Text>\n    -       </TouchableHighlight>\n    +       <AnimatedButton action='higher' onPress={() =>\n              setChoice('higher')} />\n    +       <AnimatedButton action='lower' onPress={() =>\n              setChoice('lower')} />\n          </View>\n        );\n      }\n      // ...\n    ```", "```js\n      import React from 'react';\n      import {\n        StyleSheet,\n        Text,\n    -   TouchableHighlight,\n    +   TouchableWithoutFeedback,\n    +   View\n      } from 'react-native';\n        export default function AnimatedButton({ action, \n          onPress }) {\n        return (\n    -     <TouchableHighlight onPress={onPress} style={[ \n    styles.button, action === 'higher' ? \n            styles.buttonGreen : styles.buttonRed ]}>\n    +     <TouchableWithoutFeedback onPress={onPress}>\n    +       <View style={[ styles.button, action === 'higher' \n              ? styles.buttonGreen : styles.buttonRed ]}>\n              <Text style={styles.buttonText}>{action}</Text>\n    -     </TouchableHighlight>\n    +       </View>\n    +     </TouchableWithoutFeedback>\n        );\n      }\n      // ...\n    ```", "```js\n    - import React from 'react';\n    + import React, { useRef } from 'react';\n      import {\n        StyleSheet,\n        Text,\n        TouchableWithoutFeedback,\n    -   View,\n    +   Animated,\n      } from 'react-native';\n      export default function AnimatedButton({ action,\n        onPress }) {\n    +   const opacity = useRef(new Animated.Value(1));\n\n        return (\n          //  ...\n    ```", "```js\n      // ...\n      export default function AnimatedButton({ action,\n        onPress }) {\n        const opacity = useRef(new Animated.Value(1));\n\n        return (\n          <TouchableWithoutFeedback\n    -       onPress={onPress}   \n    +       onPress={() => {\n    +         Animated.timing(opacity.current, {\n    +           toValue: 0.2,\n    +           duration: 800,\n    +           useNativeDriver: true,\n    +         }).start(() => onPress());\n    +       }}\n          >\n          // ...\n    ```", "```js\n            // ...\n    -       <View\n    +       <Animated.View\n              style={[\n                styles.button,\n                action === 'higher' ? styles.buttonGreen :\n                  styles.buttonRed,\n    +           { opacity: opacity.current },\n              ]}\n            >\n              <Text style={styles.buttonText}>{action}\n              </Text>\n    -       </View>\n    +       </Animated.View>\n          </TouchableWithoutFeedback>\n        );\n      }\n      // ...\n    ```", "```js\n  import React, { useRef } from 'react';\n  import {\n    StyleSheet,\n    Text,\n    TouchableWithoutFeedback,\n    Animated,\n+   Easing,\n  } from 'react-native';\nexport default function AnimatedButton({ action, onPress }) {\n  const opacity = useRef(new Animated.Value(1));\n  return (\n    <TouchableWithoutFeedback\n      onPress={() => {\n        Animated.timing(opacity.current, {\n          toValue: 0.2,\n          duration: 400,\n          useNativeDriver: true,\n+         easing: Easing.linear(),      \n        }).start(() => onPress());\n      }}\n    >\n    // ...\n```", "```js\n    expo install react-native-gesture-handler\n    ```", "```js\n      import React from 'react';\n      import {\n        StyleSheet,\n            Text,  View,\n    +   Alert,\n    -   TouchableHighlight,\n      } from 'react-native';\n      import { useNavigation } from \n        '@react-navigation/native';\n    + import { TapGestureHandler, State } from \n        'react-native-gesture-handler';\n      export default function Home() {\n        // ...\n    ```", "```js\n      // ...\n      export default function Home() {\n        const navigation = useNavigation();\n    +   function onTap(e) {\n    +     if (e.nativeEvent.state === State.ACTIVE) {\n    +       Alert.alert('Long press to start the game');\n    +     }\n    +   }\n        return (\n          <View style={styles.container}>\n    -       <TouchableHighlight\n    -         onPress={() => navigation.navigate('Game')}\n    -         style={styles.button}\n    -       >\n    +      <TapGestureHandler onHandlerStateChange={onTap}>\n    +        <View style={styles.button}> <Text \n               style={styles.buttonText}>Start game!</Text>\n    +        </View>\n    -      </TouchableHighlight>\n    +      </TapGestureHandler>\n          </View>\n        );\n      }\n      // ...\n    ```", "```js\n      import React  from 'react';\n    import { StyleSheet, Text, View, Alert } \n    from 'react-native'; \n    import { useNavigation } \n    from '@react-navigation/native'; \n    import { \n    +   LongPressGestureHandler, \n    TapGestureHandler, \n    State, \n      } from 'react-native-gesture-handler';\n      export default function Home() {\n        const navigation = useNavigation();\n    +   function onLongPress(e) {\n    +     if (e.nativeEvent.state === State.ACTIVE) {\n    +       navigation.navigate('Game');\n    +     }\n    +   }\n        // ...\n    ```", "```js\n      // ...  \n      export default function Home() {\n        // ...\n        return (\n          <View style={styles.container}>\n            <TapGestureHandler \n              onHandlerStateChange={onSingleTap} \n            >\n    +         <LongPressGestureHandler+ \n                onHandlerStateChange={onLongPress}\n    +           minDurationMs={600}\n    +         >\n                <View style={styles.button}>\n                  <Text style={styles.buttonText}>\n                    Start game!</Text>\n                </View>\n    +         </LongPressGestureHandler>\n            </TapGestureHandler>\n          </View>\n        );\n      }\n      // ...\n    ```", "```js\n    yarn add lottie-react-native\n    ```", "```js\n    import React from 'react';\n    import { StyleSheet, Text, View } from 'react-native';\n    export default function Result() {\n      return (\n        <View style={styles.container}>\n          <Text></Text>\n        </View>\n      );\n    }\n    const styles = StyleSheet.create({\n      container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n    });\n    ```", "```js\n      import { StatusBar } from 'expo-status-bar';\n      import React from 'react';\n      import { StyleSheet } from 'react-native';\n      import { NavigationContainer } \n        from '@react-navigation/native';\n      import { createNativeStackNavigator } \n        from '@react-navigation/native-stack';\n    + import { HeaderBackButton } \n        from '@react-navigation/elements';\n      import Home from './screens/Home';\n      import Game from './screens/Game';\n    + import Result from './screens/Result';\n      // ...\n    ```", "```js\n      // ...\n      export default function App() {\n        return (\n          <NavigationContainer>\n            <StatusBar style='auto' />\n            <Stack.Navigator initialRouteName='Home'>\n              <Stack.Screen name='Home' component={Home} />\n              <Stack.Screen name='Game' component={Game} />\n    +         <Stack.Screen\n    +           name='Result'\n    +           component={Result}\n    +           options={({ navigation }) => ({\n    +             headerLeft: (props) => (\n    +               <HeaderBackButton\n    +                 {...props}\n    +                 label='Home'\n    +                 onPress={() =>\n                        navigation.navigate('Home')}\n    +               />\n    +             ),\n    +           })}\n    +         />\n          </Stack.Navigator>\n        </NavigationContainer>\n      );\n      // ...\n    ```", "```js\n      // ...\n      export default function Game() {\n        // ...\n        useEffect(() => {\n          if (choice.length) {\n            const winner = (choice === 'higher' && score >\n              baseNumber) || (choice === 'lower' && \n                baseNumber > score);\n    -       Alert.alert(`You've ${winner ? 'won' : \n              'lost'}`, `You scored: ${score}`);\n    -       navigation.goBack();\n    +       navigation.navigate('Result', { winner })\n        }\n      }, [baseNumber, score, choice]);\n      return (\n      // ...\n    ```", "```js\n      import React from 'react';\n      import { StyleSheet, Text, View } from \n        'react-native';\n    + import LottieView from 'lottie-react-native';\n    + import { useRoute } from '@react-navigation/native';\n      export default function Result() {\n    +   const route = useRoute();\n    +   const { winner } = route.params;\n        return (\n          <View style={styles.container}>\n    +       <Text>You've {winner ? 'won' : 'lost'}</Text>\n          // ...\n    ```", "```js\n      // ...\n      export default function Result() {\n        const route = useRoute();\n        const { winner } = route.params;\n        return (\n          <View style={styles.container}>\n            <Text>You've {winner ? 'won' : 'lost'}</Text>\n    +       {winner && (\n    +         <LottieView\n    +           autoPlay\n    +           style={{\n    +             width: 300,\n    +             height: 300,\n    +           }}\n    +           source={require('../assets/winner.json')}\n    +         />\n    +       )}\n          </View>\n        );\n      }\n      // ...\n    ```", "```js\n        // ...  \n        return (\n          <View style={styles.container}>\n    -       <Text>You've {winner ? 'won' : 'lost'}</Text>\n    +       <Text style={styles.message}>\n              You've {winner ? 'won' : 'lost'}</Text>\n            // ...\n      const styles = StyleSheet.create({\n        // ...\n    +   message: {\n    +     fontSize: 48,\n    +   },\n      });\n    ```"]