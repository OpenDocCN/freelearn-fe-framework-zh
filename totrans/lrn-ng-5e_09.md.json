["```js\n<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>MyApp</title>\n  **<base href=\"/\">**\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body>\n  <app-root></app-root>\n</body>\n</html> \n```", "```js\nimport { ApplicationConfig, provideZoneChangeDetection } from '@angular/core';\n**import { provideRouter } from '@angular/router';**\n**import { routes } from './app.routes';**\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    **provideRouter(routes)**\n  ]\n}; \n```", "```js\nconst routes: Routes = [ \n  { path: 'products', component: ProductListComponent }, \n  { path: '**', component: PageNotFoundComponent } \n]; \n```", "```js\n    ng generate component cart \n    ```", "```js\n    import { CartComponent } from './cart/cart.component';\n    import { ProductListComponent } from './product-list/product-list.component'; \n    ```", "```js\n    export const routes: Routes = [\n      **{ path: 'products', component: ProductListComponent },**\n      **{ path: 'cart', component: CartComponent }**\n    ]; \n    ```", "```js\n    <header>\n      <h2>{{ settings.title }}</h2>\n      <span class=\"spacer\"></span>\n      <div class=\"menu-links\">\n        <a routerLink=\"/products\">Products</a>\n        <a routerLink=\"/cart\">My Cart</a>\n      </div>\n      <app-auth></app-auth>\n    </header> \n    ```", "```js\n    <main class=\"main\">\n      <div class=\"content\">\n        <router-outlet />\n      </div>\n    </main> \n    ```", "```js\n    import { Component, inject } from '@angular/core';\n    import { **RouterLink**, RouterOutlet } from '@angular/router';\n    import { CopyrightDirective } from './copyright.directive';\n    import { APP_SETTINGS } from './app.settings';\n    import { AuthComponent } from './auth/auth.component';\n    @Component({\n      selector: 'app-root',\n      imports: [\n        RouterOutlet,\n        **RouterLink**,\n        CopyrightDirective,\n        AuthComponent\n      ],\n      templateUrl: './app.component.html',\n      styleUrl: './app.component.css'\n    }) \n    ```", "```js\n    header {\n      display: flex;\n      flex-direction: row;\n      gap: 0.73rem;\n      justify-content: end;\n      margin-top: 1.5rem;\n    }\n    .menu-links {\n      display: flex;\n      align-items: center;\n      gap: 0.73rem;\n    }\n    .menu-links a {\n      transition: fill 0.3s ease;\n      color: var(--gray-400);\n    }\n    .menu-links a:hover {\n      color: var(--gray-900);\n    } \n    ```", "```js\n    a {\n      text-decoration: none;\n    }\n    .spacer {\n      flex: 1 1 auto;\n    } \n    ```", "```js\n    import { ProductCreateComponent } from './product-create/product-create.component'; \n    ```", "```js\n    { path: 'products/new', component: ProductCreateComponent } \n    ```", "```js\n@if (products) {\n  **<div class=\"caption\">**\n    **<h1>Products ({{products.length}})</h1>**\n    **<a routerLink=\"new\">**\n      **<svg**\n        **width=\"24\"**\n        **height=\"24\"**\n\n        **fill-rule=\"evenodd\"**\n        **clip-rule=\"evenodd\">**\n        **<path d=\"M11.5 0c6.347 0 11.5 5.153 11.5 11.5s-5.153 11.5-11.5 11.5-11.5-5.153-11.5-11.5 5.153-11.5 11.5-11.5zm0 1c5.795 0 10.5 4.705 10.5 10.5s-4.705 10.5-10.5 10.5-10.5-4.705-10.5-10.5 4.705-10.5 10.5-10.5zm.5 10h6v1h-6v6h-1v-6h-6v-1h6v-6h1v6z\"/>**\n      **</svg>**\n    **</a>**\n  **</div>**\n} \n```", "```js\n    .caption {\n      display: flex;\n      align-items: center;\n      gap: 1.25rem;\n    }\n    path {\n      transition: fill 0.3s ease;\n      fill: var(--gray-400);\n    }\n    a:hover svg path {\n      fill: var(--gray-900);\n    } \n    ```", "```js\n    import { RouterLink } from '@angular/router'; \n    ```", "```js\n    @Component({\n      selector: 'app-product-list',\n      imports: [\n        ProductDetailComponent,\n        SortPipe,\n        AsyncPipe,\n        **RouterLink**\n      ],\n      templateUrl: './product-list.component.html',\n      styleUrl: './product-list.component.css'\n    }) \n    ```", "```js\n    :host {\n      width: 400px;\n    } \n    ```", "```js\n    import { Router } from '@angular/router'; \n    ```", "```js\n    constructor(private productsService: ProductsService, **private router: Router**) {} \n    ```", "```js\n    createProduct(title: string, price: string, category: string) {\n      this.productsService.addProduct({\n        title,\n        price: Number(price),\n        category\n      }).subscribe(**() => this.router.navigate(['/products'])**);\n    } \n    ```", "```js\n    getProducts(): Observable<Product[]> {\n      **if (this.products.length === 0) {**\n        const options = new HttpParams().set('limit', 10);\n        return this.http.get<Product[]>(this.productsUrl, {\n          params: options\n        }).pipe(map(products => {\n          this.products = products;\n          return products;\n        }));\n      **}**\n      **return of(this.products);**\n    } \n    ```", "```js\n{ path: '', redirectTo: 'products', pathMatch: 'full' } \n```", "```js\n{ path: '**', redirectTo: 'products' } \n```", "```js\n    .menu-links a.active {\n      color: var(--electric-violet);\n    } \n    ```", "```js\n    import { RouterLink, **RouterLinkActive**, RouterOutlet } from '@angular/router'; \n    ```", "```js\n    @Component({\n      selector: 'app-root',\n      imports: [\n        RouterOutlet,\n        RouterLink,\n        **RouterLinkActive**,\n        CopyrightDirective,\n        AuthComponent\n      ],\n      templateUrl: './app.component.html',\n      styleUrl: './app.component.css'\n    }) \n    ```", "```js\n    <div class=\"menu-links\">\n      <a routerLink=\"/products\" **routerLinkActive=\"active\"**>Products</a>\n      <a routerLink=\"/cart\" **routerLinkActive=\"active\"**>My Cart</a>\n    </div> \n    ```", "```js\n    import { ProductDetailComponent } from './product-detail/product-detail.component'; \n    ```", "```js\n    { path: 'products/:id', component: ProductDetailComponent } \n    ```", "```js\n    <ul class=\"pill-group\">\n      @for (product of products | sort; track product.id) {\n        <li class=\"pill\" (click)=\"selectedProduct = product\">\n          @switch (product.category) {\n            @case ('electronics') { ![img](img/Icon-041.png) }\n            @case ('jewelery') { ![img](img/Icon-101.png) }\n            @default { ![img](img/Icon-09.png) }\n          }\n          **<a [routerLink]=\"[product.id]\">{{product.title}}</a>**\n        </li>\n      } @empty {\n        <p>No products found!</p>\n      }\n    </ul> \n    ```", "```js\n    :host {\n      width: 450px;\n    } \n    ```", "```js\n    import { CommonModule } from '@angular/common';\n    import { Component, input, OnInit } from '@angular/core';\n    import { ActivatedRoute, Router } from '@angular/router';\n    import { Product } from '../product';\n    import { Observable, switchMap } from 'rxjs';\n    import { ProductsService } from '../products.service';\n    import { AuthService } from '../auth.service'; \n    ```", "```js\n    constructor(\n      private productService: ProductsService,\n      public authService: AuthService,\n      **private route: ActivatedRoute,**\n      **private router: Router**\n    ) { } \n    ```", "```js\n    export class ProductDetailComponent implements OnInit \n    ```", "```js\n    ngOnInit(): void {\n      this.product$ = this.route.paramMap.pipe(\n        switchMap(params => {\n          return this.productService.getProduct(Number(params.get('id')));\n        })\n      );\n    } \n    ```", "```js\n    changePrice(product: Product, price: string) {\n      this.productService.updateProduct(product.id, Number(price)).subscribe(() => {\n        **this.router.navigate(['/products']);**\n      **}**);\n    }\n    remove(product: Product) {\n      this.productService.deleteProduct(product.id).subscribe(**() => {**\n    **this.router.navigate(['/products']);**\n    **}**);\n    } \n    ```", "```js\nexport const routes: Routes = [\n  **{**\n    **path: 'products',**\n    **component: ProductListComponent,**\n    **children: [**\n      **{ path: 'new', component: ProductCreateComponent },**\n      **{ path: ':id', component: ProductDetailComponent },**\n    **]**\n  **}**,\n  { path: 'cart', component: CartComponent },\n  { path: '', redirectTo: 'products', pathMatch: 'full' },\n  { path: '**', redirectTo: 'products' }\n]; \n```", "```js\n{\n  path: 'products',\n  component: ProductListComponent,\n  children: [\n    { path: 'new', component: ProductCreateComponent },\n    { path: ':id', component: ProductDetailComponent },\n  ],\n  **providers: [ProductsService]**\n} \n```", "```js\nngOnInit(): void {\n  const id = this.route.snapshot.params['id'];\n  this.product$ = this.productService.getProduct(id);\n} \n```", "```js\ngetProducts(): Observable<Product[]> {\n  if (this.products.length === 0) {\n    const options = new HttpParams().set('limit', 10);\n    return this.http.get<Product[]>(this.productsUrl, {\n      params: options\n    }).pipe(map(products => {\n      this.products = products;\n      return products;\n    }));\n  }\n  return of(this.products);\n} \n```", "```js\n    getProducts(**limit?: number**): Observable<Product[]> {\n      if (this.products.length === 0) {\n        const options = new HttpParams().set('limit', **limit ||** 10);\n        return this.http.get<Product[]>(this.productsUrl, {\n          params: options\n        }).pipe(map(products => {\n          this.products = products;\n          return products;\n        }));\n      }\n      return of(this.products);\n    } \n    ```", "```js\n    import { RouterLink, **ActivatedRoute** } from '@angular/router';\n    import { Observable, **switchMap** } from 'rxjs'; \n    ```", "```js\n    constructor(private productService: ProductsService, **private route: ActivatedRoute**) {} \n    ```", "```js\n    private getProducts() {\n      this.products$ = **this.route.queryParamMap.pipe(**\n        **switchMap(params => {**\n          **return this.productService.getProducts(Number(params.get('limit')));**\n        **})**\n      **);**\n    } \n    ```", "```js\n    import { provideRouter, **withComponentInputBinding** } from '@angular/router'; \n    ```", "```js\n    provideRouter(routes, **withComponentInputBinding()**), \n    ```", "```js\n    id = input<**string**>(); \n    ```", "```js\n    ngOnInit(): void {\n      **this.product$ = this.productService.getProduct(Number(this.id()!));**\n    } \n    ```", "```js\nng generate guard auth \n```", "```js\nimport { CanActivateFn } from '@angular/router';\nexport const authGuard: CanActivateFn = (route, state) => {\n  return true;\n}; \n```", "```js\n    **import { inject } from '@angular/core';**\n    import { CanActivateFn, **Router** } from '@angular/router';\n    **import { AuthService } from './auth.service';** \n    ```", "```js\n    const authService = inject(AuthService);\n    const router = inject(Router);\n    if (authService.isLoggedIn()) {\n      return true;\n    }\n    return router.parseUrl('/'); \n    ```", "```js\n    import { authGuard } from './auth.guard'; \n    ```", "```js\n    {\n      path: 'cart',\n      component: CartComponent,\n      **canActivate: [authGuard]**\n    } \n    ```", "```js\n    ng generate guard checkout \n    ```", "```js\n    import { CartComponent } from './cart/cart.component'; \n    ```", "```js\n    const confirmation = confirm(\n      'You have pending items in your cart. Do you want to continue?'\n    );\n    return confirmation; \n    ```", "```js\n    import { checkoutGuard } from './checkout.guard'; \n    ```", "```js\n    {\n      path: 'cart',\n      component: CartComponent,\n      canActivate: [authGuard],\n      **canDeactivate: [checkoutGuard]**\n    } \n    ```", "```js\n{\n  path: 'cart',\n  component: CartComponent,\n  canActivate: [authGuard],\n  canDeactivate: [**() => confirm('You have pending items in your cart. Do you want to continue?')**]\n} \n```", "```js\nng generate resolver products \n```", "```js\nimport { ResolveFn } from '@angular/router';\nexport const productsResolver: ResolveFn<boolean> = (route, state) => {\n  return true;\n}; \n```", "```js\n    import { inject } from '@angular/core';\n    import { Product } from './product';\n    import { ProductsService } from './products.service'; \n    ```", "```js\n    export const productsResolver: ResolveFn<**Product[]**> = (route, state) => {\n      return **[]**;\n    }; \n    ```", "```js\n    const productService = inject(ProductsService); \n    ```", "```js\n    const limit = Number(route.queryParamMap.get('limit')); \n    ```", "```js\n    return productService.getProducts(limit); \n    ```", "```js\n    export const productsResolver: ResolveFn<Product[]> = (route, state) => {\n      const productService = inject(ProductsService);\n      const limit = Number(route.queryParamMap.get('limit'));\n\n      return productService.getProducts(limit);\n    }; \n    ```", "```js\n    import { productsResolver } from './products.resolver'; \n    ```", "```js\n    {\n      path: 'products',\n      component: ProductListComponent,\n      **resolve: {**\n        **products: productsResolver**\n      **}**\n    } \n    ```", "```js\n    import { Observable, switchMap, of } from 'rxjs'; \n    ```", "```js\n    private getProducts() {\n      this.products$ = **this.route.data.pipe(**\n        **switchMap(data => of(data['products']))**\n      **);**\n    } \n    ```", "```js\n    ng generate component user \n    ```", "```js\n    import { UserComponent } from './user/user.component';\n    export default [\n      { path: '', component: UserComponent }\n    ]; \n    ```", "```js\n    { path: 'user', loadChildren: () => import('./user.routes') } \n    ```", "```js\n    <div class=\"menu-links\">\n      <a routerLink=\"/products\" routerLinkActive=\"active\">Products</a>\n      <a routerLink=\"/cart\" routerLinkActive=\"active\">My Cart</a>\n      **<a routerLink=\"/user\" routerLinkActive=\"active\">My Profile</a>**\n    </div> \n    ```", "```js\n    Initial chunk files | Names         |  Raw size\n    polyfills.js        | polyfills     |  82.71 kB | \n    main.js             | main          |  47.22 kB | \n    styles.css          | styles        |   1.14 kB | \n                        | Initial total | 131.07 kB\n    Lazy chunk files    | Names         |  Raw size\n    chunk-D3RURZVV.js   | user-routes   |   1.26 kB | \n    Application bundle generation complete. [1.234 seconds] \n    ```", "```js\n{\n  path: 'user',\n  loadComponent: () => import('./user/user.component').then(c => c.UserComponent),\n} \n```", "```js\n    import { CanActivateFn, **CanMatchFn**, Router } from '@angular/router'; \n    ```", "```js\n    export const authGuard: CanActivateFn | **CanMatchFn = ()** => {\n      const authService = inject(AuthService);\n      const router = inject(Router);\n      if (authService.isLoggedIn()) {\n        return true;\n      }\n      return router.parseUrl('/');\n    }; \n    ```", "```js\n    {\n      path: 'user',\n      loadChildren: () => import('./user.routes'),\n      **canMatch: [authGuard]**\n    } \n    ```"]