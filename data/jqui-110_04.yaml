- en: Chapter 4. The Accordion Widget
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章 手风琴小部件
- en: The accordion widget is another UI widget that allows you to group the content
    into separate panels that can be opened or closed by visitor interaction. Therefore,
    most of its content is initially hidden from view, much like the tabs widget that
    we looked at in the previous chapter.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 手风琴小部件是另一个 UI 小部件，允许您将内容分组到可以通过访问者交互打开或关闭的单独面板中。因此，大部分内容最初都是从视图中隐藏的，就像我们在上一章中看到的选项卡小部件一样。
- en: Each container has a heading element associated with it that is used to open
    the container and display the content. When you click on a heading, its content
    will slide into view (with an animation) below it. The currently visible content
    is hidden, while the new content is shown whenever we click on an accordion heading.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 每个容器都有一个与之关联的标题元素，用于打开容器并显示内容。当单击标题时，其内容将以动画形式滑入视图下方。当前可见的内容被隐藏，当我们单击手风琴标题时，新内容被显示。
- en: 'In this chapter, we are going to cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: The structure of an accordion widget
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手风琴小部件的结构
- en: The default implementation of an accordion
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手风琴的默认实现
- en: Adding custom styling
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加自定义样式
- en: Using the configurable options to set different behaviors
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用可配置的选项来设置不同的行为
- en: Working with methods for controlling the accordion
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用控制手风琴的方法
- en: The built-in types of animation
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内置的动画类型
- en: Custom accordion events
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义手风琴事件
- en: The accordion widget is a robust and highly configurable widget that allows
    you to save the space on your web pages by displaying only a single panel of content
    at any time.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 手风琴小部件是一个强大且高度可配置的小部件，允许您通过在任何时候仅显示单个内容面板来节省网页空间。
- en: 'The following screenshot shows an example of an accordion widget:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了手风琴小部件的一个示例：
- en: '![The Accordion Widget](img/2209OS_04_01.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![手风琴小部件](img/2209OS_04_01.jpg)'
- en: It's easy for our visitors to use and easy for us to implement. It has a range
    of configurable options that can be used to customize its appearance and behavior,
    and exposes a series of methods that allow you to control it programmatically.
    It also comes with a rich set of interaction events that we can use to hook into
    key interactions between our visitors and the widget.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的访问者来说易于使用，对于我们来说易于实现。它具有一系列可配置的选项，可用于自定义其外观和行为，并公开一系列方法，允许您以编程方式控制它。它还带有丰富的交互事件集，我们可以用来挂钩我们的访问者与小部件之间的关键交互。
- en: The height of the accordion's container element will be set automatically so
    that there is room to show the tallest content panel in addition to the headers.
    Also, by default, the size of the widget will remain fixed so that it won't push
    other elements on the page around it out of the way when content panels open or
    close.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 手风琴容器元素的高度将自动设置，以便在标题之外还有足够的空间来显示最高的内容面板。此外，默认情况下，小部件的大小将保持固定，因此在打开或关闭内容面板时不会将页面上的其他元素推到一边。
- en: Structuring the accordion widget
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结构化手风琴小部件
- en: Let's take a moment to familiarize ourselves with the underlying markup that
    an accordion is made of. Within the outer container is a series of links. These
    links are the headings within the accordion and each heading will have a corresponding
    content panel that opens when the header is clicked.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们花点时间熟悉一下手风琴的基本标记。在外部容器内是一系列链接。这些链接是手风琴内的标题，每个标题都会有一个对应的内容面板，在点击标题时打开。
- en: 'It''s worth remembering that only one content panel can be open at a time when
    using the accordion widget. In a blank page in your text editor, create the following
    page:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 值得记住的是，在使用手风琴小部件时一次只能打开一个内容面板。在文本编辑器中的空白页上，创建以下页面：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Save the file as `accordion1.html` in the `jqueryui` folder, and try it out
    in a browser. The widget should appear as it did in the screenshot at the start
    of the chapter, fully skinned and ready for action.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 将文件保存为`accordion1.html`，放在`jqueryui`文件夹中，并在浏览器中尝试运行。该小部件应该与本章开头的屏幕截图一样，完全皮肤化并准备好使用。
- en: 'The following list shows the required dependencies of the widget:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表显示了小部件所需的依赖关系：
- en: '`jquery.ui.all.css`'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`jquery.ui.all.css`'
- en: '`jquery-2.0.3.js`'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`jquery-2.0.3.js`'
- en: '`jquery.ui.core.js`'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`jquery.ui.core.js`'
- en: '`jquery.ui.widget.js`'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`jquery.ui.widget.js`'
- en: '`jquery.ui.accordion.js`'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`jquery.ui.accordion.js`'
- en: As we saw with the tabs widget, each widget has its own source file (although
    it may be dependent on others to provide functionality); these must be referenced
    in the correct order for the widget to work properly. The jQuery library must
    always appear first, followed by the `jquery.ui.core.js` file. After that, the
    file that contains the required dependencies must follow. These files should be
    present before referencing the widget's on-script file. The library components
    will not function as expected if the files are not loaded in the correct order.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在标签小部件中看到的，每个小部件都有其自己的源文件（尽管它可能依赖于其他文件来提供功能）；这些必须按正确的顺序引用，以使小部件正常工作。 jQuery库必须始终首先出现，然后是`jquery.ui.core.js`文件。之后，必须跟随包含所需依赖项的文件。这些文件应在引用小部件的
    on-script 文件之前出现。如果文件没有按正确的顺序加载，则库组件将无法按预期的方式工作。
- en: The underlying markup required for the accordion is flexible, and the widget
    can be constructed from a variety of different structures. In this example, the
    accordion headings are formed from links wrapped in the `<h2>` elements, and the
    content panels are the simple `<div>` elements.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 用于手风琴的底层标记是灵活的，小部件可以由各种不同的结构构建。在这个例子中，手风琴标题由包裹在`<h2>`元素中的链接组成，内容面板是简单的`<div>`元素。
- en: For the accordion to function correctly, each content panel should appear directly
    after its corresponding header. All of the elements for the widget are enclosed
    within a `<div>` container that is targeted with the `accordion()` widget method.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要使手风琴正常工作，每个内容面板应该直接出现在其对应的标题之后。所有小部件的元素都被封装在一个`<div>`容器中，该容器被`accordion()`小部件方法所选中。
- en: After the required script dependencies from the library, we use a custom `<script>`
    block to transform the underlying markup into the accordion.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在从库中获取所需的脚本依赖项之后，我们使用自定义`<script>`块将底层标记转换为手风琴。
- en: To initialize the widget, we use a simple ID selector `$("#myAccordion")`, to
    specify the element that contains the markup for the widget, and then chain the
    `accordion()` widget method after the selector to create the accordion.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 要初始化小部件，我们使用一个简单的ID选择器`$("#myAccordion")`，指定包含小部件标记的元素，然后在选择器后面链式调用`accordion()`小部件方法来创建手风琴。
- en: 'In this example, we used an empty fragment (`#`) as the value of the `href`
    attribute in our tab heading elements, such as:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们在标签标题元素中使用空片段（`#`）作为`href`属性的值，例如：
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: You should note that any URL supplied for the accordion headers will not be
    followed when the header is clicked in the default implementation.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该注意，默认情况下，单击手风琴标题时不会跟随任何为手风琴标题提供的URL。
- en: Similar to the tabs widget that we looked at in the previous chapter, the underlying
    markup that is transformed into the accordion has a series of classnames added
    to it when the widget is initialized.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 与我们在上一章中看到的标签小部件类似，当小部件被初始化时，被转换为手风琴的底层标记具有一系列的类名添加到其中。
- en: A number of different elements that make up the widget are given `role` and
    `aria-` attributes.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 一些组成小部件的不同元素被赋予`role`和`aria-`属性。
- en: Note
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Accessible Rich Internet Applications** (**ARIA**) is a W3C recommendation
    for ensuring that rich-internet applications remain accessible to assisted technologies.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**可访问的丰富互联网应用程序**（**ARIA**）是确保丰富互联网应用程序对辅助技术保持可访问性的W3C推荐。'
- en: 'The accordion panels that are initially hidden from view are given the `aria-expanded
    = "false"` attribute to ensure that screen readers don''t discard or cannot access
    content that is hidden using `display: none`. This makes the accordion widget
    highly accessible; it stops the reader from having to wade through lots of content
    unnecessarily, that might be hidden, and tells the user that they can also expand
    or collapse the panel, depending on the current value of the `aria-expanded` attribute.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '最初从视图中隐藏的手风琴面板被赋予`aria-expanded="false"`属性，以确保屏幕阅读器不会丢弃或无法访问使用`display: none`隐藏的内容。这使得手风琴小部件高度可访问；它阻止读者不必要地浏览可能被隐藏的大量内容，并告诉用户他们也可以展开或折叠面板，具体取决于`aria-expanded`属性的当前值。'
- en: Styling the accordion
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为手风琴添加样式
- en: ThemeRoller is the recommended tool for choosing or creating the theme of the
    accordion widget, but there may be times when we want to considerably change the
    look and style of the widget beyond what is possible with ThemeRoller. In that
    case, we can just style our own accordion—in our example, we're going to flatten
    the styling effect, add a border, and remove the corners from some of the elements
    within the accordion widget.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: ThemeRoller是选择或创建手风琴小部件主题的推荐工具，但有时我们可能希望在ThemeRoller无法实现的情况下，大幅改变小部件的外观和样式。在这种情况下，我们可以自定义样式我们自己的手风琴—在我们的示例中，我们将拉平样式效果，添加边框，并从手风琴小部件中的一些元素中移除角落。
- en: 'In a new file in your text editor add the following code:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的文本编辑器中的新文件中添加以下代码：
- en: '[PRE2]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Save this file as `accordionTheme.css` in the css folder, and link to it after
    the jQuery UI style sheet in the `<head>` element of `accordion1.html`:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 将此文件保存为`accordionTheme.css`，放在css文件夹中，并在`accordion1.html`的`<head>`元素中的jQuery
    UI样式表之后链接到它：
- en: '[PRE3]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Save the new file as `accordion2.html` in the `jqueryui` folder and view it
    in a browser. It should appear something like as follows:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 将新文件保存为`accordion2.html`，放在`jqueryui`文件夹中，并在浏览器中查看。它应该看起来像下面这样：
- en: '![Styling the accordion](img/2209OS_04_02.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![为手风琴设置样式](img/2209OS_04_02.jpg)'
- en: As you can see from the preceding screenshot, we've disabled the built-in rounded
    corners that are added by the theme file and have set alternative fonts, background
    colors, and border colors. We haven't changed the widget much, but we haven't
    used many style rules. It would be easy to continue overriding rules in this way
    to build a much more complex custom theme.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的截图所示，我们已禁用了主题文件添加的内置圆角，并设置了替代字体、背景颜色和边框颜色。我们并没有大幅度更改小部件，但我们也没有使用许多样式规则。通过这种方式继续覆盖规则来构建一个更复杂的自定义主题将会很容易。
- en: Configuring an accordion
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置手风琴
- en: 'The accordion has a range of configurable options that allow us to change the
    default behavior of the widget. The following table lists the available options,
    their default values, and gives a brief description of their usage:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 手风琴具有一系列可配置选项，允许我们更改小部件的默认行为。下表列出了可用选项、它们的默认值，并简要描述了它们的用法：
- en: '| Option | Default value | Use |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| 选项 | 默认值 | 使用 |'
- en: '| --- | --- | --- |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `active` | `first child` (the first panel is open) | Sets the active heading
    on page load. |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| `active` | `first child`（第一个面板是打开的）| 在页面加载时设置活动标题。'
- en: '| `animate` | `{}` | Controls the animation of panels. |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| `animate` | `{}` | 控制面板的动画效果。'
- en: '| `collapsible` | `false` | Allows all of the content panels to be closed at
    the same time. |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| `collapsible` | `false` | 允许同时关闭所有内容面板。'
- en: '| `disabled` | `false` | Disables the widget. |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| `disabled` | `false` | 禁用小部件。'
- en: '| `event` | `"click"` | Specifies the event on headers that trigger drawers
    to open. |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| `event` | `"click"` | 指定触发打开抽屉的标题上的事件。 |'
- en: '| `header` | `"> li >:first-child,> :not(li):even"` | Sets the selector for
    header elements. Although it looks complex, this is a standard jQuery selector
    that simply targets the first child within every odd `<li>` element. |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| `header` | `"> li >:first-child,> :not(li):even"` | 设置标题元素的选择器。尽管看起来复杂，但这是一个标准的jQuery选择器，只是简单地针对每个奇数`<li>`元素中的第一个子元素。'
- en: '| `heightStyle` | `"auto"` | Controls the height of the accordion and each
    panel |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| `heightStyle` | `"auto"` | 控制手风琴和每个面板的高度 |'
- en: '| `icons` | `''header'': ''ui-icontriangle-1-e'', ''headerSelected'': ''uiicon-
    triangle-1-s''` | Specifies the icons for the header elements and the selected
    state. |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| `icons` | `''header'': ''ui-icontriangle-1-e'', ''headerSelected'': ''uiicon-
    triangle-1-s''` | 指定标题元素和选定状态的图标。'
- en: Changing the trigger event
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改触发事件
- en: 'Most of the options are self-explanatory, and the values they accept are usually
    Boolean, string, or element selectors. Let''s put some of them to use, so that
    we can explore their functionality. Change the final `<script>` element in `accordion2.html`
    so that it appears as follows:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数选项都是不言自明的，它们接受的值通常是布尔值、字符串或元素选择器。让我们使用其中一些，以便我们可以探索它们的功能。将`accordion2.html`中的最后一个`<script>`元素更改为如下所示：
- en: '[PRE4]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We no longer need the custom stylesheet added in `accordion2.html`, so go ahead
    and remove the following line from the code:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不再需要在`accordion2.html`中添加的自定义样式表，所以继续从代码中删除以下行：
- en: '[PRE5]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Save these changes as `accordion3.html`. First, we create a new object literal
    called `accOpts` that contains the `event` key and the `mouseover` value, which
    is the event we wish to use to trigger the opening of an accordion panel. We pass
    this object to the `accordion()` method as an argument and it overrides the default
    option of the widget, which is `click`.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 将这些更改保存为`accordion3.html`。首先，我们创建一个名为`accOpts`的新对象字面量，其中包含`event`键和`mouseover`值，这是我们希望用来触发打开手风琴面板的事件。我们将这个对象作为参数传递给`accordion()`方法，并且它覆盖了小部件的默认选项，即`click`。
- en: 'The `mouseover` event is commonly used as an alternative trigger event. Other
    events can also be used, for example, we can set `keydown` as the event, but in
    order for this to work, the accordion panel that we wish to open must already
    be focused. You should note that you can also set options using an inline object
    within the widget method, without creating a separate object. Using the following
    code would be equally as effective, and would often be the preferred way of coding,
    which we will use for the remainder of the book:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '`mouseover`事件通常用作替代触发事件。也可以使用其他事件，例如，我们可以将`keydown`设置为事件，但是为了使其工作，我们希望打开的手风琴面板必须已经聚焦。您应该注意，您还可以在小部件方法中使用内联对象设置选项，而不需要创建单独的对象。使用以下代码同样有效，并且通常是编码的首选方式，这是我们在本书的其余部分中将使用的方式：'
- en: '[PRE6]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Changing the default active header
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改默认活动头
- en: 'By default, the first header of the accordion will be selected when the widget
    is rendered with its content panel open. We can change which header is selected
    on page load using the `active` option. Change the configuration `<script>` block
    in `accordion3.html` so that it appears as follows:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，手风琴的第一个标题在小部件呈现时将被选中，并显示其内容面板。我们可以使用`active`选项在页面加载时更改选定的标题。将`accordion3.html`中的配置`<script>`块更改为以下内容：
- en: '[PRE7]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Save this version as `accordion4.html`. We set the `active` option to the integer
    `2` to open the third content panel by default, and similar to the tab headers
    that we saw in the previous chapter, accordion's headers use a zero-based index.
    Along with an integer, this option also accepts a jQuery selector or raw DOM element.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 将此版本保存为`accordion4.html`。我们将`active`选项设置为整数`2`，以默认打开第三个内容面板，并且与我们在上一章中看到的选项标题类似，手风琴的标题使用从零开始的索引。除了整数，此选项还接受jQuery选择器或原始DOM元素。
- en: 'We can also use the Boolean value of `false` to configure the accordion so
    that none of the content panels are open by default. Change the configuration
    object once again to the following:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用布尔值`false`来配置手风琴，以使默认情况下不打开任何内容面板。再次更改配置对象如下：
- en: '[PRE8]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Note
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'If you use the `active: false` option, as shown here, you must also include
    the `collapsible` option too, which must be set to true for `active` to work correctly.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '如果使用`active: false`选项，必须还包括`collapsible`选项，该选项必须设置为`true`才能使`active`正确工作。'
- en: 'Save this as `accordion5.html`. Now when the page loads, all of the content
    panels are hidden from view:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 将此保存为`accordion5.html`。现在当页面加载时，所有内容面板都被隐藏了：
- en: '![Changing the default active header](img/2209OS_04_03.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![更改默认活动标题](img/2209OS_04_03.jpg)'
- en: The accordion will remain closed until one of the headers is selected, which
    will remain open unless the active header is clicked; at this point, its associated
    content panel will close. For usability, it is best to avoid configuring both
    this and the `mouseover` event option together in the same implementation, as
    the open panels would close even when the user inadvertently moused off-and-back
    over them.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 手风琴将保持关闭状态，直到选择其中一个标题，该标题将保持打开状态，除非单击活动标题；在此时，其关联的内容面板将关闭。为了便于使用，最好避免在同一实现中同时配置此选项和`mouseover`事件选项，因为即使用户无意中将鼠标移到其上并再次移动，打开的面板也会关闭。
- en: Filling the height of its container
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 填充其容器的高度
- en: If the `heightStyle` option is set, it will force the accordion to take the
    full height of its container. In our examples so far, the container of the accordion
    has been the body of the page, and the height of the body will only be the height
    of its largest element. We'll need to use a new container element with a fixed
    height to see this option in action.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 如果设置了`heightStyle`选项，它将强制手风琴占据其容器的全部高度。到目前为止，我们的示例中，手风琴的容器一直是页面的主体，而页面主体的高度只能是其最大元素的高度。我们需要使用一个具有固定高度的新容器元素来查看此选项的效果。
- en: 'In the `<head>` element of `accordion5.html`, add the following `<style>` element:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在`accordion5.html`的`<head>`元素中，添加以下`<style>`元素：
- en: '[PRE9]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Then wrap all of the underlying markup for the accordion in a new container
    element as follows:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，将手风琴的所有底层标记包装在一个新的容器元素中，如下所示：
- en: '[PRE10]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Finally, change the configuration `<script>` to use the `heightStyle` option:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，更改我们自定义 `<script>` 元素中的配置对象，使其如下所示：
- en: '[PRE11]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Save the changes as `accordion6.html`. The new container is given a fixed height
    and width using the CSS specified in the `<head>` element of the page.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 将更改保存为 `accordion6.html`。使用页面 `<head>` 元素中指定的 CSS 为新容器指定了固定的高度和宽度。
- en: Note
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In most cases, you'll want to create a separate style sheet. For our purposes,
    with just a single selector and two rules, using the style tag in our HTML file
    is most convenient.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，您将希望创建一个单独的样式表。对于我们的目的，只有一个选择器和两个规则，使用 HTML 文件中的样式标记最为方便。
- en: 'The `heightStyle` option forces the accordion to take the entire height of
    its container, and restricting the width of the container naturally reduces the
    width of the widget too. This page should appear as follows:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 选项 `heightStyle` 强制手风琴占据整个容器的高度，限制容器的宽度自然也会减小小部件的宽度。这个页面应该显示如下：
- en: '![Filling the height of its container](img/2209OS_04_04.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![填充其容器的高度](img/2209OS_04_04.jpg)'
- en: Using the accordion animation
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用手风琴动画
- en: 'The accordion widget comes with the built-in slide animation that is enabled
    by default, and has been present in all of our examples so far. Disabling this
    animation is as easy as supplying `false` as the value of the `animate` option.
    Remove the `<style>` tag from the `<head>` element of the page in `accordion6.html`,
    and remove the additional container `<div>`, then change the configuration object
    so that it appears as follows:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 手风琴小部件附带了默认启用的内置幻灯片动画，在我们所有的示例中都存在。禁用此动画只需将 `animate` 选项的值设为 `false` 即可。从页面的
    `<head>` 元素中删除 `<style>` 标签，在 `accordion6.html` 中删除额外的容器 `<div>`，然后更改配置对象，使其如下所示：
- en: '[PRE12]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Save this as `accordion7.html`. This will cause each content panel to open immediately
    instead of sliding-open nicely whenever a header is clicked.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 将其保存为 `accordion7.html`。这将导致每个内容面板立即打开，而不是在单击标头时漂亮地滑动打开。
- en: An alternate animation has also been built into the widget—the `EaseOutBounce`
    animation. However, to use this alternate animation, we need to add a link to
    the `jquery.ui.effect.js` file.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 小部件中还构建了另一种备用动画——`EaseOutBounce` 动画。然而，要使用这个备用动画，我们需要在 `jquery.ui.effect.js`
    文件中添加一个链接。
- en: 'Directly after the link to `jquery.ui.accordion.js` at the top of the `<head>`
    element, add the following line of code:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `<head>` 元素顶部的 `jquery.ui.accordion.js` 链接后，添加以下一行代码：
- en: '[PRE13]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Now, change the configuration object in our custom `<script>` element so that
    it appears as follows:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，更改我们自定义 `<script>` 元素中的配置对象，使其如下所示：
- en: '[PRE14]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Save these changes as `accordion8.html`. Although the accordion panels close
    in exactly the same way as they did in previous examples, when they open they
    bounce a few times at the end of the animation. It's a great way to make the animation
    more interesting, and as we saw in this example, it's easy to use.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 将这些更改保存为 `accordion8.html`。尽管手风琴面板的关闭方式与之前的示例完全相同，但在打开时，它们会在动画结束时反弹几次。这是使动画更有趣的好方法，正如我们在这个示例中看到的那样，使用起来非常简单。
- en: 'In addition to the two preconfigured animations, we can also use any of the
    different easing effects defined within the `jquery.ui.effect.js` file, including
    the following:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 除了两个预配置的动画之外，我们还可以使用 `jquery.ui.effect.js` 文件中定义的任何不同的缓动效果，包括以下内容：
- en: '`easeInQuad`'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`easeInQuad`'
- en: '`easeInCubic`'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`easeInCubic`'
- en: '`easeInQuart`'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`easeInQuart`'
- en: '`easeInQuint`'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`easeInQuint`'
- en: '`easeInSine`'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`easeInSine`'
- en: '`easeInExpo`'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`easeInExpo`'
- en: '`easeInCirc`'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`easeInCirc`'
- en: '`easeInElastic`'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`easeInElastic`'
- en: '`easeInBack`'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`easeInBack`'
- en: '`easeInBounce`'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`easeInBounce`'
- en: Each of these easing methods is complimented by `easeOut` and `easeInOut` counterparts.
    For the complete list, see the `jquery.ui.effect.js` file, or refer to the easing
    table in [Chapter 14](ch14.html "Chapter 14. UI Effects"), *UI Effects*.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 这些缓动方法的每一个都有相应的 `easeOut` 和 `easeInOut` 对应方法。完整列表，请参见 `jquery.ui.effect.js`
    文件，或参考 [第 14 章](ch14.html "第 14 章。UI Effects") 中的缓动表，*UI Effects*。
- en: Note
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: See the jQuery UI demo site for some great examples of the accordion effects
    at [http://jqueryui.com/accordion/](http://jqueryui.com/accordion/). The effects
    can be applied to any widget that can be animated, such as the accordion, tabs,
    dialog or datepicker.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [http://jqueryui.com/accordion/](http://jqueryui.com/accordion/) 查看 jQuery
    UI 演示站点，以了解一些很棒的手风琴效果示例。这些效果可以应用于任何可以进行动画处理的小部件，例如手风琴、选项卡、对话框或日期选择器。
- en: 'The easing effects don''t change the underlying animation, which will still
    be based on the slide animation. But they do change how the animation progresses.
    For example, we can make the content panels bounce both at the start and end of
    our animation by using the `easeInOutBounce` easing effect in our configuration
    object:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 缓动效果不会改变底层动画，仍然基于幻灯片动画。但它们确实改变了动画的进展方式。例如，我们可以通过在配置对象中使用 `easeInOutBounce` 缓动效果来使内容面板在动画开始和结束时都跳动：
- en: '[PRE15]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Save this file as `accordion9.html` and view it in a browser. Most of the easing
    effects have opposites, for example, instead of making the content panels bounce
    at the end of the animation, we can make them bounce at the start of the animation
    using the `easeInBounce` easing effect.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 将此文件保存为 `accordion9.html` 并在浏览器中查看。大多数缓动效果都有相反的效果，例如，我们可以使用 `easeInBounce` 缓动效果使内容面板在动画开始时跳动，而不是在动画结束时跳动。
- en: 'Another option that has an effect on animations is the `heightStyle` property,
    which resets `height` and `overflow` styles after each animation. Remember that
    animations are enabled by default, but this option isn''t. Change the configuration
    object in `accordion9.html` to the following:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 对动画产生影响的另一个选项是 `heightStyle` 属性，在每次动画后重置 `height` 和 `overflow` 样式。请记住，默认情况下启用动画，但此选项不会启用。将
    `accordion9.html` 中的配置对象更改为以下内容：
- en: '[PRE16]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Save this as `accordion10.html`. Now when the page is run, the accordion will
    not keep to a fixed size; it will grow or shrink depending on how much content
    is in each panel. It doesn't make much of a difference in this example, but the
    property really comes into its own when using dynamic content, when we may not
    always know how much content will be within each panel when the panel content
    changes frequently.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 将此保存为 `accordion10.html`。现在运行页面时，手风琴不会保持固定尺寸；它将根据每个面板中的内容量而增长或缩小。在这个示例中并没有什么区别，但是在使用动态内容时，该属性确实会发挥作用，因为在面板内容频繁更改时，我们可能并不总是知道每个面板中会有多少内容。
- en: Listing the accordion events
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 列出手风琴事件
- en: 'The accordion exposes three custom events, which are listed in the following
    table:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 手风琴公开了三个自定义事件，列在下表中：
- en: '| Event | Triggered when… |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| 事件 | 触发时... |'
- en: '| --- | --- |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `activate` | The active header has changed. |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| `activate` | 活动标题已更改。 |'
- en: '| `beforeActivate` | The active header is about to change |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| `beforeActivate` | 活动标题即将更改 |'
- en: '| `create` | The widget has been created |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| `create` | 小部件已创建 |'
- en: The `activate` event is triggered every time the active header (and its associated
    content panel) is changed. It fires at the end of the content panel's opening
    animation, or if animations are disabled, immediately (but still after the active
    panel has been changed).
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 每次活动标题（及其关联的内容面板）更改时触发 `activate` 事件。它在内容面板打开动画结束时触发，或者如果禁用动画，则立即触发（但仍在激活面板更改后）。
- en: The `beforeActivate` event is fired as soon as the new header is selected, that
    is, before the opening animation (or before the active panel has changed, if animations
    are disabled). The `create` event is fired as soon as the widget has been initialized.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '`beforeActivate` 事件在选择新标题后立即触发（即在打开动画之前），或者如果动画被禁用，则在激活面板已更改之前触发。`create` 事件在小部件初始化后立即触发。'
- en: Using the change event
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 change 事件
- en: 'Let''s see how we can use these events in our accordion implementations. In
    `accordion10.html`, change the configuration object so that it appears as follows:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何在我们的手风琴实现中使用这些事件。在 `accordion10.html` 中，将配置对象更改为如下所示：
- en: '[PRE17]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Save this as `accordion11.html`. In this example, we use the `activate` configuration
    option to specify an anonymous callback function that is executed every time the
    active panel is changed. This function will automatically receive two objects
    as arguments. The first object is the `event` object, which contains the original
    browser `event` object.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 将此保存为 `accordion11.html`。在此示例中，我们使用 `activate` 配置选项来指定一个匿名回调函数，该函数每当活动面板更改时都会执行。此函数会自动接收两个对象作为参数。第一个对象是
    `event` 对象，其中包含原始的浏览器 `event` 对象。
- en: The second argument is an object, which contains useful information about the
    widget, such as the header element that was activated (`ui.newHeader`) and the
    header that was deactivated (`ui.oldHeader`). The second object is a jQuery object,
    so we can call jQuery methods directly on it.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个参数是一个对象，其中包含有关小部件的有用信息，例如激活了哪个标题元素（`ui.newHeader`）和被关闭的标题（`ui.oldHeader`）。第二个对象是一个
    jQuery 对象，因此我们可以直接在它上面调用 jQuery 方法。
- en: In this example, we navigate down to the `<a>` element within the header and
    display its text content in an information box, which is appended to the page
    and then removed after a short interval with a fading animation.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，我们导航到标题中的`<a>`元素，并在信息框中显示其文本内容，然后将其附加到页面并在短时间后使用淡入动画移除。
- en: For reference, the `ui` object also provides information on the content panels
    in the form of `ui.newPanel` and `ui.oldPanel` properties.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 供参考，`ui`对象还提供了有关内容面板的信息，以`ui.newPanel`和`ui.oldPanel`属性的形式。
- en: 'Once a header has been activated, and its content panel is shown, the notification
    will be generated:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦激活了标题并显示了其内容面板，将生成通知：
- en: '![Using the change event](img/2209OS_04_05.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![使用change事件](img/2209OS_04_05.jpg)'
- en: Configuring the beforeActivate event
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置beforeActivate事件
- en: The `beforeActivate` event can be used in exactly the same way, and any callback
    function we specify using this event also receives the `e` and `ui` objects to
    use.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '`beforeActivate`事件可以以完全相同的方式使用，并且我们使用此事件指定的任何回调函数也会收到`e`和`ui`对象以使用。'
- en: 'Change the configuration object from the last example to as follows:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 将上一个示例中的配置对象更改为如下所示：
- en: '[PRE18]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Save this as `accordion12.html`. All that's changed is the property that we're
    targeting with our configuration object. When we run the page, we should find
    that everything is exactly as it was before, except that our notification is produced
    before the content panel animation instead of after it.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 将此保存为`accordion12.html`。唯一更改的是我们使用配置对象定位的属性。当我们运行页面时，我们应该发现一切都与之前完全相同，只是我们的通知是在内容面板动画之前而不是之后产生的。
- en: There are also events such as `accordionactivate` and `accordionbeforeactivate`
    for use with the standard jQuery `on()` method, so that we can specify a callback
    function to execute outside of the accordion configuration. Using an event handler
    in this manner allows us to fire it precisely in response to specific events,
    rather than when the page is rendered on screen.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 还有诸如`accordionactivate`和`accordionbeforeactivate`之类的事件，可与标准jQuery `on()` 方法一起使用，以便我们可以指定在手风琴配置之外执行的回调函数。使用此方式的事件处理程序可以让我们精确地响应特定事件而触发它，而不是在页面渲染在屏幕上时触发。
- en: 'As an example, let''s rework the script block for the demo we''ve just created,
    to use the `accordionbeforeactivate` event handler. If you wanted to use this
    format instead, simply replace the `<script>` block from `accordion12.html` with
    the below script – you can see the main changes highlighted in the code:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，让我们重新设计刚刚创建的演示的脚本块，以使用`accordionbeforeactivate`事件处理程序。如果您想改用此格式，只需用以下脚本替换`accordion12.html`中的`<script>`块-您可以在代码中看到主要更改已突出显示：
- en: '[PRE19]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: In this example, we've moved the `beforeActivate` event handler out of the main
    configuration call to Accordion, into its own event handler. Here, we've tied
    the event handler to the document object; we could equally have bound it to an
    object such as a button or hyperlink on the page.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，我们将`beforeActivate`事件处理程序从主配置调用中移出到Accordion，并将其绑定到了文档对象；我们同样可以将其绑定到页面上的按钮或超链接等对象上。
- en: Explaining the accordion methods
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解释手风琴方法
- en: 'The accordion includes a selection of methods that allow you to control and
    manipulate the behavior of the widget programmatically. Some of the methods are
    common to each component of the library, such as the `destroy` method that is
    used by every widget. The following table lists the sole method for the accordion
    widget:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 手风琴包括一系列方法，允许您以编程方式控制和操作小部件的行为。一些方法对库的每个组件都是通用的，例如每个小部件都使用的`destroy`方法。以下表列出了手风琴小部件的唯一方法：
- en: '| Method | Use |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| 方法 | 用途 |'
- en: '| --- | --- |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `refresh` | Recalculates the height of the accordion panels; the outcome
    is dependent on the content and the `heightStyle` options |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| `refresh` | 重新计算手风琴面板的高度；结果取决于内容和`heightStyle`选项 |'
- en: Header activation
  id: totrans-155
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 标题激活
- en: 'The `option` method can be used to programmatically show or hide different
    drawers. We can easily test this method using a textbox and a new button. In `accordion12.html`,
    add the following new markup directly after the accordion:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '`option`方法可用于以编程方式显示或隐藏不同的抽屉。我们可以使用文本框和新按钮轻松测试此方法。在`accordion12.html`中，直接在手风琴后面添加以下新标记：'
- en: '[PRE20]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Now change the `<script>` element so that it appears as follows:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '现在将`<script>`元素更改为以下内容： '
- en: '[PRE21]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Save the new file as `accordion13.html`. The `option` method takes two additional
    arguments. It expects to receive the name of the option to use, as well as the
    index (zero-based) number of the header element to activate. In this example,
    we obtain the header to activate, by returning the value of the text input. We
    convert it to an integer using the `parseInt()` function of JavaScript because
    the `val()` jQuery method returns a string.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 将新文件保存为`accordion13.html`。`option`方法需要两个额外的参数。它期望接收要使用的选项的名称，以及要激活的标题元素的索引（从零开始的）编号。在本示例中，我们通过返回文本输入的值来获得要激活的标题。我们使用JavaScript的`parseInt()`函数将其转换为整数，因为`val()`
    jQuery方法返回字符串。
- en: If an index number that doesn't exist is specified, nothing will happen. The
    first header will be activated if no index is specified. If a value other than
    an integer is specified, nothing will happen; the script will fail silently, without
    any errors, and the accordion will continue to function as normal.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 如果指定了不存在的索引号，则不会发生任何事情。如果未指定索引，则将激活第一个标题。如果指定了除整数以外的值，则不会发生任何事情；脚本将静默失败，而不会出现任何错误，并且手风琴将继续正常工作。
- en: Adding or removing panels
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加或删除面板
- en: Prior to Version 1.10, the only way you could change the number of panels in
    an accordion was to destroy it and reinitialize a new instance. While this worked,
    it was not a satisfactory way to implement any changes, with this in mind the
    jQuery team have worked hard to introduce a new method, which brings it in line
    with other widgets, which don't require recreating in order to change any configured
    options. Let's test this method using an input button, to create our new panels.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在1.10版本之前，更改手风琴中面板数量的唯一方法是销毁它并重新初始化一个新实例。虽然这样做可以，但这不是实施任何更改的满意方式，考虑到这一点，jQuery团队努力介绍了一种新方法，该方法使其与其他小部件保持一致，这些小部件不需要重新创建即可更改任何已配置的选项。让我们使用输入按钮来测试这种方法，以创建我们的新面板。
- en: 'In `accordion13.html`, change the markup immediately below the accordion to
    the following code:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在`accordion13.html`中，将手风琴下面的标记更改为以下代码：
- en: '[PRE22]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Alter the `<script>` block, so it appears as follows:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 修改`<script>`块，使其如下所示：
- en: '[PRE23]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Save the new file as `accordion14.html`. In this example, we've created the
    additional markup content for a new accordion panel, which we assign to the `newDiv`
    variable. This we append to the myAccordion `<div>`, which is then refreshed using
    accordion's `refresh` method. This does not require any arguments.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 将新文件保存为`accordion14.html`。在本示例中，我们已经为新的手风琴面板创建了额外的标记内容，并将其分配给`newDiv`变量。然后我们将其附加到`myAccordion`
    `<div>`，然后使用手风琴的`refresh`方法刷新它。这不需要任何参数。
- en: Note
  id: totrans-169
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: We've specified the default text to be used within the markup for each accordion
    panel. This could easily be altered to include whatever text you need, as long
    as the same markup is maintained.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已指定在每个手风琴面板的标记中使用的默认文本。只要保持相同的标记，就可以轻松修改为包含所需文本，这是可以的。
- en: 'When the page loads, we can click on **Add Accordion** to add any number of
    new accordion panels, as shown in the following screenshot:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 页面加载时，我们可以单击**Add Accordion**以添加任意数量的新手风琴面板，如下图所示：
- en: '![Adding or removing panels](img/2209OS_04_06.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![添加或删除面板](img/2209OS_04_06.jpg)'
- en: 'However, if we need to remove an accordion panel, this involves a little more
    work—the markup comes in two parts (header and panel), so we have to remove both
    separately. Alter the markup immediately below the accordion:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果我们需要删除手风琴面板，则需要更多的工作 - 标记分为两部分（标题和面板），因此我们必须分别删除两者。修改手风琴下面的标记：
- en: '[PRE24]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Now change the `<script>` block as follows:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 现在将`<script>`块更改如下：
- en: '[PRE25]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Save the new file as `accordion15.html`; when the page loads, enter `1` and
    click on **Remove** to remove the middle header and its panel:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 将新文件保存为`accordion15.html`；页面加载时，输入`1`并单击**Remove**以删除中间标题及其面板：
- en: '![Adding or removing panels](img/2209OS_04_07.jpg)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![添加或删除面板](img/2209OS_04_07.jpg)'
- en: In this example, we obtain the accordion to remove by returning the value of
    the text input. If an index number that doesn't exist is specified, nothing will
    happen.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在本示例中，我们通过返回文本输入的值来获取要删除的手风琴。如果指定了不存在的索引号，则不会发生任何事情。
- en: We then use `eq()` to find both the header and panel to remove, based on the
    given value, once found, they are then removed. The final stage is to `refresh`
    the accordion so a new header and panel can then be selected.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们使用`eq()`根据给定的值查找要删除的标题和面板，一旦找到，它们就会被删除。最后一步是`refresh`手风琴，以便然后可以选择新的标题和面板。
- en: Resizing an accordion panel
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调整手风琴面板的大小
- en: 'Change the underlying markup for the accordion widget in `accordion10.html`
    so that the third header points to a remote text file and the third panel is empty.
    The heading element should also be given an `id` attribute:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 修改`accordion10.html`中手风琴小部件的基础标记，以便第三个标题指向一个远程文本文件，第三个面板为空。标题元素还应该有一个`id`属性：
- en: '[PRE26]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: You will see in the code that we've made reference to a text file, which will
    host our remote content. In a new file within your editor, add some dummy text,
    and save it with the name `remoteAccordion.txt`. (A copy of this file is available
    with the code download that accompanies this book).
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 您将在代码中看到，我们已经引用了一个文本文件，该文件将托管我们的远程内容。在编辑器中新建一个文件，添加一些虚拟文本，并将其保存为`remoteAccordion.txt`。
    （此书附带的代码下载中提供了此文件的副本）。
- en: 'Then change the final `<script>` element so that it appears as follows:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 然后将最终的`<script>`元素更改为以下形式：
- en: '[PRE27]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Save this file as `accordion16.html`. To view this example correctly, you will
    need to have installed a local web server, such as WAMP (for PC), or MAMP (Mac),
    otherwise the contents of the `remoteAccordion.txt` file will not be rendered.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 将此文件保存为`accordion16.html`。要正确查看此示例，您需要安装本地Web服务器，如WAMP（对于PC）或MAMP（Mac），否则将不会呈现`remoteAccordion.txt`文件的内容。
- en: In our configuration object, we use the `beforeActivate` event to check whether
    the `id` of the element matches the `id` we gave to our remote accordion heading.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的配置对象中，我们使用`beforeActivate`事件来检查元素的`id`是否与我们给远程手风琴标题的`id`匹配。
- en: If it does, we get the contents of the text file specified in the `href` attribute
    of the `<a>` element, using jQuery's `get()` method. If the request returns successfully,
    we add the contents of the text file to the empty panel after the header. This
    all happens before the panel opens.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 如果是这样，我们使用jQuery的`get()`方法获取`<a>`元素的`href`属性中指定的文本文件的内容。如果请求成功返回，我们在标题之后将文本文件的内容添加到空面板中。所有这些都发生在面板打开之前。
- en: We then use the `activate` event to call the `refresh` method on the accordion,
    after the panel has opened.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们使用`activate`事件在面板打开后调用手风琴的`refresh`方法。
- en: When we run the page in a browser, the contents of the remote text file should
    be sufficient to cause a scroll bar to appear within the content panel. Calling
    the `refresh` method allows the widget to readjust itself, so that it can contain
    all of the newly added content without displaying the scroll bar.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在浏览器中运行页面时，远程文本文件的内容应足以导致内容面板内出现滚动条。调用`refresh`方法可以使小部件重新调整自身，以便它可以容纳所有新添加的内容而不显示滚动条。
- en: You will have seen from the code that we've used the `newHeader` property in
    two places; one as a part of loading the content, and the second to refresh the
    panel once content has been added. Let us explore this for a moment, as it is
    a key part of how we can access content in any accordion.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 从代码中可以看出，我们在两个地方使用了`newHeader`属性；一个是作为加载内容的一部分，另一个是刷新面板一旦内容被添加后。让我们探讨一下这一点，因为这是我们如何访问任何手风琴中的内容的关键部分。
- en: 'The `ui` object contains four properties that allow us to access the content
    within the header or panel of any accordion that has been added to a page. The
    full list is as follows:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '`ui`对象包含四个属性，允许我们访问已添加到页面上的任何手风琴的标题或面板中的内容。完整列表如下：'
- en: '| Header | Access content in… |'
  id: totrans-194
  prefs: []
  type: TYPE_TB
  zh: '| 标题 | …中的内容访问 |'
- en: '| --- | --- |'
  id: totrans-195
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `ui.newHeader` | The header that was just activated |'
  id: totrans-196
  prefs: []
  type: TYPE_TB
  zh: '| `ui.newHeader` | 刚刚激活的标题 |'
- en: '| `ui.oldHeader` | The header that was just deactivated |'
  id: totrans-197
  prefs: []
  type: TYPE_TB
  zh: '| `ui.oldHeader` | 刚刚停用的标题 |'
- en: '| `ui.newPanel` | The panel that was just activated |'
  id: totrans-198
  prefs: []
  type: TYPE_TB
  zh: '| `ui.newPanel` | 刚刚激活的面板 |'
- en: '| `ui.oldPanel` | The panel that was just deactivated |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '| `ui.oldPanel` | 刚刚停用的面板 |'
- en: Once we've referenced the relevant panel or header, we are then free to manipulate
    the contents at our discretion.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们引用了相关的面板或标题，我们就可以自由地自行操作内容。
- en: Accordion interoperability
  id: totrans-201
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 手风琴的互操作性
- en: Does the accordion widget play nicely with other widgets in the library? Let's
    take a look and see whether the accordion can be combined with the widget from
    the previous chapter, the tabs widget.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 手风琴小部件是否与库中的其他小部件很好地协作？让我们看一看手风琴是否可以与上一章的小部件——选项卡小部件结合使用。
- en: 'Change the underlying markup for the accordion so that the third content panel
    now contains the markup for a set of tabs, and the third heading no longer points
    to the remote text file:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 修改手风琴的基础标记，以便第三个内容面板现在包含选项卡的标记，并且第三个标题不再指向远程文本文件：
- en: '[PRE28]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'We should also link to the source file for the tabs widget after the accordion''s
    source file; add this line immediately below the call to `jquery.ui.widget.js`
    in your code:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还应该在手风琴的源文件之后链接到选项卡小部件的源文件；在您的代码中，在对`jquery.ui.widget.js`的调用下方立即添加此行：
- en: '[PRE29]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Next, change the final `<script>` element so that it appears as follows:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，将最后一个`<script>`元素更改为以下内容：
- en: '[PRE30]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Save this file as `accordion17.html`. All we've done with this file is to add
    a simple tab structure to one of the accordion's content panels. In the `<script>`
    element at the end of the page, we just call the accordion and tab's widget methods.
    No additional or special configuration is required.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 将此文件保存为`accordion17.html`。我们对此文件所做的所有操作只是向手风琴的一个内容面板添加了一个简单的选项卡结构。在页面末尾的`<script>`元素中，我们只调用手风琴和选项卡的小部件方法。不需要额外或特殊的配置。
- en: 'When the third accordion heading is activated, the page should appear as follows:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 当第三个手风琴标题被激活时，页面应该如下所示：
- en: '![Accordion interoperability](img/2209OS_04_08.jpg)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
  zh: '![手风琴互操作性](img/2209OS_04_08.jpg)'
- en: The widgets are compatible the other way round; that is, we can have an accordion
    within one of the tab's content panels without any adverse effects as well.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 小部件也是兼容的，也就是说，我们可以在选项卡的内容面板中包含一个手风琴而不会产生任何负面影响。
- en: Using multiple accordions
  id: totrans-213
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用多个手风琴
- en: We've seen how you can easily use the accordion with other widgets on the page.
    What about using multiple accordions on the same page? This is equally not a problem;
    we can have multiple accordions on the same page, as long as we configure the
    call(s) to the accordion properly.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到如何在页面上轻松使用手风琴与其他小部件。那么在同一页上使用多个手风琴呢？同样也不是问题；我们可以在同一页上拥有多个手风琴，只要我们正确地配置对手风琴的调用(s)即可。
- en: 'In your text editor, add the following markup immediately below the existing
    block in `accordion1.html`:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的文本编辑器中，在`accordion1.html`的现有块之下立即添加以下标记：
- en: '[PRE31]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'We need to allow for the second accordion widget in our code, so adjust the
    `<script>` block as follows:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要在我们的代码中允许第二个手风琴小部件，因此请按如下方式调整`<script>`块：
- en: '[PRE32]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Save the file as `accordion18.html`. If we preview the results in our browser,
    you should see something as follows:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 将文件保存为`accordion18.html`。如果我们在浏览器中预览结果，应该会看到如下内容：
- en: '![Using multiple accordions](img/2209OS_04_09.jpg)'
  id: totrans-220
  prefs: []
  type: TYPE_IMG
  zh: '![使用多个手风琴](img/2209OS_04_09.jpg)'
- en: All we've done is to duplicate the existing markup for the first accordion;
    the trick is in how we initiate the second accordion functionality within our
    script.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 我们所做的只是复制第一个手风琴的现有标记；关键是如何在我们的脚本中启动第二个手风琴功能。
- en: Throughout this book, we've used selector IDs to initiate our accordions; this
    is perfect, particularly when there is only one accordion on the page. If we have
    multiple accordions on the same page (or even in the same website), this can become
    clumsy, as we are duplicating code unnecessarily.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们已经使用选择器ID来启动我们的手风琴；这是完美的，特别是当页面上只有一个手风琴时。如果在同一页（甚至是同一个网站）上有多个手风琴，这可能会变得笨拙，因为我们不必要地重复代码。
- en: We can get around this by switching to using classes, in place of selector IDs,
    accordion can easily use either method. In our example, we've assigned a classname
    of `.myAccordion` to both the accordions. We've then used this to initiate the
    call to `.accordion()` in our script. This allows us to share common functionality
    throughout multiple accordions, without duplicating code.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过切换到使用类来解决这个问题，而不是使用选择器ID，手风琴可以很容易地使用两种方法中的任何一种。在我们的示例中，我们为两个手风琴都分配了一个类名`.myAccordion`。然后，我们在脚本中使用它来初始化对`.accordion()`的调用。这允许我们在多个手风琴中共享通用功能，而不会重复代码。
- en: If we need to override the configuration for one or more of these accordions
    though, we can do this by adding a second separate class to our markup, in this
    instance, we want to change the second accordion to use **+** and **–** icons,
    in place of arrowheads.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们需要覆盖其中一个或多个手风琴的配置，我们可以通过将第二个单独的类添加到我们的标记中来实现这一点，在这种情况下，我们希望更改第二个手风琴以使用**+**和**–**图标，而不是箭头。
- en: To implement this, the second accordion has been assigned the `.myAccordion
    .two` classes. The second class is then used as the basis for the call to a second
    `accordion()` instance; this overrides the original configuration, but only for
    those accordions that have the additional `.two` class assigned to them. We can
    then extend this principle to apply to any other accordion that should have different
    functionality to the first by adding a second class to the accordion's markup.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这一点，第二个手风琴被分配了`.myAccordion .two`类。然后，第二个类被用作调用第二个`accordion()`实例的基础；这会覆盖原始配置，但仅适用于那些被分配了额外`.two`类的手风琴。然后，我们可以通过向手风琴的标记中添加第二个类来扩展这个原则，以使任何其他应具有不同功能的手风琴也适用于此原则。
- en: Summary
  id: totrans-226
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We first looked at what the accordion does and how it is targeted by the CSS
    framework. We then moved on to look at the configurable options that can be used
    to change the behavior of the accordion, such as specifying an alternative heading
    to be open by default, or setting the event that triggers the opening of a content
    drawer.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先了解了手风琴的作用以及它如何被 CSS 框架所针对。然后，我们继续查看了可配置选项，这些选项可用于更改手风琴的行为，比如指定默认打开的替代标题，或设置触发内容抽屉打开的事件。
- en: Along with configurable options, we saw that the accordion exposes several custom
    events. Using them, we can specify callback functions during configuration, or
    bind to them after configuration to execute additional functionality, in reaction
    to different things happening to the widget.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 除了可配置选项，我们还发现手风琴暴露了几个自定义事件。通过使用它们，我们可以在配置期间指定回调函数，或者在配置后绑定到它们，以在小部件发生不同事情时执行额外功能。
- en: Next, we looked at the accordion's default animation and how we can animate
    the opening of content panels, using easing effects. We saw that to make use of
    non-standard animations or easing effects, the `jquery.ui.effect.js` file needs
    to be included along with the requisite custom effect file.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们看了手风琴的默认动画以及如何使用缓动效果来实现内容面板的展开动画。我们发现，要使用非标准的动画或缓动效果，需要将`jquery.ui.effect.js`文件与所需的自定义效果文件一起包含进来。
- en: In addition to looking at these options, we also saw that there are a range
    of methods which can be called on the accordion to make it do things programmatically.
    In the next chapter, we get to play with the dialog widget, which allows us to
    create a flexible, highly configurable overlay that floats above the page and
    displays any content we specify.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 除了查看这些选项之外，我们还发现手风琴可以调用一系列方法来在程序中控制它的行为。在下一章中，我们将开始使用对话框小部件，这使我们能够创建一个灵活的、高度可配置的浮动层，该层浮动在页面上方并显示我们指定的任何内容。
