["```js\ngit clone https://github.com/PacktPublishing/React-Application-Architecture-for-Production.git\n```", "```js\nnpm install\n```", "```js\ncp .env.example .env\n```", "```js\nnpm run stage:switch\n```", "```js\n? What stage do you want to switch to? (Use arrow\n keys)\n❯ chapter-02\n  chapter-03\n  chapter-03-start\n  chapter-04\n  chapter-04-start\n  chapter-05\n  chapter-05-start\n(Move up and down to reveal more choices)\n```", "```js\nnpx create-next-app@latest jobs-app --typescript\n```", "```js\n- .next\n- public\n- src\n  - pages\n    - _app.tsx\n    - index.tsx\n- next.config.js\n- package.json\n```", "```js\n{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"noEmit\": true,\n    \"esModuleInterop\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"Node\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"jsx\": \"preserve\",\n    \"incremental\": true,\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"@/*\": [\"./src/*\"]\n    }\n  },\n  \"include\": [\"next-env.d.ts\", \"src\"],\n  \"exclude\": [\"node_modules\"]\n}\n```", "```js\n   \"baseUrl\": \".\",\n    \"paths\": {\n      \"@/*\": [\"./src/*\"]\n    }\n```", "```js\nimport { Component } from '../../../components/component'\n```", "```js\nimport { Component } from '@/components/component'\n```", "```js\nlet numberVar: number;\nnumberVar = 1 // OK\nnumberVar = \"1\" // Error\nlet stringVar: string;\nstringVar = \"Hi\"; // OK\nstringVar = false; // Error\nlet stringVar: string;\nstringVar = \"Hi\"; // OK\nstringVar = false; // Error\n```", "```js\nlet anyVar: any;\nanyVar = 1; // OK\nanyVar = \"Hello\" // OK\nanyVar = true; // OK\nnumberVar = anyVar; // OK\n```", "```js\nlet unknownVar: unknown;\nunknownVar = 1; // OK\nunknownVar = \"123\" // OK\nlet unknownVar2: unknown;\nunknownVar = unknownVar2; // OK\nanyVar = unknownVar2; // OK\nnumberVar = unknownVar2; // Error\nstringVar = unknownVar2; // Error\nbooleanVar = unknownVar2; // Error\n```", "```js\ntype numbers = number[]\ntype strings = Array<string>\n```", "```js\ntype Person = {\n  name: string;\n  age: number;\n}\ninterface Person {\n  name: string;\n  age: number;\n}\n```", "```js\ntype Content = string | number;\nlet content: Content;\ncontent = 1 // OK\ncontent = \"Hi\"; // OK\ncontent = false // Error\n```", "```js\ntype Color = \"red\" | \"green\" | \"blue\";\nlet color: Color;\ncolor = \"red\" // OK\ncolor = \"yellow\" // Error\n```", "```js\ntype Foo = {\n  x: string;\n  y: number;\n}\ntype Bar = {\n  z: boolean;\n}\ntype FooBar = Foo & Bar;\n```", "```js\ntype Foo = {\n  x: number;\n}\n```", "```js\ntype Foo = {\n  x: string;\n}\n```", "```js\ntype Foo<T> = {\n  x: T;\n}\nlet x: Foo<number>;\nlet y: Foo<string>;\n```", "```js\nfunction logger<T>(value: T) {\n  console.log(value)\n}\nlogger<number>(1) // OK\nlogger<string>(1); // Error\n```", "```js\ntype InfoProps = {\n  name: string;\n  age: number\n};\nconst Info = (props: InfoProps) => {\n  return <div>{props.name}-{props.age}</div>;\n};\n```", "```js\n\"lint\": \"eslint --ext .ts,.tsx ./src\",\n```", "```js\n\"prettier\": \"prettier \\\"**/*.+(json|ts|tsx)\\\"\",\n\"format:check\": \"npm run prettier -- --check\",\n\"format:fix\": \"npm run prettier -- --write\",\n```", "```js\nnpm install –-save-dev husky lint-staged\n```", "```js\nnpx husky install\n```", "```js\nnpx husky add .husky/pre-commit \"npx lint-staged\"\n```", "```js\nmodule.exports = {\n  '*.{ts,tsx}': [\n    'npm run lint',\n    \"bash -c 'npm run types:check'\",\n    'npm run format:check',\n  ],\n};\n```", "```js\n- components // (1)\n- config // (2)\n- features // (3)\n- layouts // (4)\n- lib // (5)\n- pages // (6)\n- providers // (7)\n- stores // (8)\n- testing // (9)\n- types // (10)\n- utils // (11)\n```", "```js\n- api // (1)\n- components // (2)\n- types // (3)\n- index.ts // (4)\n```", "```js\nimport {JobsList} from '@/features/jobs'\n```", "```js\nimport {JobsList} from '@/features/jobs/components/jobs-\n  list'\n```", "```js\nrules: {\n    'no-restricted-imports': [\n      'error',\n      {\n        patterns: ['@/features/*/*'],\n      },\n    ],\n    'import/no-cycle': 'error',\n      … rest of the eslint rules\n}\n```"]