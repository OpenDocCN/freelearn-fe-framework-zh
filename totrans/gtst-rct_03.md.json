["```js\nvar GreetingsComponent = React.createClass({\n  render: function() {\n    return (\n      <h1>Hello {this.props.name}!</h1>\n    );\n  }\n});\n\nReact.render(<GreetingsComponent name=\"Readers\" />, document.body);\n// instead of rendering on the body rendering in a specific id ('app)\nReact.render(<GreetingsComponent name=\"Folks\" />, document.getElemenById('app'));\n\n```", "```js\nvar CustomInput = React.createClass({\n  render: function() {\n    return (\n      <input type=\"text\" value={this.props.text} />\n    );\n  }\n});\n\nReact.render(<CustomInput text=\"Learning ReactJS\" />, document.body);\n```", "```js\n    var TaskItem = React.createClass({\n      render: function() {\n        var task = this.props.task;\n\n        return (\n          <li>\n            <span>{task.name}</span>\n            <div>\n              <input type=\"checkbox\"\n\n                   if (task.completed) {checked = \"checked\";} else { checked =  \"\";}\n                onChange={this.props.markTaskComplete\n\n              <button onClick={this.props.removeTask}>Remove</button>\n            </div>\n          </li>\n        );\n      }\n    });\n    ```", "```js\n    var TaskList = React.createClass({\n      markTaskCompleted: function (task) {\n        console.log('task ' + task.name + ' has been completed!');\n      },\n\n      removeTask: function (task) {\n        console.log('task ' + task.name + ' has been removed!');\n      },\n\n      render: function() {\n    /*The map() method creates a new array with the results of calling a provided     function on every element in this array. Here this.props.tasks will create a new array, with the callback as task. (source  HYPERLINK \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map HYPERLINK \"\").  */\n        var taskItems = this.props.tasks.map(function (task) {\n          return <TaskItem task={task}\n                           markTaskCompleted={this.markTaskCompleted}\n                           removeTask={this.removeTask} />;\n        }.bind(this));\n    /*The bind() method creates a new function that, when called, has its this keyword set to the provided value, with a given sequence of arguments (if any) this (source  HYPERLINK \"https://developer.mozilla.org/en-\n    US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind). .bind is used in this case to simply more arguments and esnsure a parent chind relationship, which is not new to ReactJS but a concenpt of core Javascript. */\n        return (\n          <ul>\n            {taskItems}\n          </ul>\n        );\n      }\n    });\n    ```", "```js\nvar tasks = [\n  { name: 'Write this book with love <3', completed: false },\n  { name: 'Learn isomorphic web apps', completed: false },\n  { name: 'Study FLUX architecture', completed: true },\n];\n\nReact.render(<TaskList tasks={tasks} />, document.body);\n```", "```js\n<script>\n  window.fbAsyncInit = function() {\n    FB.init({\n      appId      : '784445024959168',\n      xfbml      : true,\n      version    : 'v2.2'\n    });\n  };\n\n  (function(d, s, id){\n     var js, fjs = d.getElementsByTagName(s)[0];\n     if (d.getElementById(id)) {return;}\n     js = d.createElement(s); js.id = id;\n\n     js.src = \"//connect.facebook.net/en_US/sdk/debug.js\";\n     fjs.parentNode.insertBefore(js, fjs);\n   }(document, 'script', 'facebook-jssdk'));\n</script>\n```", "```js\n<html>\n  <head>\n    <title>Rahh</title>\n    <script src=\"img/react-0.12.2.js\"></script>\n    <script src=\"img/JSXTransformer-0.12.2.js\"></script>\n  </head>\n  <body>\n\n    <h1>Facebook User's list of likes</h1>\n    <a onClick='logout()' href='#'>Logout</a>\n    <div id=\"main\"></div>\n\n    <script>\n      window.fbAsyncInit = function() {\n        FB.init({\n          appId      : '784445024959168',\n          xfbml      : true,\n          version    : 'v2.2'\n        });\n\n        checkLoginStatusAndLoadUserLikes();\n      };\n\n      (function(d, s, id){\n         var js, fjs = d.getElementsByTagName(s)[0];\n         if (d.getElementById(id)) {return;}\n         js = d.createElement(s); js.id = id;\n         //js.src = \"//connect.facebook.net/en_US/sdk.js\";\n         js.src = \"//connect.facebook.net/en_US/sdk/debug.js\";\n         fjs.parentNode.insertBefore(js, fjs);\n       }(document, 'script', 'facebook-jssdk'));\n    </script>\n\n    <script type=\"text/jsx\" src=\"img/index.jsx\"></script>\n  </body>\n</html>\n```", "```js\nfunction logout() {\n  FB.logout();\n}\n```", "```js\nfunction checkLoginStatusAndLoadUserLikes() {\n  FB.login(function(response) {\n    console.log('We are live!!');\n  });\n}\n```", "```js\nnpm -g install httpster\n\n```", "```js\nfunction checkLoginStatusAndLoadUserLikes() {\n  FB.getLoginStatus(function(response) {\n    if (response.status === 'connected') {\n      loadUserAndLikes();\n    } else {\n      loginAndLoadUserLikes();\n    }\n  });\n}\n```", "```js\nfunction loginAndLoadUserLikes() {\n  FB.login(function(response) {\n    loadUserAndLikes();\n  }, {scope: 'user_likes'});\n}\n```", "```js\nfunction loadUserAndLikes() {\n  FB.api('/me', function(userResponse) {\n    console.log(1, userResponse);\n    FB.api('/me/likes', function(likesResponse) {\n      console.log(2, likesResponse);\n    });\n  });\n}\n```", "```js\n<h1>Facebook User's list of likes</h1>\n<div id=\"user\"></div>\n<div id=\"main\"></div>\n```", "```js\nvar UserDetails = React.createClass({\n    handleLogout: function () {\n    FB.logout(function () {\n      alert(\"You're logged out, refresh the page in order to login again.\");\n    });\n  }\n  render: function () {\n    return (\n      <section id=\"user-details\">\n        <a href={this.props.userDetails.link} target=\"__blank\">\n          {this.props.userDetails.name}\n        </a>\n        {' | '}\n        <a href=\"#\" onClick={this.handleLogout}>Logout</a>\n      </section>\n    )\n  },\n});\n```", "```js\nfunction loadUserAndLikes () {\n  FB.api('/me', function (userResponse) {\n    React.render(<UserDetails userDetails={userResponse} />, document.getElementById('user'));\n\n    FB.api('/me/likes', function (likesResponse) {\n      console.log(2, likesResponse);\n    });\n  });\n}\n```", "```js\nvar UserLikesList = React.createClass({\n  render: function() {\n    var items = this.props.list.map(function (likeObject) {\n      return <UserLikeItem data={likeObject} />;\n    });\n\n    return (\n      <ul id=\"user-likes-list\">\n        {items}\n      </ul>\n    );\n  }\n});\n```", "```js\nvar UserLikeItem = React.createClass({\n  render: function() {\n    var data = this.props.data;\n\n    return (\n      <li>\n        <img src={data.picture.data.url} title={data.name} />\n\n        <h1>{data.name} <small>{data.category}</small></h1>\n      </li>\n    );\n  }\n});\n```", "```js\nfunction loadUserAndLikes () {\n  FB.api('/me', function (userResponse) {\n    React.render(<UserDetails userDetails={userResponse} />, document.getElementById('user'));\n\n var fields = { fields: 'category,name,picture.type(normal)' };\n FB.api('/me/likes', fields, function (likesResponse) {\n React.render(<UserLikesList list={likesResponse.data} />, document.getElementById('main'));\n });\n  });\n}\n```", "```js\n<style>\n  #user-likes-list {\n    list-style: none;\n    padding: 5px;\n    margin: 0;\n  }\n  #user-likes-list li {\n    display: inline-block;\n    width: 270px;\n    margin: 5px;\n    background-color: rgb(122, 174, 233);\n    height: 100px;\n    overflow: hidden;\n  }\n  #user-likes-list img {\n    display: inline-block;\n    vertical-align: top;\n    width: 100px;\n  }\n  #user-likes-list h1 {\n    font-size: 1.4em;\n    display: inline-block;\n    width: 160px;\n    vertical-align: top;\n    margin-left: 5px;\n    color: rgb(20, 90, 169);\n    margin: 5px 0 0 5px;\n  }\n  #user-likes-list small {\n    font-size: 0.7em;\n    display: block;\n    color: rgb(145, 50, 0);\n    margin-top: 5px;\n  }\n</style>\n```"]