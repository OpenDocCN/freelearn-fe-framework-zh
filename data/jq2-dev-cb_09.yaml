- en: Chapter 9. jQuery UI
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第九章 jQuery UI
- en: 'In this chapter, we will cover:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖：
- en: Creating stylish and functional buttons
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建时尚且功能性的按钮
- en: Creating dialog boxes for user information and input
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建用户信息和输入对话框
- en: Implementing progress bars within your application
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在应用程序中实现进度条
- en: Adding date picker interfaces to input boxes quickly
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速向输入框添加日期选择器界面
- en: Creating an autocomplete search feature
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建自动完成搜索功能
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: jQuery UI is a user interface library that is built on top of the jQuery JavaScript
    library. jQuery UI provides many interactive plugins, effects, and interface elements
    that the developer can use within their interfaces. This chapter will demonstrate
    jQuery UI's most common elements such as buttons and date pickers and show you
    how to add them to your website or web application quickly.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery UI 是建立在 jQuery JavaScript 库之上的用户界面库。jQuery UI 提供了许多交互式插件、效果和界面元素，开发人员可以在其界面中使用。本章将演示
    jQuery UI 的最常见元素，如按钮和日期选择器，并向您展示如何快速将它们添加到您的网站或 Web 应用程序中。
- en: Before you start this chapter, ensure that you have visited [http://jqueryui.com/](http://jqueryui.com/)
    and downloaded the jQuery UI library. Download the library via the **Download
    Builder** on their website; make sure all the default options remain selected.
    The version of jQuery UI that is used in this chapter is v1.10.3, but most recipes
    will work with newer versions. Their website also provides a wealth of documentation
    and examples to get you started with jQuery UI.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始本章之前，请确保您已访问过[http://jqueryui.com/](http://jqueryui.com/)并下载了 jQuery UI 库。通过他们网站上的**Download
    Builder**下载库；确保所有默认选项保持选中状态。本章中使用的 jQuery UI 版本为 v1.10.3，但大多数示例也适用于更新版本。他们的网站还提供了丰富的文档和示例，帮助您快速入门
    jQuery UI。
- en: To start with the recipes in this chapter, create an easily accessible folder
    named `chapter9` and place the jQuery library inside it. Create a subfolder named
    `jquery-ui`, and place the `css` and `js` folders from the jQuery UI library inside
    this subfolder.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始本章的示例，请创建一个名为 `chapter9` 的易于访问的文件夹，并将 jQuery 库放入其中。创建一个名为 `jquery-ui` 的子文件夹，并将
    jQuery UI 库的 `css` 和 `js` 文件夹放入此子文件夹。
- en: Creating stylish and functional buttons
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建时尚且功能性的按钮
- en: It is relatively easy to create stylish buttons quickly with CSS3, but adding
    additional functionality often requires more investment in terms of time. jQuery
    UI provides a button API that can be used to create a wide range of button controls,
    which can be easily added to UIs and interacted with inside JavaScript code. This
    recipe shows you how to create common button controls so that you can re-use the
    code at your convenience.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 CSS3 快速创建时尚按钮相对容易，但要添加额外的功能通常需要更多的时间投入。jQuery UI 提供了一个按钮 API，可用于创建各种按钮控件，这些控件可以轻松添加到
    UI 中，并在 JavaScript 代码中进行交互。本示例演示了如何创建常见的按钮控件，以便您可以在需要时重新使用代码。
- en: Getting ready
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Inside the `chapter9` folder that was created earlier, create `recipe-1.html`
    and `recipe-1.js`.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前创建的 `chapter9` 文件夹中，创建 `recipe-1.html` 和 `recipe-1.js`。
- en: How to do it…
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'To create a range of different button controls using the jQuery UI library,
    perform the following steps:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 jQuery UI 库创建一系列不同的按钮控件，执行以下步骤：
- en: 'Add the following HTML code to `recipe-1.html` in order to add various button
    elements, ensuring that you update the references to the jQuery and jQuery UI
    libraries where required:'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了添加各种按钮元素，请将以下 HTML 代码添加到 `recipe-1.html` 中，确保在必要时更新对 jQuery 和 jQuery UI 库的引用：
- en: '[PRE0]'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Add the following jQuery code to `recipe-1.js` in order to apply UI styling
    and functionality to the button elements:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下 jQuery 代码添加到 `recipe-1.js` 中，以将 UI 样式和功能应用于按钮元素：
- en: '[PRE1]'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Open `recipe-1.html` in a web browser and you will be presented with various
    button elements styled with the default jQuery UI theme.![How to do it…](img/08960S_09_01.jpg)
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Web 浏览器中打开 `recipe-1.html`，您将看到用默认 jQuery UI 主题样式化的各种按钮元素。![如何做…](img/08960S_09_01.jpg)
- en: How it works…
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: 'HTML provides a range of different button elements that can be used by the
    jQuery UI button API. By looking at this web page, you will be able to see how
    the following elements work and re-use the code at your convenience:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: HTML 提供了一系列不同的按钮元素，可以通过 jQuery UI 按钮 API 使用。通过查看此网页，您将能够了解以下元素的工作原理，并在需要时重新使用代码：
- en: Default buttons that include `a`, `input`, and `button` elements
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包括 `a`、`input` 和 `button` 元素的默认按钮
- en: Default buttons with options such as custom labels, icons, and disabled
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认按钮及其选项，如自定义标签、图标和禁用
- en: Buttons sets that allow for checkbox and radio button functionality
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许复选框和单选按钮功能的按钮集
- en: Events on buttons
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按钮上的事件
- en: 'To initialize the jQuery UI button API, select a button or a set of button
    elements in the typical jQuery way and use the `button()` function, shown as follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 要初始化 jQuery UI 按钮 API，请以典型的 jQuery 方式选择按钮或一组按钮元素，并使用 `button()` 函数，如下所示：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This will apply the jQuery UI CSS and additional functionality to the selected
    buttons. The `button()` function also takes a range of options in order to allow
    you to individually manipulate the button elements. This is shown in the `Button
    options` section in `recipe-1.js`.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这将为所选按钮应用 jQuery UI CSS 和附加功能。`button()` 函数还接受一系列选项，以便您可以单独操作按钮元素。这在 `recipe-1.js`
    中的 `Button options` 部分中显示。
- en: 'By grouping buttons within the HTML code and using the `buttonset()` function,
    you can create a set of buttons that work together to form a checkbox or radio
    button functionality, shown as follows:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在 HTML 代码中分组按钮，并使用 `buttonset()` 函数，您可以创建一组按钮，这些按钮共同形成复选框或单选按钮功能，如下所示：
- en: '[PRE3]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You can still interact with the HTML button elements using normal jQuery to
    attach events and perform actions. With this recipe, the button labeled **Enable/Disable**
    has a click event handler attached, shown as follows:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 您仍然可以使用正常的 jQuery 与 HTML 按钮元素进行交互，以附加事件并执行操作。使用此配方，标记为**启用/禁用**的按钮具有附加的点击事件处理程序，如下所示：
- en: '[PRE4]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This uses the `button('option')` functionality provided by jQuery UI to check
    the disabled state of the button and then set it to `true` or `false` based on
    its current state. With `recipe-1.html` open in a web browser, clicking on this
    button will visually enable and disable the button labeled **Button 4**. Note
    that in the above example, the `click()` function can be chained after the `button()`
    function for convenience.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这使用了 jQuery UI 提供的 `button('option')` 功能来检查按钮的禁用状态，然后根据其当前状态将其设置为 `true` 或 `false`。在打开的
    Web 浏览器中的 `recipe-1.html` 中，单击此按钮将视觉上启用和禁用标记为**按钮 4**的按钮。请注意，在上面的示例中，可以在 `button()`
    函数后方便地链接 `click()` 函数。
- en: There's more…
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多内容…
- en: There are more button types available as part of the jQuery UI library. Head
    over to the documentation provided on their website ([http://jqueryui.com/button/](http://jqueryui.com/button/))
    for simple examples and more detail.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery UI 库提供了更多类型的按钮。转到其网站提供的文档（[http://jqueryui.com/button/](http://jqueryui.com/button/)）了解简单示例和更多详细信息。
- en: See also
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '*Creating dialog boxes for user information and input*'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*为用户信息和输入创建对话框*'
- en: Creating dialog boxes for user information and input
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为用户信息和输入创建对话框
- en: In [Chapter 6](ch06.html "Chapter 6. User Interface"), *User Interface*, you
    were shown how to create your own modal pop ups. jQuery UI provides an easy-to-use
    API that helps you to quickly add modals or dialogs to your application. This
    recipe will look at the default behavior of jQuery UI's dialogs and show you how
    to use them. Once again, this recipe is designed so that you can easily find the
    code you need and re-use it at your convenience.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第 6 章](ch06.html "第 6 章。用户界面")，*用户界面*中，您已经学会了如何创建自己的模态弹出窗口。jQuery UI 提供了一个易于使用的
    API，帮助您快速地向应用程序添加模态或对话框。这个配方将研究 jQuery UI 对话框的默认行为，并向您展示如何使用它们。再次强调，这个配方旨在让您能够轻松找到所需的代码，并在方便时重用它。
- en: Getting ready
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In the `chapter9` folder, create `recipe-2.html` and `recipe-2.js` and have
    them open and ready for editing.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `chapter9` 文件夹中，创建 `recipe-2.html` 和 `recipe-2.js` 并打开它们以供编辑。
- en: How to do it…
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'To understand how to quickly add dialogs or modals to your application, perform
    the following steps:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解如何快速向应用程序添加对话框或模态，请执行以下步骤：
- en: 'Add the following HTML to `recipe-2.html` in order to create the button and
    dialog elements for use within the JavaScript code:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下 HTML 添加到 `recipe-2.html` 中，以便在 JavaScript 代码中使用按钮和对话框元素：
- en: '[PRE5]'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Add the following JavaScript code to `recipe-2.js` in order to initialize the
    dialog elements and buttons that open them:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下 JavaScript 代码添加到 `recipe-2.js` 中，以初始化打开对话框的对话框元素和按钮：
- en: '[PRE6]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Open `recipe-2.html` in a web browser and you will be presented with the default
    dialog already open. Use the buttons within the button set to open a variety of
    other dialog types.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Web 浏览器中打开 `recipe-2.html`，您将看到默认对话框已经打开。使用按钮集中的按钮打开各种其他对话框类型。
- en: How it works…
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: As with the previous recipe, the HTML code creates the elements that the jQuery
    UI library will use to apply the required functionality and styling. There are
    four dialog elements in the page and three buttons that open the additional dialogs.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 与前面的食谱一样，HTML代码创建了jQuery UI库将用于应用所需功能和样式的元素。页面中有四个对话框元素和三个按钮，用于打开附加对话框。
- en: 'The JavaScript code initializes each of the dialog elements, in turn providing
    different options and settings. The first dialog element, `#default-dialog`, is
    initialized with no options by simply using the following jQuery UI code:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript代码依次初始化每个对话框元素，提供不同的选项和设置。第一个对话框元素`#default-dialog`通过简单地使用以下jQuery
    UI代码而不使用任何选项进行初始化：
- en: '[PRE7]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This will turn the `#default-dialog` HTML element into a jQuery UI dialog and
    display it on the screen.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这将把`#default-dialog` HTML元素转换为jQuery UI对话框，并在屏幕上显示它。
- en: 'The second dialog is initialized with the `autoOpen` option set to `false`,
    so it will not be automatically opened when the user first visits the page. To
    open this dialog, the user must click on the button labeled **Open Second Dialog
    with Animation**. The second dialog has some animation options provided, shown
    as follows:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个对话框初始化时，`autoOpen`选项设置为`false`，因此当用户首次访问页面时不会自动打开。要打开此对话框，用户必须单击标有**Open
    Second Dialog with Animation**的按钮。第二个对话框提供了一些动画选项，如下所示：
- en: '[PRE8]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This will ensure that the fade animation is used when the dialog is opened and
    the explode animation is used when the dialog is closed. Read the jQuery UI dialog
    documentation ([http://api.jqueryui.com/dialog/](http://api.jqueryui.com/dialog/))
    to discover the available animations that you can use.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这将确保在打开对话框时使用淡入动画，并在关闭对话框时使用爆炸动画。阅读jQuery UI对话框文档([http://api.jqueryui.com/dialog/](http://api.jqueryui.com/dialog/))，以发现可用的动画效果。
- en: 'The third dialog is a modal dialog. By simply adding the `modal: true` option
    to the `dialog()` function when the modal is opened, a backdrop that obscures
    the view from the rest of the page is added.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '第三个对话框是一个模态对话框。只需在打开模态时将`modal: true`选项添加到`dialog()`函数中，即可添加一个遮罩，遮挡页面的其余部分视图。'
- en: 'The fourth dialog in this recipe is a confirmation dialog. Using the buttons
    option, you can specify a number of buttons and callback to hold the button actions,
    shown as follows:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱中的第四个对话框是一个确认对话框。使用按钮选项，您可以指定一些按钮和回调来保存按钮操作，如下所示：
- en: '[PRE9]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The resize option is also set to `false` to override the default behavior of
    allowing the user to be able to change the size of the dialog.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 将`resize`选项设置为`false`，以覆盖允许用户更改对话框大小的默认行为。
- en: There's more…
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: By reading the documentation ([http://api.jqueryui.com/dialog/](http://api.jqueryui.com/dialog/)),
    you will find more dialog types at your disposal. The form dialog is particularly
    useful to quickly retrieve user input with built-in validation functions.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 通过阅读文档([http://api.jqueryui.com/dialog/](http://api.jqueryui.com/dialog/))，您将发现更多可供选择的对话框类型。表单对话框特别有用，可以快速检索用户输入，并具有内置的验证功能。
- en: See also
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '*Creating stylish and functional buttons*'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*创建时尚和功能性按钮*'
- en: Implementing progress bars within your application
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在您的应用程序中实现进度条
- en: Progress bars allow users to have detailed information regarding a process that
    your application is performing. Progress bars are the ideal solution to update
    the user on the progress of a task that they have requested, which could take
    a long time to complete. This action could be a file upload or some other lengthy
    server-side process. This recipe will show you how to use the jQuery UI progress
    bar API to easily add progress bars to your application.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 进度条允许用户详细了解应用程序正在执行的过程。进度条是更新用户请求的任务进度的理想解决方案，该任务可能需要很长时间才能完成。此操作可以是文件上传或其他耗时的服务器端进程。本食谱将向您展示如何使用jQuery
    UI进度条API轻松地将进度条添加到您的应用程序中。
- en: Getting ready
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Create `recipe-3.html`, `recipe-3.js`, and `recipe-3.css` in the `chapter9`
    folder you created earlier.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在您之前创建的`chapter9`文件夹中创建`recipe-3.html`、`recipe-3.js`和`recipe-3.css`。
- en: How to do it…
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何实现...
- en: 'To learn how to add a progress bar into your application quickly, perform the
    following steps:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 学习如何快速将进度条添加到您的应用程序中，执行以下步骤：
- en: 'Add the following HTML code to `recipe-3.html` in order to create a web page
    with the required progress bar HTML elements:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下HTML代码添加到`recipe-3.html`中，以创建具有所需进度条HTML元素的网页：
- en: '[PRE10]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Add the following CSS code to `recipe-3.css` in order to provide some basic
    styles to the progress bar label:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了为进度条标签提供一些基本样式，将以下 CSS 代码添加到 `recipe-3.css` 中：
- en: '[PRE11]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Add the following JavaScript code to `recipe-3.js` to initialize the progress
    bar and provide functionality to the start progress button:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下 JavaScript 代码添加到 `recipe-3.js` 中，以初始化进度条并为开始进度按钮提供功能：
- en: '[PRE12]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Open `recipe-3.html` in a web browser and click on the **Start Progress** button.
    The progress bar will jump to life and begin to show you the progress until it
    has reached 100 percent.![How to do it…](img/08960S_09_02.jpg)
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在网页浏览器中打开 `recipe-3.html`，然后单击**开始进度**按钮。进度条将开始显示进度，直到达到 100%。![如何操作…](img/08960S_09_02.jpg)
- en: How it works…
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: 'The HTML page creates two elements that jQuery UI will use to create the progress
    bar and the label:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: HTML 页面创建了两个元素，jQuery UI 将使用它们来创建进度条和标签：
- en: '[PRE13]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The default label text is added into the label element, which will be displayed
    when the user first visits the web page. A **Start Progress** button has also
    been added to the web page so that the user can initiate the load action.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的标签文本被添加到标签元素中，在用户首次访问网页时将显示。网页还添加了一个**开始进度**按钮，以便用户可以启动加载操作。
- en: The load action in this recipe is simply a fake process. You could easily reuse
    this code in conjunction with an `XmlHttpRequest` for image uploads, such as the
    code that was used in the *Coding an image cropper plugin from scratch* recipe
    in [Chapter 8](ch08.html "Chapter 8. Understanding Plugin Development"), *Understanding
    Plugin Development*.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 本示例中的加载操作只是一个虚假过程。您可以轻松地将此代码与 `XmlHttpRequest` 结合使用，用于图像上传，例如在 [第 8 章](ch08.html
    "第 8 章. 理解插件开发") 的*从头开始编码图像裁剪插件*配方中使用的代码，*理解插件开发*。
- en: 'To initialize the progress bar in the `progress-bar` element that was added
    to the HTML page, the `progressbar()` function is used:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 要初始化添加到 HTML 页面中的 `progress-bar` 元素中的进度条，使用 `progressbar()` 函数：
- en: '[PRE14]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: An object with two properties is provided to this function to set up the change
    and complete the event callback functions. This allows us to perform actions when
    the progress value has changed and when the progress has been completed. In this
    recipe, we simply update the progress label to inform the user of the complete
    percent value. Ensure that you read the documentation ([http://jqueryui.com/progressbar/](http://jqueryui.com/progressbar/))
    so that you are aware of all the options available.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 提供一个具有两个属性的对象给此函数设置更改和完成事件回调函数。这使我们能够在进度值发生变化时执行操作，以及在进度完成时执行操作。在本示例中，我们只是更新进度标签，以通知用户完成的百分比值。确保您阅读文档
    ([http://jqueryui.com/progressbar/](http://jqueryui.com/progressbar/))，以便您了解所有可用的选项。
- en: By using `progressBar.progressbar("value")`, it is possible to retrieve the
    progress value from the progress bar element. This value can then be used to update
    the progress label text.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `progressBar.progressbar("value")`，可以从进度条元素中检索进度值。然后可以使用该值来更新进度标签文本。
- en: 'The `doStuff()` function, which is called when the user clicks on the **Start
    Progress** button, acts as the progress. It uses `setTimeout()` to recall itself
    every 100 milliseconds and then increments the progress bar value as follows:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户单击**开始进度**按钮时调用的 `doStuff()` 函数作为进度。它使用 `setTimeout()` 每 100 毫秒调用自身，然后按如下方式增加进度条值：
- en: '[PRE15]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: See also
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Coding an image cropper plugin from scratch* recipe in [Chapter 8](ch08.html
    "Chapter 8. Understanding Plugin Development"), *Understanding Plugin Development*
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*从头开始编码图像裁剪插件* 配方在 [第 8 章](ch08.html "第 8 章. 理解插件开发") 中，*理解插件开发*'
- en: Adding date picker interfaces to input boxes quickly
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 快速向输入框添加日期选择器界面
- en: Date pickers provide the user with an easy-to-use interface to allow them to
    quickly select the date they require. jQuery UI provides a date picker that can
    be quickly added to input fields. The date picker provides many configuration
    options such as date formatting and restrictions, making it easier for the developer
    to limit the user's input accordingly. This recipe will show you how to add the
    date picker to two input fields, change the date format of the date pickers, and
    also apply date limits to each of the fields.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 日期选择器为用户提供了一个易于使用的界面，以便他们快速选择所需的日期。jQuery UI 提供了一个可以快速添加到输入字段的日期选择器。日期选择器提供了许多配置选项，如日期格式化和限制，使开发人员更容易根据需要限制用户的输入。本示例将向您展示如何将日期选择器添加到两个输入字段中，更改日期选择器的日期格式，并为每个字段应用日期限制。
- en: Getting ready
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: As with the previous recipe, create `recipe-4.html`, `recipe-4.js`, and `recipe-4.css`
    within the `chapter9` folder you created earlier.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 与前一个示例一样，在之前创建的 `chapter9` 文件夹中创建 `recipe-4.html`、`recipe-4.js` 和 `recipe-4.css`。
- en: How to do it…
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Perform each of the following steps to create a simple interface with two date
    pickers and configuration options:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下每个步骤创建一个简单的界面，其中包含两个日期选择器和配置选项：
- en: 'Insert the following HTML code into `recipe-4.html` to create the basic web
    page and UI with date picker elements:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下 HTML 代码插入到 `recipe-4.html` 中，以创建带有日期选择器元素的基本网页和用户界面：
- en: '[PRE16]'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Add the following CSS to `recipe-4.css` in order to provide a basic style and
    positioning to the UI:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下 CSS 到 `recipe-4.css`，以为用户界面提供基本样式和定位：
- en: '[PRE17]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Add the following jQuery code to `recipe-4.js` in order to set up the date
    picker elements and provide functionality to the additional elements within `recipe-4.html`:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下 jQuery 代码到 `recipe-4.js`，以设置日期选择器元素并为 `recipe-4.html` 中的其他元素提供功能：
- en: '[PRE18]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Open `recipe-4.html` within a web browser and you will be presented with a simple
    interface with two inputs and two drop-down menus. The two inputs labeled `start`
    and `end` will provide you with a date picker interface when you click inside
    the input fields. You can then use the date picker to select a date to be inserted
    in the associated input. By using the two dropdowns, you can change the behavior
    of the dates and the date pickers. The format options will change the date format
    to either English or American. The restriction dropdown will allow you to select
    the maximum number of years that the end date picker will allow the user to select
    past the selected start date.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Web 浏览器中打开 `recipe-4.html`，您将看到一个简单的界面，其中包含两个输入和两个下拉菜单。标记为 `start` 和 `end`
    的两个输入在您点击输入字段时会为您提供一个日期选择器界面。然后，您可以使用日期选择器选择要插入到相关输入中的日期。通过使用两个下拉菜单，您可以更改日期和日期选择器的行为。格式选项将日期格式更改为英文或美式。限制下拉菜单将允许您选择结束日期选择器允许用户选择的最大年数，超过所选开始日期。
- en: How it works…
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: HTML and CSS provides us with a simple interface that can be used with jQuery
    UI to demonstrate some of the date picker capabilities. At the top of `recipe-4.js`,
    there are some variables holding references to the different HTML elements that
    will be used by jQuery and a variable holding the English date format.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: HTML 和 CSS 为我们提供了一个简单的界面，可与 jQuery UI 结合使用，以演示一些日期选择器的功能。在 `recipe-4.js` 的顶部，有一些变量保存了将由
    jQuery 使用的不同 HTML 元素的引用，以及保存了英文日期格式的变量。
- en: 'To add a date picker to an input element, the jQuery UI `datepicker()` function
    is used with the required options:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 要为输入元素添加日期选择器，需要使用 jQuery UI 的 `datepicker()` 函数以及所需的选项：
- en: '[PRE19]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The `dateFormat` option sets the format for the selected date picker. The `minDate`
    option sets the minimum date that the date picker will allow the user to select;
    `new Date()` is used to set this restriction to the current date. The function
    specified for `onClose` will be executed when the date picker has been closed.
    Within this function, the `minDate` option is set for the end input. This will
    ensure that the user will not be able to choose an end date that is before the
    selected start date. The `restrictDates()` function is also being called from
    here. The `restrictDates()` function is defined as follows:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '`dateFormat` 选项设置所选日期选择器的格式。`minDate` 选项设置日期选择器允许用户选择的最小日期；使用 `new Date()`
    来将此限制设置为当前日期。在关闭日期选择器后将执行指定的 `onClose` 函数。在此函数中，为结束输入设置了 `minDate` 选项。这将确保用户无法选择早于所选开始日期的结束日期。`restrictDates()`
    函数也在此处被调用。`restrictDates()` 函数定义如下：'
- en: '[PRE20]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: This function applies a restriction to the end date picker so that the user
    cannot select an end date which is *n* years greater than the selected start date.
    Here, *n* is the value specified by the **Restrict** drop-down menu. Just as `minDate`
    is set, the `maxDate` is set using the selected start date plus the amount of
    specified years. This function is also called using the `change()` function when
    the user changes the drop-down selection.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数对结束日期选择器应用限制，使用户无法选择比所选开始日期大 *n* 年的结束日期。这里，*n* 是**限制**下拉菜单指定的值。就像设置 `minDate`
    一样，设置 `maxDate` 使用的是所选开始日期加上指定年数的数量。当用户更改下拉菜单选择时，也会使用 `change()` 函数调用此函数。
- en: 'When the user chooses to change the date format, the following code is used
    to update the format for each of the date picker elements:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户选择更改日期格式时，以下代码用于更新每个日期选择器元素的格式：
- en: '[PRE21]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: There are many options available as part of the date picker API. Read the documentation
    ([http://api.jqueryui.com/datepicker/](http://api.jqueryui.com/datepicker/)) to
    learn what other options are available.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 日期选择器 API 的一部分提供了许多选项。阅读文档 ([http://api.jqueryui.com/datepicker/](http://api.jqueryui.com/datepicker/))
    以了解其他可用选项。
- en: Creating an autocomplete search feature
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建自动完成搜索功能
- en: This recipe will show you how to suggest search terms to a user as they are
    typing into a search input. This is a very popular feature and can be very helpful
    to the user as it provides them with some insight into what search results will
    be available before they have even made the search. jQuery UI provides the autocomplete
    functionality that can be quickly added to any input element.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 本配方将向用户建议搜索词，当他们在搜索输入框中输入时。这是一个非常受欢迎的功能，对用户非常有帮助，因为它在用户甚至还没有进行搜索之前就提供了一些关于搜索结果的见解。jQuery
    UI 提供了可以快速添加到任何输入元素中的自动完成功能。
- en: Getting ready
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Create `recipe-5.html`, `recipe-5.js`, and `recipe-5.css` in the `chapter9`
    folder, where you have saved the other recipe files.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在你保存其他配方文件的 `chapter9` 文件夹中创建 `recipe-5.html`、`recipe-5.js` 和 `recipe-5.css`。
- en: 'This recipe utilizes a quality API provided by Trakt.tv ([http://trakt.tv/api-docs/](http://trakt.tv/api-docs/)).
    You will need to register (for free) and obtain an API key before you can begin
    this recipe. Once you have registered, you can find your API key on the following
    page: [http://trakt.tv/api-docs/authentication](http://trakt.tv/api-docs/authentication).'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 本配方利用了 Trakt.tv 提供的高质量 API（[http://trakt.tv/api-docs/](http://trakt.tv/api-docs/)）。在开始本配方之前，你需要注册（免费）并获取一个
    API 密钥。一旦注册成功，你可以在以下页面找到你的 API 密钥：[http://trakt.tv/api-docs/authentication](http://trakt.tv/api-docs/authentication)。
- en: Note
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: At the point of writing this recipe, there is a known bug within Google Chrome,
    where if you are trying to call an external source using AJAX in jQuery from your
    local machine (that is, accessing `recipe-5.html` using `file://` instead of `http(s)://`),
    you may receive an `Access-Control-Allow-Origin` error. If you do experience this
    problem, either serve your recipe files through a web server or use an alternate
    browser.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在编写本配方时，已知 Google Chrome 中存在一个已知的错误，在该错误中，如果你尝试从本地机器（即使用 `file://` 而不是 `http(s)://`
    访问 `recipe-5.html`）调用 AJAX 中的 jQuery 来调用外部源，你可能会收到一个 `Access-Control-Allow-Origin`
    错误。如果你遇到了这个问题，要么通过 web 服务器提供你的配方文件，要么使用其他浏览器。
- en: To demonstrate how the autocomplete feature can be used in a real-world situation,
    this recipe will use the API specified above to create a related TV show search.
    It will allow the user to search for a TV show (with suggestions from autocomplete),
    and once the user has selected one, shows related to the selected one will be
    displayed.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示自动完成功能如何在真实情境中使用，本配方将使用上述 API 创建相关的电视节目搜索。它将允许用户搜索一个电视节目（并通过自动完成提供建议），一旦用户选择了一个，与所选节目相关的节目将被显示。
- en: How to do it…
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To add the autosearch feature, perform the following instructions:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加自动搜索功能，请执行以下操作：
- en: 'Add the following HTML code to `recipe-5.html` in order to create the basic
    web page:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下 HTML 代码添加到 `recipe-5.html` 中，以创建基本的网页：
- en: '[PRE22]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Place the following CSS in `recipe-5.css` to turn the HTML code into an attractive
    looking web page:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下 CSS 放置在 `recipe-5.css` 中，将 HTML 代码转换成一个具有吸引力的网页：
- en: '[PRE23]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Add the following jQuery to `recipe-5.js` in order to initialize the autocomplete
    functionality on the search input element:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下 jQuery 添加到 `recipe-5.js` 中，以初始化搜索输入元素上的自动完成功能：
- en: '[PRE24]'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Within the source function you have just added, insert the following code to
    make a call to the Trakt.tv API based on the user''s input to provide the autocomplete
    functionality with data to display. Ensure that you replace `[API KEY HERE]` with
    your Trakt.tv API key, as shown in the following code:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你刚刚添加的源函数中插入以下代码，根据用户的输入调用 Trakt.tv API，以提供自动完成功能所需的数据。确保你将 `[API KEY HERE]`
    替换为你的 Trakt.tv API 密钥，如下所示：
- en: '[PRE25]'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'To populate the main results list based on the user''s autocomplete section,
    add the following jQuery code to the select function you have just added. Once
    again, remember to replace `[API KEY HERE]` with your API key:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了基于用户的自动完成部分填充主要结果列表，将以下 jQuery 代码添加到你刚刚添加的 select 函数中。再次记得用你的 API 密钥替换 `[API
    KEY HERE]`：
- en: '[PRE26]'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Open `recipe-5.html` in a web browser and search for your favorite TV show:![How
    to do it…](img/08960S_09_03.jpg)
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在网页浏览器中打开 `recipe-5.html`，并搜索你最喜欢的电视节目：![如何操作...](img/08960S_09_03.jpg)
- en: How it works…
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: The jQuery UI autocomplete function wraps up all the complexity so that the
    developer only needs to think about providing it with the data and the action
    after selection, if any.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery UI自动完成功能将所有复杂性封装起来，以便开发者只需要考虑提供数据和选择后的操作。
- en: 'The HTML page in this recipe creates a web page that provides an input the
    user can search within. This input is then selected within the jQuery code, and
    the `autocomplete()` function is used to initialize the autocomplete functionality
    on the selected element, shown as follows:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方中的HTML页面创建了一个用户可以在其中进行搜索的网页。然后在jQuery代码中选择此输入，并使用`autocomplete()`函数来初始化所选元素上的自动完成功能，如下所示：
- en: '[PRE27]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: The `source` property on the object provided to the `autocomplete()` function
    is the data that is used in the dropdown displayed to the user. The `source` property
    can either be an array, string, or function. When `source` is a string, it expects
    the value to be a resource URL providing the data in the expected format. Because
    we are using an external API that will not provide the data in the expected format,
    we use the third option and do some additional processing within the function.
    The `minLength` property allows us to control how many characters the user must
    input before the autocomplete functionality kicks into action.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在提供给`autocomplete()`函数的对象上的`source`属性是显示给用户的下拉菜单中使用的数据。`source`属性可以是数组、字符串或函数。当`source`是字符串时，它期望值是提供数据的资源URL，以期望的格式提供数据。因为我们使用的是一个不会提供期望格式数据的外部API，所以我们使用第三个选项，并在函数内进行一些额外的处理。`minLength`属性允许我们控制用户必须输入多少字符才能触发自动完成功能
- en: 'First, the data needs to be retrieved from Trackt.tv. To do this, the familiar
    jQuery `$.ajax()` function is used:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，需要从Trackt.tv检索数据。为此，使用熟悉的jQuery `$.ajax()`函数：
- en: '[PRE28]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The `source()` function takes two arguments: `input` (object) and `response`
    (function). Using `input.term`, we can get the value that the user entered into
    the search input text box and insert it into the API URL to search for TV shows.
    The limit query string variable is set to `10` so that only 10 results will be
    returned.'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '`source()`函数接受两个参数：`input`（对象）和`response`（函数）。使用`input.term`，我们可以获取用户输入到搜索输入框中的值，并将其插入到API
    URL中以搜索电视节目。限制查询字符串变量被设置为`10`，以便只返回10个结果。'
- en: Note that on both the AJAX requests within this recipe, the `dataType` attribute
    has been set to `jsonp`. This is to prevent any cross-domain issues when working
    with the API. Read more about jQuery's JSONP at [http://www.jquery4u.com/json/jsonp-examples/](http://www.jquery4u.com/json/jsonp-examples/).
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，这个配方中的两个AJAX请求的`dataType`属性都被设置为`jsonp`。这是为了在与API一起工作时防止任何跨域问题。在[http://www.jquery4u.com/json/jsonp-examples/](http://www.jquery4u.com/json/jsonp-examples/)上阅读更多关于jQuery的JSONP的信息。
- en: 'If the request is successful, we can loop through all the results and create
    an array in the format that the autocomplete functionality expects, shown as follows:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 如果请求成功，我们可以遍历所有结果并创建一个以自动完成功能期望的格式的数组，如下所示：
- en: '[PRE29]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: The `response()` function is called, which was the second argument to the `source()`
    function; this will send the results to the autocomplete feature for display.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 调用`response()`函数，这是`source()`函数的第二个参数；这将把结果发送给自动完成功能以显示。
- en: 'The next piece of functionality in these recipes occurs when the user selects
    an option from the autocomplete suggest list. The `select` property on the object
    provided to the `autocomplete()` function takes a callback function that is executed
    when the user makes a selection. Using the `ui` argument, it is then possible
    to retrieve data from the object that represents the user''s selection. In this
    case, we require the ID so that we can pass it back to the Trackt.tv API and retrieve
    a list of related TV shows:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些配方中，下一段功能发生在用户从自动完成建议列表中选择选项时。在提供给`autocomplete()`函数的对象上的`select`属性接受一个回调函数，当用户做出选择时执行。使用`ui`参数，然后可以从表示用户选择的对象中检索数据。在这种情况下，我们需要ID，以便我们可以将其传递回到Trackt.tv
    API，并检索相关的电视节目列表：
- en: '[PRE30]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'This variable is used as a part of another `$.ajax()` request. On the success
    of this request, the results are looped through and a list item is inserted into
    the result list for each of the related TV shows. A link to a Trakt.tv web page
    with more information about each of the shows is also added, shown as follows:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 这个变量被用作另一个`$.ajax()`请求的一部分。在这个请求成功后，结果将被循环遍历，并且为每个相关的电视节目插入一个列表项。还会添加一个链接到Trakt.tv网页，显示更多关于每个节目的信息，如下所示：
- en: '[PRE31]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: See also
  id: totrans-153
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The *Creating an autosuggest feature* recipe in [Chapter 3](ch03.html "Chapter 3. Loading
    and Manipulating Dynamic Content with AJAX and JSON"), *Loading and Manipulating
    Dynamic Content with AJAX and JSON*
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在 [第三章](ch03.html "第三章。使用 AJAX 和 JSON 加载和操作动态内容") *使用 AJAX 和 JSON 加载和操作动态内容*中创建自动建议功能]
    这个示例'
