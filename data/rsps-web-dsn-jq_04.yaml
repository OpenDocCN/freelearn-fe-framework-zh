- en: Chapter 4. Designing Responsive Text
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 4 章 设计响应式文本
- en: 'When talking about responsive titles, we talk about flexibility. So, the use
    of fixed measures in font sizes should also be dynamic. The difference between
    how it have been implemented in the past years and the present is that earlier
    we only thought of two ways to show our content: print and screen. Although times
    change, worries about text adaptation remain.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 谈到响应式标题时，我们谈论的是灵活性。因此，在字体大小上使用固定的度量也应该是动态的。过去几年中它是如何实现的与现在的差别在于，早期我们只考虑了两种显示内容的方式：打印和屏幕。尽管时代变化，但对文本适应性的担忧仍然存在。
- en: We think typography is the base of our design and the backbone of our CSS because
    the main objective of our site is to inform the users by answering their questions.
    It is good practice to avoid creating ten different subtitle styles, and in order
    to do this, we must plan a few distinct headings according to our website theme.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们认为排版是我们设计的基础和我们 CSS 的支柱，因为我们网站的主要目标是通过回答用户的问题来向他们提供信息。避免创建十种不同的副标题样式是一个好的做法，为了做到这一点，我们必须根据我们网站的主题计划几个不同的标题。
- en: 'In this chapter we will learn:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习：
- en: Understanding and converting the text to relative units
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解并将文本转换为相对单位
- en: Box-sizing and paragraph spacing
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 盒子模型和段落间距
- en: Customizing the font family for beautiful responsive titles
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为漂亮的响应式标题自定义字体系列
- en: Managing the font size automatically
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动管理字体大小
- en: Understanding and converting the text to relative units
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解并将文本转换为相对单位
- en: One of the main advantages of using relative units is the cascade effect generated
    when the user modifies the font size of the base element (from the browser) and
    all font sizes increase/decrease proportionally.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 使用相对单位的主要优势之一是，当用户修改基本元素（来自浏览器）的字体大小时，所有字体大小都会按比例增加/减小，从而产生级联效应。
- en: These days, almost every browser has the default settings of this base element
    `<html>` at 16 px. However, this value can be modified on the user side if the
    user wants to increase the browser font size making it easier to read.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这些天，几乎每个浏览器都将基本元素`<html>`的默认设置设为 16 px。然而，如果用户想增大浏览器字体大小以便更容易阅读，这个值可以在用户端进行修改。
- en: 'Before talking about the most commonly used measuring units, there are two
    units we would emphasize because their popularity has grown impressively, and
    they are: **vw** (**viewport width**) and **vh** (**viewport height**).'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在谈论最常用的测量单位之前，我们想要强调两个单位，因为它们的流行度令人印象深刻，它们是：**vw**（视口宽度）和 **vh**（视口高度）。
- en: These viewport units still do not have much acceptance for most used browsers,
    but I suggest you check either [http://www.w3.org/TR/css3-values/](http://www.w3.org/TR/css3-values/)
    or [http://caniuse.com/viewport-units](http://caniuse.com/viewport-units) to stay
    tuned because these units make the scale of the font size proportionally easier
    depending on the size of the browser.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这些视口单位在大多数常用的浏览器中仍然不太受欢迎，但我建议您随时关注[http://www.w3.org/TR/css3-values/](http://www.w3.org/TR/css3-values/)或[http://caniuse.com/viewport-units](http://caniuse.com/viewport-units)，因为这些单位使得根据浏览器大小调整字体大小的比例更加容易。
- en: So, the most used relative units recently are given in the following section.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，最近最常用的相对单位在下一节中给出。
- en: Relative unit – percentage
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相对单位 – 百分比
- en: 'Percentage is relative to the container element and it is more used to create
    structures as we learned in [Chapter 2](ch02.html "Chapter 2. Designing Responsive
    Layouts/Grids"), *Designing Responsive Layouts/Grids*. However, there is no problem
    to use it for setting up our font size. The sample code is as follows:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 百分比是相对于容器元素的，它更多用于创建结构，正如我们在[第 2 章](ch02.html "第 2 章 设计响应式布局/网格")中所学到的 *设计响应式布局/网格*。然而，使用它设置我们的字体大小也没有问题。示例代码如下：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Some developers prefer to define the font size of the body fixed to 62.5 percent
    (10 px) to facilitate the calculation. In this case, we may define the child elements
    to 150 percent representing 15 px, 190 percent representing 19 px, and so on.
    Although this method makes the identification of the correspondent value easier,
    it may only help in the first level of the cascade from the font sizing.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 一些开发人员更喜欢将正文的字体大小定义为固定的 62.5%（10 px）以便计算。在这种情况下，我们可以将子元素定义为 150% 代表 15 px，190%
    代表 19 px，依此类推。虽然这种方法使得识别相应值更容易，但它可能只有在字体大小的第一级级联中有所帮助。
- en: Relative unit – em
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相对单位 – em
- en: 'The em unit is relative to the computed font size of its parent. In the following
    example, we want to convert the font size of a child element to `20px`:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: em单位是相对于其父元素的计算字体大小。在下面的示例中，我们想要将子元素的字体大小转换为`20px`：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: There is a really good site helping us with this calculation, [http://pxtoem.com](http://pxtoem.com).
    Let's see how to use this tool on the components in the following screenshot;
    in the left column, we define the base font and the result is in the column at
    the center. Also, for different sizes from 6 px to 24 px, we may convert it using
    the right column.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个非常好的网站帮助我们进行这个计算，[http://pxtoem.com](http://pxtoem.com)。让我们看看如何在以下截图中的组件上使用此工具；在左列中，我们定义基础字体，结果显示在中间的列中。此外，对于从6px到24px的不同尺寸，我们可以使用右列进行转换。
- en: '![Relative unit – em](img/3602OS_04_01.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![相对单位 – em](img/3602OS_04_01.jpg)'
- en: 'So remember, always include the px value (when we are converting) in front
    of the final value (as we recommended in [Chapter 2](ch02.html "Chapter 2. Designing
    Responsive Layouts/Grids"), *Designing Responsive Layouts/Grids*). We are reinforcing
    this tip because when handling font sizes, there are a lot of cascading styles.
    For example, consider the following figure:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，请记住，在最终值前（当我们进行转换时）始终包含px值（正如我们在[第2章](ch02.html "Chapter 2. Designing Responsive
    Layouts/Grids")中推荐的那样，*设计响应式布局/网格*）。我们强调这个提示，因为在处理字体大小时，有很多层叠样式。例如，考虑以下图：
- en: '![Relative unit – em](img/3602OS_04_02.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![相对单位 – em](img/3602OS_04_02.jpg)'
- en: Relative unit – rem
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相对单位 – rem
- en: '**rem** came from CSS3 which stands for **root em** and is relative to the
    root (or the HTML) element. In other words, redefining a font size on the `<html>`
    element and all rem units may scale a proportion of this base element, and not
    its parent. This is the only difference when compared with em.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**rem** 来源于 CSS3，代表**根em**，相对于根元素（或HTML元素）。换句话说，在`<html>`元素上重新定义字体大小，所有的rem单位都可能按比例缩放此基本元素，而不是其父元素。与em相比，这是唯一的区别。'
- en: 'Let''s see how these sizes from the previous figure were converted to rem:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何将前面图中的这些尺寸转换为rem：
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The following practice may save a good amount of time and help analyze if the
    page requires more blank space depending on the density of the content.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的做法可能节省大量时间，并有助于分析页面是否需要根据内容密度增加更多的空白空间。
- en: Try to begin projects by coding the text typography right before all the main
    structure has been developed. We do this by producing a template document that
    contains all the major HTML elements with the correct stylesheet that is based
    on the website design.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试在所有主要结构开发之前编写文本排版的文档。我们通过生成包含所有主要HTML元素的模板文档，其中包含基于网站设计的正确样式表，来实现这一点。
- en: Improving your element dimensioning using the box-sizing property
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用box-sizing属性改进元素尺寸
- en: 'The model known as **box-model**, illustrated in the following screenshot,
    which requires a calculation to find out the total width of the element including
    borders and padding, is getting outdated:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 所谓的**盒子模型**，如下面的屏幕截图所示，需要计算以找出包括边框和填充在内的元素的总宽度，现在已经过时了：
- en: '![Improving your element dimensioning using the box-sizing property](img/3602OS_04_08.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![使用box-sizing属性改进元素尺寸](img/3602OS_04_08.jpg)'
- en: 'The following example shows the concept of box-model that divides the useful
    area between two divs with padding of five percent on each side of these containers
    and a 2 px border which will make the width calculation more difficult:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的示例显示了将有用区域分为两个带有每个容器边距百分比为5％和2px边框的div的概念，这将使宽度计算更加困难：
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: With CSS3, we have the `box-sizing` property which receives the value `border-box`,
    meaning this width value already considers the padding and border dimensions.
    Although it works well in Versions 8 and higher of Internet Explorer browser,
    this property does not work purely on IE6 and IE7\. If you need to grant support
    for these browsers, there is a polyfill which does this complementary task and
    may be found at [https://github.com/Schepp/box-sizing-polyfill](https://github.com/Schepp/box-sizing-polyfill).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在CSS3中，我们有`box-sizing`属性，其值为`border-box`，意味着此宽度值已经考虑了填充和边框尺寸。虽然在Internet Explorer浏览器的8版本及更高版本中运行良好，但该属性在IE6和IE7上并不完全有效。如果您需要为这些浏览器提供支持，有一个补丁可以完成这个补充任务，可以在[https://github.com/Schepp/box-sizing-polyfill](https://github.com/Schepp/box-sizing-polyfill)找到。
- en: 'Let''s see how it may facilitate the entire calculation to work on this sample:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看它如何简化整个计算，以便在这个示例上工作：
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: We can see in the following code that we may have less difficulty in performing
    the calculation and analyzing clean or blank spaces from the screen. In addition,
    many people relate this `padding` spacing to the size of the font based on em
    because it may avoid the calculation of proportion in some cases.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到在下面的代码中，我们可能在执行计算和分析屏幕上的干净或空白空间时更少遇到困难。此外，许多人将这种 `padding` 间距与 em 基于字体大小相关联，因为在某些情况下它可以避免比例计算。
- en: '[PRE5]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Currently, some browsers require the prefixes above, but by using them this
    way, we are covering them. Also, the same padding may be done for the vertical
    spacing; for example, consider the following code:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，一些浏览器需要上述前缀，但通过这种方式使用它们，我们已经覆盖了它们。此外，同样的填充可能也适用于垂直间距；例如，请考虑以下代码：
- en: '[PRE6]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Customizing the font family for beautiful responsive titles
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为了创建美丽的响应式标题，定制字体系列
- en: Fonts allow you to create a more engaging site for your users, and consistently
    maintain the theme style without having to produce a lot of heading images, one
    for each title.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 字体允许您为用户创建更吸引人的网站，并始终保持主题风格，而无需制作大量标题图像，每个标题都有一个。
- en: Tip
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: It is important to choose the font carefully because it may influence the content
    assimilation by the user or may not contribute to show more than a page or two
    of our work.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 选择字体非常重要，因为它可能会影响用户对内容的吸收，或者可能无法展示我们工作的一页或两页以上。
- en: '`@font-face` is a CSS rule that allows designers to use non-standard web fonts
    that are not installed in their users'' machines and helps a lot to change all
    headings faster. The great benefit of the `@font-face` method is that it does
    not replace your regular fonts with images and also gives the required flexibility
    to the responsive web design.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '`@font-face` 是一个 CSS 规则，允许设计师使用未安装在用户机器上的非标准网络字体，并帮助快速更改所有标题。`@font-face` 方法的重大好处是它不会用图像替换常规字体，并且还为响应式网页设计提供所需的灵活性。'
- en: Tip
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '`@font-face` only supports IE8 or earlier if we are using EOT fonts. Also,
    Safari iOS 4.1 and lower only support SVG font. We will see in the next topic
    how to provide this support easily.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '`@font-face` 只支持使用 EOT 字体的 IE8 或更早版本。此外，Safari iOS 4.1 及更低版本仅支持 SVG 字体。我们将在下一个主题中看到如何轻松提供此支持。'
- en: We really recommend the site [http://www.google.com/fonts](http://www.google.com/fonts)
    to check a variety of fonts and especially the font's authorship. Please read
    the license on each font before using it to be sure it can be used commercially.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们真的推荐访问[http://www.google.com/fonts](http://www.google.com/fonts)这个网站，以查看各种字体，尤其是字体的作者。请在使用之前阅读每种字体的许可证，确保可以商业使用。
- en: 'The basic usage of the property `@font-face` is to define this rule style,
    `font-family` is the label used to call the font later, `src` is where it can
    be found, and `font-weight` (not needed for normal ones, but required by everything
    else, such as bold and thin). For example, consider the following code:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 属性 `@font-face` 的基本用法是定义这个规则样式，`font-family` 是以后调用字体的标签，`src` 是字体的位置，以及 `font-weight`（对于普通字体不需要，但对于其他一切，如粗体和细体，都是必需的）。例如，请考虑以下代码：
- en: '[PRE7]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Then just use it as any other font in any other style rule:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，只需像其他样式规则中的任何其他字体一样使用它：
- en: '[PRE8]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: However, there are other better ways to do it. We are going to see clearly how
    to use Font Squirrel, Fit Text, Slabtext, Lettering, and Responsive Measure.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，还有其他更好的方法。我们将清楚地看到如何使用 Font Squirrel、Fit Text、Slabtext、Lettering 和 Responsive
    Measure。
- en: Using Font Squirrel tool generating
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Font Squirrel 工具生成
- en: Font Squirrel has an awesome tool which allows us to take a desktop font file
    and generate its web counterparts. Also, the service of generating the correct
    code and files for our specific font is 100 percent free*.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Font Squirrel 有一个很棒的工具，允许我们获取桌面字体文件并生成其网络对应物。此外，为我们特定字体生成正确代码和文件的服务是完全免费*。
- en: '*Only the service is free. Remember that each font family has its own license.
    It is highly recommended that the user reads the font license before using them.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '*只有服务是免费的。请记住，每个字体系列都有自己的许可证。强烈建议用户在使用之前阅读字体许可证。'
- en: 'On the website [http://www.fontsquirrel.com/tools/webfont-generator](http://www.fontsquirrel.com/tools/webfont-generator),
    we may find further information about its main features, which are:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在网站 [http://www.fontsquirrel.com/tools/webfont-generator](http://www.fontsquirrel.com/tools/webfont-generator)
    上，我们可以找到关于其主要特性的更多信息，这些特性包括：
- en: Font Squirrel does not require a lot of CSS skills
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Font Squirrel 不需要很多 CSS 技能
- en: It offers an extra area to improve the loading performance (the **Expert** mode)
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它提供了一个额外的区域来提高加载性能（**专家**模式）
- en: Generated code/files support users with old browsers
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成的代码/文件支持使用旧浏览器的用户
- en: Resource kits are absolutely free
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 资源工具包完全免费
- en: How to do it
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 操作方法
- en: It starts by accessing the Font Squirrel site and clicking on **Add fonts**
    to choose your personal font or the one for which you already have the right license.
    Then, select the **Basic** option (for now) and download your kit.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 首先访问 Font Squirrel 网站，然后点击 **添加字体** 以选择您的个人字体或已经拥有正确许可的字体。然后，选择 **基本** 选项（暂时），并下载您的工具包。
- en: 'After unzipping the downloaded file, we should add the following code at the
    beginning of the CSS file. The following code will allow the CSS file to access
    the font files and provide the correct one depending on the situation:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在解压下载的文件后，我们应该在 CSS 文件的开头添加以下代码。以下代码将允许 CSS 文件访问字体文件，并根据情况提供正确的字体：
- en: '[PRE9]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'And whenever we want to use the new font, we just need to call it the same
    as we do with the `@font-face` rule as shown in the following code:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 每当我们想要使用新字体时，只需像使用 `@font-face` 规则一样调用它，如下面的代码所示：
- en: '[PRE10]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: If we go back to the download page, Font Squirrel will also allow you to take
    a subset of the font, significantly reducing the file size by choosing the **Optimal**
    and **Export** modes. To show just how significant it is, we added the same Kite
    One font and tried all the three settings. Summarizing the result, the byte size
    is directly correlated to the hash of glyphs (characters) in the font file and
    how many resources we want to append.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们回到下载页面，Font Squirrel 还将允许您获取字体的子集，通过选择 **优化** 和 **导出** 模式显著减小文件大小。为了展示这种显著性，我们添加了相同的
    Kite One 字体，并尝试了所有三种设置。总结结果，字体文件中的字形（字符）的哈希直接与字节大小相关，并且我们想要添加多少资源。
- en: The **Basic** setting leaves the characters untouched. The **Optimal** setting
    reduces the characters to around 256\. In specific cases where the Kite One font
    has less characters than this number, no optimization is done.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**基本** 设置保留字符不变。 **优化** 设置将字符减少到大约 256 个。在某些情况下，Kite One 字体的字符少于这个数字时，不会进行优化。'
- en: We are able to see the greatest savings by selecting the **Expert** mode and
    only including the **Basic Latin** setting, then manually adding the characters
    we need.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 通过选择 **专家** 模式并仅包括 **基本拉丁** 设置，然后手动添加我们需要的字符，我们可以看到最大的节省。
- en: 'Let''s try to do it together following the steps for the **Expert** Font Squirrel
    settings:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试一起按照 **专家** Font Squirrel 设置的步骤来做：
- en: Click on **Add Fonts** and select the font file you want to work with.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **添加字体**，选择要使用的字体文件。
- en: Under **Rendering**, uncheck **Fix Vertical Metrics**.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **渲染** 下，取消选中 **修正垂直度量**。
- en: Under **Font Formats**, check **SVG** as shown in the following screenshot:![How
    to do it](img/3602OS_04_09.jpg)
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **字体格式** 下，如下截图所示，选择 **SVG** ：
- en: Under **Subsetting**, check **Custom Subsetting...**.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **子集** 下，勾选 **自定义子集...**。
- en: Under **Unicode Tables**, check only **Basic Latin**.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **Unicode 表** 下，仅选择 **基本拉丁**。
- en: Tip
  id: totrans-79
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: This assumes that the fonts will only use English characters; for other languages,
    add only the characters that you need.
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这假设字体只使用英文字符；对于其他语言，请仅添加您需要的字符。
- en: 'In some sites the symbols such as **’**, **‘**, **“**, and **”** are important
    too, so copy and paste them into the **Single Characters** field, as shown in
    the following screenshot:'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在某些网站上，诸如 **’**、**‘**、**“** 和 **”** 等符号也很重要，因此将它们复制并粘贴到 **单个字符** 字段中，如下图所示：
- en: '![How to do it](img/3602OS_04_10.jpg)'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![操作方法](img/3602OS_04_10.jpg)'
- en: Verify the generated image from **Subset Preview** and adjust if needed.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证 **子集预览** 中生成的图像，如果需要可以进行调整。
- en: After you confirm that you are uploading legally eligible font for web embedding,
    just click on **DOWNLOAD YOUR KIT**.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在确认您上传的字体符合网络嵌入的合法资格后，只需点击 **下载您的工具包**。
- en: The FitText plugin
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: FitText 插件
- en: FitText is a jQuery plugin that makes font sizes flexible and it is a utility
    that has grown in popularity, making flexible display type much more accessible.
    It works by scaling the headline text to fill the width of a parent element. If
    you want to see a quick demonstration of this plugin to analyze how impressive
    its flexibility is, you can see it in use on plugin's website at [http://fittextjs.com/](http://fittextjs.com/).
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: FitText 是一个使字体大小灵活的 jQuery 插件，它是一个越来越受欢迎的实用程序，使得灵活的显示类型更加易于使用。它通过缩放标题文本以填充父元素的宽度来工作。如果您想要快速演示此插件，以分析其灵活性有多惊人，您可以在插件网站
    [http://fittextjs.com/](http://fittextjs.com/) 上查看其使用情况。
- en: How to do it
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 操作方法
- en: 'After downloading the files of this solution on the plugin''s Github website
    [https://github.com/davatron5000/FitText.js](https://github.com/davatron5000/FitText.js),
    let''s insert this code in our HTML:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在插件的 Github 网站[https://github.com/davatron5000/FitText.js](https://github.com/davatron5000/FitText.js)上下载此解决方案的文件后，让我们将以下代码插入到我们的
    HTML 中：
- en: '[PRE11]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'At the bottom of the HTML (before the `</body>` closing tag), we will need
    to add jQuery and Fittext libraries. Then you have to execute the plugin applying
    it to your headline:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在 HTML 的底部（在`</body>`闭合标签之前），我们需要添加 jQuery 和 Fittext 库。然后，您必须执行应用于您的标题的插件：
- en: '[PRE12]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'By plugin''s default, it will set the font size as 1/10th of the element''s
    width. There are two ways to modify this standard font size control: configure
    the compressor, and define minimum and maximum sizes.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，插件将设置字体大小为元素宽度的 1/10。有两种修改此标准字体大小控制的方法：配置压缩器和定义最小和最大尺寸。
- en: 'By using the compressor, you will need to specify the compress value, for example,
    `1.2` to resize the text more gradually or `0.8` to resize it less gradually,
    as shown in the following code:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用压缩器，您将需要指定压缩值，例如，`1.2`可以更缓慢地调整文本大小，或者`0.8`可以更少地调整文本大小，如以下代码所示：
- en: '[PRE13]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'We can also modify this standard font size control by defining the minimum
    and maximum font size, in order to provide more control over the situations in
    which you wish to preserve the hierarchy, as shown in the following code:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以通过定义最小和最大字体大小来修改此标准字体大小控制，以便在希望保留层次结构的情况下提供更多控制，如以下代码所示：
- en: '[PRE14]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The SlabText plugin
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SlabText 插件
- en: SlabText is a plugin that lets you build big, beautiful, and completely responsive
    headlines making it easier for anyone to produce big, bold, and responsive headlines.
    The script splits headlines into rows before resizing each row to fill the available
    horizontal space. The ideal number of characters to set on each row is automatically
    calculated by dividing the available width by the pixel font size.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: SlabText 是一个插件，可以让您构建大、美丽且完全响应式的标题，从而使任何人都能够制作大、粗体且响应式的标题变得更容易。该脚本在调整每一行以填充可用的水平空间之前将标题拆分为行。每行设置的理想字符数通过将可用宽度除以像素字体大小来自动计算。
- en: 'The following are its features:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是其特点：
- en: The SlabText plugin is fully responsive and built for mobiles with a completely
    responsive nature
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SlabText 插件完全响应式，并为具有完全响应式特性的手机而构建
- en: '**Color Control** chooses the section''s background color, text, and text shadow
    color'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**颜色控制** 选择部分的背景颜色、文本和文本阴影颜色'
- en: '**Extra Options** sets some padding, and determines the length of the text
    shadow and **Image Overlay** uploads an image and has it superimposed onto the
    text using CSS3 background clip'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**额外选项** 设置一些填充，并确定文本阴影的长度和 **图像叠加** 通过 CSS3 背景剪辑上传图像并将其叠加到文本上'
- en: '**Font Control** chooses your own font and has ultimate control over fonts'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**字体控制** 选择您自己的字体，并对字体拥有最终控制权'
- en: '**Clonable** clones the section as many times as you want and creates a whole
    bunch of clones'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可克隆的** 根据需要克隆部分，并创建一大堆克隆'
- en: The SlabText plugin allows you to break the line manually
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SlabText 插件允许您手动换行
- en: Its minified version weighs just 4 KB
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它的压缩版本仅有 4 KB
- en: It has headlines with a lot of horizontal space to fill the display better across
    browsers
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它具有大量水平空间的标题，以在各种浏览器中更好地填充显示器
- en: Be sure to call the script after all the `@font-face` fonts are downloaded
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请务必在下载所有`@font-face`字体之后调用该脚本
- en: So, let's download this plugin from [https://github.com/freqDec/slabText/](https://github.com/freqDec/slabText/)
    and experiment.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，让我们从[https://github.com/freqDec/slabText/](https://github.com/freqDec/slabText/)下载此插件并进行实验。
- en: How to do it
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何操作
- en: 'First, we need to add an ID to a `header` tag that we can select in the JavaScript
    and then insert the `<script>` tag before the closing `</body>` tag in our HTML
    code. Consider the following example:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要为`header`标签添加一个ID，以便在JavaScript中选择，然后在HTML代码的闭合`</body>`标签之前插入`<script>`标签。请考虑以下示例：
- en: '[PRE15]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The following is the script to come up with the solution:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是提出解决方案的脚本：
- en: '[PRE16]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'However, instead of keeping it automatic, let''s break the line into different
    parts, modifying the communication between the user perception and our website:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，与其保持自动化不如将行分解为不同的部分，修改用户感知和我们网站之间的通信：
- en: '[PRE17]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The script is as follows:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本如下：
- en: '[PRE18]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The following screenshot shows two states, before (on the left) and after (on
    the right) running the code that forces the manual line to break:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了两种状态，在运行强制手动换行代码之前（左侧）和之后（右侧）：
- en: '![How to do it](img/3602OS_04_04.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![如何做](img/3602OS_04_04.jpg)'
- en: For more options, please check the creator's page at [http://freqdec.github.io/slabText/](http://freqdec.github.io/slabText/).
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 若要了解更多选项，请访问创建者的页面[http://freqdec.github.io/slabText/](http://freqdec.github.io/slabText/)。
- en: Lettering
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Lettering
- en: Lettering offers a complete down-to-the-letter control by wrapping each character,
    word, or line, and adding a class (creating a manageable code) for a quick access
    to the character inside the CSS file. It is a jQuery-based plugin that makes the
    adjustment of the spacing between characters easier, creating an editorial design,
    and so on.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: Lettering通过包装每个字符、单词或行，并添加一个类（创建一个可管理的代码）来提供完整的字母控制，以便快速访问CSS文件中的字符。它是一个基于jQuery的插件，可以更轻松地调整字符之间的间距，创建编辑设计等。
- en: 'There are two quite impressive websites that show good design and a lot of
    creativity by using customized letters. Take a look at the following examples,
    courtesy of [http://lostworldsfairs.com/moon/](http://lostworldsfairs.com/moon/)
    and [http://lostworldsfairs.com/eldorado/](http://lostworldsfairs.com/eldorado/):'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 有两个相当令人印象深刻的网站，通过使用定制字母展示出良好的设计和大量的创意。请看以下示例，由[http://lostworldsfairs.com/moon/](http://lostworldsfairs.com/moon/)和[http://lostworldsfairs.com/eldorado/](http://lostworldsfairs.com/eldorado/)提供：
- en: '![Lettering](img/3602OS_04_05.jpg)![Lettering](img/3602OS_04_06.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![Lettering](img/3602OS_04_05.jpg)![Lettering](img/3602OS_04_06.jpg)'
- en: How to do it
  id: totrans-126
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何做
- en: 'After downloading the zip file from [https://github.com/davatron5000/Lettering.js](https://github.com/davatron5000/Lettering.js),
    let''s practice this usage by inserting the following simple HTML code with class
    which will be used later:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 从[https://github.com/davatron5000/Lettering.js](https://github.com/davatron5000/Lettering.js)下载zip文件后，让我们通过插入以下简单的HTML代码来练习使用这个工具，该代码将在稍后使用的类中使用：
- en: '[PRE19]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Then, remember to include the jQuery library in the `<head>` tag as shown in
    the following code:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，请记住在`<head>`标签中包含jQuery库，如下代码所示：
- en: '[PRE20]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'At the bottom of the HTML (before the `</body>` closing tag), we will need
    to call this script for action specifying which class this plugin will affect:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在HTML底部（在`</body>`关闭标签之前），我们需要调用此脚本以指定此插件将影响哪个类：
- en: '[PRE21]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The previous code will give the following output. Look at the spans and imagine
    you are building it without this plugin:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的代码将产生以下输出。看一下这些span并想象一下你在没有这个插件的情况下是如何构建它的：
- en: '[PRE22]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Now, the structure is ready to receive a style like this:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，结构已经准备好接收这样的样式：
- en: '[PRE23]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Furthermore, if the title has a distinct style for each word (not character),
    this plugin may handle it by defining the parameter `"words"`, as shown in the
    following code:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果标题每个词（而不是字符）都有不同的样式，此插件可以通过定义参数`"words"`来处理，如下代码所示：
- en: '[PRE24]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Consider the case of a different style for each line being split by using `<br
    />` as follows:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑使用`<br />`分割每行的不同样式的情况如下：
- en: '[PRE25]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'For the previous scenario, the only difference in the script will be the parameter
    `"lines"`:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 对于前面的场景，在脚本中唯一的区别将是参数`"lines"`：
- en: '[PRE26]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: So, now we think you are wondering about the big effort to create a style, to
    measure distances, and to know how much is necessary to increase the font for
    each element. We strongly suggest using the online tool Kern.js.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，现在我们认为您想知道为什么要付出如此大的努力来创建一个样式，来测量距离，以及知道为每个元素增加多少字体是必要的。我们强烈建议使用在线工具Kern.js。
- en: The Kern.js tool
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Kern.js工具
- en: Kern.js is an online tool that matches perfectly with Lettering.js because it
    offers a great interface between clicking-and-dragging, adjusting the letter kerning,
    line height, and letter placement. And when you finish this task, just copy the
    generated CSS and use it in our stylesheet.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: Kern.js是一个在线工具，与Lettering.js完美匹配，因为它提供了一个很好的界面，可以通过点击和拖动来调整字母间距、行高和字母位置。当你完成这项任务后，只需复制生成的CSS并在我们的样式表中使用即可。
- en: How to use it
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何使用
- en: 'After entering the tool''s website, [http://www.kernjs.com/](http://www.kernjs.com/),
    there is a link at the bottom of the page: **drag to bookmarks bar to install**.
    Dragging it to the bookmark will make the activation of the Kern.js tool on our
    website easier.'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 进入该工具的网站[http://www.kernjs.com/](http://www.kernjs.com/)后，在页面底部有一个链接：**拖动到书签栏以安装**。将其拖到书签栏将使在我们的网站上激活Kern.js工具更加容易。
- en: The requirements of its usage are including jQuery in specific 1.7.2 Version
    and the Kern.js libraries in the `<head>` tag of our website. The Kern.js script
    may be found at [https://github.com/bstro/kern.js](https://github.com/bstro/kern.js)
    to download.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 使用该功能的要求包括在网站的`<head>`标签中包含特定版本1.7.2的jQuery和Kern.js库。Kern.js脚本可在[https://github.com/bstro/kern.js](https://github.com/bstro/kern.js)下载。
- en: '[PRE27]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Here are five options that may show at the top of the page whenever a website
    is opened by clicking on the **Kernjs.com** link from the bookmarks bar:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 当通过书签栏中的**Kernjs.com**链接打开网站时，可能会显示五个选项在页面顶部：
- en: Adjustment of the kerning (horizontal spacing)
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字距调整（水平间距）
- en: Increase or decrease in font size
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字体大小的增加或减少
- en: Adjustment of the line height (vertical spacing)
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调整行高（垂直间距）
- en: Full letter placement adjustment
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 完全的字母放置调整
- en: Adjustment of the angle rotation
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调整角度旋转
- en: 'The following screenshot shows these options:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了这些选项：
- en: '![How to use it](img/3602OS_04_07.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![如何使用它](img/3602OS_04_07.jpg)'
- en: As soon as you finish the adjustments, just click on the check button to convert
    this visual change into code ready to be copied and performed on the site.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦完成调整，只需点击检查按钮，将此视觉更改转换为准备复制并在站点上执行的代码。
- en: 'Be careful when there is more than one customized element because this code
    may overwrite the previous one. However, there is an easy way to avoid further
    issues: defining a class to the element specification. The following code is an
    example of this:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 当存在多个自定义元素时要小心，因为此代码可能会覆盖前一个。然而，有一种简单的方法可以避免进一步的问题：为元素规范定义一个类。以下代码是这种情况的一个示例：
- en: '[PRE28]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Responsive Measure
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 响应式测量
- en: Responsive Measure is a simple script that allows you to pass in a selector
    (ideally the container where your primary content will go) that generates the
    ideal font size required to produce the ideal measure for your text. Does it sound
    like magic? We will see in the following section how to customize this solution
    and its usage.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: Responsive Measure 是一个简单的脚本，允许您传入一个选择器（最好是您的主要内容将放置的容器），该选择器生成生成理想测量所需的理想字体大小，以便您的文本。听起来像是魔法吗？我们将在以下部分中看到如何定制此解决方案及其用法。
- en: How to do it
  id: totrans-163
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何做到这一点
- en: 'After downloading the files of this solution from [https://github.com/jbrewer/Responsive-Measure](https://github.com/jbrewer/Responsive-Measure),
    let''s insert this code in the `<head>` tag in the beginning of DOM:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 从[https://github.com/jbrewer/Responsive-Measure](https://github.com/jbrewer/Responsive-Measure)下载此解决方案的文件后，让我们将此代码插入到
    DOM 开头的`<head>`标记中：
- en: '[PRE29]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'At the bottom of the HTML (before the `</body>` closing tag), we need to call
    the Responsive Measure script to action. However, before executing the script,
    we will clarify the following two ways to control the text size:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在 HTML 底部（在`</body>`结束标记之前），我们需要调用 Responsive Measure 脚本以执行操作。但是，在执行脚本之前，我们将澄清以下两种控制文本大小的方式：
- en: '**idealLineLength**: Its default value is `66`, but we may define our specific
    value to represent how many characters and spaces will fit in the line. Also,
    the minimum font size was set to `16px` and the maximum set to `300px`. The parameter
    `sampleText` may help calculate the number of characters that have average character
    width.'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**idealLineLength**：其默认值为`66`，但我们可以定义我们自己的特定值来表示一行中可以容纳多少个字符和空格。此外，最小字体大小设置为`16px`，最大设置为`300px`。参数`sampleText`可以帮助计算具有平均字符宽度的字符数。'
- en: Tip
  id: totrans-168
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Keep in mind that a range of 45-75 characters per line is generally accepted
    as safe for comfortable reading.
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要记住，每行 45-75 个字符的范围通常被认为是舒适阅读的安全范围。
- en: 'Here comes the preceding mentioned code:'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这里是前面提到的代码：
- en: '[PRE30]'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '**minimumFontSize and maximumFontSize**: This is where the handling of the
    font size is improved by defining 13 to minimum and 30 to maximum, for example.
    Also, the default value of `idealLineLength` may influence sometimes a little
    on the result. If it happens, define your own value and fix it, as we have just
    seen in the previous code.'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**minimumFontSize 和 maximumFontSize**：通过将最小值定义为 13 和最大值定义为 30，例如，来改进字体大小的处理。此外，默认值`idealLineLength`有时可能会对结果产生一些影响。如果发生这种情况，请定义您自己的值并进行修复，就像我们刚刚在前面的代码中看到的那样。'
- en: 'So, the following is the code:'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 所以，以下是代码：
- en: '[PRE31]'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Exercise 4 – customizing the homepage title
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习 4 – 自定义主页标题
- en: 'Let''s do this exercise in three steps. The second and third steps are just
    complementary of the first step:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分三步完成这个练习。第二步和第三步只是第一步的补充：
- en: Use Font Squirrel generator to create your font face kit. Then, implement it
    on the `<h1>` tag of your site. If you do not have any idea of which font to use,
    I would recommend to download Kite One font from GoogleFont site.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Font Squirrel 生成器创建您的字体面套件。然后，将其实现在您网站的`<h1>`标记上。如果您不知道要使用哪种字体，我建议您从 GoogleFont
    网站下载 Kite One 字体。
- en: Use the Lettering plugin to have more control over each letter, word, or line
    of your title. After that, increase the color of the first letter, changing the
    `color` property of the `.char1` class from your CSS file.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Lettering插件可以更好地控制标题的每个字母、单词或行。之后，增加第一个字母的颜色，将`.char1`类的`color`属性从你的CSS文件中修改。
- en: Use the Kern.js tool by clicking on the link from your bookmarks bar. After
    that, click on the second button from toolbar and select the first letter to increase
    its font size. Then, click on the last button to generate a code and include it
    in your CSS file
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击书签栏上的链接使用Kern.js工具。之后，点击工具栏上的第二个按钮，并选择第一个字母以增加其字体大小。然后，点击最后一个按钮生成代码并将其包含在你的CSS文件中。
- en: Summary
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概要
- en: In this chapter, we have seen the responsive font size of the text. Also, we
    have learned different ways of customizing the font family by using solutions
    such as the Font Squirrel, FitText, SlabText, Lettering, and Responsive Measure.
    These solutions create a support and independence to image that is required when
    building our responsive website.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经看到了文本的响应式字体大小。此外，我们已经学会了通过使用Font Squirrel、FitText、SlabText、Lettering和Responsive
    Measure等解决方案来定制字体族的不同方法。这些解决方案为我们构建响应式网站时所需的图像支持和独立性提供了支持。
- en: In the next chapter, we will talk about images and videos and learn how to convert
    them into responsive and adaptive media for different devices. Also, we will see
    how to work well with videos considering different player technologies and devices.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论图片和视频，并学习如何将它们转换为适应不同设备的响应式和自适应媒体。此外，我们将看到如何考虑不同的播放器技术和设备来有效地处理视频。
