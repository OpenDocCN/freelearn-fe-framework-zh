["```js\n    npm install -g @ionic/cli native-run cordova-res \n    ```", "```js\n    ionic start phototag sidemenu --type=angular --capacitor \n    ```", "```js\n    <title>**Phototag** App</title> \n    ```", "```js\n    <ion-list-header>**Phototag**</ion-list-header>\n    <ion-note>**Capture geotagged photos**</ion-note> \n    ```", "```js\n    export class AppComponent {\n      public appPages = [\n        {\n          title: 'Take a photo',\n          url: '/capture',\n          icon: 'camera'\n        },\n        {\n          title: 'View gallery',\n          url: '/view',\n          icon: 'globe'\n        }\n      ];\n      constructor() {}\n    } \n    ```", "```js\n    ionic serve \n    ```", "```js\nionic generate page capture \n```", "```js\n    {\n      path: '',\n      redirectTo: '**capture**',\n      pathMatch: 'full',\n    } \n    ```", "```js\n    <ion-header [translucent]=\"true\">\n      <ion-toolbar>\n        **<****ion-buttons****slot****=****\"start\"****>**\n    **<****ion-menu-button****color****=****\"primary\"****></****ion-menu-button****>**\n    **</****ion-buttons****>**\n    <ion-title>**Take a photo**</ion-title>\n      </ion-toolbar>\n    </ion-header> \n    ```", "```js\n    <ion-title size=\"large\">**Take a photo**</ion-title> \n    ```", "```js\n    <div id=\"container\">\n      <strong class=\"capitalize\">Take a nice photo with your camera</strong>\n      <ion-fab vertical=\"center\" horizontal=\"center\" slot=\"fixed\">\n        <ion-fab-button>\n          <ion-icon name=\"camera\"></ion-icon>\n        </ion-fab-button>\n      </ion-fab>\n    </div> \n    ```", "```js\n    #container {\n        text-align: center;\n        position: absolute;\n        left: 0;\n        right: 0;\n        top: 50%;\n        transform: translateY(-50%);\n    }\n    #container strong {\n        font-size: 20px;\n        line-height: 26px;\n    }\n    #container ion-fab {\n        margin-top: 60px;\n    } \n    ```", "```js\n    npm install @capacitor/camera @capacitor/geolocation \n    ```", "```js\n    ionic generate service photo \n    ```", "```js\n    import { Camera, CameraResultType, CameraSource } from '@capacitor/camera';\n    import { Geolocation } from '@capacitor/geolocation'; \n    ```", "```js\n    private async getLocation() {\n      const location = await Geolocation.getCurrentPosition();\n      return location.coords;\n    } \n    ```", "```js\n    async takePhoto() {\n      await this.getLocation();\n      await Camera.getPhoto({\n        resultType: CameraResultType.DataUrl,\n        source: CameraSource.Camera,\n        quality: 100\n      });\n    } \n    ```", "```js\n    import { Component, OnInit } from '@angular/core';\n    import { CommonModule } from '@angular/common';\n    import { FormsModule } from '@angular/forms';\n    import { IonicModule } from '@ionic/angular';\n    **import** **{** **PhotoService** **}** **from****'../photo.service'****;**\n    @Component({\n      selector: 'app-capture',\n      templateUrl: './capture.page.html',\n      styleUrls: ['./capture.page.scss'],\n      standalone: true,\n      imports: [IonicModule, CommonModule, FormsModule]\n    })\n    export class CapturePage implements OnInit {\n      constructor(**private** **photoService: PhotoService**) { }\n      ngOnInit() {\n      }\n    } \n    ```", "```js\n    openCamera() {\n      this.photoService.takePhoto();\n    } \n    ```", "```js\n    <ion-fab-button **(****click****)=****\"openCamera()\"**>\n      <ion-icon name=\"camera\"></ion-icon>\n    </ion-fab-button> \n    ```", "```js\n    ionic build \n    ```", "```js\n    ionic cap open <os> \n    ```", "```js\n    const firebaseConfig = {\n      apiKey: \"<Your API key>\",\n      authDomain: \"<Your project auth domain>\",\n      projectId: \"<Your project ID>\",\n      storageBucket: \"<Your storage bucket>\",\n      messagingSenderId: \"<Your messaging sender ID>\",\n      appId: \"<Your application ID>\"\n    }; \n    ```", "```js\n    npm install -g firebase-tools \n    ```", "```js\n    firebase login \n    ```", "```js\n    ng add @angular/fire \n    ```", "```js\n    ? What features would you like to setup? \n    ```", "```js\n    ? Which Firebase account would you like to use? \n    ```", "```js\n    ? Please select a project: \n    ```", "```js\n    ? Please select an app: \n    ```", "```js\n    import { provideFirebaseApp, initializeApp } from '@angular/fire/app';\n    import { getFirestore, provideFirestore } from '@angular/fire/firestore';\n    import { getStorage, provideStorage } from '@angular/fire/storage'; \n    ```", "```js\n    bootstrapApplication(AppComponent, {\n      providers: [\n        { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n        importProvidersFrom(IonicModule.forRoot({})),\n        provideRouter(routes),\n     **importProvidersFrom(****provideFirebaseApp****(****() =>****initializeApp****(<firebaseConfig>))),**\n     **importProvidersFrom(****provideFirestore****(****() =>****getFirestore****())),**\n     **importProvidersFrom(****provideStorage****(****() =>****getStorage****()))**\n      ]\n    }); \n    ```", "```js\n    import { Firestore, collection, addDoc } from '@angular/fire/firestore';\n    import { Storage, ref, uploadString, getDownloadURL } from '@angular/fire/storage'; \n    ```", "```js\n    constructor(**private** **firestore: Firestore,** **private** **storage: Storage**) {} \n    ```", "```js\n    private async savePhoto(dataUrl: string, latitude: number, longitude: number) {\n      const name = new Date().getUTCMilliseconds().toString();\n      const storageRef = ref(this.storage, name);\n      await uploadString(storageRef, dataUrl, 'data_url');\n      const photoUrl = await getDownloadURL(storageRef);\n      const photoCollection = collection(this.firestore, 'photos');\n      await addDoc(photoCollection, {\n        url: photoUrl,\n        lat: latitude,\n        lng: longitude\n      })\n    } \n    ```", "```js\n    async takePhoto() {\n      **const** **{latitude, longitude} =** await this.getLocation();\n      **const** **cameraPhoto =** await Camera.getPhoto({\n        resultType: CameraResultType.DataUrl,\n        source: CameraSource.Camera,\n        quality: 100\n      });\n    **if** **(cameraPhoto.****dataUrl****) {**\n    **await****this****.****savePhoto****(cameraPhoto.****dataUrl****, latitude, longitude);**\n     **}**\n    } \n    ```", "```js\n    ionic cap copy \n    ```", "```js\n    npm install cesium \n    ```", "```js\n    {\n      \"glob\": \"**/*\",\n      \"input\": \"node_modules/cesium/Build/Cesium/Workers\",\n      \"output\": \"/assets/cesium/Workers\"\n    },\n    {\n      \"glob\": \"**/*\",\n      \"input\": \"node_modules/cesium/Build/Cesium/ThirdParty\",\n      \"output\": \"/assets/cesium/ThirdParty\"\n    },\n    {\n      \"glob\": \"**/*\",\n      \"input\": \"node_modules/cesium/Build/Cesium/Assets\",\n      \"output\": \"/assets/cesium/Assets\"\n    },\n    {\n      \"glob\": \"**/*\",\n      \"input\": \"node_modules/cesium/Build/Cesium/Widgets\",\n      \"output\": \"/assets/cesium/Widgets\"\n    } \n    ```", "```js\n    \"styles\": [\n      **\"node_modules/cesium/Build/Cesium/Widgets/widgets.css\"****,**\n      \"src/theme/variables.scss\",\n      \"src/global.scss\"\n    ] \n    ```", "```js\n    (window as Record<string, any>)['CESIUM_BASE_URL'] = '/assets/cesium/'; \n    ```", "```js\n    npm install -D @angular-builders/custom-webpack \n    ```", "```js\n    module.exports = {\n      resolve: {\n        fallback: {\n          \"https\": false,\n          \"zlib\": false,\n          \"http\": false,\n          \"url\": false\n        }\n      },\n      module: {\n        unknownContextCritical: false\n      }\n    }; \n    ```", "```js\n    \"builder\": \"**@angular-builders/custom-webpack:browser**\" \n    ```", "```js\n    \"customWebpackConfig\": {\n      \"path\": \"./extra-webpack.config.js\"\n    } \n    ```", "```js\n    \"serve\": {\n      \"builder\": \"**@angular-builders/custom-webpack:dev-server**\",\n      \"configurations\": {\n        \"production\": {\n          \"browserTarget\": \"app:build:production\"\n        },\n        \"development\": {\n          \"browserTarget\": \"app:build:development\"\n        },\n        \"ci\": {\n          \"progress\": false\n        }\n      },\n      \"defaultConfiguration\": \"development\"\n    } \n    ```", "```js\n    ionic generate page view \n    ```", "```js\n    <ion-header [translucent]=\"true\">\n      <ion-toolbar>\n        **<****ion-buttons****slot****=****\"start\"****>**\n    **<****ion-menu-button****color****=****\"primary\"****></****ion-menu-button****>**\n    **</****ion-buttons****>**\n        <ion-title>**View gallery**</ion-title>\n      </ion-toolbar>\n    </ion-header> \n    ```", "```js\n    <ion-content [fullscreen]=\"true\">\n      <ion-header collapse=\"condense\">\n        <ion-toolbar>\n          <ion-title size=\"large\">**View gallery**</ion-title>\n        </ion-toolbar>\n      </ion-header>\n      **<****div****#mapContainer****></****div****>**\n    </ion-content> \n    ```", "```js\n    div {\n      height: 100%;\n      width: 100%;\n    } \n    ```", "```js\n    import { **AfterViewInit**, Component, **ElementRef**, OnInit, **ViewChild** } from '@angular/core';\n    import { CommonModule } from '@angular/common';\n    import { FormsModule } from '@angular/forms';\n    import { IonicModule } from '@ionic/angular';\n    **import** **{** **Viewer** **}** **from****'cesium'****;**\n    @Component({\n      selector: 'app-view',\n      templateUrl: './view.page.html',\n      styleUrls: ['./view.page.scss'],\n      standalone: true,\n      imports: [IonicModule, CommonModule, FormsModule]\n    })\n    export class ViewPage implements OnInit, **AfterViewInit** {\n    **@ViewChild****(****'mapContainer'****)** **content****:** **ElementRef** **|** **undefined****;**\n      constructor() { }\n      ngOnInit() {\n      }\n      **ngAfterViewInit****() {**\n    **const** **viewer =** **new****Viewer****(****this****.****content****?.****nativeElement****);**\n     **}**\n    } \n    ```", "```js\n    ionic generate service cesium \n    ```", "```js\n    import { Firestore, collection, getDocs } from '@angular/fire/firestore';\n    import { Cartesian3, Color, PinBuilder, Viewer } from 'cesium';\n    import { Observable } from 'rxjs';\n    import { map } from 'rxjs/operators'; \n    ```", "```js\n    export class CesiumService {\n      **private****viewer****:** **Viewer** **|** **undefined****;**\n      constructor(**private** **firestore: Firestore**) { }\n    } \n    ```", "```js\n    register(viewer: Viewer) {\n      this.viewer = viewer;\n    } \n    ```", "```js\n    private async getPhotos() {\n      const photoCollection = collection(this.firestore, 'photos');\n      return await getDocs(photoCollection);\n    } \n    ```", "```js\n    async addPhotos() {\n      const pinBuilder = new PinBuilder();\n      const photos = await this.getPhotos();\n      photos.forEach(photo => {\n        const entity = {\n          position: Cartesian3.fromDegrees(photo.get('lng'), photo.get('lat')),\n          billboard: {\n            image: pinBuilder.fromColor(Color.fromCssColorString('#de6b45'), 48).toDataURL()\n          },\n          description: `<img width=\"100%\" style=\"margin:auto; display: block;\" src=\"img/${photo.get('url')}\" />`\n        };\n        this.viewer?.entities.add(entity);\n      });\n    } \n    ```", "```js\n    .cesium-infoBox, .cesium-infoBox-iframe {\n      height: 100% !important;\n      width: 100%;\n    } \n    ```", "```js\n    import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n    import { CommonModule } from '@angular/common';\n    import { FormsModule } from '@angular/forms';\n    import { IonicModule } from '@ionic/angular';\n    import { Viewer } from 'cesium';\n    **import** **{** **CesiumService** **}** **from****'../cesium.service'****;**\n    @Component({\n      selector: 'app-view',\n      templateUrl: './view.page.html',\n      styleUrls: ['./view.page.scss'],\n      standalone: true,\n      imports: [IonicModule, CommonModule, FormsModule]\n    })\n    export class ViewPage implements OnInit, AfterViewInit {\n      @ViewChild('mapContainer') content: ElementRef | undefined;\n      constructor(**private** **cesiumService: CesiumService**) { }\n      ngOnInit() {\n      }\n      ngAfterViewInit() {\n        const viewer = new Viewer(this.content?.nativeElement);\n      }\n    } \n    ```", "```js\n    ngAfterViewInit() {\n    **this****.****cesiumService****.****register****(****new****Viewer****(****this****.****content****?.****nativeElement****));**\n    **this****.****cesiumService****.****addPhotos****();**\n    } \n    ```"]