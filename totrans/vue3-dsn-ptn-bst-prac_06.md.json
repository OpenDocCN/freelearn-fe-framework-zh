["```js\n<link rel=\"manifest\" href=\"/manifest.json\">\n```", "```js\n{\n    \"short_name\":\"PWA Example\",\n    \"name\": \"Chapter 6: Progressive Web Application Example\",\n    \"start_url\":\"/\",\n    \"display\": \"standalone\",\n    \"theme_color\":\"#2979FF\",\n    \"background_color\":\"#000\",\n    \"orientation\": \"portrait\"\n}\n```", "```js\n<p v-show=\"_install_ready && !_app_installed\">\n   Install this app\n   <button @click=\"installPWA()\">Install</button>\n</p>\n<p v-show=\"_app_installed\">\n   Progressive Web Application installed\n</p>\n```", "```js\nimport { onMounted, ref, onBeforeUnmount } from 'vue'\nconst\n    _install_ready=ref(false),\n    _install_prompt=ref(null),\n    _app_installed=ref(false)\n// Detect PWA installable\nonMounted(()=>{\n    window.addEventListener(\"beforeinstallprompt\",savePrompt)\n    window.addEventListener(\"appinstalled\",handleAppInstalled)})\nfunction savePrompt(event){\n    event.preventDefault(); // Prevents mobile prompt\n    // Save reference to the event, to activate it later\n    _install_prompt.value=event;\n    // Notify UI that the application can be installed\n    _install_ready.value=true;\n}\nfunction installPWA(){\n    // Trigger the installation prompt\n    if(_install_prompt.value){\n        _install_prompt.value.prompt()\n    }\n}\nfunction handleAppInstalled(){\n    _install_prompt.value=null;\n    _app_installed.value=true;\n}\n```", "```js\nif(navigator.serviceWorker){\n   navigator.serviceWorker.register(\"/service_worker.js\")\n}\n```", "```js\n// Set strategy, cache first, then network\nconst CACHE_NAME=\"MyCache\"\nself.addEventListener(\"fetch\", event=>{\n    // Intercepts the event to respond\n    event.respondWith((async ()=>{\n    // Try to find the request in the cache\n    const found=await caches.match(event.request);\n    if(found){\n        return found;\n    }else{\n        // Not cached fount, fall back to the network\n        const response=await fetch(event.request);\n        // Open the cache\n        const cache=await caches.open(CACHE_NAME);\n        // Place the network response in the cache\n        cache.put(event.request, response.clone());\n        // Return the response\n        return response;\n    }\n  })())\n})\n```", "```js\n$ npm install –-save-dev vite-plugin-pwa\n```", "```js\nimport { defineConfig } from 'vite'\nimport vue from '@vitejs/plugin-vue'\nimport { VitePWA } from 'vite-plugin-pwa'\nexport default defineConfig({\nplugins: [\nvue(),\nVitePWA({\n    registerType: \"autoUpdate\",\n    injectRegister: 'auto',\n    devOptions: { enabled:true },\n    workbox: {\n        globPatterns: ['**/*.{js,css,html,ico,png,svg}']\n    },\n    includeAssets:\n              ['fonts/*.ttf','images/*.png','css/*.css'],\n    manifest: {\n        \"short_name\": \"PWA Example\",\n        \"name\": \"Chapter 6 - Progressive Web Application Example\",\n        \"start_url\": \"/\",\n        \"display\": \"standalone\",\n        \"theme_color\": \"#333333\",\n        \"background_color\": \"#000000\",\n        \"orientation\": \"portrait\",\n        \"icons\": [\n           {\n            \"src\": \"/images/chapter_6_icon_192x192.png\",\n            \"sizes\": \"192x192\",\n            \"type\": \"image/png\"\n           },\n           {\n            \"src\": \"/images/chapter_6_icon.png\",\n            \"sizes\": \"512x512\",\n            \"type\": \"image/png\"\n           },\n           {\n            \"src\": \"/images/chapter_6_icon.png\",\n            \"sizes\": \"512x512\",\n            \"type\": \"image/png\",\n            \"purpose\":\"maskable\"\n           }\n         ],\n         \"prefer_related_applications\": false\n    }\n  })]\n})\n```"]