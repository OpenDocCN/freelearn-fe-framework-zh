- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Deciding to learn Angular can be quite overwhelming. This is because the de
    facto way of writing an Angular app is by using a superset language, TypeScript,
    which is fairly new. Ironically, TypeScript simplifies how Angular apps are written
    by providing strict types (as seen in strictly typed languages such as Java),
    which improves the predictive behavior of the apps we write. This book is intended
    to assist you as a beginner/intermediate Angular developer with little or no knowledge
    of TypeScript or strict typing, in general, by explaining the core concepts of
    TypeScript.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 决定学习Angular可能会让人感到非常不知所措。这是因为编写Angular应用程序的事实方式是使用一种名为TypeScript的超集语言，这是一种相当新的语言。讽刺的是，TypeScript通过提供严格类型（如Java等严格类型语言中所见）简化了编写Angular应用程序的方式，从而改善了我们编写的应用程序的预测行为。本书旨在通过解释TypeScript的核心概念，帮助初学者/中级Angular开发人员了解TypeScript或严格类型的基本概念。
- en: What this book covers
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖内容
- en: '[Chapter 1](dfb8cc54-b652-479b-8cf0-0ffa15ee3b0f.xhtml), *From Loose Types
    to Strict Types*, discusses the problems developers faced before TypeScript was
    introduced, and what problems TypeScript solves. We will do this by discussing
    loose types and their challenges, and show some examples of how these challenges
    were being tackled previously and why TypeScript is a better choice.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章《从松散类型到严格类型》讨论了TypeScript推出之前开发人员面临的问题，以及TypeScript解决了哪些问题。我们将通过讨论松散类型及其挑战，展示一些先前如何解决这些挑战的示例，以及为什么TypeScript是更好的选择。
- en: '[Chapter 2](1388eb32-f9cf-4efd-86fe-dc3f201ed039.xhtml), *Getting Started with
    Typescript*, gives a summary of TypeScript''s core concepts with practical examples
    on how to set up a vanilla JavaScript plus TypeScript project. All loosely typed
    examples in [Chapter 1](dfb8cc54-b652-479b-8cf0-0ffa15ee3b0f.xhtml), *From Loose
    Types to Strict Types*, will be rewritten with TypeScript to demonstrate TypeScript''s
    efficiency.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 第2章《开始使用Typescript》概述了TypeScript的核心概念，并提供了如何设置一个纯JavaScript加TypeScript项目的实际示例。第1章中的所有松散类型示例将被重写为TypeScript，以展示TypeScript的效率。
- en: '[Chapter 3](fb2f2b0b-b55a-42c6-b7bc-6c1a275f064a.xhtml), *Typescript Native
    Types and Features*, takes a deep dive intobuilt-in TypeScript strict types that
    match existing JavaScript loose types. Each type will be discussed extensively
    with working examples, showing how it should be used and how it should work.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 第3章《Typescript本地类型和特性》深入探讨了内置的TypeScript严格类型，这些类型与现有的JavaScript松散类型相匹配。每种类型都将通过工作示例进行广泛讨论，展示应该如何使用以及应该如何工作。
- en: '[Chapter 4](466003d0-a079-4f5b-b8b5-8342eba35b82.xhtml), *Up and Running with
    Angular and TypeScript*, discusses how TypeScript applies to Angular. To do so,
    Angular needs to be up and running with the help of the CLI tool. In this chapter,
    we will discuss what it takes to have Angular and TypeScript work together. We
    will also cover the basic Angular concepts that you could find in a *Hello World*
    example.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 第4章《使用Angular和TypeScript快速上手》讨论了TypeScript如何应用于Angular。为此，需要借助CLI工具使Angular快速上手。在本章中，我们将讨论使Angular和TypeScript协同工作所需的条件。我们还将介绍在“Hello
    World”示例中可能找到的基本Angular概念。
- en: '[Chapter 5](1bef8c6c-8732-43d4-9844-b35b04fca6c0.xhtml), *Advanced Custom Components
    with TypeScript*, discusses the concept of web components and how Angular builds
    on web components with TypeScript. We will see how to create components with classes,
    implement lifecycle hooks with TypeScript interfaces, and define components, metadetails
    using TypeScript decorators.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 第5章，*使用TypeScript创建高级自定义组件*，讨论了Web组件的概念以及Angular如何借助TypeScript构建Web组件。我们将看到如何使用类创建组件，如何使用TypeScript接口实现生命周期钩子，并使用TypeScript装饰器定义组件元数据。
- en: '[Chapter 6](70f76e99-3d5b-43d6-90ad-5ea049aa622c.xhtml), *Component Composition
    with TypeScript*, discusses how Angular is component-based. It explains that components
    are composed together as building blocks to make a fully functional app. We will
    discuss modularizing components using composition with examples and component
    interaction (data transfer and events). In doing so, we will see how TypeScript
    is used to keep us in check with all these moving parts.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 第6章，*使用TypeScript进行组件组合*，讨论了Angular是基于组件的。它解释了组件是如何作为构建块组合在一起，以使一个完全功能的应用程序。我们将讨论使用示例和组件交互（数据传输和事件）对组件进行模块化组合。在这样做的过程中，我们将看到TypeScript如何用于让我们检查所有这些移动部分。
- en: '[Chapter 7](f6baa88b-3002-4e76-8073-06863d0cb16a.xhtml), *Separating Concerns
    with Typed Services*, discusses how it’s bad practice to allow our logic to live
    in our components. In such a case, Angular allows you to provide API methods via
    services that these components can consume. We will discuss how TypeScript helps
    us create contracts (using types) between these API methods and the components.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 第7章，*使用类型服务分离关注点*，讨论了允许逻辑存在于组件中是不好的做法。在这种情况下，Angular允许您通过服务提供API方法，这些组件可以使用。我们将讨论TypeScript如何帮助我们在这些API方法和组件之间创建合同（使用类型）。
- en: '[Chapter 8](1ac951ed-2cf7-4bb1-ad84-24cc0c915855.xhtml), *Better Forms and
    Event Handling with TypeScript*, explains how the Angular form module enables
    us to write predictable typed forms with TypeScript, which is a perfect means
    of collecting data from our app users. We will also see how to use typed DOM events
    (for example, click, mouseover, and keydown) to respond to user interactions.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 第8章，*使用TypeScript改进表单和事件处理*，解释了Angular表单模块如何使我们能够使用TypeScript编写可预测的类型表单，这是从我们的应用程序用户收集数据的完美手段。我们还将看到如何使用类型化的DOM事件（例如，点击、鼠标悬停和按键）来响应用户交互。
- en: '[Chapter 9](c6cff62e-09c2-4754-99e4-89e8dab27f8c.xhtml), *Writing Modules,
    Directives, and Pipes with TypeScript*, discusses the secondary building blocks
    of Angular and how they are best used with TypeScript. You will learn how to build
    custom directives and pipes in Angular with types and decorators.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 第9章，*使用TypeScript编写模块、指令和管道*，讨论了Angular的次要构建模块以及它们如何最好地与TypeScript一起使用。您将学习如何在Angular中使用类型和装饰器构建自定义指令和管道。
- en: '[Chapter 10](bbc0f13a-7758-469d-b16c-8af78e01f270.xhtml), *Client-Side Routing
    for SPA,*explains Single Page Applications (SPAs), which are built by handing
    over routing to the client with JavaScript rather than the server. We will discuss
    how, with Angular and TypeScript, we can use the router module to build multiple
    view apps with just a single server route.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 第10章，*SPA的客户端路由*，解释了单页应用程序（SPA），它是通过使用JavaScript而不是服务器来处理路由来构建的。我们将讨论如何使用Angular和TypeScript，可以使用路由器模块仅使用单个服务器路由构建多个视图应用程序。
- en: '[Chapter 11](e6f57cd1-4211-4636-beb0-aaec6fe9d596.xhtml), *Working with Real
    Hosted Data*, takes a deep dive into consuming API data with Angular’s HTTP module.
    You will learn how to make an HTTP request right from our Angular app. Data fetched
    from this request can then be rendered by components.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[第11章](e6f57cd1-4211-4636-beb0-aaec6fe9d596.xhtml)，*使用真实托管数据*，深入探讨了使用Angular的HTTP模块消耗API数据。您将学习如何直接从我们的Angular应用程序发出HTTP请求。从此请求中获取的数据可以由组件呈现。'
- en: '[Chapter 12](63371a6b-18cb-4834-838a-fd5a2af13944.xhtml), *Testing and Debugging*,
    covers recommended practices on unit testing Angular building blocks. These include
    components, services, routes, and more.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[第12章](63371a6b-18cb-4834-838a-fd5a2af13944.xhtml)，*测试和调试*，涵盖了对Angular构建块进行单元测试的推荐实践。这些包括组件、服务、路由等。'
- en: What you need for this book
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书适合谁
- en: The examples covered in this book can be implemented on a Windows, Linux, or
    macOS PC. You'll need to install Node and npm to work with TypeScript, and a decent
    web browser.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中涵盖的示例可以在Windows、Linux或macOS PC上实现。您需要安装Node和npm来使用TypeScript，以及一个体面的网络浏览器。
- en: Who this book is for
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书适合谁
- en: This book is intended to assist a beginner/intermediate Angular developer with
    little or no knowledge about TypeScript or strict typing, in general, by explaining
    the core concepts of TypeScript. It’s also a perfect book for developers who have
    already worked with Angular 1.x or other frameworks and are trying to move to
    Angular 2.x.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 本书旨在通过解释TypeScript的核心概念，帮助初学者/中级Angular开发人员了解TypeScript或严格类型的知识很少或根本没有的人。对于已经使用过Angular
    1.x或其他框架并试图转移到Angular 2.x的开发人员来说，这也是一本完美的书籍。
- en: Conventions
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 约定
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，您将找到一些文本样式，用于区分不同类型的信息。以下是一些样式的示例及其含义的解释。
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "We
    can include other contexts through the use of the `include` directive."'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter句柄显示如下："我们可以通过使用`include`指令来包含其他上下文。"
- en: 'A block of code is set as follows:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起您对代码块的特定部分的注意时，相关行或项目会以粗体显示：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都将按以下方式编写：
- en: '[PRE2]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "Clicking the Next button moves you to the next screen."'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要单词**以粗体显示。屏幕上显示的单词，比如菜单或对话框中的单词，会以这种方式出现在文本中："点击“下一步”按钮会将您移动到下一个屏幕。"'
- en: Warnings or important notes appear in a box like this.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要说明会以这样的框出现。
- en: Tips and tricks appear like this.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 提示和技巧会以这种方式出现。
