["```js\nng new my-components --defaults \n```", "```js\nng generate library ui-controls \n```", "```js\n`public-api.ts`\n/*\n* Public API Surface of ui-controls\n*/\nexport * from './lib/ui-controls.service';\nexport * from './lib/ui-controls.component';\nexport * from './lib/ui-controls.module'; \n```", "```js\n    npm install @angular/cdk \n    ```", "```js\n    npm install bulma \n    ```", "```js\n    \"options\": {\n      \"outputPath\": \"dist/my-components\",\n      \"index\": \"src/index.html\",\n      \"main\": \"src/main.ts\",\n      \"polyfills\": [\n        \"zone.js\"\n      ],\n      \"tsConfig\": \"tsconfig.app.json\",\n      \"assets\": [\n        \"src/favicon.ico\",\n        \"src/assets\"\n      ],\n      \"styles\": [\n        \"src/styles.css\",\n        **\"****./node_modules/bulma/css/bulma.css\"**\n      ],\n      \"scripts\": []\n    } \n    ```", "```js\n    {\n      \"name\": \"ui-controls\",\n      \"version\": \"0.0.1\",\n      \"peerDependencies\": {\n        \"@angular/common\": \"^16.0.0\",\n        \"@angular/core\": \"^16.0.0\",\n        **\"@angular/cdk\"****:****\"^16.0.3\"****,**\n    **\"bulma\"****:****\"^0.9.4\"**\n      },\n      \"dependencies\": {\n        \"tslib\": \"^2.3.0\"\n      },\n      \"sideEffects\": false\n    } \n    ```", "```js\n    ng generate component card-list --project=ui-controls --export \n    ```", "```js\n    ng generate interface card --project=ui-controls \n    ```", "```js\n    export interface Card {\n      **title****:** **string****;**\n    **description****:** **string****;**\n    **link****:** **string****;**\n    } \n    ```", "```js\n    export * from './lib/card-list/card-list.component';\n    export * from './lib/card'; \n    ```", "```js\n    import { Component, **Input** } from '@angular/core';\n    **import** **{** **Card** **}** **from****'****../card'****;**\n    @Component({\n      selector: 'lib-card-list',\n      templateUrl: './card-list.component.html',\n      styleUrls: ['./card-list.component.css']\n    })\n    export class CardListComponent {\n    **@Input****()** **cards****:** **Card****[] = [];**\n    } \n    ```", "```js\n    <div>\n      <div class=\"card m-4\" *ngFor=\"let card of cards\">\n        <header class=\"card-header\">\n          <p class=\"card-header-title\">{{card.title}}</p>\n        </header>\n        <div class=\"card-content\">\n          <div class=\"content\">{{card.description}}</div>\n        </div>\n        <footer class=\"card-footer\">\n          <a [href]=\"card.link\" class=\n            \"card-footer-item\">View on Wikipedia</a>\n        </footer>\n      </div>\n    </div> \n    ```", "```js\n    :host > div {\n      display: grid;\n      grid-auto-flow: column;\n      overflow: auto;\n    }\n    .card {\n      width: 200px;\n    } \n    ```", "```js\n    **import** **{** **CommonModule** **}** **from****'****@angular/common'****;**\n    import { NgModule } from '@angular/core';\n    import { UiControlsComponent } from './ui-controls.component';\n    import { CardListComponent } from './card-list/card-list.component';\n    @NgModule({\n      declarations: [\n        UiControlsComponent,\n        CardListComponent\n      ],\n      imports: [\n        **CommonModule**\n      ],\n      exports: [\n        UiControlsComponent,\n        CardListComponent\n      ]\n    })\n    export class UiControlsModule { } \n    ```", "```js\n    ng build ui-controls \n    ```", "```js\n    import { NgModule } from '@angular/core';\n    import { BrowserModule } from '@angular/platform-browser';\n    import { AppComponent } from './app.component';\n    **import** **{** **UiControlsModule** **}** **from****'ui-controls'****;**\n    @NgModule({\n      declarations: [\n        AppComponent\n      ],\n      imports: [\n        BrowserModule,\n        **UiControlsModule**\n      ],\n      providers: [],\n      bootstrap: [AppComponent]\n    })\n    export class AppModule { } \n    ```", "```js\n    import { Component } from '@angular/core';\n    **import** **{** **Card** **}** **from****'ui-controls'****;**\n    **import** **{ assassins }** **from****'****./assassins'****;**\n    @Component({\n      selector: 'app-root',\n      templateUrl: './app.component.html',\n      styleUrls: ['./app.component.css']\n    })\n    export class AppComponent {\n      title = 'my-components';\n    **cards****:** **Card****[] = assassins;**\n    } \n    ```", "```js\n    <div class=\"container is-fluid\">\n      <h1 class=\"title\">Assassins Creed Series</h1>\n      <lib-card-list [cards]=\"cards\"></lib-card-list>\n    </div> \n    ```", "```js\n    import { DragDropModule } from '@angular/cdk/drag-drop'; \n    ```", "```js\n    @NgModule({\n      declarations: [\n        UiControlsComponent,\n        CardListComponent\n      ],\n      imports: [\n        CommonModule,\n        **DragDropModule**\n      ],\n      exports: [\n        UiControlsComponent,\n        CardListComponent\n      ]\n    }) \n    ```", "```js\n    <div **cdkDropListOrientation****=****\"horizontal\"****cdkDropList** **(****cdkDropListDropped****)=****\"sortCards($event)\"**>\n      <div **cdkDrag** class=\"card m-4\" *ngFor=\"let card of cards\">\n        <header class=\"card-header\">\n          <p class=\"card-header-title\">{{card.title}}</p>\n        </header>\n        <div class=\"card-content\">\n          <div class=\"content\">{{card.description}}</div>\n        </div>\n        <footer class=\"card-footer\">\n          <a [href]=\"card.link\" class=\"card-footer-item\">View on Wikipedia</a>\n        </footer>\n      </div>\n    </div> \n    ```", "```js\n    import { Component, Input, **Output****,** **EventEmitter** } from '@angular/core';\n    import { Card } from '../card';\n    **import** **{** **CdkDragDrop****, moveItemInArray }** **from****'@angular/cdk/drag-drop'****;** \n    ```", "```js\n    export class CardListComponent {\n      @Input() cards: Card[] = [];\n    **@Output****() cardChange =** **new****EventEmitter****<****Card****[]>();**\n    **sortCards****(****event****:** **CdkDragDrop****<****string****[]>):** **void** **{**\n    **moveItemInArray****(****this****.****cards****, event.****previousIndex****, event.****currentIndex****);**\n    **this****.****cardChange****.****emit****(****this****.****cards****);**\n     **}**\n    } \n    moveItemInArray built-in method of DragDropModule to change the order of the cards property. We pass the event parameter to the moveItemInArray method containing the previous and current index of the moved card. We also use the emit method of the cardChange property to propagate the change back to the Angular application.\n    ```", "```js\n    <div class=\"container is-fluid\">\n      <h1 class=\"title\">Assassins Creed Series</h1>\n      <lib-card-list [cards]=\"cards\" **(****cardChange****)=****\"onCardChange($event)\"**>\n      </lib-card-list>\n    </div> \n    ```", "```js\n    onCardChange(cards: Card[]) {\n      console.log(cards);\n    } \n    ```", "```js\n    ng build ui-controls \n    ```", "```js\n    ng serve \n    ```", "```js\n    ng generate component copy-button --project=ui-controls --export \n    ```", "```js\n    export * from './lib/copy-button/copy-button.component'; \n    ```", "```js\n    import { ClipboardModule } from '@angular/cdk/clipboard'; \n    ```", "```js\n    @NgModule({\n      declarations: [\n        UiControlsComponent,\n        CardListComponent,\n        CopyButtonComponent\n      ],\n      imports: [\n        CommonModule,\n        DragDropModule,\n        **ClipboardModule**\n      ],\n      exports: [\n        UiControlsComponent,\n        CardListComponent,\n        CopyButtonComponent\n      ]\n    }) \n    ```", "```js\n    import { Component, **EventEmitter****,** **Input****,** **Output** } from '@angular/core';\n    @Component({\n      selector: 'lib-copy-button',\n      templateUrl: './copy-button.component.html',\n      styleUrls: ['./copy-button.component.css']\n    })\n    export class CopyButtonComponent {\n      **@Input****() data =** **''****;**\n    **@Output****() copied =** **new****EventEmitter****<****void****>();**\n    } \n    ```", "```js\n    onCopy() {\n      this.copied.next();\n    } \n    ```", "```js\n    <button class=\"button is-light is-primary\" [cdkCopyToClipboard]=\"data\" (cdkCopyToClipboardCopied)=\"onCopy()\">\n      Copy\n    </button> \n    ```", "```js\n    <div class=\"container is-fluid\">\n      <h1 class=\"title\">Assassins Creed Series</h1>\n      <lib-card-list [cards]=\"cards\" (cardChange)=\"onCardChange($event)\"></lib-card-list>\n      **<****h1****class****=****\"title mt-5\"****>****Clipboard interaction****</****h1****>**\n    **<****div****class****=****\"field has-addons\"****>**\n    **<****div****class****=****\"control\"****>**\n    **<****input****class****=****\"input\"****type****=****\"text\"** **[(****ngModel****)]=****\"title\"****>**\n    **</****div****>**\n    **<****div****class****=****\"control\"****>**\n    **<****lib-copy-button** **[****data****]=****\"title\"** **(****copied****)=****\"log()\"****></****lib-copy-button****>**\n    **</****div****>**\n    **</****div****>**\n    </div> \n    ```", "```js\n    log() {\n      alert(this.title + ' copied to the clipboard');\n    } \n    ```", "```js\n    import { NgModule } from '@angular/core';\n    import { BrowserModule } from '@angular/platform-browser';\n    **import** **{** **FormsModule** **}** **from****'@angular/forms'****;**\n    import { AppComponent } from './app.component';\n    import { UiControlsModule } from 'ui-controls';\n    @NgModule({\n      declarations: [\n        AppComponent\n      ],\n      imports: [\n        BrowserModule,\n        UiControlsModule,\n        **FormsModule**\n      ],\n      providers: [],\n      bootstrap: [AppComponent]\n    })\n    export class AppModule { } \n    ```", "```js\n    ng build ui-controls \n    ```", "```js\n    ng build ui-controls \n    ```", "```js\n    cd dist\\ui-controls \n    ```", "```js\n    npm login \n    ```", "```js\n    npm publish \n    ```", "```js\n    ng generate application ui-elements --defaults \n    ```", "```js\n    npm install @angular/elements \n    ```", "```js\n    import { Injector, NgModule } from '@angular/core';\n    import { createCustomElement } from '@angular/elements';\n    import { BrowserModule } from '@angular/platform-browser';\n    import { UiControlsModule, CopyButtonComponent } from 'ui-controls';\n    @NgModule({\n      imports: [\n        BrowserModule,\n        UiControlsModule\n      ],\n      providers: []\n    })\n    export class AppModule { } \n    ```", "```js\n    constructor(private injector: Injector) {} \n    ```", "```js\n    ngDoBootstrap() {\n      const el = createCustomElement(CopyButtonComponent, { injector: this.injector });\n      customElements.define('copy-button', el);\n    } \n    ```", "```js\n    ng add ngx-build-plus --project=ui-elements \n    ```", "```js\n    ng build ui-elements --single-bundle \n    ```", "```js\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css\"> \n    ```", "```js\n    <div class=\"container is-fluid\">\n      <h1 class=\"title\">My Angular Element</h1>\n      <copy-button></copy-button>\n    </div> \n    <div> element styled with Bulma CSS classes and the selector of the Angular element that we defined in AppModule.\n    ```", "```js\n    <script>\n      const el = document.getElementsByTagName('copy-button')[0];\n      el.setAttribute('data', 'Some data');\n      el.addEventListener('copied', () => alert('Copied to clipboard'));\n    </script> \n    ```"]