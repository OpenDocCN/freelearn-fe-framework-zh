- en: Chapter 10. Dimensions Plug-In
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 10 章。尺寸插件
- en: The symbols we believe in
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我们信仰的符号
- en: ''
  id: totrans-2
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Sometimes turn inside out
  id: totrans-3
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 有时会颠倒过来
- en: ''
  id: totrans-4
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Reshaping each dimension
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 重塑每个尺寸
- en: ''
  id: totrans-6
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: We're so sure about
  id: totrans-7
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我们对此深信不疑
- en: ''
  id: totrans-8
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: —Devo,
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: —Devo，
- en: ''
  id: totrans-10
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '"Plain Truth"'
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '"纯真的真相"'
- en: The **Dimensions** plug-in, co-authored by Paul Bakaus and Brandon Aaron, helps
    bridge the gap between the CSS box model and developers' need to accurately measure
    the height and the width of elements in a document. It also measures with pixel
    accuracy the top and left offsets of elements, no matter where they are found
    on the page. In this chapter, we'll explore this plug-in's various methods and
    discuss their options.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**Dimensions** 插件，由 Paul Bakaus 和 Brandon Aaron 共同编写，有助于弥合 CSS 盒模型与开发者准确测量文档中元素的高度和宽度之间的差距。它还以像素精度测量元素的顶部和左侧偏移量，无论它们在页面的哪个位置。在本章中，我们将探讨此插件的各种方法并讨论它们的选项。'
- en: Size Methods
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 尺寸方法
- en: In addition to determining the dimensions of the browser window or the document,
    the following size methods form a powerful set of tools for identifying an element's
    height and width, whether we want to take into account the element's padding and
    border sizes or not.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 除了确定浏览器窗口或文档的尺寸之外，以下尺寸方法还形成了一组强大的工具，用于识别元素的高度和宽度，无论我们是否想考虑元素的填充和边框大小。
- en: 'We''ll be using the same basic HTML for each of the examples that follow:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在接下来的每个示例中使用相同的基本 HTML：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: .height()
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .height()
- en: '| Gets the height of the `document` or `window` object.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '| 获取 `document` 或 `window` 对象的高度。'
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '|'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: None.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 无。
- en: Return Value
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: An integer representing the height in pixels.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 一个表示高度的像素整数。
- en: Discussion
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 讨论
- en: The `.height` method simply uses the jQuery core method of the same name when
    applied to elements. Dimensions extends the use of `.height()` to the browser
    `window` and the `document` as well.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '`.height` 方法简单地使用了 jQuery 核心方法相同名称的方法。Dimensions 将 `.height()` 方法扩展到浏览器 `window`
    和 `document` 上。'
- en: '`$(window).height()` returns the pixel height of the browser window. If there
    is a horizontal scrollbar, it is not included in the height calculation.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '`$(window).height()` 返回浏览器窗口的像素高度。如果有水平滚动条，则不包含在高度计算中。'
- en: '`$(document).height()` returns the pixel height of the document. If the document
    has a greater height than the viewable area—in which case a vertical scrollbar
    is present—`$(document).height()` calculates the total height, including both
    the visible and the hidden parts.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`$(document).height()` 返回文档的像素高度。如果文档的高度大于可见区域——在这种情况下存在垂直滚动条——`$(document).height()`
    计算总高度，包括可见部分和隐藏部分。'
- en: 'The following image illustrates the difference between `$(document).height()`
    and `$(window).height()`:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图像说明了 `$(document).height()` 和 `$(window).height()` 之间的差异：
- en: '![Discussion.height()about](img/3810_10_01.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![Discussion.height()about](img/3810_10_01.jpg)'
- en: For information on using the `.height` method with elements on the page, see
    [Chapter 4](ch04.html "Chapter 4. DOM Manipulation Methods").
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 有关在页面上使用 `.height` 方法的信息，请参见 [第 4 章](ch04.html "第 4 章。DOM 操作方法")。
- en: .width()
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .width()
- en: '| Gets the width of the `document` or `window` object.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '| 获取 `document` 或 `window` 对象的宽度。'
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '|'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: None.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 无。
- en: Return Value
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: An integer representing the width in pixels.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 一个表示宽度的像素整数。
- en: Description
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The `.width` method, like its `.height()` counterpart, simply uses the jQuery
    core method of the same name when it is applied to elements. However, Dimensions
    extends `.width()` so that we can apply it to the `document` and the browser `window`,
    as well.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '`.width` 方法，就像它的 `.height()` 对应物一样，当应用到元素时，简单地使用了 jQuery 核心方法相同名称的方法。然而，Dimensions
    将 `.width()` 扩展，以便我们可以将其应用到 `document` 和浏览器 `window` 上。'
- en: '`$(document).width()` returns the pixel width of the document alone. If there
    is a vertical scrollbar, `$(document).width()` does not include it in the calculation.
    If the document has a greater width than the viewable area—in which case a horizontal
    scrollbar is present—`$(document).width()` calcuflates the total height, including
    both the visible and the hidden part of the page.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '`$(document).width()` 返回文档的像素宽度。如果有垂直滚动条，则 `$(document).width()` 不包括在计算中。如果文档的宽度大于可见区域——在这种情况下存在水平滚动条——`$(document).width()`
    计算总高度，包括页面的可见部分和隐藏部分。'
- en: '`$(window).width()` returns the pixel width of the browser. If there is a vertical
    scrollbar, it is not included in the width calculation.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`$(window).width()` 返回浏览器的像素宽度。如果有垂直滚动条，则不包含在宽度计算中。'
- en: 'The following image illustrates the difference between `$(document).width()`
    and `$(window).width()`:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的图像说明了`$(document).width()`和`$(window).width()`之间的差异：
- en: '![Description.width()about](img/3810_10_02.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![Description.width()about](img/3810_10_02.jpg)'
- en: For information on using the `.width` method with elements on the page, see
    [Chapter 4](ch04.html "Chapter 4. DOM Manipulation Methods").
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 有关在页面上使用`.width`方法的信息，请参阅[第4章](ch04.html "第4章. DOM 操作方法")。
- en: .innerHeight()
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .innerHeight()
- en: '| Gets the computed inner height for the first element in the set of matched
    elements.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '| 获取匹配元素集中第一个元素的计算内部高度。'
- en: '[PRE3]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '|'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: None.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 无。
- en: Return Value
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: An integer representing the inner height of the element, in pixels.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 一个表示元素内部高度的整数，以像素为单位。
- en: Description
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The `.innerHeight` method differs from the basic `.height()` in that it calculates
    the height of the top and bottom padding in addition to the element itself. It
    does not, however, include the border or margin in the calculation.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '`.innerHeight` 方法与基本的`.height()`不同之处在于它计算顶部和底部填充的高度，而不仅仅是元素本身的高度。但是，它的计算不包括边框或外边距。'
- en: If used with `document` or `window, .innerHeight()` calls the Dimensions `.height`
    method to return the value.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如果与`document`或`window`一起使用，`.innerHeight()` 调用Dimensions`.height`方法返回这个值。
- en: 'Given an element with a height of `200px`, font size of `12px`, and top and
    bottom padding of `1em, .innerHeight()` returns `224` (pixels), as can be seen
    in the following illustration:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 给定一个高度为`200px`，字体大小为`12px`，顶部和底部填充为`1em`的元素，`.innerHeight()` 返回`224`（像素），如下图所示：
- en: '![Description.innerHeight()about](img/3810_10_03.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![Description.innerHeight()about](img/3810_10_03.jpg)'
- en: .innerWidth()
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .innerWidth()
- en: '| Gets the computed inner width for the first element in the set of matched
    elements.'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '| 获取匹配元素集合中第一个元素的计算内部宽度。'
- en: '[PRE4]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '|'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: None.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 无。
- en: Return Value
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: An integer representing the inner width of the element, in pixels.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 一个表示元素内部宽度的整数，以像素为单位。
- en: Description
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The `.innerWidth` method differs from the basic `.width()` in that it calculates
    the width of the left and right padding in addition to the element itself. It
    does not, however, include the border or margin in the calculation.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '`.innerWidth` 方法与基本的`.width()`不同之处在于它计算左右填充的宽度，而不仅仅是元素本身的宽度。然而，它的计算不包括边框或外边距。'
- en: If used with `document` or `window, .innerWidth()` calls the Dimensions `.width`
    method to return the value.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果与`document`或`window`一起使用，`.innerWidth()`调用Dimensions`.width`方法返回这个值。
- en: 'Given an element with a width of `200px`, font size of `12px`, and left and
    right padding of `1em, .innerWidth()` returns `224` (pixels), as can be seen in
    the following illustration:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 给定宽度为`200px`，字体大小为`12px`，左右填充为`1em`的元素，`.innerWidth()`返回`224`（像素），如下图所示：
- en: '![Description.innerWidth()about](img/3810_10_04.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![Description.innerWidth()about](img/3810_10_04.jpg)'
- en: .outerHeight()
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .outerHeight()
- en: '| Gets the computed outer height of the first element in the set of matched
    elements.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '| 获取匹配元素集中第一个元素的计算外部高度。'
- en: '[PRE5]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '|'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: None.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 无。
- en: Return Value
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: An integer representing the outer height of the element, in pixels.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 一个表示元素外部高度的整数，以像素为单位。
- en: Discussion
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 讨论
- en: The `.outerHeight` method differs from the basic `.height()` in that it calculates
    the height of the top and bottom padding and the top and bottom borders in addition
    to the element itself. Like `.height()` and `.innerHeight()`, however, it does
    not include the element's margins in the calculation.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '`.outerHeight` 方法与基本的 `.height()` 不同之处在于它计算顶部和底部填充以及顶部和底部边框的高度，而不仅仅是元素本身的高度。但是，与`.height()`和`.innerHeight()`一样，它的计算不包括元素的外边距。'
- en: If used with `document` or `window, .outerHeight()` calls the Dimensions `.height`
    method to return the value.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如果与`document`或`window`一起使用，`.outerHeight()` 调用Dimensions`.height`方法返回这个值。
- en: '![Discussion.outerHeight()about](img/3810_10_05.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![Discussion.outerHeight()about](img/3810_10_05.jpg)'
- en: .outerWidth()
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .outerWidth()
- en: '| Gets the computed outer width for the first element in the set of matched
    elements.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '| 获取匹配元素集中第一个元素的计算外部宽度。'
- en: '[PRE6]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '|'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: None.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 无。
- en: Return Value
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: An integer representing the outer width of the element, in pixels.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 一个表示元素外部宽度的整数，以像素为单位。
- en: Description
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The `.outerWidth` method differs from the basic `.width()` in that it calculates
    the width of the left and right padding and the left and right borders in addition
    to the element itself. Like `.width()` and `.innerWidth()`, however, it does not
    include the element's margins in the calculations.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '`.outerWidth`方法与基本的`.width()`不同之处在于，它在计算元素本身的宽度之外还计算左右填充和左右边框的宽度。然而，与`.width()`和`.innerWidth()`一样，它不包括元素的边距在内的计算。'
- en: If used with `document` or `window, .outerWidth()` calls the Dimensions `.width`
    method to return the value.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 如果与`document`或`window`一起使用，`.outerWidth()`调用尺寸`.width`方法来返回值。
- en: '![Description.outerWidth()about](img/3810_10_06.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![Description.outerWidth()about](img/3810_10_06.jpg)'
- en: Position Methods
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定位方法
- en: The following methods are helpful in determining the exact positioning of elements—in
    relation to a positioned ancestor, the document body, or the viewable area of
    the document.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 以下方法有助于确定元素的精确位置——相对于定位祖先、文档主体或文档的可视区域。
- en: 'As in the *Size Methods* section, we''ll be using the same basic HTML for each
    of the following examples:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 就像*尺寸方法*部分一样，我们将为以下每个示例使用相同的基本HTML：
- en: '[PRE7]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: .scrollTop()
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .scrollTop()
- en: '| Gets the number of pixels that the window or a scrollable element within
    the document has been scrolled down.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '| 获取窗口或文档内的可滚动元素向下滚动的像素数。'
- en: '[PRE8]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '|'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: None.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 无。
- en: Return Value
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: An integer representing the vertical scrollbar position in pixels.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 表示像素的垂直滚动条位置的整数。
- en: Discussion
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 讨论
- en: 'The `.scrollTop` method is able to return the vertical scroll position of either
    the browser window or an element within the document. For example, given `<div
    class="dim-outer">` after it has been scrolled down 96 pixels (as shown in the
    following image), `$(''div.dim-outer'').scrollTop()` returns `96`:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '`.scrollTop`方法能够返回浏览器窗口或文档内元素的垂直滚动位置。例如，在`<div class="dim-outer">`向下滚动了96像素后（如下图所示），`$(''div.dim-outer'').scrollTop()`返回`96`：'
- en: '![Discussion.scrollTop()about](img/3810_10_07.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![Discussion.scrollTop()about](img/3810_10_07.jpg)'
- en: .scrollTop(value)
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .scrollTop(value)
- en: '| Sets the number of pixels to be scrolled down in the window or or the matched
    set of scrollable element within a document.'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '| 设置在窗口或文档内匹配的可滚动元素中从上向下滚动的像素数。'
- en: '[PRE9]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '|'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: '`value`: An integer representing the number of pixels.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`value`：表示像素数的整数。'
- en: Return Value
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: The jQuery object, for chaining purposes.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 用于链接目的的jQuery对象。
- en: Description
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'By passing in a numeric value to the `.scrollTop` method, we can move the scroll
    position of the browser window or scrollable elements within the document up or
    down. In the following image, the scroll position of `<div class="dim-outer">`
    has been set with `$(''div.dim‑outer'').scrollTop(200)`:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将数值传递给`.scrollTop`方法，我们可以将浏览器窗口或文档内可滚动元素的滚动位置上下移动。在下图中，`<div class="dim-outer">`的滚动位置已经设置为`$('div.dim-outer').scrollTop(200)`：
- en: '![Description.scrollTop(value)about](img/3810_10_08.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![Description.scrollTop(value)about](img/3810_10_08.jpg)'
- en: .scrollLeft()
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .scrollLeft()
- en: '| Gets the number of pixels that the window or a scrollable element within
    the document has been scrolled from left to right.'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '| 获取窗口或文档内可滚动元素从左向右滚动的像素数。'
- en: '[PRE10]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '|'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: None.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 无。
- en: Return Value
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: An integer representing the horizontal scrollbar position in pixels.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 表示水平滚动条位置的整数。
- en: Description
  id: totrans-131
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `.scrollLeft` method is able to return the horizontal scroll position of
    either the browser window or an element within the document. For example, after
    the browser window has been scrolled to the right 24 pixels, as shown in the following
    image, the return value of `$(window).scrollLeft()` is `24`:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '`.scrollLeft`方法能够返回浏览器窗口或文档内元素的水平滚动位置。例如，在浏览器窗口向右滚动了24像素后，如下图所示，`$(window).scrollLeft()`的返回值是`24`：'
- en: '![Description.scrollLeft()about](img/3810_10_09.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![Description.scrollLeft()about](img/3810_10_09.jpg)'
- en: .scrollLeft(value)
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .scrollLeft(value)
- en: '| Sets the number of pixels to be scrolled from left to right in the window
    or the matched set of scrollable elements within a document.'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '| 设置在窗口或文档内匹配的可滚动元素中从左向右滚动的像素数。'
- en: '[PRE11]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '|'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: '`value`: An integer representing the number of pixels.'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`value`：表示像素数的整数。'
- en: Return Value
  id: totrans-140
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: The jQuery object, for chaining purposes.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 用于链接目的的jQuery对象。
- en: Discussion
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 讨论
- en: By passing in a numeric value to the `.scrollLeft` method, we can move the scroll
    position of the browser window or scrollable elements within the document left
    or right. In the following image, the scroll position of the browser window has
    been set with `$(window).scrollLeft(50)`
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 通过向`.scrollLeft`方法传递一个数字值，我们可以将浏览器窗口或文档内可滚动元素的滚动位置向左或向右移动。在下面的图像中，浏览器窗口的滚动位置已经设置为`$(window).scrollLeft(50)`
- en: '![Discussion.scrollLeft(value)about](img/3810_10_10.jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![关于Discussion.scrollLeft(value)](img/3810_10_10.jpg)'
- en: .offset()
  id: totrans-145
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .偏移量()
- en: '| Gets the top and left coordinates of the first element in the set of matched
    elements. Also gets the matched element''s `scrollTop` and `scrollLeft` offsets.'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '| 获取匹配元素集中第一个元素的顶部和左侧坐标。还获取匹配元素的`scrollTop`和`scrollLeft`偏移量。'
- en: '[PRE12]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '|'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters (First Version)
  id: totrans-149
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数（第一版）
- en: '`options` (optional): A map of settings to configure the way the offset is
    calculated. Can contain the following items:'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`options` (optional)：一个设置映射，用于配置偏移量的计算方式。可以包含以下项目：'
- en: '`margin` (optional): A Boolean indicating whether to include the element''s
    margin in the calculations. Default is `true`.'
  id: totrans-151
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`margin` (optional)：一个布尔值，表示是否在计算中包含元素的外边距。默认为`true`。'
- en: '`border` (optional): A Boolean indicating whether to include the element''s
    border in the calculations. Default is `false`.'
  id: totrans-152
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`border` (optional)：一个布尔值，表示是否在计算中包含元素的边框。默认为`false`。'
- en: '`padding` (optional): A Boolean indicating whether to include the element''s
    padding in the calculations. Default is `false`.'
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`padding` (optional)：一个布尔值，表示是否在计算中包含元素的填充。默认为`false`。'
- en: '`scroll` (optional): A Boolean indicating whether to include the scroll offsets
    of all ancestor elements in the calculations. Default is `true`.'
  id: totrans-154
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`scroll` (optional)：一个布尔值，表示是否在计算中包含所有祖先元素的滚动偏移量。默认为`true`。'
- en: '`lite` (optional): A Boolean indicating whether to use offsetLite instead of
    offset. Default is `false`.'
  id: totrans-155
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lite` (optional)：一个布尔值，表示是否使用offsetLite而不是offset。默认为`false`。'
- en: '`relativeTo` (optional): An HTML element representing the ancestor element
    relative to which the matched element will be offset. Default is `document.body`.'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`relativeTo` (optional)：表示匹配元素将被偏移到哪个祖先元素的HTML元素。默认为`document.body`。'
- en: Parameters (Second Version)
  id: totrans-157
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数（第二版）
- en: '`options`: A map of settings to configure the way the offset is calculated.'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`options`：一个设置映射，用于配置偏移量的计算方式。'
- en: '`margin` (optional): A Boolean indicating whether to include the element''s
    margin in the calculations. Default is `true`.'
  id: totrans-159
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`margin` (optional)：一个布尔值，表示是否在计算中包含元素的外边距。默认为`true`。'
- en: '`border` (optional): A Boolean indicating whether to include the element''s
    border in the calculations. Default is `false`.'
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`border` (optional)：一个布尔值，表示是否在计算中包含元素的边框。默认为`false`。'
- en: '`padding` (optional): A Boolean indicating whether to include the element''s
    padding in the calculations. Default is `false`.'
  id: totrans-161
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`padding` (optional)：一个布尔值，表示是否在计算中包含元素的填充。默认为`false`。'
- en: '`scroll` (optional): A Boolean indicating whether to include the scroll offsets
    of all ancestor elements in the calculations. Default is `true`.'
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`scroll` (optional)：一个布尔值，表示是否在计算中包含所有祖先元素的滚动偏移量。默认为`true`。'
- en: '`lite` (optional): A Boolean indicating whether to use `offsetLite` instead
    of `offset`. Default is `false`.'
  id: totrans-163
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lite` (optional)：一个布尔值，表示是否使用`offsetLite`而不是`offset`。默认为`false`。'
- en: '`relativeTo` (optional): An HTML element representing the ancestor element
    relative to which the matched element will be offset. Default is `document.body`.'
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`relativeTo` (optional)：表示匹配元素将被偏移到哪个祖先元素的HTML元素。默认为`document.body`。'
- en: '`returnObject`: An object in which to store the return value. When the second
    version of the method is used, the chain will not be broken, and the result will
    be assigned to this object.'
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`returnObject`：一个对象，用于存储返回值。当使用方法的第二个版本时，链条将不会被打破，并且结果将被分配到此对象中。'
- en: Return Value (First Version)
  id: totrans-166
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值（第一版）
- en: An object containing values for `top, left`, and optionally `scrollTop` and
    `scrollLeft`.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 包含`top, left`值，以及可选的`scrollTop`和`scrollLeft`值的对象。
- en: Return Value (Second Version)
  id: totrans-168
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值（第二版）
- en: The jQuery object, for chaining purposes.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery对象，用于链式目的。
- en: Description
  id: totrans-170
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: The `.offset` method allows us to locate the `top` and `left` positions of any
    element anywhere on the page, whether its `position` is `static` or `relative,
    absolute` or `fixed`, and regardless of the position of scrollbars. With options
    for factoring margin, border, padding, and scroll into the calculation, `.offset()`
    provides great flexibility as well as accuracy.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '`.offset`方法允许我们定位页面上任何位置的任何元素的`top`和`left`位置，不管其`position`是`static`还是`relative,
    absolute`还是`fixed`，也不管滚动条的位置如何。通过对margin、border、padding和scroll进行计算，`.offset()`提供了极大的灵活性和准确性。'
- en: The following series of images demonstrates the different values returned by
    `.offset()` depending on how the options are set.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 以下一系列图像展示了不同设置下`.offset()`返回的不同值。
- en: '**Defaults**'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '**默认设置**'
- en: 'In the first example, the default settings for padding (false), border (false),
    and margin (true) are used. The result:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一个示例中，使用了padding（false）、border（false）和margin（true）的默认设置。结果：
- en: '[PRE13]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![Description.offset()about](img/3810_10_11.jpg)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![Description.offset()about](img/3810_10_11.jpg)'
- en: Note here that since the default for margin is `true`, the distance from the
    left edge of the window to the matched element extends all the way to (but not
    including) the element's border.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，由于margin的默认值是`true`，因此从窗口左边缘到匹配元素的距离一直延伸到（但不包括）元素的边框。
- en: '**Including Border**'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '**包括边框**'
- en: 'In the second example, the border option is set to `true`. Since `<div class="dim-outer">`
    has a 5-pixel border around it, the `top` and `left` values increase by 5 pixels
    each:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二个示例中，边框选项设置为`true`。由于`<div class="dim-outer">`周围有5像素的边框，`top`和`left`值分别增加了5像素：
- en: '[PRE14]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![Description.offset()about](img/3810_10_12.jpg)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![Description.offset()about](img/3810_10_12.jpg)'
- en: '**Including Border and Padding**'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '**包括边框和内边距**'
- en: 'The next example sets both the border and padding options to `true` (remember
    that the margin option''s value is `true` by default). The result is an increase,
    again, of 5 pixels for the borders and another 12 pixels (1em) for the padding:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的示例将边框和padding选项都设置为`true`（记住margin选项的默认值为`true`）。结果是边框增加了5像素，内边距增加了另外12像素（1em）：
- en: '[PRE15]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![Description.offset()about](img/3810_10_13.jpg)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![Description.offset()about](img/3810_10_13.jpg)'
- en: '**Finding the Position Relative to an Ancestor**'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '**查找相对于祖先的位置**'
- en: 'With the `relativeTo` option, we can find the offset distance between an element
    and any one of its positioned ancestors. In the next example, we''re getting the
    offset between `<div class="dim-outer">` and `<div id="content">`. Since this
    `content <div>` is itself offset from the left side of the window due to a container''s
    24-pixel left margin, the value of `left` is now 24 pixels less than that of the
    previous example:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 通过`relativeTo`选项，我们可以找到元素与其任何一个定位祖先之间的偏移距离。在下一个示例中，我们正在获取`<div class="dim-outer">`和`<div
    id="content">`之间的偏移量。由于`content <div>`本身就是由于容器的24像素左边距而从窗口左侧偏移，左侧的值现在比上一个示例少了24像素：
- en: '[PRE16]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![Description.offset()about](img/3810_10_14.jpg)'
  id: totrans-189
  prefs: []
  type: TYPE_IMG
  zh: '![Description.offset()about](img/3810_10_14.jpg)'
- en: It's worth noting here that, since the `relativeTo` setting takes a DOM element,
    we used the shorthand `[0]` notation to convert a jQuery object to a DOM element
    before using it for the `relativeTo` argument.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，由于`relativeTo`设置需要一个DOM元素，所以我们在使用它的`relativeTo`参数之前，使用了简写`[0]`来将jQuery对象转换为DOM元素。
- en: The `top` value of `27` is derived from the sum of the floated `<div class="dim-outer">`
    element's margin (`12`), border (`5`), and padding (`10`). If `<div id="content">`
    had any top padding applied to it, that would be added to the total top offset
    as well.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '`top`值为`27`是由浮动`<div class="dim-outer">`元素的margin（`12`）、border（`5`）和padding（`10`）的总和得出的。如果`<div
    id="content">`有任何应用到其顶部的padding，那也将被添加到总的顶部偏移量中。'
- en: '**Returning Scroll Offsets**'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '**返回滚动偏移**'
- en: 'The `scroll` option, which has a default value of `true`, is particularly useful
    when the matched element is inside one or more elements that have the `overflow`
    property set to `auto` or `scroll`. It adds the total scroll offsets of all ancestor
    elements to the total offset and adds two properties to the returned object, `scrollTop`
    and `scrollLeft`. Its usefulness can be observed in the following example showing
    the offset of `<div class="dim-inner">` when `<div class="dim-outer">` has been
    scrolled down 79 pixels:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '`scroll`选项的默认值为`true`，当匹配的元素位于一个或多个`overflow`属性设置为`auto`或`scroll`的元素内部时，它特别有用。它将所有祖先元素的滚动偏移量添加到总偏移量中，并向返回的对象添加了两个属性，`scrollTop`和`scrollLeft`。其实用性可以在下面的示例中观察到，示例显示了`<div
    class="dim-outer">`在`<div class="dim-outer">`向下滚动了79像素时的偏移量。'
- en: '[PRE17]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![Description.offset()about](img/3810_10_15.jpg)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
  zh: '![描述.offset()about](img/3810_10_15.jpg)'
- en: '**Maintaining Chainability**'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '**保持链式操作**'
- en: If we wish to pass in a return object in order to continue chaining methods,
    we must still include the options map. To keep the default values intact for those
    options while passing in a return object, we can simply use an empty map. For
    example, `$('div.dim-outer').offset({}, returnObject)` obtains the same values
    as `$('div.dim-outer').offset()`, but stores them in `returnObject` for later
    use.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们希望传递返回对象以便继续链接方法，我们仍然必须包含选项映射。为了保持这些选项的默认值不变，同时传递返回对象，我们可以简单地使用一个空映射。例如，`$('div.dim-outer').offset({},
    returnObject)`获得与`$('div.dim-outer').offset()`相同的值，但将它们存储在`returnObject`中以供以后使用。
- en: 'Suppose we want to get the offset and scroll values of `<div class="dim-outer">`
    while changing its background color to gray (#cccccc) at the same time. The code
    would look like this:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们希望在更改`<div class="dim-outer">`的背景颜色为灰色（#cccccc）的同时获取其偏移和滚动值。代码将如下所示：
- en: '[PRE18]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'We start by declaring a variable for the return object (retObj). Then we chain
    the `.offset` and `.css` methods to the selector. Finally, we do something with
    the object returned by `.offset()—in` this case, log the results with our Log
    plug-in. The `<div>''s` background color is changed and the `.offset()` values
    are logged as follows:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先声明一个返回对象的变量（retObj）。然后我们将`.offset`和`.css`方法链接到选择器上。最后，我们对`.offset()`返回的对象执行某些操作—在这种情况下，使用我们的日志插件记录结果。
    `<div>`的背景颜色被更改，并且`.offset()`值如下所示被记录：
- en: '[PRE19]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '![Description.offset()about](img/3810_10_16.jpg)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![描述.offset()about](img/3810_10_16.jpg)'
- en: .position()
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`.position()`'
- en: '| Gets the position of the first element in the matched set of elements, relative
    to its nearest relative-, absolute- or fixed-positioned ancestor.'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '| 获取匹配元素集中第一个元素相对于其最近的相对、绝对或固定定位的祖先的位置。'
- en: '[PRE20]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '|'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters (First Version)
  id: totrans-207
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数（第一个版本）
- en: None.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 无。
- en: Parameters (Second Version)
  id: totrans-209
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数（第二个版本）
- en: '`returnObject`: An object in which to store the return value. When the second
    version of the method is used, the chain will not be broken, and the result will
    be assigned to this object.'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`returnObject`：用于存储返回值的对象。当使用方法的第二个版本时，链不会中断，并且结果将被分配给此对象。'
- en: Return Value (First Version)
  id: totrans-211
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值（第一个版本）
- en: An object containing values for `top` and `left`.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 包含`top`和`left`值的对象。
- en: Return Value (Second Version)
  id: totrans-213
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值（第二个版本）
- en: The jQuery object, for chaining purposes.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery对象，用于链式操作。
- en: Description
  id: totrans-215
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 描述
- en: 'The `.position` method is shorthand for the following `.offset()` variation:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '`.position`方法是以下`.offset()`变体的简写形式：'
- en: '[PRE21]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Here, only the element's top and left position—without any padding, border,
    or margin—is determined in relation to its nearest positioned ancestor. For more
    details on these options, see the description of `.offset()`.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，只确定元素的顶部和左侧位置—没有填充、边框或边距—与其最近的定位祖先相关。有关这些选项的更多详细信息，请参阅`.offset()`的描述。
- en: For `relativeTo`, the `.position()` method uses a variable, `offsetParent`,
    which is set in the Dimensions code. Effectively, this code begins with the element's
    immediate parent and crawls up the DOM, stopping at the first element that has
    a position of `relative, absolute`, or `fixed`. The initial element's offset position
    is then calculated in relation to that nearest positioned element.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`relativeTo`，`.position()`方法使用一个名为`offsetParent`的变量，该变量在Dimensions代码中设置。实际上，这段代码从元素的直接父级开始，然后在DOM中向上爬行，停止在第一个具有`relative,
    absolute`或`fixed`位置的元素处。然后，相对于最近的定位元素计算初始元素的偏移位置。
- en: 'Consider the following HTML:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下HTML：
- en: '[PRE22]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Using `$('p').position()calculates` the top and left offsets of the paragraph
    in relation to `<div id="middle">` because that `<div>` is the nearest positioned
    ancestor (note its `style` attribute).
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`$('p').position()`计算段落相对于`<div id="middle">`的顶部和左侧偏移，因为该`<div>`是最近的定位祖先（请注意其`style`属性）。
- en: Since `.position()` takes no parameters (except `returnValue` in the second
    version), it is much less flexible than `.offset()`. In most cases, `.offset()`,
    which was discussed above, is recommended.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 由于`.position()`不带任何参数（第二个版本中除了`returnValue`），它比`.offset()`灵活性要小得多。在大多数情况下，建议使用上述讨论的`.offset()`。
