- en: Staying Up to Date with Angular Updates
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与 Angular 更新保持同步
- en: Delivering a secure, fast, and consistent experience on the web across dozens
    of combinations of different browsers in differing versions is not an easy feat.
    Angular exists to make this possible; however, the internet is a constantly evolving
    landscape of competing technologies and vendors. The Angular team has committed
    to updating the platform on a regular basis, but it's up to you to keep up to
    date with patch, minor and major releases of Angular.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在不同版本的几十种不同浏览器的数十种组合上提供安全、快速和一致的 Web 体验并不是一件容易的事。Angular 的存在就是为了实现这一点；然而，互联网是一个不断发展的竞争技术和供应商的领域。Angular
    团队已经承诺定期更新平台，但是要靠您来跟上 Angular 的补丁、次要版本和主要版本的发布。
- en: Angular is a platform that aims to minimize the effort of upgrading from version
    to version, providing helpful tools and guides, most importantly in a deterministic
    release cadence and ample communication regarding deprecated features that allows
    for proper planning to remain up to date.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Angular 是一个旨在最大程度减少从一个版本升级到另一个版本的工作量的平台，提供了有用的工具和指南，最重要的是确定性的发布节奏和关于废弃功能的充分沟通，这允许进行适当的规划以保持最新。
- en: 'You must plan to keep up to date with Angular in a thoughtful and planned manner.
    Such a strategy will result in maximizing the benefit you gain by using a platform
    like Angular, keeping bugs and divergent experiences across browsers to a minimum.
    At its most extreme, you have a choice: either retain hundreds of testers to test
    your web applications across all major browsers and their recent versions and
    dozens of developers to maintain compatibility issues or keep your version of
    Angular (or your choice of framework) up to date. Keep in mind that ultimately,
    it''s up to you to ensure the quality of the product you deliver.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 您必须以一种深思熟虑和计划的方式保持与 Angular 的最新版本同步。这样的策略将最大程度地提高您使用 Angular 这样的平台所获得的好处，将错误和浏览器之间的不一致体验降至最低。在极端情况下，您有选择：要么保留数百名测试人员来测试您的
    Web 应用程序在所有主要浏览器及其最新版本上的兼容性问题，要么保持您的 Angular 版本（或您选择的框架）保持最新。请记住，最终，确保您交付的产品质量是由您来决定的。
- en: Feel free to skip this chapter now and get back to it when a minor or major
    version of Angular is released or keep on reading to see what a potential upgrade
    process may look like.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 现在可以随意跳过本章，当 Angular 的一个次要或主要版本发布时再回来阅读，或者继续阅读以了解潜在的升级过程可能是什么样子。
- en: 'In the chapter, we will go over the following topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下主题：
- en: Updating Node
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新节点
- en: Updating `npm` and Global Packages
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新 `npm` 和全局包
- en: Updating Angular
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新 Angular
- en: Addressing security vulnerabilities
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决安全漏洞
- en: Updating your web server
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新您的 Web 服务器
- en: A brief history of web frameworks
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Web 框架的简要历史
- en: Is it important to consider why we use frameworks such as Angular or React in
    the first place? Before Angular, there was AngularJS and Backbone, both of which
    heavily relied on the framework that came before the ubiquitous jQuery. In the
    early days of the existence of jQuery, back in 2006, its purpose was quite obvious
    for web developers—to create a consistent API surface to enable DOM manipulation.
    Browser vendors are supposed to implement various web technologies like HTML,
    JavaScript/EcmaScript and CSS, as standardized by The World Wide Web Consortium
    (W3C). Internet Explorer, the only browser vast majority of internet users relied
    on at the time, acted as a vehicle to push proprietary technologies and APIs to
    retain its edge as the go-to browser. First, Mozilla's Firefox and then Google's
    Chrome browsers successfully gained significant market. However, the breakneck
    speed at which new browser versions started being released, competing interests
    and differing qualities, versions and names of implementations of draft and ratified
    standards created untenable conditions for developers to deliver consistent experiences
    on the web. So instead of repeatedly writing code to check browser versions, you
    could just use jQuery and you were good to go, which hid away all the complexities
    of vendor-specific implementations, missing features by gracefully filling in
    the gaps.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，重要的是考虑为什么我们首先要使用Angular或React等框架？在Angular之前，有AngularJS和Backbone，它们都严重依赖于普遍存在的jQuery之前的框架。在jQuery存在的早期，即2006年，它对Web开发人员的目的是非常明显的——创建一个一致的API表面来实现DOM操作。浏览器供应商应该实现各种Web技术，如HTML、JavaScript/EcmaScript和CSS，这是由万维网联盟（W3C）标准化的。当时，绝大多数互联网用户依赖的唯一浏览器是Internet
    Explorer，它作为推动专有技术和API以保持其作为首选浏览器的优势的工具。首先是Mozilla的Firefox，然后是Google的Chrome浏览器成功地获得了重要市场份额。然而，新浏览器版本开始以惊人的速度发布，竞争利益和不同的实现草案和已批准标准的版本和名称的质量差异造成了开发人员无法在Web上提供一致的体验。因此，您可以使用jQuery而不是反复编写代码来检查浏览器版本，这样您就可以轻松地隐藏供应商特定实现的所有复杂性，通过优雅地填补空白来弥补缺失的功能。
- en: It was still cumbersome to create rich user experiences in jQuery, and frameworks
    like Backbone and AngularJS made it more cost effective to build web applications
    that had a native feel and speed to them. However, browsers kept changing, so
    did jQuery and unforeseen effects of early design decisions, as with evolving
    standards, resulted in two new and different approaches to building web application
    in Angular and React. The transition from AngularJS to Angular has been jarring
    experience for the entire community, including the Angular development team, but
    it had to be a big-bang release to create a platform that could evolve. Now, the
    new Angular platform is committed to stay up to date with incremental releases
    delivered on a regular basis to avoid the mistakes of the past.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在jQuery中创建丰富的用户体验仍然很繁琐，Backbone和AngularJS等框架使构建具有本地感和速度的Web应用程序更具成本效益。然而，浏览器不断变化，jQuery和早期设计决策的意想不到的影响随之而来，随着标准的不断发展，导致了在Angular和React中构建Web应用程序的两种新的不同方法。从AngularJS过渡到Angular对整个社区来说都是一个令人不适的经历，包括Angular开发团队，但这必须是一个重大发布，以创建一个可以不断发展的平台。现在，新的Angular平台致力于保持最新状态，定期发布增量版本，以避免过去的错误。
- en: Updating Node
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新Node
- en: Even if you are not using Node.js as a web server, you're already using it to
    install your dependencies through npm and execute your build and testing tasks
    through Node.js-based packages such as WebPack, Gulp, or Grunt. Node.js is lightweight
    cross-platform execution environment that makes most modern development tooling
    work seamlessly. Due to its nature, Node sits at the very bottom of your tech
    stack outside of your host operating system. It is important to keep your version
    of Node up-to-date to get benefits of security, speed, and feature updates.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 即使您不将Node.js用作Web服务器，您也已经在使用它通过npm安装您的依赖项，并通过基于Node.js的软件包（如WebPack，Gulp或Grunt）执行构建和测试任务。Node.js是一个轻量级的跨平台执行环境，可以使大多数现代开发工具无缝工作。由于其性质，Node位于您的主机操作系统之外的技术堆栈的最底层。保持Node的版本最新以获得安全性、速度和功能更新的好处非常重要。
- en: 'Node.js is maintained in two branches: **Long Term Support** (**LTS**) version
    and Current. Odd numbered releases are one off, risky releases, that are not planned
    for an LTS phases. Even numbered releases are first released as Current, then
    phases in to LTS.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Node.js有两个分支：**长期支持**（**LTS**）版本和当前版本。奇数版本是一次性的、风险的发布，不计划进行LTS阶段。偶数版本首先作为当前版本发布，然后进入LTS阶段。
- en: 'For maximum stability and to avoid unforeseen issues, I highly recommend sticking
    to the LTS version of Node:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 为了最大的稳定性和避免意外问题，我强烈建议坚持使用Node的LTS版本：
- en: 'Check your current version by running this:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行此命令检查您当前的版本：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You can view further information on the latest release at [https://nodejs.org](https://nodejs.org).
    Apart from planned releases, this website will often contain information about
    out-of-band critical security patches for various Node.js releases.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[https://nodejs.org](https://nodejs.org)上查看有关最新发布的更多信息。除了计划发布，这个网站通常会包含有关各种Node.js发布的临时关键安全补丁的信息。
- en: 'If you''re on an odd-numbered or non-LTS release channel remove your existing
    installation of Node:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您使用奇数或非LTS发布频道，请删除您现有的Node安装：
- en: 'On Windows, ensure that you''re running PowerShell with Administrative privileges:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows上，请确保您以管理员权限运行PowerShell：
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'On macOS, if your environment is set up correctly, you shouldn''t need to add
    `sudo` to your command:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在macOS上，如果您的环境设置正确，您不需要在命令中添加`sudo`：
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'On Windows, to upgrade to the latest LTS version, execute the following command:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Windows上，要升级到最新的LTS版本，请执行以下命令：
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'On macOS, if you don''t already have Node 8 installed, you''ll first have to
    execute the following:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在macOS上，如果您还没有安装Node 8，您首先需要执行以下操作：
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'If you''re already on version 8, then execute this:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您已经在版本8上，则执行以下操作：
- en: '[PRE5]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note that version 10 is planned to be the next LTS release in October 2018,
    so you'll need to keep this in mind before running the brew install command.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，计划在2018年10月发布版本10作为下一个LTS版本，因此在运行brew install命令之前，您需要牢记这一点。
- en: If you're on macOS, refer to the next section for an easier way to manage your
    version of Node with the `n` tool. Otherwise, skip to the section on *Updating
    Npm*.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在macOS上，请参考下一节，了解使用`n`工具更轻松地管理您的Node版本的方法。否则，请跳转到*更新Npm*部分。
- en: n - Node version manager for macOS
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: n - 用于macOS的Node版本管理器
- en: 'On macOS, HomeBrew doesn''t have an LTS-specific channel for Node, and if the
    latest version is an odd-numbered version, you''ll find yourself in an undesirable
    position. If you execute `brew upgrade node` by mistake and upgrade to an odd
    version, recovering from this mistake is annoying at best. The process includes
    potentially breaking other CLI tools by running a command like this:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在macOS上，HomeBrew没有Node的LTS特定频道，如果最新版本是奇数版本，您将发现自己处于一个不理想的位置。如果您错误地执行了`brew upgrade
    node`并升级到奇数版本，要从这个错误中恢复最好是很烦人的。这个过程包括通过运行类似于这样的命令来潜在地破坏其他CLI工具：
- en: '[PRE6]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'After your initial Node install through brew, I highly recommend leveraging
    the feature rich, and interactive Node version manager tool, `n`, created by ex-Node
    maintainer TJ Holowaychuk:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在通过brew进行初始Node安装后，我强烈建议利用功能丰富、交互式的Node版本管理工具`n`，由前Node维护者TJ Holowaychuk创建：
- en: 'Install `n`:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装`n`：
- en: '[PRE7]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Execute `n`, which will display a list of all versions of Node previously downloaded
    to your computer with the current version marked:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行`n`，它将显示您计算机上先前下载的所有Node版本的列表，并标记当前版本：
- en: '[PRE8]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Execute `n lts` to install the latest LTS build:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行`n lts`以安装最新的LTS版本：
- en: '[PRE9]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: With `n`, you can quickly switch between Node versions.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`n`，您可以快速在不同的Node版本之间切换。
- en: In the section, we will go over how you can keep npm up to date.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将介绍如何保持npm的最新状态。
- en: Updating npm and Global npm packages
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新npm和全局npm包
- en: If Node is the lowest-level tool in your tech stack, npm and global npm packages
    would be considered the next layer sitting in between Angular and Node.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果Node是您技术栈中最低级别的工具，那么npm和全局npm包将被视为坐落在Angular和Node之间的下一层。
- en: 'Every time you update your version of Node, you also get a new version of npm,
    which ships bundled with Node. However, npm''s release schedule doesn''t coincide
    with Node''s. At times, there will be significant performance and feature gains
    to warrant a specific upgrade to your version of npm, such as the order of magnitude
    speed improvements introduced with npm v5.0.0 or the npx tool, which reduces the
    need for global packages, introduced with npm v5.2.0:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 每次更新Node版本时，您还会获得一个新版本的npm，它与Node捆绑在一起。但是，npm的发布计划与Node的不一致。有时，会有显著的性能和功能增益，需要特定升级您的npm版本，例如npm
    v5.0.0引入的数量级速度改进，或者npm v5.2.0引入的减少全局包需求的npx工具：
- en: 'On Windows, you need the `npm-windows-upgrade` tool to upgrade your version
    of npm:'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Windows上，您需要使用`npm-windows-upgrade`工具来升级您的npm版本：
- en: 'Install `npm-windows-upgrade`:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装`npm-windows-upgrade`：
- en: '[PRE10]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: If you run into errors during installation of the tool, refer to the *Npm fails
    to install a global tool on Windows* section to resolve any issues with your system
    setup.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在安装工具时遇到错误，请参考*Npm fails to install a global tool on Windows*部分，解决系统设置的任何问题。
- en: 'Execute `npm-windows-upgrade` in an elevated shell, and you will get a list
    of options, as shown:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在提升的shell中执行`npm-windows-upgrade`，您将获得一系列选项，如下所示：
- en: '[PRE11]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Select a stable release, in this case, `6.0.0`:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择一个稳定的版本，例如`6.0.0`：
- en: '[PRE12]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Verify your installation:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证您的安装：
- en: '[PRE13]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'On macOS, it is straightforward to upgrade your version of npm:'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在macOS上，升级您的npm版本很简单：
- en: 'Execute `npm install -g npm`:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行`npm install -g npm`：
- en: '[PRE14]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Note that installing global packages, as shown earlier, should not require the
    use of `sudo`.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，安装全局包，如前面所示，不应需要使用`sudo`。
- en: 'If `sudo` is required, execute this:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果需要`sudo`，执行以下操作：
- en: '[PRE15]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Find the owner and the permissions of this folder:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到此文件夹的所有者和权限：
- en: '[PRE16]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: As you see can see, the correct configuration looks like your own user, shown
    in bold as `youruser`, has read/write/execute rights on the folder, also shown
    in bold as `rwx`, in which `npm` resides. If this is not the case, use `sudo chown
    -R $USER /usr/local/bin/npm` to own the folder, followed by `chmod -R o+rwx  /usr/local/bin/npm`
    to ensure that your user has full rights.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，正确的配置看起来像您自己的用户，以粗体显示为`youruser`，对该文件夹具有读/写/执行权限，也以粗体显示为`rwx`，其中`npm`位于其中。如果不是这种情况，请使用`sudo
    chown -R $USER /usr/local/bin/npm`来拥有该文件夹，然后使用`chmod -R o+rwx /usr/local/bin/npm`来确保您的用户具有完全权限。
- en: 'Verify your installation:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证您的安装：
- en: '[PRE17]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: It is important to keep any globally installed package up to date as well; refer
    to the next section on how to keep your global installs to a minimum and troubleshoot
    installation issues on Windows.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 保持任何全局安装的软件包最新也很重要；请参考下一节，了解如何将全局安装保持在最低限度，并解决Windows上的安装问题。
- en: Global Npm packages
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 全局Npm包
- en: As mentioned earlier in this section and in [Chapter 2](312e0dbe-54ac-45c6-97c7-f41c98723919.xhtml),
    *Create a Local Weather Web Application*, when setting up your Angular project,
    you should refrain from installing any project specific tool as a global package.
    This includes tools like `typescript`, `webpack`, `gulp`, or `grunt` to name a
    few examples. The `npx` tool enables the conveniences of running CLI commands
    such as `tsc` using the specific version your project depends on with only a minimal
    hit to performance. As discussed in [Chapter 2](312e0dbe-54ac-45c6-97c7-f41c98723919.xhtml),
    *Create a Local Weather Web Application*, installing project-specific tools globally
    has adverse affects on your development environment.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如本节和[第2章](312e0dbe-54ac-45c6-97c7-f41c98723919.xhtml)中所述，在设置Angular项目时，您应该避免将任何项目特定工具安装为全局包。这包括诸如`typescript`、`webpack`、`gulp`或`grunt`等工具。`npx`工具使您能够方便地运行CLI命令，例如使用特定版本的`tsc`，而对性能的影响很小。如[第2章](312e0dbe-54ac-45c6-97c7-f41c98723919.xhtml)中所讨论的，全局安装项目特定工具会对您的开发环境产生不利影响。
- en: I do mention a list of tools that I still continue to install globally, such
    as the `n` tool from the *Upgrading Node* section or `rimraf`, which is a cross-platform
    recursive deletion tool that comes in very handy when Windows 10 doesn't cooperate
    with deleting your `node_modules` folder. These tools are non-project specific
    and largely stable, that don't need frequent updates.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我确实提到了一些我仍然继续全局安装的工具，比如来自*升级Node*部分的`n`工具，或者`rimraf`，这是一个跨平台递归删除工具，在Windows
    10不配合删除您的`node_modules`文件夹时非常方便。这些工具是非项目特定的，而且基本稳定，不需要频繁更新。
- en: 'The reality is that unless the tool reminds you to upgrade itself, you most
    likely will never proactively do so. The now CLI tool we used in [Chapter 3](4e68114e-68b7-4fe6-a853-81347e981667.xhtml),
    *Prepare Angular App for Production Release*, to publish our Docker container
    in the cloud is a great example of a tool that remains vigilant about keeping
    itself up to date with a message as follows:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 事实是，除非工具提醒您升级自己，否则您很可能永远不会主动这样做。我们在[第3章](4e68114e-68b7-4fe6-a853-81347e981667.xhtml)中使用的now
    CLI工具，*为生产发布准备Angular应用*，以在云中发布我们的Docker容器，是一个很好的例子，它始终保持警惕，以确保自己与以下消息保持最新：
- en: '[PRE18]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'You can upgrade global tools by executing this:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过执行以下操作升级全局工具：
- en: '[PRE19]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Beware that the `@latest` request will upgrade to the next major version, if
    available, without much fanfare. While major release contain exciting and useful
    new features, they also risk breaking old functionality that you may be depending
    on.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`@latest`请求将升级到下一个主要版本，如果可用的话，而不会引起太多轰动。虽然主要版本包含令人兴奋和有用的新功能，但它们也有破坏旧功能的风险，而您可能正在依赖这些功能。
- en: That should complete your upgrade. However, especially on Windows, it is easy
    to put your Node and npm installation in a broken state. The following section
    covers common troubleshooting steps and actions you can take to restore your Windows
    setup.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该完成您的升级。然而，特别是在Windows上，很容易使您的Node和npm安装处于破损状态。以下部分涵盖了常见的故障排除步骤和您可以采取的操作，以恢复您的Windows设置。
- en: Npm fails to install a global tool on Windows
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Npm在Windows上无法安装全局工具
- en: 'Npm may fail to install global tools; consider the symptom, cause, and solutions
    discussed as follows:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: Npm可能无法安装全局工具；请考虑以下讨论的症状、原因和解决方案：
- en: '**Symptom**: When you attempt to install a global tool, you may get an error
    message containing the Refusing to delete message similar to the one shown here:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**症状**：当您尝试安装全局工具时，您可能会收到一个包含拒绝删除消息的错误消息，类似于下面显示的消息：'
- en: '[PRE20]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '**Cause**: On Windows, if you ever executed `npm install -g npm` or upgraded
    your version of Node using choco, your npm installation has likely been corrupted.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**原因**：在Windows上，如果您曾经执行过`npm install -g npm`或使用choco升级过您的Node版本，您的npm安装很可能已经损坏。'
- en: '**Solution 1**: Recover your environment with the `npm-windows-upgrade` tool:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案1**：使用`npm-windows-upgrade`工具恢复您的环境：'
- en: 'Execute the npm upgrade routine:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行npm升级例程：
- en: '[PRE21]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Delete the offending file and directory with `rimraf`:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`rimraf`删除有问题的文件和目录：
- en: '[PRE22]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Try installing again:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试重新安装：
- en: '[PRE23]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: If this doesn't resolve your issue, then attempt Solution 2.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这不能解决您的问题，请尝试解决方案2。
- en: '**Solution 2**: If you have installed non-LTS nodejs or have not configured
    npm correctly, try the following steps:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案2**：如果您安装了非LTS nodejs或者没有正确配置npm，请尝试以下步骤：'
- en: 'Uninstall non-LTS nodejs and reinstall it:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 卸载非LTS nodejs并重新安装它：
- en: '[PRE24]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Install `npm-windows-upgrade` following the guide at [https://github.com/npm/npm/wiki/Troubleshooting#upgrading-on-windows](https://github.com/npm/npm/wiki/Troubleshooting#upgrading-on-windows).
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照[https://github.com/npm/npm/wiki/Troubleshooting#upgrading-on-windows](https://github.com/npm/npm/wiki/Troubleshooting#upgrading-on-windows)中的指南安装`npm-windows-upgrade`。
- en: 'In Powershell, with Administrator privileges, execute this:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在具有管理员权限的Powershell中执行此操作：
- en: '[PRE25]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Execute `npm-windows-upgrade`:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行`npm-windows-upgrade`：
- en: '[PRE26]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Note the According to npm folder.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意根据npm文件夹。
- en: Navigate to this folder and ensure that `npm` or `npm.cmd` doesn't exist in
    this folder.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到此文件夹，并确保此文件夹中不存在`npm`或`npm.cmd`。
- en: If it does, remove.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果有，删除。
- en: Ensure that this folder is in `PATH`.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保此文件夹在`PATH`中。
- en: 'Click on Start and search for `Environment Variables`. Click on Edit the system
    environment variables. In the System Properties window, click on Environment Variables.
    Select the line with Path. Click on Edit:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 单击“开始”，搜索“环境变量”。单击“编辑系统环境变量”。在“系统属性”窗口中，单击“环境变量”。选择带有路径的行。单击“编辑”。
- en: '![](Images/649fc16c-7b98-4fae-9171-a066cd8db525.png)Edit environment variable
    dialogue'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '![](Images/649fc16c-7b98-4fae-9171-a066cd8db525.png)编辑环境变量对话框'
- en: Try installing your global tool again.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试重新安装您的全局工具。
- en: 'If the issue persists, you may need to delete your global `npm` folder with
    PowerShell command, as shown:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果问题仍然存在，您可能需要使用PowerShell命令删除全局的`npm`文件夹，如下所示：
- en: '[PRE27]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Navigate to the folder:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到该文件夹：
- en: '[PRE28]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Execute npm:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行npm：
- en: '[PRE29]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Redo the `npm-windows-upgrade` routine:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新执行`npm-windows-upgrade`例程：
- en: '[PRE30]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Reinstall the tool:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新安装工具：
- en: '[PRE31]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Don't run `npm i -g npm` in the future.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 将来不要运行`npm i -g npm`。
- en: Updating Angular
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新Angular
- en: With Node and npm up-to-date, you are now ready to upgrade your version of Angular.
    The Angular ecosystem has been engineered to make frequent updates of your version
    as painless as possible. Minor version updates should be straightforward and quick
    and starting with version `6.0.0`; major version upgrades should be easier with
    the new `ng update` command that ships with Angular CLI. Paired with the update
    guide published on [update.angular.io](https://update.angular.io) and various
    helper tools specific to your upgrade path, updating Angular is straightforward.
    In this section, we will go over how you can update your Angular app presuming
    a scenario of upgrading from version 5.2 to 6.0\. The instructions should largely
    remain the same, with any variance or future changes documented in [https://update.angular.io/](https://update.angular.io/).
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Node和npm最新版本，您现在可以准备升级您的Angular版本了。Angular生态系统经过精心设计，使您的版本更新尽可能轻松。次要版本更新应该是直接和快速的，从版本`6.0.0`开始；主要版本升级应该更容易，因为Angular
    CLI附带了新的`ng update`命令。配合[update.angular.io](https://update.angular.io)上发布的更新指南和特定于您升级路径的各种辅助工具，更新Angular是直接的。在本节中，我们将介绍如何更新您的Angular应用程序，假设从版本5.2升级到6.0的情景。指南应该基本保持不变，任何变化或将来的更改都记录在[https://update.angular.io/](https://update.angular.io/)中。
- en: Keep in mind that Angular doesn't recommend skipping major version numbers when
    upgrading, so if you are on version 4, you're first expected to upgrade to 5 and
    then to 6\. Do not delay updating your framework version, thinking you can gain
    some efficiency by leap frogging to the latest version.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，Angular不建议在升级时跳过主要版本号，因此如果您使用的是版本4，则首先需要升级到5，然后再升级到6。不要延迟更新您的框架版本，认为可以通过跳跃到最新版本来获得一些效率。
- en: Angular update guide
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Angular更新指南
- en: Follow this step-by-step guide to prepare, execute, and test your Angular version
    upgrade process.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 按照这一步骤指南准备、执行和测试您的Angular版本升级过程。
- en: Take stock of your current version
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解您当前的版本
- en: 'Let''s first begin by inspecting `package.json` so that you are aware of the
    versions of various dependencies that you are using. All `@angular` packages should
    be on the same minor version, such as `5.2`, as shown:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先检查`package.json`，以便您了解您正在使用的各种依赖项的版本。所有`@angular`包应该是相同的次要版本，例如`5.2`，如图所示：
- en: '[PRE32]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Using Angular Update Guide
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Angular更新指南
- en: 'Now that you are aware of your current versions, you are ready to use the Update
    Guide:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经了解了您当前的版本，可以使用更新指南了：
- en: Navigate to [update.angular.io](https://update.angular.io/)
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航至[update.angular.io](https://update.angular.io/)
- en: 'Select the complexity of your application:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您的应用程序的复杂性：
- en: 'Basic: No animations, no HTTP calls'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基本：没有动画，没有HTTP调用
- en: 'Medium: If you''re using Angular Material or making HTTP calls or using RxJS,
    largely working as 1-2 person developer team and delivering small apps'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 中级：如果您正在使用Angular Material或进行HTTP调用或使用RxJS，通常作为1-2人开发团队并交付小型应用程序
- en: 'Advanced: Multi-person teams, delivering medium-to-large size apps'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高级：多人团队，交付中大型应用程序
- en: Most apps will fall in the Medium complexity; I highly recommend selecting this
    option. If you have implemented Angular functionality beyond the surface level
    APIs, by leveraging functionality mentioned deep in the documentation, implement
    any custom behavior in the HTTP, rendering, routing—definitely scroll through
    the Advanced list first to ensure that you're not using a deprecated function.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数应用程序将属于中等复杂性；我强烈建议选择此选项。如果您已经在文档中深入实现了Angular功能，通过利用文档中提到的功能来实现任何自定义行为，确保在HTTP、渲染、路由等方面实现任何自定义行为——一定要先浏览高级列表，以确保您没有使用已弃用的功能。
- en: 'On the update guide, select from and to versions. In this case, 5.2 to 6.0,
    as shown:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在更新指南上，选择从哪个版本升级到哪个版本。在这种情况下，选择从5.2升级到6.0，如图所示：
- en: '![](Images/9561a4ef-1e63-4b22-84d1-df6ee3e7ff8a.png)Angular Update Guide'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: ！[](Images/9561a4ef-1e63-4b22-84d1-df6ee3e7ff8a.png)Angular更新指南
- en: Click on Show me how to update!
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“显示我如何更新！”
- en: Observe the instructions shown on screen as three distinct sections, before
    updating, during, and after the update
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请注意屏幕上显示的指示，分为更新前、更新中和更新后三个不同的部分
- en: Now for the hard part, we need to follow the instructions and apply them.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是困难的部分，我们需要遵循说明并应用它们。
- en: Updating your Angular app
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新您的Angular应用程序
- en: Updating software is risky. There are several strategies to reduce your risk
    in updating your app. This is the primary reason you have built a barrage of automated
    tests in your application; however, over time, your implementation, including
    your CI & CD systems, can deteriorate. Version updates are a great time to reevaluate
    the robustness of your automated systems and make the necessary investments to
    shore them up. Consider the following pre-upgrade checklist before you start your
    update process.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 更新软件是有风险的。有几种策略可以减少您在更新应用程序时的风险。这是您在应用程序中构建大量自动化测试的主要原因；然而，随着时间的推移，您的实施，包括CI和CD系统，可能会恶化。版本更新是重新评估您的自动化系统的健壮性并进行必要投资的好时机。在开始更新过程之前，请考虑以下升级前清单。
- en: Pre-upgrade checklist
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 升级前清单
- en: 'Here''s a handy checklist of items to run through before starting your upgrade:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是在开始升级之前要运行的一些方便的检查项目清单：
- en: Ensure that `@angular` versions all match down to the last patch.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保`@angular`版本一直匹配到最后一个补丁。
- en: Ensure your CI & CD pipeline is up and running with no failing or disabled tests.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保您的CI和CD管道正常运行，没有失败或禁用的测试。
- en: Smoke test your app before upgrading. Ensure that all major functionality works
    and there are no console errors or warning present.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在升级之前对应用程序进行烟雾测试。确保所有主要功能正常运行，没有控制台错误或警告。
- en: Address any quality issue discovered before upgrading.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在升级之前解决任何发现的质量问题。
- en: Follow the update guide sequentially and methodically.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按顺序和有条不紊地遵循更新指南。
- en: Be prepared to roll back the update.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 准备好回滚更新。
- en: Let's start the update process with before updating activities.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从更新前的活动开始更新过程。
- en: Before updating
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在更新之前
- en: 'Angular Update Guide recommends specific steps to follow under the Before Updating section,
    as shown:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: Angular 更新指南建议在“更新前”部分采取特定步骤，如下所示：
- en: '![](Images/c227ddff-eb76-499b-8760-25fd55409643.png)Angular Update Guide -
    Before updating'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '![](Images/c227ddff-eb76-499b-8760-25fd55409643.png)Angular 更新指南 - 更新前'
- en: There can be several kinds of updates you may need to make to your code before
    attempting an update.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在尝试更新之前，您可能需要对代码进行几种不同的更新。
- en: '**Namespace Changes**: The first item on the preceding list is notifying us
    that the namespaces of certain animation services and tools may have changes.
    Such changes should be low risk and accomplished quickly with the use of the Global
    search tool in VS Code. Let''s see how you can quickly observe all usages of `''@angular/core''` in
    your app. Look at the next screenshot:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '**命名空间更改**：上述列表中的第一项通知我们某些动画服务和工具的命名空间可能已经更改。这些更改应该是低风险的，并且可以通过在VS Code中使用全局搜索工具快速完成。让我们看看如何快速观察你的应用程序中所有`''@angular/core''`的用法。看下一张截图：'
- en: '![](Images/2a9f3550-dd3b-45f4-bbfe-816035588bd1.png)Search Results for ''@angular/core'''
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '![](Images/2a9f3550-dd3b-45f4-bbfe-816035588bd1.png)''@angular/core''的搜索结果'
- en: In this case, there is no usage that is related to animations, so we can move
    on.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，没有与动画相关的用法，所以我们可以继续。
- en: '**Rename and Replace Updates**: In version 4, there was a requirement to replace
    the `OpaqueTokens` type with `InjectionTokens`. For these types of changes, once
    again, use the Global Search tool to find and replace the necessary codes.'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '**重命名和替换更新**：在版本4中，有一个要求，即将`OpaqueTokens`类型替换为`InjectionTokens`。对于这些类型的更改，再次使用全局搜索工具查找和替换必要的代码。'
- en: 'When using the Global Search tool find and replace code, ensure that you enable
    Match Case, signified by Aa and Match Whole Word, signified by Ab|, to prevent
    unintended replacements. Take a look at the following screenshot for a look at
    the two options in their enabled state:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用全局搜索工具查找和替换代码时，确保您启用了匹配大小写（由Aa表示）和匹配整个单词（由Ab|表示），以防止意外的替换。看一下以下截图，看看这两个选项处于启用状态时的情况：
- en: '![](Images/df0f981e-2df2-445d-bc8d-f83e477deb8b.png)Match Case and Match Whole
    Word Enabled'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '![](Images/df0f981e-2df2-445d-bc8d-f83e477deb8b.png)匹配大小写和匹配整个单词已启用'
- en: '**Functional Changes**: Deprecated features, signaled one major version ahead
    of time, require rewrites of the affected portions of your application code. If
    you have been heavily using `HttpModule` and `Http`, your code will require a
    serious overhaul:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '**功能性更改**：弃用的功能提前一个主要版本发出信号，需要重写应用程序代码中受影响部分。如果您一直在大量使用`HttpModule`和`Http`，那么您的代码将需要进行严重的改造：'
- en: First, discover the instances of actual usage with Global search.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，使用全局搜索发现实际用法的实例。
- en: 'On [angular.io](https://angular.io), search for the newly introduced service,
    in this case, HttpClient or HttpClientModule:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[angular.io](https://angular.io)上搜索新引入的服务，例如`HttpClient`或`HttpClientModule`：
- en: '![](Images/4d712046-bafb-4a2c-a43d-41c085705f58.png)Angular.io Documentation
    Page'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '![](Images/4d712046-bafb-4a2c-a43d-41c085705f58.png)Angular.io文档页面'
- en: Click on the relevant link under the Guide heading, which contain rich and contextual
    information about the new service.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击标题下的相关链接，其中包含有关新服务的丰富和上下文的信息。
- en: The new service usually comes along with new benefits, such as an improved coding
    experience, better testability, or performance.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 新的服务通常伴随着新的好处，比如改进的编码体验，更好的可测试性或性能。
- en: Reimplement the necessary code.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新实现必要的代码。
- en: Execute the Post Update Checklist mentioned in the next section.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行下一节中提到的后续更新检查表。
- en: Such functional changes can simultaneously be great productivity boosters but
    also greatly increase the friction of a timely upgrade to a new version of Angular.
    You can, however, lower the cost of change and reap maximum benefits of these
    changes by preparing ahead of time.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 这些功能性变化可以同时成为巨大的生产力助推器，但也会极大地增加及时升级到新版本Angular的摩擦。然而，您可以通过提前准备来降低变更成本，并最大程度地获得这些变化的好处。
- en: In this case, the LocalCast Weather app doesn't use the deprecated modules,
    because by chance the development of the app began right after the release of
    the `HttpClient` service. However, I wouldn't have known about the change if I
    wasn't keeping tabs on the Angular community. I highly recommend following [https://blog.angular.io](https://blog.angular.io) for
    this reason.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，LocalCast Weather应用程序没有使用已弃用的模块，因为恰好是在发布`HttpClient`服务后不久开始开发该应用程序。然而，如果我没有关注Angular社区，我就不会知道这个变化。出于这个原因，我强烈建议关注[https://blog.angular.io](https://blog.angular.io)。
- en: In addition, you can check the Angular Update tool regularly. The tool likely
    won't be updated quickly; however, it is a good summary resource of all upcoming
    changes.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您可以定期检查Angular更新工具。该工具可能不会被迅速更新；然而，它是所有即将到来的变化的一个很好的摘要资源。
- en: 'In the Update tool, if you select a future version of Angular, you will get
    a warning message:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在更新工具中，如果您选择未来版本的Angular，您将收到警告消息：
- en: '**Warning**: Plans for releases after the current major release are not finalized
    and may change. These recommendations are based on scheduled deprecations.'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '**警告**：当前主要版本之后的发布计划尚未最终确定，可能会更改。这些建议是基于计划的弃用。'
- en: This is a great way to stay ahead of the game and plan your resources around
    Angular updates ahead of time.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 这是保持领先并提前规划资源围绕Angular更新的一个很好的方法。
- en: Once you're done with the Before Updating phase, consider going through the
    Post Update Checklist before moving on to the next phase.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 完成“更新前”阶段后，考虑在进入下一阶段之前查看后续更新检查表。
- en: During the Update
  id: totrans-176
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新期间
- en: 'Here''s the During the Update section from the guide, which is centered around
    the `ng update` tool:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是指南中关于`ng update`工具的更新期间部分：
- en: '![](Images/024c4569-8053-44f2-b095-deb8d3eae5ba.jpg)Angular Update Guide -
    During the update'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '![](Images/024c4569-8053-44f2-b095-deb8d3eae5ba.jpg)Angular更新指南-更新期间'
- en: 'In comparison, pre-Angular 6 upgrades look like this:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 相比之下，Angular 6之前的升级看起来是这样的：
- en: '![](Images/058c1b0c-c834-4d6c-a00d-9b1047f4786d.jpg)Angular Update Guide -
    Pre-Angular 6'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '![](Images/058c1b0c-c834-4d6c-a00d-9b1047f4786d.jpg)Angular更新指南-在Angular 6之前'
- en: 'If you are interested in learning more about manual updates, refer to the Manual
    Update section. In this section, I have detailed the steps that you should execute
    for an automated upgrade in a more comprehensive manner than the guide. In [Chapter
    2](312e0dbe-54ac-45c6-97c7-f41c98723919.xhtml), *Create a Local Weather Web Application*,
    we avoided installing Angular CLI, and this is where this strategy pays off. You
    can continue working on the existing Angular 4 or Angular 5 projects without having
    to worry about CLI backward-compatibility issues:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对手动更新更感兴趣，请参考手动更新部分。在这一部分，我详细介绍了你应该执行的步骤，以更全面地进行自动升级。在[第2章](312e0dbe-54ac-45c6-97c7-f41c98723919.xhtml)中，*创建一个本地天气Web应用程序*，我们避免安装Angular
    CLI，这就是这种策略的好处所在。你可以继续在现有的Angular 4或Angular 5项目上工作，而不必担心CLI向后兼容性问题：
- en: Ensure that you have updated to the latest LTS version of Node, as shown earlier
    in the chapter
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保你已经更新到了最新的Node LTS版本，就像本章前面展示的那样
- en: Ensure that you are on the latest version of npm, as shown earlier in the chapter
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保你使用的是npm的最新版本，就像本章前面展示的那样
- en: In your terminal, `cd` in to the project folder
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的终端中，`cd`进入项目文件夹
- en: 'Clean your `node_modules` folder:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 清理你的`node_modules`文件夹：
- en: '[PRE33]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: It is important to note that version changes in Node or npm can impact how your `node_modules` dependencies
    are installed or stored on your computer. After an upgrade to lower-level tools,
    such as Node or npm, it is prudent to wipe away `node_modules` and reinstall your
    packages in your project. In your Continuous Integration (CI) server, this means
    invalidating the existing cache of packages.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要注意，Node或npm的版本更改可能会影响你的`node_modules`依赖项在计算机上的安装或存储方式。在升级到更低级别的工具，比如Node或npm之后，最好清除`node_modules`并在你的项目中重新安装你的包。在你的持续集成（CI）服务器上，这意味着使现有的包缓存无效。
- en: 'Reinstall dependencies:'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新安装依赖项：
- en: '[PRE34]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Uninstall globally installed versions of `@angular/cli`, `webpack`, `jasmine`,
    or `typescript`:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 卸载全局安装的`@angular/cli`、`webpack`、`jasmine`或`typescript`的版本：
- en: '[PRE35]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Update to the latest CLI version in your project:'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的项目中更新到最新的CLI版本：
- en: '[PRE36]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Update project configuration, as suggested by the preceding message:'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据前面的消息建议更新项目配置：
- en: '[PRE37]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Try executing `ng update`:'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试执行`ng update`：
- en: '[PRE38]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Try executing `ng update --all`:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试执行`ng update --all`：
- en: '[PRE39]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: You may get an error message that says Incompatible peer dependencies found.
    with one or more specific issues listed. You will not be able to use `ng update`
    until all issues are resolved.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会收到一个错误消息，说找到了不兼容的peer依赖。列出了一个或多个具体的问题。在解决所有问题之前，你将无法使用`ng update`。
- en: In the next section, I will go over strategies in resolving peer dependency
    errors. If you don't have these kinds of errors, feel free to skip the section.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我将介绍解决peer依赖错误的策略。如果你没有这种错误，可以跳过这一节。
- en: Incompatible peer dependencies
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不兼容的peer依赖
- en: I will go through some of incompatible peer dependency errors that I received
    during my upgrade process and the different strategies to resolve these errors.
    Note that I will start with simple cases and demonstrate the amount of research
    that may be required as the dependency you need may not be simply the latest released
    version of your package.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 我将介绍一些在升级过程中遇到的不兼容的peer依赖错误，以及解决这些错误的不同策略。请注意，我将从简单的情况开始，并演示可能需要的研究量，因为你需要的依赖项可能不仅仅是你的包的最新发布版本。
- en: Package `karma-jasmine-html-reporter` has a missing peer dependency of `"jasmine"
    @ "^3.0.0"`.
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包`karma-jasmine-html-reporter`缺少peer依赖`"jasmine" @ "^3.0.0"`。
- en: 'This is a simple error that is resolved by simply updating to the latest version
    of `jasmine`, as follows:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单的错误，只需简单地更新到最新版本的`jasmine`即可解决：
- en: '[PRE40]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Package `@angular/flex-layout` has an incompatible peer dependency to `"rxjs"`
    (requires `"^5.5.0"`, would install `"6.1.0"`).
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包`@angular/flex-layout`与`"rxjs"`有不兼容的对等依赖关系（需要`"^5.5.0"`，将安装`"6.1.0"`）。
- en: 'This error requires a bit of research and understanding of the ecosystem. As
    of Angular 6, we know that all libraries are version synced, so we need a 6.x
    version of this library. Let''s discover the currently available versions with
    `npm info`:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 这个错误需要一些对生态系统的研究和理解。截至Angular 6，我们知道所有库都是版本同步的，因此我们需要这个库的6.x版本。让我们使用`npm info`来发现当前可用的版本：
- en: '[PRE41]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'As of publishing, this library is still in beta and the latest version is at
    5.0.0, so simply updating to the latest release of `@angular/flex-layout` won''t
    work out. In this case, we need to install the `@next` version of the package,
    as follows:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 截至目前，该库仍处于beta版本，最新版本为5.0.0，因此简单地更新到最新版本的`@angular/flex-layout`是行不通的。在这种情况下，我们需要安装包的`@next`版本，如下所示：
- en: '[PRE42]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: You will receive a bunch of dependency warnings showing that Angular 6 packages
    are needed. These errors will go away once we're done with our update.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 您将收到一堆依赖警告，显示需要Angular 6包。一旦更新完成，这些错误将消失。
- en: Package "@angular/compiler-cli" has an incompatible peer dependency to "typescript"
    (requires ">=2.7.2 <2.8", would install "2.8.3").
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包"@angular/compiler-cli"与"typescript"有不兼容的对等依赖关系（需要">=2.7.2 <2.8"，将安装"2.8.3"）。
- en: 'Angular CLI depends on a specific version of Typescript. If you execute `npm
    info typescript`, the latest version of Typescript may be newer than what is required.
    In this case, it is `2.8.3`, as reported in the preceding error message. The error
    message does signal to us what version is specifically required, if you look at
    the requires statement. The lower bound, `2.7.2`, seems to be the correct version
    to install, so let''s install that, as shown:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: Angular CLI依赖于特定版本的Typescript。如果执行`npm info typescript`，则最新版本的Typescript可能比所需版本更新。在这种情况下，正如前面的错误消息所报告的那样，它是`2.8.3`。错误消息确实向我们指出了具体需要的版本，如果你看一下requires语句。下限`2.7.2`似乎是正确的安装版本，所以让我们安装它，如下所示：
- en: '[PRE43]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: In theory, all of our actions should have resolved all peer dependency issues.
    In reality, I have noted that these errors sometimes persist, when `npx ng update
    --all` is used, so we will continue the update by running individual update commands.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 理论上，我们所有的操作都应该解决所有对等依赖问题。实际上，我注意到这些错误有时会在使用`npx ng update --all`时仍然存在，因此我们将继续通过运行单独的更新命令来进行更新。
- en: 'On non-macOS operating systems, you may persistently encounter an fsevents-related
    warning, such as npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.1.3.
    This is an optional package that is only leveraged on macOS. An easy way to avoid
    seeing this error is to run `npm install --no-optional command`.'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '在非macOS操作系统上，您可能会持续遇到与fsevents相关的警告，例如`npm WARN optional SKIPPING OPTIONAL
    DEPENDENCY: fsevents@1.1.3`。这是一个可选的包，仅在macOS上使用。避免看到这个错误的简单方法是运行`npm install --no-optional`命令。'
- en: Continuing the update
  id: totrans-218
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 继续更新。
- en: 'We will update Angular piece by piece:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将逐步更新Angular：
- en: 'Let''s start the update with Angular Core:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们从Angular Core开始更新：
- en: '[PRE44]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Note that this command also updates `rxjs`.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，此命令还会更新`rxjs`。
- en: 'Update Angular Material:'
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新Angular Material：
- en: '[PRE45]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Ensure that you check out the Material Update Tool and strategies to manually
    update Angular Material in [Chapter 5](5e0df0e8-57a6-47dc-86c8-d56f6e35021e.xhtml),* Enhance
    Angular App with Angular Material*.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您查看[第5章](5e0df0e8-57a6-47dc-86c8-d56f6e35021e.xhtml)中的Material Update Tool和手动更新Angular
    Material的策略，*使用Angular Material增强Angular应用*。
- en: 'Update other dependencies, including typings with `npm update`:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新其他依赖项，包括使用`npm update`更新类型：
- en: '[PRE46]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Note that `typescript` was updated to its latest version, `2.8.3`, which is
    not acceptable for Angular 6, as covered in the preceding section. Rollback to
    version `2.7.2` by executing `npm install -D typescript@2.7.2`.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`typescript`已更新到其最新版本`2.8.3`，这对于Angular 6来说是不可接受的，正如前一节所述。通过执行`npm install
    -D typescript@2.7.2`回滚到版本`2.7.2`。
- en: Resolve any npm errors and warnings.
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解决任何npm错误和警告。
- en: You're done updating your major Angular dependencies. Consider executing the
    Post Update Checklist before moving on to *After the update* section.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经完成了主要的Angular依赖项更新。考虑在继续*升级后*部分之前执行“升级后检查清单”。
- en: After the update
  id: totrans-231
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 升级后
- en: 'The After the update phase informs changes that need to be after the updates
    to major Angular dependencies and sometimes inform us of the further benefits
    that can be gained after having upgraded our version of Angular. Observe the next
    steps:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: “升级后”阶段通知需要在主要Angular依赖项更新后进行的更改，并有时告诉我们在升级我们的Angular版本后可以获得的进一步好处。观察下一步：
- en: '![](Images/ef42ec2d-eb0b-48d9-a0a0-c07311f76961.jpg)Angular Update Guide -
    After the update'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '![](Images/ef42ec2d-eb0b-48d9-a0a0-c07311f76961.jpg)Angular升级指南-升级后'
- en: 'In this case, we must address deprecations related to our upgrade to RxJS.
    Luckily, the Angular team that knows this can be a painful process, so they''re
    suggesting an automated tool that can give us a head start:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们必须解决与我们升级到RxJS相关的弃用。幸运的是，Angular团队知道这可能是一个痛苦的过程，因此他们建议使用一个自动化工具来帮助我们入门：
- en: Refrain from installing the tool globally
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不要全局安装该工具
- en: 'Execute the migration tool, as shown:'
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行迁移工具，如下所示：
- en: '[PRE47]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[PRE48]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Resolve any warnings manually; consider this example:'
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 手动解决任何警告；考虑以下示例：
- en: '[PRE49]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: In the preceding example, we only need to import from `'rxjs'` and `'rxjs/operators'` per
    RxJS 6 documentation, so remove the two other imports. In addition, the `ErrorObservable`
    and `IfObservable` imports are referenced by any line of code, so they're easy
    to identify for removal.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，我们只需要根据RxJS 6文档从`'rxjs'`和`'rxjs/operators'`导入，因此删除另外两个导入。此外，`ErrorObservable`和`IfObservable`导入被任何一行代码引用，因此很容易识别并删除。
- en: Some warnings may be masking errors or incompatibilities with new RxJS functions,
    so it is important go through them one by one.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 一些警告可能掩盖了与新的RxJS函数的错误或不兼容性，因此逐一检查它们非常重要。
- en: 'Remove `rxjs-compat`:'
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 移除`rxjs-compat`：
- en: '[PRE50]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Build and test your code to ensure that it builds by executing `npm run predocker:build`
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建和测试您的代码，以确保通过执行`npm run predocker:build`进行构建。
- en: '`predocker:build` builds your Angular app in production mode and runs your
    unit and e2e tests by executing the following commands:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '`predocker:build`以生产模式构建您的Angular应用程序，并通过执行以下命令运行您的单元测试和端到端测试：'
- en: '[PRE51]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Resolve any errors. If you are getting mysterious errors that are not related
    to your code, try to remove `node_modules` and reinstall packages.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 解决任何错误。如果您遇到与您的代码无关的神秘错误，请尝试删除`node_modules`并重新安装软件包。
- en: If everything is working correctly, congratulations, you're done with your upgrade!
    Before you pop the bottle of sparkling wine, execute the Post Update Checklist.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切正常工作，恭喜你，你已经完成了升级！在你打开起泡酒之前，执行“升级后检查清单”。
- en: Post Update Checklist
  id: totrans-250
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 升级后检查清单
- en: 'Post Update Checklist is useful in ensuring that you haven''t introduced any
    regressions to your code base after making sweeping code changes. You are asked
    to consider executing this checklist after every phase of the update process. It
    may not always be possible or feasible to execute the entire list, but after making
    significant changes to your code base, if necessary, update your unit tests, and
    execute the following checklist incrementally:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 更新后的清单在确保在进行大规模代码更改后没有引入任何退化的情况下非常有用。建议在更新过程的每个阶段之后执行此清单。可能并不总是可能或可行执行整个清单，但在对代码基进行重大更改后，如果有必要，更新你的单元测试，并逐步执行以下清单：
- en: Build and smoke test your angular app
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建和烟雾测试你的 Angular 应用
- en: Commit your changes
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提交你的更改
- en: With each commit, ensure that CI pipeline remains green
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每次提交时，确保 CI 流水线保持正常
- en: If making functional changes, it may be required to follow release-cycle procedures
    of your organization, which may include manual testing by a QA team
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果进行功能性更改，可能需要遵循你的组织的发布周期程序，其中可能包括由 QA 团队进行手动测试
- en: It is advisable to implement and deploy such changes one by one and deploy them
    to the production environment
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 建议逐个实施和部署这些更改，并将它们部署到生产环境
- en: Collect Performance data, as outlined in the following section
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 收集性能数据，如下一节所述
- en: Committing your code after a category of changes will enable you to revert or
    cherry-pick further upgrade commits, if something goes wrong down the line.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 在一类更改后提交你的代码，这样可以在出现问题时回滚或挑选进一步的升级提交。
- en: For a variety of reasons, you may need to manually upgrade Angular, which is
    covered in the next section.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 出于各种原因，你可能需要手动升级 Angular，这在下一节中有所涉及。
- en: Manual update
  id: totrans-260
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 手动更新
- en: It is good to have a general understanding of how a manual upgrade works, because
    you may not be able to use the version of Angular CLI that has automatic update;
    you may eject Angular CLI altogether from your project or the tool may contain
    a bug. The version numbers discussed here are examples copied from the update
    guide.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 最好对手动升级的工作原理有一个大致的了解，因为你可能无法使用具有自动更新功能的 Angular CLI 版本；你可能需要完全退出你的项目或者工具可能包含错误。这里讨论的版本号是从更新指南中复制的示例。
- en: 'For the sake of this example, I will be demonstrating a potential upgrade from
    Angular 4 to Angular 5:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 为了举例，我将演示从 Angular 4 到 Angular 5 的潜在升级：
- en: Follow Before updating instructions from the guide and this chapter
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 遵循指南和本章的更新说明
- en: Ensure that Node and npm are up to date
  id: totrans-264
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保 Node 和 npm 是最新的
- en: 'In order to upgrade to version `5.0.0`, execute the following command:'
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了升级到版本 `5.0.0`，执行以下命令：
- en: '[PRE52]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'This is to be followed by a `--save-exact` command so that TypeScript isn''t
    accidentally upgraded:'
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接着执行`--save-exact`命令，以防 TypeScript 被意外升级：
- en: '[PRE53]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Ensure that your `package.json` file has been updated to the correct versions:'
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保你的 `package.json` 文件已经更新到正确的版本：
- en: '[PRE54]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Note that the caret and tilde has been removed from the TypeScript version,
    preventing any accidental upgrades, as the Angular tools are quite sensitive to
    the specific features of any given TypeScript release.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，TypeScript 版本中的插入符号和波浪号已被移除，以防止任何意外的升级，因为 Angular 工具对任何给定 TypeScript 发布的特定功能非常敏感。
- en: Note that `@angular/cli` and `@angular/compiler-cli` have been updated to their
    latest versions; however, the tool didn't update `@angular/language-service`.
    This highlights the importance of manual checks, since every tool in your tool
    chain is susceptible to minor bugs.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，`@angular/cli` 和 `@angular/compiler-cli` 已经更新到它们的最新版本；然而，工具没有更新 `@angular/language-service`。这突显了手动检查的重要性，因为你的工具链中的每个工具都容易受到小错误的影响。
- en: 'Update `@angular/language-service` by executing the following command:'
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过执行以下命令更新`@angular/language-service`：
- en: '[PRE55]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Verify `package.json` has the correct version of the file:'
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证`package.json`中是否有正确的文件版本：
- en: '[PRE56]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: You're done updating your packages.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 您已完成更新您的软件包。
- en: Follow after the update instructions from the guide and this chapter.
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照指南和本章的更新说明进行操作。
- en: After upgrading your Angular application, it is a good idea to test the impact
    of your changes on performance.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 在升级您的Angular应用程序后，测试您的更改对性能的影响是一个好主意。
- en: Testing performance
  id: totrans-280
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 性能测试
- en: 'Test the performance of your Angular app before and after updates to ensure
    that your performance numbers remain as expected. In the following case, we automatically
    gain performance benefits due to platform-level improvements. First, let''s compare
    Angular v4 to v5:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 在更新之前和之后测试您的Angular应用程序的性能，以确保您的性能数字保持预期。在下面的情况中，由于平台级别的改进，我们自动获得了性能优势。首先，让我们比较一下Angular
    v4和v5：
- en: '| **Categories** | **   Angular 4** | **   Angular 5** | **        % Diff**
    |'
  id: totrans-282
  prefs: []
  type: TYPE_TB
  zh: '| **类别** | **   Angular 4** | **   Angular 5** | **        % 差异** |'
- en: '| JavaScript Assets Delivered (gzipped) |             83.6 KB |             72.6
    KB |            13% smaller |'
  id: totrans-283
  prefs: []
  type: TYPE_TB
  zh: '| JavaScript Assets Delivered (gzipped) |             83.6 KB |             72.6
    KB |            13% smaller |'
- en: '| Time to first page render (Fiber) |                 0.57 s |                 0.54
    s |                 5% faster |'
  id: totrans-284
  prefs: []
  type: TYPE_TB
  zh: '| 首页渲染时间（Fiber） |                 0.57秒 |                 0.54秒 |                 5%
    更快 |'
- en: '| Time to first page render (Fast 3G) |                 1.27 s |                 1.18
    s |                 7% faster |'
  id: totrans-285
  prefs: []
  type: TYPE_TB
  zh: '| 首页渲染时间（快速3G） |                 1.27秒 |                 1.18秒 |                 7%
    更快 |'
- en: Angular 4.4.3 vs 5.0.0
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: Angular 4.4.3 vs 5.0.0
- en: 'The trend of improvement continues with Angular 6:'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: Angular 6的改进趋势持续下去：
- en: '| **Categories** | **   Angular 5** | **   Angular 6** | **      % Diff** |'
  id: totrans-288
  prefs: []
  type: TYPE_TB
  zh: '| **类别** | **   Angular 5** | **   Angular 6** | **      % 差异** |'
- en: '| JavaScript Assets Delivered (gzipped) |             72.6 KB |             64.1
    KB |        12% smaller |'
  id: totrans-289
  prefs: []
  type: TYPE_TB
  zh: '| JavaScript Assets Delivered (gzipped) |             72.6 KB |             64.1
    KB |        12% 更小 |'
- en: '| Time to first page render (Fiber) |                 0.54 s |                 0.32
    s |           40% faster |'
  id: totrans-290
  prefs: []
  type: TYPE_TB
  zh: '| 首页渲染时间（Fiber） |                 0.54秒 |                 0.32秒 |           40%
    更快 |'
- en: '| Time to first page render (Fast 3G) |                 1.18 s |                 0.93
    s |           21% faster |'
  id: totrans-291
  prefs: []
  type: TYPE_TB
  zh: '| 首页渲染时间（快速3G） |                 1.18秒 |                 0.93秒 |           21%
    更快 |'
- en: Angular 5.0.0 vs 6.0.0
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: Angular 5.0.0 vs 6.0.0
- en: This trend should continue in future updates, with a target 3 KB size using
    the Ivy rendering engine. We will cover the importance of these performance numbers
    in [Chapter 5](5e0df0e8-57a6-47dc-86c8-d56f6e35021e.xhtml),* Enhance Angular App
    with Angular Material*.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 这种趋势应该在未来的更新中继续，使用Ivy渲染引擎的目标大小为3KB。我们将在[第5章](5e0df0e8-57a6-47dc-86c8-d56f6e35021e.xhtml)中介绍这些性能数字的重要性，*使用Angular
    Material增强Angular应用程序*。
- en: Addressing security vulnerabilities
  id: totrans-294
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解决安全漏洞
- en: 'Sometimes you will be notified about security vulnerabilities in certain packages,
    through blogs or if you''re using GitHub, you may notice warning like this on
    your repository:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 有时您会收到关于某些软件包的安全漏洞的通知，通过博客或者如果您使用GitHub，您可能会在您的存储库上看到这样的警告：
- en: '![](Images/d4b0300f-e7fe-4956-9ce7-7a6febaef2b0.png)GitHub.com Vulnerability
    Scan'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '![](Images/d4b0300f-e7fe-4956-9ce7-7a6febaef2b0.png)GitHub.com漏洞扫描'
- en: This is a specific issue that arose when my Angular application was on version
    5.0.0 and my CLI version was on 1.5.0\. If you review this dependency, you can
    see the dependent packages and get more detail on the issue.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个特定的问题，当我的Angular应用程序版本为5.0.0，我的CLI版本为1.5.0时出现的。如果您查看这个依赖项，您可以看到依赖的软件包，并获得更多关于这个问题的细节。
- en: '![](Images/483d2dc6-7e5d-4eee-8a63-5f5e0adf509d.png)GitHub.com Security Bulletin'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: '![](Images/483d2dc6-7e5d-4eee-8a63-5f5e0adf509d.png)GitHub.com安全公告'
- en: In this case, the vulnerable version of handlebars, 1.3.0 is being caused by
    one of Angular 5.0 packages.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，handlebars的易受攻击版本1.3.0是由Angular 5.0包之一引起的。
- en: Further research on Angular's GitHub issues reveals that the issue is actually
    caused by `@angular/cli version 1.5.0`. The reference is [https://github.com/angular/angular/issues/20654](https://github.com/angular/angular/issues/20654).
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 进一步研究Angular的GitHub问题表明，问题实际上是由`@angular/cli版本1.5.0`引起的。参考是[https://github.com/angular/angular/issues/20654](https://github.com/angular/angular/issues/20654)。
- en: 'This was to try an update to the latest minor version update of Angular, Material
    or CLI, which in this case is version 5.1.0 and 1.6.0:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 这是尝试更新到Angular、Material或CLI的最新次要版本更新的好方法，在这种情况下是版本5.1.0和1.6.0：
- en: '[PRE57]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: This update resolved the security warning displayed by GitHub. If you are not
    able to resolve your issue by upgrading, create a new issue on GitHub and keep
    tabs on upcoming patch or minor releases of Angular until the issue is resolved.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 这次更新解决了GitHub显示的安全警告。如果你无法通过升级解决你的问题，请在GitHub上创建一个新问题，并密切关注Angular的即将发布的补丁或次要版本，直到问题得到解决。
- en: Updating your web server
  id: totrans-304
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新你的Web服务器
- en: At the top of your stack is the web server in which you host your web application
    in. This is a live, production system that is likely exposed to the internet,
    thus one that is at most risk. It should be judiciously kept up to date.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 你的堆栈顶部是你托管Web应用程序的Web服务器。这是一个实时的生产系统，很可能暴露在互联网上，因此风险最大。应该谨慎地保持最新状态。
- en: 'Ideally, your release pipeline resembles the one described in [Chapter 3](4e68114e-68b7-4fe6-a853-81347e981667.xhtml)*,
    Prepare Angular App for Production Release*, where your frontend application is
    served by a containerized low-profile instance. This can be the `minimal-node-web-server`
    that I publish and maintain or an Nginx-based instance. In either case, an upgrade
    is simple by changing version number listed next to your base image:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 理想情况下，你的发布流水线类似于[第3章](4e68114e-68b7-4fe6-a853-81347e981667.xhtml)*，为生产发布准备Angular应用程序*中描述的流水线，其中你的前端应用程序由一个容器化的低配置实例提供。这可以是我发布和维护的`minimal-node-web-server`，也可以是基于Nginx的实例。在任何情况下，通过更改基础镜像旁边列出的版本号来升级是很简单的：
- en: '[PRE58]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: It is always a good idea to specify the version number of the base Docker image
    you're using. Otherwise, it will default to a latest behavior, which in this case
    may mean an odd-numbered release that is not suitable for production. That said,
    `minimal-node-web-server` follows layers upon layers of the best security practices
    that reduces the attack surface and makes it incredibly difficult to mount a successful
    attack to compromise your web app. In line with this theme of security best practices,
    `minimal-node-web-server` would never push an odd numbered node version as the
    default behavior.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 指定你正在使用的基础Docker镜像的版本号总是一个好主意。否则，它将默认为最新行为，这在这种情况下可能意味着一个不适合生产的奇数版本。也就是说，`minimal-node-web-server`遵循了最佳安全实践的层层叠加，减少了攻击面，使成功攻击你的Web应用程序变得非常困难。与这一安全最佳实践主题一致，`minimal-node-web-server`永远不会将奇数节点版本作为默认行为。
- en: If your content is served through an installation of a web server like IIS,
    Apache, or Tomcat, you must follow and track security bulletins for these technologies.
    However, most likely another person or department altogether will be in charge
    upgrading this server, which may result in delays resulting from days to months,
    which is forever in internet time.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的内容是通过IIS、Apache或Tomcat等Web服务器安装提供的，你必须遵循和跟踪这些技术的安全公告。然而，很可能另一个人或另一个部门将负责升级这台服务器，这可能会导致从几天到几个月的延迟，这在互联网时间中是永远的。
- en: You're at the highest risk, if you're serving your static web content, like
    your SPA, through the same application server that also implements your backend
    APIs. Even though your architecture may be decoupled, if upgrading any tool or
    application in your dependency trees has side effects on any other part of your
    application, it means there's significant friction in your ability to secure or
    improve the performance of your frontend application.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 你处于最高风险，如果你通过同一应用服务器提供静态网页内容，比如你的SPA，同时也实现了后端API。即使你的架构可能是解耦的，如果在你的依赖树中升级任何工具或应用程序对你的应用的任何其他部分产生副作用，这意味着你在保护或改进前端应用性能方面存在重大摩擦。
- en: A truly decoupled architecture will also allow the frontend to scale at different
    rate than your backend infrastructure and this can have great cost benefits. For
    example, suppose that your frontend serves lots of static information and rarely
    needs to poll the backend. At times of high load, you may need three instances
    of your frontend server to serve all the requests but only a single instance of
    the backend server since the calls are few and far in between.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 一个真正解耦的架构还将允许前端以不同的速度扩展，而不同于你的后端基础设施，这可以带来巨大的成本效益。例如，假设你的前端提供大量静态信息，并且很少需要轮询后端。在高负载时，你可能需要三个前端服务器实例来处理所有请求，但只需要一个后端服务器实例，因为调用很少。
- en: Updating Docker image
  id: totrans-312
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新Docker镜像
- en: After having upgrade your app and its dependencies or simply adding new features,
    you will need to update and publish your new Docker image.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 在升级应用程序及其依赖项或简单添加新功能后，您需要更新并发布新的Docker镜像。
- en: In `package.json`, update the version property to `1.1.0` or match your version
    to your current Angular version
  id: totrans-314
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`package.json`中，将版本属性更新为`1.1.0`或将您的版本与当前的Angular版本匹配
- en: Execute `npm run docker:debug` to build and verify that your updates work correctly
  id: totrans-315
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行`npm run docker:debug`来构建并验证您的更新是否正确工作
- en: Finally, execute `npm run docker:publish` to push your new image to a repository
  id: totrans-316
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，执行`npm run docker:publish`将您的新镜像推送到存储库
- en: After your image is published, take the necessary steps to deploy the image
    on a server or a cloud provider, as covered in [Chapter 3](4e68114e-68b7-4fe6-a853-81347e981667.xhtml),* Prepare
    Angular App for Production Release*, and [Chapter 11](ba073d6f-c0a0-4681-aea6-aeedac3cbc69.xhtml),* Highly-Available
    Cloud Infrastructure on AWS*.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 在发布图像后，采取必要步骤将图像部署到服务器或云提供商，如[第3章](4e68114e-68b7-4fe6-a853-81347e981667.xhtml)中所述，*准备Angular应用程序进行生产发布*，以及[第11章](ba073d6f-c0a0-4681-aea6-aeedac3cbc69.xhtml)中所述，*AWS上高可用云基础设施*。
- en: Summary
  id: totrans-318
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we covered the importance of staying up to date across your
    entire stack of dependencies from development tools such as Node and npm, to Angular.
    We looked at how you can use ng update and Angular Update Guide to make Angular
    updates as painless as possible. We also covered manual updates, performance testing,
    dealing with out-of-band security vulnerabilities and patches, including the necessity
    to keep your web server up to date. Maintaining a relatively up-to-date system
    has direct cost benefits. The smaller the delta, the less the effort to upkeep.
    However, as time goes on, the cost of upgrading a system raises exponentially.
    As non-direct benefits, we can list customer satisfaction generated from better
    performance, a metric that impacts companies like Amazon at the tune of millions
    of dollars per every 100 ms of latency. New features in tools also have a profound
    impact on developer productivity and happiness, which helps retention and reduces
    cost of newly developed features, which in return may lead to increased customer
    satisfaction. Saying up to date is certainly a positive feedback loop.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了保持整个依赖栈的最新状态的重要性，从Node和npm等开发工具到Angular。我们看了看如何使用ng update和Angular
    Update Guide来尽可能地减少Angular更新的痛苦。我们还涵盖了手动更新、性能测试、处理超出安全漏洞和补丁的问题，包括保持Web服务器最新的必要性。保持相对最新的系统具有直接的成本效益。差距越小，维护的工作量就越小。然而，随着时间的推移，升级系统的成本呈指数级增长。作为非直接的好处，我们可以列举出由更好的性能带来的客户满意度，这是影响亚马逊等公司数百万美元的指标。工具中的新功能也对开发人员的生产力和幸福感产生深远影响，这有助于留住人才，减少新功能的成本，从而可能提高客户满意度。保持最新状态无疑是一个积极的反馈循环。
- en: In the next chapter, we will go over how you can add Angular Material to your
    project by making your Local Weather App look great. In the process, you will
    learn about the negative performance impact that user control or UI component
    libraries can have on your application, including basic Material components, Angular
    Flex layout, accessibility, typography, theming, and how to update Angular Material.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论如何通过将Angular Material添加到项目中，使您的本地天气应用程序看起来更加出色。在这个过程中，您将了解用户控制或UI组件库可能对应用程序产生的负面性能影响，包括基本的Material组件、Angular
    Flex布局、可访问性、排版、主题设置以及如何更新Angular Material。
