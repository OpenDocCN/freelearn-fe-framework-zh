["```js\n            browser.get('http://localhost:3000'); // to navigate the    \n            browser to a specific url address  \n            browser.getTitle(); // this will return the page title that \n            defined in the projects landing page  \n\n    ```", "```js\n            element(Locator); // return the ElementFinder \n            element.all(Locator); // return the ElementFinderArray \n            element.all(Locator).get(position);  // will return the\n            defined  position \n            element from the ElementFinderArray  \n            element.all(Locator).count(); // will return the \n            total number in the select element's array   \n\n    ```", "```js\n            element(Locator).getText(); // return the ElementFinder \n            based on locator  \n            element.(Locator).click(); // Will trigger the click \n            handler for that specific element  \n            element.(Locator).clear(); // Clear the field's value \n            (suppose the element is input field)\n    ```", "```js\n            element(by.css(cssSelector)); // select element by css \n            selector  \n            element(by.id(id)); //  select element by element ID \n            element.(by.model); // select element by ng-model \n\n    ```", "```js\n            browser.get('/'); \n\n    ```", "```js\n            var inputField = element.all(by.css('input')); \n\n    ```", "```js\n            inputField.setText('abc'); \n\n    ```", "```js\n            var searchButton = element.all(by.css('#searchButton'); \n            searchButton.click(); \n\n    ```", "```js\n            var searchResults = element.all(by.css('#searchResult'); \n\n    ```", "```js\n            expect(searchResults).count() >= 1); \n\n    ```", "```js\n    describe('Given I input 'abc' into the search box',function(){ \n        //1 - Point browser to website \n        browser.get('/'); \n        //2 - Select input field \n        var inputField = element.all(by.css('input')); \n        //3 - Type abc into input field \n        inputField.setText('abc'); \n        //4 - Push search button \n        var searchButton = element.all(by.css('#searchButton'); \n        searchButton.click(); \n        it('should display search results',function(){ \n        // 5 - Find the search result details \n        var searchResults = element.all(by.css('#searchResult'); \n        //6 - Assert \n        expect(searchResults).count() >= 1); \n        }); \n    }); \n\n```", "```js\n    $ npm install protractor\n\n    ```", "```js\n    $ ./node_modules/protractor/bin/protractor --version\n\n    ```", "```js\n    $ ./node_modules/protractor/bin/webdriver-manager update\n\n    ```", "```js\n              exports.config = {  \n              //...  \n              capabilities: { \n                'browserName': 'chrome' \n              },   \n              //... \n              }; \n\n    ```", "```js\n              exports.config = {  \n              //...  \n              framework: 'jasmine'   \n              //... \n              };\n    ```", "```js\n              exports.config = { \n                //... \n                specs: ['example_spec.js'], \n                //... \n              }; \n\n    ```", "```js\nspecs: ['confirmConfigTest.js'],\n\n```", "```js\n $ ./node_modules/protractor/bin/protractor conf.js\n\n```", "```js\nFinished in 0.0002 seconds\n0 tests, 0 assertions, 0 failures\n\n```", "```js\n$ npm install\n\n```", "```js\n$ npm start\n\n```", "```js\n$ npm install protractor -save-dev\n\n```", "```js\n$ ./node_modules/protractor/bin/protractor --version\n\n```", "```js\nVersion 4.0.10\n\n```", "```js\n$ npm install -g protractor\n\n```", "```js\n$ protractor -version\n\n```", "```js\n$ ./node_modules/protractor/bin/webdriver-manager update\n\n```", "```js\n$ webdriver-manager update\n\n```", "```js\nexports.config = { \n\n    baseUrl: ' ', \n\n    framework: 'jasmine', \n\n    specs: [], \n\n    capabilities: { \n        'browserName': 'chrome' \n    } \n\n}; \n\n```", "```js\nexports.config = { \n    // ....  \n    baseUrl: ' http://localhost:3000', \n    // ....  \n}; \n\n```", "```js\nexports.config = { \n    // ....  \n    specs: [ \n        'app/**/*.e2e.js' \n    ], \n    // ..... \n}; \n\n```", "```js\nexports.config = { \n    // ....  \n    useAllAngular2AppRoots: true, \n    // ..... \n}; \n\n```", "```js\nexports.config = { \n    // ....  \n    jasmineNodeOpts: { \n        showColors: true, \n        defaultTimeoutInterval: 30000 \n    }, \n    // ..... \n}; \n\n```", "```js\ndescribe('Title for test suite', () => { \n\n    beforeEach(() => { \n        // ...  \n    }); \n\n    it('Title for test spec', () => { \n        // ... \n    }); \n\n});; \n\n```", "```js\nbeforeEach(() => { \n    browser.get(''); \n});; \n\n```", "```js\nit('Browser should have a defined title', () => { \n       expect(browser.getTitle()).toEqual('Angular Protractor'); \n}); \n\n```", "```js\ndescribe('AppComponent Tests', () => { \n    beforeEach(() => { \n        browser.get(''); \n    }); \n\n    it('Browser should have a defined title', () => { \n        expect(browser.getTitle()).toEqual('Angular Protractor'); \n    }); \n}); \n\n```", "```js\n$ protractor protractor.conf.js\n\n```", "```js\n1 spec, 0 failures \nFinished in 1.95 seconds \n\n```", "```js\nit('Should get the number of items as defined in item object', () => { \n        var todoListItems = element.all(by.css('li')); \n        expect(todoListItems.count()).toBe(3); \n    }); \n\n```", "```js\nit('Should get the first item text as defined', () => { \n        expect(todoListItems.first().getText()).toEqual('test'); \n    }); \n\n    it('Should get the last item text as defined', () => { \n        expect(todoListItems.last().getText()).toEqual('refactor'); \n    }); \n\n```", "```js\ndescribe('AppComponent Tests', () => { \n    var todoListItems = element.all(by.css('li')); \n\n    beforeEach(() => { \n        browser.get('/'); \n    }); \n\n    it('Browser should have a defined title', () => { \n        expect(browser.getTitle()).toEqual('Angular Protractor'); \n    }); \n\n    it('Should get the number of items as defined in item object', () \n    => { \n        expect(todoListItems.count()).toBe(3); \n    }); \n\n    it('Should get the first item text as defined', () => { \n        expect(todoListItems.first().getText()).toEqual('test'); \n    }); \n\n    it('Should get the last item text as defined', () => { \n        expect(todoListItems.last().getText()).toEqual('refactor'); \n    }); \n}); \n\n```", "```js\n$ protractor protractor.conf.js\n\n```", "```js\n4 specs, 0 failures\nFinished in 2.991 seconds\n\n```", "```js\n$ protractor\n\n```", "```js\n\"scripts\": { \n    // ...  \n    \"e2e\": \"protractor\" \n    // .... \n  }; \n\n```", "```js\n$ npm e2e\n\n```", "```js\n\"scripts\": { \n    // ...  \n    \"webdriver-update\": \"webdriver-manager update\" \n    // .... \n  }; \n\n```", "```js\n$ npm webdriver-update\n\n```", "```js\n$ npm run e2e\n\n```", "```js\n4 specs, 0 failures\nFinished in 2.991 seconds\n\n```", "```js\nbrowser.get(''); \n\n```", "```js\nexpect(todoListItems.count()).toBe(3); \n\n```", "```js\nit('Should get the number of items as defined in item object', (done) => { \n    var todoListItems = element.all(by.css('li')); \n    todoListItems.count().then(function(count){ \n        expect(count).toBe(3); \n        done(); \n    }); \n}); \n\n```", "```js\nimport {AppComponent} from \"./app.component\"; \n\nbeforeEach(() => { \n    app = new AppComponent(); \n}); \n\n```"]