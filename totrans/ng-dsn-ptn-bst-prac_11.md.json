["```js\nng new gym_exercises --skip-git --standalone --routing false --style css\n```", "```js\nnpm install -D tailwindcss postcss autoprefixer\nnpx tailwindcss init\n```", "```js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    \"./src/**/*.{html,ts}\",\n  ],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}\n```", "```js\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n```", "```js\nng g service service/Exercises\nng g interface exercise\n```", "```js\nExport interface Exercise {\n  id?: string;\n  description: string;\n}\nexport type ExerciseList = Array<Exercise>;\nexport interface ExerciseListAPI {\n  hasNext: boolean;\n  items: ExerciseList;\n};\n```", "```js\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExercisesService {\n  private httpClient = inject(HttpClient);\n  private url = 'http://localhost:3000/exercises';\n  getExercises(): Observable<ExerciseList> {\n    return this.httpClient\n      .get<ExerciseListAPI>(`${this.url}`)\n      .pipe(map((api) => api?.items));\n  }\n  addExercises(exercises: Partial<Exercise>): Observable<Exercise> {\n    return this.httpClient.post<Exercise>(this.url, exercises);\n  }\n}\n```", "```js\nimport { ApplicationConfig } from '@angular/core';\nimport { provideHttpClient } from '@angular/common/http';\nexport const appConfig: ApplicationConfig = {\n  providers: [provideHttpClient()],\n};\n```", "```js\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  private formBuilder = inject(NonNullableFormBuilder);\n  private exerciseService = inject(ExercisesService);\n  exerciseList$ = this.exerciseService.getExercises();\n  public entryForm = this.formBuilder.group({\n    description: ['', Validators.required],\n  });\n  newExercise() {\n    if (this.entryForm.valid) {\n      const newExercise = { ...this.entryForm.value };\n      this.exerciseService\n        .addExercises(newExercise)\n        .subscribe(\n          (_) => (this.exerciseList$ = this.exerciseService.getExercises())\n        );\n    }\n  }\n}\n```", "```js\n<div class=\"bg-gray-100 flex justify-center items-center min-h-screen\">\n  <div class=\"max-w-md w-full p-6 bg-white rounded-lg shadow-md\">\n    <h1 class=\"text-2xl font-bold mb-4\">Exercise List</h1>\n    <div class=\"max-h-40 overflow-y-auto mb-4\">\n      <ul>\n        <li class=\"mb-2\" *ngFor=\"let exercise of exerciseList$ | async\">\n          {{ exercise.description }}\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n```", "```js\n<h2 class=\"text-xl font-semibold mt-6 mb-2\">Add Exercise</h2>\n  <form [formGroup]=\"entryForm\" (ngSubmit)=\"newExercise()\" class=\"space-y-2\">\n    <div class=\"mb-4\">\n      <label for=\"description\" class=\"mb-2 block font-bold text-gray-700\">Description:</label>\n      <input type=\"text\" id=\"description\" name=\"description\" class=\"w-full appearance-none rounded border px-3 py-2 leading-tight text-gray-700 shadow\" formControlName=\"description\"/>\n      <div *ngIf=\"entryForm.get('exercise')?.invalid && entryForm.get('exercise')?.touched\" class=\"mt-1 text-red-500\">\n        Exercise is required.\n      </div>\n    </div>\n    <div class=\"flex items-center justify-center\">\n      <button type=\"submit\" [disabled]=\"entryForm.invalid\" [class.opacity-50]=\"entryForm.invalid\" class=\"rounded bg-blue-500 px-4 py-2 font-bold text-white hover:bg-blue-700\" >\n        Confirm\n      </button>\n    </div>\n  </form>\n```", "```js\nnpm i @angular/elements\n```", "```js\n{\n  \"type\": \"anyComponentStyle\",\n  \"maximumWarning\": \"50kb\",\n  \"maximumError\": \"50kb\"\n}\n```", "```js\nimport {\n  bootstrapApplication,\n  createApplication,\n} from '@angular/platform-browser';\nimport { appConfig } from './app/app.config';\nimport { AppComponent } from './app/app.component';\nimport { createCustomElement } from '@angular/elements';\n(async () => {\n  const app = await createApplication(appConfig);\n  const element = createCustomElement(AppComponent, {\n    injector: app.injector,\n  });\n  customElements.define('exercise-form', element);\n})();\n```", "```js\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>GymExercises</title>\n    <base href=\"/\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\" />\n  </head>\n  <body>\n    <exercise-form></exercise-form>\n  </body>\n</html>\n```", "```js\nng add ngx-build-plus\n```", "```js\nnpm i http-server\n```", "```js\n\"scripts\": {\n  \"ng\": \"ng\",\n  \"start\": \"ng serve\",\n  \"build\": \"ng build --single-bundle  --bundle-styles  --keep-styles  --output-hashing=none\",\n  \"serve-mfe\": \"http-server dist/gym_exercises\",\n}\n```", "```js\nnpm run build\nnpm run serve-mfe\n```", "```js\nng g m exercise --routing\nng g c exercise/exercise\n```", "```js\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ExerciseComponent } from './exercise/exercise.component';\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExerciseComponent,\n    title: 'Exercise Registry',\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ExerciseRoutingModule {}\n```", "```js\n. . .\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    children: [\n      {\n        path: 'diary',\n        loadChildren: () =>\n          import('../diary/diary.module').then((file) => file.DiaryModule),\n      },\n      {\n        path: 'exercise',\n        loadChildren: () =>\n          import('../exercise/exercise.module').then(\n            (file) => file.ExerciseModule\n          ),\n      },\n      {\n        path: '',\n        redirectTo: 'diary',\n        pathMatch: 'full',\n      },\n    ],\n  },\n];\n. . .\n```", "```js\n. . .\n  <li>\n    <a\n      routerLink=\"./exercise\"\n      class=\"flex items-center space-x-2 text-white\"\n    >\n      <span>Exercise Registry</span>\n    </a>\n  </li>\n. . .\n```", "```js\nnpm i @angular-extensions/elements\n```", "```js\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ExerciseRoutingModule } from './exercise-routing.module';\nimport { ExerciseComponent } from './exercise/exercise.component';\nimport { LazyElementsModule } from '@angular-extensions/elements';\n@NgModule({\n  declarations: [ExerciseComponent],\n  imports: [CommonModule, LazyElementsModule, ExerciseRoutingModule],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class ExerciseModule {}\n```", "```js\nimport { Component } from '@angular/core';\n@Component({\n  selector: 'app-exercise',\n  templateUrl: './exercise.component.html',\n  styleUrls: ['./exercise.component.css'],\n})\nexport class ExerciseComponent {\n  elementUrl = 'http://localhost:8080/main.js';\n}\n```", "```js\n<exercise-form *axLazyElement=\"elementUrl\"> </exercise-form >\n```"]