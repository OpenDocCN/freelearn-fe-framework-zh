["```js\nnpx create-react-app chapter-10\n```", "```js\nnpm install three @react-three/fiber\n```", "```js\nchapter-10\n  |- /node_modules\n  |- package.json\n  |- /public\n     |- index.html\n  |- /src\n    |- App.css\n    |- App.js\n    |- index.css\n    |- index.js\n```", "```js\n    import { Canvas } from '@react-three/fiber';\n    import './App.css';\n    export default function App() {\n      return (\n        <div id=\"Canvas-container\">\n          <Canvas><Canvas />\n        </div>\n      )\n    }\n    ```", "```js\n    #Canvas-container {\n      height: 100vh;\n    }\n    ```", "```js\n      import { Canvas } from '@react-three/fiber'\n      export default function App() {\n        return (\n          <div id=\"Canvas-container\">\n            <Canvas>\n    mesh element inside a Canvas component from @react-three/fiber, under the hood, it will create a THREE.Mesh object.\n    ```", "```js\n      // ...\n      export default function App() {\n        return (\n          <div id=\"Canvas-container\">\n            <Canvas>\n    -         <mesh>\n    +         <mesh scale={2}>\n                <boxGeometry />\n                // ...\n    ```", "```js\n      // ...\n      export default function App() {\n        return (\n          <div id='canvas-container'>\n            <Canvas>\n              <mesh scale={2}>\n                <boxGeometry />\n    +           <meshStandardMaterial color='blue' />\n    +           <ambientLight intensity={0.5} />\n              </mesh>\n            </Canvas>\n          </div>\n        );\n      }\n    ```", "```js\n    export default function Box() {\n      return (\n        <mesh scale={2}>\n          <boxGeometry />\n          <meshStandardMaterial color='blue' />\n        </mesh>\n      );\n    }\n    ```", "```js\n    + import { useRef } from 'react';\n      export default function Box() {\n    +   const mesh = useRef();\n\n        return (\n          <mesh\n            scale={2}\n    +       ref={mesh}\n          >\n            <boxGeometry />\n            <meshStandardMaterial color='blue' />\n          </mesh>\n        );\n      }\n    ```", "```js\n      import { useRef } from 'react';\n    Box component continuously on every frame render, you can also use a useEffect Hook to rotate the mesh just once on the initial render or on a set interval.\n    ```", "```js\n      import { Canvas } from '@react-three/fiber';\n    + import Box from './components/Box';\n      export default function App() {\n        return (\n          <div id='canvas-container'>\n            <Canvas>\n    -         <mesh>\n    -           <boxGeometry />\n    -           <meshStandardMaterial color='blue' /> */}\n    +           <Box />\n                <ambientLight intensity={0.5} />\n    -          </mesh>\n            </Canvas>\n          </div>\n        );\n      }\n    ```", "```js\n      // ...\n      export default function App() {\n        return (\n          <div id='canvas-container'>\n            <Canvas>\n              <Box />\n              <ambientLight intensity={0.5} />\n    position is an array with three numbers. These numbers represent a Vector3 position. This is a format to describe the position of an object in 3D space where the numbers are the *x*, *y*, and *z* values.\n    ```", "```js\n      // ...\n    - export default function Box() {\n    + export default function Box({ rotate  = false }) {\n        const mesh = useRef();\n        useFrame(() => {\n    +     if (rotate) {\n            mesh.current.rotation.x = \n            mesh.current.rotation.y += 0.01;\n    +     }\n        });\n        return (\n          // ...\n    ```", "```js\n    import { useEffect } from 'react';\n    import { useThree } from '@react-three/fiber';\n    import { OrbitControls } from \n      'three/examples/jsm/controls/OrbitControls';\n    export default function Controls() {\n      const { camera, gl } = useThree();\n      useEffect(() => {\n        const controls = new OrbitControls(camera,\n          gl.domElement);\n        return () => {\n          controls.dispose();\n        };\n      }, [camera, gl]);\n      return null;\n    };\n    ```", "```js\n      import { Canvas } from '@react-three/fiber';\n      import Box from './components/Box';\n    + import Controls from './components/Controls';\n      export default function App() {\n        return (\n          <div id='canvas-container'>\n            <Canvas>\n    +         <Controls />\n              <Box />\n              // ...\n    ```", "```js\n      // ...\n      export default function Controls() {\n        // ...\n        useEffect(() => {\n          const controls = new OrbitControls(camera,\n            gl.domElement);\n    +     controls.minDistance = 2;\n    +     controls.maxDistance = 20;\n\n          // ...\n      }, [camera, gl]);\n      return null;\n    }\n    ```", "```js\n      // ...\n      export default function Controls() {\n        // ...\n        useEffect(() => {\n          const controls = new OrbitControls(camera,\n            gl.domElement);\n          controls.minDistance = 2;\n          controls.maxDistance = 20;\n    +     controls.enableZoom = true;\n    +     controls.enablePan = true;\n\n          // ...\n    ```", "```js\nchapter-10\n  |- /node_modules\n  |- package.json\n  |- /public\n     |- index.html\n     |- beach.jpeg\n     |- mountain.jpeg\n  |- /src\n     |- /components\n        |- Box.js\n        |- Controls.js\n     |- App.css\n     |- App.js\n     |- index.css\n     |- index.js\n```", "```js\n    import { useLoader } from '@react-three/fiber';\n    import * as THREE from 'three';\n    import Box from './Box';\n    ```", "```js\n    // ...\n    const backgrounds = [\n      {\n        id: 1,\n        url: '/mountain.jpeg',\n      },\n      {\n        id: 2,\n        url: '/beach.jpeg',\n      },\n    ];\n    ```", "```js\n    // ...\n    export default function Panorama() {\n      const background = useLoader(THREE.TextureLoader,\n        backgrounds[0].url);\n      return (\n        <mesh>\n          <sphereBufferGeometry args={[500, 60, 40]} />\n          <meshBasicMaterial map={background} \n            side={THREE.BackSide} />\n        </mesh>\n      );\n    }\n    ```", "```js\n    + import { Suspense } from 'react';\n      import { Canvas } from '@react-three/fiber';\n    + import Panorama from './components/Panorama';\n      // ...\n      export default function App() {\n        return (\n          <div id='Canvas-container'>\n             <Canvas>\n               <Controls />\n    +          <Suspense fallback={null}>\n    +           <Panorama />\n    +          </Suspense>\n               <Box />\n               // ...\n    ```", "```js\n    + import { useState } from 'react';\n      import { useLoader } from '@react-three/fiber';\n      import * as THREE from 'three';\n      // ...\n      export default function Panorama() {\n    +   const [activeBackground, setActiveBackground] =\n          useState(1);\n\n        // ...\n    ```", "```js\n      // ...\n      export default function Panorama() {\n        const [activeBackground, setActiveBackground] =\n          useState(1);\n\n    -   const background = useLoader(THREE.TextureLoader, \n          backgrounds[0].url);\n    +   const { url } = backgrounds.find(({ id }) => \n          id === activeBackground);\n    +   const background = useLoader(\n    +     THREE.TextureLoader,\n    +     url\n    +   );\n        return (\n          // ...\n    ```", "```js\n      // ...\n      export default function Panorama() {\n        // ...\n        return (\n    +     <group>\n            <mesh>\n              <sphereBufferGeometry args={[500, 60, 40]} />\n              <meshBasicMaterial map={background}\n                side={THREE.BackSide} />\n            </mesh>\n    +     </group>\n        );\n      }\n    ```", "```js\n      // ...\n      export default function Panorama() {\n        // ...\n        return (\n          <group>\n            // ...\n    +       <group\n    +         onClick={(e) => {\n    +           e.stopPropagation();\n    +           setActiveBackground(activeBackground === \n                                    1 ? 2 : 1);\n    +         }}\n    +      >\n    +         <Box />\n    +      </group>\n          </group>\n        );\n      }\n    ```", "```js\n      import { Suspense } from 'react';\n      import { Canvas } from '@react-three/fiber';\n    - import Box from './components/Box';\n      // ...\n      export default function App() {\n        return (\n          <div id='Canvas-container'>\n            <Canvas>\n              <Controls />\n    -         <Box />\n              // ...\n          </div>\n        );\n      }\n    ```", "```js\n    - import { useRef } from 'react';\n    + import { useRef, useState } from 'react';\n      import { useFrame } from '@react-three/fiber';\n      export default function Box({ rotate = false }) {\n        const mesh = useRef();\n    +   const [hovered, setHovered] = useState(false);\n        // ...\n        return (\n          <mesh\n            scale={2}\n            ref={mesh}\n    +       onPointerOver={(e) => setHovered(true)}\n    +       onPointerOut={(e) => setHovered(false)}\n          >\n            <boxGeometry />\n            <meshStandardMaterial color='blue' />\n          </mesh>\n        );\n      }\n    ```", "```js\n        // ...\n        return (\n          // ...\n            <boxGeometry />\n    -       <meshStandardMaterial color='blue' />\n    +       <meshStandardMaterial color={hovered ? \n             'purple' : 'blue'} />\n          </mesh>\n        );\n      }\n    ```", "```js\nimport { useLoader } from '@react-three/fiber';\nimport { GLTFLoader } from \n  'three/examples/jsm/loaders/GLTFLoader';\nexport default function Helicopter() {\n  const gltf = useLoader(GLTFLoader, './ Ingenuity_v3.glb' \n);\n  return (\n    <group position={[2, 2, 1]}>\n      <primitive object={gltf.scene} />\n    </group>\n  );\n}\n```", "```js\n  import { Suspense } from 'react';\n  import { Canvas } from '@react-three/fiber';\n+ import Helicopter from './components/Helicopter';\n  // ...\n  export default function App() {\n    return (\n      <div id='Canvas-container'>\n        <Canvas>\n          // ...\n          <Suspense fallback={null}>\n            <Panorama />\n+           <Helicopter />\n          </Suspense>\n        </Canvas>\n      </div>\n    );\n  }\n```", "```js\nnpm install @react-spring/three\n```", "```js\n  import { useLoader } from '@react-three/fiber';\n  import { GLTFLoader } from \n    'three/examples/jsm/loaders/GLTFLoader';\n+ import { useSpring, animated } from \n    '@react-spring/three';\n  export default function Helicopter() {\n    // ...\n```", "```js\n  // ...\n  export default function Helicopter() {\n    const gltf = \n      useLoader(GLTFLoader, './Ingenuity_v3.glb');\n+   const props = useSpring({\n+     loop: true,\n+     to: [\n+       { position: [2, 2, 3] },\n+       { position: [2, 2, 6] },\n+       { position: [2, 2, 9] },\n+       { position: [2, 4, 9] },\n+       { position: [2, 6, 9] },\n+     ],\n+     from: { position: [2, 2, 1] },\n+   });\n  return (\n    // ...\n```", "```js\n    // ...  \n    return (\n-     <group position={[2, 2, 1]}>\n+     <animated.group {...props}>\n        <primitive object={gltf.scene} />\n+     </animated.group>\n-     </group>\n    );\n  }\n```"]