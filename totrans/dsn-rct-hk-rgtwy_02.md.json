["```js\n|--x---x---x-x--x--x------> user event\n```", "```js\n|--x---x---x-x--x--x------> user event\n|--a---a---a-a--a--a------> action handler\n```", "```js\nfunction Title() {\n  let count = 0  \n  const onClick = () => {\n    count = count + 1\n  }\n  return (\n    <>\n      <button onClick={onClick}>+</button>\n      <h1>Hello World+{count}</h1>\n    </>\n  )\n}\n```", "```js\nfunction Title() {\n  let count = 0\n  const onClick = () => {\n    console.log('clicked', count)      ➀\n    count = count + 1\n  }\n  console.log('updated', count)        ➁\n  return ...\n}\n```", "```js\n|----0--1-2--3-4----5------> clicked   ➀\n0--------------------------> updated   ➁\n```", "```js\nReactDOM.render(<Title />, rootEl)\n```", "```js\n  const onClick = () => {\n    console.log('clicked', count)      ➀\n    count = count + 1\n    ReactDOM.render(<Title />, rootEl)\n  }\n```", "```js\n|----0--0-0--0-0----0------> clicked   ➀\n0----0--0-0--0-0----0------> updated   ➁\n```", "```js\nconst Title = () => {\n  let count = 0\n  // omitting the onClick statement\n  console.log('updated', count)       ➁\n  // omitting the return statement\n}\n```", "```js\nlet m = undefined\nfunction _getM(initialValue) {\n  if (m === undefined) {\n    m = initialValue\n  }\n  return m\n}\nfunction _setM(value) { \n  m = value\n  ReactDOM.render(<Title />, rootEl)\n}\n```", "```js\nfunction Title() {\n  let count = _getM(0) \n  const onClick = () => {\n    console.log('clicked', count)      ➀\n    count = count + 1\n    _setM(count)\n  }\n  console.log('updated', count)         ➁\n  return ...\n}\n```", "```js\n|----0--1-2--3-4----5------> clicked   ➀\n0----1--2-3--4-5----6------> updated   ➁\n```", "```js\nconst Title = () => {\n  let countH = _getM(0)\n  let countW = _getM(0)\n  const onClickH = () => {\n    countH = countH + 1\n    _setM(countH)\n  }\n  const onClickW = () => {\n    countW = countW + 1\n    _setM(countW)\n  }\n  return (\n    <>\n      <button onClick={onClickH}>+</button>\n      <h1>Hello+{countH}</h1>\n      <button onClick={onClickW}>+</button>\n      <h1>World+{countW}</h1>\n    </>\n  )\n}\n```", "```js\n|----0--1-2----------------> clickedH   \n|------------3-4----5------> clickedW   \n0----1--2-3--4-5----6------> updatedH   \n0----1--2-3--4-5----6------> updatedW   \n```", "```js\n  let countH = _getM(0)\n  let countW = _getM(0)\n```", "```js\nlet states = {}\nfunction _getM2(initialValue, key) {\n  if (states[key] === undefined) {\n    states[key] = initialValue\n  }\n  return states[key]\n}\nfunction _setM2(v, key) {\n  states[key] = v\n  ReactDOM.render(<Title />, rootEl)\n}\n```", "```js\nfunction Title() {\n  let countH = _getM2(0, 'H')\n  let countW = _getM2(0, 'W')\n  const onClickH = () => {\n    console.log('clickedH', countH)     \n    countH = countH + 1\n    _setM2(countH, 'H')\n  }\n  const onClickW = () => {\n    console.log('clickedW', countW)     \n    countW = countW + 1\n    _setM2(countW, 'W')\n  }\n  console.log('updatedH', countH)         \n  console.log('updatedW', countW)          \n  return ...\n}\n```", "```js\n|----0--1-2----------------> clickedH  \n|------------0-1----2------> clickedW  \n0----1--2-3--3-3----3------> updatedH  \n0----0--0-0--1-2----3------> updatedW  \n```", "```js\nfunction Changed({ count }) {\n  let flag = 'N'\n  return <span>{flag}</span>\n}\n```", "```js\nfunction Title() {\n  ...\n  return (\n    <>\n      <button onClick={onClickH}>+</button>\n      <h1>Hello+{countH}</h1>\n      <Changed count={countH} />\n      <button onClick={onClickW}>+</button>\n      <h1>World+{countW}</h1>\n    </>\n  )\n}\n```", "```js\n0----1--2-3--3-3----3------> updatedH   \n0----0--0-0--1-2----3------> updatedW   \nN----N--N-N--N-N----N------> Changed flag\n```", "```js\n0----1--2-3--3-3----3------> count\n```", "```js\nlet prev\nfunction _onM(callback, value) {\n  if (value === prev) return \n  callback()\n  prev = value\n}\n```", "```js\nfunction Changed({ count }) {\n  let flag = 'N'\n  _onM(() => { flag = 'Y' }, count)\n  return <span>{flag}</span>\n}\n```", "```js\n0----1--2-3--3-3----3------> updatedH \n0----0--0-0--1-2----3------> updatedW \nY----Y--Y-Y--N-N----N------> Changed flag\n```", "```js\nfetch('/giveMeANumber').then(res => {\n  ReactDOM.render(<Title />, rootEl)\n})\n```", "```js\nfetch('./giveMeANumber').then(res => {\n  _setM(res.data)\n})\nfunction Title() => {\n  const count = _getM(\"\")    \n  return <h1>{count}</h1>\n}\n```", "```js\n _onM(() => { ... }, 0)\n```", "```js\nfunction Title() => {\n  const count = _getM(0)\n  _onM(() => {\n     fetch('./giveMeANumber').then(res => {\n       _setM(res.data)\n     })\n  }, 0) \n  console.log('u')\n  return <h1>{count}</h1>\n}\n```", "```js\nu-----u-------------------> log\n```", "```js\nconst Nav = ({ items, selected }) => { ... }\n```", "```js\nconst App = () => {\n  const selected = _getM(\"home\") \n  return ( \n    <div>\n      <Nav\n        items={menus}\n        selected={selected}\n        onSelect={_setM}\n      />\n      ...\n    </div>\n  )\n}\n```", "```js\nconst Nav = ({ items, selected, onSelect }) => {\n  const isActive = item => item.key === selected\n  const onClick = item => () => { \n    onSelect(item.key)\n  }\n  ...\n}\n```", "```js\nconst Route = ({ selected }) => {\n     return (\n       <div>\n      {selected === 'home' && <Home />}\n      {selected === 'product' && <Product />}\n    </div>\n     )\n}\n```", "```js\n      {selected === 'home' ? <Home /> : false}\n```", "```js\nconst Home = () => <h1>Home page</h1>\nconst Product = () => <h1>Product page</h1>\nconst App = () => {\n  const selected = _getM(\"home\")  \n  return ( \n    <div>\n      <Nav\n        items={menus} \n        selected={selected} \n        onSelect={_setM} \n      />\n      <Routes selected={selected} />\n    </div>\n  )\n}\n```"]