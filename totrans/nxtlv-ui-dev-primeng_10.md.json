["```js\nexport const appRoutes: Route[] = [\n  {\n    path: 'home',\n    component: HomeComponent,\n  },\n  {\n    path: 'cart',\n    component: CartComponent,\n  },\n  {\n    path: 'user-profile',\n    component: UserProfileComponent,\n  },\n]\n```", "```js\nexport const appRoutes: Route[] = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'home',\n  },\n  {\n    path: 'home',\n    loadComponent: () => import('./components/home.component'),\n  },\n  {\n    path: 'cart',\n    loadComponent: () => import('./components/cart.component'),\n  },\n  {\n    path: 'user-profile',\n    loadComponent: () => import('./components/user-profile.component'),\n  },\n]\n```", "```js\nimport { DeferModule } from 'primeng/defer'\n```", "```js\n<div class=\"grid gap-4\" pDefer>\n  <ng-template>\n    <p-card\n      *ngFor=\"let product of products\"\n      [header]=\"product.name\"\n      [style]=\"{ width: '300px' }\"\n    >\n     <!-- product content -->\n    </p-card>\n  </ng-template>\n</div>\n```", "```js\n// products.components.ts\n<div pDefer (onLoad)=\"loadAnotherProducts()\">\n  <ng-template>\n    <primengbook-product-list [products]=\"anotherProducts\" />\n  </ng-template>\n</div>\n...\nloadAnotherProducts() {\n  this.anotherProducts = this.productService.loadProducts()\n}\n```", "```js\n@Component({\n  standalone: true,\n  imports: [CommonModule, ProductListComponent, FormsModule, InputTextModule],\n  template: `\n    <h2>Products</h2>\n    <div class=\"p-input-icon-left mb-8\">\n      <i class=\"pi pi-search\"></i>\n      <input\n        type=\"text\"\n        pInputText\n        [(ngModel)]=\"productName\"\n        (keyup)=\"filterProduct()\"\n      />\n    </div>\n    <primengbook-product-list [products]=\"filteredProducts\" />\n    <primengbook-product-list [products]=\"anotherProducts\" />\n  `,\n})\nexport default class ProductsComponent {\n  ...\n  filterProduct() {...}\n}\n```", "```js\n@Component({\n  selector: 'primengbook-product-list',\n  standalone: true,\n  imports: [CommonModule, CardModule, ButtonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  ...\n})\nexport class ProductListComponent {\n  @Input() products: Product[] = []\n  ...\n}\n```", "```js\n<div *ngFor=\"let product of products; trackBy: trackByProductId\">\n  {{ product.name }} - {{ product.price | currency }}\n</div>\n...\ntrackByProductId(_: number, product: Product): number {\n  return product.id\n}\n```", "```js\n <p-dataView\n  ...\n  [trackBy]=\"trackByProductId\"\n>\n  <!-- DataView content -->\n</p-dataView>\n```", "```js\n<span class=\"text-2xl font-semibold\">\n{{\n  '$' + calculateTotal(product.quantity)\n}}\n</span>\n```", "```js\nimport { Pipe, PipeTransform } from '@angular/core'\n@Pipe({\n  name: 'total',\n  standalone: true,\n  pure: true,\n})\nexport class TotalPipe implements PipeTransform {\n  transform(quantity: number): number {\n    return calculateTotal(quantity)\n  }\n}\n```", "```js\n<span class=\"text-2xl font-semibold\">\n  $ {{ product.quantity | total }}\n</span>\n```", "```js\n    npm install source-map-explorer --save-dev\n    OR\n    yarn add -D source-map-explorer\n    ```", "```js\n    // angular.json or project.json\n    \"build\": {\n      \"executor\": \"@angular-devkit/build-angular:browser\",\n      \"outputs\": [\n        \"{options.outputPath}\"\n      ],\n      \"options\": {\n        ...\n        \"sourceMap\": true\n      },\n      ...\n    }\n    ```", "```js\n    ng build --prod\n    ```", "```js\n    // for single file\n    npx source-map-explorer dist/{your-project-path}/main.2e8930c4811df7ab.js\n    // for all files\n    npx source-map-explorer dist/{your-project-path}/**/*.js\n    ```"]