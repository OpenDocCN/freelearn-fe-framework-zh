["```js\nnx run <project name>:lint\n```", "```js\nnx run finance-expenses-registration:lint\n```", "```js\nnx affected -t lint –base=main\n```", "```js\n\"affected\": {\n  \"defaultBase\": \"main\"\n}\n```", "```js\nnx run workspace-generators-plugin:lint --fix\nnx run shared-ui-common-components:lint --fix\nnx run shared-data-access-generic-http:lint --fix\nnx run shared-util-custom-decorators:lint --fix\n```", "```js\n\"lint\": {\n  ……\n  \"options\": {\n    \"fix\": true\n  }\n}\n```", "```js\nnx run-many -t lint -p project1 project2\n```", "```js\nnx run-many -t lint --projects=tag:type:ui\n```", "```js\nnx build finance-expenses-registration\n```", "```js\n--configuration=development\n```", "```js\nnx run finance-expenses-registration:build:production\n```", "```js\n\"updateBuildableProjectDepsInPackageJson\": true\n```", "```js\nnpm install http-server -g\n```", "```js\nhttp-server dist\\apps\\finance\\expenses-registration\n```", "```js\n!isDevMode() ||\n```", "```js\nnpm i -g webpack-bundle-analyzer\n```", "```js\nnpm i webpack-bundle-analyzer -save-dev\n```", "```js\nnx build finance-expenses-registration --stats-json\n```", "```js\nwebpack-bundle-analyzer dist/apps/finance/expenses-registration/stats.json\n```", "```js\n    ghp_vnjAH0PRGRcIO6UQGO2GavdOUVUDPJ1Jrv77\n    ```", "```js\n# Add trigger\nname: Build and Deploy Script\non:\n  push:\n    branches:\n      - main\n```", "```js\n# Jobs to run\njobs:\n  build:\n    runs-on: ubuntu-latest\n```", "```js\n    # Checkout repository\n    - name: Checkout Repository\n      uses: actions/checkout@v4\n      with:\n        fetch-depth: 0\n```", "```js\n    # Install NodeJS\n    - name: Adding Node.js\n      uses: actions/setup-node@v2\n      with:\n        node-version: 20.1.0\n```", "```js\n    # Setup pnpm\n    - uses: pnpm/action-setup@v2\n      with:\n        version: 8.14.1\n    - run: pnpm install --frozen-lockfile\n```", "```js\n    # Lint affected projects\n    - name: Lint affected\n      run: pnpm nx run-many -t lint --base=main --no-cloud\n```", "```js\n    # Unit testing finance-expenses-registration\n    - name: Unit test finance-expenses-registration\n      run: pnpm nx run finance-expenses-registration:test –no-cloud\n```", "```js\n    # Build finance-expenses-registration application\n    - name: Build Angular App\n      run: pnpm nx build finance-expenses-registration --no-cloud --base-href /Effective-Angular/\n```", "```js\n    # Setup Git on the VM\n    - name: Set up Git\n      run: |\n        git config --global user.email \"youremail@gmail.com\"\n        git config --global user.name \"your-git-username\"\n```", "```js\n    # Deploy the finance-expenses-registration to GitHub pages\n    - name: Deploy to gh pages\n      run: |\n        npx angular-cli-ghpages --dir=dist/apps/finance/expenses-registration\n      env:\n        CI: true\n        GH_TOKEN: ${{ secrets.GH_PAGES }}\n```", "```js\nnpm i angular-cli-ghpages\n```", "```js\nnpm install -g pnpm\n```", "```js\npnpm install\n```", "```js\n{ provide: APP_BASE_HREF, useValue: isDevMode() ? '' : '/Effective-Angular/' },\n```", "```js\n@Injectable({ providedIn: 'root' })\nexport class TranslocoHttpLoader implements TranslocoLoader {\n  private http = inject(HttpClient);\n  protected readonly baseHref = inject(APP_BASE_HREF);\n  getTranslation(lang: 'en' | 'nl') {\n    return this.http.get<Translation>(`${this.baseHref}assets/i18n/${lang}.json`);\n  }\n}\n```"]