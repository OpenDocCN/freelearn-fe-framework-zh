- en: Answers
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 答案
- en: 'Here you will find the answers to the questions provided at the end of each
    chapter:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以找到每章末尾提供的问题的答案：
- en: Chapter 1
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章
- en: All questions are open-response.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 所有问题都是开放式回答。
- en: Chapter 2
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章
- en: The **render** method.
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**render**方法。'
- en: The **screen** object.
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**screen**对象。'
- en: Presentational components.
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 表示性组件。
- en: The **debug** method.
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**debug**方法。'
- en: This is an open-response question.
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是一个开放式回答问题。
- en: Chapter 3
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章
- en: The **user-event** module closely resembles events that occur when users perform
    actions on the DOM, such as **keydown** and **keyup** events.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**user-event**模块与用户在DOM上执行操作时发生的事件非常相似，例如**keydown**和**keyup**事件。'
- en: MSW allows you to test components that make HTTP requests to APIs. This is done
    by intercepting the request before it reaches the internet and instead returns
    controllable mock data for testing.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: MSW允许你测试向API发起HTTP请求的组件。这是通过在请求到达互联网之前拦截请求，并返回可控制的模拟数据以进行测试来实现的。
- en: A mock function is a test double used to make assertions. For example, we can
    use a mock function to verify that a method is called when a user clicks a button.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 模拟函数是一个测试替身，用于进行断言。例如，我们可以使用模拟函数来验证当用户点击按钮时，方法是否被调用。
- en: The risk is that substituting actual dependencies with mocked versions to test
    components doesn't allow you to test resulting behaviors when integrated with
    real production dependencies.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 风险在于，用模拟版本替换实际依赖项来测试组件不允许你测试与真实生产依赖项集成时的结果行为。
- en: This is an open-response question.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是一个开放式回答问题。
- en: Use a `getBy*` query when you expect an element to be present in the DOM's current
    state. Use a `findBy*` query when an element's presence depends on an asynchronous
    action that delays the time the element appears in the DOM. Use a `queryBy*` query
    when you want to verify that an element is not present in the DOM.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你期望元素存在于DOM的当前状态时，请使用`getBy*`查询。当元素的存在取决于使元素在DOM中出现的延迟的异步操作时，请使用`findBy*`查询。当你想验证元素不在DOM中时，请使用`queryBy*`查询。
- en: Chapter 4
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章
- en: Testing integrated components allow you to mitigate risk by verifying production
    behavior when components interact with each other. Using the isolated approach,
    we would be replacing real dependencies with fake data and responses and, therefore,
    not mitigate as much risk. Also, in many situations, you can cover more code in
    fewer tests using the integrated testing approach.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试集成组件允许你在组件相互交互时通过验证生产行为来降低风险。使用隔离方法，我们会用假数据和响应替换真实依赖项，因此不能降低太多风险。此外，在许多情况下，使用集成测试方法，你可以用更少的测试覆盖更多的代码。
- en: You should only use the `data-testid` attribute as the last resort when other
    preferred queries methods such as `getBy*` and `findBy*` cannot be used to select
    elements.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你应该只在其他首选查询方法，如`getBy*`和`findBy*`无法用于选择元素时，才使用`data-testid`属性作为最后的手段。
- en: The `act` method ensures your tests behave closer to how React updates the browser's
    DOM. Use `act` in situations where you need to manually make component updates
    such as resolving a Promise that React otherwise would not be aware of in your
    test. React Testing Library automatically wraps components in `act` eliminating
    the need to manually wrap all code that updates the component in most scenarios,
    such as click events.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`act`方法确保你的测试行为更接近React更新浏览器DOM的方式。在需要手动进行组件更新的情况下使用`act`，例如解决React在测试中否则不会意识到的Promise。React
    Testing Library自动将组件包裹在`act`中，在大多数情况下，如点击事件，无需手动包裹所有更新组件的代码。'
- en: Chapter 5
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章
- en: Unlike Enzyme or ReactTestUtils, React Testing Library allows you to write tests
    that avoid implementation details and resemble DOM interactions from the end user's
    perspective.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与Enzyme或ReactTestUtils不同，React Testing Library允许你编写避免实现细节并从最终用户视角模拟DOM交互的测试。
- en: Running tests in Jest's Watch Mode allows you to learn when regressions occur
    as you add new code quickly. Running tests in Watch Mode is also beneficial when
    using the TDD approach to building components.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Jest的监视模式下运行测试允许你在快速添加新代码时了解回归何时发生。在监视模式下运行测试在使用TDD方法构建组件时也非常有益。
- en: Use the `each` method when you want to execute the same test multiple times
    with different values.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你需要用不同的值多次执行相同的测试时，请使用`each`方法。
- en: Chapter 6
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章
- en: All questions are open-response.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 所有问题都是开放式回答。
- en: Chapter 7
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章
- en: All questions are open-response.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 所有问题都是开放式回答。
