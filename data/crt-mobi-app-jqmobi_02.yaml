- en: Chapter 2. A Mom-and-Pop Mobile Website
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 2 章。一家小型移动网站
- en: The previous chapter taught us some valuable lessons about paper prototyping
    and gave us a solid ground on which to start our development. Now, we will take
    those drawings and turn them into an actual jQuery Mobile (jQM) site that acts
    responsively and looks unique.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 前一章教会了我们一些有关纸质原型的宝贵经验，并为我们开始开发奠定了坚实的基础。现在，我们将把这些图纸变成一个真正的 jQuery Mobile (jQM)
    网站，它具有响应式的功能并且看起来独特。
- en: 'In this chapter, we cover:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们涵盖：
- en: A new jQuery Mobile boilerplate
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个新的 jQuery Mobile 样板
- en: A new way of thinking about full-site links
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对完整网站链接的一种新思考
- en: Breaking the boilerplate into a configurable server-side PHP template
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将样板分解为可配置的服务器端 PHP 模板
- en: Using alternate icon sets
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用备用图标集
- en: Custom fonts
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义字体
- en: Page curl effects using only CSS
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅使用 CSS 实现页面翻页效果
- en: Performance optimization tips
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 性能优化技巧
- en: Mobile detection and redirection techniques
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移动设备检测和重定向技术
- en: A new jQuery Mobile boilerplate
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个新的 jQuery Mobile 样板
- en: The jQuery Mobile docs have a lot of hidden gems. They make a great starting
    point but there are actually several ways of doing your base template. There is
    single-page template, multipage template, templates with global configuration,
    and dynamically-generated pages.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery Mobile 文档中有很多隐藏的宝藏。它们是一个很好的起点，但实际上有几种方法可以创建你的基础模板。有单页面模板、多页面模板、带有全局配置的模板以及动态生成的页面。
- en: 'So, let''s start out with a new jQM single-page boilerplate based on the original
    single-page template ( [http://view.jquerymobile.com/1.3.0/docs/widgets/pages/](http://
    http://view.jquerymobile.com/1.3.0/docs/widgets/pages/)). We will evolve this
    as we move into other chapters so it becomes an all-encompassing template. Following
    is the basic directory structure we''ll create for this chapter and the files
    we''ll use:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，让我们从基于原始单页面模板的新 jQM 单页面样板开始 ([http://view.jquerymobile.com/1.3.0/docs/widgets/pages/](http://
    http://view.jquerymobile.com/1.3.0/docs/widgets/pages/))。随着我们进入其他章节，我们将逐步完善它，使其成为一个全面的模板。以下是我们将为本章创建的基本目录结构和我们将使用的文件：
- en: '![A new jQuery Mobile boilerplate](img/0069_02_08.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![一个新的 jQuery Mobile 样板](img/0069_02_08.jpg)'
- en: 'For now, here is the base HTML. Let''s store it in `template.html`:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这是基础 HTML。让我们把它存储在 `template.html` 中：
- en: Tip
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Downloading the example code**'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.packtpub.com](http://www.packtpub.com). If you
    purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从你在[Packt](http://www.packtpub.com)帐户中下载你购买的所有 Packt 图书的示例代码文件。如果你在其他地方购买了这本书，你可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册，直接将文件发送到你的邮箱。
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Meta viewport differences
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: meta viewport 的不同之处
- en: 'The `meta viewport` tag is what really makes mobiles … well … mobile! Without
    it, mobile browsers will assume that it is a desktop site and everything will
    be small and require pinch-and-zoom:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '`meta viewport` 标签是真正使移动设备成为移动设备的关键！没有它，移动浏览器会假设它是一个桌面站点，一切都会变得很小，需要捏合缩放：'
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This `meta viewport` tag is different in that it actually prevents all pinch-and-zoom
    action. Why? Because, now smart phones are in the hands of more than just the
    technical elite who know about such things. I''ve personally seen people accidentally
    zoom in while just trying to tap a link. They had no idea what they had done or
    how to get out of it. Regardless, if you use jQuery Mobile, your users have no
    need of zoom anyway:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 `meta viewport` 标签与众不同，因为它实际上阻止了所有的捏合缩放操作。为什么？因为现在智能手机不仅仅掌握在了了解这些事情的技术精英手中。我个人见过人们在试图点击链接时不小心放大了页面。他们不知道他们做了什么或如何退出。无论如何，如果你使用
    jQuery Mobile，你的用户不需要缩放：
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We will need custom styles. There''s no way around it. Even if we use the jQuery
    Mobile ThemeRoller ([http://jquerymobile.com/themeroller/](http://jquerymobile.com/themeroller/)),
    there''s always something that needs overriding. This is where you put it:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将需要自定义样式。没有别的办法。即使我们使用了 jQuery Mobile ThemeRoller ([http://jquerymobile.com/themeroller/](http://jquerymobile.com/themeroller/))，总会有一些需要覆盖的内容。这就是你放置的地方：
- en: '[PRE3]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Originally mentioned under the section regarding global configuration ([http://jquerymobile.com/demos/1.1.0/docs/api/globalconfig.html](http://jquerymobile.com/demos/1.1.0/docs/api/globalconfig.html)),
    this is where you put your global overrides, as well as any scripts you may want
    to run or have available universally:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 最初在有关全局配置的部分提到（[http://jquerymobile.com/demos/1.1.0/docs/api/globalconfig.html](http://jquerymobile.com/demos/1.1.0/docs/api/globalconfig.html)），这是您放置全局覆盖的地方，以及您可能想要运行或普遍可用的任何脚本：
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Most mobile websites follow the "best practice" of including a link to the full
    site. It's usually in the footer and it usually links to the homepage of the full
    site. OK, great. The job is done right? Wrong! The best practice would be better
    labeled as the "industry standard" because there is a better way.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数移动网站遵循“最佳实践”，包括一个指向完整网站的链接。它通常位于页脚，并且通常链接到完整网站的主页。好的，很好。工作完成了对吗？错！最佳实践更应该被标记为“行业标准”，因为有更好的方法。
- en: Full-site links beyond the industry standard
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 超越行业标准的完整网站链接
- en: The industry standard of simply including a full-site link fails to support
    the user's mental state. When a user navigates around on the mobile site, they're
    giving a pretty clear indication of what they want to look at. Supporting the
    user's mental model as they transition from mobile to full site is more work,
    but crafting a good user experience always is.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 简单包括一个完整网站链接的行业标准未能支持用户的心理状态。当用户在移动网站上导航时，他们清楚地表明了他们想要查看的内容。支持用户从移动到完整网站的心理模型转换是更多工作，但打造良好的用户体验始终是如此。
- en: Picture this. Sally is looking around on our mobile site because she wants to
    buy from us. She has actually taken the time to surf down or search to the product
    that she wants to see. However, due to the constraints of mobile, we made a few
    conscious choices to not put all the information there. We only included the high
    points that market research showed people really cared about. At this point, she
    might be a little bit frustrated as she taps on the full-site link to try to get
    more information. The full-site link was coded the traditional (lazy) way and
    takes her to the root of the full site where she now has to go find the product
    again. Now she has to do it using pinch-and-zoom, which only adds to the aggravation
    level. Unless Sally is desperately interested, what what's the chance she'd continue
    looking on her mobile and what's the chance she'd come back on a desktop browser
    after such a miserable experience?
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下。萨莉正在我们的移动网站上四处浏览，因为她想要从我们这里购买商品。她实际上花了时间向下浏览或搜索她想要查看的产品。然而，由于移动设备的限制，我们做出了一些有意识的选择，不在那里放置所有信息。我们只包括市场研究显示人们真正关心的重点。此时，她可能有点沮丧，因为她点按完整网站链接以获取更多信息。完整网站链接是以传统（懒惰）方式编码的，将她带到完整网站的根目录，现在她必须再次找到产品。现在她必须使用捏和缩放来做到这一点，这只会增加她的烦恼。除非萨莉非常感兴趣，否则她在经历了如此糟糕的体验后，继续在移动设备上查找的机会有多大，她会在桌面浏览器上回来的机会有多大？
- en: Now, instead, picture that same mobile product page having been thoughtfully
    crafted to point the full-site link at the product page desktop view. This is
    exactly what we did at my place of employment. Every possible mobile page was
    explicitly mapped to its desktop equivalent. The seamless transition was taken
    to user testing with actual customers and was met with a mix of 50 percent ambivalence
    and 50 percent delight. There was certainly surprise on the users' side because
    it did violate their expectations, but there was not a single negative reaction.
    If this does not successfully argue the case for rethinking the way full-site
    links are traditionally approached, I don't know what does. Preserve the user's
    mental model. Preserve the contextual relevance.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，相反地，想象一下同样的移动产品页面经过深思熟虑地制作，将完整网站链接指向产品页面的桌面视图。这正是我们在我的工作地方所做的。每个可能的移动页面都明确映射到其桌面等效页面。这种无缝的过渡已经通过实际客户的用户测试，并获得了50%的冷漠和50%的喜悦的混合反应。用户方面肯定会有惊喜，因为它违反了他们的期望，但没有一个负面的反应。如果这不成功地论证了重新考虑传统方式处理完整网站链接的情况，我不知道还有什么。
- en: 'Naturally, you''ll probably have user experience professionals who will use
    buzzwords like "consistency," "best pracitce," "industry standards," and "violating
    user expectations." If the evidence from the user tests does not convince them,
    give them a dose of the following philosophy:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，你可能会有用户体验专业人员，他们会使用像“一致性”、“最佳实践”、“行业标准”和“违背用户期望”这样的流行词汇。如果用户测试的证据无法说服他们，给他们一些以下哲学的剂量：
- en: '**Consistency**: This approach is consistent within itself. Every full-site
    link maps to that page on the full site.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一致性**：这种方法在自身内部是一致的。每个完整站点链接都映射到完整站点的那个页面。'
- en: '**Best practices**: A practice is only best until a new practice, comes along
    that is better. If they would rather keep with *old* best practices then perhaps
    they should sell their car, and get a horse and buggy.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**最佳实践**：实践只有在新的、更好的实践出现之前才是最佳的。如果他们宁愿坚持*旧*的最佳实践，那么也许他们应该卖掉他们的汽车，换一匹马和马车。'
- en: '**Industry standards**: Industry standards are the crutch upon which the rest
    of the world tries to hobble along while trying not to fall too far behind the
    innovators. Good is often the enemy of great. Don''t settle for it.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**行业标准**：行业标准是全世界试图跟随创新者的支撑物。好往往是伟大的敌人。不要满足于它。'
- en: '**Violating user''s expectations**: If we tell our users that we''re going
    to send them a free MP3 player and we send them a 128 GB iPad 4, have we violated
    their expectations? Yep! Think they''ll mind? Some expectations are worth violating.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**违背用户期望**：如果我们告诉用户我们将发送给他们一个免费的 MP3 播放器，然后我们发送给他们一台 128 GB 的 iPad 4，我们违背了他们的期望吗？是的！他们会介意吗？有些期望值是值得违背的。'
- en: Let's consider the flip side. What if the user really did want to go to the
    full-site's starting page? Well, they're only one step away because all they have
    to do now is hit the home button. So, in all likelihood, we will have saved the
    user several steps of navigation and, at worst, cost them one extra step to get
    back to the beginning.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑另一面。如果用户确实想要转到完整站点的起始页面呢？嗯，他们只需一步之遥，因为现在他们只需点击主页按钮。因此，很有可能，我们已经为用户节省了几个导航步骤，而且最坏的情况下，只增加了一个步骤回到起点。
- en: It's the little details that take a product from good to great. This is certainly
    a little detail but I challenge you to spend the extra 30 seconds per page to
    do this part of the job right.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 从好到伟大，细节决定成败。这确实是一个小细节，但我向你挑战，每页额外花 30 秒去做好这部分工作。
- en: The global JavaScript
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 全局 JavaScript
- en: 'Thanks to the Ajax navigation and progressive enhancement inherent in jQuery
    Mobile, there are a lot of different and extra events. Let''s consider the three
    unique jQuery Mobile events I''ve found most useful. We''re not going to immediately
    use them, just be aware of them and be sure to read the comments. Eventually,
    we''ll create `/js/global.js` to house the scripts that we''ll need. For now,
    just read the following script:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 jQuery Mobile 中的 Ajax 导航和渐进增强，有很多不同和额外的事件。让我们考虑我发现最有用的三个独特的 jQuery Mobile
    事件。我们不会立即使用它们，只是了解它们，并确保阅读注释。最终，我们将创建 `/js/global.js` 来存放我们需要的脚本。目前，只需阅读以下脚本：
- en: '[PRE5]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: .live versus .on
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`.live` 与 `.on`'
- en: One thing you may have noticed here is that we are using the `.live` method
    to capture events. This method has been deprecated since jQuery 1.7\. As of the
    time of this writing, we're on jQuery 1.9\. However, even when you look at the
    examples of event handlers in the documentation, they're still using `.live` in
    multiple places.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到，我们在这里使用了 `.live` 方法来捕获事件。该方法自 jQuery 1.7 版本起已被弃用。截至撰写本文时，我们使用的是 jQuery
    1.9 版本。然而，即使你查看文档中事件处理程序的示例，它们仍然在多个地方使用 `.live`。
- en: 'The `.live` function works to check every event that bubbled up to the document
    level and see if it matches the selector. If so, the function is executed. The
    reason `.live` was so useful was that it was great at dealing with shifting and
    dynamically-injected elements. After all, it''s hard to bind to something that''s
    not there yet. But you could always count on `.live` to catch the events. Due
    to its overused and general inefficiency, it was deprecated in favor of `.on`.
    So, here is how we would accomplish the same thing using the following new method:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '`.live` 函数的作用是检查到达文档级别的每个事件，并查看它是否与选择器匹配。如果匹配，则执行该函数。`.live` 如此有用的原因在于，它非常适用于处理变动和动态注入的元素。毕竟，绑定尚不存在的东西很困难。但你总是可以依靠
    `.live` 来捕获事件。由于它被过度使用且效率一般，它已被弃用，改用 `.on`。因此，下面是我们如何使用以下新方法完成相同任务的方式：'
- en: '[PRE6]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: would become
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 将变为
- en: '[PRE7]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This works great if you''re looking to address every page. Now let''s consider
    a piece of code that could be used to individually target a single page''s initialization:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要针对每个页面进行处理，这样做非常合适。现在让我们考虑一个代码片段，可以单独针对单个页面的初始化：
- en: '[PRE8]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: would become
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 将变成
- en: '[PRE9]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The differences are subtle and, in the end, it's not going to make an ounce
    of difference from a performance perspective for us because we're dealing with
    a framework that was designed around letting the page events bubble up to the
    document level. You will realize no performance boost by using `.on` versus `.live`
    in a jQuery Mobile implementation. However, you may experience an upgrade headache
    when you are forced to update because they finally did away with `.live`.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 差异微妙，最终对于我们来说，从性能的角度来看并不会产生任何差异，因为我们处理的是一个围绕让页面事件冒泡到文档级别的框架。在jQuery Mobile实现中，使用`.on`与`.live`不会带来性能提升。但是，当你不得不更新时，可能会遇到升级头疼，因为它们最终摒弃了`.live`。
- en: The global CSS
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 全局CSS
- en: In case this is your first exposure to responsive web design, for the most part,
    all your custom styles will be in the default section. The other sections are
    for overriding your default styles to tweak for other device widths and resolutions.
    The `Horizontal Tweaks` section is for overriding styles for landscape orientation.
    The `iPad` section is geared for tablet resolutions between 768px and 1024px.
    In the `HD and Retina Tweaks` section, you will most likely be only overriding
    background image styles to substitute higher resolution graphics. We'll soon see
    examples of these in action and we'll put what we use into `/css/custom.css`.
    In the mean time, just look at these structures.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这是你第一次接触响应式网页设计，大多数情况下，你的自定义样式将在默认部分。其他部分是用来覆盖默认样式，以适应其他设备的宽度和分辨率。`Horizontal
    Tweaks`部分是用来覆盖横向方向的样式。`iPad`部分适用于768px和1024px之间的平板分辨率。在`HD and Retina Tweaks`部分，你很可能只需要覆盖背景图样式以替换更高分辨率的图形。我们很快将看到这些实例，并将我们使用的内容放入`/css/custom.css`。与此同时，只需要看看这些结构。
- en: '[PRE10]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Breaking the HTML into a server side template
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将HTML分解为服务器端模板
- en: Normally, I'm a Java guy, but I've chosen PHP due to the prevalence of the **LAMP**
    (**Linux, Apache, MySql, PHP** ) platform. All we're really doing here is using
    variable and Server Side Includes to give our templates consistency and flexibility.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 通常情况下，我是一个Java程序员，但由于 **LAMP** (**Linux, Apache, MySql, PHP**) 平台的普及，我选择了PHP。其实我们在这里真正做的就是使用变量和服务器端包含来使我们的模板具有一致性和灵活性。
- en: 'This is not actual production code here. This is just a break down of the initial
    HTML into a nice PHP boilerplate. If you want to save this to a file for now,
    may I suggest `/boilerplate.php`:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不是真正的生产代码。这只是将初始HTML拆分成漂亮的PHP样板。如果你现在想将其保存到文件中，我建议使用`/boilerplate.php`：
- en: '[PRE11]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now we''ll extract most of the header and put it into `/includes/meta.php`:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将提取大部分的头部内容，并将其放入`/includes/meta.php`中：
- en: '[PRE12]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Note
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note the cookies plugin in `js/jquery.cookie.js`. You'll want to download this
    from [https://github.com/carhartl/jquery-cookie](https://github.com/carhartl/jquery-cookie).
    We'll use it later in mobile detection.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 注意`js/jquery.cookie.js`中的cookies插件。你需要从[https://github.com/carhartl/jquery-cookie](https://github.com/carhartl/jquery-cookie)下载它。我们稍后将在移动设备检测中使用它。
- en: 'Now, let''s take the page header, make it dynamic, and drop the contents into
    `/includes/header.php`:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们将页面头部变为动态内容，并将其放入`/includes/header.php`中：
- en: '[PRE13]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Next, let''s take the footer content and extract it into `/includes/footer.php`:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们将页脚内容提取到`/includes/footer.php`中：
- en: '[PRE14]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The header and footer PHP files are set-and-forget files. All we have to do
    is fill in a few variables on the main page and the `meta.php`, `header.php`,
    and `footer.php` will take care of the rest. The `headers.php` is coded such that
    if your `$headerLeftLinkText` is set to the word `Back` regardless of casing,
    it will turn the left-side button of the header into a back button.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 头部和底部的PHP文件是设置并忘记的文件。我们只需要在主页和`meta.php`、`header.php`和`footer.php`上填写一些变量，剩下的就交给它们来处理。`headers.php`被编码成当您的`$headerLeftLinkText`设置为单词`Back`（不区分大小写），它就会将头部的左侧按钮变成返回按钮。
- en: What we need to create our site
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们需要创建我们的网站的内容
- en: We have a viable boilerplate. We have a customer. Let's get to work and code
    what we drew in [Chapter 1](ch01.html "Chapter 1. Prototyping jQuery Mobile"),
    *Prototyping jQuery Mobile*. For this chapter, we'll stick to just the first screen
    since it's all we need to teach the skills.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经有了一个可行的样板文件。我们有了一个客户。让我们开始工作，并编写我们在[第1章](ch01.html "第1章。jQuery Mobile 原型")中绘制的内容，*jQuery
    Mobile 原型*。在本章中，我们将只专注于第一个屏幕，因为这是我们教授技能所需的全部内容。
- en: '![What we need to create our site](img/0069_02_00.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![我们需要创建我们网站的内容](img/0069_02_00.jpg)'
- en: 'Here''s what we need to think about:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们需要考虑的内容：
- en: 'Logo: We''ll simply include the logo from the desktop view.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标志：我们将简单地包含桌面视图中的标志。
- en: 'Buttons: There are several ways we could accomplish these. At first glance,
    we might think about using standard `data-role="button"` links. We could leverage
    a `ui-grid` ([http://jquerymobile.com/demos/1.2.0/docs/content/content-grids.html](http://jquerymobile.com/demos/1.2.0/docs/content/content-grids.html))
    to add the formatting. If we were only intending to optimize for phones held vertically,
    that would be a great approach. However, we''re going to think outside the box
    here and create a responsive menu that will react well at different resolutions.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按钮：我们可以通过几种方式来完成这些按钮。乍一看，我们可能会考虑使用标准的`data-role="button"`链接。我们可以利用`ui-grid`
    ([http://jquerymobile.com/demos/1.2.0/docs/content/content-grids.html](http://jquerymobile.com/demos/1.2.0/docs/content/content-grids.html))
    来添加格式。如果我们只打算针对垂直持有的手机进行优化，那将是一个很好的方法。然而，我们要在这里跳出框架，创建一个在不同分辨率下反应良好的响应式菜单。
- en: 'Icons: Those are not standard jQuery Mobile icons. There are countless icon
    sets online that we could use but let''s go with **Glyp****hish** ([http://glyphish.com/](http://glyphish.com/)).
    They make high-quality icons that include multiple sizes, retina display optimizations,
    and the original Adobe Illustrator files just in case you want to tweak them.
    It''s an excellent value.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图标：这些不是标准的 jQuery Mobile 图标。在线有无数的图标集可供我们使用，但我们选择**Glyp****hish** ([http://glyphish.com/](http://glyphish.com/))。它们制作了包含多个尺寸、视网膜显示优化和原始
    Adobe Illustrator 文件的高质量图标，以防您想要调整它们。这是一个非常优秀的选择。
- en: 'Customer testimonials: This looks like it would be perfectly suited to a listview
    with images. We''ll pull this content from their Facebook page.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户见证：这看起来非常适合使用带有图像的列表视图。我们将从他们的 Facebook 页面上提取这些内容。
- en: Getting Glyphish and defining custom icons
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 获取 Glyphish 并定义自定义图标
- en: Glyphish has a license that allows for free use with attribution. The free set
    ([http://www.glyphish.com/download/](http://www.glyphish.com/download/)) has only
    one size and 200 icons, the "Pro" set has multiple sizes, 400 icons, and an unlimited
    license. For only $25 dollars, that's a no-brainer.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: Glyphish 有一个许可证，允许在署名下免费使用。免费套装 ([http://www.glyphish.com/download/](http://www.glyphish.com/download/))
    只有一个尺寸和 200 个图标，"专业"套装有多个尺寸、400 个图标和无限许可证。仅需 25 美元，这是一个不费吹灰之力的选择。
- en: 'Creating a button with an icon is very simple. All you have to do is use the
    `data-icon` attribute. Code, such as the following, will yield a button as shown
    in the following figure:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个带有图标的按钮非常简单。你所需要做的就是使用`data-icon`属性。像下面的代码一样，将产生一个按钮，如下图所示：
- en: '[PRE15]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![Getting Glyphish and defining custom icons](img/0069_02_04.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![获取 Glyphish 并定义自定义图标](img/0069_02_04.jpg)'
- en: What you may not yet realize is the way the jQuery Mobile actually does this.
    Whatever you have written as the value for `data-icon` will become a class name
    on the button. If you have an attribute of `data-icon="directions"` then the class
    that is applied by jQM is `ui-icon-directions`. Naturally, you'll need to craft
    this in your own custom CSS file like this. We'll put this, and others like it,
    into`css/custom.css`.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能还没有意识到 jQuery Mobile 实际上是这样做的。无论你将`data-icon`的值写成什么样，它都将成为按钮上的一个类名。如果你有一个`data-icon="directions"`的属性，那么
    jQM 应用的类就是`ui-icon-directions`。当然，你需要像这样在你自己的自定义 CSS 文件中制作这个。我们将把这个以及其他类似的内容放入`css/custom.css`中。
- en: '[PRE16]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Another thing you'll need to do is get rid of the colored disk around the typical
    icons. We'll also need to remove the border radius or our icons will get cut off
    to fit within the shape of the circular radius defined within the style for `ui-icon`.To
    do this, we'll add the `glyphishIcon` class to each link we want to customize
    this way. We'll also need to add this definition to our `custom.css` **:**
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 另一件你需要做的事情是去掉典型图标周围的彩色圆盘。我们还需要删除边框半径，否则我们的图标将被裁剪以适应`ui-icon`样式中定义的圆形半径的形状。为此，我们将为每个要以这种方式自定义的链接添加`glyphishIcon`类。我们还需要将此定义添加到我们的`custom.css`
    **：**
- en: '[PRE17]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'In the end, our code for the four buttons on the front page would look as follows:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们在首页上的四个按钮的代码将如下所示：
- en: '[PRE18]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'It would be rendered on the screen as shown in the following screenshot:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 它会在屏幕上呈现如下的截图所示：
- en: '![Getting Glyphish and defining custom icons](img/0069_02_05.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![获取Glyphish并定义自定义图标](img/0069_02_05.jpg)'
- en: Linking to phones, e-mails, and maps
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 链接到电话、电子邮件和地图
- en: 'Mobile browsers have a distinct usability advantage. If we want to link to
    an e-mail address, the native e-mail client will instantly pop up. The following
    code is an example:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 移动浏览器具有独特的可用性优势。如果我们想要链接到一个电子邮件地址，本机电子邮件客户端将立即弹出。以下代码是一个示例：
- en: '[PRE19]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'We can do the same thing with phone numbers and every device will instantly
    pop up an option to call that number. This is the functionality unmatched on desktops,
    since most do not have telephony. Here is the `href` element from the preceding
    code:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以对电话号码采取相同的方式，每个设备都会立即弹出一个选项，让用户拨打那个号码。这是桌面无法匹敌的功能，因为大多数桌面设备都没有电话功能。这是来自前述代码的`href`元素：
- en: '[PRE20]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Maps are another specialty for mobile, since virtually all smart phones have
    built-in GPS software. Here''s the `href` element for the maps link. It''s just
    a standard link to Google Maps:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 地图是移动设备的另一个特色，因为几乎所有智能手机都内置了GPS软件。以下是地图链接的`href`元素。它只是一个到谷歌地图的标准链接：
- en: '[PRE21]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'For iOS 5 and Android, the OS will intercept that click and bring up the location
    in the native maps app. Version 6 of iOS changes this model, but we can still
    link to the Google Maps link and the users will be shown the web view and prompted
    to open it in Google Maps for iOS, as shown in the following screenshot:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 对于iOS 5和Android，操作系统将拦截该点击，并在本机地图应用程序中显示位置。iOS 6更改了这种模式，但我们仍然可以链接到谷歌地图链接，用户将会看到网页视图，并提示他们在iOS中打开谷歌地图，如下图所示：
- en: '![Linking to phones, e-mails, and maps](img/0069_02_07.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![链接到电话、电子邮件和地图](img/0069_02_07.jpg)'
- en: For platforms other than iOS and Android, the user will simply be taken to the
    Google Maps site. This is good because Google has done an amazing job of making
    the site usable on any device, including non-smart phones.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 对于除了iOS和Android之外的平台，用户将直接转到谷歌地图网站。这很好，因为谷歌在使该网站可用于任何设备，包括非智能手机方面做得非常出色。
- en: Of course, we could leave it at this and call it good enough, but we could do
    a little more work to give the Apple users a better experience by sending them
    to the native Apple Maps application. This code will create an object with configurable
    properties for configuration and future adaptations. It works by version sniffing
    to see if the major version of the OS is greater than 5\. If so, it will assimilate
    the Google Maps links.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们可以就此结束，并且说它已经足够好了，但我们可以做更多的工作，通过发送用户到内置的苹果地图应用程序，为苹果用户提供更好的体验。这段代码将创建一个具有可配置属性的对象，用于配置和未来的适应。它通过版本嗅探来查看操作系统的主要版本是否大于5。如果是，它将吸收谷歌地图链接。
- en: There are two ways these links can be converted. First, it will look for an
    attribute of `data-appleMapsUrl` on the hyperlink and use it. If that is not present
    on the link, it will check the `forceAppleMapsConversionIfNoAlt` configuration
    option to see if you have configured the switcher object to convert the Google
    Maps link directly.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 这些链接可以通过两种方式进行转换。首先，它会查找超链接上的`data-appleMapsUrl`属性并使用它。如果链接上没有这个属性，它将检查`forceAppleMapsConversionIfNoAlt`配置选项，看看您是否已经配置了转换器对象来直接转换谷歌地图链接。
- en: Once the system realizes that this phone needs switching, it stores that fact
    into `localStorage` so it won't have to do the work of version checking again.
    It will simply check the value in `localStorage` for `true`.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦系统意识到这部手机需要切换，它就会将这个事实存储到`localStorage`中，这样它就不必再次进行版本检查的工作。它只会检查`localStorage`中的值是否为`true`。
- en: 'Following is the code which is located in the `/js/global.js`:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是位于`/js/global.js`的代码：
- en: '[PRE22]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '}With this code, it is now very easy to simply call it on `pageinit` from our
    `/js/global.js`:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这段代码，现在很容易在我们的`/js/global.js`中的`pageinit`上调用它：
- en: '[PRE23]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: This approach is completely seamless to the user. No matter what system they
    are on, they will have the most frictionless experience in trying to reach your
    client's business.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法对用户来说是完全无缝的。无论他们使用的是什么系统，他们都会在尝试访问您客户的业务时获得最无摩擦的体验。
- en: Custom fonts
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自定义字体
- en: 'Custom fonts are present on their full site (and, thus, part of their branding).
    These fonts will work just as well on mobile. Platforms like iOS, Android, and
    the latest Blackberry fully support `@font-face` CSS. Older editions of BlackBerry
    and Windows Phone may or may not support `@font-face` depending on the model that
    users have. For anyone that does not support `@font-face`, they will simply be
    presented with standard web fonts as you specify in the `font-family` rule. There
    are many different web font providers:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义字体出现在他们的完整网站上（因此也是他们品牌的一部分）。这些字体在移动端同样适用。像 iOS、Android 和最新的 BlackBerry 完全支持
    `@font-face` CSS。旧版 BlackBerry 和 Windows Phone 可能会根据用户的型号支持或不支持 `@font-face`。对于任何不支持
    `@font-face` 的人，他们将只看到您在 `font-family` 规则中指定的标准网络字体。有许多不同的网络字体提供商：
- en: '**Google Web** **Fonts** ([http://www.google.com/webfonts/](http://www.google.com/webfonts/))'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Google Web** **Fonts** ([http://www.google.com/webfonts/](http://www.google.com/webfonts/))'
- en: '**TypeKit** ([https://typekit.com/](https://typekit.com/))'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**TypeKit** ([https://typekit.com/](https://typekit.com/))'
- en: '**Font** **Squirrel** ([http://www.fontsquirrel.com/](http://www.fontsquirrel.com/))'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Font** **Squirrel** ([http://www.fontsquirrel.com/](http://www.fontsquirrel.com/))'
- en: '**Fonts.com** **Web Fonts** ([http://www.fonts.com/web-fonts](http://www.fonts.com/web-fonts))'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Fonts.com** **Web Fonts** ([http://www.fonts.com/web-fonts](http://www.fonts.com/web-fonts))'
- en: For our project we're going to use Google Web Fonts. We'll need to include these
    lines in the `<head>` of every page that we want to use them. Since we'll probably
    be using them everywhere, let's just include these lines in our file `/includes/meta.php`.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的项目，我们将使用 Google Web Fonts。我们需要在每个我们想要使用它们的页面的`<head>`中包含这些行。因为我们可能会在任何地方使用它们，所以让我们把这些行直接包含在我们的文件`/includes/meta.php`中。
- en: '[PRE24]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Once we have linked our fonts in the `<head>`, we''ll need to specify their
    usage in a font-family rule within our `/css/custom.css` file as follows:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们在`<head>`中链接了我们的字体，我们将需要在`/css/custom.css`文件中使用`font-family`规则来指定它们的使用方式，如下所示：
- en: '[PRE25]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Now, for any browser (which is most these days) that supports it, they''ll
    see something as follows:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，对于任何（大多数情况下）支持它的浏览器，他们将看到如下内容：
- en: '![Custom fonts](img/0069_02_06.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![自定义字体](img/0069_02_06.jpg)'
- en: Note
  id: totrans-122
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**A word of caution**: Web fonts are not exactly lightweight. Marvel weighs
    in at 20 KB. Not huge, but not small. You would not want to include too many of
    these.'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**：网络字体并不轻量级。Marvel 的体积为 20 KB。不算大，但也不小。你不会想包含太多这样的字体的。'
- en: Page curl shadow effects for our list items
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 列表项的页面翻页阴影效果
- en: We'll be laying out the customer testimonials in unordered lists. We could use
    an image listview, but we want some spacing in between each item as well as a
    page curl effect. So, let's just style a regular unordered list. Whenever possible,
    we should avoid overriding the standard jQuery Mobile code. It's just asking for
    trouble. Whenever you override something that is built to be a framework (like
    jQuery Mobile), you run the risk of the next release completely breaking the overrides
    and custom adaptations you have made.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用无序列表来布置客户的推荐。我们可以使用图像列表视图，但我们也想要在每个项目之间有一些间距以及一个页面翻页效果。所以，让我们只是给一个普通的无序列表加样式。尽可能避免覆盖标准的
    jQuery Mobile 代码。那只是在找麻烦。每当你覆盖一个被设计成一个框架的东西（比如 jQuery Mobile）时，你都会面临下一个版本完全破坏你所做的覆盖和自定义适应的风险。
- en: The code for this customization will be displayed and labeled in the final CSS
    a little later in this chapter. The point is, we're going to do this using CSS3\.
    Most mobile browsers fully support CSS3, including transformations, transitions,
    animations, shadows, gradients, and rounded corners. Ancient platforms, such as
    Windows Phone 7 and BlackBerry 5 are based on Internet Explorer 7 or earlier and
    do not fully support CSS3\. In those cases, rather than seeing the fancy page
    curl, they'll just see a white box containing and image and text. While not ideal,
    it's a perfectly reasonable fallback.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 此定制的代码稍后将在本章显示并标记为最终的 CSS。重点是，我们将使用 CSS3 来完成这个。大多数移动浏览器完全支持 CSS3，包括转换、过渡、动画、阴影、渐变和圆角。古老的平台，如
    Windows Phone 7 和 BlackBerry 5，是基于 Internet Explorer 7 或更早版本的，并且不完全支持 CSS3。在这些情况下，他们不会看到花哨的页面翻页效果，而只会看到一个包含图像和文本的白色框。虽然不是理想的情况，但这是一个完全合理的后备方案。
- en: 'Optimization: why you should be thinking of it first'
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 优化：为什么你应该首先考虑它
- en: I believe that optimization is important enough that you need to know and be
    aware of it at the beginning. You are going to do some awesome work and I don't
    want you or your stakeholders to think it's any less awesome, or slow, or anything
    else because you didn't know the tricks to squeeze the most performance out of
    your systems. It's never too early to impress people with the performance of your
    creations. Mobile is a very unforgiving environment and some of the tips in this
    section will make more difference than any of the "best coding practices."
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信优化是如此重要，以至于你需要在一开始就知道并且意识到它。你将做一些了不起的工作，我不希望你或你的利益相关者认为它不够了不起，或者慢，或者其他任何东西，因为你不知道如何挤压系统性能的技巧。从你的创作中获得最佳性能的窍门永远不嫌早。移动环境是一个非常苛刻的环境，本节中的一些技巧将产生比任何“最佳编码实践”更大的影响。
- en: 'From a performance perspective, there is absolutely nothing worse than an HTTP
    request. That''s why CSS sprites are a good idea. Every request we make slows
    us down because the TCP/IP protocol assumes that each request''s available bandwidth
    starts at near zero. So, not only do we have the communication''s lag time to
    start pulling assets from the server, it also takes a ramp up time before that
    asset is transmitted at full possible speed. 4G isn''t going, to save us from
    these facts. Sure, their transfer rates are great once they get going but the
    lag time it takes to actually begin the process of transfer is what kills us.
    We also have to consider how often users find themselves with few or no bars of
    reception. This is especially true in buildings. So, here are some tips for optimizing
    your mobile site:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 从性能的角度来看，绝对没有比 HTTP 请求更糟糕的事情了。这就是为什么 CSS 精灵是个好主意。我们发出的每一个请求都会减慢我们的速度，因为 TCP/IP
    协议假定每个请求的可用带宽从几乎零开始。因此，我们不仅需要通信的延迟时间来开始从服务器拉取资产，而且还需要一段时间才能将该资产以最大可能的速度传输。4G 也无法拯救我们脱离这些事实。当然，它们一旦开始传输，传输速率是很快的，但是实际开始传输的延迟时间才是我们的致命问题。我们还必须考虑到用户在多久或没有接收到信号的情况下发现自己。这在建筑物中尤其如此。因此，以下是一些优化移动站点的技巧：
- en: '**Reduce HTTP requests by combining as many assets as possible.** When the
    **SPDY protocol** ([http://www.chromium.org/spdy/spdy-whitepaper/](http://www.chromium.org/spdy/spdy-whitepaper/))
    finally gains traction, it will solve our problems, but, for now and the foreseeable
    future, this is what slows us down the most. This is also why I will not be advising
    the user on tools like **Require.js** ([http://requirejs.org/](http://requirejs.org/))
    to dynamically load in whatever is necessary for that page in chunks. Don''t be
    lazy. Know what your page needs and combine as much as possible.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**通过尽可能合并尽可能多的资产来减少 HTTP 请求。** 当 **SPDY 协议** ([http://www.chromium.org/spdy/spdy-whitepaper/](http://www.chromium.org/spdy/spdy-whitepaper/))
    最终获得进展时，它将解决我们的问题，但是，目前和可预见的未来，这是最让我们变慢的原因。这也是为什么我不会建议用户使用像 **Require.js** ([http://requirejs.org/](http://requirejs.org/))
    这样的工具来动态加载页面中所需的内容。不要偷懒。了解你的页面需要什么，并尽可能合并。'
- en: '**Turn on gzip compression on your server.** There''s a pretty good chance
    that any given server has gzip compression enabled but you should check. This
    will shrink your text-based assets (HTML, CSS, JS) by up to 70 percent for transmission.
    It actually makes more of a difference than minifying your code. For more on this,
    check out [https://developers.google.com/speed/articles/gzip](https://developers.google.com/speed/articles/gzip).'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在服务器上启用 gzip 压缩。** 任何给定服务器都很有可能启用了 gzip 压缩，但是你应该检查一下。这将使你的基于文本的资产（HTML、CSS、JS）在传输时缩小多达
    70%。这实际上比缩小代码更有影响。想要了解更多，请查看[https://developers.google.com/speed/articles/gzip](https://developers.google.com/speed/articles/gzip)。'
- en: '**Minify.** Minifying is the process by which a perfectly human-readable piece
    of code is stripped of all the useful whitespace, formatting, and comments. All
    that is pushed to the browser is the code. Some go so far as to actually change
    the variable and function names into one or two letter substitutions. This is
    really only a good idea for longstanding, highly-stable code. Libraries, such
    as jQuery, that have a tendency to be large in the first place will definitely
    benefit. However, for your own code, it''s a good idea to leave it human-readable
    so you can debug things if you have to. Just try to keep your HTML pages under
    25 KB (uncompressed) and your JS and CSS files under 1 MB (also uncompressed).
    A study conducted by Yahoo shows that across all platforms, this seems to be the
    lowest common denominator that devices will allow to be cached between visits
    ([http://www.yuiblog.com/blog/2010/07/12/mobile-browser-cache-limits-revisited/](http://www.yuiblog.com/blog/2010/07/12/mobile-browser-cache-limits-revisited/)).'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缩小文件。** 缩小是这样一个过程，一个完全可读的代码被剥夺了所有有用的空格、格式和注释。推送到浏览器的只是代码。有些人甚至会将变量和函数名称改为一个或两个字母的替换。这对于长期稳定的代码确实是一个好主意。具有倾向于在一开始就比较大的库，如jQuery，肯定会受益。然而，对于你自己的代码，最好保持其可读性，这样如果必要的话，你就可以进行调试。就尽量让你的HTML页面保持在25
    KB（未压缩）以下，你的JS和CSS文件在1 MB（同样未压缩）以下。雅虎进行的一项研究表明，在所有平台上，这似乎是设备在访问之间允许被缓存的最低公共分母（[http://www.yuiblog.com/blog/2010/07/12/mobile-browser-cache-limits-revisited/](http://www.yuiblog.com/blog/2010/07/12/mobile-browser-cache-limits-revisited/)）。'
- en: '**Caching and Microcaching**. If you''re on Apache like most of the rest of
    the web ([http://news.netcraft.com/archives/2012/01/03/january-2012-web-server-survey.html](http://news.netcraft.com/archives/2012/01/03/january-2012-web-server-survey.html)),
    you can easily setup caching using an `htaccess` file. If you specify a caching
    time of one month for a type of asset, then browsers will attempt to hold those
    assets in cache for one month without even checking to see if there is anything
    new on the server. Be careful here. You don''t want to set long cache times for
    anything you might want to be able to change quickly. However, things like JavaScript
    libraries and images that don''t change can certainly be cached without any ill
    effects.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缓存和微缓存**。如果你使用的是大多数其他网站上的Apache（[http://news.netcraft.com/archives/2012/01/03/january-2012-web-server-survey.html](http://news.netcraft.com/archives/2012/01/03/january-2012-web-server-survey.html)），你可以很容易地使用`htaccess`文件设置缓存。如果你为某种类型的资源指定了一个月的缓存时间，那么浏览器将尝试在一个月内将这些资源保存在缓存中，甚至都不会检查服务器上是否有新的内容。在这里要小心。你不希望对任何可能需要迅速更改的东西设置长时间的缓存时间。然而，那些不会改变的JavaScript库和图像等内容肯定可以被缓存而不会产生任何不良影响。'
- en: 'In order to protect yourself from traffic flooding, you can use the `htaccess`
    caching rules to make pages last for something as small as a minute using code
    such as the following:'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了保护自己免受流量洪泛的影响，你可以使用`htaccess`缓存规则，使页面保持时间尽可能短，例如一分钟，使用以下代码：
- en: '[PRE26]'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: You can learn more on caching with htaccess at [http://www.askapache.com/htaccess/speed-up-sites-with-htaccess-caching.html](http://www.askapache.com/htaccess/speed-up-sites-with-htaccess-caching.html).
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以在[http://www.askapache.com/htaccess/speed-up-sites-with-htaccess-caching.html](http://www.askapache.com/htaccess/speed-up-sites-with-htaccess-caching.html)上了解更多关于htaccess缓存的内容。
- en: '**Do NOT use images if it can be done in CSS3.** The CSS3 standard started
    back in 1999\. The W3C started working on its first draft for the CSS4 recommendation
    back in 2009\. It''s time to move the web forward and leave legacy browsers to
    the ash heap of history. If someone is using a browser that doesn''t support CSS
    gradients, let them default back to the solid background color they so richly
    deserve. If their browser doesn''t support rounded corners in CSS, then they''ll
    just have to make do with square corners.'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**不要使用图片，如果可以用CSS3实现**。CSS3标准始于1999年。W3C在2009年开始起草CSS4推荐的第一稿。现在是让网络向前发展，让旧版本的浏览器归于历史的时候了。如果有人使用不支持CSS渐变的浏览器，让他们退回到他们丰富应得的纯色背景。如果他们的浏览器不支持CSS中的圆角，那么他们只能用方角了。'
- en: If a potential client wants you to go beyond the web standards to support ancient
    technologies or insists on pixel-perfect designs, fire the client or charge them
    enough extra to make it worth your time. Pixel-perfect designs are hard enough
    on desktops. Mobile is the Wild, Wild West where everybody is implementing their
    solutions just differently enough that you'll never achieve pixel-perfect solutions.
    ([http://dowebsitesneedtolookexactlythesameineverybrowser.com/](http://dowebsitesneedtolookexactlythesameineverybrowser.com/))
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果潜在客户希望您超越网络标准来支持古老的技术，或者坚持像素完美的设计，那么辞退客户，或者收取足够多的额外费用以使其值得您的时间。像素完美的设计在桌面上已经很困难了。移动设备是一个无序之地，每个人都在实现自己的解决方案，只是稍有不同，以至于您永远不可能实现像素完美的解决方案。
    ([http://dowebsitesneedtolookexactlythesameineverybrowser.com/](http://dowebsitesneedtolookexactlythesameineverybrowser.com/))
- en: Use CSS3 in lieu of images when possible to save on weight and HTTP requests.
    Most modern smart phones support it now (iOS, Android, BlackBerry 6+, Windows
    Phone 8+). By 2013 and 2014, virtually all early smart phones will be replaced.
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在可能的情况下，使用 CSS3 代替图像以节省重量和 HTTP 请求。现在大多数现代智能手机都支持它（iOS、Android、BlackBerry 6+、Windows
    Phone 8+）。到 2013 年和 2014 年，几乎所有早期的智能手机都将被替换。
- en: The final product
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 最终产品
- en: We now have all the requirements, knowledge, and assets to make the first page.
    We'll place this code as the first page by naming it `index.php`. All images are
    provided in the source folders for the example.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经具备了制作第一页所需的所有要求、知识和资产。我们将把这段代码作为第一页，并将其命名为 `index.php`。所有示例的图像都提供在源文件夹中。
- en: 'Following is the final code for `index.php`:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 `index.php` 的最终代码：
- en: '[PRE27]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: The custom CSS
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自定义 CSS
- en: This code from `/css/custom.css` houses everything we've done to customize our
    look and feel. It includes the definitions for the custom icons, page curls, and
    custom fonts. Any images referenced were provided by the client and are provided
    in the final source.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码位于 `/css/custom.css` 中，包含了我们所做的所有自定义外观。其中包括自定义图标、页面翻页效果和自定义字体的定义。任何引用的图像都是客户提供的，并且在最终源文件中提供。
- en: 'Pay particular attention to the comments here as I have spelled out each section''s
    purpose and how it plays into a *responsive web design*:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 特别注意这里的评论，因为我已经详细说明了每个部分的目的以及它如何融入*响应式网页设计*：
- en: '[PRE28]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: The resulting first page
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一页的结果
- en: 'Let''s have a look at the final product of our work. On the left-side we have
    the rendered page in portrait view, and on the right we have the landscape view:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看我们工作的最终产品。在左侧，我们有纵向视图中的呈现页面，右侧是横向视图：
- en: '![The resulting first page](img/0069_02_01.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![第一页的结果](img/0069_02_01.jpg)'
- en: It is important to test your designs in both orientations. It can be rather
    embarrassing when someone comes along later and breaks your work by doing nothing
    more than turning their phone.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在两个方向上测试设计非常重要。当有人稍后过来，只是简单地转动手机就破坏了您的工作，这可能会让人感到相当尴尬。
- en: '![The resulting first page](img/0069_02_03.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![第一页的结果](img/0069_02_03.jpg)'
- en: Here is how it looks on the iPad. There is some matter of debate in the industry
    as to whether or not the iPad counts as mobile since it has enough resolution
    and a large enough screen to view normal desktop sites, especially if viewed in
    landscape mode. People who advocate the desktop view are forgetting a very important
    fact. The iPad and all the other tablets, such as Kindle Fire, Nook Color, and
    Google Nexus devices, are still touch interfaces. While full sites are still perfectly
    readable, interaction points may still be tiny targets. If it's a touch interface,
    your customer will be better served by jQuery Mobile.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在 iPad 上的效果。行业内存在一些关于 iPad 是否算作移动设备的辩论，因为它具有足够的分辨率和足够大的屏幕来查看正常的桌面站点，特别是在横向模式下查看。主张桌面视图的人忽略了一个非常重要的事实。iPad
    和所有其他平板电脑，如 Kindle Fire、Nook Color 和 Google Nexus 设备，仍然是触摸界面。虽然全站点仍然可以完美阅读，但交互点可能仍然是小目标。如果是触摸界面，您的客户将更好地通过
    jQuery Mobile 服务。
- en: Getting the user to our mobile site
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引导用户访问我们的移动站点
- en: 'Now that we''ve got this great start to a mobile site, how does the user get
    there? `yourdomain.mobi`? `m.yourdomain.com`? The truth is, users don''t go to
    mobile sites. They typically do one of two things: Google the site, or enter in
    the primary domain into the address bar, the same behavior they use on desktop
    sites. So, it falls on us to properly detect a mobile user and give them the appropriate
    interface.'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经有了一个很好的移动站点，用户如何到达那里呢？`yourdomain.mobi`？`m.yourdomain.com`？事实上，用户不会直接访问移动站点。他们通常会执行以下两种操作之一：在
    Google 中搜索该站点，或者在地址栏中输入主域名，这与他们在桌面站点上的行为相同。因此，我们有责任正确检测移动用户并为他们提供适当的界面。
- en: 'There is much debate in the industry as to how this should be done. Most experts
    seem to agree that you do not want to get into the business of detecting specific
    platforms, a practice known as user agent sniffing. At first, it doesn''t seem
    such a bad idea. After all, there''s really only the four major platforms: iOS,
    Android, Windows Phone, and BlackBerry. Even still, this approach can quickly
    become a nightmare as new platforms are developed in the future or come into dominance.
    Here''s the real question, why would we care what platform they''re on? What we
    really care about is device capability.'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 行业内对此如何完成存在很多争议。大多数专家似乎都同意，你不希望涉足检测特定平台的业务，这被称为用户代理嗅探。起初，这似乎不是一个坏主意。毕竟，实际上只有四个主要平台：iOS、Android、Windows
    Phone 和 BlackBerry。即使如此，随着未来新平台的开发或主导地位的出现，这种方法很快就会变成一场噩梦。这里真正的问题是，我们为什么要关心他们使用的平台？我们真正关心的是设备的功能。
- en: Detecting and redirecting using JavaScript
  id: totrans-157
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 JavaScript 进行检测和重定向
- en: Naturally, this is not going to hit everyone in the mobile market. Even in the
    United States, the smart phone penetration rate is only 50 percent. ([http://blog.nielsen.com/nielsenwire/online_mobile/smartphones-account-for-half-of-all-mobile-phones-dominate-new-phone-purchases-in-the-us/](http://blog.nielsen.com/nielsenwire/online_mobile/smartphones-account-for-half-of-all-mobile-phones-dominate-new-phone-purchases-in-the-us/))
    But does it matter? .
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 自然地，这不会涵盖移动市场的所有人。即使在美国，智能手机的普及率也仅为 50%。([http://blog.nielsen.com/nielsenwire/online_mobile/smartphones-account-for-half-of-all-mobile-phones-dominate-new-phone-purchases-in-the-us/](http://blog.nielsen.com/nielsenwire/online_mobile/smartphones-account-for-half-of-all-mobile-phones-dominate-new-phone-purchases-in-the-us/))
    但这有关系吗？ 。
- en: 'If this approach only reaches 50 percent of the market at best, is it truly
    an appropriate solution? Yes, but how can this be? The following two reasons explain
    it best:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这种方法最多只能覆盖市场的 50%，那么它真的是一个合适的解决方案吗？是的，但是怎么可能呢？以下两个原因最能解释这个问题：
- en: People who do not have a smart phone don't usually have a data plan. Surfing
    the web becomes financially prohibitive. Most people without smart phones and
    data plans won't be reaching you.
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有智能手机的人通常没有数据计划。在网上冲浪变得经济上不可行。大多数没有智能手机和数据计划的人不会接触到你。
- en: People who have old smart phones like BlackBerry 5 or earlier may have a data
    plan. However, those devices have browsers that are barely worth the name and
    their users know it. They *might* hit your site but it's not likely, and their
    existence is dropping quickly.
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拥有旧款智能手机（如 BlackBerry 5 或更早版本）的人可能有数据计划。然而，这些设备的浏览器几乎不值得一提，他们的用户也知道这一点。他们*可能*会访问你的网站，但可能性不大，并且它们的存在正在迅速减少。
- en: For the most part, anyone who likely would hit your site with a smart phone
    will respond perfectly. The exceptions are not worth mentioning.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，有可能会使用智能手机访问你的站点的人会有很好的响应。例外情况不值一提。
- en: If the device supports media queries and has a touch interface then it's well
    suited for our mobile site. The only exception to this rule is, of course, Internet
    Explorer on Windows Phone 7\. So, we'll make a slight concession for them. First,
    we'll need to download the cookie plugin for jQuery. If you haven't yet, get it
    from [https://github.com/carhartl/jquery-cookie](https://github.com/carhartl/jquery-cookie)
    and put it in the `/js/` folder. This code will be placed on any folder that you
    want to do mobile redirection.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 如果设备支持媒体查询并具有触摸界面，那么它非常适合我们的移动站点。当然，唯一的例外是 Windows Phone 7 上的 Internet Explorer。因此，我们将对他们稍作让步。首先，我们需要为
    jQuery 下载 cookie 插件。如果你还没有，请从 [https://github.com/carhartl/jquery-cookie](https://github.com/carhartl/jquery-cookie)
    获取，并将其放入 `/js/` 文件夹中。此代码将放置在你想要进行移动重定向的任何文件夹中。
- en: '[PRE29]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'We can also customize the mobile destination on a per-page basis. Pairing this
    technique with the dynamic full-site link we created earlier will result in a
    seamless transition between the mobile and desktop view whenever a user wants
    to switch. We just have one problem now. We need to set a cookie so that, if they
    tap the full-site link, they won''t be pushed right back into mobile. Let''s put
    this into `/js/global.js`:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以根据每个页面的需求定制移动端目标页面。将这种技术与之前创建的动态完整站点链接配对，可以在用户想要切换时实现无缝的移动端和桌面端视图转换。我们现在只有一个问题。我们需要设置一个
    Cookie，这样，如果他们点击完整站点链接，就不会被立即重定向回移动端。让我们把这个放到 `/js/global.js` 中：
- en: '[PRE30]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: It's a good idea to set an expiration on any cookie that you write for mobile
    devices. On desktops PCs, people tend to close their browsers. On mobile, people
    click the home button which may or may not actually close that browser's session.
    On Android, the browser never gets shutdown unless the user does so explicitly.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 对于为移动设备编写的任何 cookie，设置过期时间是个好主意。在台式电脑上，人们倾向于关闭他们的浏览器。在移动设备上，人们点击主页按钮，这可能实际上并未关闭该浏览器的会话。在
    Android 上，除非用户明确关闭，否则浏览器永远不会被关闭。
- en: Detecting on the server
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在服务器端进行检测
- en: If you simply must get all mobile people to your mobile site, you'll need to
    do detection on the server using a tool like **WURFL** ([http://wurfl.sourceforge.net/](http://wurfl.sourceforge.net/)).
    It is the ultimate community-maintained database of wireless device descriptors.
    Essentially, this is user agent sniffing but the database is well maintained by
    the community. The tool will be able to tell you all kinds of useful things about
    each device that visits you. The link [http://www.scientiamobile.com/wurflCapability/tree](http://www.scientiamobile.com/wurflCapability/tree)
    will give you a complete listing of WURFL's capabilities. We'll get into the nuts
    and bolts of this in a later chapter.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你必须将所有移动用户都引导到你的移动站点，你需要在服务器端进行检测，使用类似 **WURFL**（[http://wurfl.sourceforge.net/](http://wurfl.sourceforge.net/)）这样的工具。这是一个由社区维护的无线设备描述符的终极数据库。本质上，这是用户代理嗅探，但是数据库由社区良好维护。该工具将能够告诉你访问你的每个设备的各种有用信息。链接
    [http://www.scientiamobile.com/wurflCapability/tree](http://www.scientiamobile.com/wurflCapability/tree)
    将为您提供 WURFL 的所有功能的完整列表。我们将在后面的章节中深入了解这个工具的具体原理。
- en: Summary
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: We covered a lot of ground in this chapter and we now have all the skills and
    tools to take what would have been a pretty generic-looking mobile site and turned
    it into something unique. We know how to make it look unique, how to host it,
    how to get the user there, and how to give them a more functional parachute if
    they're unhappy. Already, we're several steps ahead of the average developer who's
    just getting started and this is only the second chapter. In the next chapter,
    we'll start looking into more in-depth topics that bigger businesses usually care
    about, such as validation, analytics, and many more.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们涵盖了很多内容，现在我们具备了所有技能和工具，可以将原本看起来相当普通的移动站点变成独特的东西。我们知道如何使其看起来独特，如何托管它，如何引导用户到达那里，以及如何给他们一个更加功能强大的“降落伞”，以防他们不满意。已经，我们领先于那些刚刚入门的普通开发者数步，而这仅仅是第二章。在下一章中，我们将开始探讨更深入的话题，这些话题通常是大型企业关心的，比如验证、分析等等。
