- en: Chapter 11. Creating an Interactive Data Grid
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 11 章。创建交互式数据网格
- en: While you might not consider a data grid to be all that exciting, they do offer
    a way for site visitors to interact with large amounts of data and understand
    it in a way they might not be able to otherwise. One of the most exciting developments
    in HTML5 is the introduction of a grid element, which allows us to easily create
    an interactive data grid using only markup. However, it's one of the new elements
    for which browser support is lagging — there is little, if any, browser support
    for the time being, and it could be years before we're able to make use of this
    new element. Luckily, we can use jQuery to fill in the gap until the new grid
    element is ready for primetime.
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 虽然你可能认为数据网格并不那么令人兴奋，但它们确实为站点访问者提供了一种与大量数据交互并理解数据的方式，这是他们可能无法以其他方式做到的。HTML5 中最令人兴奋的发展之一是引入了网格元素，它允许我们仅使用标记就能轻松创建交互式数据网格。然而，它是新元素之一，浏览器支持落后——目前几乎没有或几乎没有任何浏览器支持，并且可能需要数年时间，我们才能利用这个新元素。幸运的是，我们可以使用
    jQuery 来填补这一空白，直到新的网格元素准备就绪。
- en: 'In this chapter, we''ll learn the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习以下主题：
- en: Turning an ordinary table into an interactive data grid using the DataTables
    jQuery plugin from Allan Jardine
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Allan Jardine 的 DataTables jQuery 插件将普通表格转换为交互式数据网格
- en: Customizing the appearance and behavior of the data grid with help from the
    jQuery UI Themeroller
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 jQuery UI Themeroller 对数据网格的外观和行为进行定制
- en: Basic data grid
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本数据网格
- en: We'll get started by using the DataTables plugin to create a basic data grid,
    keeping the default settings and the styles provided with the data grid. Data
    grids are most helpful when we have large amounts of data to present, and site
    visitors might want to filter and sort the data in different ways to find the
    information they are looking for. Think, for example, of a list of flights — one
    site visitor might be interested in sorting the flights by departure time to find
    the earliest possible departure, while another site visitor might want to sort
    the flights by duration to find the shortest possible flight.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 DataTables 插件创建一个基本的数据网格，保留默认设置和数据网格提供的样式。当我们有大量数据要呈现时，数据网格是最有帮助的，并且站点访问者可能希望以不同的方式过滤和排序数据，以找到他们正在寻找的信息。例如，想象一下航班列表——一个站点访问者可能有兴趣按出发时间对航班进行排序，以找到可能的最早出发时间，而另一个站点访问者可能想按持续时间对航班进行排序，以找到可能的最短航班。
- en: Presenting the data in an interactive data grid allows each site visitor to
    quickly and easily find just the information they're looking for in a sea of information.
    For site visitors with JavaScript disabled, they'll simply see a large table of
    data and will never know that they're missing out on the interactive features.
    All of the information will still be available to them.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 将数据呈现为交互式数据网格允许每个站点访问者在海量信息中快速轻松地找到他们正在寻找的信息。对于禁用 JavaScript 的站点访问者，他们将只看到一张大型数据表，永远不会知道他们错过了交互式功能。所有信息仍然对他们可用。
- en: Time for action — creating a basic data grid
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间——创建基本数据网格
- en: 'Let''s take a look at how to turn a basic HTML table into an interactive data
    grid:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何将基本的 HTML 表格转换为交互式数据网格：
- en: 'We''ll get started as usual with our basic HTML file and associated files and
    folders, just like we did in [Chapter 1](ch01.html "Chapter 1. Designer, Meet
    jQuery"), *Designer, Meet jQuery*. We''ll fill the`<body>` of our HTML document
    with the HTML markup for a large table of data. The DataTables plugin does require
    that we are careful and correct with our table markup. We''ll need to be sure
    to use a`<thead>` element for the table''s header, and a`<tbody>` element for
    the table''s body. A`<tfoot>` element for the table footer is optional. Here''s
    an abbreviated sample of the HTML markup for a table of the all-time best-selling
    books:'
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将像在[第 1 章](ch01.html "第 1 章。设计师，见 jQuery") *设计师，见 jQuery* 中一样，使用我们的基本 HTML
    文件和相关文件和文件夹开始。我们将使用 HTML 标记来填充我们的 HTML 文档的`<body>`部分，创建一个大型数据表的 HTML 标记。DataTables
    插件要求我们对表格标记进行仔细且正确的处理。我们需要确保为表格的标题使用一个`<thead>`元素，并为表格的主体使用一个`<tbody>`元素。可选的为表格页脚使用一个`<tfoot>`元素。以下是一个所有时间最畅销书籍的表格的
    HTML 标记的简化样本：
- en: '[PRE0]'
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: I've added a total of 106 books to the table, each marked up just as these are.
    Note that we've added an `id` of `book-grid` to the table element, and have used
    the `<th>` elements for the heading of each column, and enclosed those in a `<thead>`
    element. We've also used a `<tbody>` element to wrap all the rows in the table's
    body.
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我已经向表格中添加了共计106本书，每本都像这样标记。请注意，我们在表格元素上添加了一个`id`为`book-grid`的id，并使用了`<th>`元素来作为每列的标题，并将其封装在`<thead>`元素中。我们还使用了一个`<tbody>`元素来包装表格主体中的所有行。
- en: Next, we'll download the DataTables plugin. Head over to [http://datatables.net](http://datatables.net)
    where you'll find the plugin's downloads, documentation, and examples. Click on
    the **Download** link in the header to download a ZIP file.![Time for action —
    creating a basic data grid](img/6709OS_11_img1.jpg)
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将下载DataTables插件。前往[http://datatables.net](http://datatables.net)，在那里你会找到插件的下载、文档和示例。点击页眉中的**下载**链接下载ZIP文件。![执行操作的时间——创建基本数据表](img/6709OS_11_img1.jpg)
- en: Unzip the folder and take a look inside.![Time for action — creating a basic
    data grid](img/6709OS_11_img2.jpg)
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解压文件夹并查看其内部。![执行操作的时间——创建基本数据表](img/6709OS_11_img2.jpg)
- en: There's a folder of `examples` with several different examples of the DataTables
    plugin in action. A folder of `extras` provides extra functionality for advanced
    data tables we won't be using any of those here. There's a `media` folder that
    contains `images, css, js`, and `unit_testing` resources. And finally a `Readme.txt`,
    file contains information on the plugin's creator and where to find the documentation,
    and so on.
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有一个`examples`文件夹，其中包含几个不同的DataTables插件示例。一个`extras`文件夹提供了高级数据表的额外功能，我们这里不会使用任何其中的东西。有一个`media`文件夹，其中包含`images、css、js`和`unit_testing`资源。最后还有一个`Readme.txt`文件，其中包含有关插件创建者和文档位置等信息。
- en: Finally, you'll find the licenses for the plugin, both BSD and GPL. You can
    read these license files or visit Wikipedia to get the details on these licenses,
    but they're both free software licenses allowing you to make use of the plugin
    code for free.
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最后，你会找到插件的许可证，包括BSD和GPL。你可以阅读这些许可证文件或访问维基百科获取这些许可证的详细信息，但它们都是允许你免费使用插件代码的自由软件许可证。
- en: We're going to set up a basic example, so we'll just need a couple of things
    for our own project. First, copy the contents of the `images` directory to your
    own `images` directory. Open the `css` folder and copy `demo_table.css` to your
    own `styles` directory. Be careful to select the proper CSS file `demo_table.css`
    because there are a few CSS files in there. Finally, in the `js` folder, find
    the minified version of the plugin, `jquery.dataTables.min.js`, and copy that
    to your own `scripts` directory.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将建立一个基本示例，所以我们只需要为我们自己的项目准备一些东西。首先，将`images`目录的内容复制到你自己的`images`目录中。打开`css`文件夹，将`demo_table.css`复制到你自己的`styles`目录中。要小心选择正确的CSS文件`demo_table.css`，因为那里有几个CSS文件。最后，在`js`文件夹中，找到插件的压缩版本`jquery.dataTables.min.js`，并将其复制到你自己的`scripts`目录中。
- en: 'Next, we''ll get all the necessary files attached to our HTML page that contains
    our table. In the`<head>` section of the document, attach the CSS file, before
    your own `styles.css` file:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将获取所有必要的文件附加到包含我们表格的HTML页面中。在文档的`<head>`部分，在你自己的`styles.css`文件之前附加CSS文件：
- en: '[PRE1]'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Next, at the bottom of the HTML document, attach the DataTables plugin in between
    jQuery and your own `scripts.js` file:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在HTML文档的底部，在jQuery和你自己的`scripts.js`文件之间附加DataTables插件：
- en: '[PRE2]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Next, open your `scripts.js` file and inside a document ready statement, select
    the table and call the `dataTable()` method as follows:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，打开你的`scripts.js`文件，并在文档准备就绪的语句中，选择表格并调用`dataTable()`方法，如下所示：
- en: '[PRE3]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Now, if you refresh the page in the browser, you'll see that your table has
    been transformed into a data grid. You can select how many items to view at one
    time, type into the search box to find specific table entries, and use the pagination
    controls at the bottom right to page through the data table's rows.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，如果你在浏览器中刷新页面，你会看到你的表已经被转换成了数据表格。你可以选择一次查看多少项，输入到搜索框中以查找特定的表项，并使用右下角的分页控件浏览数据表的行。
- en: '![Time for action — creating a basic data grid](img/6709OS_11_img3.jpg)'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![执行操作的时间——创建基本数据表](img/6709OS_11_img3.jpg)'
- en: What just happened?
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚才发生了什么？
- en: We set up a basic HTML table and turned it into an interactive data grid by
    attaching some CSS and the DataTables plugin. We selected the table and called
    the `dataTable()` method to activate the DataTables plugin.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们设置了一个基本的 HTML 表格，并通过附加一些 CSS 和 DataTables 插件将其转换为交互式数据表。我们选择了表格并调用了 `dataTable()`
    方法以激活 DataTables 插件。
- en: That was pretty easy, wasn't it? Of course, chances are this lavender design
    doesn't fit the design of your site, so let's take a look at how we can customize
    the appearance of the data table.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这很容易，不是吗？当然，这种淡紫色设计可能不符合您网站的设计，所以让我们看看如何自定义数据表的外观。
- en: Customizing the data grid
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义数据表
- en: The DataTables plugin is the first plugin we've used that has support for the
    jQuery UI Themeroller. jQuery UI is a collection of widgets and interactions that
    make building complex applications easier and faster. Learning jQuery UI itself
    is beyond the scope of this book, but we'll take a look at how to use the jQuery
    UI Themeroller to create a custom theme for our data table. This same theme would
    apply to any jQuery UI widgets used on our page, as well as any jQuery plugins
    being used that include support for the jQuery UI Themeroller.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: DataTables 插件是我们使用的第一个具有 jQuery UI Themeroller 支持的插件。jQuery UI 是一组小部件和交互，使构建复杂应用程序变得更容易更快。学习
    jQuery UI 本身超出了本书的范围，但我们将看看如何使用 jQuery UI Themeroller 为我们的数据表创建自定义主题。这个主题将适用于我们页面上使用的任何
    jQuery UI 小部件，以及任何包含 jQuery UI Themeroller 支持的 jQuery 插件。
- en: Time for action — customizing the data grid
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 — 自定义数据表
- en: 'We''ll pick up right where we left off with our data table. If you''d like
    to save your basic example, just save a copy of the file. Then follow these steps
    to customize the appearance of your data grid:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从上次的数据表结束的地方继续。如果您想保存您的基本示例，只需保存文件的副本。然后按照以下步骤自定义数据表的外观：
- en: Head over to [http://jqueryui.com/themeroller](http://jqueryui.com/themeroller)
    where we'll take a look at the Themeroller. In the left column, you'll find the
    controls for selecting a predefined theme or creating a custom theme, and the
    wide right column contains samples of several different types of widgets.![Time
    for action — customizing the data grid](img/6709OS_11_img4.jpg)
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到 [http://jqueryui.com/themeroller](http://jqueryui.com/themeroller) ，我们将看看
    Themeroller。在左列中，您会找到选择预定义主题或创建自定义主题的控件，而宽广的右列包含几种不同类型小部件的示例。![行动时间 — 自定义数据表](img/6709OS_11_img4.jpg)
- en: Click on the **Gallery** tab in the left column, and you'll see that you have
    dozens of choices of pre-built Themeroller themes to choose from. As you click
    on different samples, you'll see the sample widgets in the right column update
    to reflect that style. I usually like to get started by selecting a prebuilt theme
    that's reasonably close to the color scheme or appearance that I want, then I
    flip to the **Roll Your Own** tab to tweak it to suit my needs. For this example,
    I'm going to start with the **Cupertino** style.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左列中单击 **Gallery 选项卡** ，您会看到有数十种预构建的 Themeroller 主题可供选择。当您单击不同示例时，您将看到右列中的示例小部件更新以反映该样式。我通常喜欢从选择一个与我想要的颜色方案或外观相当接近的预构建主题开始，然后切换到
    **Roll Your Own 选项卡** 进行微调以满足我的需求。对于这个示例，我将从 **Cupertino** 风格开始。
- en: After flipping to the **Roll Your Own tab**, you'll see that there are settings
    for fonts, colors, corners, headers, and so on. Make whatever adjustments you'd
    like to get the theme looking just the way you'd like. Feel free to play and experiment.
    If you go too far and get to something you don't like, it's easy to flip back
    to the **Gallery** tab and select the prebuilt theme again, stripped of any of
    your customizations, then start again.
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在切换到 **Roll Your Own 选项卡** 后，您会看到有关字体、颜色、角落、标题等的设置。进行任何您想要的调整，使主题看起来符合您的喜好。请随意玩耍和尝试。如果您走得太远，得到了您不喜欢的东西，那么轻松地切换回
    **Gallery 选项卡** 并重新选择预构建主题，剥离掉您的任何自定义内容，然后重新开始。
- en: Keep in mind that any of your customizations will be lost if you re-select a
    prebuilt theme. Once you get something you like, be sure to move on to step 3
    to save it.
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请记住，如果重新选择预构建主题，您的任何自定义内容都将丢失。一旦您得到喜欢的东西，请务必继续进行第 3 步以保存它。
- en: Once you've got your theme set up just the way you'd like, click on the **Download
    Theme** button.![Time for action — customizing the data grid](img/6709OS_11_img5.jpg)
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您将主题设置得符合您的喜好，只需单击 **下载主题** 按钮。![行动时间 — 自定义数据表](img/6709OS_11_img5.jpg)
- en: You'll find yourself on the **Build Your Download** page, which might seem a
    little confusing. Note that jQuery UI is so large and has so many different features
    on offer, the developers realize that forcing everyone to download the entire
    thing would be overkill. If you only wanted to use one widget, there'd be no need
    for downloading all the other widgets and effects. This page lets you pick and
    choose different components of jQuery UI so that you don't have to download more
    than you need.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将会发现自己在 **构建您的下载** 页面上，可能会有点困惑。请注意，jQuery UI 是如此庞大，提供了如此多的不同功能，开发人员意识到强迫每个人下载整个内容是不合理的。如果您只想使用一个小部件，那么就没必要下载所有其他小部件和效果。这个页面让您选择不同的
    jQuery UI 组件，这样您就不必下载您不需要的内容。
- en: Since we're only here for a theme, we can go ahead and click on the **Deselect
    all components** link near the top of the page.
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于我们只需要一个主题，所以我们可以放心地点击页面顶部的 **取消选择所有组件** 链接。
- en: '![Time for action — customizing the data grid](img/6709OS_11_img6.jpg)'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 — 自定义数据网格](img/6709OS_11_img6.jpg)'
- en: Then, we'll leave the **Theme** and **Version** settings at their defaults and
    click on the **Download** button to download a ZIP file.
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后，我们将离开 **主题** 和 **版本** 设置为默认值，并点击 **下载** 按钮下载一个 ZIP 文件。
- en: Unzip the file and take a look inside. You'll see that even though we got the
    simplest download we could, we still have quite a few files.![Time for action
    — customizing the data grid](img/6709OS_11_img7.jpg)
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解压文件并查看其中内容。您会看到即使我们得到了最简单的下载，我们仍然有相当多的文件。![行动时间 — 自定义数据网格](img/6709OS_11_img7.jpg)
- en: We've got a `css` folder that contains our theme folder with a CSS file and
    **images** inside it. We've also got a `development-bundle` folder, an HTML file,
    and a `js` folder that contains jQuery and a jQuery UI file.
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们有一个包含我们的主题文件夹、一个 CSS 文件和 **图像** 的 `css` 文件夹。我们还有一个 `development-bundle` 文件夹、一个
    HTML 文件和一个包含 jQuery 和 jQuery UI 文件的 `js` 文件夹。
- en: All we need out of all of this is our theme. Copy your theme folder to the styles
    directory of your own project. My theme folder is named `cupertino` since that's
    the theme I chose. If you selected a different theme, your theme folder will be
    called something else. It will be easy to find, though, as it will be the only
    folder inside the `css` folder.
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们所需的全部内容就是我们的主题。将您的主题文件夹复制到您自己项目的 styles 目录中。我的主题文件夹被命名为 `cupertino`，因为那是我选择的主题。如果您选择了不同的主题，您的主题文件夹将被命名为其他内容。不过很容易找到，因为它将是
    `css` 文件夹内唯一的文件夹。
- en: Next, we'll attach our theme CSS file to our HTML file. Inside the`<head>` section,
    attach your theme CSS file before the `demo_table.css` file we attached in the
    previous example.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将把我们的主题 CSS 文件附加到我们的 HTML 文件中。在`<head>`部分内，将您的主题 CSS 文件附加到我们在上一个示例中附加的
    `demo_table.css` 文件之前。
- en: '[PRE4]'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Now, unfortunately, our theme CSS file doesn't quite have all the styles we'll
    need for a nicely styled data grid. After all, the jQuery UI developers have no
    way of knowing all the different types of widgets and plugins people will want
    to use, so there's no possible way they could cover every single case. Luckily,
    DataTables plugin author Allan Jardine has already done some nice work for us
    in this area and has provided a CSS file with the styles we'll need to get our
    themed data grid looking its best.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不幸的是，我们的主题 CSS 文件并没有包含我们所需的所有样式来美化数据网格。毕竟，jQuery UI 的开发人员无法知道人们将要使用的所有不同类型的小部件和插件，所以他们不可能覆盖每种情况。幸运的是，DataTables
    插件作者 Allan Jardine 在这方面已经为我们做了一些很好的工作，并提供了一个包含我们所需样式的 CSS 文件，以使我们的主题数据网格看起来更好。
- en: You can read up on styling the DataTables plugin in the documentation Allan
    Jardine has made available at [http://datatables.net/styling/](http://datatables.net/styling/).
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以在 Allan Jardine 在 [http://datatables.net/styling/](http://datatables.net/styling/)
    上提供的文档中了解如何为 DataTables 插件设置样式。
- en: 'Back inside the DataTables plugin files, look inside the `css` folder inside
    the `media` folder to find the `demo_table_jui.css` file. Copy that to your own
    styles folder and update your `<link>` tag to link to this version of the `demo_table.css`
    instead as follows:'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 回到 DataTables 插件文件内部，打开 `media` 文件夹内的 `css` 文件夹，找到 `demo_table_jui.css` 文件。将其复制到您自己的
    styles 文件夹中，并更新您的 `<link>` 标签，以链接到这个版本的 `demo_table.css`，如下所示：
- en: '[PRE5]'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now we just have to make a small update to our JavaScript code. We have to
    tell the `dataTable()` method that we want to use jQuery UI. Head back into your
    `scripts.js` file and we''ll add a pair of curly brackets and pass a key/value
    pair to enable jQuery UI styling for our data table:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们只需对JavaScript代码进行小小的更新。我们必须告诉`dataTable()`方法，我们要使用jQuery UI。返回到您的`scripts.js`文件，我们将添加一对花括号，并传递一个键/值对以启用我们的数据表的jQuery
    UI样式：
- en: '[PRE6]'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'If you refresh the page in the browser now, you''ll see that the data grid
    is now using a style that''s consistent with the widgets we saw on the jQuery
    UI Themeroller page:'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您现在在浏览器中刷新页面，您会看到数据网格现在使用了与我们在jQuery UI主题页面上看到的部件一致的样式：
- en: '![Time for action — customizing the data grid](img/6709OS_11_img10.jpg)'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间-自定义数据网格](img/6709OS_11_img10.jpg)'
- en: However, you'll notice that the color scheme for the table rows is still lavender.
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 但您会注意到，表格行的颜色方案仍然是薰衣草色。
- en: 'Let''s make some adjustments to the color scheme. Open `demo_table_jui.css`.
    There are just a couple of lines to update. First, we''ll find line 281 where
    the colors for the zebra-striping for the table are defined and update those to
    the colors we''d like to use as follows:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们对颜色方案进行一些调整。打开`demo_table_jui.css`。只需更新几行。首先，我们将找到第281行，那里定义了表格斑马条纹的颜色，并将其更新为我们想要使用的颜色，如下所示：
- en: '[PRE7]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: I'm going with a pale blue for odd rows and white for even rows to match the
    Cupertino style I selected earlier. Feel free to choose colors that match your
    own chosen theme.
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我选择淡蓝色作为奇数行的颜色，白色作为偶数行的颜色，与我之前选择的Cupertino样式相匹配。随意选择与您的选择的主题相匹配的颜色。
- en: 'Next, we''ll change the color scheme for the currently sorted row. You''ll
    find the CSS for the sorted odd rows at line 380\. I''m going to change mine to
    a medium blue as follows:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将更改当前排序行的颜色方案。你会在第380行找到已排序的奇数行的CSS。我将把我的改成中蓝色，如下所示：
- en: '[PRE8]'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: And finally, we can find the CSS for the sorted even row at line 392\. I'm going
    to change this to a light blue.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们可以找到CSS中已排序的偶数行在第392行。我要把它改成浅蓝色。
- en: '[PRE9]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: You can select your own colors that coordinate with your own chosen theme.
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以选择与自己选择的主题协调的颜色。
- en: Now, if you refresh the page in the browser, you'll see that the zebra-striping
    pattern of the table fits with our Themeroller theme.
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，如果您在浏览器中刷新页面，您会看到表格的斑马条纹图案与我们的主题相匹配。
- en: '![Time for action — customizing the data grid](img/6709OS_11_img8.jpg)'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间-自定义数据网格](img/6709OS_11_img8.jpg)'
- en: 'Next up, we''ll take a look at making a couple of other customizations to the
    data grid. First, let''s change those simple next and previous pagination buttons
    into numbers. We''ll pass another key/value pair to the `dataTable` method to
    replace the buttons with pagination numbers as follows:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将看看对数据网格进行其他一些自定义。首先，让我们将这些简单的下一页和上一页的分页按钮改成数字。我们将传递另一个键/值对给`dataTable`方法，以将按钮替换为分页数字，如下所示：
- en: '[PRE10]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Note
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Remember to separate each key/value pair with a comma, but not to place a comma
    after the last key/value pair.
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 记住每个键/值对之间要用逗号分隔，但不要在最后一个键/值对之后加逗号。
- en: 'If you refresh the page in the browser, you''ll see that the simple buttons
    have been replaced by pagination numbers as shown in the following screenshot:'
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您在浏览器中刷新页面，您会看到简单的按钮已被替换为分页数字，如下图所示：
- en: '![Time for action — customizing the data grid](img/6709OS_11_img9.jpg)'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间-自定义数据网格](img/6709OS_11_img9.jpg)'
- en: 'We might decide that for this particular data table, the search function doesn''t
    make sense. The DataTables plugin offers a way for us to disable individual features.
    To disable the search box filtering, we''ll pass another key/value pair as follows:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可能会决定，对于这个特定的数据表，搜索功能并不合适。DataTables插件提供了一种方法来禁用单个功能。要禁用搜索框过滤，我们将传递另一个键/值对，如下所示：
- en: '[PRE11]'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Refresh the page in the browser and you'll see that the search box is gone.
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在浏览器中刷新页面，您会看到搜索框消失了。
- en: '![Time for action — customizing the data grid](img/6709OS_11_img11.jpg)'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间-自定义数据网格](img/6709OS_11_img11.jpg)'
- en: You've probably noticed that by default, the DataTables plugin is sorting our
    table by the first column in ascending order, from A to Z. That might be fine
    in some cases, but in this case since we're listing the all-time best-selling
    books, we probably want to sort the table to show the books with the highest sales
    first. We'll pass in a new key/value pair to specify which column should be used
    for the default sort and which direction the sort should go.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可能已经注意到，默认情况下，DataTables 插件按升序将我们的表按第一列排序，从 A 到 Z。在某些情况下，这可能是可以接受的，但在这种情况下，由于我们正在列出有史以来最畅销的书籍，我们可能想要对表进行排序，以便首先显示销售量最高的书籍。我们将传入一个新的键值对来指定默认排序应使用哪一列以及排序应该采用的方向。
- en: '[PRE12]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The key we're using is called `'aaSorting'`, and the value is the column number
    and sort direction inside two sets of square brackets. Don't forget that JavaScript
    starts counting at 0, not 1\. So the fifth column in our table is actually column
    4\. Then, we want the highest number at the top, so we pass `'desc'` for descending
    order.
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们正在使用的键称为`'aaSorting'`，值是列号和排序方向，位于两组方括号内。不要忘记 JavaScript 是从 0 开始计数的，而不是从 1
    开始计数。因此，我们表格中的第五列实际上是第 4 列。然后，我们希望将最高的数字放在顶部，所以我们传递 `'desc'` 表示降序排序。
- en: Refresh the page in the browser and you'll see that the books are now in order
    from highest sales to lowest sales. Note also that this default sort order doesn't
    affect your site visitor's ability to sort the table by any of the other columns
    in any order they'd like. The site visitor can still interact with your table.
    We're just re-defining the default view in a way that makes the most sense for
    the data we're presenting.
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在浏览器中刷新页面，你会发现图书现在按销售量从高到低的顺序排列。同时，请注意，这种默认排序方式不影响您网站访问者根据任何其他列以任何顺序对表进行排序的能力。访客仍然可以与您的表进行交互。我们只是以最合理的方式重新定义了默认视图，以便呈现我们正在呈现的数据。
- en: What just happened?
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚刚发生了什么？
- en: We took our basic data grid and took it a step further by customizing the appearance
    and behavior of the plugin. We learned how to use the jQuery UI Themeroller to
    create a custom theme for our data grid. Then we learned how to replace the simple
    pagination buttons with page numbers, disable searching the table, and how to
    set a default sort for the data grid.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将我们的基本数据网格提升了一步，通过定制插件的外观和行为。我们学会了如何使用 jQuery UI Themeroller 创建我们数据网格的自定义主题。然后，我们学会了如何用页码替换简单的分页按钮，禁用搜索表，以及如何为数据网格设置默认排序。
- en: Summary
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned how to turn an ordinary HTML table into an interactive
    data grid. Our site visitors can now take advantage of sorting different columns
    of the table to view the data in different ways. Site visitors with JavaScript
    disabled simply see an ordinary HTML table that contains all of the data. Data
    grids aren't terribly exciting, but they can make dealing with large amounts of
    data worlds easier for your site visitors. Next up, we'll learn how to make forms
    both prettier and easier to use.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学会了如何将普通的 HTML 表格转变为交互式数据网格。我们的网站访问者现在可以利用对表的不同列进行排序的功能以不同的方式查看数据。禁用
    JavaScript 的网站访问者只会看到包含所有数据的普通 HTML 表格。数据网格并不是非常令人兴奋，但它们可以使您的网站访问者更轻松地处理大量数据。接下来，我们将学习如何使表单既更漂亮又更易于使用。
