["```js\n$ tree -L 1\n.\n├── LICENSE\n├── README.md\n├── index.html\n├── node_modules\n├── package.json\n├── server.js\n├── src\n└── webpack.config.js\n\n2 directories, 6 files\n\n```", "```js\n// index.html\n<html>\n  <head>\n    <title>Forms in React</title>\n    <link rel=\"stylesheet\"  href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css\" />\n  </head>\n  <body>\n    <div id='root' class=\"container\">\n    </div>\n  </body>\n  <script src=\"img/bundle.js\"></script>\n</html>\n```", "```js\n// src/index.js\n\nimport ReactDOM from 'react-dom';\nimport BookStore from './BookStore';\n\nReactDOM.render(<BookStore />, document.getElementById('root'));\n```", "```js\n// src/index.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nvar InputExample = React.createClass({\n  render() {\n    return (\n      <input type=\"text\" value=\"Shawn\" />\n    );\n  }\n});\nReactDOM.render(<InputExample />,  \n                 document.getElementById('root'));\n```", "```js\n// Old way of defining function\nrender: function() {\n  return (\n    <input type=\"text\" value=\"Shwn\" />\n  );\n}\n\n// New way of defining function\nrender() {\n    return (\n      <input type=\"text\" value=\"Shawn\" />\n    );\n  }\n```", "```js\n$ npm start\n\n> reactjs-by-example-react-forms@0.0.1 start /Users/prathamesh/Projects/sources/reactjs-by-example/chapter4\n> node server.js\n\nListening at localhost:9000\nHash: 8ec0d12965567260413b\nVersion: webpack 1.9.11\nTime: 1639ms\n\n```", "```js\n  // package.json\n  ……\n  \"scripts\": {\n    \"start\": \"node server.js\",\n    \"lint\": \"eslint src\"\n  },\n……\n```", "```js\n// src/index.js\n\nvar InputExample = React.createClass({\n  getInitialState() {\n    return (\n      { name: '-'}\n    );\n  },\n\n  handleChange(event) {\n    this.setState({ name: event.target.value });\n  },\n\n  render() {\n    return (\n      <input type=\"text\"\n             value={this.state.name}\n             onChange={this.handleChange} />\n    );\n  }\n});\n```", "```js\nhandleChange: function(event) {\n  this.setState({name: event.target.value.toUpperCase()});\n}\n```", "```js\nrender() {\n    return (\n      <input type=\"text\" />\n    );\n  }\n```", "```js\nrender() {\n    return (\n      <input type=\"text\" defaultValue=\"Shawn\"/>\n    );\n  }\n```", "```js\n// src/BookStore.js\n\nimport React from 'react';\n\nvar BookStore = React.createClass({\n  render() {\n    switch (step) {\n      case 1:\n        return <BookList />;\n      case 2:\n        return <ShippingDetails />;\n      case 3:\n        return <DeliveryDetails />;\n    }\n  }\n});\n```", "```js\n// src/BookStore.js\n\nvar BookList = React.createClass({\n  render() {\n    return(\n      <h1> \n        Choose from wide variety of books available in our store.\n      </h1>\n    );\n  }\n});\n\nvar ShippingDetails = React.createClass({\n  render() {\n    return(\n      <h1>Enter your shipping information.</h1>\n    );\n  }\n});\n\nvar DeliveryDetails = React.createClass({\n  render() {\n    return (\n      <h1>Choose your delivery options here.</h1>\n    );\n  }\n});\n```", "```js\n// src/BookStore.js\n\n……\n\nvar BookStore = React.createClass({\n  getInitialState() {\n    return ({ currentStep: 1 });\n  },\n\n  render() {\n    switch (this.state.currentStep) {\n      case 1:\n        return <BookList />;\n      case 2:\n        return <ShippingDetails />;\n      case 3:\n        return <DeliveryDetails />;\n    }\n  }\n……\n\n});\n```", "```js\n// src/BookStore.js\n\nvar BookList = React.createClass({\n  getInitialState() {\n    return (\n      { books: [\n        { name: 'Zero to One', author: 'Peter Thiel' },\n        { name: 'Monk who sold his Ferrari', author: 'Robin Sharma' },\n        { name: 'Wings of Fire', author: 'A.P.J. Abdul Kalam' }\n      ] }\n    )\n  },\n\n  _renderBook(book) {\n    return(\n      <div className=\"checkbox\">\n        <label>\n          <input type=\"checkbox\" /> {book.name} -- {book.author}\n        </label>\n      </div>\n    );\n  },\n\n  render() {\n    return(\n      <div>\n        <h3> Choose from wide variety of books available in our store </h3>\n        <form>\n          {this.state.books.map((book) => { \n             return this._renderBook(book); })\n          }\n\n          <input type=\"submit\" className=\"btn btn-success\" />\n        </form>\n      </div>\n    );\n  }\n});\n```", "```js\nthis.state.books.map((book) => { return (this._renderBook(book)) })\n```", "```js\n// src/BookStore.js\n……\n// Updating BookStore component\n\nrender() {\n    return(\n      <div>\n        <h3> Choose from wide variety of books available in our store </h3>\n        <form onSubmit={this.handleSubmit}>\n          {this.state.books.map((book) => { return (this._renderBook(book)) })}\n\n          <input type=\"submit\" className=\"btn btn-success\" />\n        </form>\n      </div>\n    );\n  },\n\nhandleSubmit(event) {\n    console.log(event);\n    event.preventDefault();\n    console.log(\"Form submitted\");\n   }\n   ……\n```", "```js\n// src/BookStore.js\n……\n\n// Updating BookStore component\n\ngetInitialState() {\n    return (\n      { books: [\n        { id: 1, name: 'Zero to One', author: 'Peter Thiel' },\n        { id: 2, name: 'Monk who sold his Fearrary', author: 'Robin Sharma' },\n        { id: 3, name: 'Wings of Fire', author: 'A.P.J. Abdul Kalam' }\n      ],\n        selectedBooks: []\n      }\n    );\n  },\n\n_renderBook(book) {\n    return (\n      <div className=\"checkbox\" key={book.id}>\n        <label>\n          <input type=\"checkbox\" value={book.name}\n                 onChange={this.handleSelectedBooks}/>\n          {book.name} -- {book.author}\n        </label>\n      </div>\n    );\n  },\n\n  handleSelectedBooks(event) {\n    var selectedBooks = this.state.selectedBooks;\n    var index = selectedBooks.indexOf(event.target.value);\n\n    if (event.target.checked) {\n      if (index === -1)\n        selectedBooks.push(event.target.value);\n    } else {\n      selectedBooks.splice(index, 1);\n    }\n\n    this.setState({selectedBooks: selectedBooks });\n}\n```", "```js\n// src/BookStore.js\n\n……\n// Updating BookStore component\n\n  updateFormData(formData) {\n    console.log(formData);\n  },\n\n  render() {\n    switch (this.state.currentStep) {\n      case 1:\n        return <BookList \n                 updateFormData={this.updateFormData} />;\n      case 2:\n        return <ShippingDetails  \n                 updateFormData={this.updateFormData} />;\n      case 3:\n        return <DeliveryDetails \n                 updateFormData={this.updateFormData} />;\n    }\n  }\n……\n\n});\n```", "```js\n// src/BookStore.js\n// Updating BookList component\n\n……\n  handleSubmit(event) {\n    event.preventDefault();\n\n    this.props.updateFormData({ selectedBooks: \n                                this.state.selectedBooks });\n  }\n  ……\n}); \n```", "```js\n// src/BookStore.js\n// Updating BookStore component\n\nvar BookStore = React.createClass({\n  getInitialState() {\n    return ({ currentStep: 1, formValues: {} });\n  },\n\n  updateFormData(formData) {\n    var formValues = Object.assign({}, this.state.formValues, formData);\n    this.setState({formValues: formValues});  \n  },\n\n  render() {\n    switch (this.state.currentStep) {\n      case 1:\n        return <BookList updateFormData={this.updateFormData} />;\n      case 2:\n        return <ShippingDetails updateFormData={this.updateFormData} />;\n      case 3:\n        return <DeliveryDetails updateFormData={this.updateFormData} />;\n    }\n  }\n});\n```", "```js\n { selectedBooks: ['Zero to One', 'Monk who sold his Ferrary'] }\n```", "```js\nvar formValues = Object.assign({}, this.state.formValues, formData);\n```", "```js\n// src/BookStore.js\n// Updating BookStore component\n\nvar BookStore = React.createClass({\n  updateFormData(formData) {\n    var formValues = Object.assign({}, this.state.formValues, formData);\n    var nextStep = this.state.currentStep + 1;\n    this.setState({currentStep: nextStep, formValues: formValues});\n    console.log(formData);\n  },\n\n  render() {\n    switch (this.state.currentStep) {\n      case 1:\n        return <BookList updateFormData={this.updateFormData} />;\n      case 2:\n        return <ShippingDetails updateFormData={this.updateFormData} />;\n      case 3:\n        return <DeliveryDetails updateFormData={this.updateFormData} />;\n    }\n  }\n});\n```", "```js\n// src/BookStore.js\n// Updating BookList component\n\nvar BookList = React.createClass({\n  getInitialState() {\n    return (\n      { books: [\n        { id: 1, name: 'Zero to One', author: 'Peter Thiel' },\n        { id: 2, name: 'Monk who sold his Fearrary', author: 'Robin Sharma' },\n        { id: 3, name: 'Wings of Fire', author: 'A.P.J. Abdul Kalam' }\n      ],\n        selectedBooks: [],\n        error: false\n      }\n    );\n  },\n\n  _renderError() {\n    if (this.state.error) {\n      return (\n        <div className=\"alert alert-danger\">\n          {this.state.error}\n        </div>\n      );\n    }\n  },\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if(this.state.selectedBooks.length === 0) {\n      this.setState({error: 'Please choose at least one book to continue'});\n    } else {\n      this.setState({error: false});\n      this.props.updateFormData({ selectedBooks: this.state.selectedBooks });\n    }\n  },\n\n  render() {\n    var errorMessage = this._renderError();\n\n    return (\n      <div>\n        <h3> Choose from wide variety of books available in our store </h3>\n        {errorMessage}\n        <form onSubmit={this.handleSubmit}>\n          { this.state.books.map((book) => { return (this._renderBook(book)); })}\n          <input type=\"submit\" className=\"btn btn-success\" />\n        </form>\n      </div>\n    );\n  }\n});\n```", "```js\n// src/BookStore.js\n// Adding ShippingDetails component\n\nvar ShippingDetails = React.createClass({\n  getInitialState() {\n    return (\n      { fullName: '', contactNumber: '', shippingAddress: '', error: false }\n    );\n  },\n\n  _renderError() {\n    if (this.state.error) {\n      return (\n        <div className=\"alert alert-danger\">\n          {this.state.error}\n        </div>\n      );\n    }\n  },\n\n  _validateInput() {\n    if (this.state.fullName === '') {\n      this.setState({error: \"Please enter full name\"});\n    } else if (this.state.contactNumber === '') {\n      this.setState({error: \"Please enter contact number\"});\n    } else if (this.state.shippingAddress === '') {\n      this.setState({error: \"Please enter shipping address\"});\n    } else {\n      this.setState({error: false});\n      return true;\n    }\n\n  },\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    var formData = { fullName: this.state.fullName,\n                     contactNumber: this.state.contactNumber,\n                     shippingAddress: this.state.shippingAddress };\n\n    if (this._validateInput()) {\n      this.props.updateFormData(formData);\n    }\n  },\n\n  handleChange(event, attribute) {\n    var newState = this.state;\n    newState[attribute] = event.target.value;\n    this.setState(newState);\n    console.log(this.state);\n  },\n\n  render() {\n    var errorMessage = this._renderError();\n\n    return (\n      <div>\n        <h1>Enter your shipping information.</h1>\n        {errorMessage}\n        <div style={{width: 200}}>\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"form-group\">\n              <input className=\"form-control\"\n                     type=\"text\"\n                     placeholder=\"Full Name\"\n                     value={this.state.fullName}\n                     onChange={(event) => this.handleChange(event, 'fullName')} />\n            </div>\n\n            <div className=\"form-group\">\n              <input className=\"form-control\"\n                     type=\"text\"\n                     placeholder=\"Contact number\"\n                     value={this.state.contactNumber}\n                     onChange={(event) => this.handleChange(event, 'contactNumber')}/>\n            </div>\n\n            <div className=\"form-group\">\n              <input className=\"form-control\"\n                     type=\"text\"\n                     placeholder=\"Shipping Address\"\n                     value={this.state.shippingAddress}\n                     onChange={(event) => this.handleChange(event, 'shippingAddress')} />\n            </div>\n\n            <div className=\"form-group\">\n              <button type=\"submit\"\n                      ref=\"submit\"\n                      className=\"btn btn-success\">\n                Submit\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n});\n```", "```js\n{ selectedBooks: [\"Zero to One\", \"Wings of Fire\"],\n  fullName: \"John Smith\",\n  contactNumber: \"1234567890\",\n  shippingAddress: \"10th Cross, NY\" }\n```", "```js\n  value={this.state.shippingAddress}\n```", "```js\n// src/BookStore.js\n// Adding DeliveryDetails component\n\nvar DeliveryDetails = React.createClass({\n  getInitialState() {\n    return (\n      { deliveryOption: 'Primary' }\n    );\n  },\n\n  handleChange(event) {\n    this.setState({ deliveryOption: event.target.value});\n  },\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.updateFormData(this.state);\n  },\n\n  render() {\n    return (\n      <div>\n        <h1>Choose your delivery options here.</h1>\n        <div style={{width:200}}>\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"radio\">\n              <label>\n                <input type=\"radio\"\n                       checked={this.state.deliveryOption === \"Primary\"}\n                       value=\"Primary\"\n                       onChange={this.handleChange} />\n                Primary -- Next day delivery\n              </label>\n            </div>\n            <div className=\"radio\">\n              <label>\n                <input type=\"radio\"\n                       checked={this.state.deliveryOption === \"Normal\"}\n                       value=\"Normal\"\n                       onChange={this.handleChange} />\n                Normal -- 3-4 days\n              </label>\n            </div>\n\n            <button className=\"btn btn-success\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n});\n```", "```js\n// src/BookStore.js\n// Updating BookStore component\n\nvar BookStore = React.createClass({\n render() {\n    switch (this.state.currentStep) {\n      case 1:\n        return <BookList updateFormData={this.updateFormData} />;\n      case 2:\n        return <ShippingDetails updateFormData={this.updateFormData} />;\n      case 3:\n        return <DeliveryDetails updateFormData={this.updateFormData} />;\n      case 4:\n        return <Confirmation data={this.state.formValues}/>;}/>;}/>;\n      default:\n        return <BookList updateFormData={this.updateFormData} />;\n    }\n  }\n});\n\n// Adding Conformation step\n\nvar Confirmation = React.createClass({\n  render() {\n    return (\n      <div>\n        <h1>Are you sure you want to submit the data?</h1>\n      </div>\n    );\n  }\n});\n```", "```js\nvar Confirmation = React.createClass({\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.updateFormData(this.props.data);\n  },\n\n  render() {\n    return (\n      <div>\n        <h1>Are you sure you want to submit the data?</h1>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <strong>Full Name</strong> : { this.props.data.fullName }\n          </div><br/>\n          <div>\n            <strong>Contact Number</strong> : { this.props.data.contactNumber }\n          </div><br/>\n          <div>\n            <strong>Shipping Address</strong> : { this.props.data.shippingAddress }\n          </div><br/>\n          <div>\n            <strong>Selected books</strong> : { this.props.data.selectedBooks.join(\", \") }\n          </div><br/>\n          <button className=\"btn btn-success\">\n            Place order\n          </button>\n        </form>\n      </div>\n    );\n  }\n});\n```", "```js\n// src/BookStore.js\n// Adding Success step\n\nvar Success = React.createClass({\n  render() {\n    var numberOfDays = \"1 to 2 \";\n\n    if (this.props.data.deliveryOption === 'Normal') {\n      numberOfDays = \"3 to 4 \";\n    }\n    return (\n      <div>\n        <h2>\n          Thank you for shopping with us {this.props.data.fullName}.\n        </h2>\n        <h4>\n          You will soon get {this.props.data.selectedBooks.join(\", \")} at {this.props.data.shippingAddress} in approrximately {numberOfDays} days.\n        </h4>\n      </div>\n    );\n  }\n});\n```", "```js\n// Updating render method of BookStore component\n\n  render() {\n    switch (this.state.currentStep) {\n      case 1:\n        return <BookList updateFormData={this.updateFormData} />;\n      case 2:\n        return <ShippingDetails updateFormData={this.updateFormData} />;\n      case 3:\n        return <DeliveryDetails updateFormData={this.updateFormData} />;\n      case 4:\n        return <Confirmation data={this.state.formValues} updateFormData={this.updateFormData}/>;\n      case 5:\n        return <Success data={this.state.formValues}/>;\n      default:\n        return <BookList updateFormData={this.updateFormData} />;\n    }\n  }\n```"]