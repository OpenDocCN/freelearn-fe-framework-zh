["```js\nimport React, { useState } from 'react';\n\nimport { makeStyles } from '@material-ui/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles(theme => ({\n  container: { margin: theme.spacing.unit * 2 }\n}));\n\nexport default function ControllingInputWithState() {\n  const classes = useStyles();\n  const [first, setFirst] = useState('');\n  const [second, setSecond] = useState('');\n  const [third, setThird] = useState('');\n\n  return (\n    <Grid container spacing={4} className={classes.container}>\n      <Grid item>\n        <TextField\n          id=\"first\"\n          label=\"First\"\n          value={first}\n          onChange={e => setFirst(e.target.value)}\n        />\n      </Grid>\n      <Grid item>\n        <TextField\n          id=\"second\"\n          label=\"Second\"\n          value={second}\n          onChange={e => setSecond(e.target.value)}\n        />\n      </Grid>\n      <Grid item>\n        <TextField\n          id=\"third\"\n          label=\"Third\"\n          value={third}\n          onChange={e => setThird(e.target.value)}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n```", "```js\nconst [inputs, setInputs] = useState([\n  { id: 'first', label: 'First', value: '' },\n  { id: 'second', label: 'Second', value: '' },\n  { id: 'third', label: 'Third', value: '' }\n]);\n```", "```js\n<Grid container spacing={4} className={classes.container}>\n  {inputs.map(input => (\n    <Grid item key={input.id}>\n      <TextField\n        id={input.id}\n        label={input.label}\n        value={input.value}\n        onChange={onChange}\n      />\n    </Grid>\n  ))}\n</Grid>\n```", "```js\nconst onChange = ({ target: { id, value } }) => {\n  const newInputs = [...inputs];\n  const index = inputs.findIndex(input => input.id === id);\n\n  newInputs[index] = { ...inputs[index], value };\n\n  setInputs(newInputs);\n};\n```", "```js\nimport React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n  container: { margin: theme.spacing(2) }\n});\n\nconst PlaceholderAndHelperText = withStyles(styles)(({ classes }) => (\n  <Grid container spacing={4} className={classes.container}>\n    <Grid item>\n      <TextField label=\"The Value\" />\n    </Grid>\n    <Grid item>\n      <TextField placeholder=\"Example Value\" />\n    </Grid>\n    <Grid item>\n      <TextField helperText=\"Brief explanation of the value\" />\n    </Grid>\n    <Grid item>\n      <TextField\n        label=\"The Value\"\n        placeholder=\"Example Value\"\n        helperText=\"Brief explanation of the value\"\n      />\n    </Grid>\n  </Grid>\n));\n\nexport default PlaceholderAndHelperText;\n```", "```js\n<TextField label=\"The Value\" />\n```", "```js\n<TextField placeholder=\"Example Value\" />\n```", "```js\nimport React, { useState } from 'react';\n\nimport { makeStyles } from '@material-ui/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n  container: { margin: theme.spacing(2) }\n}));\n\nexport default function ValidationAndErrorDisplay() {\n  const classes = useStyles();\n  const [inputs, setInputs] = useState([\n    {\n      id: 'phone',\n      label: 'Phone',\n      placeholder: '999-999-9999',\n      value: '',\n      error: false,\n      helperText: 'Any valid phone number will do',\n      getHelperText: error =>\n        error\n          ? 'Woops. Not a valid phone number'\n          : 'Any valid phone number will do',\n      isValid: value =>\n        /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/.test(\n          value\n        )\n    },\n    {\n      id: 'email',\n      label: 'Email',\n      placeholder: 'john@acme.com',\n      value: '',\n      error: false,\n      helperText: 'Any valid email address will do',\n      getHelperText: error =>\n        error\n          ? 'Woops. Not a valid email address'\n          : 'Any valid email address will do',\n      isValid: value => /\\S+@\\S+\\.\\S+/.test(value)\n    }\n  ]);\n\n  const onChange = ({ target: { id, value } }) => {\n    const newInputs = [...inputs];\n    const index = inputs.findIndex(input => input.id === id);\n    const input = inputs[index];\n    const isValid = input.isValid(value);\n\n    newInputs[index] = {\n      ...input,\n      value: value,\n      error: !isValid,\n      helperText: input.getHelperText(!isValid)\n    };\n\n    setInputs(newInputs);\n  };\n\n  return (\n    <Grid container spacing={4} className={classes.container}>\n      {inputs.map(input => (\n        <Grid item key={input.id}>\n          <TextField\n            id={input.id}\n            label={input.label}\n            placeholder={input.placeholder}\n            helperText={input.helperText}\n            value={input.value}\n            onChange={onChange}\n            error={input.error}\n          />\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n```", "```js\nconst [inputs, setInputs] = useState([\n  {\n    id: 'phone',\n    label: 'Phone',\n    placeholder: '999-999-9999',\n    value: '',\n    error: false,\n    helperText: 'Any valid phone number will do',\n    getHelperText: error =>\n      error\n        ? 'Woops. Not a valid phone number'\n        : 'Any valid phone number will do',\n    isValid: value =>\n      /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/.test(\n        value\n      )\n  },\n  {\n    id: 'email',\n    label: 'Email',\n    placeholder: 'john@acme.com',\n    value: '',\n    error: false,\n    helperText: 'Any valid email address will do',\n    getHelperText: error =>\n      error\n        ? 'Woops. Not a valid email address'\n        : 'Any valid email address will do',\n    isValid: value => /\\S+@\\S+\\.\\S+/.test(value)\n  }\n]);\n```", "```js\nconst onChange = ({ target: { id, value } }) => {\n  const newInputs = [...inputs];\n  const index = inputs.findIndex(input => input.id === id);\n  const input = inputs[index];\n  const isValid = input.isValid(value);\n\n  newInputs[index] = {\n    ...input,\n    value: value,\n    error: !isValid,\n    helperText: input.getHelperText(!isValid)\n  };\n\n  setInputs(newInputs);\n};\n```", "```js\nconst MyTextField = ({ isInvalid, ...props }) => {\n  const invalid = isInvalid(props.value);\n\n  return (\n    <TextField\n      {...props}\n      error={invalid}\n      helperText={invalid || props.helperText}\n    />\n  );\n};\n```", "```js\nconst [inputs, setInputs] = useState([\n  {\n    id: 'phone',\n    label: 'Phone',\n    placeholder: '999-999-9999',\n    value: '',\n    helperText: 'Any valid phone number will do',\n    isInvalid: value =>\n      value === '' ||\n      /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/.test(\n        value\n      )\n        ? false\n        : 'Woops. Not a valid phone number'\n  },\n  {\n    id: 'email',\n    label: 'Email',\n    placeholder: 'john@acme.com',\n    value: '',\n    helperText: 'Any valid email address will do',\n    isInvalid: value =>\n      value === '' || /\\S+@\\S+\\.\\S+/.test(value)\n        ? false\n        : 'Woops. Not a valid email address'\n  }\n]);\n```", "```js\nconst onChange = ({ target: { id, value } }) => {\n  const newInputs = [...inputs];\n  const index = inputs.findIndex(input => input.id === id);\n\n  newInputs[index] = {\n    ...inputs[index],\n    value: value\n  };\n\n  setInputs(newInputs);\n};\n```", "```js\nimport React, { useState } from 'react';\n\nimport TextField from '@material-ui/core/TextField';\n\nexport default function PasswordFields() {\n  const [password, setPassword] = useState('12345');\n\n  const onChange = e => {\n    setPassword(e.target.value);\n  };\n\n  return (\n    <TextField\n      type=\"password\"\n      label=\"Password\"\n      value={password}\n      onChange={onChange}\n    />\n  );\n}\n```", "```js\nimport React, { useState } from 'react';\n\nimport { makeStyles } from '@material-ui/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n  container: { margin: theme.spacing(2) }\n}));\n\nexport default function PasswordFields() {\n  const classes = useStyles();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  return (\n    <Grid container spacing={4} className={classes.container}>\n      <Grid item>\n        <TextField\n          id=\"username\"\n          label=\"Username\"\n          autoComplete=\"username\"\n          InputProps={{ name: 'username' }}\n          value={username}\n          onChange={e => setUsername(e.target.value)}\n        />\n      </Grid>\n      <Grid item>\n        <TextField\n          id=\"password\"\n          type=\"password\"\n          label=\"Password\"\n          autoComplete=\"current-password\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n```", "```js\nimport React, { useState } from 'react';\n\nimport TextField from '@material-ui/core/TextField';\n\nexport default function MultilineInput() {\n  const [multiline, setMultiline] = useState('');\n\n  return (\n    <TextField\n      multiline\n      value={multiline}\n      onChange={e => setMultiline(e.target.value)}\n    />\n  );\n}\n```", "```js\n<TextField\n  multiline\n  rows={5}\n  label=\"Address\"\n  value={multiline}\n  onChange={e => setMultiline(e.target.value)}\n/>\n```", "```js\nimport React, { useState } from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nfunction PasswordField() {\n  const [visible, setVisible] = useState(false);\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <TextField\n      type={visible ? 'text' : 'password'}\n      InputProps={{\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton onClick={toggleVisibility}>\n              {visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\n            </IconButton>\n          </InputAdornment>\n        )\n      }}\n    />\n  );\n}\n\nexport default function InputAdornments() {\n  const [password, setPassword] = useState('');\n\n  return (\n    <PasswordField\n      value={password}\n      onChange={e => setPassword(e.target.value)}\n    />\n  );\n}\n```", "```js\nfunction PasswordField() {\n  const [visible, setVisible] = useState(false);\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <TextField\n      type={visible ? 'text' : 'password'}\n      InputProps={{\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton onClick={toggleVisibility}>\n              {visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\n            </IconButton>\n          </InputAdornment>\n        )\n      }}\n    />\n  );\n}\n```", "```js\nconst ValidationField = props => {\n  const { isValid, ...rest } = props;\n  const empty = props.value === '';\n  const valid = isValid(props.value);\n  let startAdornment;\n\n  if (empty) {\n    startAdornment = null;\n  } else if (valid) {\n    startAdornment = (\n      <InputAdornment position=\"start\">\n        <CheckCircleIcon color=\"primary\" />\n      </InputAdornment>\n    );\n  } else {\n    startAdornment = (\n      <InputAdornment position=\"start\">\n        <ErrorIcon color=\"error\" />\n      </InputAdornment>\n    );\n  }\n\n  return (\n    <TextField\n      {...rest}\n      error={!empty && !valid}\n      InputProps={{ startAdornment }}\n    />\n  );\n};\n```", "```js\n<ValidationField\n  label=\"Email\"\n  value={this.state.email}\n  onChange={this.onEmailChange}\n  isValid={v => /\\S+@\\S+\\.\\S+/.test(v)}\n/>\n```", "```js\nimport React, { Fragment, useState } from 'react';\nimport MaskedInput from 'react-text-mask';\nimport emailMask from 'text-mask-addons/dist/emailMask';\n\nimport { makeStyles } from '@material-ui/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n  input: { margin: theme.spacing.unit * 3 }\n}));\n\nconst PhoneInput = ({ inputRef, ...props }) => (\n  <MaskedInput\n    {...props}\n    ref={ref => {\n      inputRef(ref ? ref.inputElement : null);\n    }}\n    mask={[\n      '(',\n      /[1-9]/,\n      /\\d/,\n      /\\d/,\n      ')',\n      ' ',\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      '-',\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      /\\d/\n    ]}\n    placeholderChar={'\\u2000'}\n  />\n);\n\nconst EmailInput = ({ inputRef, ...props }) => (\n  <MaskedInput\n    {...props}\n    ref={ref => {\n      inputRef(ref ? ref.inputElement : null);\n    }}\n    mask={emailMask}\n    placeholderChar={'\\u2000'}\n  />\n);\n\nexport default function InputMasking() {\n  const classes = useStyles();\n  const [phone, setPhone] = useState('');\n  const [email, setEmail] = useState('');\n\n  return (\n    <Fragment>\n      <TextField\n        label=\"Phone\"\n        className={classes.input}\n        value={phone}\n        onChange={e => setPhone(e.target.value)}\n        InputProps={{ inputComponent: PhoneInput }}\n      />\n      <TextField\n        label=\"Email\"\n        className={classes.input}\n        value={email}\n        onChange={e => setEmail(e.target.value)}\n        InputProps={{ inputComponent: EmailInput }}\n      />\n    </Fragment>\n  );\n}\n```", "```js\nconst PhoneInput = ({ inputRef, ...props }) => (\n  <MaskedInput\n    {...props}\n    ref={ref => {\n      inputRef(ref ? ref.inputElement : null);\n    }}\n    mask={[\n      '(',\n      /[1-9]/,\n      /\\d/,\n      /\\d/,\n      ')',\n      ' ',\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      '-',\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      /\\d/\n    ]}\n    placeholderChar={'\\u2000'}\n  />\n);\n```", "```js\nconst EmailInput = ({ inputRef, ...props }) => (\n  <MaskedInput\n    {...props}\n    ref={ref => {\n      inputRef(ref ? ref.inputElement : null);\n    }}\n    mask={emailMask}\n    placeholderChar={'\\u2000'}\n  />\n);\n```", "```js\n<TextField\n  label=\"Phone\"\n  className={classes.input}\n  value={phone}\n  onChange={e => setPhone(e.target.value)}\n  InputProps={{ inputComponent: PhoneInput }}\n/>\n<TextField\n  label=\"Email\"\n  className={classes.input}\n  value={email}\n  onChange={e => setEmail(e.target.value)}\n  InputProps={{ inputComponent: EmailInput }}\n/>\n```"]