["```js\n$ npm install vue-router@4\n```", "```js\nimport {createRouter,createWebHashHistory} from 'vue-router'       //1\nimport Landing from \"../views/Landing.vue\"                         //2\nconst routes = [\n    {path: \"/\",name: \"landing\",component: Landing},\n    {path: \"/project/:id\",name: \"project\",\n        component: () =>\n            import(\"../views/ToDoProject.vue\"),                    //3\n        props: true\n}],\nrouter = createRouter({                                            //4\n    history: createWebHashHistory(),                               //5\n    routes,\n    scrollBehavior(to, from, savedPosition){return{top:0}}\n})\nexport default router;\n```", "```js\nimport { createApp } from 'vue'\nimport router from “./router”\nimport App from './App.vue'\nimport Modals from \"./plugins/modals\"\nimport styles from \"./assets/styles.css\"\ncreateApp(App).use(router).use(Modals).mount('#app')\n```", "```js\n<script setup>\n    import Sidebar from './components/Sidebar/Sidebar.vue';\n</script>\n<template>\n<div class=\"app\">\n   <Sidebar></Sidebar>\n   <main>\n      <router-view></router-view>\n   </main>\n</div>\n</template>\n```", "```js\n<RouterLink :to=\"{name:'landing'}\" class=\"w3-padding\" active-class=\"w3-yellow\">Home</RouterLink>\n```", "```js\n<RouterLink :to=\"{name:'search',params:{text:'abc' }}\" >Search</RouterLink>\n```", "```js\n<div v-for=\"p in _projects\" :key=\"p.id\">\n    <RouterLink :to=\"{name:'project',params:{id:p.id}}\">\n        {{p.name}}\n    </RouterLink>\n</div>\n```", "```js\n$props=defineProps([\"id\"])\n```", "```js\nimport { watch } from \"vue\"\nwatch(()=>$props.id, loadProject)\n```", "```js\neventBus.emit(\"#UpdateProjects\")\n```", "```js\nonMounted(()=>{\n    eventBus.on(\"#UpdateProjects\", updateProjects)\n})\nonBeforeUnmount(()=>{\n    eventBus.off(\"#UpdateProjects\", updateProjects)\n})\n```", "```js\n{\npath: \"/directory\", name: \"directory\",\ncomponent: () => import(\"../views/Directory.vue\"),\nchildren:[\n{ path:\":country\", name: \"states\", props: true,\n  component: ()=>import(\"../views/State.vue\"),\n  children:[\n       { path:\":state\", name: \"cities\", props: true,\n         component: ()=>import(\"../views/City.vue\")\n       }  ]\n} ] }\n```", "```js\n<div v-for=\"c in countries\" :key=\"c.code\">\n<RouterLink\n      :to=\"{name:'states', params:{country:c.code}}\"\n      active-class=\"selected\">\n     {{c.name}}\n</RouterLink>\n</div>\n```", "```js\n<div>\n    <RouterView name=\"header\"></RouterView>\n    <RouterView name=\"sidebar\"></RouterView>\n    <RouterView></RouterView>\n</div>\n```", "```js\n{ path:\"/layout\", name: \"main\",\n  components:{\n      default: ()=>import('...'),\n      header: ()=>import('...'),\n      sidebar: ()=>import('...')\n}}\n```", "```js\nimport {useRoute, useRouter} from \"vue-router\"\nconst     $route=useRoute(),\n          $router=useRouter()\n```", "```js\n// Navigate to an URL\n$router.push(\"/my/route\")\n// Navigate to a URL, using an object\n$router.push({path: \"/my/route\"})\n// Navigate to a route, with parameters\n$router.push({\n   name:\"route-name\",\n   params:{key:value}\n})\n// Navigate to a route, with query strings\n$router.push({\n   name:\"route-name\",\n   query:{key:value}\n})\n```", "```js\n// Go back one entry\n$router.go(-1)\n// Go forward one entry\n$router.go(1)\n```", "```js\n$ npm install axios\n```", "```js\nimport axios from “axios”\n```", "```js\nimport axios from \"axios\"\nimport {ref} from \"vue\"\nconst _username=ref(\"\"), _password=ref(\"\")\nfunction doSignIn(){\naxios.post(\"https://my_server_API_URL\",\n    {username:_username.value,password:_password.value})\n  .then(response=>{\n     console.log(response.status)\n     console.log(response.data)\n  }).catch(err=>{...})\n}\n```", "```js\nimport {useRoute} from \"vue-router\"\nconst $route=useRoute()\nif($route.query.error){\n   // The authentication failed, take action\n}else{\n   // Authentication succeeded do something\n   sendToServer($route.query.code)\n}\n```", "```js\nimport{axios}from \"axios\"\nfunction sendToServer(code){\naxios\n  .post(\"our server URL\", {code})\n  .then(result=>{\n    // Set the token in our headers\n    axios.defaults.headers.common={\n     \"Authorization\":\"Bearer \" + result.data.identity_token\n    }\n  }).catch(()=>{\n   // Handle the error\n})}\n```", "```js\nconst _user_email=ref(\"\"),\n      _wait_seconds=ref(0),\n      _show_input_code=ref(false),\n      _otp_code=ref(\"\")\nfunction signInUser(){\n    axios.post(\"https://requestOTP_url\",\n                {email:_user_email.value})\n    .then(result=>{\n        _wait_seconds.value=result.data.wait_time;\n        _show_input_code.value=true;\n        startOTPtimer();\n    }).catch(err=>{...})\n}\nfunction startOTPtimer(){\n   let interval_id=setInterval(()=>{\n   if(_wait_seconds.value>0){_wait_seconds.value--;}\n   else{clearInterval(interval_id);}},1000)\n}\nfunction checkOTP(){\n   axios.post(\"https://validateOTP_URL\",{code:_otp_code.value})\n   .then(result=>{\n     if(result.status>200 && result.status<300){\n        // User validated, proceed to protected route\n     }else{\n        // Validation failed. Redirect to error route\n     }\n }).catch(err=>{...})\n}\n```", "```js\nethereum\n.request({ method: 'eth_requestAccounts' })\n.then(\n    result=>console.log(result[0]),\n    err=>console.log(err)\n)\n```"]