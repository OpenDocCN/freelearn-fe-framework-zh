["```js\nnpx nuxi@3.8.0 init portfolio\n```", "```js\nmkcert localhost\n```", "```js\n\"dev\": \"nuxt dev\",\n```", "```js\n\"dev\": \"NODE_TLS_REJECT_UNAUTHORIZED=0 nuxt dev --dotenv .env --https --ssl-cert localhost.pem --ssl-key localhost-key.pem\",\n```", "```js\nNUXT_STORYBLOK_ACCESS_TOKEN=replace_with_your_access_token\n```", "```js\nnpm i @storyblok/nuxt@5.7.4\n```", "```js\n// https://nuxt.com/docs/api/configuration/nuxt-configexport default defineNuxtConfig({\n  devtools: { enabled: true },\n  modules: [\n    ['@storyblok/nuxt', {\n      accessToken: process.env.NUXT_STORYBLOK_ACCESS_TOKEN,\n      apiOptions: {\n          region: \"eu\"\n        }\n      }\n    ]\n  ],\n})\n```", "```js\nnpm i @nuxt/ui@2.9.0\n```", "```js\n// https://nuxt.com/docs/api/configuration/nuxt-configexport default defineNuxtConfig({\n  devtools: { enabled: true },\n  modules: [\n    ['@storyblok/nuxt', {\n      accessToken: process.env.NUXT_STORYBLOK_ACCESS_TOKEN,\n      apiOptions: {\n        region: \"eu\"\n      }\n    }\n    ],\n    '@nuxt/ui'],\n})\n```", "```js\n<template>    <div v-editable=\"blok\">\n      <StoryblokComponent v-for=\"blok in blok.body\" :key=\"blok._uid\" :blok=\"blok\" />\n    </div>\n  </template>\n  <script setup lang=\"ts\">\n  defineProps({ blok: Object })\n  </script>\n```", "```js\n<template>  <div v-editable=\"blok\" v-if=\"blok\">\n    {{ blok.headline }}\n  </div>\n</template>\n<script setup lang=\"ts\">\ndefineProps({ blok: Object });\n</script>\n```", "```js\n<script setup>const story = await useAsyncStoryblok('home')\n</script>\n<template>\n  <StoryblokComponent v-if=\"story\" :blok=\"story.content\" />\n</template>\n```", "```js\n<template>  <div class=\"flex flex-col min-h-screen\">\n    <Header />\n    <div class=\"flex-grow\">\n      <main class=\"container mx-auto\">\n        <slot />\n      </main>\n    </div>\n    <Footer />\n  </div>\n</template>\n```", "```js\n<script setup lang=\"ts\">const { slug } = useRoute().params as { slug: string[] };\nconst story = await useAsyncStoryblok(\n  slug && slug.length > 0 ? slug.join(\"/\") : \"home\", { version: \"draft\" }\n);\n</script>\n<template>\n  <div>\n    <StoryblokComponent v-if=\"story\" :blok=\"story.content\" />\n  </div>\n</template>\n```", "```js\n<script setup lang=\"ts\">defineProps({ blok: Object });\n</script>\n<template>\n  <div v-editable=\"blok\" v-if=\"blok\">\n    <h3>\n      {{ blok.name }}\n    </h3>\n  </div>\n</template>\n```", "```js\n<script setup lang=\"ts\">defineProps({\n  blok: {\n    type: Object as () => { columns: any },\n    required: true,\n  },\n});\n</script>\n<template>\n  <div v-editable=\"blok\" v-if=\"blok\" class=\"flex mx-auto\">\n    <StoryblokComponent\n      v-for=\"blok in blok.columns\"\n      :key=\"blok._uid\"\n      :blok=\"blok\"\n/>\n  </div>\n</template>\n```", "```js\n<script setup lang=\"ts\">import type { Ref } from \"vue\";\nimport type { StoryblokProject, StoryBlok } from \"@/types/storyblok\";\nconst props = defineProps({\n  blok: { type: Object as () => StoryBlok, required: true, },\n});\nconst projects: Ref<StoryblokProject[] | null> = ref(null);\nconst storyblokApi = useStoryblokApi();\nconst { data } = await storyblokApi.get(\"cdn/stories\", {\n  version: \"draft\",\n  starts_with: \"portfolio\",\n  is_startpage: false,\n});\nconst richTextBody = computed(() => renderRichText(props.blok. body));\n\nprojects.value = data.stories; \n</script>\n<template> \n  <div>\n    <h1 class=\"text-2xl mb-4 text-primary\">\n      {{ blok.headline }}\n    </h1>\n    <div v-html=\"richTextBody\" class=\"py-4\" />\n    <div class=\"grid grid-cols-2 gap-4\">\n      <UCard\n        v-for=\"project in projects\"\n```", "```js\n<script setup lang=\"ts\">defineProps({ blok: {\n  type: Object as () => { name: string, image: any, link: any },\n} });\n</script>\n<template>\n  <div v-editable=\"blok\" v-if=\"blok\" class=\"text-center\">\n    <ULink :to=\"blok.link.cached_url\">\n      <img\n        v-if=\"blok.image\"\n        :src=\"img/200x0'\"\n        :alt=\"blok.image.alt\"\n      />\n    </ULink>\n    <header class=\"text-xl\">\n      {{ blok.name }}\n    </header>\n  </div>\n</template>\n```", "```js\n<script setup lang=\"ts\">const props = defineProps({\n  blok: { type: Object as () => { body: any }, required: true },\n});\nconst richTextBody = computed(() => renderRichText(props.blok.body));\n</script>\n<template>\n  <div v-editable=\"blok\" class=\"prose\">\n    <div v-html=\"richTextBody\" />\n  </div>\n</template>\n<style scoped>\n.prose {\n  line-height: 1.8em;\n}\n</style>\n```", "```js\n<script setup lang=\"ts\">defineProps({\n  blok: { type: Object as () => { title: string, content: any}, required: true },\n});\n</script>\n<template>\n  <div v-editable=\"blok\" class=\"article\">\n    <h2 v-if=\"blok.title\" class=\"text-2xl mb-4\">{{ blok.title }}</h2>\n    <StoryblokComponent\n      v-for=\"blok in blok.content\"\n      :key=\"blok._uid\"\n      :blok=\"blok\"\n    />\n  </div>\n</template>\n<style scoped>\n.article {\n  max-width: 720px;\n  margin: 2em auto;\n}\n</style>\n```", "```js\nuseHead({  meta: [\n    { name: 'description', content: props.blok.description }\n  ]\n});\n```", "```js\n…  \"scripts\": {\n    \"build\": \"nuxt build\",\n    \"dev\": \"NODE_TLS_REJECT_UNAUTHORIZED=0 nuxt dev --dotenv .env --https --ssl-cert localhost.pem --ssl-key localhost-key.pem\",\n    \"generate\": \"nuxt generate  --dotenv .env\",\n    \"preview\": \"nuxt preview\",\n    \"postinstall\": \"nuxt prepare\"\n  },\n…\n```", "```js\nnpm run generate\n```", "```js\nnpx serve .output/public\n```", "```js\ngit initgit branch -m master main\ngit remote add origin https://github.com/{YOUR_USERNAME}/{REPOSITORY_NAME}.git\ngit add .\ngit commit -am \"published source to git\"\ngit push -u origin main\n```"]