- en: 'Chapter 4. Doing a Lot More with Less: Making Use of Plugins for Both jQuery
    and WordPress'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 4 章。用更少的东西做更多的事情：利用 jQuery 和 WordPress 的插件
- en: At this point, you understand enough about jQuery and WordPress basics—as well
    as the different ways to integrate them together—that you can start to get truly
    creative in your solutions. In this chapter and the following three chapters,
    we're going to roll up our sleeves and work out solutions for some often requested
    projects and start getting jQuery to do some useful and just plain cool work within
    our WordPress sites.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，你已经足够了解 jQuery 和 WordPress 基础知识，以及将它们整合在一起的不同方法，你可以开始在解决方案中真正发挥创造力。在本章和接下来的三章中，我们将卷起袖子，为一些经常请求的项目制定解决方案，并开始让
    jQuery 在我们的 WordPress 网站中执行一些有用且很酷的工作。
- en: 'We''re going to bring all available components of WordPress and jQuery together.
    In this chapter, we''ll be:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把 WordPress 和 jQuery 的所有可用组件结合起来。在本章中，我们将：
- en: Working with the very robust and popular jQuery plugin, ColorBox, by *Jack Moore*
    of Color Powered.
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用非常强大和受欢迎的 jQuery 插件 ColorBox，由*Jack Moore* 的 Color Powered 提供。
- en: We'll also work with the robust and popular WordPress plugin, cforms II, by
    *Oliver Seidel* of Deliciousdays.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们还将使用由*Oliver Seidel* 的 Deliciousdays 提供的强大且受欢迎的 WordPress 插件 cforms II。
- en: We'll then customize our default theme so that it works seamlessly with cforms
    II and ColorBox, giving our site a seamless event registration experience.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后，我们将自定义我们的默认主题，使其与 cforms II 和 ColorBox 无缝配合，为我们的网站提供无缝的活动注册体验。
- en: We're not done! We'll then enhance cform II's already great validation with
    jQuery for a smooth user experience.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们还没有完成！然后，我们将通过 jQuery 来增强 cform II 已经很棒的验证，以获得流畅的用户体验。
- en: Get ready to put your WordPress site to work!
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 准备好让你的 WordPress 网站发挥作用！
- en: 'The project overview: Seamless event registration'
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 项目概述：无缝活动注册
- en: While we will continue to work with the default theme, we're going to imagine
    a different hypothetical client and scenario for this chapter's jQuery enhancement.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们将继续使用默认主题，但我们将为这一章的 jQuery 增强设想一个不同的假想客户和情景。
- en: In this scenario, the "client" is a not-for-profit/awareness group. They've
    created an **Events** category in their WordPress site and whenever a new event
    is planned, it is up to each event's coordinator to post information about their
    upcoming event to the Events category.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，“客户”是一个非营利性/意识组织。他们在他们的 WordPress 网站中创建了一个**活动**类别，每当计划举办新活动时，每个活动的协调员都可以将有关即将举办活动的信息发布到活动类别。
- en: Most of their events are free but very disorganized as it's up to each coordinator
    to decide how they want to accept registration for an event, through e-mails or
    phone calls. People get confused and e-mail the wrong people on the site, and
    then there's no reliability of who's coming to what events so that the organization's
    leaders can gather stats from busy event coordinators in order to keep track of
    how effective the events are for their cause.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 他们大多数的活动都是免费的，但非常混乱，因为每个协调员决定如何接受活动的注册，通过电子邮件或电话。人们感到困惑，向网站上的错误人发送电子邮件，然后无法确定谁参加了哪些活动，以便组织的领导者可以从忙碌的活动协调员那里收集统计数据，以跟踪活动对其事业的有效性。
- en: The good news is, we can still help them fix all this.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 好消息是，我们仍然可以帮助他们解决所有这些问题。
- en: What the "client" wants
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: “客户”想要什么
- en: After sitting down and discussing all the options, ultimately, they want one,
    simple registration form that can have the event name passed to it, and then e-mailed
    on to the event administrator, who will dole the RSVPs out among the various event
    organizers.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在坐下来讨论所有选项之后，最终，他们希望有一个简单的注册表单，可以将活动名称传递给它，然后通过电子邮件发送给活动管理员，后者将 RSVP 分配给各个活动组织者。
- en: 'They''ve also received feedback by registrants who have complained that the
    event''s publish date confuses them: They don''t register for events because,
    unless the coordinator makes the date bold or places it inside the title, it looks
    like the event is happening on that day, or has happened in the past. Because
    of this, the client would like their event posts template restyled and cleaned
    up a bit so that it''s easier to recognize them as events and not the same as
    other posts on the site.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 他们还收到了注册者的反馈，抱怨活动的发布日期使他们困惑：他们不注册活动，因为除非协调员将日期加粗或将其放在标题中，否则看起来就像活动是在那一天发生的，或者已经过去了。因此，客户希望重新设计并清理一下他们的活动发布模板，以便更容易识别它们为活动，而不是网站上的其他帖子。
- en: Last, and most importantly, they've been really impressed and influenced by
    the feedback and other forms they've seen on several sites lately, and would really
    like it if their registration form opened up in a modal box so that people can
    register for an event while staying on the **Events** page. When they're done
    registering for an event, they can continue browsing the **Events** category and
    easily register for more.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，也是最重要的是，他们对最近在几个网站上看到的反馈和其他形式印象深刻并受到影响，他们真的很希望他们的注册表单在模态框中打开，这样人们就可以在停留在**活动**页面的同时注册活动。当他们完成活动注册后，他们可以继续浏览**活动**类别并轻松注册更多活动。
- en: 'Part 1: Getting everything set up'
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一部分：准备好所有设置
- en: 'Luckily for us, with a little WordPress and jQuery knowledge under our belt,
    this task is not as complicated as it sounds. In the last chapter, I extolled
    the virtues of keeping design and functionality separate and wrapping your jQuery
    enhancements in WordPress plugins. I also mentioned the fact that there are always
    exceptions. Well, here''s a scenario where we''ll be inclined to apply our enhancements
    directly to the theme for a couple of reasons:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，有了一点WordPress和jQuery知识，这个任务并不像听起来那么复杂。在上一章中，我赞美了将设计和功能分开以及将您的jQuery增强功能包装在WordPress插件中的优点。我还提到了总有例外的事实。好吧，这里有一个场景，我们倾向于直接将我们的增强功能应用于主题的几个原因：
- en: We'll already be tweaking the theme to create a custom category page for events
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们将调整主题以创建一个用于活动的自定义类别页面。
- en: And, we'll also need to create a custom page template for the form that can
    load into a modal box without reloading the rest of the site's headers and footers
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 而且，我们还需要为可以加载到模态框中的表单创建一个自定义页面模板，而不需要重新加载站点的页眉和页脚
- en: Because these requests require that the client understand they'll need to take
    care if they ever want to update or swap out their theme, we might as well leverage
    the full power the WordPress theme API can provide us for this enhancement.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 因为这些请求要求客户端明白，如果他们想要更新或替换他们的主题，他们就需要小心，我们可能会充分利用WordPress主题API为这一增强功能提供的全部功能。
- en: What we'll need
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们需要什么
- en: 'Let''s start with the main parts of the enhancement: We''ll need a form with
    e-mail capability and a modal box to load it in. The rest we''ll do with a few
    custom jQuery scripts and customizations to the WordPress theme.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从增强的主要部分开始：我们需要一个具有电子邮件功能的表单和一个加载它的模态框。其余的我们将通过几个自定义的jQuery脚本和对WordPress主题的自定义来完成。
- en: ColorBox
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ColorBox
- en: For the modal box, there are several good jQuery plugins. You've probably heard
    of ThickBox which is very good, but I myself prefer ColorBox for several usage
    and aesthetic reasons.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 对于模态框，有几个很好的jQuery插件。你可能听说过很好的ThickBox，但我个人更喜欢ColorBox，因为有几个使用和美观的原因。
- en: 'You can download the jQuery ColorBox plugin from here: [http://www.colorpowered.com/colorbox/](http://www.colorpowered.com/colorbox/).'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从这里下载jQuery ColorBox插件：[http://www.colorpowered.com/colorbox/](http://www.colorpowered.com/colorbox/)。
- en: Note
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Why ColorBox and not ThickBox?**'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**为什么选择ColorBox而不是ThickBox？**'
- en: 'The ThickBox plugin comes bundled with Wordpress and I was a big ThickBox fan,
    yet, I also preferred the simplicity of jQuery LightBox (jQuery LightBox only
    works with images). I was quite impressed when I came across ColorBox, there are
    a few reasons for this:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: ThickBox插件与WordPress捆绑在一起，我是ThickBox的忠实粉丝，但我也更喜欢jQuery LightBox的简洁性（jQuery LightBox仅适用于图像）。当我发现ColorBox时，我感到非常惊讶，有几个原因：
- en: Both ThickBox and ColorBox plugins offer modal windows for more than just images.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ThickBox和ColorBox插件都提供了不仅仅是图像的模态窗口。
- en: You can call up inline elements, external files, and iFrames as well as basic
    AJAX calls. No problems at all.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以调用内联元素、外部文件和iFrame，以及基本的AJAX调用。一点问题都没有。
- en: However, ColorBox, compared to ThickBox has a few advantages. For ColorBox,
    *Jack Moore* really took some time and effort to come up with five, very slick
    styles for the modal window, and a nice set of callback and extension functions
    for the more advanced developer to take advantage of. Second, all image loading
    for the modal window components (the transparent background, close, **Next**,
    and **Back** buttons) is handled entirely in the stylesheets, so it's very easy
    for a designer to custom-style the modal window. On several occasions, I've had
    to hand edit the `thickbox js` file in order to get the images to load properly
    if they were not relative to the `plugins js` file the way ThickBox intended or
    if I needed to add a new image.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，与 ThickBox 相比，ColorBox 有一些优势。对于 ColorBox，*Jack Moore* 确实花了一些时间和精力设计了五种非常漂亮的模态窗口样式，以及一套不错的回调和扩展函数供更高级的开发者使用。其次，模态窗口组件（透明背景、关闭、**下一步**和**上一步**按钮）的所有图像加载都完全在样式表中处理，因此设计师很容易自定义模态窗口的样式。有几次，我不得不手动编辑
    `thickbox js` 文件，以便让图像正确加载，如果它们不是相对于插件 js 文件的方式，那是 ThickBox 的意图，或者如果我需要添加新图像。
- en: Last, ThickBox relies on you hand adding the `.thickbox` class attribute to
    elements you want to launch the modal window from. While this approach works great
    for web developers who have the luxury of handcoding everything up, it's a pain
    for implementing inside a publishing platform such as WordPress for less technical
    users. Having to coach (and coax) clients through setting their Administration
    panel editor to **HTML** and custom adding `class` attributes to their markup
    is just painful. None of that is necessary for ColorBox. It is easily controlled
    with jQuery selectors, so the theme or plugin developer can take care of selections
    based on WordPress's HTML output allowing the content editors to simply focus
    on their content without any HTML understanding.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，ThickBox 依赖于您手动向要从中启动模态窗口的元素添加 `.thickbox` 类属性。虽然这种方法对于有幸手工编码所有内容的 Web 开发者来说效果很好，但对于在
    WordPress 等发布平台内实现的 less 技术性用户来说是一种痛苦。必须指导（和劝说）客户将他们的管理面板编辑器设置为**HTML**并自定义添加
    `class` 属性到他们的标记中，这简直是一种痛苦。对于 ColorBox 来说，这一切都是不必要的。它可以轻松通过 jQuery 选择器进行控制，因此主题或插件开发者可以根据
    WordPress 的 HTML 输出进行选择，从而使内容编辑者只需专注于他们的内容而不需要任何 HTML 理解。
- en: Cforms II
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Cforms II
- en: 'To create the registration form we have numerous WordPress plugins to choose
    from, but I find the best to be **cforms II**. Cforms II states upfront: "Admittedly,
    cforms is not the easiest form mailer plugin, but it may be the most flexible."
    And they''re right. And after working with it just once, you''ll find that it''s
    much easier than you''d think.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建注册表单，我们有许多 WordPress 插件可供选择，但我发现最好的是 **cforms II**。Cforms II 在一开始就声明：“诚然，cforms
    不是最容易的表单邮件插件，但它可能是最灵活的。” 他们是对的。并且在使用一次后，你会发现它比你想象的要简单得多。
- en: 'You can download the WordPress cformsII plugin from here: [http://www.deliciousdays.com/cforms-plugin/](http://www.deliciousdays.com/cforms-plugin/).'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从这里下载 WordPress 的 cformsII 插件：[http://www.deliciousdays.com/cforms-plugin/](http://www.deliciousdays.com/cforms-plugin/)。
- en: Installing the WordPress plugin
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装 WordPress 插件
- en: Once you've downloaded the cforms II plugin, you should follow the instructions
    provided by the developer for installing and activating them.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 下载 cforms II 插件后，请按照开发者提供的说明进行安装和激活。
- en: Essentially, this entails unzipping the package, placing `cforms` directory
    in your WordPress installation's `wp-content/plugins` directory, and then navigating
    to the Administrator's **Manage Plugins** page. You'll then select **Activate**
    for the plugin.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 本质上，这意味着解压包，将 `cforms` 目录放置在您的 WordPress 安装的 `wp-content/plugins` 目录中，然后导航到管理员的
    **管理插件** 页面。然后您将为插件选择 **激活**。
- en: '![Installing the WordPress plugin](img/1742_04_01.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![安装 WordPress 插件](img/1742_04_01.jpg)'
- en: Once you have the plugin installed and activated, let's get to work with it.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 安装并激活插件后，让我们开始使用它。
- en: Setting up the registration form with cforms II
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 cforms II 设置注册表单
- en: The cforms II plugin offers many powerful form-building features for the not-so-technical
    WordPress administrator. As a more technical WordPress developer, it flat out
    saves you tons of time. The cforms administration interface does take a while
    to get used to, but it is by far the most powerful and flexible form plugin I've
    used with WordPress.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: cforms II 插件为不那么技术性的 WordPress 管理员提供了许多强大的表单构建功能。作为一个更技术性的 WordPress 开发者，它可以帮你节省大量时间。cforms
    管理界面确实需要一些时间来适应，但它是我在 WordPress 中使用过的最强大和灵活的表单插件。
- en: CformsII is a complex plugin that requires a large amount of administration
    real estate, and several screen pages. For this reason, once you activate the
    plugin, you'll find a whole new panel available on your left-hand side Administration
    area.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: CformsII是一个复杂的插件，需要大量的管理空间和多个屏幕页面。因此，一旦你激活了该插件，你会发现在左侧管理区域有一个全新的面板可用。
- en: '![Setting up the registration form with cforms II](img/1742_04_02.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![使用cforms II设置注册表单](img/1742_04_02.jpg)'
- en: 'Out of the box, cformsII allows for the use of AJAX, in that it will submit
    and update the form without reloading the page. It also allows for the very easy
    creation of all basic types of form elements: `input, select, check`, and `radio`
    boxes as well as `textarea` boxes. You can wrap form elements in custom `fieldset`
    tags with `legend` text tags for easy grouping of related form elements.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 出厂设置中，cformsII允许使用AJAX，在不重新加载页面的情况下提交和更新表单。它还允许非常轻松地创建所有基本类型的表单元素：`input、select、check`和`radio`框以及`textarea`框。你可以用`legend`文本标签包装自定义的`fieldset`标签，方便对相关表单元素进行分组。
- en: Powerful server-side validation is built right in. It's very easy to assign
    fields to be required and check for valid e-mail addresses. Beyond that, you can
    also easily assign your own, custom regular expressions for custom validation.
    The cforms **Help!** panel even gives you helpful examples of regular expressions
    that you can use.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 内置了强大的服务器端验证。很容易将字段指定为必填项并检查有效的电子邮件地址。除此之外，你还可以轻松地为自定义验证分配自己的自定义正则表达式。cforms
    **帮助！**面板甚至为你提供了可以使用的有用的正则表达式示例。
- en: '![Setting up the registration form with cforms II](img/1742_04_03.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![使用cforms II设置注册表单](img/1742_04_03.jpg)'
- en: Tip
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Setting up cforms II securely**'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**安全地设置cforms II**'
- en: You'll want to read up on the cforms documentation, and if possible, have a
    chat with the site's Admin or Hosting provider's tech support. You'll want to
    take care to go through the **Global Settings** panel and make sure your installation
    of cforms II is as secure as possible for your needs of the forms.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 你会想要查阅cforms文档，并且如果可能的话，与网站管理员或托管提供商的技术支持进行交谈。你需要仔细查看**全局设置**面板，并确保你的cforms
    II安装对你的表单需求尽可能安全。
- en: If at all possible, try to use Captcha fields to reduce spam and turn off file
    upload capabilities if you don't need them.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果可能的话，尽量使用验证码字段来减少垃圾邮件，并在不需要时关闭文件上传功能。
- en: 'Striking a balance: Forms should be short and easy and yet retrieve useful
    information'
  id: totrans-53
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 平衡：表单应该简短易懂，同时检索到有用的信息。
- en: The goal of a form is to strike a balance between gaining as much information
    from the user as possible without making them feel as though you're asking for
    too much personal information or, if nothing else, boring them with the tediousness
    of filling out too many fields.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 表单的目标是在尽可能从用户那里获取尽可能多的信息的同时，不让他们感觉到你在要求过多的个人信息，或者至少不让他们因为填写过多字段而感到无聊。
- en: I've kept this registration form very short and to the point. First, I filled
    out the form name and set it to **Ajax enabled**. This will help us out as the
    page will be loading in a modal box, so when it's refreshed it won't pop out into
    a new page, outside the modal window.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我把这个注册表单保持得非常简短和简洁。首先，我填写了表单名称，并将其设置为**启用Ajax**。这将对我们有所帮助，因为页面将在模态框中加载，所以当它刷新时，它不会弹出到一个新页面，在模态窗口之外。
- en: '![Striking a balance: Forms should be short and easy and yet retrieve useful
    information](img/1742_04_04.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![平衡：表单应该简短易懂，同时检索到有用的信息](img/1742_04_04.jpg)'
- en: Next, using the default form set that's already provided, let's set up a `fieldset`
    with `legend` text and the five form inputs that the event coordinators need to
    know for planning the events.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，使用已提供的默认表单集，让我们设置一个带有`legend`文本和事件协调员需要了解的五个表单输入的`fieldset`。
- en: First up the event, that is, the name of the event will be passed by the post
    and not filled out by the user, but I want to show it and it needs to be in a
    form element to be e-mailed to the administrator.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 首先是事件，即事件名称将通过邮政传递，而不是由用户填写，但我想显示它，并且需要将其放在表单元素中以便发送给管理员。
- en: After the event field, we'll need to ask for the user's name. As no money is
    being exchanged and this form is more to have a "head count", I've left this to
    a single field. It's a required field, but I'll allow the user to be as casual
    or formal as they please.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在事件字段之后，我们需要询问用户的姓名。由于没有交换金钱，而且这个表单更多是为了统计人数，所以我将其保留为单个字段。这是一个必填字段，但我允许用户随意或正式填写。
- en: Next, we'll ask for an e-mail address. This is required and I've opted for server-side
    validation using the checkboxes to the right. If a user suggests they can bring
    something to the event, the event coordinator may want to reply to them and get
    back in touch with them. Also, updates about the events may need to be broadcast
    to registrants, so a valid e-mail is essential.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将要求输入电子邮件地址。这是必填项，我选择了使用右侧的复选框进行服务器端验证。如果用户表示他们可以为活动带来一些东西，活动协调员可能希望回复他们并与他们保持联系。此外，可能需要向注册者广播有关活动的更新，因此有效的电子邮件至关重要。
- en: Now, let's set up a select box to ask how many guests a registrant may bring
    to the event.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们设置一个下拉框，询问注册者可以带多少位客人参加活动。
- en: '![Striking a balance: Forms should be short and easy and yet retrieve useful
    information](img/1742_04_05.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![取得平衡：表单应该简短易懂，同时提供有用信息](img/1742_04_05.jpg)'
- en: Last, the message area is a text area that has some text suggesting the registrant
    offer to bring something and if they can, to state what they can bring in the
    message area.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，消息区域是一个文本区域，其中包含一些文本，建议注册者提供一些东西，并且如果他们可以的话，在消息区域中说明他们可以提供什么。
- en: OK. So there's our form. In order to view it, it now needs to be placed in a
    WordPress page or post. We'll be placing it in it's own page, which means we should
    create that page in WordPress.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 好了。所以这是我们的表单。为了查看它，现在需要将它放在 WordPress 页面或帖子中。我们将把它放在自己的页面中，这意味着我们应该在 WordPress
    中创建该页面。
- en: Creating the register page using WordPress 3.0's custom menu option
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 WordPress 3.0 的自定义菜单选项创建注册页面
- en: If you look at the Pages column on the left-hand side of your Administration
    panel, you'll now see that the pageMash plugin is part of the options.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您查看管理面板左侧的页面列，您现在会发现 pageMash 插件是选项之一。
- en: We'll simply select **Add New** from the option in the left-hand menu under
    **Pages** and create a page named **Register**. We'll leave the content area blank,
    but you'll notice now, in **Edit** view, there's a **cforms** button in the editing
    panel for the page/post.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只需从 **页面** 下的左侧菜单中选择 **添加新**，并创建一个名为 **注册** 的页面。我们将内容区域留空，但是您现在会注意到，在 **编辑**
    视图中，编辑面板中有一个 **cforms** 按钮用于页面/帖子。
- en: '![Creating the register page using WordPress 3.0''s custom menu option](img/1742_04_06.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![使用 WordPress 3.0 的自定义菜单选项创建注册页面](img/1742_04_06.jpg)'
- en: Clicking on to that button will allow you to select the form you'd like placed
    on the page (you can create multiple forms in cforms II and even place multiple
    forms in a single post or page, but that's overkill for our purposes). Once you
    select your form, you should see a placeholder for it.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 单击该按钮将允许您选择要放置在页面上的表单（您可以在 cforms II 中创建多个表单，甚至在单个帖子或页面中放置多个表单，但这对我们来说太过了）。选择表单后，您应该会看到一个用于占位符的空间。
- en: '![Creating the register page using WordPress 3.0''s custom menu option](img/1742_04_07.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![使用 WordPress 3.0 的自定义菜单选项创建注册页面](img/1742_04_07.jpg)'
- en: 'You should now see your form in the **Register** page on your site, as shown
    in the following screenshot:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在应该在站点上的 **注册** 页面中看到您的表单，如下截图所示：
- en: '![Creating the register page using WordPress 3.0''s custom menu option](img/1742_04_08.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![使用 WordPress 3.0 的自定义菜单选项创建注册页面](img/1742_04_08.jpg)'
- en: Working with WordPress 3.0's custom menu option
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 WordPress 3.0 的自定义菜单选项
- en: However, we don't want the **Register** page to show up in our Page navigation
    and we need it to be in its own template page so that it will load more nicely
    into our modal box, without the theme's header and footer graphics and styling.
    We'll need to modify our template, but first, let's create a custom menu in WordPress
    3.0 that will override the **Page** menu and then we can easily specify what pages
    should show up so the registration page won't appear in our site's navigation.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我们不希望 **注册** 页面出现在我们的页面导航中，并且我们需要它在自己的模板页面中，以便更好地加载到我们的模态框中，而不带有主题的页眉和页脚图形和样式。我们需要修改我们的模板，但首先，让我们在
    WordPress 3.0 中创建一个自定义菜单，该菜单将覆盖 **页面** 菜单，然后我们可以轻松指定应显示哪些页面，以便注册页面不会出现在我们站点的导航中。
- en: 'First up, you''ll want to navigate to **Appearance | Menus** in the Administration
    panel. Once there, you can click on the + (plus) tab to create a new menu and
    then select options from the right to add to it. You can then, in the upper-right
    panel set the menu to be your "primary navigation", which will overwrite the standard
    Page navigation in the Twenty Ten default theme''s header. The following screenshot
    illustrates the three main steps to set up a new main navigation and assign it
    as the site''s primary navigation:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，您需要在管理面板中导航至**外观 | 菜单**。一旦进入，您可以点击 +（加号）选项卡创建一个新菜单，然后从右侧选择要添加到菜单的选项。然后，您可以在右上面板中设置菜单为您的“主要导航”，这将覆盖
    Twenty Ten 默认主题页眉中的标准页面导航。以下屏幕截图说明了设置新的主导航并将其分配为站点主导航的三个主要步骤：
- en: '![Working with WordPress 3.0''s custom menu option](img/1742_04_09.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![使用 WordPress 3.0 的自定义菜单选项](img/1742_04_09.jpg)'
- en: 'You can also include the **Event** category into the menu as shown in the following
    screenshot (we''ll be needing access to this page later):'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以将**事件**类别包括在菜单中，如下面的屏幕截图所示（稍后我们将需要访问此页面）：
- en: '![Working with WordPress 3.0''s custom menu option](img/1742_04_10.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![使用 WordPress 3.0 的自定义菜单选项](img/1742_04_10.jpg)'
- en: OK! We now have a "hidden" page holding our registration form. Let's get started
    with the theme customizations.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 好了！现在我们有一个“隐藏”的页面，保存着我们的注册表单。让我们开始进行主题自定义。
- en: Customizing the theme
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自定义主题
- en: 'Again, we''ll need to customize the theme in two ways: First, we want a custom
    page template to hold our registration form that will load into the modal box
    and second, we''ll need to create a custom category template and modify it so
    that it will display only posts assigned to the **Events** category and launch
    the modal box with the registration form in it.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，我们需要以两种方式自定义主题：首先，我们需要一个自定义页面模板来容纳我们的注册表单，该表单将加载到模态框中；其次，我们需要创建一个自定义分类模板并修改它，以便仅显示分配给**事件**类别的帖子，并在其中启动包含注册表单的模态框。
- en: Creating the custom page template
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建自定义页面模板
- en: First up, we'll need to create a new page template that we can assign our registration
    page to. We'll start by creating a copy of our **page.php** template and renaming
    it **registration-page.php**.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要创建一个新的页面模板，以便将我们的注册页面分配给它。我们将从创建**page.php**模板的副本开始，并将其重命名为**registration-page.php**。
- en: '![Creating the custom page template](img/1742_04_11.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![创建自定义页面模板](img/1742_04_11.jpg)'
- en: The whole point of this form is to load in the ColorBox modal window, so having
    our theme's header and footer styling will be a bit distracting. We'll simply
    remove the `get_header()` and `get_footer()` WordPress template tag commands from
    this template page.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 此表单的整个目的是加载 ColorBox 模态窗口，因此使用我们主题的页眉和页脚样式会有些分散注意力。我们将从此模板页面中简单地删除`get_header()`和`get_footer()`
    WordPress 模板标记命令。
- en: 'Next, while we don''t want the header and footer styles, we do need the page
    to be a properly formatted HTML page that loads in jQuery. We''ll manually add
    a doctype and borrow some of the WordPress header code from the `header.php` file,
    just from a `body` tag to the beginning of this template''s loop, as shown here:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，虽然我们不需要页眉和页脚样式，但我们需要页面成为一个格式正确的 HTML 页面，可以加载 jQuery。我们将手动添加一个 doctype，并从`header.php`文件中借用一些
    WordPress 页眉代码，从一个`body`标记到这个模板的循环的开头，如下所示：
- en: '[PRE0]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You'll notice that we've simplified it a lot compared to the `header.php` file's
    `head` tag code. We don't need to worry about comments or a sidebar on this page,
    so those bits of PHP WordPress code have been removed. We do need jQuery to load
    in and I've also gone ahead and added a few manual styles the cforms use to spruce
    up our form a bit.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 您会注意到，与`header.php`文件的`head`标签代码相比，我们简化了它很多。我们不需要担心此页面上的注释或侧边栏，因此这些 PHP WordPress
    代码块已被删除。我们确实需要加载 jQuery，我还额外添加了一些手动样式，以美化我们的表单。
- en: 'We''ll then add this new footer markup; just the closing body and HTML tags
    just below the template page''s loop:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将在此模板页面的循环正下方添加这个新的页脚标记；即在模板页面的循环的下方添加关闭的`body`和HTML标记：
- en: '[PRE1]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Tip
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Don''t forget about your plugin hooks when customizing template pages**'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**在自定义模板页面时不要忘记插件挂钩**'
- en: Note, I made sure that the `wp_head()` and `wp_footer()` were manually placed
    in our registration template page. Many plugins require those hooks to be in a
    theme to work. If you're creating custom pages, make sure that they be included
    in the header or footer or that you place them in manually if the theme's `header.php`
    and `footer.php` files won't be included, as this template page does.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，我确保`wp_head()`和`wp_footer()`手动放置在我们的注册模板页面中。许多插件需要这些钩子在主题中才能正常工作。如果你正在创建自定义页面，请确保它们包含在页眉或页脚中，或者如果主题的`header.php`和`footer.php`文件不会被包含，则手动放置它们，就像这个模板页面一样。
- en: 'Last, for this new page to be recognized as a special template for WordPress,
    we have to add a **template header** to the very top of the document in commented
    out PHP as shown here:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，为了使这个新页面被识别为 WordPress 的特殊模板，我们必须在文档的最顶部添加一个**模板头部**，以 PHP 的注释形式添加，如下所示：
- en: '[PRE2]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Note
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'As with our plugin in [Chapter 3](ch03.html "Chapter 3. Digging Deeper: Understanding
    jQuery and WordPress Together"), *Digging Deeper: Understanding WordPress and
    jQuery Together*, make sure there are no spaces or hard returns before the `<?php`
    tag. Otherwise, you may get an error about headers already having been sent.'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 与我们在[第 3 章](ch03.html "第 3 章。深入挖掘：理解 jQuery 和 WordPress")中的插件一样，*深入挖掘：理解 WordPress
    和 jQuery*，请确保在`<?php`标记之前没有空格或硬回车。否则，你可能会收到已发送头文件的错误信息。
- en: Now, if we return to our **Registration** page in the Administration panel,
    on the right-hand side, we'll see that our new page template is available to be
    assigned to the page.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我们回到管理面板中的**注册**页面，在右侧，我们将看到我们的新页面模板可以分配给该页面。
- en: '![Creating the custom page template](img/1742_04_12.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![创建自定义页面模板](img/1742_04_12.jpg)'
- en: We can now see that if we use the browser's address bar to navigate to the URL
    of our **Register** page, it loads up without any other WordPress styling and
    is ready to be loaded into our ColorBox modal window.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以看到，如果我们使用浏览器的地址栏导航到我们**注册**页面的URL，它会加载而没有任何其他 WordPress 样式，并且已经准备好加载到我们的
    ColorBox 模态窗口中。
- en: '![Creating the custom page template](img/1742_04_13.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![创建自定义页面模板](img/1742_04_13.jpg)'
- en: That's the first half of our solution. Let's now finish it.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们解决方案的第一半。现在让我们完成它。
- en: Creating the custom category template
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建自定义分类模板
- en: We now need to create a special category template for the **Events** category.
    Again, we'll want each event to have a registration link. That link will pass
    the event's title to the registration form.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要为**活动**类别创建一个特殊的分类模板。同样，我们希望每个事件都有一个注册链接。该链接将事件的标题传递给注册表单。
- en: '![Creating the custom category template](img/1742_04_14.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![创建自定义分类模板](img/1742_04_14.jpg)'
- en: 'To get started with this, if you''ll recall the Template Hierarchy from [Chapter
    3](ch03.html "Chapter 3. Digging Deeper: Understanding jQuery and WordPress Together"),
    *Digging Deeper: Understanding WordPress and jQuery Together*, the `category.php`
    template page trumps the `archive.php` template page. Turns out, the default template
    that we''re using doesn''t have a `category.php` page. We''ll simply create one
    by duplicating the `archive.php` page and naming it `category.php`.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始这个过程，如果你还记得[第 3 章](ch03.html "第 3 章。深入挖掘：理解 jQuery 和 WordPress")中的模板层次结构，*深入挖掘：理解
    WordPress 和 jQuery*，`category.php`模板页面优先于`archive.php`模板页面。事实证明，我们正在使用的默认模板没有`category.php`页面。我们只需通过复制`archive.php`页面并将其命名为`category.php`来创建一个。
- en: 'But wait; we don''t just want this page to show *any* category. We want to
    only show the Events category. You''ll also recall from [Chapter 3](ch03.html
    "Chapter 3. Digging Deeper: Understanding jQuery and WordPress Together"), *Digging
    Deeper: Understanding WordPress and jQuery Together*, that you can further trump
    the `category.php` template with a specific `category-ID.php` template page such
    as **category-3.php**.'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 但等等；我们不只是想让这个页面显示*任何*类别。我们只想显示**活动**类别。你还会记得在[第 3 章](ch03.html "第 3 章。深入挖掘：理解
    jQuery 和 WordPress")中，*深入挖掘：理解 WordPress 和 jQuery*，你可以通过特定的`category-ID.php`模板页面进一步取代`category.php`模板，例如**category-3.php**。
- en: It just so happens that in my local setup of WordPress, the ID for the Event
    category is 3, so that's what we'll name the file.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的本地 WordPress 设置中，事件类别的 ID 恰好是 3，所以我们将文件命名为这个。
- en: '![Creating the custom category template](img/1742_04_15.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![创建自定义分类模板](img/1742_04_15.jpg)'
- en: Note
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Finding your category ID**'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '**查找你的分类 ID**'
- en: Those of you working in your own WordPress installation, the category ID numbers
    are assigned as you create categories. First, you'll need to determine what your
    **Events** category's ID number is. You can do this by navigating to the **Posts
    | Categories** page in the Administration panel and selecting **Edit** under the
    **Events** category. You can then check the URL in that category's **Edit** page.
    At the very end of the URL you'll see the category's ID number.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在您自己的 WordPress 安装中工作的人，类别 ID 号是在创建类别时分配的。首先，您需要确定您的**Events**类别的 ID 号是多少。您可以通过在管理面板中导航到**Posts
    | Categories**页面，然后在**Events**类别下选择**编辑**来执行此操作。然后您可以检查该类别**编辑**页面中的 URL。在 URL
    的最后，您将看到该类别的 ID 号。
- en: '![Creating the custom category template](img/1742_04_16.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![创建自定义类别模板](img/1742_04_16.jpg)'
- en: We're now ready to customize the `category-3.php` template for the **Events**
    page.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们准备好自定义 **Events** 页面的`category-3.php`模板了。
- en: First up, as we saw in the previous chapter, this page calls the `get_template_part(
    'loop', 'category' )` function from the `loop.php` template page. We actually
    want a custom, very simple setup for the **Events** category *only*. While we
    certainly could update the `if...else` statement of `loop.php` with an additional
    custom loop (which is a tad beyond the scope of this book, stay tuned for the
    upcoming **WordPress 3.0 Theme Design** book from Packt!), for this custom client
    project we'll just comment out the call to that loop and add in our own very simple
    loop that, thanks to the Template Hierarchy, will only work on our **Events**
    category page.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，正如我们在上一章节中看到的，这个页面调用了`get_template_part( 'loop', 'category' )`函数，来自`loop.php`模板页面。我们实际上只想要一个自定义、非常简单的设置，仅限于**Events**类别。虽然我们确实可以更新`loop.php`中的`if...else`语句，添加一个额外的自定义循环（这略微超出了本书的范围，敬请期待
    Packt 出版社即将推出的 **WordPress 3.0 主题设计** 书籍！），但对于这个自定义客户项目，我们只需注释掉对该循环的调用，并添加我们自己非常简单的循环，多亏了模板层次结构，这个循环只会在我们的**Events**类别页面上起作用。
- en: '[PRE3]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you haven't done so, you might want to deactivate your **Add Author Bio**
    plugin that we built in the previous chapter. It's not necessary for this project,
    though it doesn't hurt to have it activated (it will just be sitting there in
    the Event's posts).
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您还没有这样做，您可能想要停用我们在上一章节中构建的 **添加作者简介** 插件。这对这个项目不是必需的，虽然激活它不会有什么坏处（它将只是坐在那里，在活动的帖子中）。
- en: 'Notice that in the loop towards the bottom, we made a `link` tag that references
    the register form. I''ve ammended a **variable string** named `evnt` to that link
    and added the title of the event using the `get_title()` template tag as shown:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 注意在底部的循环中，我们制作了一个引用注册表单的`link`标签。我修改了一个名为`evnt`的 **变量字符串** 到该链接，并使用`get_title()`模板标签添加了事件的标题，如下所示：
- en: '[PRE4]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We''ll now go back up to the top of the template page and make sure that the
    header title makes sense. There''s a bunch of `if...else` statements at the top
    checking to see if the content returned is from an archive, category, or tag (remember,
    this page was duplicated from the default template''s `archive.php` page). As
    this template page will only load up Event posts now, we don''t really need all
    that PHP, but it doesn''t hurt. Mostly, we''ll want to add in a main header with
    the following markup and code:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将回到模板页面的顶部，确保标题的设置是合理的。顶部有一堆`if...else`语句，检查返回的内容是否来自存档、类别或标签（请记住，这个页面是从默认模板的`archive.php`页面复制的）。由于这个模板页面现在只会加载事件帖子，所以我们实际上不需要所有那些
    PHP，但也没什么坏处。主要是，我们将想要添加一个带有以下标记和代码的主标题：
- en: '[PRE5]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: That will give us a title named **Upcoming Events** on the page (or whatever
    you actually named your own **Events** category, that is, Shows, Parties, and
    so on—you get to name it. That `single_cat_title()` template tag will pull it
    in for you).
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在页面上给我们一个名为**即将举行的活动**的标题（或者实际上您给自己的**Events**类别命名的任何名称，即，Shows、Parties 等等——您可以自己命名。那个
    `single_cat_title()` 模板标签会为您提取它）。
- en: 'At the very bottom of the theme''s `style.css` sheet, we''ll add the following
    rules to style our registration link and float it to the right:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在主题的`style.css`样式表的最底部，我们将添加以下规则来为我们的注册链接设置样式，并将其浮动到右侧：
- en: '[PRE6]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: When we look at an event post now, we'll see our Event post with a dynamic link
    at the bottom to **Register:**
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 现在当我们查看一个事件帖子时，我们会看到我们的事件帖子底部有一个动态链接到**注册**的链接：
- en: '![Creating the custom category template](img/1742_04_17.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![创建自定义类别模板](img/1742_04_17.jpg)'
- en: Getting jQuery in on the game plan
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将 jQuery 纳入规划
- en: Alright! I don't know about you, but I feel that was quite a bit of prep-work.
    It's all going to come together now as we load up the ColorBox plugin and cook
    up a few final custom jQuery scripts.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 好了！我不知道你怎么想，但我觉得这是相当多的准备工作。当我们加载 ColorBox 插件并编写最后几个自定义 jQuery 脚本时，一切都会结合在一起。
- en: Including the ColorBox plugin
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 包括 ColorBox 插件
- en: In our theme, let's create a `js` directory, and within that directory, let's
    create an additional directory named **colorbox**. This will allow us to place
    in the CSS sheet and image collateral for the ColorBox plugin and keep everything
    tidy and working the way it prefers to work in the **colorbox.css** sheet.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的主题中，让我们创建一个 `js` 目录，在该目录中，让我们创建一个名为 **colorbox** 的附加目录。这将允许我们放置 ColorBox
    插件的 CSS 表和图像资产，并保持一切整洁和按照它喜欢在 **colorbox.css** 表中工作的方式进行。
- en: '![Including the ColorBox plugin](img/1742_04_18.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![包括 ColorBox 插件](img/1742_04_18.jpg)'
- en: 'We''ll unzip our ColorBox plugin and move over the minified version into our
    `js/colorbox` directory. We''ll then take the stylesheets and collateral from
    the `example1` folder (I like it the best, the striped, transparent background
    and rounded corners are great), and drop them into the **colorbox** directory.
    We''ll then go to our theme''s `header.php` file and include both the **colorbox.css**
    stylesheet, underneath the theme''s main stylesheet as shown:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将解压缩我们的 ColorBox 插件，并将缩小版移到我们的 `js/colorbox` 目录中。然后，我们将从 `example1` 文件夹中获取样式表和资产（我最喜欢它，有条纹的，透明的背景和圆角非常棒），并将它们放入
    **colorbox** 目录中。然后，我们将转到我们主题的 `header.php` 文件，并像下面所示，在主题的主样式表下方包括 **colorbox.css**
    样式表：
- en: '[PRE7]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Then, above the `wp_head` function, we''ll add in our main jQuery include as
    well as the ColorBox plugin using the methods that we learned in the previous
    chapters, taking advantage of the script API as shown:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在 `wp_head` 函数的上方，我们将按照前几章学到的方法添加我们的主要 jQuery 包括以及 ColorBox 插件，利用脚本 API 如下所示：
- en: '[PRE8]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Writing a custom jQuery script
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编写自定义 jQuery 脚本
- en: 'Now, in the root of our `js` directory, let''s create a new `custom-jquery.js`
    file and also be sure to include it in our `header.php` file, *under* our ColorBox
    includes as follows:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在我们的 `js` 目录的根目录中，让我们创建一个新的 `custom-jquery.js` 文件，并确保在我们的 `header.php` 文件中包含它，在我们的
    ColorBox 包含项 *下方*，如下所示：
- en: '[PRE9]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Get set for some jQuery fun now. Since we've gone through the trouble of hand
    including the ColorBox plugin into our WordPress theme, we might as well make
    sure it can load up images in addition to our registration form.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 现在准备一些 jQuery 的乐趣。由于我们辛苦地手动将 ColorBox 插件包含到我们的 WordPress 主题中，我们也可以确保它能够加载图像，以及我们的注册表单。
- en: 'To ensure that ColorBox only loads up images, and not every link on the page,
    we''ll think of some examples back to [Chapter 2](ch02.html "Chapter 2. Working
    with jQuery in WordPress"), *Working with jQuery in WordPress*, and do a little
    creative selecting. We''ll add this rule to our `custom-jquery.js` file:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保 ColorBox 只加载图片，而不是页面上的每个链接，我们会想到一些在[第 2 章](ch02.html "第 2 章。在 WordPress
    中使用 jQuery")中的示例，*在 WordPress 中使用 jQuery*，并进行一些创造性的选择。我们将把这个规则添加到我们的 `custom-jquery.js`
    文件中：
- en: '[PRE10]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This selection only works on tag links that are in posts, inside the `.entry`
    class, that *have* thumbnail `img` tags. No other links will activate ColorBox.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 此选择仅适用于帖子中位于 `.entry` 类中的标签链接，其中 *有* 缩略图 `img` 标签。没有其他链接会触发 ColorBox。
- en: '![Writing a custom jQuery script](img/1742_04_19.jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![编写自定义 jQuery 脚本](img/1742_04_19.jpg)'
- en: 'Now, to get the registration page to launch ColorBox, we''ll be a bit more
    clever. While I''ve added a `.registration` class, I don''t want to rely on it
    to launch ColorBox. The only link that should trigger the modal window is a link
    to the registration form, so I''ll be sure to select for that. In my `cb-registration.js`
    file, inside my document ready function and after my image select `colorbox` function,
    I''ll add this script:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，为了让注册页面启动 ColorBox，我们要聪明一点。虽然我已经添加了一个 `.registration` 类，但我不想依赖它来启动 ColorBox。唯一应该触发模态窗口的链接是指向注册表单的链接，所以我一定要为此选择。在我的
    `cb-registration.js` 文件中，在我的文档就绪函数内以及在我的图片选择 `colorbox` 函数之后，我将添加此脚本：
- en: '[PRE11]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: That particular jQuery selector will make sure that again, only links that contain
    (that's what the asterisk `*` is for) the word `register` in the `href` attribute
    will trigger the ColorBox modal window, in ColorBox's iframe mode.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 那个特定的 jQuery 选择器将确保只有包含（这就是星号 `*` 的作用）`href` 属性中包含 `register` 一词的链接才会触发 ColorBox
    模态窗口，在 ColorBox 的 iframe 模式下。
- en: You'll notice that I also used ColorBox's available parameters to set a constrained
    height and width for the registration form's modal box.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到我还使用了ColorBox提供的参数来为注册表单的模态框设置约束的高度和宽度。
- en: 'Now, only our Registration links and image links with thumbnails launch ColorBox:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，只有我们的注册链接和带缩略图的图片链接启动ColorBox：
- en: '![Writing a custom jQuery script](img/1742_04_20.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![编写自定义jQuery脚本](img/1742_04_20.jpg)'
- en: 'Pulling it all together: One tiny cforms II hack required'
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结：需要一个微小的cforms II hack
- en: You'll recall that we set up our registration link to pass the name of the event
    in the URL via a **GET call**, sometimes called a **variable string**, to the
    Registration form.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 你还记得我们设置了我们的注册链接通过**GET调用**（有时称为**变量字符串**）将事件的名称以URL方式传递到注册表单。
- en: Right now, there is no way that the cforms administration panel will pick up
    that variable, but there's a quick, and fairly commonly used "hack" for cforms
    to make sure you can pass your own custom variables to the form.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，cforms管理面板无法捕获该变量，但对于cforms来说，有一个快速且相当常用的"hack"可以确保您可以向表单传递自定义变量。
- en: cforms II creates little-bracket-enclosed template names for the variables it
    can pick up, like adding the variable template:`{Title}` will display post or
    page title that the form is on. We want to pass it a post title from another page
    (rather than having to manually add this form to every Event post), so we'll add
    our own variable template to the cformsII plugin.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: cforms II为它可以捕捉的变量创建了有小括号括起来的模板名称，比如添加变量模板：`{Title}`将显示表单所在的帖子或页面标题。我们希望传递一个来自另一页的文章标题（而不是手动将此表单添加到每个事件帖子），因此我们将向cformsII插件添加我们自己的变量模板。
- en: Tip
  id: totrans-155
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Customizing a plugin? Keep copious notes!**'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '**定制插件？记笔记！**'
- en: WordPress and jQuery developers usually keep updating and refining their plugins.
    Your best bet is to try to find a solution that doesn't require you to edit the
    actual plugin source files. However, as in this case, if you find you do edit
    a plugins source file, add your own `customization-readMe.txt` file to the directory
    and keep detailed notes of what you amended or edited in the plugin. When the
    developer releases and upgrades their plugin, especially WordPress plugins that
    sometimes need updating to keep up with the current WordPress core version, you'll
    lose your amendments and hacks when you update the plugin. Your notes will make
    it easy to reintegrate them.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: WordPress 和 jQuery 开发者通常会不断更新和改进他们的插件。你最好的选择是尽量寻找一个不需要你编辑实际插件源文件的解决方案。然而，就像在这种情况下一样，如果你发现你确实编辑了插件的源文件，那就在目录中添加你自己的`customization-readMe.txt`文件，并详细记录你在插件中修改或编辑的内容。当开发者发布并升级他们的插件时，尤其是有时需要更新以跟上当前WordPress核心版本的WordPress插件，当你更新插件时，你会丢失你的修改和黑客。你的笔记将使重新整合它们变得容易。
- en: 'In the cforms II plugin directory, locate the `lib_aux.php` file. Around line
    421, just after code that looks like `...$m = str_replace( ''{BLOGNAME}'',..`.
    add this line of code:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在cforms II插件目录中，定位`lib_aux.php`文件。在大约第421行，就在看起来像`...$m = str_replace( '{BLOGNAME}',..`的代码之后，添加这行代码：
- en: '[PRE12]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Then, in the cforms administration panel for my Registration form, we can now
    add the **{Event}** variable to the `Event` field that I added to the `lib_aux.php`
    page in the plugin. Let's also make sure the field is set to "read only".
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在我的注册表单的cforms管理面板中，我们现在可以向`lib_aux.php`页面中的**{Event}**变量添加到`Event`字段。让我们还确保该字段设置为"只读"。
- en: '![Pulling it all together: One tiny cforms II hack required](img/1742_04_21.jpg)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![总结：需要一个微小的cforms II hack](img/1742_04_21.jpg)'
- en: 'Just for clarity, I''d like the event name to show up in the header of the
    form as well. The header is not part of cforms, but part of the page template.
    In my theme directory, I''ll open up `registration-page.php` and next to the header''s
    `the_title()` template tag on line 41, I''ll add the following code:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 为了清晰起见，我希望事件名称也显示在表单的标题中。标题不是cforms的一部分，而是页面模板的一部分。在我的主题目录中，我将打开`registration-page.php`，在第41行的标题`the_title()`模板标签旁边，我将添加以下代码：
- en: '[PRE13]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: When the form launches, you'll now see the name of the event in the header and
    in the Event field, which is set to read only and not editable by the user. Now
    when the form is submitted and e-mailed to the administrator, it's clear what
    event the registration is for.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 当表单启动时，你现在会在标题和事件字段中看到事件的名称，该字段设置为只读，不可由用户编辑。现在表单提交并发送给管理员时，清楚地显示了注册是为哪个事件。
- en: '![Pulling it all together: One tiny cforms II hack required](img/1742_04_22.jpg)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![总结：需要一个微小的cforms II hack](img/1742_04_22.jpg)'
- en: We now have an Event page that shows the user's upcoming events and lets them
    seamlessly register for those in a form that loads in a modal window as planned.
    Great job! Let's see about making this experience even better.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了一个事件页面，显示用户即将到来的事件，并让他们无缝注册参加这些活动，这将在一个模态窗口中加载。干得好！让我们看看如何使这种体验变得更好。
- en: 'Part 2: Form validation—make sure that what''s submitted is right'
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二部分：表单验证——确保提交的内容是正确的
- en: The great news is, cformsII provides nifty, awesomely CSS styled, server-side
    validation already built-in and ready to go. You can see if I click on **Submit**
    on my form without filling out the required details, or an improperly formatted
    e-mail address, the form reloads showing me the fields that are incorrect.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 令人振奋的消息是，cformsII 已经内置并准备好了漂亮、令人赞叹的 CSS 样式的服务器端验证。您可以看到，如果我在未填写必填详细信息或格式不正确的电子邮件地址的情况下点击**提交**，表单将重新加载，显示我填写错误的字段。
- en: '![Part 2: Form validation—make sure that what''s submitted is right](img/1742_04_23.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![第二部分：表单验证——确保提交的内容是正确的](img/1742_04_23.jpg)'
- en: But why wait until the user clicks on the **Submit** button? While **server-side
    validation** is essential and the only way to properly validate data, by adding
    in a little **client-side** validation, with jQuery, we can easily enhance and
    speed up the user's process by alerting them as they work through the form that
    they're missing details or have data improperly formatted.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 但为什么要等到用户点击**提交**按钮呢？虽然**服务器端验证**是必不可少的，也是唯一正确验证数据的方法，但通过添加一些**客户端**验证，使用 jQuery，我们可以很容易地提升并加快用户的流程，通过在用户填写表单时提醒他们丢失细节或数据格式不正确。
- en: Note
  id: totrans-171
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Why is server-side validation important?**'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '**为什么服务器端验证很重要？**'
- en: Client-side validation with JavaScript and jQuery should never be relied on
    for data validation or to prevent improperly formatted information from being
    submitted and sent to the server. Users can always disable JavaScript in their
    browser and then submit any values they want (sometimes using improperly formatted
    values to hack into your server through the form). Client-side validation, for
    this reason, should only be used to *enhance* the user's experience and not actually
    protect the server or data integrity.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 JavaScript 和 jQuery 进行客户端验证绝不能全部依赖于数据验证或防止提交不正确格式的信息到服务器。用户始终可以在浏览器中禁用 JavaScript，然后提交他们想要的任何值（有时使用不正确格式的值通过表单入侵您的服务器）。出于这个原因，客户端验证应该仅用于*增强*用户体验，而不是实际保护服务器或数据完整性。
- en: 'The trick to client-side validation: Don''t just tell them when it''s wrong!'
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 客户端验证的技巧：不要只告诉他们错误时发生了什么！
- en: Everyone responds to positive feedback. Instead of waiting for your users to
    mess up or forget a field, with the use of jQuery and a few styles you can let
    them know that they filled the field out correctly and are ready to move on.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 每个人都对积极的反馈做出回应。与其等待用户弄错或忘记一个字段，借助 jQuery 和一些样式，您可以通知他们已经正确填写了字段，并可以继续进行。
- en: Using Inkscape, I've made a simple little "check" and "x" set of icons that
    can be applied as a background image to a span added by jQuery. Using the CSS
    sprite image technique of adjusting the background position to display the "check"
    or the "x" icons, the user will visually see quickly if the form field is correctly
    filled out and that it's OK to move on.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Inkscape，我做了一组简单的“√”和“×”图标，可以作为由 jQuery 添加的 span 的背景图应用。使用 CSS 精灵图像技术来调整背景位置显示“√”或“×”图标，用户将迅速看到表单字段是否被正确填写，并且可以继续。
- en: '![The trick to client-side validation: Don''t just tell them when it''s wrong!](img/1742_04_24.jpg)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![客户端验证的技巧：不要只告诉他们错误时发生了什么！](img/1742_04_24.jpg)'
- en: Blank input validation
  id: totrans-178
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 空输入验证
- en: 'In order to set up this basic validation, we''ll write up a jQuery script that
    selects for the input items and on `blur`, sets off a function. Let''s place the
    script in the `registration-page.php` just below the loop code, above the `wp-footer()`
    hook, as shown (note the bold comments in the code to follow along with what each
    jQuery statement does):'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 为了设置基本验证，我们将编写一个 jQuery 脚本，该脚本选择输入项目，并在`blur`时启动一个功能。让我们把这个脚本放在`registration-page.php`中，就在循环代码下面，`wp-footer()`挂钩上面，如下所示（注意代码中粗体的注释，以便跟踪每个
    jQuery 语句的操作）：
- en: '[PRE14]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The previous code appends an exclamation point (`!`) for an invalid, empty
    field, or a quick `thanks`. for a valid, filled-out one. However, as the user
    focuses and blurs the input fields, the spans keep getting appended with the `after`
    function. To compensate for that, we''ll add a custom script that works on `focus`,
    just underneath our `blur` script. It will remove the `after` appended spans as
    shown:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 以前的代码对于无效的、空的字段会附加一个感叹号 (`!`)，对于有效的、填写完整的字段则附加一个快速的 `thanks`。然而，当用户焦点和模糊输入字段时，`span`
    会不断地附加上 `after` 函数。为了补偿这一点，我们将在我们的 `blur` 脚本下方添加一个工作于 `focus` 上的自定义脚本。它将删除附加的
    `after` spans，如下所示：
- en: '[PRE15]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'This gives us some very nice, basic validation that checks for blank inputs.
    You''ll note that our `span` tags have classes amended to them. I''ve added the
    "check" and "x" images to my theme''s image directory, and now, at the very bottom
    of my theme''s `style.css` stylesheet, I''ll add the following class rules:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 这给了我们一些非常好的基本验证，检查空输入。您会注意到我们的 `span` 标签已经添加了类。我已经将 "check" 和 "x" 图像添加到我的主题的图像目录中，现在，在我的主题的
    `style.css` 样式表的最底部，我将添加以下类规则：
- en: '[PRE16]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The end result is a pretty nice, obvious visual display of what happens when
    you mouse or tab through the fields, but leave the two required fields blank,
    before ever clicking on the **Submit** button.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 最终结果是在你鼠标或者通过字段切换时，留下两个必填字段为空，然后再点击 **Submit** 按钮时发生的一个非常好的、明显的视觉显示。
- en: '![Blank input validation](img/1742_04_25.jpg)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![空输入验证](img/1742_04_25.jpg)'
- en: Properly formatted e-mail validation
  id: totrans-187
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 正确格式的电子邮件验证
- en: 'Let''s just take this one small step further. It''s one thing to leave the
    e-mail address blank, but we might as well point out if it''s not well formed.
    Steve Reynolds, has an excellent how-to post on his site about using jQuery to
    validate an e-mail address. You can read up on it here: [http://www.reynoldsftw.com/2009/03/live-email-validation-with-jquery/](http://www.reynoldsftw.com/2009/03/live-email-validation-with-jquery/).'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再向前迈进一小步。留下电子邮件地址为空是一回事，但我们也可以指出它是否格式良好。史蒂夫·雷诺兹在他的网站上有一篇关于使用 jQuery 验证电子邮件地址的绝佳文章。你可以在这里阅读：[http://www.reynoldsftw.com/2009/03/live-email-validation-with-jquery/](http://www.reynoldsftw.com/2009/03/live-email-validation-with-jquery/)。
- en: Steve's code demonstration is particularly interesting and worth a look at,
    as he uses jQuery's `keyup` function to check validation against the e-mail expression
    in real time.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 史蒂夫的代码演示特别有趣，值得一看，因为他使用 jQuery 的 `keyup` 函数实时检查电子邮件表达式的验证。
- en: For our purposes, we'll be borrowing Steve's regular expression function and
    fitting it into the validation check we've already started, which works on the
    `blur` function.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的目的，我们将借用史蒂夫的正则表达式函数，并将其适应到我们已经开始的验证检查中，这个检查是在 `blur` 函数上工作的。
- en: 'First up, below our existing script, we''ll add in Steve''s `isValidEmailAddress`
    function as follows:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在我们现有的脚本下面，我们将添加史蒂夫的 `isValidEmailAddress` 函数，如下所示：
- en: '[PRE17]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Next, we'll take a close look at our existing script. What we want to do, is
    after checking for a value of nothing (`val().length == 0`), we'll double-check
    that the input field is not the email field.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将仔细检查我们现有的脚本。我们想要做的是，在检查到没有值（`val().length == 0`）之后，我们会再次检查输入字段是否不是电子邮件字段。
- en: Using Firefox and Firebug, I explored the DOM and discovered that the email
    field form has a unique class named as `.fldemail`.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Firefox 和 Firebug，我探索了 DOM 并发现电子邮件字段表单具有一个名为 `.fldemail` 的唯一类。
- en: We'll place our new statement as an extension of our current if statement with
    an `else if` statement before our general `else` statement.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把我们的新语句作为我们当前的 if 语句的扩展，并在我们一般的 else 语句之前使用一个 `else if` 语句。
- en: 'Our updated `blur` script now looks like this (note the new email validation,
    `if...else` statement in bold):'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 我们更新的 `blur` 脚本现在如下所示（注意加粗的新的电子邮件验证，`if...else` 语句）：
- en: '[PRE18]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'We can now not only check for empty fields, but also check for a valid e-mail
    address on `blur` of a field input:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们不仅可以检查空字段，还可以在字段输入的 `blur` 时检查有效的电子邮件地址：
- en: '![Properly formatted e-mail validation](img/1742_04_26.jpg)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![正确格式的电子邮件验证](img/1742_04_26.jpg)'
- en: Tip
  id: totrans-200
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Validation tip: don''t go overboard!**'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '**验证提示：不要过度使用！**'
- en: The cforms II plugin server-side validation is more than adequate. Again, we're
    just trying to speed things along with a little client-side validation, and not
    frustrate our users because we've created a bunch of strict formatting rules for
    data. Some people may have phone numbers, or zip codes that are a little differently
    formatted than you would expect, and for most intents and purposes, this is OK.
    Your best bet is to use your jQuery validation to prompt hints and inline help
    and guide the user, rather than force them to comply with exact data formatting.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: cforms II 插件的服务器端验证已经足够了。再次强调，我们只是想通过一点客户端验证来加快速度，并且不想因为为数据创建了一堆严格的格式化规则而让用户感到沮丧。有些人的电话号码或邮政编码的格式可能与您预期的有所不同，但就大多数情况而言，这是可以接受的。您最好使用
    jQuery 验证来提示提示和内联帮助，并指导用户，而不是强迫他们遵守精确的数据格式。
- en: 'Final thoughts and project wrap up: It''s all about graceful degrading'
  id: totrans-203
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最后的想法和项目总结：一切都关乎优雅的降级
- en: As with everything you do with jQuery, you need to keep in mind that you're
    creating useful enhancements that are great to have, but if for some reason a
    user didn't have JavaScript enabled or available, the process or site won't break.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 与您使用 jQuery 所做的一切一样，您需要记住，您正在创建的是非常有用的增强功能，这些功能很棒，但如果某个用户由于某种原因没有启用或可用 JavaScript，流程或站点不会中断。
- en: Our client is very happy with our seamless registration solution. Going through
    the registration process with JavaScript disabled, the registration process does
    work just fine using the standard browser back keys. The only drawback I find
    is that the registration form loads up *outside* of the WordPress theme, which
    is what we had to do so it would load in nicely into the ColorBox modal window.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的客户对我们无缝的注册解决方案非常满意。禁用 JavaScript 进行注册过程时，注册过程使用标准浏览器返回键完全可以正常工作。我唯一发现的缺点是，注册表单会*在*
    WordPress 主题之外加载，这是我们必须做的，以便它可以很好地加载到 ColorBox 模态窗口中。
- en: On the whole, I don't think this is that big of a problem. Going through my
    various website stats, I'm hard-pressed to find a visitor who didn't have JavaScript
    enabled. The two or three who didn't were probably in text-only browsers, so a
    lack of WordPress theming would probably not be noticed at all (in fact, it's
    probably nice for disabled users using text-to-speech browsers, not having to
    wade through the header info to get to the form).
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，我不认为这是一个很大的问题。浏览了我的各种网站统计数据后，我很难找到一个没有启用 JavaScript 的访客。那两三个没有启用 JavaScript
    的可能是在纯文本浏览器中，所以缺少 WordPress 主题可能根本不会被注意到（事实上，对于使用文本转语音浏览器的残障用户来说，不必费力浏览头部信息以到达表单可能是一件好事）。
- en: 'Because we''re always thinking of hypotheticals in this title, if by some chance,
    the client ever decided they''d like the form to work outside of ColorBox within
    the WordPress template in the event JavaScript was disabled, I''ve come up with
    the following solution:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 因为在这个标题中我们总是考虑假设情况，如果恰好，客户决定在事件 JavaScript 被禁用的情况下，希望表单在 WordPress 模板之外正常工作，我想出了以下解决方案：
- en: First, you'd need to load the form into *two* WordPress pages. One named `register`,
    as we've done with the special template and another one named `register-b` (that's
    just the permalink slug, the header could still say **Register** on both pages).
    For the `register-b` page, you would not assign the special template; you'd leave
    the **Page Template** as **Default Template**. You can place a cform on to as
    many pages and posts as you like, so having this form in two places definitely
    won't be a problem.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，您需要将表单加载到*两个* WordPress 页面中。一个命名为`register`，就像我们在特殊模板中所做的一样，另一个命名为`register-b`（这只是永久链接的缩略名，标题仍然可以在两个页面上都是**Register**）。对于`register-b`页面，您不会分配特殊模板；您会将**页面模板**保留为**默认模板**。您可以在尽可能多的页面和文章中放置一个
    cform，因此在两个位置放置此表单绝对不会成为问题。
- en: 'Next, you''ll go into the `category-3.php` Events template page and change
    the link to call the alternative, default themed page as follows (note the bold
    `-b` is the only difference from our original link):'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您将进入`category-3.php`事件模板页面，并更改链接以调用替代的默认主题页面，如下所示（请注意，粗体的`-b`是与我们原始链接唯一的不同之处）：
- en: '[PRE19]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Last, in your `custom-jquery.js` file, you'll simply create a jQuery script
    that will rewrite that `href` link to the modal page form by removing the `-b`.
    Be sure to place this script *before* your colorBox function scripts, just to
    make sure the `href` transforms before setting up the colorBox functions.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在你的 `custom-jquery.js` 文件中，你只需创建一个 jQuery 脚本，将 `href` 链接重写为删除 `-b` 的模态页面表单。确保将此脚本
    *放在* 您的 colorBox 功能脚本之前，只是为了确保在设置 colorBox 功能之前 `href` 转换。
- en: '[PRE20]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: If JavaScript is enabled, jQuery will change all the register `href` instances
    and the whole process will flow as planned using the ColorBox plugin. If not,
    the user will register using the standard WordPress theme form and not be any-the-wiser.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 如果启用了 JavaScript，jQuery 将更改所有注册的 `href` 实例，并且整个流程将按计划使用 ColorBox 插件进行。如果没有，用户将使用标准的
    WordPress 主题表单注册，而不会受到任何影响。
- en: 'As you can see in the following screenshot, the form would just load in as
    part of the site if JavaScript were disabled:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您在以下截图中所见，如果 JavaScript 被禁用，表单将只作为站点的一部分加载：
- en: '![Final thoughts and project wrap up: It''s all about graceful degrading](img/1742_04_27.jpg)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![最终思考和项目总结：一切都关乎优雅的退化](img/1742_04_27.jpg)'
- en: Summary
  id: totrans-216
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'We''ve now learned how to:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在学会了如何：
- en: Really leverage a theme to aid in jQuery enhancements
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 真正利用主题来帮助 jQuery 增强。
- en: Enhance the very robust cforms II WordPress plugin with the jQuery ColorBox
    plugin and a few custom scripts
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 jQuery ColorBox 插件和一些自定义脚本增强非常强大的 cforms II WordPress 插件。
- en: And this was just one of many ways to achieve this particular solution! As the
    aim of this book is using jQuery within WordPress, I went down a route that focused
    more on jQuery and accessible WordPress features. But sure, we could have plugin-ized
    the ColorBox plugin; we could have plugin-ized the whole thing! Or made a plugin
    that just extended the cforms plugin. The list of solution strategies is almost
    endless.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 而这只是许多实现这个特定解决方案的方法之一！由于本书的目标是在 WordPress 中使用 jQuery，我选择了更注重 jQuery 和易于访问的 WordPress
    功能的路线。但当然，我们可以将 ColorBox 插件制作成插件；我们可以将整个东西制作成插件！或者制作一个仅扩展 cforms 插件的插件。解决方案策略的列表几乎是无穷无尽的。
- en: Again, you'll need to look at each project and assess it accordingly. Coming
    up in the next chapter, get ready to bust out the "eye candy" with some slick
    HTML and CSS-based chart animation as well as image gallery slideshows and rotators,
    and a few other clever ways to catch your user's attention.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，您需要查看每个项目并据此评估。在下一章中，准备好通过一些流畅的基于 HTML 和 CSS 的图表动画以及图库幻灯片和旋转器，以及一些其他巧妙的方法来吸引用户的注意力。
