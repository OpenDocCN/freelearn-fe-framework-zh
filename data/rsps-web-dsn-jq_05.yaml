- en: Chapter 5. Preparing Images and Videos
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章准备图片和视频
- en: The image preparation to be used in responsive sites has been one of the most
    discussed issues recently because there is no technique approved by W3C yet. Meanwhile,
    the community has created some techniques, each one with its advantages, trying
    to resolve this issue.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，用于响应式站点的图像准备一直是最受讨论的问题之一，因为W3C尚未批准任何技术。与此同时，社区已经创造了一些各具优势的技术，试图解决这个问题。
- en: We will begin this chapter by looking at basic image resizing. This technique
    may be incorporated into the code with no difficulty, but mobile users are waiting
    for better experiences.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从基本图像调整开始本章。这个技术可以轻松地被集成到代码中，但移动用户正在等待更好的体验。
- en: However, only resizing the image is not so effective when it comes to smaller
    devices such as smartphones and tablets, because loading images with high quality
    in those devices may take a long time. Later, we will see the importance of image
    breakpoints and its benefits.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，在小型设备（如智能手机和平板电脑）上仅仅调整图像大小并不够有效，因为在这些设备上加载高质量的图像可能需要很长时间。稍后，我们将看到图像断点的重要性及其好处。
- en: Also, we will focus our attention on videos, since they had been inserted into
    our code before HTML5, avoiding issues on site conversions from fixed to responsive
    ones.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们将关注视频，因为它们在HTML5之前已经插入到我们的代码中，避免了从固定到响应式的站点转换上出现的问题。
- en: Furthermore, we will talk about some available jQuery plugins and how to use
    each one of them, by saving development time and bringing improvements to our
    interface.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们将讨论一些可用的jQuery插件以及如何使用它们，通过节省开发时间并改善界面。
- en: 'In this chapter, we will learn:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学到：
- en: Basic image resizing only using CSS
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只使用CSS的基本图像调整
- en: Why to use image breakpoints
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么使用图像断点
- en: How the picture tag will work
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像标签的工作原理
- en: Controlling the image art direction
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 控制图像艺术方向
- en: Using image breakpoints with jQuery plugins
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用jQuery插件和图像断点
- en: Creating a responsive background with jQuery plugins
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用jQuery插件创建响应式背景
- en: Dealing with high-density displays
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理高密度显示屏
- en: Making the video elements responsive
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使视频元素具有响应性
- en: Basic image resizing only using CSS
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 只使用CSS进行基本图像调整
- en: 'The following code may be used to give freedom to the image to scale whenever
    its parent container had been resized. The maximum width was set to 100 percent
    of the original size and its height may follow the same image proportion automatically:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码可用于使图像在其父容器调整大小时具有缩放自由度。最大宽度设置为原始尺寸的100%，其高度可以自动按照相同的图像比例进行调整：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Although, to use this effectively, the image must be large enough to scale up
    to whatever size we may reasonably expect on the largest possible display. However,
    images that are optimized for desktop sites are still quite heavy for a mobile
    Internet speed.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，要有效使用这一点，图像必须足够大，以便可以在最大可能的显示器上按比例缩放。然而，为桌面站点优化的图像对于移动互联网速度来说仍然相当沉重。
- en: Tip
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'If you are using the `max-width` or `height` tags to resize JPG images in your
    DOM, you will probably see pixelated images only on browser IE7 or older versions.
    However, there is a simple code for solving this problem:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在DOM中使用`max-width`或`height`标记来调整JPG图像，那么你可能只会在IE7或更旧版本的浏览器上看到像素化的图像。然而，有一个简单的代码可以解决这个问题：
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This specific problem was fixed in IE8 and became obsolete in IE9.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这个特定的问题在IE8中被解决，在IE9中变得过时。
- en: Using image breakpoints
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用图像断点
- en: 'Adaptive images are not just about the issue of scaling images. It is about
    dealing with other issues, and variables to be kept in mind when delivering the
    best user experience. Variables such as the following:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 适应性图片不仅仅是关于缩放图片的问题。它涉及到其他问题，以及在提供最佳用户体验时需要牢记的变量。诸如以下：
- en: Screen resolution
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 屏幕分辨率
- en: Bandwidth
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 带宽
- en: Browser width window
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浏览器窗口宽度
- en: The problem of trying to determine the best image to be sent to the browser
    may be independent of each variable. And that is the problem. For instance, knowing
    only the value of the screen resolution does not mean the user has a good bandwidth
    to receive a high-definition picture.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试确定发送到浏览器的最佳图像可能与每个变量都独立无关。这就是问题所在。例如，仅仅知道屏幕分辨率的值并不意味着用户有足够的带宽接收高清晰度图片。
- en: So, based on these facts, how will we make a picture in our web application
    that needs to be displayed with good quality on a bunch of devices, without causing
    a huge waste of bandwidth?
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，基于这些事实，我们将如何在我们的 Web 应用程序中制作一张图片，它需要在许多设备上显示良好的质量，而不会造成巨大的带宽浪费？
- en: '![Using image breakpoints](img/3602OS_05_02.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![使用图片断点](img/3602OS_05_02.jpg)'
- en: 'When we are dealing with bitmap images (non-vectorized images such as SVG),
    the ideal solution seems simple: to serve an image of a different size for each
    group of resolutions, where each of these images would be suitable for certain
    types of devices.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们处理位图图像（非矢量化图像，如 SVG）时，理想的解决方案似乎很简单：为每组分辨率提供不同大小的图片，其中每个图片都适用于某些类型的设备。
- en: 'Usually, we consider three different screen sizes to cover the diversity of
    devices:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，我们考虑三种不同的屏幕尺寸来覆盖设备的多样性：
- en: '**480 px**: Smartphones with standard resolution (mobile-first)'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**480 px**：分辨率标准的智能手机（以移动为先）'
- en: '**1024 px**: iPhone retina (smartphones with high image density), tablets,
    and desktops with normal resolution'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**1024 px**：iPhone Retina（高像素密度智能手机），平板电脑和分辨率普通的桌面电脑'
- en: '**1600 px**: iPad Retina (tablets with high image density) and desktops with
    high resolution'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**1600 px**：iPad Retina（高像素密度平板电脑）和分辨率高的桌面电脑'
- en: There are many techniques that have already been trying to deal with this problem
    and to bring solutions that will help us serve the correct image for each occasion.
    They all work in a way slightly different from each other, and depending on your
    requirements, you will make the choice that best meets your project needs. We
    will see some of them soon.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 已经有许多技术试图解决这个问题，并提供解决方案来帮助我们为每个场合提供正确的图片。它们都以略有不同的方式工作，根据您的需求，您将选择最符合您项目需求的选择。我们很快就会看到其中一些。
- en: How the picture tag works
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图片标签的工作原理
- en: The W3C, facing this need of providing the correct image to the user, is working
    hard to finish studying them. There is an unofficial draft of this initiative,
    which includes the `<picture>` tag and different sources inside it, in its standards,
    in order to make adaptation of the image easier.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 面对为用户提供正确图片的需求，W3C 正在努力研究它们。有一个此项倡议的非官方草案，其中包括了 `<picture>` 标签和不同的来源，以及它在其标准中，以便更容易地对图片进行适应。
- en: Note
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Without this standard, browser developers cannot prepare their browsers to render
    it well. Today, the frontend community is using CSS and JavaScript trying to do
    this same task.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 没有这个标准，浏览器开发人员无法准备好他们的浏览器以良好地渲染它。今天，前端社区正在尝试使用 CSS 和 JavaScript 来完成相同的任务。
- en: 'This is the definition of the `<picture>` tag by W3C:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 W3C 对 `<picture>` 标签的定义：
- en: '"This specification provides developers with a means to declare multiple sources
    for an image, and, through CSS Media Queries, it gives developers control as to
    when those images are to be presented to a user."'
  id: totrans-42
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '"此规范为开发人员提供了声明图像的多个来源的方法，并且通过 CSS 媒体查询，它使开发人员能够控制何时向用户呈现这些图像。"'
- en: 'They also thought of older browsers, which will show a simple image as a fallback
    content. The following is an example of how the tag will be used:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 他们也考虑到了旧版浏览器，这些浏览器将显示一个简单的图片作为备用内容。以下是标签将被使用的示例：
- en: '[PRE2]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: I would recommend checking the updated information about this specification
    at [http://picture.responsiveimages.org/](http://picture.responsiveimages.org/).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议查看有关此规范的更新信息，请访问[http://picture.responsiveimages.org/](http://picture.responsiveimages.org/)。
- en: Control of art direction for responsive images
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对响应式图片的艺术指导的控制
- en: This topic has been discussed a lot recently. Authors should provide different
    sources for images in different sizes, and based on their visual judgment, they
    will focus the main element of the image for that particular breakpoint. This
    is art direction.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这个话题最近已经讨论了很多。作者应该为不同尺寸的图片提供不同的来源，并根据他们的视觉判断，将主要元素聚焦在该特定断点的图片上。这就是艺术指导。
- en: Let me clarify it by showing this case here. When the image is displayed in
    larger sizes, it makes sense for the image to show the couple on the boat and
    the river in the background. The background helps explain where they are but,
    in general, it gives no relevant information. Now, look what happens when we scale
    the image down to fit a smaller screen. It is not art direction.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 让我通过这个案例来澄清一下。当图片以较大的尺寸显示时，图片中显示的是船上的夫妇和背景中的河流是有意义的。背景有助于解释他们的位置，但总的来说，它没有提供任何相关信息。现在，看看当我们将图片缩小以适应较小的屏幕时会发生什么。这不是艺术指导。
- en: '![Control of art direction for responsive images](img/3602OS_05_03.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![响应式图片的艺术方向控制](img/3602OS_05_03.jpg)'
- en: 'Reducing to that size, you can barely recognize the couple. Instead of simply
    resizing the image, it may make sense to crop it to get rid of some of the background
    and focus on it. The end result is an image that works better in a smaller size.
    Let''s compare the left picture (art direction) and the right picture as follows:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 将其缩小到那个尺寸，你几乎认不出这对夫妇。与其简单地调整图片大小，不如裁剪它以摆脱一些背景并集中在它上面更有意义。最终结果是一张在较小尺寸下效果更好的图片。让我们比较左边的图片（艺术方向）和右边的图片如下：
- en: '![Control of art direction for responsive images](img/3602OS_05_04.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![响应式图片的艺术方向控制](img/3602OS_05_04.jpg)'
- en: Focal Point CSS framework
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 焦点 CSS 框架
- en: The Focal Point improves the focus on the most important part of the image before
    scaling it down. This way it allows users to see the main part of the image in
    a larger size on smartphones. All this without the use of JavaScript or jQuery.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 焦点点改善了在缩小图像之前对图像最重要部分的聚焦。这样，它允许用户在智能手机上以较大尺寸看到图像的主要部分。所有这些都不需要使用 JavaScript
    或 jQuery。
- en: With Focal Point, you may define an area that represents the parts you do not
    want to miss out due to smaller resolutions. Parts covered by the Focal Point
    stay visible no matter how far down you scale them.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 使用焦点，您可以定义一个代表您不想因较小分辨率而错过的部分的区域。被焦点覆盖的部分在缩放时保持可见，无论你将它们缩放到多远。
- en: 'The following classnames allow you to crop and resize into a general area of
    the image. Note that X in the class names represents a number between one and
    six:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 以下类名允许您裁剪和调整到图像的一个大致区域。请注意，类名中的 X 表示介于一和六之间的数字：
- en: '**left-X**/**right-X**: These define how many units the image will focus on
    horizontally'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**左-X**/**右-X**：这些定义图像在水平方向上将关注多少个单位'
- en: '**up-X**/**down-X**: These define how many units the image will focus on vertically'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**上-X**/**下-X**：这些定义图像在垂直方向上将关注多少个单位'
- en: '**portrait**: By default, the value is set to landscape. But if an image has
    height more than its width, add the class portrait too'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**纵向**：默认情况下，该值设置为横向。但是如果一个图像的高度大于其宽度，则也添加 `portrait` 类'
- en: How to do it
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何做
- en: 'After downloading the CSS file from [https://github.com/adamdbradley/focal-point](https://github.com/adamdbradley/focal-point),
    let''s insert this code in the `<head>` tag of our DOM:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 从[https://github.com/adamdbradley/focal-point](https://github.com/adamdbradley/focal-point)下载
    CSS 文件后，让我们将此代码插入到我们 DOM 的 `<head>` 标签中：
- en: '[PRE3]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Later, we may see it in the action demonstrated as follows:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 后来，我们可能会看到以下演示中的操作：
- en: '![How to do it](img/3602OS_05_05.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![如何做](img/3602OS_05_05.jpg)'
- en: 'The principle of Focal Point is simple: Imagine a grid of 12 x 12 units put
    upon the picture:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 焦点的原则很简单：想象一个 12 x 12 单位的网格放在图片上：
- en: '![How to do it](img/3602OS_05_06.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![如何做](img/3602OS_05_06.jpg)'
- en: Now, we suppose the head of this individual is the most important part of the
    picture and we need to define it as the Focal Point. Even though the face of this
    individual is on the right side of the picture, it will stay in focus when being
    scaled down to smaller resolutions.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们假设这个人的头是图片中最重要的部分，并且我们需要将其定义为焦点。即使这个人的脸在图片的右边，当缩小到较小分辨率时，它仍然会保持焦点。
- en: 'To define the Focal Point technically, we just need to set two classes of an
    image. These classes may position the Focal Point inside the grid, horizontally
    and vertically. It will start from the center of the grid as shown in the following
    picture:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 要在技术上定义焦点，我们只需设置图像的两个类。这些类可以水平和垂直地定位焦点。它将从网格的中心开始，如下图所示：
- en: '![How to do it](img/3602OS_05_07.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![如何做](img/3602OS_05_07.jpg)'
- en: 'The following is the code to focus on the person''s face:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是专注于人脸的代码：
- en: '[PRE4]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In this example, the Focal Point is defined to focus three grid units from the
    center to the left and then to two units up. The `focal-point` class is as mandatory
    as the surrounding div around the image.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，焦点被定义为从中心向左三个网格单位，然后向上两个单位。`focal-point` 类与图像周围的 div 一样必不可少。
- en: Alternative solutions for the <picture> tag
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <picture> 标签的替代解决方案
- en: We have just seen that W3C is working hard to set a standard to tag the picture
    as soon as possible, which will enable you to provide visual contents that are
    more appropriate for the device you are using to view our site.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚看到，W3C 正在努力制定标准，尽快标记图片，这将使您能够为您用于查看我们网站的设备提供更合适的视觉内容。
- en: Because of the great necessity of this functionality, the community has created
    two JavaScript plugins leading to the expected result accepted by most used browsers.
    They are Foresight and Picturefill.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这种功能的迫切需要，社区创建了两个JavaScript插件，以实现大多数常用浏览器接受的预期结果。它们是Foresight和Picturefill。
- en: Foresight – selecting the right image to display depending on the screen size
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Foresight - 根据屏幕大小选择正确的图像进行显示
- en: Foresight provides web pages the ability to inform whether a user device is
    capable of viewing high-resolution images (such as retina display devices), before
    the image has been requested from the server.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: Foresight为网页提供了在请求从服务器请求图像之前，通知用户设备是否能够查看高分辨率图像（例如视网膜显示设备）的功能。
- en: Additionally, Foresight judges if the user device currently has a fast enough
    network connection for high-resolution images. Depending on the device display
    and the network connectivity, foresight.js will request the appropriate image
    for the webpage.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Foresight会判断用户设备当前的网络连接速度是否足够快，以处理高分辨率图像。根据设备显示和网络连接性，foresight.js将为网页请求适当的图像。
- en: By customizing the `img source` attribute, using methods such as URI templates,
    or finding and replacing values within the URI, it is possible to form requests,
    which were built for your image's resolution variants, and specifically use a
    hybrid implementation of the new CSS `image-set()` function.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 通过自定义`img source`属性，使用诸如URI模板之类的方法，或者在URI中查找和替换值，可以形成为您图像的分辨率变体构建的请求，并具体使用新的CSS
    `image-set()` 函数的混合实现。
- en: 'The basic format is that the `image-set ()` function may have one or many image-set
    variants, each one separated by a comma. Each image-set variant may have up to
    three arguments:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 基本格式是`image-set()`函数可能有一个或多个image-set变体，每个变体由逗号分隔。每个图像集变体最多可以有三个参数：
- en: '**URL**: This is similar to `background-image:url()`.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**URL**：这类似于`background-image:url()`。'
- en: '**Scale factor**: The scale factor argument is used as a multiplier for the
    image''s dimensions applied to identify the image density. Some mobile devices
    have a pixel ratio of 1.5 or 2.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**比例因子**：比例因子参数用作应用于识别图像密度的图像尺寸的乘法器。一些移动设备的像素比是1.5或2。'
- en: '**Bandwidth**: This can be defined as low-bandwidth or high-bandwidth.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**带宽**：这可以定义为低带宽或高带宽。'
- en: Foresight also performs a quick network speed test to make sure the user device
    can handle high resolution images, without making users with slow connectivity
    wait for a long time to download images.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Foresight还执行快速网络速度测试，以确保用户设备能够处理高分辨率图像，而不会让连接速度慢的用户等待很长时间下载图像。
- en: How to do it
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何做到
- en: 'Let''s access the website [https://github.com/adamdbradley/foresight.js](https://github.com/adamdbradley/foresight.js)
    and download the files. Then, we will insert the following code in the `<head>`
    tag of our DOM:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们访问网站[https://github.com/adamdbradley/foresight.js](https://github.com/adamdbradley/foresight.js)并下载文件。然后，我们将在DOM的`<head>`标签中插入以下代码：
- en: '[PRE5]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Let''s see a real example of the following code, where we are using the mobile-first
    concept:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个真实的例子，下面的代码中我们正在使用移动优先的概念：
- en: '[PRE6]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Then, for windows, the width is at least 600 px and 800 px:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，对于窗口，宽度至少为600 px和800 px：
- en: '[PRE7]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'So, we highlighted some words to explain better how it works. The code will
    find the fragment of a name inside the source of the `<img>` tag and will replace
    it by another one. After that, the site will search for the changed name in its
    files, verifying if the required code is there:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我们用一些词来更好地解释它的工作原理。该代码将查找`<img>`标签的源代码中名称的片段，并将其替换为另一个名称。之后，站点将在其文件中搜索更改后的名称，验证所需的代码是否存在：
- en: '[PRE8]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Tip
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: This engine is used to change the suffix of the filename, making it well scalable,
    and it is really good because it avoids a lot of interventions on code when creating
    new responsive images.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 该引擎用于更改文件名的后缀，使其具有良好的可扩展性，这非常好，因为在创建新的响应式图像时可以避免对代码的大量干预。
- en: If we compare images in this example for the difference in KB, we will have
    the larger image with 44 KB, the medium image with 20 KB, and the small image
    with 12 KB. That is not a huge difference for just one image. However, by applying
    it to the entire site, there may be great reduction on the loading of unnecessary
    images.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们比较这个例子中的图像，查看KB的差异，我们将得到44 KB的大图像，20 KB的中图像和12 KB的小图像。对于单个图像来说，这不是一个巨大的差异。然而，将其应用到整个站点，可能会大大减少不必要图像的加载。
- en: '![How to do it](img/3602OS_05_08.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![如何做](img/3602OS_05_08.jpg)'
- en: Picturefill – the solution that most closely resembles the picture tag
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Picturefill – 最接近 picture 标签的解决方案
- en: Picturefill is a JavaScript plugin for responsive images, similar to the future
    `picture` element that is ready to be used today. This very lightweight solution
    uses the `span` tag instead of `picture` or `image` for the sake of its own safety.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: Picturefill 是用于响应式图片的 JavaScript 插件，类似于未来的 `picture` 元素，但现在就可以使用。这个非常轻量级的解决方案使用
    `span` 标签而不是 `picture` 或 `image`，以确保其自身的安全性。
- en: Picturefill natively supports HD (Retina) image replacement. Picturefill also
    has the benefit of good performance, selecting the correct image depending on
    the screen size without downloading the other ones.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: Picturefill 本身支持 HD（Retina）图像替换。 Picturefill 还具有良好的性能优势，根据屏幕大小选择正确的图像，而无需下载其他图像。
- en: For more information about this plugin, you can visit [https://github.com/scottjehl/picturefill](https://github.com/scottjehl/picturefill).
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取有关此插件的更多信息，请访问 [https://github.com/scottjehl/picturefill](https://github.com/scottjehl/picturefill)。
- en: How to do it
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何做
- en: 'After downloading the files of this solution, let''s insert this code in the
    `<head>` tag of your DOM:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 下载此解决方案的文件后，让我们将此代码插入到您 DOM 的 `<head>` 标签中：
- en: '[PRE9]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'This is the code to be used in HTML. Note that it requires that you specify
    the source of each image and their variations. See the following example:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在 HTML 中要使用的代码。请注意，它要求您指定每个图像及其变体的来源。请参阅以下示例：
- en: '[PRE10]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Maybe some projects need it as a solution (the entire specification inside the
    HTML code and also their image variations), but we should bring scalability issues
    if we have many images on the site and problems for site maintenance.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 或许有些项目需要将其作为解决方案（在 HTML 代码中放置整个规范及其图像变体），但如果网站上有很多图像，可能会带来可扩展性问题和网站维护问题。
- en: Responsive background images by using jQuery plugins
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 jQuery 插件实现响应式背景图片
- en: Positioning a background image is not always an easy task for responsive sites
    because its correct visualization depends on the behavior of its contents.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 对于响应式站点来说，定位背景图并不总是一件容易的事情，因为其正确的显示取决于其内容的行为。
- en: 'Just to clarify, let me show you a sample of this problem:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 为了澄清，让我展示这个问题的一个示例：
- en: '![Responsive background images by using jQuery plugins](img/3602OS_05_09b.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![使用 jQuery 插件实现响应式背景图片](img/3602OS_05_09b.jpg)'
- en: 'The problem is that sometimes we fix the content to keep the background still
    correct and it needs to change. There are two plugins that help a lot in positioning
    this background: Anystretch and Backstretch.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 问题在于，有时我们会固定内容以保持背景正确，但需要更改。有两个插件对定位此背景非常有帮助：Anystretch 和 Backstretch。
- en: Anystretch – stretching your background easily
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Anystretch – 轻松拉伸背景
- en: Anystretch is a jQuery plugin that allows you to add a dynamically-resized background
    image to any page or block-level element. Originally, Anystretch was forked from
    Backstretch.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: Anystretch 是一个 jQuery 插件，允许您向任何页面或块级元素添加动态调整大小的背景图像。最初，Anystretch 是从 Backstretch
    派生出来的。
- en: The image will stretch to fit the page/element and will be automatically resized
    as the window size changes. There are some options to configure it such as horizontal
    positioning, vertical positioning, speed, positioning of the element, and data
    name.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图像将拉伸以适应页面/元素，并随着窗口大小的更改而自动调整大小。有一些选项可以配置它，例如水平定位、垂直定位、速度、元素定位和数据名称。
- en: Another advantage of this plugin is if we want to change the image after Anystretch
    has been loaded, we will only need to come up with it again, informing the new
    path.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 此插件的另一个优点是，如果我们在加载 Anystretch 后要更改图像，我们只需要再次进行处理，提供新路径即可。
- en: Tip
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Yes, we can use it together with the Breakpoints.js plugin as we have seen in
    [Chapter 2](ch02.html "Chapter 2. Designing Responsive Layouts/Grids"), *Designing
    Responsive Layouts/Grids*, making it possible to change the image path and coming
    up with Anystretch again, if it is necessary.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，我们可以与 Breakpoints.js 插件一起使用，就像我们在[第 2 章](ch02.html "第 2 章。设计响应式布局/网格")中所看到的*设计响应式布局/网格*，这样就可以更改图像路径并再次使用
    Anystretch，如果需要的话。
- en: How to do it
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何做
- en: 'After downloading the files from [https://github.com/danmillar/jquery-anystretch](https://github.com/danmillar/jquery-anystretch),
    let''s use the following HTML code just to clarify how it works:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 从 [https://github.com/danmillar/jquery-anystretch](https://github.com/danmillar/jquery-anystretch)
    下载文件后，让我们使用以下 HTML 代码来澄清其工作原理：
- en: '[PRE11]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'For this structure, there are two highlighted words:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个结构，有两个突出的词语：
- en: '`stretchMe`: This is used to identify that those elements will be handled by
    the plugin'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`stretchMe`：这用于标识那些将由插件处理的元素'
- en: '`data-stretch`: This will inform the plugin what image may become a background'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data-stretch`：这将通知插件哪个图像可能成为背景'
- en: At the bottom of the DOM (before the `</body>` closing tag), we will need to
    include the jQuery code and the Anystretch script. Then, we will execute the plugin
    for all elements that were set by the classname `stretchMe` (just a suggested
    name).
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DOM 的底部（在 `</body>` 结束标记之前），我们需要包含 jQuery 代码和 Anystretch 脚本。然后，我们将对所有按照 `stretchMe`
    类名设置的元素执行插件（只是一个建议的名称）。
- en: '[PRE12]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'And this is the visual result of the plugin applied to a div element:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 这是将插件应用于 div 元素的视觉结果：
- en: '![How to do it](img/3602OS_05_10b.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作](img/3602OS_05_10b.jpg)'
- en: Good so far, but this method, if used will apply the same behavior for all responsive
    backgrounds. In other words, if we want to change the characteristics, we need
    to call the function separately.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，这种方法不错，但是如果使用，将对所有响应式背景应用相同的行为。换句话说，如果我们想要更改特性，我们需要单独调用该函数。
- en: Tip
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: If we call the `anystretch` method twice for the same element, it will replace
    the existing image and stop the previous processing.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们对同一个元素两次调用 `anystretch` 方法，它将替换现有图像并停止先前的处理。
- en: 'If we look at the previous HTML code, there is a class named `div-home`, which
    may be executed with different options, for example:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们查看上一个 HTML 代码，会发现一个名为 `div-home` 的类，它可以使用不同的选项执行，例如：
- en: '[PRE13]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Note
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The `speed` parameter will configure the time to fade in the image after downloading
    it. By default, `positionX` and `positionY` are aligned in the center, but the
    plugin permits us to change it.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '`speed` 参数将配置在下载图像后淡入图像的时间。默认情况下，`positionX` 和 `positionY` 对齐在中心，但是插件允许我们更改它。'
- en: Backstretch – creating a responsive background slideshow
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Backstretch – 创建响应式背景幻灯片
- en: Backstretch is a jQuery plugin that allows users to add a dynamically resized
    background image to any page or element and it was the basis of the Anystretch
    plugin.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: Backstretch 是一个 jQuery 插件，允许用户向任何页面或元素添加动态调整大小的背景图像，它是 Anystretch 插件的基础。
- en: However, Backstretch evolved and now also offers to resize the background images
    from the slideshow element dynamically. All of these background images will stretch
    to fit the page/element and will be automatically resized as the window/element
    size changes.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，Backstretch 发展了，现在还提供动态调整幻灯片元素的背景图像大小。所有这些背景图像将拉伸以适应页面/元素，并且将随着窗口/元素大小的更改而自动调整大小。
- en: Another good improvement is the fetch of images that will be used after the
    page is loaded, this way the users will not have to wait too long to complete
    the download of the image.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个很好的改进是在页面加载后获取将要使用的图像，这样用户就不必等待太长时间才能完成图像的下载。
- en: You can find the files to be downloaded at [https://github.com/srobbin/jquery-backstretch](https://github.com/srobbin/jquery-backstretch).
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在 [https://github.com/srobbin/jquery-backstretch](https://github.com/srobbin/jquery-backstretch)
    找到要下载的文件。
- en: How to do it
  id: totrans-140
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何操作
- en: 'At the bottom of the DOM (before the `</body>` closing tag), we will include
    the jQuery and the Backstretch libraries. Then we will execute the plugin attaching
    the Backstrech to the element''s background:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DOM 底部（在 `</body>` 结束标记之前），我们将包括 jQuery 和 Backstretch 库。然后，我们将执行插件，将 Backstrech
    附加到元素的背景上：
- en: '[PRE14]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'And the following is the visual result:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是视觉结果：
- en: '![How to do it](img/3602OS_05_11.jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作](img/3602OS_05_11.jpg)'
- en: By default, the image alignment (vertical and horizontal) is set to the center
    because it is more usual for people who are using this solution, but we can turn
    it off, if necessary. The other option included is the `fade` parameter to configure
    the time to fade in the image. The `parameter` duration is used for slideshows
    and it is related to the amount of time (in milliseconds) each slide will be displayed
    before switching it.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，图像的对齐（垂直和水平）设置为中心，因为对于使用此解决方案的人来说更常见，但是如果需要，我们可以关闭它。另一个包括的选项是 `fade` 参数，用于配置图像淡入的时间。`parameter`
    持续时间用于幻灯片，它与每个幻灯片显示之前的时间（以毫秒为单位）有关。
- en: 'We may also attach the Backstretch to any block-level element. By default,
    the `<body>` tag will receive this responsive background. To do this, a better
    way is by defining a class to receive this action using the following code instead
    of the previous one:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以将 Backstretch 附加到任何块级元素上。默认情况下，`<body>` 标记将接收此响应式背景。要做到这一点，更好的方法是通过使用以下代码定义一个类来接收此操作，而不是使用上一个代码：
- en: '[PRE15]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Or, to start a slideshow, just inform an array of images and the amount of
    time between slides:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，要启动幻灯片放映，只需提供一个图像数组和幻灯片之间的时间量：
- en: '[PRE16]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: This plugin was well documented and provides a slideshow API for better handling.
    It can be found at [https://github.com/srobbin/jquery-backstretch#slideshow-api](https://github.com/srobbin/jquery-backstretch#slideshow-api).
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 此插件有很好的文档，并提供了用于更好处理的幻灯片 API。可以在 [https://github.com/srobbin/jquery-backstretch#slideshow-api](https://github.com/srobbin/jquery-backstretch#slideshow-api)
    找到它。
- en: Dealing with high-density displays
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理高密度显示屏
- en: 'Screen density refers to the number of device pixels on a physical surface.
    It is often measured in **pixels per inch** (**PPI**). Apple has coined the marketing
    term **Retina** for its double-density displays. According to Apple''s official
    website:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕密度指的是物理表面上的设备像素数量。通常以**每英寸像素** (**PPI**) 进行测量。苹果为其双倍密度显示器创造了市场术语**视网膜**。根据苹果官方网站的说法：
- en: '"Retina display''s pixel density is so high your eye is unable to distinguish
    individual pixels."'
  id: totrans-153
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “视网膜显示屏的像素密度非常高，以至于您的眼睛无法区分单个像素。”
- en: In other words, the retina display has a high enough pixel density to prevent
    pixelation to be noticeable to the human eye. But, because these displays are
    being widely implemented and used, it is more important than ever to create websites
    and apps that support these displays.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，视网膜显示器的像素密度足够高，以至于人眼无法注意到像素化。但是，由于这些显示器正在广泛实施和使用，因此更加重要的是创建支持这些显示器的网站和应用程序。
- en: 'In the following figure, we compared the pixels between Retina and a standard
    definition display. In Retina display, there are double the pixels in the same
    amount of space as you would have with a traditional display:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在下图中，我们比较了视网膜和标准定义显示器之间的像素。在视网膜显示器中，与传统显示器相比，相同空间内的像素是双倍的：
- en: '![Dealing with high-density displays](img/3602OS_05_12.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![处理高密度显示屏](img/3602OS_05_12.jpg)'
- en: Note
  id: totrans-157
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The word double is not exactly the value that is used for all devices that support
    high-density images. Currently, there are other screen densities in the market
    whose density values are 1.5 and 2.25.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 单词“double”并非所有支持高密度图像的设备所使用的确切值。目前，市场上还有其他屏幕密度，其密度值为1.5和2.25。
- en: How to do it
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到
- en: 'The common value for retina images is twice the value of the normal images.
    So, by using media queries, we can test if the browser supports high-density images.
    Let''s check it in the following example:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 视网膜图像的通常值是普通图像值的两倍。因此，通过使用媒体查询，我们可以测试浏览器是否支持高密度图像。让我们在下面的示例中检查一下：
- en: '[PRE17]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'If the browser accepts, we make a request for another image to be displayed.
    However, this usage makes two image requests: one before the check and the other
    inside of media queries.'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 如果浏览器接受，我们会请求另一张图像来显示。然而，这种用法会产生两次图像请求：一次在检查之前，另一次在媒体查询内部。
- en: Now, let's see how we can make only one request using Foresight.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看如何使用 Foresight 只发出一次请求。
- en: How to do it using Foresight
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何使用 Foresight 完成
- en: This plugin has the ability to detect which screen density the device is showing,
    before displaying any image to the user.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 该插件具有在向用户显示任何图像之前检测设备显示的屏幕密度的能力。
- en: 'Let''s see it in the following example:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在下面的示例中看看：
- en: '[PRE18]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: In this example, the browser checks which image element has the class `fs-img`
    and before showing any image (default behavior of Foresight), it checks if it
    has support for retina images; in addition, it can check if the user is in a high
    bandwidth.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，浏览器会检查哪个图像元素具有类`fs-img`，并在显示任何图像之前（Foresight 的默认行为）检查它是否支持视网膜图像；此外，它还可以检查用户是否处于高带宽状态。
- en: Note that before requesting the `castle-small.jpg` file, for example, it will
    find the suffix `-small` and replace it with `-small-2x` and then request for
    the file `castle-small-2x.jpg`.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在请求`castle-small.jpg`文件之前，例如，它会查找后缀`-small`并将其替换为`-small-2x`，然后请求文件`castle-small-2x.jpg`。
- en: There is an online tool that helps calculating the size that the image should
    have if viewed with retina. It is available at [http://teehanlax.com.s3.amazonaws.com/files/teehanlax_density_converter.html](http://teehanlax.com.s3.amazonaws.com/files/teehanlax_density_converter.html).
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '有一个在线工具可以帮助计算图像在视网膜上查看时应该具有的大小。可在 [http://teehanlax.com.s3.amazonaws.com/files/teehanlax_density_converter.html](http://teehanlax.com.s3.amazonaws.com/files/teehanlax_density_converter.html)
    获取。 '
- en: Making responsive video elements
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 制作响应式视频元素
- en: Before using HTML5 in our website development, the use of videos was restricted
    to the acceptance of Adobe Flash Player on devices. However, that obligation does
    not exist anymore because of the great effort in the development of `<video>`
    in HTML5, and also very powered by the positioning of Apple to deny Adobe Flash
    Player on their devices.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的网站开发中使用 HTML5 之前，视频的使用受限于设备对 Adobe Flash Player 的接受。然而，由于 HTML5 中 `<video>`
    的大力发展，以及苹果公司在其设备上拒绝 Adobe Flash Player 的立场，这种义务不再存在。
- en: 'Currently, this element `<video>` is very well accepted in the existing devices
    and modern browsers (IE9 and later), making its handling and especially its flexibility
    on responsive websites much easier. Just to clarify, the following is how the
    `video` tag is commonly seen on DOM:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，这个元素 `<video>` 在现有设备和现代浏览器（IE9及以上版本）中得到了很好的接受，使得其在响应式网站上的处理尤其是灵活性更加容易。仅为澄清，以下是
    `video` 标签在 DOM 中通常的样子：
- en: '[PRE19]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The CSS code which makes the video fluid is quite simple:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 使视频流畅的 CSS 代码非常简单：
- en: '[PRE20]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: However, there are operational differences between the old and new browsers
    and to increase the accessibility of the content. It is usually preferable to
    use a safer way. This path would be to keep using embedded videos or the `<iframe>`
    tags. We will soon see how to make those videos a little more responsive and flexible.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，老旧浏览器和新浏览器之间存在操作差异，并且为了增加内容的可访问性。通常更倾向于使用更安全的方法。这条路就是继续使用嵌入式视频或 `<iframe>`
    标签。我们很快就会看到如何使这些视频更具响应性和灵活性。
- en: Now, let's focus on the current technology. The good news is that video providers
    such as YouTube or Vimeo have already been supporting the `<video>` tag, but it
    is still not the default behavior. This differently used code, depending on the
    device, may also become a problem because we need to adapt the code to each situation.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们专注于当前的技术。好消息是，视频提供商如 YouTube 或 Vimeo 已经支持 `<video>` 标签，但这仍然不是默认行为。这个在不同设备上使用的代码可能会成为一个问题，因为我们需要根据每种情况来适应代码。
- en: To solve this problem of adaptation, they created the FitVids plugin.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 解决适应性问题的方法是他们创建了 FitVids 插件。
- en: FitVids – a quick win solution for responsive videos
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: FitVids – 响应式视频的快速解决方案
- en: 'FitVids is a lightweight jQuery plugin that automates the job of making the
    video width fluid in our responsive web design by creating a wrapper around the
    iframe to preserve the ratio, otherwise the ratio of iframed videos will look
    like this:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: FitVids 是一个轻量级的 jQuery 插件，通过创建一个包装器来自动调整我们响应式网页设计中视频宽度的工作，以保持其比例，否则被嵌入的视频的比例将会是这样：
- en: '![FitVids – a quick win solution for responsive videos](img/3602OS_05_15.jpg)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![FitVids – 响应式视频的快速解决方案](img/3602OS_05_15.jpg)'
- en: The currently supported players are YouTube, Vimeo, Blip.tv, Viddler, and Kickstarter.
    But if it is necessary to use our own player, there is an option to specify this
    custom player.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 目前支持的播放器有 YouTube、Vimeo、Blip.tv、Viddler 和 Kickstarter。但如果需要使用我们自己的播放器，有一个选项可以指定自定义播放器。
- en: How to do it
  id: totrans-184
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何做
- en: 'At the bottom of DOM (before the `</body>` closing tag), we will need to include
    the jQuery code and the FitVids script. Then, we only need to attach its execution
    into a class or ID of the element, as follows:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DOM 底部（在 `</body>` 结束标签之前），我们需要包含 jQuery 代码和 FitVids 脚本。然后，我们只需要将其执行附加到元素的类或
    ID 上，如下所示：
- en: '[PRE21]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'After that, let''s use this HTML code just as a sample to see how it works:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，让我们使用这段 HTML 代码只是作为示例来看看它是如何工作的：
- en: '[PRE22]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The following screenshot shows a sample of YouTube, Vimeo, and Viddler videos
    using FitVids:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了使用 FitVids 的 YouTube、Vimeo 和 Viddler 视频的示例：
- en: '![How to do it](img/3602OS_05_13.jpg)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![如何做](img/3602OS_05_13.jpg)'
- en: Exercise – creating different image versions for featured homepage images
  id: totrans-191
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习 – 为特色主页图片创建不同的图像版本
- en: 'As we have just seen, loading the correct image for each device is very important
    for our responsive site. So, let''s practice this technique in our design showing
    different images in the following breakpoints:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们刚刚看到的，为每个设备加载正确的图像对于我们的响应式网站非常重要。因此，让我们在以下断点中的设计中实践这项技术，展示不同的图像：
- en: Maximum width = 480
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最大宽度 = 480
- en: Maximum width = 1024
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最大宽度 = 1024
- en: Minimum width = 1025
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最小宽度 = 1025
- en: 'The following screenshot shows the site along with the photos I''m referring
    to, as we saw in [Chapter 2](ch02.html "Chapter 2. Designing Responsive Layouts/Grids"),
    *Designing Responsive Layouts/Grids*. For this exercise, I''m referring to the
    highlighted images inside the boxes:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了网站以及我正在引用的照片，就像我们在[第二章](ch02.html "第二章. 设计响应式布局/网格")中看到的那样，*设计响应式布局/网格*。对于这个练习，我指的是盒子内突出显示的图像：
- en: '![Exercise – creating different image versions for featured homepage images](img/3602OS_05_14.jpg)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![创建首页特色图像的不同版本的练习](img/3602OS_05_14.jpg)'
- en: For this activity, I recommend using the Foresight plugin because it provides
    a better visualization of the image sources and breakpoints.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这项活动，我建议使用 Foresight 插件，因为它可以更好地可视化图像源和断点。
- en: Tip
  id: totrans-199
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Do not forget to check if the specific device you are using supports to show
    high-density images.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 不要忘记检查您正在使用的特定设备是否支持显示高密度图像。
- en: Summary
  id: totrans-201
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have learned to perform a simple conversion from a fixed
    image to a flexible image, only to understand it is not enough to make them adaptable
    to different devices. Also, we have learned other ways to provide the right image
    to the user by using the Foresight and Picturefill plugins. We have also controlled
    the art direction, focusing on the main element in the picture when the image
    is being resized using the FocalPoint framework. Further, we have learned to make
    the video dimensions fluid by using the FitVids plugin with no stress.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了将固定图像转换为灵活图像的简单方法，但仅仅理解这一点并不足以使它们适应不同的设备。此外，我们还学习了通过使用 Foresight 和
    Picturefill 插件向用户提供正确图像的其他方法。当使用 FocalPoint 框架调整图像大小时，我们还控制了艺术方向，将焦点放在图片中的主要元素上。此外，我们还学会了使用
    FitVids 插件使视频尺寸变得流动起来而不感到紧张。
- en: In the next chapter, we will know which slider plugins are prepared for responsive
    sites, learn how to build them, change some options and effects, and create a
    good impression on the users. In addition, we will understand which gestures are
    commonly used and implemented on mobile sites.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将了解哪些幻灯片插件适用于响应式网站，学习如何构建它们，更改一些选项和效果，并给用户留下良好的印象。此外，我们还将了解在移动网站上通常使用和实现的手势。
