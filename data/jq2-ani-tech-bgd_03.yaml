- en: Chapter 3. Background Animation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章。背景动画
- en: '*In the last chapter, we used the `fadeIn()` and `fadeOut()` methods to animate
    image elements. In this chapter, we''ll be using the `animate()` effect to animate
    the background color and learn how to animate the position of background images
    inside our elements. In [Chapter 7](ch07.html "Chapter 7. Custom Animations"),
    *Custom Animation*, we''ll go further in depth as to everything that the `animate()`
    method is capable of.*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*在上一章中，我们使用`fadeIn()`和`fadeOut()`方法来对图像元素进行动画处理。在本章中，我们将使用`animate()`效果来对背景颜色进行动画处理，并学习如何对元素内部的背景图像的位置进行动画处理。在[第7章](ch07.html
    “第七章。自定义动画”)，*Custom Animation*中，我们将更深入地了解`animate()`方法所能做的一切。*'
- en: Background-color animation
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 背景颜色动画
- en: Animating the background color of an element is a great way to draw our users'
    eyes to the object we want them to see. Another use for animating the background
    color of an element is to show that something has happened to the element. It's
    typically used in this way if the state of the object changes (added, moved, deleted,
    and so on), or if it requires attention to fix a problem. We'll learn about some
    of these things in the next two chapters.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 对元素的背景颜色进行动画处理是吸引用户眼球到我们想让他们看到的对象的绝佳方法。对元素的背景颜色进行动画处理的另一个用途是显示发生了某些变化。如果对象的状态发生了变化（添加、移动、删除等），或者需要关注以解决问题，通常会以这种方式使用动画。我们将在接下来的两章中了解到其中的一些内容。
- en: Note
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Due to the lack of support in jQuery 2.0 for animating background-color, we'll
    be using jQuery UI to give us the functionality we need to create this effect.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 由于jQuery 2.0不支持背景颜色动画，我们将使用jQuery UI来为我们提供所需功能以创建此效果。
- en: We'll be covering all of the beautiful things jQuery UI gives us the ability
    to do in [Chapter 6](ch06.html "Chapter 6. Extended Animations with jQuery UI"),
    *Extending Animations with jQuery UI*.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在[第6章](ch06.html “第六章。使用jQuery UI扩展动画”)中详细介绍jQuery UI给予我们的能力，*使用jQuery UI扩展动画*。
- en: Introducing the animate method
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍动画方法
- en: The `animate()` method is one of the most useful methods jQuery has to offer
    in its bag of tricks in the animation realm. With it, we're able to do things
    such as move an element across the page or alter and animate the properties of
    colors, backgrounds, text, fonts, the box model, position, display, lists, tables,
    generated content, and so on.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '`animate()`方法是jQuery在动画领域提供的最有用的方法之一。借助它，我们能够做一些事情，比如将元素移到页面上的其他位置，或者改变并动画处理颜色、背景、文本、字体、框模型、位置、显示、列表、表格、生成内容等属性。'
- en: Time for action – animating the body background-color
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 对body背景颜色进行动画处理
- en: Following the steps below, we're going to start by creating an example that
    changes the `body` background color.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 按照下面的步骤，我们将从创建一个示例开始，该示例更改`body`的背景颜色。
- en: Start by creating a new file (using our template) called `background-color.html`
    and save it in our `jquery-animation` folder.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先创建一个名为`background-color.html`的新文件（使用我们的模板）并将其保存在`jquery-animation`文件夹中。
- en: 'Next, we''ll need to include the jQuery UI library by adding this line directly
    under our jQuery library:'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要通过在jQuery库下面直接添加这行来包含jQuery UI库：
- en: '```js'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: <script src="img/jquery-ui.min.js"></script>
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <script src="img/jquery-ui.min.js"></script>
- en: '```'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: Note
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: A custom or stable build of jQuery UI can be downloaded from [http://jqueryui.com](http://jqueryui.com),
    or you can link to the library using one of the three **Content Delivery Networks**
    (**CDNs**) below. For the fastest access to the library, go to [http://jqueryui.com](http://jqueryui.com),
    scroll to the very bottom, and look for the **Quick Access** section. Using the
    jQuery UI library JS file there will work just fine for our need of the examples
    in this chapter.
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: jQuery UI的自定义或稳定版本可从[http://jqueryui.com](http://jqueryui.com)下载，或者您可以使用下面三个**内容传送网络**（**CDN**）之一链接到库。要快速访问库，转到[http://jqueryui.com](http://jqueryui.com)，滚动到最底部，找到**快速访问**部分。在这里使用jQuery
    UI库JS文件将完全符合我们本章示例的需求。
- en: 'Media Template: [http://code.jquery.com](http://code.jquery.com)'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 媒体模板：[http://code.jquery.com](http://code.jquery.com)
- en: 'Google: [http://developers.google.com/speed/libraries/devguide#jquery-ui](http://developers.google.com/speed/libraries/devguide#jquery-ui)'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 谷歌：[http://developers.google.com/speed/libraries/devguide#jquery-ui](http://developers.google.com/speed/libraries/devguide#jquery-ui)
- en: 'Microsoft: [http://asp.net/ajaxlibrary/cdn.ashx#jQuery_Releases_on_the_CDN_0](http://asp.net/ajaxlibrary/cdn.ashx#jQuery_Releases_on_the_CDN_0)'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 微软：[http://asp.net/ajaxlibrary/cdn.ashx#jQuery_Releases_on_the_CDN_0](http://asp.net/ajaxlibrary/cdn.ashx#jQuery_Releases_on_the_CDN_0)
- en: 'CDNJS: [http://cdnjs.com/libraries/jquery](http://cdnjs.com/libraries/jquery)'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'CDNJS: [http://cdnjs.com/libraries/jquery](http://cdnjs.com/libraries/jquery)'
- en: 'Then, we''ll add the following jQuery code to the anonymous function:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将以下 jQuery 代码添加到匿名函数中：
- en: '```js'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: var speed = 1500;
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var speed = 1500;
- en: '$( "body" ).animate({ backgroundColor: "#D68A85" }, speed);'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`$( "body" ).animate({ backgroundColor: "#D68A85" }, speed);`'
- en: '$( "body" ).animate({ backgroundColor: "#E7912D" }, speed);'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '$( "body" ).animate({ backgroundColor: "#E7912D" }, speed);'
- en: '$( "body" ).animate({ backgroundColor: "#CECC33" }, speed);'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`$( "body" ).animate({ backgroundColor: "#CECC33" }, speed);`'
- en: '$( "body" ).animate({ backgroundColor: "#6FCD94" }, speed);'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`$( "body" ).animate({ backgroundColor: "#6FCD94" }, speed);`'
- en: '$( "body" ).animate({ backgroundColor: "#3AB6F1" }, speed);'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`$( "body" ).animate({ backgroundColor: "#3AB6F1" }, speed);'
- en: '$( "body" ).animate({ backgroundColor: "#8684D8" }, speed);'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`$( "body" ).animate({ backgroundColor: "#8684D8" }, speed);`'
- en: '$( "body" ).animate({ backgroundColor: "#DD67AE" }, speed);'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`$( "body" ).animate({ backgroundColor: "#DD67AE" }, speed);`'
- en: '```'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: '*What just happened?*'
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: First, we added the jQuery UI library to our page. This was needed because of
    the lack of support for animating the background color in the current version
    of jQuery. Next, we added in the code that will animate our background. We then
    set the `speed` variable to `1500` (milliseconds) so that we can control the duration
    of our animation. Lastly, using the `animate()` method, we set the background
    color of the body element and set the duration to the variable we set above named
    `speed`. We duplicated the same line several times, changing only the hexadecimal
    value of the background color.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们向页面添加了 jQuery UI 库。这是必需的，因为当前版本的 jQuery 不支持动画显示背景颜色。接下来，我们添加了将动画显示背景的代码。然后，我们将`speed`变量设置为`1500`（毫秒），以便我们可以控制动画的持续时间。最后，使用`animate()`方法，我们设置了
    body 元素的背景颜色，并将持续时间设置为我们上面命名为`speed`的变量。我们多次复制了相同的行，只改变了背景颜色的十六进制值。
- en: 'The following screenshot is an illustration of colors that the entire body
    background color animates through:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图是整个 body 背景颜色动画经过的颜色示意图：
- en: '![What just happened?](img/9642_03_01.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![刚才发生了什么？](img/9642_03_01.jpg)'
- en: Chaining together jQuery methods
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 链接在一起的 jQuery 方法
- en: 'It''s important to note that jQuery methods (`animate()`, in this case) can
    be chained together. Our code mentioned previously would look like the following
    if we chained the `animate()` methods together:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，jQuery 方法（在这种情况下为`animate()`）可以链接在一起。如果我们将`animate()`方法链接在一起，我们之前提到的代码将如下所示：
- en: '```js'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '```js'
- en: $("body")
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`$("body")`'
- en: '.animate({ backgroundColor: "#D68A85" }, speed)  //red'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '.animate({ backgroundColor: "#D68A85" }, speed)  //红色'
- en: '.animate({ backgroundColor: "#E7912D" }, speed)  //orange'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '.animate({ backgroundColor: "#E7912D" }, speed)  //橙色'
- en: '.animate({ backgroundColor: "#CECC33" }, speed)  //yellow'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '.animate({ backgroundColor: "#CECC33" }, speed)  //黄色'
- en: '.animate({ backgroundColor: "#6FCD94" }, speed)  //green'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '.animate({ backgroundColor: "#6FCD94" }, speed)  //绿色'
- en: '.animate({ backgroundColor: "#3AB6F1" }, speed)  //blue'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '.animate({ backgroundColor: "#3AB6F1" }, speed)  //蓝色'
- en: '.animate({ backgroundColor: "#8684D8" }, speed)  //purple'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '.animate({ backgroundColor: "#8684D8" }, speed)  //紫色'
- en: '.animate({ backgroundColor: "#DD67AE" }, speed); //pink'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '.animate({ backgroundColor: "#DD67AE" }, speed); //粉色'
- en: '```'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'Here''s another example of chaining methods together:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是链接方法的另一个示例：
- en: '`$(selector).animate(properties).animate(properties).animate(properties);`'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '`$(selector).animate(properties).animate(properties).animate(properties);`'
- en: Have a go hero – extending our script with a loop
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 尝试一下吧，英雄- 用循环扩展我们的脚本
- en: In this example we used the `animate()` method and with some help from jQuery
    UI, we were able to animate the body background color of our page. Have a go at
    extending the script to use a loop, so that the colors continually animate without
    stopping once the script gets to the end of the function.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们使用了`animate()`方法，并借助 jQuery UI 的帮助，我们能够动画显示页面的整个背景颜色。试着扩展脚本以使用循环，这样一旦脚本到达函数的末尾，颜色就会持续动画而不会停止。
- en: Pop quiz – chaining with the animate() method
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 突发小测验 - 用 animate() 方法进行链接
- en: Q1\. Which code will properly animate our body background color from red to
    blue using chaining?
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Q1\. 哪个代码能够正确地使用链接从红色渐变到蓝色？
- en: '```js'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '```js'
- en: $("body")
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`$("body")`'
- en: '.animate({ background: "red" }, "fast")'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '.animate({ background: "red" }, "fast")'
- en: '.animate({ background: "blue" }, "fast");'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '.animate({ background: "blue" }, "fast");'
- en: '```'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: '```js'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '```js'
- en: $("body")
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`$("body")`'
- en: '.animate({ background-color: "red" }, "slow")'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '.animate({ background-color: "red" }, "slow")'
- en: '.animate({ background-color: "blue" }, "slow");'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '.animate({ background-color: "blue" }, "slow");'
- en: '```'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: '```js'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '```js'
- en: $("body")
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`$("body")`'
- en: '.animate({ backgroundColor: "red" })'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '.animate({ backgroundColor: "red" })'
- en: '.animate({ backgroundColor: "blue" });'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '.animate({ backgroundColor: "blue" });'
- en: '```'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: '```js'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '```js'
- en: $("body")
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`$("body")`'
- en: .animate({ backgroundColor, "red" }, "slow")
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: .animate({ backgroundColor, "red" }, "slow")
- en: .animate({ backgroundColor, "blue" }, "slow");
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: .animate({ backgroundColor, "blue" }, "slow");
- en: '```'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: The illusion of depth with parallax
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 视差的深度 illision
- en: The term parallax, when used in the context of computer graphics, especially
    video games, refers to the technique of using multiple background layers that
    scroll at slightly different speeds to create the illusion of depth. Although
    not as widely deployed in modern gaming, thanks to the advent of richer 3D graphics
    engines, parallax is still seen frequently in portable gaming devices, and increasingly,
    on the Web.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算机图形学的背景下，特别是在视频游戏中，术语**视差**指的是使用多个背景层，以稍微不同的速度滚动，以创建深度 illision 的技术。尽管在现代游戏中不如以前那样广泛应用，因为有了更丰富的
    3D 图形引擎，但视差仍然经常在便携式游戏设备上看到，并且越来越多地出现在 Web 上。
- en: A parallax effect is achievable using pure CSS, as demonstrated nicely on the
    Silverback site (see [http://silverbackapp.com](http://silverbackapp.com) for
    the effect, and [http://blog.teamtreehouse.com/how-to-recreate-silverbacks-parallax-effect](http://blog.teamtreehouse.com/how-to-recreate-silverbacks-parallax-effect)
    for the details on how it was implemented). This application of parallax will
    only become apparent when the window is resized horizontally. While this is a
    fantastic effect when the window is resized, it doesn't help us if we want the
    effect to take more of a center stage.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 使用纯 CSS 可以实现视差效果，正如在 Silverback 站点上演示得很好一样（请查看[http://silverbackapp.com](http://silverbackapp.com)获取效果，以及[http://blog.teamtreehouse.com/how-to-recreate-silverbacks-parallax-effect](http://blog.teamtreehouse.com/how-to-recreate-silverbacks-parallax-effect)获取有关如何实现的详细信息）。当窗口水平调整大小时，视差的这种应用只有在窗口调整大小时才会显现出来。虽然这在窗口调整大小时是一个很棒的效果，但如果我们希望效果更加突出，这并不能帮助我们。
- en: Time for action – creating the stage and adding the styling
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 创建舞台并添加样式
- en: The underlying page requires just four elements (for this simple example), which
    sit in the `<body>` of the page.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 该底层页面仅需要四个元素（对于此简单示例），这些元素位于页面的`<body>`中。
- en: 'Add the elements in the following structure to a fresh copy of the template
    file, between the `<body>` tag and the first `<script>` tag:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下结构的元素添加到模板文件的新副本中，在第一个`<script>`标签之间：
- en: '```js'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: <div id="background"></div>
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div id="背景"></div>
- en: <div id="midground"></div>
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div id="中景"></div>
- en: <div id="foreground"></div>
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div id="前景"></div>
- en: <div id="ground"></div>
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div id="地面"></div>
- en: '```'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: Save this page as `parallax-horizontal.html` in our `jquery-animation` folder.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此页面保存为`parallax-horizontal.html`，放在我们的`jquery-animation`文件夹中。
- en: 'The CSS in this example is equally as simple as the underlying HTML. Add the
    following code to a new file in your text editor:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此示例中的 CSS 和底层 HTML 一样简单。将以下代码添加到文本编辑器中的新文件中：
- en: '```js'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: div {
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: div {
- en: width:100%;
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: width:100%;
- en: height:1000px;
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: height:1000px;
- en: position:absolute;
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: position:absolute;
- en: left:0;
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: left:0;
- en: top:0;
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: top:0;
- en: '}'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '#background { background:url(../images/background.png) repeat-x 0 0; }'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#背景 { background:url(../images/background.png) repeat-x 0 0; }'
- en: '#midground { background:url(../images/midground.png) repeat-x 0 0; }'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#中景 { background:url(../images/midground.png) repeat-x 0 0; }'
- en: '#foreground { background:url(../images/foreground.png) repeat-x 0 0; }'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#前景 { background:url(../images/foreground.png) repeat-x 0 0; }'
- en: '#stage { background:url(../images/ground.png) repeat-x 0 100%; }'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#舞台 { background:url(../images/ground.png) repeat-x 0 100%; }'
- en: '```'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: Save this file as `parallax-` `horizontal.css` in the `css` directory and update
    the HTML file we just created to link to this file.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此文件保存为`parallax-` `horizontal.css`，放在`css`目录中，并更新我们刚刚创建的 HTML 文件，以链接到此文件。
- en: 'At this point the page should look like the following screenshot:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此时，页面应如下截图所示：
- en: '![Time for action – creating the stage and adding the styling](img/9642_03_02.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![行动时间 - 创建舞台并添加样式](img/9642_03_02.jpg)'
- en: The front area is the ground, the foreground layer is the darker colored bushes,
    the midground is the lighter colored bushes, and the background slice is the sky
    and clouds.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 前景区域是地面，前景层是较暗的灌木丛，中景是较浅的灌木丛，背景是天空和云。
- en: '*What just happened?*'
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: You'll also find the images for this example in the images folder of the code
    download accompanying this book. We have a separate image for each element that
    we wish to be part of the parallax effect, three in this example, one for the
    background, one for the midground, and one for the foreground.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 您还会在此书附带的代码下载的 images 文件夹中找到此示例的图像。我们为每个要成为视差效果一部分的元素准备了单独的图像，在此示例中有三个，一个用于背景，一个用于中景，一个用于前景。
- en: The underlying HTML is also very simple. We just have a separate `<div>` for
    each layer of the background. In CSS, each image layer is positioned absolutely
    so that they overlay each other. Now, let's get the layers of the parallax moving!
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 底层HTML也非常简单。我们只需要为背景的每一层添加一个单独的`<div>`。在CSS中，每个图像层都被绝对定位，这样它们就能重叠在一起。现在，让我们让视差的层移动起来吧！
- en: Time for action – animating the background position
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 时间行动 - 动画背景位置
- en: 'Now, for the `<script>` itself. At the bottom of the HTML file, as usual in
    the empty anonymous function, add the following code:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 现在轮到 `<script>` 本身了。在HTML文件底部，像往常一样，在空匿名函数中添加以下代码：
- en: '```js'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '```js'
- en: var bg = $("#background");
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: var bg = $("#background");
- en: var mg = $("#midground");
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: var mg = $("#midground");
- en: var fg = $("#foreground");
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: var fg = $("#foreground");
- en: $(document).keydown(function(e) {
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: $(document).keydown(function(e) {
- en: if (e.which === 39) { //right arrow key
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: if (e.which === 39) { //右箭头键
- en: 'bg.animate({ backgroundPosition: "-=1px" }, 0, "linear" );'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'bg.animate({ backgroundPosition: "-=1px" }, 0, "linear" );'
- en: 'mg.animate({ backgroundPosition: "-=10px" }, 0, "linear" );'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'mg.animate({ backgroundPosition: "-=10px" }, 0, "linear" );'
- en: 'fg.animate({ backgroundPosition: "-=20px" }, 0, "linear" );'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'fg.animate({ backgroundPosition: "-=20px" }, 0, "linear" );'
- en: '}'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '});'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: If we run this page in a browser now, we should find that as we hold down the
    right arrow key, the different background image slices move at relatively slower
    speeds with the foreground almost rushing past and the background moving leisurely
    along.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们现在在浏览器中运行这个页面，我们应该会发现当我们按住右箭头键时，不同的背景图像切片以相对较慢的速度移动，前景几乎匆匆而过，而背景则悠闲地移动。
- en: '*What just happened?*'
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么?*'
- en: In the script we first cache the selectors we'll be using so that we don't have
    to create a new jQuery object and select the elements from the DOM each time the
    `background-position` changes, which will be very frequently indeed. We then set
    a `keydown` event listener on the document object. Within the anonymous function
    we use as the event handler, we check whether the key code supplied by the `which`
    property of the event object (this is normalized by jQuery so it will be accessible
    via cross-browser) is equal to `39`, which is the key code returned by the right
    arrow key.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在脚本中，我们首先缓存了将要使用的选择器，这样我们就不必在每次`background-position`变化时都创建一个新的jQuery对象并从DOM中选择元素，而这将非常频繁。然后，我们在document对象上设置了一个`keydown`事件监听器。在作为事件处理程序的匿名函数中，我们检查事件对象的`which`属性提供的键码是否等于`39`，这是右箭头键返回的键码。
- en: We then call the `animate()` on `backgroundPosition` and we supplied relative
    values of `-=1px`, `-=10px`, and `-=20px` to move each layer at progressively
    faster speeds, which gives us the parallax effect. These animations are called
    simultaneously, and have their durations set to zero (0) milliseconds and `linear`
    easing. This is the last thing our `keydown` handler needs to do.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们在`backgroundPosition`上调用`animate()`，并为每一层提供`-=1px`、`-=10px`和`-=20px`的相对值，以逐渐加快速度，从而产生视差效果。这些动画同时进行，持续时间设置为零(0)毫秒，并且采用`linear`缓动。这是我们的`keydown`处理程序需要做的最后一件事情。
- en: Have a go hero - extending parallax
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 试试看 - 扩展视差
- en: In this example, the backgrounds animate only from right to left. Extend the
    example so that both the left to right and right to left motion is available.
    Need help getting started? You'll need to create another function for the left
    arrow key and increment the `backgroundPostion` values instead of decrementing
    like we did in our example.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，背景只从右向左进行动画。扩展示例，使左向右和右向左的运动都可用。需要帮助开始吗？您需要为左箭头键创建另一个函数，并递增`backgroundPostion`值，而不是像我们在示例中所做的那样递减。
- en: Automatic background animation
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动化的背景动画
- en: In this example, we're going to make the background image animate up the page
    automatically, without any special interaction from our user.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们将使背景图像在页面上自动上移，而无需我们的用户特别交互。
- en: Time for action – creating an automatic background animation
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 时间行动 - 创建自动化的背景动画
- en: We're going to create an example that will automatically animate the background
    image now.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建一个示例，现在将自动地对背景图像进行动画。
- en: Create a new file using our template called `background-auto.html` and save
    it in our `jquery-animation` directory.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用我们的模板创建一个名为`background-auto.html`的新文件，并将其保存在我们的`jquery-animation`目录中。
- en: 'Since we only have one line of CSS for our example, we aren''t going to create
    a stylesheet. We''re going to drop it in the file we just created (`background-auto.html`)
    under the `<title>` tag:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于我们的示例只有一行CSS，我们不打算创建样式表。我们将其放在我们刚刚创建的文件（`background-auto.html`）下的 `<title>`
    标签下：
- en: '```js'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: <style>
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <style>
- en: body {background:url(images/background.jpg) top center fixed;}
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: body {background:url(images/background.jpg) top center fixed;}
- en: </style>
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </style>
- en: '```'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: Next, we'll remove the stylesheet `<link>` since we won't be using it in this
    example. This will be the line directly after the code we just added.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将删除样式表 `<link>`，因为我们不会在此示例中使用它。这将是我们刚刚添加的代码之后的一行。
- en: 'Lastly, add the following code into our waiting anonymous function:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，将以下代码添加到我们等待的匿名函数中：
- en: '```js'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: var yPos = 0;
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var yPos = 0;
- en: var timer = setInterval(start, 50);
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var timer = setInterval(start, 50);
- en: function start() {
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: function start() {
- en: yPos = yPos - 5;
  id: totrans-146
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: yPos = yPos - 5;
- en: '$(''body'').css({ backgroundPosition: ''50% '' + yPos + ''px'' });'
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '$(''body'').css({ backgroundPosition: ''50% '' + yPos + ''px'' });'
- en: '}'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: The following is a screenshot of what we just created. You'll notice that when
    viewing the example, the background image animates up the back from the bottom
    to the top.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们刚刚创建的屏幕截图。您会注意到，在查看示例时，背景图像从底部向上方向动画。
- en: '![Time for action – creating an automatic background animation](img/9642_03_03.jpg)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![行动时间 - 创建自动背景动画](img/9642_03_03.jpg)'
- en: '*What just happened?*'
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚刚发生了什么？*'
- en: The first thing we did was declare our variable, `yPos`, as an integer. Doing
    this, as you may know, scares off any spooky JavaScript errors that haunt Internet
    Explorer and similarly, non-modern browser versions.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 我们做的第一件事是将我们的变量 `yPos` 声明为整数。做到这一点，你可能知道，会吓跑任何在Internet Explorer和类似的非现代浏览器版本中出现的可怕的JavaScript错误。
- en: Next, we declared our `timer` variable using `setInterval()`. In the previous
    chapter, we learned that the parameters for this method are `function` and `duration`.
    Our function name is `start`, so we set the `function` parameter to that. We also
    set our `duration` to `50` (milliseconds), as this is a suitable time frame for
    our function to wait before executing again.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们使用 `setInterval()` 声明了我们的 `timer` 变量。在上一章中，我们学习了这个方法的参数是 `function` 和
    `duration`。我们的函数名是 `start`，所以我们将 `function` 参数设置为那个。我们还将我们的 `duration` 设置为 `50`（毫秒），因为这是我们的函数在再次执行之前等待的合适时间框架。
- en: Then, we created a function that can be called by our timer named `start`. We
    take the current value of `yPos` and subtract it by five each time our function
    executes. The last line of our function is what does all of the heavy lifting.
    This line animates the `<body>` background image's position vertically five pixels
    each time the function comes to this line in our script.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们创建了一个可以由我们的计时器调用的函数，名为 `start`。我们每次函数执行时，都将 `yPos` 的当前值减去五。我们函数的最后一行是做所有繁重工作的地方。这一行每次我们的脚本中的函数来到这一行时，都会垂直地将
    `<body>` 背景图像的位置向上移动五个像素。
- en: Have a go hero – playing under the hood
  id: totrans-156
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 尝试吧，英雄 - 在引擎盖下玩耍
- en: Have a go at changing the `timer` duration and `yPos` offset values to see how
    these values affect the speed and frame rate at which our background animates.
    Another challenge would be to try to make the background animate horizontally
    instead of vertically, like we did for this example.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试更改 `timer` 持续时间和 `yPos` 偏移值，看看这些值如何影响我们的背景动画的速度和帧率。另一个挑战是尝试使背景水平动画，而不是垂直动画，就像我们为此示例所做的那样。
- en: Let's make it diagonal!
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 让我们使它变成斜线！
- en: Now, instead of making the background image animate vertically, we're going
    to animate it diagonally now. Hold on to your programming hats!
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们不再垂直地使背景图像动画，而是斜向地进行动画。抓住你们的编程帽子！
- en: Time for action – animating the background diagonally
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 对背景进行斜向动画
- en: We're going to make our animation move diagonally now.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们要让我们的动画斜向移动。
- en: 'Let''s use the same file as before (`background-auto.html`) and replace the
    code in our anonymous function with the code below (new code is highlighted):'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们使用与之前相同的文件（`background-auto.html`），并使用以下代码替换我们匿名函数中的代码（新代码已突出显示）：
- en: '```js'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: var xPos = 0;
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var xPos = 0;
- en: var yPos = 0;
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var yPos = 0;
- en: var timer = setInterval(start, 50);
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var timer = setInterval(start, 50);
- en: function start() {
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: function start() {
- en: xPos = xPos - 5;
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: xPos = xPos - 5;
- en: yPos = yPos - 5;
  id: totrans-169
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: yPos = yPos - 5;
- en: '$(''body'').css({ backgroundPosition: xPos +'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '$(''body'').css({ backgroundPosition: xPos +'
- en: '''px '' +  yPos + ''px'' });'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '''px '' +  yPos + ''px'' });'
- en: '}'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: Save this file as `background-auto-diagonal.html`, and view it in your web browser.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此文件保存为 `background-auto-diagonal.html`，并在您的网络浏览器中查看。
- en: 'Previewing the animation should look like this:'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 预览动画应该是这样的：
- en: '![Time for action – animating the background diagonally](img/9642_03_04.jpg)'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 - 对背景进行对角线动画](img/9642_03_04.jpg)'
- en: '*What just happened?*'
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚刚发生了什么？*'
- en: Using the same code, we gave it a bit of an upgrade to allow us to animate both
    the X coordinates in addition to the Y coordinates of the background position.
    The variable `xPos` was added to control the left and right horizontal position
    and also added to the `backgroundPostion` line, as well.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 使用相同的代码，我们对其进行了一些升级，以便能够动画化背景位置的X坐标以及Y坐标。添加了变量`xPos`来控制左右水平位置，并且还将其添加到`backgroundPostion`行中。
- en: Have a go hero
  id: totrans-179
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 试试看看
- en: In our example mentioned previously, we made the background image animate northwest.
    Have a go at making the background animation move northeast, southeast, and southwest.
    Also, try using the different offset values for the `xPos` and `yPos` that aren't
    the same to see how it affects the background image animation direction.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们之前提到的示例中，我们使背景图像向西北方向动画化。尝试使背景动画向东北、东南和西南移动。还尝试使用不同的`xPos`和`yPos`偏移值，以查看它如何影响背景图像的动画方向。
- en: Parallax background on page elements
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 页面元素的视差背景
- en: Our next example will show you how to animate an element's background position
    based on the interaction of the window's scroll. This animation can be hard to
    see based on how smooth scrolling looks in your browser and how smooth the scroll
    wheel on your mouse is. If you aren't seeing a smooth scroll effect, just grab
    the scroll bar on your browser and slowly move it up and down to see the effect
    more clearly. You'll notice that the background position moves at a slower rate
    than the elements on the page.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的下一个示例将向您展示如何根据窗口滚动的交互来动画化元素的背景位置。根据您的浏览器中平滑滚动的外观以及您鼠标上的平滑滚轮的外观，可能很难看到此动画效果。如果您看不到平滑的滚动效果，只需抓住浏览器上的滚动条并缓慢上下移动，即可更清楚地看到效果。您会注意到，背景位置的移动速度比页面上的元素慢。
- en: Time for action – setting up the markup and styling
  id: totrans-183
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 设置标记和样式
- en: To begin, we'll need to add the necessary HTML and CSS to a new document.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，我们需要向新文档添加必要的HTML和CSS。
- en: 'Create a new HTML page using the same template as before and insert the following
    code into the `<body>`:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用与之前相同的模板创建一个新的HTML页面，并将以下代码插入`<body>`中：
- en: '```js'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: <div class="row row1">
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div class="row row1">
- en: <img src="img/image1.png">
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <img src="img/image1.png">
- en: </div>
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </div>
- en: <div class="row row2">
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div class="row row2">
- en: <img src="img/image2.png">
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <img src="img/image2.png">
- en: </div>
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </div>
- en: <div class="row row3">
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div class="row row3">
- en: <img src="img/image3.png">
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <img src="img/image3.png">
- en: </div>
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </div>
- en: '```'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: Save the page in the `jquery-animation` directory as `parallax-vertical.html`.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将页面保存在`jquery-animation`目录中，命名为`parallax-vertical.html`。
- en: 'Next, we should create the stylesheet that we just linked to. In a new file,
    add the following code:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们应该创建刚刚链接的样式表。在一个新文件中，添加以下代码：
- en: '```js'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: html, body {
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: html, body {
- en: margin:0;
  id: totrans-201
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: margin:0;
- en: padding:0;
  id: totrans-202
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: padding:0;
- en: '}'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: img {
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: img {
- en: display:block;
  id: totrans-205
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: display:block;
- en: width:1000px;
  id: totrans-206
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: width:1000px;
- en: margin:0 auto;
  id: totrans-207
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: margin:0 auto;
- en: padding-top:200px;
  id: totrans-208
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: padding-top:200px;
- en: '}'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: .row { height:700px; }
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: .row { height:700px; }
- en: .row1 { background:url(images/background1.jpg) repeat-x top center fixed;}
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: .row1 { background:url(images/background1.jpg) repeat-x top center fixed;}
- en: .row2 { background:url(images/background2.jpg) repeat-x top center fixed;}
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: .row2 { background:url(images/background2.jpg) repeat-x top center fixed;}
- en: .row3 { background:url(images/background3.jpg) repeat-x top center fixed;}
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: .row3 { background:url(images/background3.jpg) repeat-x top center fixed;}
- en: '```'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: Save this file as `parallax-vertical.css` in the `css` folder within our `project`
    folder.
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此文件保存为`parallax-vertical.css`，放在`project`文件夹内的`css`文件夹中。
- en: '*What just happened?*'
  id: totrans-216
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚刚发生了什么？*'
- en: First, we added in our HTML structure for the example. This consists of three
    rows holding only one image each. The CSS is pretty straightforward, as well.
    We're first removing all of the space around the `html` and `body` elements. Then,
    we set the width and position of the images. We then set the height of the rows,
    to give us a little space to be able to see the effect. In the wild, this will
    generally be spaced out by the element's content. Lastly, we set a background
    image on each of the rows, so that we can see a little variety in our example.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们添加了示例的HTML结构。这包括三行，每行只包含一个图像。CSS也很简单。我们首先删除了`html`和`body`元素周围的所有空格。然后，我们设置了图像的宽度和位置。然后，我们设置了行的高度，以便我们有一些空间来看到效果。在实际应用中，这通常会由元素的内容来调整。最后，我们在每一行上设置了一个背景图像，以便我们在示例中看到一些变化。
- en: Time for action – scripting our parallax script
  id: totrans-218
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 编写我们的视差脚本
- en: Now, let's add in the code that'll make our background animate when we scroll
    down the page.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们添加代码，使我们的背景在页面向下滚动时动画。
- en: 'Add the following code to our anonymous function so we can get this script
    off the ground and running:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到我们的匿名函数中，以便我们能够启动并运行此脚本：
- en: '```js'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: $(window).scroll(function() {
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $(window).scroll(function() {
- en: var yPos = -($(window).scrollTop() / 2);
  id: totrans-223
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: var yPos = -($(window).scrollTop() / 2);
- en: '$(".row").css({ backgroundPosition: "50% " + yPos + "px" });'
  id: totrans-224
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '$(".row").css({ backgroundPosition: "50% " + yPos + "px" });'
- en: '});'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Here''s a screenshot illustration of how our script will function when previewed
    in the browser:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个截图示例，展示了我们的脚本在浏览器中预览时的功能：
- en: '![Time for action – scripting our parallax script](img/9642_03_05.jpg)'
  id: totrans-228
  prefs: []
  type: TYPE_IMG
  zh: '![行动时间 - 编写我们的视差脚本](img/9642_03_05.jpg)'
- en: '*What just happened?*'
  id: totrans-229
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚刚发生了什么？*'
- en: We used a window scroll function here because we want to trigger our code every
    time our user scrolls through the window using the mouse wheel or the browser's
    scroll bar.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里使用窗口滚动函数，因为我们希望每次用户使用鼠标滚轮或浏览器滚动条滚动窗口时都触发我们的代码。
- en: Our variable, `yPos`, is set to a negative value because we want the background
    animation to move in the same direction as the page elements that are being scrolled.
    Using `scrollTop()` gives us the current vertical scrollbar position of `window`.
    We then divide that number by two.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的变量 `yPos` 设置为负值，因为我们希望背景动画与正在滚动的页面元素朝同一个方向移动。 使用 `scrollTop()` 给我们当前 `window`
    的垂直滚动条位置。 然后我们将该数字除以二。
- en: We use the `css()` method to set our background position. The value `50%` is
    for the x axis, which is the horizontal axis of our browser. This tells our background
    image to center itself vertically. The y axis (or `yPos` in this case) is set
    to our above variable, `yPos`, and then `px` is appended to tell the script this
    number is in pixels. The `yPos` controls the horizontal placement of the image,
    and therefore centers the background image horizontally.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用 `css()` 方法来设置我们的背景位置。 值 `50%` 是用于 x 轴的，即浏览器的水平轴。 这告诉我们的背景图像在垂直方向上居中。 y
    轴（或此处的 `yPos`）设置为我们上面的变量 `yPos`，然后附加 `px` 以告诉脚本这个数字是以像素为单位的。 `yPos` 控制图像的水平放置，因此水平居中背景图像。
- en: Have a go hero – customizing the speed and direction of the effect
  id: totrans-233
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自定义速度和方向效果
- en: Try changing the value of the number `yPos` is divided by, and then try changing
    the negative number to a positive number. Changing these values affect the speed
    and direction that our background position scrolls.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试更改 `yPos` 被除的数字的值，然后尝试将负数更改为正数。 更改这些值会影响我们的背景位置滚动的速度和方向。
- en: Pop quiz – the scroll() and scrollTop() methods
  id: totrans-235
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 知识问答 - `scroll()` 和 `scrollTop()` 方法
- en: Q1\. What does the `scroll()` method do?
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: Q1\. `scroll()` 方法是做什么的？
- en: Scrolls to the next sibling element in the set
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动到集合中的下一个同级元素
- en: Allows you to smoothly scroll to an element or numerical value (in pixels) on
    the page
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 允许您平滑地滚动到页面上的元素或数字值（以像素为单位）
- en: Allows code to be run each time the selected element is scrolled
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 允许在每次选择的元素滚动时运行代码
- en: When set to `false`, enables disabled scrolling on the page
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当设置为 `false` 时，启用页面上的禁用滚动
- en: Q2\. What does the `scrollTop()` method do?
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: Q2\. `scrollTop()` 方法是做什么的？
- en: Jumps back to the top of the page
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 跳回到页面顶部
- en: Outputs the current scroll position of the selected element
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输出所选元素的当前滚动位置
- en: When used with the `click()` method, allows you to scroll to the top of an element
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当与 `click()` 方法一起使用时，可以让您滚动到元素的顶部
- en: Animates the selected element to roll up like a piece of paper
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将选定的元素动画成像一张纸一样卷起来
- en: Summary
  id: totrans-246
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'In this chapter, we looked at several examples that animate the background
    image on an element. Some of the things we learned were:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看了几个示例，它们在元素上动画背景图像。 我们学到的一些事情包括：
- en: The `animate()` method and some of the great things we can achieve with it
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`animate()` 方法及其一些伟大的应用'
- en: Using jQuery UI to give our script color animation support
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 jQuery UI 为我们的脚本提供颜色动画支持
- en: Fading between background colors on elements
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在元素之间淡入淡出背景颜色
- en: Chaining jQuery methods together
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 链接 jQuery 方法在一起
- en: Parallax animations, where the background layers are animated at different speeds
    and directions to create the illusion of depth
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 视差动画，其中背景层以不同的速度和方向动画，以创造深度的幻觉
- en: Creating an automatic background image animation and how to make them animate
    in different directions
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建自动背景图像动画以及如何使它们在不同方向上动画
- en: The `scroll()` and `scrollTop()` methods
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`scroll()` 和 `scrollTop()` 方法'
- en: In the next chapter, we're going to look at navigation animation and how we
    can bring some life to this common website feature. We're going to be creating
    a one page scroller script that jumps to sections in the page based on the link
    clicked. Also, we're going to be looking at how to change the background color
    of an element to bring attention to that area of the site.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看看导航动画以及如何为这个常见的网站功能注入一些生机。我们将创建一个单页面滚动脚本，根据点击的链接跳转到页面中的各个部分。此外，我们还将研究如何更改元素的背景颜色，以吸引用户关注网站的特定区域。
