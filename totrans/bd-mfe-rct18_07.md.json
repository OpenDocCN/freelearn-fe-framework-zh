["```js\nconst { ModuleFederationPlugin } = require('webpack').container;\nmodule.exports = {\n  plugins: [\n    new ModuleFederationPlugin({\n      // module federation configuration options\n    }),\n  ],\n};\n```", "```js\nmodule.exports = {\n  plugins: [\n    new ModuleFederationPlugin({\n      name: 'hostAppName',\n      remotes: {\n        app1: '<app1's URL path to remoteEntry.js>',\n       app2: '<app2's URL path to remoteEntry.js>',\n      },\n    }),\n  ],\n};\n```", "```js\nnew ModuleFederationPlugin({\n      name: 'remoteAppName', // this name needs to match with the entry name\n      exposes: ['./public-path/remoteEntry.js'],\n      // ...\n    }),\n```", "```js\n\"proxyConfig\": \"apps/catalog/proxy.conf.json\"\n```", "```js\n\"baseHref\": \"/checkout/\"\n```", "```js\n    remotes: ['catalog', 'checkout']\n    ```", "```js\n    import React from 'react';import { Container } from 'semantic-ui-react';\n    import { Route, Routes } from 'react-router-dom';\n    import 'semantic-ui-css/semantic.min.css';\n    import { Header } from ‘@ebuy/ui’; \n    const Catalog = React.lazy(() => import('catalog/Module'));\n    const Checkout = React.lazy(() => import('checkout/Module'));\n    export function App() {\n      return (\n        <React.Suspense fallback={null}>\n          <Container style={{ marginTop: '5rem' }}>\n            <Header />\n    <Routes>\n              <Route path=\"/\" element={<Catalog />} />\n              <Route path=\"/catalog\" element={<Catalog />} />\n              <Route path=\"/checkout\" element={<Checkout />} />\n            </Routes>\n          </Container>\n        </React.Suspense>\n      );\n    }\n    export default App;\n    ```", "```js\n    declare module 'catalog/Module';declare module 'checkout/Module';\n    ```", "```js\n    const moduleFederationConfig = {  name: 'catalog',\n      exposes: {\n        './Module': './src/app/app.tsx',\n      },\n    };\n    module.exports = moduleFederationConfig;\n    ```", "```js\n        \"serve-static\": {      \"executor\": \"@nrwl/web:file-server\",\n          \"defaultConfiguration\": \"development\",\n          \"options\": {\n            \"buildTarget\": \"catalog:build\",\n            \"port\": 4201\n          }\n        }\n    ```", "```js\n    \"serve\": {      \"executor\": \"@nrwl/web:dev-server\",\n          \"defaultConfiguration\": \"development\",\n          \"options\": {\n            \"buildTarget\": \"catalog:build\",\n            \"hmr\": true,\n            \"port\": 4201\n          },\n    ```", "```js\n    \"serve\": {      \"executor\": \"@nrwl/react:module-federation-dev-server\",\n    ```", "```js\n    \"webpackConfig\": \"apps/catalog/webpack.config.js\"\n    ```", "```js\n    const { withModuleFederation } = require('@nrwl/react/module-federation');const baseConfig = require('./module-federation.config');\n    const defaultConfig = {\n      ...baseConfig,\n    };\n    module.exports = withModuleFederation(defaultConfig);\n    ```", "```js\n    const moduleFederationConfig = {  name: 'checkout',\n      exposes: {\n        './Module': './src/app/app.tsx',\n      },\n    };\n    module.exports = moduleFederationConfig;\n    ```", "```js\n          \"serve-static\": {      \"executor\": \"@nrwl/web:file-server\",\n          \"defaultConfiguration\": \"development\",\n          \"options\": {\n            \"buildTarget\": \"checkout:build\",\n            \"port\": 4202\n          }\n        }\n    ```", "```js\n    \"serve\": {      \"executor\": \"@nrwl/react:module-federation-dev-server\",\n    ```", "```js\n    \"webpackConfig\": \"apps/checkout/webpack.config.js\"\n    ```", "```js\n    <Link to={navItem.href ?? '#'}>{navItem.label}</Link>\n    ```", "```js\n    import { Link } from 'react-router-dom';\n    ```", "```js\n    app-shell serve command.\n    ```", "```js\n    ErrorShared module is not available for eager consumption: webpack/sharing/consume/default/react/react\n    ```", "```js\n    import('./bootstrap');\n    ```", "```js\n    \"main\": \"apps/catalog/src/main.ts\",\n    ```", "```js\nexport { default } from './app/app';\n```", "```js\nconst moduleFederationConfig = {\n  name: 'catalog',\n  exposes: {\n    './Module': './src/remote-entry.ts',\n  },\n};\n```", "```js\n    import 'semantic-ui-css/semantic.min.css';export function App() {\n      return (\n        <div className=\"ui raised segment\">\n          <h1>Recommendations</h1>\n          <p>Recommendations goes here</p>\n        </div>\n      );\n    }\n    export default App;\n    ```", "```js\n    const moduleFederationConfig = {  name: 'catalog',\n      remotes: ['recommendations'],\n      exposes: {\n        './Module': './src/app/app.tsx',\n      },\n    };\n    module.exports = moduleFederationConfig;\n    ```", "```js\n    declare module 'recommendations/Module';\n    ```", "```js\n    . . .import React from 'react';\n    const Recommendations = React.lazy(() => import('recommendations/Module'));\n    ```", "```js\n    <Recommendations />\n    ```", "```js\n    pnpm nx serve app-shell\n    ```", "```js\npnpm install zustand\n```", "```js\n    import {create} from 'zustand';interface LikeCount {\n      count: number;\n      increment: () => void;\n      reset: () => void;\n    }\n    ```", "```js\n    const useStore = create<LikeCount>((set) => ({  count: 0,\n      increment: () => set((state) => ({ count: state.count + 1 })),\n      reset: () => set(() => ({ count: 0 })),\n    }));\n    export default useStore;\n    ```", "```js\n    export { default } from './store';\n    ```", "```js\n    //apps/app-shell/module-federation.config.jsconst moduleFederationConfig = {\n      name: 'app-shell',\n      remotes: ['catalog', 'checkout', 'store'],\n    };\n    module.exports = moduleFederationConfig;\n    ```", "```js\n    const moduleFederationConfig = {  name: 'recommendations',\n      remotes: ['store'],\n      exposes: {\n        './Module': './src/remote-entry.ts',\n      },\n    };\n    module.exports = moduleFederationConfig;\n    ```", "```js\n    declare module 'store/Module';\n    ```", "```js\n    declare module 'store/Module';\n    ```", "```js\n    import { Button } from ‘semantic-ui-react’import useStore from 'store/Module';\n    ```", "```js\n    const { count, increment } = useStore();\n    ```", "```js\n    <Button onClick={increment}>{count} Likes </Button>\n    ```", "```js\n    pnpm serve:all\n    ```", "```js\n    import 'semantic-ui-css/semantic.min.css';import { Button } from ‘semantic-ui-react’\n    import useStore from 'store/Module';\n    export function App() {\n      const { count, reset } = useStore();\n      return (\n        <div className=\"ui raised segment\">\n          <h1>Recommendations</h1>\n          <p>Recommendations goes here</p>\n          <p> {count} people liked the recommendations</p>\n          <Button onClick={reset}>reset</Button>\n        </div>\n      );\n    }\n    export default App;\n    ```"]