["```js\ndocker -v\n```", "```js\nconst path = require(\"path\");\nmodule.exports = {\n  output: \"standalone\",\n  experimental: {\n    outputFileTracingRoot: path.join(__dirname, \"../../\"),\n  },\n…\n}\n```", "```js\nFROM node:18-alpine AS base\nFROM base AS builder\n# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.\nRUN apk add --no-cache libc6-compat\nRUN apk update\n# Set working directory\nWORKDIR /app\nRUN yarn global add turbo\nCOPY . .\nRUN turbo prune --scope=home --docker\n```", "```js\nFROM base AS installer\nRUN apk add --no-cache libc6-compat\nRUN apk update\nWORKDIR /app\n# First install the dependencies (as they change less often)\nCOPY .gitignore .gitignore\nCOPY --from=builder /app/out/json/ .\nCOPY --from=builder /app/out/pnpm-lock.yaml ./pnpm-lock.yaml\nRUN yarn global add pnpm\nRUN pnpm install --no-frozen-lockfile\n# Build the project\nCOPY --from=builder /app/out/full/ ./\nCOPY turbo.json turbo.json\nRUN ENV=PROD yarn turbo run build --filter=home...\n```", "```js\nFROM base AS runner\nWORKDIR /app\n# Don't run production as root\nRUN addgroup --system --gid 1001 nodejs\nRUN adduser --system --uid 1001 nextjs\nUSER nextjs\nCOPY --from=installer /app/apps/home/next.config.js .\nCOPY --from=installer /app/apps/home/package.json .\n# Automatically leverage output traces to reduce image size\n# https://nextjs.org/docs/advanced-features/output-file-tracing\nCOPY --from=installer --chown=nextjs:nodejs /app/apps/home/.next/standalone ./\nCOPY --from=installer --chown=nextjs:nodejs /app/apps/home/.next/static ./apps/home/.next/static\nCOPY --from=installer --chown=nextjs:nodejs /app/apps/home/public ./apps/home/public\nCMD node apps/home/server.js\n```", "```js\nnode_modules\nnpm-debug.log\n**/node_modules\n.next\n**/.next\n```", "```js\ndocker build -t home -f apps/home/Dockerfile .\n```", "```js\ndocker run -p 3000:3000 home\n```", "```js\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: home\n  namespace: default\n  labels:\n    app: home\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: home\n  template:\n    metadata:\n      labels:\n        app: home\n    spec:\n      containers:\n        - name: home\n          image: <dockerUserID>/ebuy-home:latest\n          imagePullPolicy: Always\n          ports:\n            - name: http\n              containerPort: 3000\n              protocol: TCP\n```", "```js\nkind: Service\napiVersion: v1\nmetadata:\n  name: home\n  namespace: default\n  labels:\n    app: home\nspec:\n  type: LoadBalancer\n  selector:\n    app: home\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 3000\n      name: home\n```", "```js\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: home\n  namespace: default\n  labels:\n    app: home\n  annotations:\n    # nginx.ingress.kubernetes.io/enable-cors: 'true'\n    # nginx.ingress.kubernetes.io/cors-allow-origin: '*'\n    nginx.ingress.kubernetes.io/rewrite-target: /$2\nspec:\n  ingressClassName: nginx\n  rules:\n  - http:\n      paths:\n      - path: /home(/|$)(.*)\n        pathType: Prefix\n        backend:\n          service:\n            name: home\n            port:\n              number: 80\n```", "```js\naz login\n```", "```js\n    az ad sp create-for-rbac --name “MyApp” --role Contributor --scopes /subscriptions/{subscriptionid}/resourceGroups/ebuy-rg --sdk-auth\n    ```", "```js\nAZ_CLIENT_ID\nAZ_CLIENT_SECRET\nAZ_SUBSCRIPTION_ID\nAZ_TENANT_ID\nDOCKERHUB_USERNAME\nDOCKERHUB_TOKEN\n```", "```js\n    name: home-build-deploy\n    on:\n      workflow_dispatch:\n      push:\n        branches:\n          - main\n        paths:\n          - apps/home/**\n    ```", "```js\n    jobs:\n      build-and-deploy:\n        runs-on: ubuntu-latest\n        strategy:\n        permissions:\n        steps:\n    ```", "```js\n    strategy:\n          fail-fast: false\n          matrix:\n            include:\n              - dockerfile: './apps/home/Dockerfile'\n                image: areai51/ebuy-home\n                k8sManifestPath: './apps/home/k8s/'\n    ```", "```js\n    permissions:\n      contents: read\n      packages: write\n```", "```js\n        - name: Checkout Repository\n          uses: actions/checkout@v3.3.0\n    ```", "```js\n          - name: Login to Docker Hub\n            uses: docker/login-action@v2\n            with:\n              username: ${{ secrets.DOCKERHUB_USERNAME }}\n              password: ${{ secrets.DOCKERHUB_TOKEN }}\n    ```", "```js\n          - name: Extract git SHA\n            id: meta\n            uses: docker/metadata-action@v4\n            with:\n              images: ${{ matrix.image }}\n              tags: |\n                type=sha\n    ```", "```js\n          - name: Build and push micro app docker image\n            uses: docker/build-push-action@v4.0.0\n            with:\n              context: \".\"\n              file: ${{ matrix.dockerfile }}\n              push: true\n              tags: ${{ steps.meta.outputs.tags }}\n    ```", "```js\n          - name: Setup Kubectl\n            uses: azure/setup-kubectl@v3\n    ```", "```js\n          - name: Azure Login\n            uses: Azure/login@v1\n            with:\n              creds: '{\"clientId\":\"${{ secrets.AZ_CLIENT_ID }}\",\"clientSecret\":\"${{ secrets.AZ_CLIENT_SECRET }}\",\"subscriptionId\":\"${{ secrets.AZ_SUBSCRIPTION_ID }}\",\"tenantId\":\"${{ secrets.AZ_TENANT_ID }}\"}'\n    ```", "```js\n          - name: Set K8s Context\n            uses: Azure/aks-set-context@v3\n            with:\n              cluster-name: ebuy\n              resource-group: ebuy-rg\n    ```", "```js\n          - name: Deploy to K8s\n            uses: Azure/k8s-deploy@v4\n            with:\n              namespace: \"default\"\n              action: deploy\n              manifests: |\n                ${{ matrix.k8sManifestPath }}\n              images: |\n                ${{ steps.meta.outputs.tags }}\n    ```", "```js\nname: catalog-build-deploy\non:\n  workflow_dispatch:\n  push:\n    branches:\n      - main\n    paths:\n      - apps/catalog/**\n```", "```js\n      matrix:\n        include:\n          - dockerfile: \"./apps/catalog/Dockerfile\"\n            image: areai51/ebuy-ssr-catalog\n            k8sManifestPath: \"./apps/catalog/k8s/\"\n```", "```js\nname: checkout-build-deploy\non:\n   workflow_dispatch:\n  push:\n    branches:\n      - main\n    paths:\n      - apps/checkout/**\n```", "```js\n      matrix:\n        include:\n          - dockerfile: \"./apps/checkout/Dockerfile\"\n            image: areai51/ebuy-ssr-checkout\n            k8sManifestPath: \"./apps/checkout/k8s/\"\n```", "```js\nconst remotes = (isServer) => {\n  const location = isServer ? \"ssr\" : \"chunks\";\n  const ENV = process.env.ENV;\n  const CATALOG_URL_LOCAL = 'http://localhost:3001';\nconst CHECKOUT_URL_LOCAL = 'http://localhost:3002’;\n  const CATALOG_URL_PROD = 'http://<your-k8s-ip-address>’\n  const CHECKOUT_URL_PROD = 'http://<your-k8s-ip-address>’\n  const CATALOG_REMOTE_HOST = ENV === 'PROD' ? CATALOG_URL_PROD : CATALOG_URL_LOCAL;\n  const CHECKOUT_REMOTE_HOST = ENV === 'PROD' ? CHECKOUT_URL_PROD : CHECKOUT_URL_LOCAL;\n  return {\n    catalog: `catalog@${CATALOG_REMOTE_HOST}/_next/static/${location}/remoteEntry.js`,\n    checkout: `checkout@${CHECKOUT_REMOTE_HOST}/_next/static/${location}/remoteEntry.js`,\n  };\n};\n```"]