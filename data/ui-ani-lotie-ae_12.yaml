- en: '*Chapter 9*: Let’s Do Some Magic: Integrating Your First Lottie Animation'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第9章*：让我们做一些魔法：集成您的第一个Lottie动画'
- en: 'Our app is now ready to display Lottie animations on its screens. In this chapter,
    we will learn how to integrate a Lottie file, whether downloaded from [https://lottiefiles.com/](https://lottiefiles.com/)
    or generated by us in Adobe **After Effects** (**AE**). The requirements to perform
    this integration successfully are as follows:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的应用程序现在已准备好在其屏幕上显示Lottie动画。在本章中，我们将学习如何集成Lottie文件，无论是从[https://lottiefiles.com/](https://lottiefiles.com/)下载的还是在我们自己的Adobe
    **After Effects** (**AE**)中生成的。成功执行此集成的要求如下：
- en: Have a JSON file with the Lottie animation exported from AE using the Bodymovin
    plugin or downloaded from LottieFiles.
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拥有一个使用Bodymovin插件从AE导出的Lottie动画的JSON文件或从LottieFiles下载的JSON文件。
- en: Have the React Native project ready after having followed the steps described
    in [*Chapter 8*](B17930_08_ePub.xhtml#_idTextAnchor156), *Installing lottie-react-native*.
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在遵循了[*第8章*](B17930_08_ePub.xhtml#_idTextAnchor156)中描述的步骤，*安装lottie-react-native*之后，准备好React
    Native项目。
- en: 'The final result will be our app displaying the provided Lottie animation on
    the initial screen. The topics we will cover in this chapter are as follows:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 最终结果将是我们的应用程序在初始屏幕上显示提供的Lottie动画。本章我们将涵盖以下主题：
- en: Understanding the Lottie file
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解Lottie文件
- en: Using a Lottie file in a React Native app
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在React Native应用程序中使用Lottie文件
- en: Using `lottie-react-native` in your TypeScript app
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在TypeScript应用程序中使用`lottie-react-native`
- en: Finding documentation for `lottie-react-native`
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 寻找`lottie-react-native`的文档
- en: Using remote Lottie files
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用远程Lottie文件
- en: Understanding the Lottie file elements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解Lottie文件元素
- en: As we saw in previous chapters, Lottie files are JSON representations of our
    AE animations that have been transformed and exported using the Bodymovin plugin.
    As a JSON object, we can open it in a text editor and see that Lottie files are
    just a collection of keys and values storing the assets that need to be rendered
    and to which transformations should be applied on each frame of the animation.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在前面的章节中看到的，Lottie文件是我们使用Bodymovin插件转换和导出的AE动画的JSON表示。作为一个JSON对象，我们可以在文本编辑器中打开它，并看到Lottie文件只是存储需要渲染的资产及其在动画每一帧上应用的变换的键值对的集合。
- en: 'Let''s take a look at a sample Lottie file:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看一个样本Lottie文件：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[PRE24]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Lottie files are usually much larger than this one, but we have summarized
    it for educational purposes. Let''s now go through the most important values in
    this sample file:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Lottie文件通常比这个要大得多，但我们为了教育目的已经对其进行了总结。现在让我们来看看这个样本文件中最重要的值：
- en: '`"v"`: Specifies which version of the file this one is. It has no direct effect
    on the animation as it serves as mere information for developers and designers.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"v"`：指定此文件是哪个版本的文件。它对动画没有直接影响，因为它仅作为开发者和设计师的信息。'
- en: '`"meta"`: General information about the file such as name and license, for
    example.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"meta"`：关于文件的一般信息，例如名称和许可证。'
- en: '`"fr"`: Also known as **frame rate**, this represents the number of frames
    per second that the animation should be rendered in.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"fr"`：也称为**帧率**，表示动画应该以每秒多少帧渲染。'
- en: '`"w"`: The width of the animation.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"w"`：动画的宽度。'
- en: '`"h"`: The height of the animation.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"h"`：动画的高度。'
- en: '`"assets"`: A list of external assets that will be shown within the animation.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"assets"`：在动画中显示的外部资产列表。'
- en: '`"layers"`: Details for each of the AE layers used in our animation.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"layers"`：我们动画中使用的每个AE层的详细信息。'
- en: '`"layers/ks"`: Information about how to display a specific layer on a specific
    frame.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"layers/ks"`：关于如何在特定帧上显示特定层的信息。'
- en: '`"layers/shapes"`: Shapes used on each layer, including their metadata and
    rendering options.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"layers/shapes"`：每个层上使用的形状，包括它们的元数据和渲染选项。'
- en: In general, it's best to modify our Lottie animations on AE, but changing values
    in the exported Lottie JSON file is possible and may affect the animation itself.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，最好在AE中修改我们的Lottie动画，但更改导出的Lottie JSON文件中的值是可能的，并且可能会影响动画本身。
- en: Using a Lottie file in a React Native app
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在React Native应用程序中使用Lottie文件
- en: Once we have our animation exported into a Lottie file, we can integrate it
    into any React Native app and start the animation on any iOS or Android device.
    In this section, we will show how this is done on the main screen of a sample
    blank React Native app, but the process can be extrapolated into any screen or
    component within any React Native app.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们将动画导出为 Lottie 文件，我们就可以将其集成到任何 React Native 应用中，并在任何 iOS 或 Android 设备上启动动画。在本节中，我们将展示如何在示例空白
    React Native 应用的主屏幕上完成此操作，但这个过程可以扩展到任何 React Native 应用中的任何屏幕或组件。
- en: 'The first thing we have to do is store our Lottie file in a folder inside our
    app. We need to make sure we can import files from this folder in our React components
    and screens. For example, we could store our Lottie files in the `assets` folder,
    where all images used in our app are stored:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先要做的是在我们的应用内部的一个文件夹中存储我们的 Lottie 文件。我们需要确保我们可以在我们的 React 组件和屏幕中导入此文件夹中的文件。例如，我们可以将我们的
    Lottie 文件存储在 `assets` 文件夹中，其中存储了应用中使用的所有图像：
- en: '![Figure 9.1 – Storing animation in the app folder structure'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.1 – 在应用文件夹结构中存储动画'
- en: '](img/B17930_09_01.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17930_09_01.jpg)'
- en: Figure 9.1 – Storing animation in the app folder structure
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.1 – 在应用文件夹结构中存储动画
- en: 'In this case, we stored a JSON file named `myLottieFile.json` inside the `assets/animations`
    folder so it''s accessible through a simple `import` statement: `require(''./assets/animations/myLottieFile.json'')`.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们在 `assets/animations` 文件夹中存储了一个名为 `myLottieFile.json` 的 JSON 文件，因此可以通过简单的
    `import` 语句 `require('./assets/animations/myLottieFile.json')` 访问它。
- en: 'Let''s now see an example of how `App.js` would look using the integrated Lottie
    file in the proposed folder structure:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看一个示例，说明如何使用建议的文件夹结构中的集成 Lottie 文件来编写 `App.js`：
- en: '[PRE30]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[PRE34]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[PRE35]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[PRE37]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[PRE38]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '[PRE39]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '[PRE41]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[PRE42]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '[PRE43]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '[PRE45]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '[PRE46]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '[PRE47]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[PRE48]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '[PRE49]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '[PRE50]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '[PRE51]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '[PRE52]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '[PRE53]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '[PRE54]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '[PRE55]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'In this file, we are displaying our Lottie animation on the main screen so
    users can see it just after opening the app. There are a number of things we should
    consider about this file:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在此文件中，我们在主屏幕上显示我们的 Lottie 动画，以便用户在打开应用后立即看到它。关于此文件，我们有几点需要考虑：
- en: '`SafeAreaView` is used to prevent the animation from going under the notch
    on notched-screen devices (for example, the iPhone 13).'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SafeAreaView` 用于防止动画在带刘海的屏幕设备（例如 iPhone 13）下显示。'
- en: Having `LottieView` inside a sized container is important to prevent the animation
    from resizing or being cropped. That's why we use a `100%` width and height-sized
    view containing the `LottieView` component.
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 `LottieView` 放在尺寸容器中很重要，以防止动画调整大小或被裁剪。这就是为什么我们使用一个包含 `LottieView` 组件的 `100%`
    宽度和高度尺寸视图。
- en: '`LottieView` is a React component that will render the Lottie animation. It
    requires a source prop to import the JSON file containing the animation. It also
    accepts a number of properties to control and configure the animation. We will
    take a deeper look into these properties in this chapter.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LottieView` 是一个 React 组件，它将渲染 Lottie 动画。它需要一个源属性来导入包含动画的 JSON 文件。它还接受一些属性来控制和配置动画。我们将在本章中更深入地探讨这些属性。'
- en: 'The props passed to the `LottieView` components are also worth noting:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 传递给 `LottieView` 组件的属性也值得关注：
- en: '`source`: This needs to receive the imported JSON file for the animation. The
    path for importing the animation, as it works with the `require` statement in
    JavaScript, can be absolute or relative to the parent component/screen.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`source`：这需要接收导入的动画 JSON 文件。导入动画的路径，就像在 JavaScript 中的 `require` 语句一样，可以是绝对路径或相对于父组件/屏幕的相对路径。'
- en: '`autoPlay`: When specified (or set to `true`), this makes the app start playing
    right after the component is mounted. This is normally used when the parent component
    makes sense only when the animation is running.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`autoPlay`：当指定（或设置为 `true`）时，这将在组件挂载后立即使应用开始播放。这通常用于父组件只有在动画运行时才有意义的情况。'
- en: '`loop`: When specified (or set to `true`), this will repeat the animation until
    the component gets unmounted.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`loop`：当指定（或设置为 `true`）时，这将重复动画，直到组件卸载。'
- en: The former component example is the simplest representation of a Lottie animation
    being rendered inside a React Native app but it's a good example of how important
    it is to place the `LottieView` component in a sized container.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的组件示例是 Lottie 动画在 React Native 应用内部渲染的最简单表示，但它是一个很好的例子，说明了将 `LottieView` 组件放置在尺寸容器中的重要性。
- en: If your app uses classes instead of functional components, you should know that
    `lottie-react-native` can still be imported and used in a very similar fashion.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的应用使用类而不是函数组件，你应该知道 `lottie-react-native` 仍然可以以非常相似的方式导入和使用。
- en: 'Let''s see an example of a Lottie file being integrated in to a class-based
    React native app:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看一个 Lottie 文件如何集成到基于类的 React Native 应用程序中的例子：
- en: '[PRE56]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: '[PRE57]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '[PRE58]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: '[PRE59]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: '[PRE60]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: '[PRE61]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: '[PRE62]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: '[PRE63]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: '[PRE64]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: '[PRE65]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: '[PRE66]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: '[PRE67]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: '[PRE68]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: '[PRE69]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: '[PRE70]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: '[PRE71]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: '[PRE72]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: '[PRE73]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: '[PRE74]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: Similar to the previous example, the main difference in class-based apps is
    the need to return the rendering component inside the `render` method. One of
    the basic props (`colorFilters`) allows users to control and change the colors
    of the layers.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 与上一个例子类似，基于类的应用程序中的主要区别是需要返回 `render` 方法内部的渲染组件。其中一个基本属性（`colorFilters`）允许用户控制和更改层的颜色。
- en: 'Let''s take a look at how this prop can be used to do so:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这个属性如何被用来做到这一点：
- en: '[PRE75]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: '[PRE76]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: '[PRE77]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: '[PRE78]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: '[PRE79]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '[PRE80]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: '[PRE81]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: '[PRE82]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: '[PRE83]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: '[PRE84]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: '[PRE85]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: '[PRE86]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: '[PRE87]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: '[PRE88]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: '[PRE89]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: '[PRE90]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: '[PRE91]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: '[PRE92]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: '[PRE93]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: '[PRE94]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: '[PRE95]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: '[PRE96]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: '[PRE97]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: '[PRE98]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: '[PRE99]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: '[PRE100]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: '[PRE101]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: '[PRE102]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: '[PRE103]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: '[PRE104]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: '[PRE105]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: '[PRE106]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: '[PRE107]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: In this case, the `colorFilters` prop in the `LottieView` component is modifying
    the colors of two layers (which should have been defined with the same name in
    AE) to render them as black, no matter which color they were defined as during
    the animation creation process.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，`LottieView` 组件中的 `colorFilters` 属性正在修改两个层的颜色（在 AE 中应该使用相同的名称定义），无论在动画创建过程中定义为何种颜色，都将其渲染为黑色。
- en: TypeScript has become the de facto language for modern React Native apps. In
    the previous example, we used plain JavaScript, but the `LottieView` component
    is TypeScript-ready.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: TypeScript 已经成为现代 React Native 应用的默认语言。在上一个例子中，我们使用了纯 JavaScript，但 `LottieView`
    组件是 TypeScript 兼容的。
- en: In the next section, we will show what caveats a user may find when using `lottie-react-native`
    in their TypeScript applications.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将展示用户在使用 `lottie-react-native` 的 TypeScript 应用程序中可能遇到的注意事项。
- en: Using lottie-react-native in your TypeScript app
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在你的 TypeScript 应用中使用 lottie-react-native
- en: The `lottie-react-native` library includes types, so `LottieView` components
    can be easily integrated with TypeScript applications. These types are defined
    in the file found in the `lottie-react-native/src/js/index.d.ts` (type definition
    file) path inside the library's code. They are also accessible in the library's
    repository through [https://github.com/lottie-react-native/lottie-react-native/blob/master/src/js/index.d.ts](https://github.com/lottie-react-native/lottie-react-native/blob/master/src/js/index.d.ts).
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '`lottie-react-native` 库包括类型，因此 `LottieView` 组件可以轻松地集成到 TypeScript 应用程序中。这些类型在库代码的
    `lottie-react-native/src/js/index.d.ts`（类型定义文件）路径中定义。它们也可以通过库的仓库在 [https://github.com/lottie-react-native/lottie-react-native/blob/master/src/js/index.d.ts](https://github.com/lottie-react-native/lottie-react-native/blob/master/src/js/index.d.ts)
    中访问。'
- en: 'Besides the definition of the props and methods applicable to `LottieView`,
    this file includes types for the following objects:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 除了定义适用于 `LottieView` 的属性和方法外，此文件还包括以下对象的类型：
- en: '`AnimationObject`: Types for the Lottie JSON file when it gets translated to
    a JavaScript object'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AnimationObject`：当 Lottie JSON 文件转换为 JavaScript 对象时的类型'
- en: '`ColorFilter`: Types for the filters that can be applied to change colors in
    the animation'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ColorFilter`：用于在动画中改变颜色的过滤器类型'
- en: '`TextFilterIOS`: Types for the filters that can be applied to change fonts
    on iOS devices'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TextFilterIOS`：用于在 iOS 设备上改变字体的过滤器类型'
- en: '`TextFilterAndroid`: Types for the filters that can be applied to change fonts
    on Android devices'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TextFilterAndroid`：用于在 Android 设备上改变字体的过滤器类型'
- en: 'The main caveat when using `lottie-react-native` concerns the way we import
    the Lottie component (`LottieView`) in our app. Depending on how TypeScript is
    configured in our project, we would need to import it in a different way:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `lottie-react-native` 时遇到的主要问题是我们在应用程序中导入 Lottie 组件（`LottieView`）的方式。根据我们在项目中如何配置
    TypeScript，我们可能需要以不同的方式导入它：
- en: 'If your `tsconfig.json` file defines `"esModuleInterop": false`, you will need
    to use `require` to import `LottieView` in the following way: `const LottieView
    = require("lottie-react-native");`.'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '如果你的 `tsconfig.json` 文件定义了 `"esModuleInterop": false`，你将需要使用 `require` 以以下方式导入
    `LottieView`：`const LottieView = require("lottie-react-native");`。'
- en: 'If your `tsconfig.json` file defines `"esModuleInterop": true` and `"allowSyntheticDefaultImports":
    true` (`true` is the default value), you will need to import `LottieView` in the
    standard ES6 way: `import LottieView from "lottie-react-native";`.'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '如果你的 `tsconfig.json` 文件定义了 `"esModuleInterop": true` 和 `"allowSyntheticDefaultImports":
    true`（`true` 是默认值），你将需要以标准的 ES6 方式导入 `LottieView`：`import LottieView from "lottie-react-native";`。'
- en: 'Let''s see how both ways could be implemented in the sample code we developed
    previously:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何在之前开发的示例代码中实现这两种方式：
- en: '[PRE108]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: '[PRE109]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: '[PRE110]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: '[PRE111]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: '[PRE112]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: '[PRE113]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: '[PRE114]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: '[PRE115]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: '[PRE116]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: '[PRE117]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: '[PRE118]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: '[PRE119]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: '[PRE120]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: '[PRE121]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: '[PRE122]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: '[PRE123]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE123]'
- en: '[PRE124]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: '[PRE125]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: In the next section, we will see where to find the best resources to work around
    other caveats when using the `lottie-react-native` library.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将看到如何找到最佳资源，以解决使用 `lottie-react-native` 库时的其他注意事项。
- en: Finding documentation for lottie-react-native
  id: totrans-186
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 寻找 lottie-react-native 的文档
- en: 'Getting stuck when using a third-party library might be a frustrating experience
    but in the case of `lottie-react-native`, there is a large knowledge base accessible
    on the public repository of the library: [https://github.com/lottie-react-native/](https://github.com/lottie-react-native/).'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用第三方库时遇到困难可能是一种令人沮丧的经历，但在`lottie-react-native`的情况下，库的公共仓库中有一个庞大的知识库可供访问：[https://github.com/lottie-react-native/](https://github.com/lottie-react-native/)。
- en: 'This knowledge base includes the following elements:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 这个知识库包括以下元素：
- en: '`lottie-react-native` (at a basic level). This file serves as a good introduction
    to the library and should be the first resource to check when looking for help
    related to library usage.'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lottie-react-native`（在基本层面上）。这个文件作为对库的良好介绍，应该是寻找与库使用相关的帮助时的第一个资源。'
- en: '`LottieView` component to control the animations in our apps.'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`LottieView`组件来控制我们应用中的动画。
- en: '**TypeScript caveats** ([https://github.com/lottie-react-native/lottie-react-native/blob/master/docs/typescript.md](https://github.com/lottie-react-native/lottie-react-native/blob/master/docs/typescript.md)):
    As we saw in the *Using lottie-react-native in your TypeScript app* section, TypeScript
    can be difficult to integrate. This document explains what problems we might run
    into and how to work around them.'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**TypeScript 注意事项** ([https://github.com/lottie-react-native/lottie-react-native/blob/master/docs/typescript.md](https://github.com/lottie-react-native/lottie-react-native/blob/master/docs/typescript.md)):
    正如在*在TypeScript应用中使用lottie-react-native*部分中看到的，TypeScript的集成可能会很困难。这份文档解释了我们可能会遇到的问题以及如何绕过这些问题。'
- en: '`lottie-react-native`.'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lottie-react-native`.'
- en: '**CHANGELOG** ([https://github.com/lottie-react-native/lottie-react-native/blob/master/CHANGELOG.md](https://github.com/lottie-react-native/lottie-react-native/blob/master/CHANGELOG.md)):
    A list of the versions released for the library. This document is very useful
    when having issues with a specific feature or platform so we can revert/update
    to versions where those issues don''t exist.'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**变更日志** ([https://github.com/lottie-react-native/lottie-react-native/blob/master/CHANGELOG.md](https://github.com/lottie-react-native/lottie-react-native/blob/master/CHANGELOG.md)):
    列出了为库发布的版本。当遇到特定功能或平台的问题时，这份文档非常有用，我们可以回滚/更新到不存在这些问题的版本。'
- en: '**Contributing guide** ([https://github.com/lottie-react-native/lottie-react-native/blob/master/CONTRIBUTING.md](https://github.com/lottie-react-native/lottie-react-native/blob/master/CONTRIBUTING.md)):
    This document explains how to request help or contribute code updates to the open
    source repository.'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**贡献指南** ([https://github.com/lottie-react-native/lottie-react-native/blob/master/CONTRIBUTING.md](https://github.com/lottie-react-native/lottie-react-native/blob/master/CONTRIBUTING.md)):
    这份文档解释了如何请求帮助或向开源仓库贡献代码更新。'
- en: '**Pull requests** ([https://github.com/lottie-react-native/lottie-react-native/pulls](https://github.com/lottie-react-native/lottie-react-native/pulls)):
    This is the list of contributions that are proposed to the library. Users can
    use this list to find out about upcoming fixes or discussions about bugs and features.'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**拉取请求** ([https://github.com/lottie-react-native/lottie-react-native/pulls](https://github.com/lottie-react-native/lottie-react-native/pulls)):
    这是提交给库的贡献列表。用户可以使用这个列表来了解即将推出的修复或关于错误和功能的讨论。'
- en: '**Issues** ([https://github.com/lottie-react-native/lottie-react-native/issues](https://github.com/lottie-react-native/lottie-react-native/issues)):
    Here, library users share their problems, bugs, or questions about the library.
    This is a good resource to search through when getting problems with library usage
    or integration.'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**问题** ([https://github.com/lottie-react-native/lottie-react-native/issues](https://github.com/lottie-react-native/lottie-react-native/issues)):
    在这里，库用户分享他们的问题、错误或关于库的疑问。当使用库或集成时遇到问题时，这是一个很好的搜索资源。'
- en: '**Lottie for iOS repository** ([https://github.com/airbnb/lottie-ios](https://github.com/airbnb/lottie-ios)):
    A source of information for the iOS-specific library for Lottie. This can be used
    to search for iOS-specific issues or features.'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Lottie for iOS 仓库** ([https://github.com/airbnb/lottie-ios](https://github.com/airbnb/lottie-ios)):
    Lottie的iOS特定库的信息来源。可以用来搜索iOS特定的错误或功能。'
- en: '**Lottie for Android repository** ([https://github.com/airbnb/lottie-android](https://github.com/airbnb/lottie-android)):
    A source of information for the Android-specific library for Lottie. This can
    be used to search for Android-specific issues or features.'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Lottie for Android 仓库** ([https://github.com/airbnb/lottie-android](https://github.com/airbnb/lottie-android)):
    Lottie的Android特定库的信息来源。可以用来搜索Android特定的错误或功能。'
- en: Now we have all the resources to get started, let's import and use our first
    Lottie file in our app.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经拥有了开始所需的全部资源，让我们在我们的应用中导入并使用第一个Lottie文件。
- en: Using remote Lottie files
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用远程Lottie文件
- en: For optimal performance, animations should be included locally within the app's
    folder structure but, in some cases, it could be useful to use a remote JSON file
    as a Lottie animation to be rendered in our React Native apps. For these cases,
    `lottie-react-native` allows us to transparently specify a remote URL as the source
    of the animation through the source prop passed to `LottieView`.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获得最佳性能，动画应包含在应用程序的文件夹结构中，但在某些情况下，使用远程 JSON 文件作为 Lottie 动画以在 React Native 应用程序中渲染可能很有用。在这些情况下，`lottie-react-native`
    允许我们通过传递给 `LottieView` 的 `source` 属性透明地指定远程 URL 作为动画的源。
- en: 'Let''s see how our initial example would look if we used a remote animation
    instead of a local one:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如果使用远程动画而不是本地动画，我们的初始示例会是什么样子：
- en: '[PRE126]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE126]'
- en: '[PRE127]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE127]'
- en: '[PRE128]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: '[PRE129]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: '[PRE130]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE130]'
- en: '[PRE131]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE131]'
- en: '[PRE132]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE132]'
- en: '[PRE133]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE133]'
- en: '[PRE134]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE134]'
- en: '[PRE135]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE135]'
- en: '[PRE136]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE136]'
- en: '[PRE137]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE137]'
- en: '[PRE138]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE138]'
- en: '[PRE139]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE139]'
- en: '[PRE140]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE140]'
- en: '[PRE141]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE141]'
- en: '[PRE142]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE142]'
- en: '[PRE143]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE143]'
- en: '[PRE144]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE144]'
- en: '[PRE145]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE145]'
- en: '[PRE146]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE146]'
- en: '[PRE147]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE147]'
- en: '[PRE148]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE148]'
- en: '[PRE149]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE149]'
- en: '[PRE150]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE150]'
- en: As this example shows, only the `source` property needs to change its value.
    In this case, we replaced the `require` statement with a simple URL that points
    to a JSON Lottie animation that is hosted on a public server. For external sources,
    users need to make sure that the app will always have access to the external file,
    as failing to reach the remote URL would show an empty space instead of showing
    the animation itself.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 如此例所示，只需更改 `source` 属性的值。在这种情况下，我们将 `require` 语句替换为一个简单的 URL，该 URL 指向托管在公共服务器上的
    JSON Lottie 动画。对于外部源，用户需要确保应用程序始终可以访问外部文件，因为无法访问远程 URL 将显示一个空白区域而不是显示动画本身。
- en: Assets (such as images) can also be used inside Lottie files and rendered with
    `lottie-react-native`. Let's take a look at how this behavior can be achieved
    through code.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 资产（如图像）也可以在 Lottie 文件中使用，并通过 `lottie-react-native` 进行渲染。让我们看看如何通过代码实现这种行为。
- en: Using Lottie files with assets
  id: totrans-230
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用带有资产的 Lottie 文件
- en: 'Lottie animations may contain external images displayed in them to make richer
    and more complex animations. When using AE and the Bodymovin plugin to create
    animations, the exported JSON may have various assets to rely on, such as the
    following:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: Lottie 动画可能包含显示在其中的外部图像，以制作更丰富和更复杂的动画。当使用 AE 和 Bodymovin 插件创建动画时，导出的 JSON 可能包含各种资产，例如以下内容：
- en: '[PRE151]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE151]'
- en: '[PRE152]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE152]'
- en: '[PRE153]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE153]'
- en: '[PRE154]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE154]'
- en: '[PRE155]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE155]'
- en: '[PRE156]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE156]'
- en: '[PRE157]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE157]'
- en: '[PRE158]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE158]'
- en: '[PRE159]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE159]'
- en: '[PRE160]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE160]'
- en: '[PRE161]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE161]'
- en: 'In these cases, our app needs to include the files inside its binary, so you
    will need to add the files to the project and re-build it from scratch running
    `yarn ios` or `yarn android` so the app is compiled together with the newly added
    assets being used in the animation. Adding the assets to the project differs depending
    on which platform we are targeting:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些情况下，我们的应用程序需要包含其二进制文件内的文件，因此您需要将文件添加到项目中，并从零开始重新构建它，运行 `yarn ios` 或 `yarn
    android` 以确保应用程序与动画中使用的新的资产一起编译。根据我们针对的平台，将资产添加到项目中的方法不同：
- en: '`resources` folder you can find in the right-hand column, and click on **Add
    file to "LottieReactNative"…** to select the images required.'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在右侧列中可以找到的 `resources` 文件夹，然后点击 **将文件添加到 "LottieReactNative"…** 以选择所需的图像。
- en: '![Figure 9.2 – Adding animation assets in Xcode'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.2 – 在 Xcode 中添加动画资产'
- en: '](img/B17930_09_02.jpg)'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17930_09_02.jpg)'
- en: Figure 9.2 – Adding animation assets in Xcode
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.2 – 在 Xcode 中添加动画资产
- en: '`[PROJECT FOLDER]/android/app/src/main/assets`. It is a good practice to establish
    a `lottie` subdirectory and then a folder for each animation. You''ll need to
    refer to that folder in the `imageAssetsFolder` prop for the animation, using
    its relative path.'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[项目文件夹]/android/app/src/main/assets`。建立一个 `lottie` 子目录，然后为每个动画创建一个文件夹是一个好习惯。您需要在动画的
    `imageAssetsFolder` 属性中引用该文件夹，使用其相对路径。'
- en: 'Let''s take a look at an example of this:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这个例子：
- en: '[PRE162]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE162]'
- en: 'It is possible to rename the assets once you have them in your project, but
    you will need to modify the JSON file containing the Lottie animation too in order
    to identify the asset file by its new name:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您在项目中有了资产，您就可以重命名它们，但您还需要修改包含 Lottie 动画的 JSON 文件，以便通过其新名称识别资产文件：
- en: '[PRE163]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE163]'
- en: '[PRE164]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE164]'
- en: '[PRE165]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE165]'
- en: '[PRE166]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE166]'
- en: '[PRE167]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE167]'
- en: '[PRE168]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE168]'
- en: '[PRE169]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE169]'
- en: '[PRE170]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE170]'
- en: '[PRE171]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE171]'
- en: '[PRE172]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE172]'
- en: '[PRE173]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE173]'
- en: With this, we will have our shiny assets loaded into our animations, making
    them fully capable of rendering external images.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种方式，我们将把闪亮的资产加载到我们的动画中，使它们能够完全渲染外部图像。
- en: Summary
  id: totrans-264
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have learned about the way Lottie animations can be loaded
    into React Native, using basic integrations such as TypeScript types, and adding
    external assets into our animations. This gives us the ability to display complex
    animations inside our React Native apps, but what happens if we need to be in
    control of the playback (for example, tell the animation to start/stop based on
    events happening in the app)?
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何使用基本集成，如 TypeScript 类型，将 Lottie 动画加载到 React Native 中，以及如何将外部资产添加到我们的动画中。这使得我们能够在
    React Native 应用中显示复杂的动画，但如果我们需要控制播放（例如，根据应用中发生的事件告诉动画开始/停止）会怎样呢？
- en: Let's move on to the next chapter to discover how controlling Lottie animations
    in `lottie-react-native` is done.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进入下一章，了解如何在 `lottie-react-native` 中控制 Lottie 动画。
