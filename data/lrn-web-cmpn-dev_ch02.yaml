- en: Chapter 2. Introducing Polymer
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章. 介绍聚合库
- en: In this chapter, you will be introduced to the Polymer library. You will learn
    how to install the Polymer library to an application, which will be followed by
    a section on core element and paper elements. In the later section of this chapter,
    you will explore the Polymer designer tool.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将了解聚合库。您将学习如何将聚合库安装到应用程序中，随后将介绍核心元素和纸张元素。在本章的后续部分，您将探索聚合库设计工具。
- en: What is Polymer?
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是聚合库？
- en: Polymer is a library developed by Google developers to support web component
    development. Basically, it is built on the guidelines by W3C web component specification.
    Before it is implemented by all browsers, it also adds some syntactic sugar on
    top of the web component standards. The goal of Polymer is an attempt at getting
    a test of web component specification completely implemented by a browser.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 聚合库是由Google开发者开发的库，用于支持Web组件开发。基本上，它是基于W3C Web组件规范制定的。在所有浏览器实现之前，它还在Web组件标准之上添加了一些语法糖。聚合库的目标是尝试让浏览器完全实现Web组件规范。
- en: Polymer follows the element-based application development where we can build
    our own elements similar to an HTML element. Element-based application development
    increases reusability of the developed code across different applications.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 聚合库遵循基于元素的库应用开发，我们可以构建类似于HTML元素的自己的元素。基于元素的库应用开发增加了在不同应用程序中开发代码的可重用性。
- en: Installing and configuring Polymer
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和配置聚合库
- en: 'The Polymer library can be obtained in the following three different ways:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 聚合库可以通过以下三种不同的方式获得：
- en: Downloading ZIP file
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载ZIP文件
- en: Using GIT clone
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用GIT克隆
- en: Using Bower
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Bower
- en: Downloading ZIP file
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载ZIP文件
- en: 'The Polymer library can be downloaded as a zipped file using the link at [https://www.polymer-project.org/0.5/docs/start/getting-the-code.html#using-zip](https://www.polymer-project.org/0.5/docs/start/getting-the-code.html#using-zip)
    .The directory can be unzipped and the Polymer library can be extracted from it.
    The following screenshot shows the unzipped directory containing the Polymer library:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用[https://www.polymer-project.org/0.5/docs/start/getting-the-code.html#using-zip](https://www.polymer-project.org/0.5/docs/start/getting-the-code.html#using-zip)上的链接将聚合库下载为压缩文件。解压目录后，可以从其中提取聚合库。以下截图显示了包含聚合库的解压目录：
- en: '![Downloading ZIP file](img/image00227.jpeg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![下载ZIP文件](img/image00227.jpeg)'
- en: 'The Polymer library is present inside the `polymer` directory. The HTML file
    `polymer.html` is present inside the `polymer` directory. This `polymer.html`
    file can be included to application by using *HTML Import*. The following code
    shows the syntax of the Polymer file:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 聚合库位于`polymer`目录中。HTML文件`polymer.html`也位于`polymer`目录中。可以通过使用*HTML导入*将此`polymer.html`文件包含到应用程序中。以下代码显示了聚合文件的语法：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Using GIT clone
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用GIT克隆
- en: 'Polymer can also be cloned using the GIT tool. The command for cloning GIT
    in the project is as follows:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 聚合库也可以使用GIT工具进行克隆。在项目中克隆GIT的命令如下：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The following screenshot shows the GIT cloning of the Polymer library inside
    the Window''s command prompt:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图显示了在Windows命令提示符中克隆聚合库的过程：
- en: '![Using GIT clone](img/image00228.jpeg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![使用GIT克隆](img/image00228.jpeg)'
- en: Once the above GIT clone is completed, it creates a directory structure inside
    the current directory, as shown in the following screenshot. We can find the `polymer`
    directory that contains `polymer.html` and some other files inside the `components`
    folder.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦完成上述的GIT克隆，它将在当前目录内创建一个目录结构，如下面的截图所示。我们可以找到包含`polymer.html`和一些其他文件的`components`文件夹中的`polymer`目录。
- en: '![Using GIT clone](img/image00229.jpeg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![使用GIT克隆](img/image00229.jpeg)'
- en: Using Bower
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Bower
- en: Bower is a package manager for web application development. A package manager
    is a collection of software tools that automate the process of installing, upgrading,
    configuring, and removing software packages for a computer's operating system
    in a consistent manner. To install Bower in the system, **node package manager**
    (**npm**) is required. More details about Bower installation are available at
    [http://bower.io/#install-bower](http://bower.io/#install-bower).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Bower是一个用于Web应用程序开发的包管理器。包管理器是一组软件工具，它以一致的方式自动化计算机操作系统的软件包的安装、升级、配置和删除过程。要在系统中安装Bower，需要**node包管理器**（**npm**）。有关Bower安装的更多详细信息，请参阅[http://bower.io/#install-bower](http://bower.io/#install-bower)。
- en: 'Assuming that Bower is installed in the system, we will go ahead and install
    the Polymer library. For the first time, Bower can be initialized to a web application
    project using the following command:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 假设Bower已安装在系统中，我们将继续安装Polymer库。首次安装时，可以使用以下命令将Bower初始化为Web应用程序项目：
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'When the preceding command is executed, it asks a set of questions regarding
    the web application configuration properties. The following screenshot shows the
    command prompt with the above command in effect:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当执行前面的命令时，它会询问一系列关于Web应用程序配置属性的问题。以下截图显示了带有上述命令的命令提示符：
- en: '![Using Bower](img/image00230.jpeg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![使用Bower](img/image00230.jpeg)'
- en: 'After the execution of the preceding command, it creates a `bower.json` file
    inside the application directory. The following code shows the content of the
    `bower.json` file containing all the default settings of the application:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 执行前面的命令后，它会在应用程序目录内创建一个`bower.json`文件。以下代码显示了包含应用程序所有默认设置的`bower.json`文件内容：
- en: '[PRE3]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Once the `bower.json` file is created, now we can install the Polymer library.
    Use the following command to install the Polymer library:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦创建了`bower.json`文件，现在我们可以安装Polymer库。使用以下命令安装Polymer库：
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The following screenshot shows the command prompt installing the Polymer library
    inside an application:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了在应用程序内安装Polymer库时的命令提示符：
- en: '![Using Bower](img/image00231.jpeg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![使用Bower](img/image00231.jpeg)'
- en: 'Once the Polymer library is installed, the `bower.json` file gets updated with
    the dependencies property. The following code shows the updated content of the
    `bower.json` file:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦安装了Polymer库，`bower.json`文件就会更新依赖属性。以下代码显示了`bower.json`文件的更新内容：
- en: '[PRE5]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Architecture of PolymerJS
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PolymerJS的架构
- en: 'The Polymer library is built upon multiple layers of technology, with each
    layer serving a specific purpose. The following diagram shows the technology stack
    of the Polymer library:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Polymer库建立在多层技术之上，每一层都有其特定的用途。以下图表显示了Polymer库的技术堆栈：
- en: '![Architecture of PolymerJS](img/image00232.jpeg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![PolymerJS的架构](img/image00232.jpeg)'
- en: 'The following list shows four important layers of Polymer:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表显示了Polymer的四个重要层：
- en: '**Native layer**: This layer represents the current state of browser support
    and implementation for the web component specification.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**原生层**：这一层代表Web组件规范在浏览器中的支持状态和实现情况。'
- en: '**Foundation layer**: This layer contains the polyfill libraries for the web
    component specification. A polyfill is a piece of code that simulates behavior
    when it is not available natively in a browser. To find out more about polyfill,
    refer to [http://en.wikipedia.org/wiki/Polyfill](http://en.wikipedia.org/wiki/Polyfill).'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基础层**：这一层包含Web组件规范的polyfill库。polyfill是一段代码，当浏览器原生不支持时，它可以模拟这种行为。要了解更多关于polyfill的信息，请参阅[http://en.wikipedia.org/wiki/Polyfill](http://en.wikipedia.org/wiki/Polyfill)。'
- en: '**Core layer**: This layer contains the Polymer library code. The Polymer library
    can be found in the `polymer.html` file.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**核心层**：这一层包含Polymer库代码。Polymer库可以在`polymer.html`文件中找到。'
- en: '**Elements layer**: This layer contains the core and paper elements.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**元素层**：这一层包含核心和paper元素。'
- en: 'At the top of the Polymer architecture, another layer of applications are present.
    This layer represents the applications developed using the Polymer library. So,
    we can conclude that the Polymer technology is built on the following three different
    building blocks:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在Polymer架构的顶部，还有一个应用层。这一层代表使用Polymer库开发的程序。因此，我们可以得出结论，Polymer技术建立在以下三个不同的构建块之上：
- en: Web components with polyfill
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 带有polyfill的Web组件
- en: The Polymer library
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: The Polymer library
- en: Elements
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 元素
- en: Web components with polyfill
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 带有polyfill的Web组件
- en: Web component specification is new to browsers. It is not completely implemented
    by browsers, so to bridge this gap, Polymer comes with a polyfill in a `webcomponent.js`
    file.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: Web组件规范对浏览器来说是新的。浏览器并没有完全实现它，因此为了填补这一差距，Polymer在`webcomponent.js`文件中提供了一个polyfill。
- en: 'In the early release of the Polymer library, polyfill was named as `platform.js`.
    The `webcomponent.js` script provides the polyfill for the following technologies:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在Polymer库的早期版本中，polyfill被命名为`platform.js`。`webcomponent.js`脚本为以下技术提供了polyfill：
- en: '**Shadow DOM**: This provides a private scope to separate the content from
    presentation. You can refer to [Chapter 1](lrn-web-cmpn-dev_ch01.html#aid-DB7S1
    "Chapter 1. Introducing Web Components"), *Introducing Web Components* to revise
    the Shadow DOM concept.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Shadow DOM**：这提供了一个私有作用域，将内容与表现分离。您可以参考[第 1 章](lrn-web-cmpn-dev_ch01.html#aid-DB7S1
    "第 1 章。介绍 Web 组件")，*介绍 Web 组件*来复习 Shadow DOM 的概念。'
- en: '**HTML Imports**: This includes the external HTML document in the current page.
    You can refer to [Chapter 1](lrn-web-cmpn-dev_ch01.html#aid-DB7S1 "Chapter 1. Introducing
    Web Components"), *Introducing Web Components* to revise the HTML Import concept.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**HTML 导入**：这包括将外部 HTML 文档包含在当前页面中。您可以参考[第 1 章](lrn-web-cmpn-dev_ch01.html#aid-DB7S1
    "第 1 章。介绍 Web 组件")，*介绍 Web 组件*来复习 HTML 导入的概念。'
- en: '**Custom elements**: A new element can be created using custom element. You
    can refer to [Chapter 1](lrn-web-cmpn-dev_ch01.html#aid-DB7S1 "Chapter 1. Introducing
    Web Components"), *Introducing Web Components* to revise the custom element concept.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自定义元素**：可以使用自定义元素创建新元素。您可以参考[第 1 章](lrn-web-cmpn-dev_ch01.html#aid-DB7S1
    "第 1 章。介绍 Web 组件")，*介绍 Web 组件*来复习自定义元素的概念。'
- en: '**WeakMap**: The WeakMap object is a collection of key/value pairs in which
    the keys are used for getting the associated value. To find out more about WeakMap
    objects, refer to [https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/WeakMap](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/WeakMap).'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**WeakMap**：WeakMap 对象是一个键/值对的集合，其中键用于获取关联的值。要了解更多关于 WeakMap 对象的信息，请参阅[https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/WeakMap](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/WeakMap)。'
- en: '**Mutation observer**: This provides a way to execute a callback method by
    listening to the DOM changes. To find out more about mutation observer, refer
    to [https://developer.mozilla.org/en/docs/Web/API/MutationObserver](https://developer.mozilla.org/en/docs/Web/API/MutationObserver).'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Mutation observer**：这提供了一种通过监听 DOM 变化来执行回调方法的方式。要了解更多关于 mutation observer
    的信息，请参阅[https://developer.mozilla.org/en/docs/Web/API/MutationObserver](https://developer.mozilla.org/en/docs/Web/API/MutationObserver)。'
- en: 'During the installation of Polymer using Bower, the web component polyfill
    gets downloaded automatically to the project directory. To install the web component
    polyfill as an independent download, use the following Bower command:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 Bower 安装 Polymer 期间，web 组件 polyfill 会自动下载到项目目录。要作为独立下载安装 web 组件 polyfill，请使用以下
    Bower 命令：
- en: '[PRE6]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'We can also install the web component polyfill using npm. To install the web
    component polyfill using npm, use the following command:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以使用 npm 安装 web 组件 polyfill。要使用 npm 安装 web 组件 polyfill，请使用以下命令：
- en: '[PRE7]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Once the above command is executed successfully, a `webcomponentsjs` directory
    is added to the project component directory. This directory contains the following
    polyfill files:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦成功执行上述命令，就会在项目组件目录中添加一个 `webcomponentsjs` 目录。此目录包含以下 polyfill 文件：
- en: '`ShadowDOM.js`: This JavaScript file contains the polyfill code for Shadow
    DOM'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ShadowDOM.js`：此 JavaScript 文件包含 Shadow DOM 的 polyfill 代码'
- en: '`ShadowDOM.min.js`: This file is a minified version of `shadowDOM.js`.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ShadowDOM.min.js`：此文件是 `shadowDOM.js` 的压缩版本。'
- en: '`HTMLImports.js`: This JavaScript file contains the polyfill code for HTML
    Imports'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`HTMLImports.js`：此 JavaScript 文件包含 HTML 导入的 polyfill 代码'
- en: '`HTMLImports.min.js`: This file is a minified version of `HTMLImports.js`'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`HTMLImports.min.js`：此文件是 `HTMLImports.js` 的压缩版本'
- en: '`CustomElements.js`: This JavaScript file contains the polyfill code for custom
    elements'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CustomElements.js`：此 JavaScript 文件包含自定义元素的 polyfill 代码'
- en: '`CustomElements.min.js`: This file is a minified version of `CustomElements.js`'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CustomElements.min.js`：此文件是 `CustomElements.js` 的压缩版本'
- en: '`webcomponents.js`: This JavaScript file contains the polyfill code for the
    entire web component specification'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`webcomponents.js`：此 JavaScript 文件包含整个 web 组件规范的 polyfill 代码'
- en: '`webcomponents.min.js`: This file is a minified version of `webcomponents.js`'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`webcomponents.min.js`：此文件是 `webcomponents.js` 的压缩版本'
- en: '`webcomponents-lite.js`: This is a lighter version of `webcomponent.js` containing
    polyfill code for HTML imports and custom elements'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`webcomponents-lite.js`：这是 `webcomponent.js` 的轻量版本，包含 HTML 导入和自定义元素的 polyfill
    代码'
- en: '`webcomponents-lite.min.js`: This file is a minified version of `webcomponents-lite.js`'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`webcomponents-lite.min.js`：此文件是 `webcomponents-lite.js` 的压缩版本'
- en: To find out more about the web component polyfill, refer to [http://webcomponents.org/polyfills](http://webcomponents.org/polyfills).
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于 web 组件 polyfill 的信息，请参阅[http://webcomponents.org/polyfills](http://webcomponents.org/polyfills)。
- en: The Polymer library
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Polymer 库
- en: 'The Polymer library is the core file of this framework and is built upon the
    web component polyfill. When installing the Polymer library using the Bower tool,
    a `polymer` directory gets installed to the project folder. This `polymer` directory
    mainly contains the following files:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: Polymer 库是这个框架的核心文件，它建立在 Web 组件 polyfill 之上。当使用 Bower 工具安装 Polymer 库时，会在项目文件夹中安装一个
    `polymer` 目录。这个 `polymer` 目录主要包含以下文件：
- en: '`polymer.js`: This is the core JavaScript file, which has the code for all
    the ''magical features'' provided by the Polymer library. We will explore these
    magical features in the coming section.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`polymer.js`：这是核心 JavaScript 文件，其中包含 Polymer 库提供的所有“魔法特性”的代码。我们将在下一节中探讨这些魔法特性。'
- en: '`polymer-min.js`: This is a minified version of the `polymer.js` file.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`polymer-min.js`：这是 `polymer.js` 文件的压缩版本。'
- en: '`layout.html`: This file contains CSS attributes for creating layout positions
    for the elements present inside the page.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`layout.html`：这个文件包含用于在页面内创建元素布局位置的 CSS 属性。'
- en: '`polymer.html`: This file contains combined code by including links to `polymer.js`
    and `layout.html` files, and can be included to a current page using HTML Import.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`polymer.html`：这个文件包含通过链接到 `polymer.js` 和 `layout.html` 文件组合的代码，并且可以通过 HTML
    Import 包含到当前页面中。'
- en: Elements
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 元素
- en: 'In the Polymer world, everything is an element. The Polymer team come with
    a set of elements to build web application. These elements can be divided into
    the following two categories:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Polymer 世界中，一切都是一个元素。Polymer 团队提供了一套元素来构建 Web 应用程序。这些元素可以分为以下两个类别：
- en: Core elements
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 核心元素
- en: Paper elements
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Paper 元素
- en: Core elements
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 核心元素
- en: 'Polymer core elements are a set of general purpose UI and non-UI elements for
    building web pages. They include icons, layouts, toolbars, AJAX, signaling, and
    storage elements. There are many core elements present inside the Polymer library.
    We can directly download the entire set of core elements as a single ZIP from
    [https://bowerarchiver.appspot.com/archive?core-elements=Polymer/core-elements](https://bowerarchiver.appspot.com/archive?core-elements=Polymer/core-elements).
    Also, we can include the entire core element set using the following Bower command:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Polymer 核心元素是一组通用 UI 和非 UI 元素，用于构建网页。它们包括图标、布局、工具栏、AJAX、信号和存储元素。Polymer 库中包含许多核心元素。我们可以直接从
    [https://bowerarchiver.appspot.com/archive?core-elements=Polymer/core-elements](https://bowerarchiver.appspot.com/archive?core-elements=Polymer/core-elements)
    下载整个核心元素集作为一个单独的 ZIP 文件。此外，我们还可以使用以下 Bower 命令包含整个核心元素集：
- en: '[PRE8]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The following screenshot shows the installation of core elements in the command
    prompt using Bower:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了使用 Bower 在命令提示符中安装核心元素：
- en: '![Core elements](img/image00233.jpeg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![核心元素](img/image00233.jpeg)'
- en: 'Once the preceding command is successfully executed, we can include the set
    of core elements to our web page by HTML Imports. The following code shows the
    HTML Import of core elements inside the web page:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦前面的命令成功执行，我们就可以通过 HTML Imports 将核心元素集包含到我们的网页中。以下代码展示了网页内核心元素的 HTML Import：
- en: '[PRE9]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: We can find the complete list of core elements at [https://www.polymer-project.org/docs/elements/core-elements.html](https://www.polymer-project.org/docs/elements/core-elements.html).
    However, we will explore few of them.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在 [https://www.polymer-project.org/docs/elements/core-elements.html](https://www.polymer-project.org/docs/elements/core-elements.html)
    找到核心元素的完整列表。然而，我们将探索其中的一些。
- en: The core-input element
  id: totrans-90
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '`core-input` 元素'
- en: 'The `core-input` element is a single line input field, which extends the native
    HTML input element. To install the `core-input` field as a standalone component,
    we can use the following Bower command:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '`core-input` 元素是一个单行输入字段，它扩展了原生的 HTML 输入元素。要将 `core-input` 字段作为独立组件安装，我们可以使用以下
    Bower 命令：'
- en: '[PRE10]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The following screenshot shows the command prompt with the `core-input` field
    installation in progress:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了命令提示符中 `core-input` 字段安装正在进行：
- en: '![The core-input element](img/image00234.jpeg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![核心输入元素](img/image00234.jpeg)'
- en: 'After the installation of the `core-input` element, it can be imported using
    HTML Import. The code for including `core-input` to the current page is as follows:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装 `core-input` 元素后，可以使用 HTML Import 导入它。将 `core-input` 包含到当前页面的代码如下：
- en: '[PRE11]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'A normal input element can be converted to a core input by using the `is` attribute.
    The code for the `core-input` element is as follows:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用 `is` 属性，可以将一个普通输入元素转换为核心输入。`core-input` 元素的代码如下：
- en: '[PRE12]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The `core-input` element has the following properties and methods:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '`core-input` 元素具有以下属性和方法：'
- en: '`value`: This attribute is inherited from the `<input>` element and represents
    the current value'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`value`：此属性从`<input>`元素继承，表示当前值'
- en: '`committedValue`: This attribute contains the final value when the user hits
    the *Enter* key or blurs the input after changing the value'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`committedValue`：此属性包含用户按下*Enter*键或更改值后失去焦点时的最终值'
- en: '`commit`: This method is used to transfer the existing content inside the `value`
    attribute to the `committedValue` attribute'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`commit`：此方法用于将`value`属性中现有的内容传输到`committedValue`属性'
- en: '`preventInvalidInput`: This is a Boolean property and takes true value to prevent
    the invalid input'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`preventInvalidInput`：这是一个布尔属性，当其值为true时，用于防止无效输入'
- en: 'Now, let''s check out an example of using the `core-input` value and the preceding
    properties/methods. The following code shows the use of `core-input` element:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看如何使用`core-input`值和前面的属性/方法。以下代码展示了`core-input`元素的使用：
- en: '[PRE13]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The details of the preceding code are as follows:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 前面代码的详细信息如下：
- en: A `core-input` element with the `coreInput1` ID is included in the code. The
    `coreInput1` element is of type number.
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码中包含了一个具有`coreInput1` ID的`core-input`元素。`coreInput1`元素的数据类型为数字。
- en: This `coreInput1` element has the `preventInvalidInput` attribute set to `true`,
    which helps in preventing any invalid input from the user.
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个`coreInput1`元素将`preventInvalidInput`属性设置为`true`，这有助于防止用户输入任何无效数据。
- en: A `changeHandler` method is attached to the change event of the `coreInput1`
    element and gets called when any change is detected in the core element.
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`changeHandler`方法被附加到`coreInput1`元素的更改事件上，并在检测到核心元素中的任何更改时被调用。'
- en: Let's enter a valid number `1` into the core element and then click on the body
    of the page. This user action will trigger the `changeHandler` method to be executed.
    The following screenshot shows the output of the preceding code, where the **1**
    is entered to the core input element:![The core-input element](img/image00235.jpeg)
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 让我们在核心元素中输入一个有效的数字`1`，然后点击页面的主体。这个用户动作将触发`changeHandler`方法的执行。以下截图显示了前面代码的输出，其中**1**被输入到核心输入元素中：![核心输入元素](img/image00235.jpeg)
- en: Let's enter another number `2`, which again triggers the `changeHandler` method
    to be executed. The following screenshot shows the output of the preceding code,
    where **2** is entered to the core input element:![The core-input element](img/image00236.jpeg)
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 让我们输入另一个数字`2`，这将再次触发`changeHandler`方法的执行。以下截图显示了前面代码的输出，其中**2**被输入到核心输入元素中：![核心输入元素](img/image00236.jpeg)
- en: To find out more about the Polymer core-input element, refer to [https://www.polymer-project.org/docs/elements/core-elements.html#core-input](https://www.polymer-project.org/docs/elements/core-elements.html#core-input).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于Polymer核心输入元素的信息，请参阅[https://www.polymer-project.org/docs/elements/core-elements.html#core-input](https://www.polymer-project.org/docs/elements/core-elements.html#core-input)。
- en: The core-label element
  id: totrans-113
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '`core-label`元素'
- en: 'The `core-label` element provides a feature of the `<label>` element to target
    a specific element. To install `core-label` as a standalone component, we can
    use the following Bower command:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '`core-label`元素提供了`<label>`元素的一个功能，用于定位特定元素。要将`core-label`作为一个独立的组件安装，我们可以使用以下Bower命令：'
- en: '[PRE14]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The following screenshot shows the command prompt with the `core-label` element
    installation in progress:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了带有`core-label`元素安装过程的命令提示符：
- en: '![The core-label element](img/image00237.jpeg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![核心标签元素](img/image00237.jpeg)'
- en: 'After the installation of the `core-label` element, it can be imported using
    the HTML Import. The code for including the core input to the current page is
    as follows:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 安装`core-label`元素后，可以使用HTML导入来导入它。将核心输入包含到当前页面的代码如下：
- en: '[PRE15]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The code for the `core-label` element is as follows:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '`core-label`元素的代码如下：'
- en: '[PRE16]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The `core-label` element has the `for` property. The `for` attribute works like
    a query selector for targeting elements.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '`core-label`元素具有`for`属性。`for`属性的作用类似于查询选择器，用于定位元素。'
- en: 'Now, let''s check out an example of using the `core-label` element. The following
    code shows the different usages of the `core-label` element:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看如何使用`core-label`元素的一个示例。以下代码展示了`core-label`元素的不同用法：
- en: '[PRE17]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'In the preceding code, the `core-label` element has been used to target core
    input elements. This targeting has been done in two different ways:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，`core-label`元素被用来定位核心输入元素。这种定位是通过两种不同的方式完成的：
- en: '**Using for attribute**: The **Student Name** text is used as a label to target
    the `coreInput1` element'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用`for`属性**：**学生姓名**文本被用作标签来定位`coreInput1`元素'
- en: '**Wrapping target element**: The **Student Subject** text is used as a label
    to the `core-input` element by wrapping it up inside a `core-label` element'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**包装目标元素**：使用 `core-label` 元素将 `Student Subject` 文本包装起来，用作 `core-input` 元素的标签'
- en: 'The following screenshot shows the output of the preceding code, giving two
    different usages of the `core-label` element:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了前面代码的输出，展示了 `core-label` 元素的两种不同用法：
- en: '![The core-label element](img/image00238.jpeg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![核心标签元素](img/image00238.jpeg)'
- en: The core-tooltip element
  id: totrans-130
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 核心提示元素
- en: 'The `core-tooltip` element provides the feature of showing supportive information
    in a tooltip by targeting a specific element. To install `core-tooltip` as a standalone
    component, we can use the following Bower command:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '`core-tooltip` 元素通过针对特定元素提供在提示中显示支持信息的功能。要将 `core-tooltip` 作为独立组件安装，我们可以使用以下
    Bower 命令：'
- en: '[PRE18]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The following screenshot shows the command prompt with the `core-tooltip` element
    installation in progress:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了正在安装 `core-tooltip` 元素的命令提示符：
- en: '![The core-tooltip element](img/image00239.jpeg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![核心提示元素](img/image00239.jpeg)'
- en: 'After the installation of the `core-tooltip` element, it can be imported using
    the HTML Import. The code for including the `core-tooltip` to the current page
    is as follows:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 `core-tooltip` 元素后，可以使用 HTML 导入功能导入。将 `core-tooltip` 包含到当前页面的代码如下：
- en: '[PRE19]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The code for the `core-tooltip` element is as follows:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '`core-tooltip` 元素的代码如下：'
- en: '[PRE20]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The `core-tooltip` element has the following properties:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '`core-tooltip` 元素具有以下属性：'
- en: '`Label`: This attribute takes a string to display as a tooltip for the current
    target element'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Label`: 此属性接受一个字符串，用作当前目标元素的提示'
- en: '`Position`: This attribute takes the `right`, `left`, `top`, and `bottom` as
    values to align the tooltip around the target element'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Position`: 此属性接受 `right`、`left`、`top` 和 `bottom` 作为值，以围绕目标元素对齐提示'
- en: '`Show`: This attribute takes the Boolean value and for the `true` value makes
    the tooltip appear by default'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Show`: 此属性接受布尔值，对于 `true` 值，提示将默认显示'
- en: '`tip/tipAttribute`: The `tip` attribute specifies the HTML content for a rich
    tooltip and customizes this attribute with the `tipAttribute` attribute'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tip/tipAttribute`: `tip` 属性指定了丰富提示的 HTML 内容，并通过 `tipAttribute` 属性自定义此属性'
- en: '`noArrow`: This attribute takes the Boolean value, and for `true` input, the
    arrow of the tooltip will not be shown'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`noArrow`: 此属性接受布尔值，对于 `true` 输入，提示的箭头将不会显示'
- en: 'Now, let''s check out an example of using the `core-tooltip` element. The following
    code shows the different usages of the `core-tooltip` element:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看 `core-tooltip` 元素的一个使用示例。以下代码显示了 `core-tooltip` 元素的多种用法：
- en: '[PRE21]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The following screenshot shows the output of the preceding code, demonstrating
    the use of the `core-tooltip` element and its different properties:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了前面代码的输出，展示了 `core-tooltip` 元素及其不同属性的使用：
- en: '![The core-tooltip element](img/image00240.jpeg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![核心提示元素](img/image00240.jpeg)'
- en: Paper elements
  id: totrans-149
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 纸元素
- en: 'Paper elements are built on top of the Polymer core element. These elements
    are more rich in UI compared to the core elements. Basically, paper elements are
    built on the guidelines of *Google Material Design*. The following diagram shows
    a graphical representation of the relationship between these elements:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 纸元素建立在 Polymer 核心元素之上。与核心元素相比，这些元素在 UI 方面更加丰富。基本上，纸元素是按照 *Google Material Design*
    指南构建的。以下图表显示了这些元素之间的图形关系：
- en: '![Paper elements](img/image00241.jpeg)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![纸元素](img/image00241.jpeg)'
- en: Tip
  id: totrans-152
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: To find out more about *Google Material Design*, refer to [http://www.google.com/design/spec/material-design/introduction.html](http://www.google.com/design/spec/material-design/introduction.html).
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于 *Google Material Design* 的信息，请参阅 [http://www.google.com/design/spec/material-design/introduction.html](http://www.google.com/design/spec/material-design/introduction.html)。
- en: 'There are many paper elements present inside the Polymer library. We can directly
    download the entire set of paper element as a single ZIP file from [https://bowerarchiver.appspot.com/archive?paper-elements=Polymer/paper-elements](https://bowerarchiver.appspot.com/archive?paper-elements=Polymer/paper-elements).
    Also, we can include the entire paper element set using the following Bower command:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: Polymer 库中存在许多纸元素。我们可以直接下载整个纸元素集作为一个单独的 ZIP 文件，从 [https://bowerarchiver.appspot.com/archive?paper-elements=Polymer/paper-elements](https://bowerarchiver.appspot.com/archive?paper-elements=Polymer/paper-elements)。此外，我们还可以使用以下
    Bower 命令包含整个纸元素集：
- en: '[PRE22]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The following screenshot shows the installation of paper elements in the command
    prompt using Bower:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了使用Bower在命令提示符中安装纸张元素：
- en: '![Paper elements](img/image00242.jpeg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![纸张元素](img/image00242.jpeg)'
- en: 'Once the preceding command is successfully executed, we can include the paper
    elements set to our web page by HTML Imports. The following code shows the HTML
    Import of the paper element inside the web page:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦前面的命令成功执行，我们就可以通过HTML导入将纸张元素集包含到我们的网页中。以下代码显示了网页内`paper-element`的HTML导入：
- en: '[PRE23]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: We can find a complete list of the paper elements at [https://www.polymer-project.org/docs/elements/paper-elements.html](https://www.polymer-project.org/docs/elements/paper-elements.html).
    However, we will explore a few of them here.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在[https://www.polymer-project.org/docs/elements/paper-elements.html](https://www.polymer-project.org/docs/elements/paper-elements.html)找到纸张元素的完整列表。然而，在这里我们将探讨其中的一些。
- en: Material design
  id: totrans-161
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 材料设计
- en: 'This is a common design guideline for developing user interfaces across different
    devices. These guidelines are influenced with real-world material, such as paper
    and ink. The following diagram shows three building blocks—**Visual**, **Motion**,
    and **Interaction**:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个跨不同设备开发用户界面的常见设计指南。这些指南受到现实世界材料的影响，如纸张和墨水。以下图显示了三个构建块——**视觉**、**运动**和**交互**：
- en: '![Material design](img/image00243.jpeg)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![材料设计](img/image00243.jpeg)'
- en: To find out more about *Material Design* specification, refer to [http://www.google.com/design/spec/material-design/introduction.html](http://www.google.com/design/spec/material-design/introduction.html).
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于*材料设计*规范的信息，请参阅[http://www.google.com/design/spec/material-design/introduction.html](http://www.google.com/design/spec/material-design/introduction.html)。
- en: The paper-checkbox element
  id: totrans-165
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 纸张滑块元素
- en: 'The `paper-checkbox` element provides the feature of a normal checkbox element,
    but with better visualization through animation. To install `paper-checkbox` as
    a standalone component, we can use the following Bower command:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '`paper-checkbox`元素提供了普通复选框元素的特性，但通过动画提供了更好的可视化。要将`paper-checkbox`作为独立组件安装，我们可以使用以下Bower命令：'
- en: '[PRE24]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The following screenshot shows the command prompt with the `paper-checkbox`
    element installation in progress:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了带有`paper-checkbox`元素安装过程中的命令提示符：
- en: '![The paper-checkbox element](img/image00244.jpeg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![纸张滑块元素](img/image00244.jpeg)'
- en: 'After the installation of the `paper-checkbox` element, it can be imported
    using the HTML Import. The code for including `paper-checkbox` to the current
    page is as follows:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在`paper-checkbox`元素安装完成后，可以使用HTML导入来导入。将`paper-checkbox`包含到当前页面的代码如下：
- en: '[PRE25]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The code for the `paper-checkbox` element is as follows:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '`paper-checkbox`元素的代码如下：'
- en: '[PRE26]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The `paper-checkbox` element has the following events that can be attached
    to a callback method:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '`paper-checkbox`元素有以下事件可以附加到回调方法：'
- en: '`change`: This event is fired when the checked state changes due to user interaction'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`change`：当用户交互导致复选框的选中状态改变时触发此事件'
- en: '`core-change`: This event is fired when the checked state changes'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`core-change`：当复选框的选中状态改变时触发此事件'
- en: 'Now, let''s check out an example of using the `paper-checkbox` element. The
    following code shows the different usages of the `paper-checkbox` element:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看使用`paper-checkbox`元素的示例。以下代码显示了`paper-checkbox`元素的不同用法：
- en: '[PRE27]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The following screenshot shows the output of the preceding code, demonstrating
    the use of `paper-checkbox`:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了前面代码的输出，展示了`paper-checkbox`的使用：
- en: '![The paper-checkbox element](img/image00245.jpeg)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![纸张滑块元素](img/image00245.jpeg)'
- en: The paper-slider element
  id: totrans-181
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 纸张滑块元素
- en: 'The `paper-slider` element provides the feature of a range element, but with
    better visualization with animation. To install `paper-slider` as a standalone
    component, we can use the following Bower command:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '`paper-slider`元素提供了范围元素的特性，但通过动画提供了更好的可视化。要将`paper-slider`作为独立组件安装，我们可以使用以下Bower命令：'
- en: '[PRE28]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The following screenshot shows the command prompt with the `paper-slider` element
    installation in progress:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了带有`paper-slider`元素安装过程中的命令提示符：
- en: '![The paper-slider element](img/image00246.jpeg)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![纸张滑块元素](img/image00246.jpeg)'
- en: 'After the installation of the `paper-slider` element, it can be included using
    the HTML Import. The code for including the paper slider to the current page is
    as follows:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 在`paper-slider`元素安装完成后，可以使用HTML导入来包含。将纸张滑块包含到当前页面的代码如下：
- en: '[PRE29]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The code for the `paper-slider` element is as follows:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '`paper-slider`元素的代码如下：'
- en: '[PRE30]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'The `paper-slider` element has the following properties that can be used to
    customize the paper element:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '`paper-slider`元素有以下属性可以用来自定义纸元素：'
- en: '**Min, Max, and Value**: These are the properties inherited from the core range
    element and represent the lowest, highest, and current value of the slider respectively.
    To find out about core range element properties, refer to [https://www.polymer-project.org/docs/elements/core-elements.html#core-range](https://www.polymer-project.org/docs/elements/core-elements.html#core-range).'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**最小值、最大值和值**：这些是从核心范围元素继承的属性，分别代表滑块的最小值、最大值和当前值。要了解核心范围元素的属性，请参阅[https://www.polymer-project.org/docs/elements/core-elements.html#core-range](https://www.polymer-project.org/docs/elements/core-elements.html#core-range)。'
- en: '**Snaps**: This is based on the step value, where the slider arranges tick
    marks evenly with the slider''s thumb snap.'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Snaps**：这是基于步进值，滑块将刻度均匀地与滑块的拇指对齐。'
- en: '**Pin**: This property shows a visual pin, with a numeric value label shown
    when the slider thumb is pressed.'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Pin**：此属性显示一个视觉上的固定点，当滑块拇指被按下时，会显示一个数值标签。'
- en: There are a few more properties present inside the `paper-slider` element that
    can be found at [https://www.polymer-project.org/docs/elements/paper-elements.html#paper-slider](https://www.polymer-project.org/docs/elements/paper-elements.html#paper-slider).
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '`paper-slider`元素内部还有一些其他属性，可以在[https://www.polymer-project.org/docs/elements/paper-elements.html#paper-slider](https://www.polymer-project.org/docs/elements/paper-elements.html#paper-slider)找到。'
- en: 'Now, let''s check out an example of using the `paper-slider` element. The following
    code shows the different usages of the `paper-slider` element:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看如何使用`paper-slider`元素的一个示例。以下代码展示了`paper-slider`元素的不同用法：
- en: '[PRE31]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'The following screenshot shows the output of the preceding code, demonstrating
    the use of `paper-slider` properties:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了前面代码的输出，展示了`paper-slider`属性的使用：
- en: '![The paper-slider element](img/image00247.jpeg)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![paper-slider元素](img/image00247.jpeg)'
- en: The paper-button element
  id: totrans-199
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '`paper-button`元素'
- en: 'The `paper-button` element provides the feature of a range element, but with
    better visualization through animation. To install `paper-button` as a standalone
    component, we can use the following Bower command:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '`paper-button`元素提供了范围元素的特性，但通过动画提供了更好的可视化。要将`paper-button`作为独立组件安装，我们可以使用以下Bower命令：'
- en: '[PRE32]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The following screenshot shows the command prompt with the `paper-button` element
    installation in progress:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了带有`paper-button`元素安装过程的命令提示符：
- en: '![The paper-button element](img/image00248.jpeg)'
  id: totrans-203
  prefs: []
  type: TYPE_IMG
  zh: '![paper-button元素](img/image00248.jpeg)'
- en: 'After the installation of the `paper-button` element, it can be included using
    the HTML Import. The code for including `paper-button` to the current page is
    as follows:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装了`paper-button`元素之后，可以使用HTML导入将其包含进来。将`paper-button`包含到当前页面的代码如下：
- en: '[PRE33]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'The code for the `paper-button` element is as follows:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '`paper-button`元素的代码如下：'
- en: '[PRE34]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'The `paper-button` element has the following properties that can be used to
    customize the element:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '`paper-button`元素有以下属性可以用来自定义元素：'
- en: '`raised`: This attribute creates a shadow effect for the paper button'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`raised`：此属性为纸按钮创建阴影效果。'
- en: '`recenteringTouch`: The ripple effect produced by the button press can be customized
    using this attribute'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`recenteringTouch`：可以通过此属性自定义按钮按下时产生的涟漪效果。'
- en: '`fill`: This constrains the ripple effect produced by the button press to a
    circle within the button.'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`fill`：此属性将按钮按下时产生的涟漪效果限制在按钮内的圆形区域内。'
- en: 'Now, let''s check out an example of using the `paper-button` element. The following
    code shows the different usages of the `paper-button` element:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看如何使用`paper-button`元素的一个示例。以下代码展示了`paper-button`元素的不同用法：
- en: '[PRE35]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'The following screenshot shows the output of the preceding code, demonstrating
    the use of `paper-button` properties:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了前面代码的输出，展示了`paper-button`属性的使用：
- en: '![The paper-button element](img/image00249.jpeg)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![paper-button元素](img/image00249.jpeg)'
- en: Polymer designer tool
  id: totrans-216
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 聚合物设计工具
- en: The Polymer designer tool is an online tool for creating Polymer elements visually.
    It provides a drag and drop environment for a developer to create web application
    pages. You can find this tool at [https://www.polymer-project.org/tools/designer/](https://www.polymer-project.org/tools/designer/).
    The source code for the designer tool can be found at [https://github.com/polymer/designer](https://github.com/polymer/designer).
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: Polymer设计工具是一个用于可视创建Polymer元素的在线工具。它为开发者提供了一个拖放环境来创建Web应用页面。你可以在[https://www.polymer-project.org/tools/designer/](https://www.polymer-project.org/tools/designer/)找到此工具。设计工具的源代码可以在[https://github.com/polymer/designer](https://github.com/polymer/designer)找到。
- en: 'The following screenshot shows the home page of the designer tool:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了设计工具的主页：
- en: '![Polymer designer tool](img/image00250.jpeg)'
  id: totrans-219
  prefs: []
  type: TYPE_IMG
  zh: '![Polymer设计工具](img/image00250.jpeg)'
- en: 'The designer tool has the following three different main sections:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 设计工具有以下三个不同的主要部分：
- en: '**Header menu toolbar**: This toolbar is present at the top of the designer
    tool. It contains the following seven different options for developers:'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标题菜单工具栏**：此工具栏位于设计工具的顶部。它包含以下七个不同的选项供开发者使用：'
- en: '**Toggle code/design**—Using this option, we can toggle the view between design
    and code.'
  id: totrans-222
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**切换代码/设计**—使用此选项，我们可以在设计和代码视图之间切换。'
- en: '**Save**—Using this option, we can save the progress of the development.'
  id: totrans-223
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**保存**—使用此选项，我们可以保存开发进度。'
- en: '**Share Gist**—Using this option, we can share the code with GitHub gist.'
  id: totrans-224
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分享Gist**—使用此选项，我们可以通过GitHub gist分享代码。'
- en: '**Launch preview**—Using this option, we can preview the developed page in
    a new window.'
  id: totrans-225
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启动预览**—使用此选项，我们可以在新窗口中预览开发中的页面。'
- en: '**Undo**—Using this option, we can restore the last changed state.'
  id: totrans-226
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**撤销**—使用此选项，我们可以恢复到最后更改的状态。'
- en: '**Redo**—Using this option, we can restore the next changed state.'
  id: totrans-227
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**重做**—使用此选项，我们可以恢复到下一个更改的状态。'
- en: '**Toggle full width**—Using this option, we can make the design area to full
    width window.'
  id: totrans-228
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**切换全宽**—使用此选项，我们可以将设计区域设置为全宽窗口。'
- en: '**Main design area**: This is the drop target of the element. In this area,
    we can drop any element that needs to be present in the page. The design area
    is filled with horizontal and vertical grid lines.'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主要设计区域**：这是元素的拖放目标。在这个区域中，我们可以拖放任何需要出现在页面上的元素。设计区域填充了水平和垂直的网格线。'
- en: '**Right menu bar**: This bar is used to show the details of the currently selected
    element in the design. It is again divided into two subsections:'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**右菜单栏**：此栏用于显示设计中选择元素的详细信息。它再次分为两个子部分：'
- en: '**Properties and styles**: This subsection shows all the properties and style
    attributes of the currently selected element in the design area. We can change
    the value of any attribute or style for the selected element.'
  id: totrans-231
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**属性和样式**：此子部分显示了设计区域中当前选中元素的属性和样式属性。我们可以更改选中元素的任何属性或样式值。'
- en: '**Palette and trees**: The palette view contains the entire set of draggable
    elements that can be dropped into the designer area. The tree section shows the
    current document tree of the page in parent–child relationship.'
  id: totrans-232
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**调色板和树**：调色板视图包含可以拖放到设计区域的整个可拖动元素集。树部分显示了页面当前文档树，以父子关系展示。'
- en: Developing with the designer tool
  id: totrans-233
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用设计工具进行开发
- en: 'In this section, we will develop an e-mail subscription form using the Polymer
    designer tool. We have to follow these steps to work with the designer tool:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用Polymer设计工具开发一个电子邮件订阅表单。我们必须遵循以下步骤来使用设计工具：
- en: Getting a GitHub token
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取GitHub令牌
- en: Developing the e-mail subscription form
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发电子邮件订阅表单
- en: Previewing the design
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预览设计
- en: Getting a GitHub token
  id: totrans-238
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 获取GitHub令牌
- en: 'We need to get a GitHub token to save the work of the designer tool as a gist.
    When you click on the **Save** option, it asks for a GitHub token. You can get
    a new GitHub token from [https://github.com/settings/tokens/new](https://github.com/settings/tokens/new).
    The following screenshot shows the form for creating a GitHub token:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要获取一个GitHub令牌来将设计工具的工作保存为gist。当你点击**保存**选项时，它会请求一个GitHub令牌。你可以从[https://github.com/settings/tokens/new](https://github.com/settings/tokens/new)获取一个新的GitHub令牌。以下截图显示了创建GitHub令牌的表单：
- en: '![Getting a GitHub token](img/image00251.jpeg)'
  id: totrans-240
  prefs: []
  type: TYPE_IMG
  zh: '![获取GitHub令牌](img/image00251.jpeg)'
- en: 'The GitHub token created for this example is `designerapp`. Now we can use
    this token in the designer tool. The following screenshot shows the popup window
    asking for a GitHub token when the **Save** option is clicked:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 为此示例创建的GitHub令牌是`designerapp`。现在我们可以在设计工具中使用此令牌。以下截图显示了在点击**保存**选项时请求GitHub令牌的弹出窗口：
- en: '![Getting a GitHub token](img/image00252.jpeg)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![获取 GitHub 令牌](img/image00252.jpeg)'
- en: In the popup window, we can input the created GitHub token and we are ready
    for the next step—developing an e-mail subscription form.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 在弹出窗口中，我们可以输入创建的 GitHub 令牌，我们就可以进行下一步——开发电子邮件订阅表单。
- en: Developing an e-mail subscription form
  id: totrans-244
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 开发电子邮件订阅表单
- en: 'To develop an e-mail subscription form, we have dragged the following items
    from the **PALETTE** section to the designer drop area:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 要开发一个电子邮件订阅表单，我们已经从 **调色板** 部分拖拽以下项目到设计器拖拽区域：
- en: The core-card element
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 核心卡片元素
- en: The core-item element
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 核心项目元素
- en: The paper-input element
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: paper-input 元素
- en: The paper-button element
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 纸按钮元素
- en: 'After dropping and aligning these elements inside the card, we have made some
    changes to the styles and attribute of these elements. The following screenshot
    shows the style and attribute section for paper-button only. Similarly, we can
    change other elements:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 在将这些元素拖拽到卡片内部并调整对齐后，我们对这些元素的样式和属性进行了修改。以下截图仅显示了 paper-button 的样式和属性部分。同样，我们可以更改其他元素：
- en: '![Developing an e-mail subscription form](img/image00253.jpeg)'
  id: totrans-251
  prefs: []
  type: TYPE_IMG
  zh: '![开发电子邮件订阅表单](img/image00253.jpeg)'
- en: 'After the changes are made to styles and attributes, we can see the generated
    code by using the **Toggle Code/Design** option. The generated code is shown in
    the following screenshot:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 在修改样式和属性后，我们可以通过使用 **切换代码/设计** 选项来查看生成的代码。生成的代码如下截图所示：
- en: '![Developing an e-mail subscription form](img/image00254.jpeg)'
  id: totrans-253
  prefs: []
  type: TYPE_IMG
  zh: '![开发电子邮件订阅表单](img/image00254.jpeg)'
- en: 'The preview of the design can be seen by using the **Launch Preview** option.
    The following screenshot shows the live preview of the developed design in a new
    window:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过使用 **启动预览** 选项来查看设计的预览。以下截图显示了在新窗口中开发的设计的实时预览：
- en: '![Developing an e-mail subscription form](img/image00255.jpeg)'
  id: totrans-255
  prefs: []
  type: TYPE_IMG
  zh: '![开发电子邮件订阅表单](img/image00255.jpeg)'
- en: Yeoman Polymer generator
  id: totrans-256
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Yeoman Polymer 生成器
- en: The Yeoman tool provides the generator ecosystem for web developers in order
    to reduce the configuration work and get focused on web application logic. Yeoman
    helps in increasing productivity of a developer by getting a quick kick start
    to the project and implementing best practices and required boilerplate code to
    the project.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: Yeoman 工具为网络开发者提供生成器生态系统，以减少配置工作并专注于网络应用程序逻辑。Yeoman 通过快速启动项目和实施最佳实践以及所需的基本代码来提高开发者的生产力。
- en: 'Yeoman can be installed using npm. The following code shows the command for
    installing Yeoman in the system:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: Yeoman 可以使用 npm 进行安装。以下代码展示了在系统中安装 Yeoman 的命令：
- en: '[PRE36]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'The following screenshot shows the command prompt with the Yeoman installation
    in progress:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了带有 Yeoman 安装过程中的命令提示符：
- en: '![Yeoman Polymer generator](img/image00256.jpeg)'
  id: totrans-261
  prefs: []
  type: TYPE_IMG
  zh: '![Yeoman Polymer 生成器](img/image00256.jpeg)'
- en: 'Yeoman provides different generators for different types of applications. Each
    generator has a specific work flow for accomplishing a part or complete configuration
    of an application. These generators run with the `yo` command. Once Yeoman is
    installed in the system, the Polymer generator can be installed using the following
    command:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: Yeoman 为不同类型的应用程序提供不同的生成器。每个生成器都有特定的工作流程来完成应用程序的部分或完整配置。这些生成器通过 `yo` 命令运行。一旦
    Yeoman 在系统中安装，可以使用以下命令安装 Polymer 生成器：
- en: '[PRE37]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'The following screenshot shows the command prompt with the polymer-generator
    installation in progress:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了带有 polymer-generator 安装过程中的命令提示符：
- en: '![Yeoman Polymer generator](img/image00257.jpeg)'
  id: totrans-265
  prefs: []
  type: TYPE_IMG
  zh: '![Yeoman Polymer 生成器](img/image00257.jpeg)'
- en: The polymer-generator commands
  id: totrans-266
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: polymer-generator 命令
- en: 'The polymer-generator provides the following utilities to support the Polymer-based
    application development:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: polymer-generator 为基于 Polymer 的应用程序开发提供以下实用工具：
- en: Polymer application generator
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Polymer 应用程序生成器
- en: Polymer element generator
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Polymer 元素生成器
- en: Polymer seed generator
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Polymer 种子生成器
- en: Polymer GitHub page generator
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Polymer GitHub 页面生成器
- en: The Polymer application generator
  id: totrans-272
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Polymer 应用程序生成器
- en: 'A new Polymer application can be created using the Polymer application generator.
    The steps for creating a new Polymer application are as follows:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用 Polymer 应用程序生成器创建新的 Polymer 应用程序。创建新 Polymer 应用程序的步骤如下：
- en: 'We need to create a new project directory .The following command can be used
    to create a new project directory:'
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要创建一个新的项目目录。以下命令可以用来创建一个新的项目目录：
- en: '[PRE38]'
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Change the directory to `PolymerAppDemo` using the following command:'
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用以下命令将目录更改为 `PolymerAppDemo`：
- en: '[PRE39]'
  id: totrans-277
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'After changing the directory, we can run the command to generate a Polymer
    application setup. The setup process asks a set of questions, which need to be
    answered by the developer. Once these questions are answered, it creates a Polymer
    application with all the required library and dependencies installed. The command
    for generating the Polymer application is as follows:'
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在更改目录后，我们可以运行命令来生成聚合物应用程序设置。设置过程会提出一系列问题，这些问题需要开发者回答。一旦这些问题得到回答，它就会创建一个包含所有必需库和依赖项的聚合物应用程序。生成聚合物应用程序的命令如下：
- en: '[PRE40]'
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'The following screenshot shows the command prompt with the Polymer application-generator
    in progress:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了正在进行的聚合物应用程序生成器的命令提示符：
- en: '![The Polymer application generator](img/image00258.jpeg)'
  id: totrans-281
  prefs: []
  type: TYPE_IMG
  zh: '![聚合物应用程序生成器](img/image00258.jpeg)'
- en: The Polymer element generator
  id: totrans-282
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 聚合物元素生成器
- en: The Polymer element generator can be used to create a boilerplate for developing
    a custom element. We will learn about this generator for creating custom elements
    in the next chapter.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 聚合物元素生成器可用于创建自定义元素的样板代码。我们将在下一章中学习这个用于创建自定义元素的生成器。
- en: If you want to find out more about the Polymer element generator, refer to [https://github.com/yeoman/generator-polymer#element-alias-el](https://github.com/yeoman/generator-polymer#element-alias-el).
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你现在想了解更多关于聚合物元素生成器的信息，请参阅[https://github.com/yeoman/generator-polymer#element-alias-el](https://github.com/yeoman/generator-polymer#element-alias-el)。
- en: The Polymer seed generator
  id: totrans-285
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 聚合物种子生成器
- en: This generator can be used for creating a custom standalone element, which is
    intended to be shared with others using Bower. You will learn more about this
    generator in the next chapter.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 这个生成器可用于创建一个自定义的独立元素，该元素旨在通过Bower与他人共享。你将在下一章中了解更多关于这个生成器的信息。
- en: If you want to find out more about the Polymer seed generator at this point,
    refer to [https://github.com/yeoman/generator-polymer#seedc](https://github.com/yeoman/generator-polymer#seedc).
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你现在想了解更多关于聚合物种子生成器的信息，请参阅[https://github.com/yeoman/generator-polymer#seedc](https://github.com/yeoman/generator-polymer#seedc)。
- en: The Polymer GitHub page generator
  id: totrans-288
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 聚合物GitHub页面生成器
- en: This generator can be used for creating a GitHub page for the standalone seed
    element, to share its details with the developer community. We will learn about
    this GitHub page generator in the next chapter.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 这个生成器可用于为独立的种子元素创建GitHub页面，以便与开发者社区分享其详细信息。我们将在下一章中学习这个GitHub页面生成器。
- en: If you want to find out more about Polymer GitHub page generator at this point,
    refer to [https://github.com/yeoman/generator-polymer#gh](https://github.com/yeoman/generator-polymer#gh).
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你现在想了解更多关于聚合物GitHub页面生成器的信息，请参阅[https://github.com/yeoman/generator-polymer#gh](https://github.com/yeoman/generator-polymer#gh)。
- en: Summary
  id: totrans-291
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned about the installation of the Polymer library.
    We have explored the architecture of Polymer library followed by a section on
    core and paper elements. In the final section of this chapter, you were introduced
    to the Polymer designer tool. In the next chapter, you will learn to develop a
    custom element using the Polymer library.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了聚合物库的安装。我们探讨了聚合物库的架构，随后是关于核心和纸张元素的章节。在本章的最后部分，你被介绍了聚合物设计工具。在下一章中，你将学习如何使用聚合物库开发自定义元素。
