- en: Chapter 7. Creating Modal Dialogs, Grids, and Collapsible Blocks
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第七章。创建模态对话框、网格和可折叠块
- en: In this chapter, we will look at dialogs, grids, and collapsible blocks. In
    the previous chapters we've dealt with pages, buttons, and form controls. While
    jQuery Mobile provides great support for them, there are even more UI controls
    you get within the framework.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将看到对话框、网格和可折叠块。在之前的章节中，我们已经处理过页面、按钮和表单控件。虽然 jQuery Mobile 为它们提供了很好的支持，但在框架中还有更多的
    UI 控件可供使用。
- en: 'In this chapter, we will:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将：
- en: Discuss how to link to and create dialogs also how to handle leaving them
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 讨论如何链接到和创建对话框以及如何处理离开它们
- en: Demonstrate grids and how you can add them to your pages
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 演示网格及如何将其添加到你的页面
- en: Show how collapsible blocks allow you to pack a lot of information in a small
    amount of space
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 展示可折叠块如何让你在很小的空间内装入大量信息
- en: Creating dialogs
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建对话框
- en: 'Dialogs: at least under the jQuery Mobile framework: are small windows that
    cover an existing page. They typically provide a short message or question for
    the user. They will also typically include a button that allows the user to dismiss
    the dialog and return back to the site. Creating a dialog in jQuery Mobile is
    done by simply adding a simple attribute to a link: `data-rel="dialog"`. The following
    listing demonstrates an example:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 对话框：至少在 jQuery Mobile 框架下：是覆盖现有页面的小窗口。通常为用户提供短消息或问题。它们通常还包括一个按钮，允许用户关闭对话框并返回网站。在
    jQuery Mobile 中创建对话框只需要简单地为链接添加一个属性：`data-rel="dialog"`。下面的示例演示了一个样例：
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This is a simple, multi-page jQuery Mobile site. Notice how we link to the
    second and third page. The first link is typical. The second link, though, includes
    the `data-rel` attribute mentioned earlier. Notice that both the second and third
    page are defined in the usual manner. So the only change we have here is in the
    link. When that second link is clicked, the page is rendered completely differently:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单的多页面 jQuery Mobile 站点。请注意我们如何链接到第二和第三页。第一个链接很典型。然而，第二个链接包括了前面提到的`data-rel`属性。请注意第二和第三页都是以通常方式定义的。所以我们在此处的唯一改变是在链接上。当点击第二个链接时，页面将完全不同地呈现：
- en: '![Creating dialogs](img/7263_07_01.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![创建对话框](img/7263_07_01.jpg)'
- en: Remember, that page wasn't defined differently. The change you see in the previous
    screenshot is driven by the change to the link itself. That's it! Clicking the
    little **X** button will hide the dialog and return the user back to the original
    page.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，该页面并未有不同的定义。你在上一屏幕截图中看到的变化是由链接本身的更改驱动的。就是这样！点击小的**X**按钮将隐藏对话框并将用户带回原始页面。
- en: Any link within the page will handle closing the dialog as well. If you wish
    to add a cancel type button, or link, you can do so using `data-rel="back"` in
    the link. The target of the link should be to the page that launched the dialog.
    `Listing 7-2` shows a modified version of the earlier template. In this one, we've
    simply added two buttons to the dialog. The first button will launch the second
    page, while the second one will act as a **Cancel** action.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 该页面内的任意链接也将处理关闭对话框。如果你希望添加一个类似取消的按钮或链接，可以在链接中使用`data-rel="back"`。链接的目标应为启动对话框的页面。`列表
    7-2`展示了之前模板的修改版本。在这个版本中，我们只是在对话框中添加了两个按钮。第一个按钮将打开第二页，而第二个将作为一个**取消**操作。
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The major change in this template is the addition of the buttons in the dialog,
    contained within `page3 div`. Notice the first link is turned into a button, but
    outside of that is a simple link. The second button includes the addition of the
    `data-rel="back"` attribute. This will handle simply dismissing the dialog. The
    following screenshot shows how the dialog looks with the buttons added:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模板中的主要变化是对话框中按钮的添加，包含在`page3 div`中。请注意第一个链接被设置为按钮，但在外面却是一个简单的链接。第二个按钮包含了添加的`data-rel="back"`属性。这将简单地关闭对话框。下面的截图展示了添加按钮后对话框的样子：
- en: '![Creating dialogs](img/7263_07_02.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![创建对话框](img/7263_07_02.jpg)'
- en: Laying out content with grids
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用网格布局内容
- en: Grids are one of the few features of jQuery Mobile that do not make use of particular
    data attributes. Instead, you work with grids simply by specifying CSS classes
    for your content.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 网格是 jQuery Mobile 中少数不使用特定数据属性的特性之一。相反，你只需为内容指定 CSS 类即可使用网格布局。
- en: 'Grids come in four flavors: Two column, Three column, Four column, and Five
    column. (You will probably not want to use the five column on a phone device.
    Save that for a tablet instead.)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 网格有四种类型：两列、三列、四列和五列。（你可能不会想在手机设备上使用五列。最好是留给平板。）
- en: You begin a grid with a `div` block that makes use of the class `ui-grid-X`,
    where `X` will be either `a, b, c`, or `d. ui-grid-a` represents a two column
    grid. `ui-grid-b` is a three column grid. You can probably guess what `c` and
    `d` create.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过使用 `ui-grid-X` 类开始一个网格，其中 `X` 可以是 `a, b, c`, 或 `d`。`ui-grid-a` 表示两列网格，`ui-grid-b`
    是三列网格。你大概能猜到 `c` 和 `d` 代表什么。
- en: 'So to begin a two column grid, you would wrap your content with the following:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 所以要开始一个两列网格，你需要用以下代码包裹你的内容：
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Within the `div` tag, you then use a `div` for each "cell" of the content. The
    class for grid calls begins with `ui-block-X`, where `X` goes from `a` to `d.
    ui-block-a` would be used for the first cell, `ui-block-b` for the next, and so
    on. This works much like HTML tables.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `div` 标签内，你可以为内容的每个 "单元格" 使用一个 `div`。网格调用的类以 `ui-block-X` 开头，`X` 从 `a` 到 `d`。`ui-block-a`
    会被用于第一个单元格，`ui-block-b` 用于下一个，以此类推。这与 HTML 表格非常相似。
- en: 'Putting it together, the following code snippet demonstrates a simple two column
    grid with two cells of content:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 综合起来，下面的代码片段展示了一个简单的两列网格，其中有两个单元格的内容：
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Text within a cell will automatically wrap. `Listing 7-3` demonstrates a simple
    grid with a large amount of text in one of the columns:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 单元格内的文本会自动换行。`7-3` 展示了一个简单的网格，其中一个单元格中有大量文本：
- en: '[PRE4]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In the mobile browser, you can clearly see the two columns:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在移动浏览器中，你可以清楚地看到两列：
- en: '![Laying out content with grids](img/7263_07_03.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![使用网格布局内容](img/7263_07_03.jpg)'
- en: 'Working with other types of grids then is simply a matter of switching to the
    other classes. For example, a four column grid would be set up similar to the
    following code snippet:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 然后就是简单地切换到其他类来处理其他类型的网格。例如，设置一个四列网格类似于以下代码片段：
- en: '[PRE5]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Again, keep in mind your target audience. Anything over two columns may be too
    thin on a mobile phone.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，记住你的目标受众。任何超过两列的都可能在手机上显得太窄。
- en: 'To create multiple rows in a grid, you simply repeat blocks. The following
    code snippet demonstrates a simple example of a grid with two rows of cells:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 要在网格中创建多行，只需重复块。下面的代码片段展示了一个有两行单元格的网格的简单示例：
- en: '[PRE6]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Notice that there isn''t any concept of a row. jQuery Mobile handles knowing
    that it should create a new row when the block starts over with the one marked
    `ui-block-a`. The following code snippet, `Listing 7-4` is a simple example:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这里没有行的概念。 jQuery Mobile 可以处理当块重新以标记为 `ui-block-a` 开始时，它应该创建一个新的行。下面的代码片段，`7-4`
    是一个简单的例子：
- en: '[PRE7]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The following screenshot shows the result:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图显示了结果：
- en: '![Laying out content with grids](img/7263_07_04.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![使用网格布局内容](img/7263_07_04.jpg)'
- en: Working with collapsible content
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用可折叠内容
- en: 'The final widget we will look at in this chapter supports collapsible content.
    This is simply content that can be collapsed and expanded. Creating a collapsible
    content widget is as simple as wrapping it in a div, adding `data-role="collapsible"`,
    and including a title for the content. Consider the following simple example:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们要看的最后一个小部件支持可折叠内容。这只是可以折叠和展开的内容。创建一个可折叠内容小部件就像简单地用 `div` 包裹它，加上 `data-role="collapsible"`，并包含内容的标题。考虑以下简单的例子：
- en: '[PRE8]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Upon rendering, jQuery Mobile will turn the title into a clickable banner that
    can expand and collapse the content within. Let''s look at a real example. Imagine
    you want to share the location of your company''s primary address. You also want
    to include satellite offices. Since most people won''t care about the other offices,
    we can use a simple collapsible content widget to hide the content by default.
    The following code snippet, `Listing 7-5` demonstrates an example of this:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 渲染时，jQuery Mobile 会将标题转换为可展开和折叠内容的可点击横幅。让我们看一个真实的例子。想象一下，你想要分享公司主要地址的位置。你还想要包括分公司。由于大多数人不会关心其他办公室，我们可以使用一个简单的可折叠内容小部件来默认隐藏内容。下面的代码片段，`7-5`
    展示了一个例子：
- en: '[PRE9]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'You can see that the other offices are all wrapped in the `div` tag using the
    new collapsible content role. When viewed, notice that they are hidden:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到其他办公室都被使用新的可折叠内容角色的 `div` 标签包裹着。查看时，请注意它们是隐藏的：
- en: '![Working with collapsible content](img/7263_07_05.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![使用可折叠内容](img/7263_07_05.jpg)'
- en: 'Clicking the **+** next to the title opens it, and can be clicked again to
    reclose it:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 点击标题旁边的 **+** 将其打开，再次点击将其重新关闭：
- en: '![Working with collapsible content](img/7263_07_06.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![处理可折叠内容](img/7263_07_06.jpg)'
- en: 'By default, jQuery Mobile will collapse and hide the content. You can, of course,
    tell jQuery Mobile to initialize the block open instead of closed. To do so, simply
    add `data-collapsed="false"` to the initial `div` tag. For example:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，jQuery Mobile会折叠和隐藏内容。当然，您也可以告诉jQuery Mobile初始化块时打开而不是关闭。要这样做，只需在初始的`div`标签中添加`data-collapsed="false"`。例如：
- en: '[PRE10]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This region will still have the ability to collapse and open, but will simply
    default to being opened initially.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这个区域仍然具有折叠和打开的能力，但默认情况下会打开。
- en: 'Another option for collapsible content blocks is the ability to theme the content
    of the area that is collapsed. By providing a `data-content-theme` attribute,
    you can specify a background color that makes the region a bit more cohesive.
    Theming is covered in [Chapter 11](../Text/ch11.html "Chapter 11. Enhancing jQuery
    Mobile"), *Theming jQuery Mobile*, but we can take a look at a quick example.
    In the following screenshot, the first region does not make use of the feature,
    while the second one does:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 可折叠内容块的另一个选项是对折叠区域的内容进行主题化。通过提供`data-content-theme`属性，您可以指定一个背景颜色，使区域更具连贯性。主题化在[第11章](../Text/ch11.html
    "第11章。增强jQuery Mobile")中有介绍，*主题化jQuery Mobile*，但我们可以看一个快速示例。在以下截图中，第一个区域没有使用该功能，而第二个区域使用了：
- en: '![Working with collapsible content](img/7263_07_08.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![处理可折叠内容](img/7263_07_08.jpg)'
- en: 'Notice that the icon is also shifted to the right. This demonstrates another
    option, `data-iconpos`. The following code snippet, found in the code folder as
    `test5-2.html`, demonstrates these options:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到图标也向右移动了。这展示了另一个选项，`data-iconpos`。在`code`文件夹中的`test5-2.html`中找到的以下代码片段演示了这些选项：
- en: '[PRE11]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Finally, you can take multiple collapsible regions and combine them into one
    called an accordion. This is done by simply taking multiple collapsible blocks
    and wrapping them in a new `div` tag. This `div` tag makes use of `data-role="collapsible-set"`
    to make the inner blocks as one unit. `Listing 7-6` demonstrates an example of
    this. It takes the earlier office address example and uses a collapsible set for
    each unique address:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，您可以将多个可折叠区域合并成一个称为手风琴的单元。只需将多个可折叠块放入一个新的`div`标签中即可完成此操作。这个`div`标签使用`data-role="collapsible-set"`将内部块作为一个单位。`清单
    7-6`演示了一个示例。它采用了早期的办公地址示例，并为每个唯一的地址使用了一个可折叠集：
- en: '[PRE12]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'In `listing 7-6`, we simply wrap four collapsible blocks with a `div` tag that
    makes use of a collapsible set. Once done, jQuery Mobile will group them together
    and automatically close one once another is open:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在`清单 7-6`中，我们只需使用一个可折叠集的`div`标签包装四个可折叠块。完成后，jQuery Mobile将它们分组在一起，并在打开另一个时自动关闭一个：
- en: '![Working with collapsible content](img/7263_07_07.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![处理可折叠内容](img/7263_07_07.jpg)'
- en: Summary
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概要
- en: In this chapter, we learned more about how jQuery Mobile enhances basic HTML
    to provide additional layout controls to our mobile pages. With dialogs, we learned
    how to provide a basic, quick, modal message to users. With grids, we learned
    a new way to easily layout content in columns. Finally, with the collapsible content
    blocks, we learned a cool way to share additional content without taking up as
    much screen space.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们更多地了解了jQuery Mobile如何增强基本的HTML，以为我们的移动页面提供额外的布局控件。通过对话框，我们学会了向用户提供基本、快速、模态消息的方法。通过网格，我们学到了一种新的方法来轻松地将内容布局在列中。最后，通过可折叠的内容块，我们学到了一种很酷的方式来分享额外的内容，而不占用太多的屏幕空间。
- en: In the next chapter, we demonstrate a full, real example that creates a basic
    Note Tracker. It makes use of additional HTML5 features, as well as some of the
    UI tips you've learned over the past few chapters.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将演示一个完整的、真实的示例，创建一个基本的笔记跟踪器。它利用了额外的HTML5功能，以及你在过去几章中学到的一些UI技巧。
