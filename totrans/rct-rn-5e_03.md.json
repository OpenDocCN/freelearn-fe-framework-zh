["```js\nimport * as ReactDOM from \"react-dom\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <p>\n    Hello, <strong>JSX</strong>\n  </p>\n); \n```", "```js\nimport * as ReactDOM from \"react-dom\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  React.createElement(\n    \"p\",\n    null,\n    \"Hello, \",\n    React.createElement(\"strong\", null, \"JSX\")\n  )\n); \n```", "```js\nimport * as ReactDOM from \"react-dom\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <div>\n    <button />\n    <code />\n    <input />\n    <label />\n    <p />\n    <pre />\n    <select />\n    <table />\n    <ul />\t\n  </div>\n); \n```", "```js\nimport * as ReactDOM from \"react-dom\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <button title=\"My Button\" foo=\"bar\">\n    My Button\n  </button>\n);\nroot.render(<Button />); \n```", "```js\nimport * as ReactDOM from \"react-dom\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <section>\n    <header>\n      <h1>A Header</h1>\n    </header>\n    <nav>\n      <a href=\"item\">Nav Item</a>\n    </nav>\n    <main>\n      <p>The main content...</p>\n    </main>\n    <footer>\n      <small>&copy; 2024</small>\n    </footer>\n  </section>\n); \n```", "```js\nimport * as ReactDOM from \"react-dom\";\nfunction MyComponent() {\n  return (\n    <section>\n      <h1>My Component</h1>\n      <p>Content in my component...</p>\n    </section>\n  );\n}\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<MyComponent />); \n```", "```js\nimport * as ReactDOM from \"react-dom\";\nimport MySection from \"./MySection\";\nimport MyButton from \"./MyButton\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <MySection>\n    <MyButton>My Button Text</MyButton>\n  </MySection>\n); \n```", "```js\nexport default function MySection(props) {\n  return (\n    <section>\n      <h2>My Section</h2>\n      {props.children}\n    </section>\n  );\n} \n```", "```js\nexport default function MyButton(props) {\n  return <button>{props.children}</button>;\n} \n```", "```js\nimport * as ReactDOM from \"react-dom\";\nconst enabled = false;\nconst text = \"A Button\";\nconst placeholder = \"input value...\";\nconst size = 50;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <section>\n    <button disabled={!enabled}>{text}</button>\n    <input placeholder={placeholder} size={size} />\n  </section>\n); \n```", "```js\nimport * as ReactDOM from \"react-dom\";\nconst handleClick = () => {\n  console.log(\"Button clicked!\");\n};\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <section>\n    <button onClick={handleClick}>Click me</button>\n  </section>\n); \n```", "```js\nimport * as ReactDOM from \"react-dom\";\nconst array = [\"First\", \"Second\", \"Third\"];\nconst object = {\n  first: 1,\n  second: 2,\n  third: 3,\n};\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <section>\n    <h1>Array</h1>\n    <ul>\n      {array.map((i) => (\n        <li key={i}>{i}</li>\n      ))}\n    </ul>\n    <h1>Object</h1>\n    <ul>\n      {Object.keys(object).map((i) => (\n        <li key={i}>\n          <strong>{i}: </strong>\n          {object[i]}\n        </li>\n      ))}\n    </ul>\n  </section>\n); \n```", "```js\nimport * as ReactDOM from \"react-dom\";\nimport WithoutFragments from \"./WithoutFragments\";\nimport WithFragments from \"./WithFragments\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <div>\n    <WithoutFragments />\n    <WithFragments />\n  </div>\n); \n```", "```js\nexport default function WithoutFragments() {\n  return (\n    <div>\n      <h1>Without Fragments</h1>\n      <p>\n        Adds an extra <code>div</code> element.\n      </p>\n    </div>\n  );\n} \n```", "```js\nexport default function WithFragments() {\n  return (\n    <>\n      <h1>With Fragments</h1>\n      <p>Doesn't have any unused DOM elements.</p>\n    </>\n  );\n} \n```"]