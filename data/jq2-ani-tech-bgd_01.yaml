- en: Chapter 1. Getting Started
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一章. 入门
- en: '*Welcome to the jQuery 2.0 Animation Techniques Beginner''s Guide. Over the
    course of the book we''ll look at each and every method that produces or controls
    animations available in the jQuery JavaScript library. We''ll see how the methods
    are used, the arguments they are able to accept, and the different behavior they
    produce. We''ll also look at how to use a range of accompanying resources, including
    selected jQuery plugins and the jQuery UI library.*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*欢迎来到jQuery 2.0动画技术初学者指南。在本书中，我们将研究jQuery JavaScript库中可用的每一种产生或控制动画的方法。我们将看到这些方法的使用方式，它们能接受的参数以及它们产生的不同行为。我们还将研究如何使用一系列配套资源，包括精选的jQuery插件和jQuery
    UI库。*'
- en: 'In this introductory chapter, we''ll look at the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个介绍性的章节中，我们将讨论以下主题：
- en: A brief history of animation on the Web
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络动画简史
- en: Why animating your UIs is important
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么动画您的UI很重要
- en: Animation methods provided by jQuery
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: jQuery提供的动画方法
- en: The template file used by each of the examples
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个示例使用的模板文件
- en: A basic animation example
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基本动画示例
- en: Animation on the Web
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络动画
- en: In 1989, CompuServe released GIF89a, an enhanced version of the popular GIF
    image format, which allowed a sequence of frames to be stored as a single image
    and played by supporting software.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 1989年，CompuServe发布了GIF89a，这是流行的GIF图像格式的增强版本，它允许将一系列帧存储为单个图像，并由支持的软件播放。
- en: The GIF format was already popular on what passed for the Internet in those
    days (remember, the World Wide Web didn't even exist until 1991) due to its small
    file size, lossless compression, and wide support. The enhanced version which
    allowed animations that anyone could create themselves, provided they had supporting
    software, quickly became popular.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: GIF格式在那些年已经在被称为互联网的东西上非常流行了（记住，万维网直到1991年才存在），因为它的文件大小小，无损压缩，并且得到了广泛的支持。增强版本使得任何人都可以使用支持的软件创建动画，很快就变得流行起来。
- en: In addition to animated GIFs, browser vendors added support for proprietary
    HTML elements that handled animation natively, such as the `<blink>` and `<marquee>`
    elements, which added different animated effects to text.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 除了动画GIF之外，浏览器厂商还添加了对原生处理动画的专有HTML元素的支持，例如`<blink>`和`<marquee>`元素，它们为文本添加了不同的动画效果。
- en: Neither of these elements was particularly attractive or successful, and the
    W3C, as well as leading industry accessibility and usability experts advised against
    their use in most cases. Different browsers at that time supported one or the
    other of these elements, but not both. Both elements were added by their respective
    vendors as part of the original browser wars.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个元素都不是特别吸引人或成功的，W3C以及领先的行业无障碍性和可用性专家建议在大多数情况下不要使用它们。当时的不同浏览器支持其中一个或另一个元素，但不能同时支持。这两个元素都是由各自的供应商作为原始浏览器战争的一部分添加的。
- en: In the late 1990s, popular browsers added support for a technique known as **Dynamic
    HTML** (**DHTML**), which allowed scripting languages to modify the contents of
    a page after the page had loaded. DHTML wasn't any single technology, but rather
    a collection of techniques (JavaScript, CSS, DOM, and so on) that worked together
    to enable a basic level of interactivity and/or animation.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在1990年代末，流行的浏览器增加了对一种称为**动态HTML**（**DHTML**）的技术的支持，该技术允许脚本语言在页面加载后修改页面的内容。DHTML不是任何单一技术，而是一组技术（JavaScript，CSS，DOM等），它们共同作用以实现基本的互动和/或动画。
- en: In fact, DHTML made it possible to create quite advanced animations, but restrictions
    in the early implementations of the required technologies, as well as hugely varying
    browser support made DHTML tricky at best.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，DHTML使得创建相当先进的动画成为可能，但是早期实现所需技术的限制，以及极其不同的浏览器支持使得DHTML变得棘手起来。
- en: This era also saw the release and the rise of Flash (and Shockwave, a competing
    technology that was eventually subsumed by Macromedia—which was later acquired
    by Adobe in 2005), a vector and raster graphics format that allowed audio and
    video streaming, frame-by-frame animation, and a host of other features. Flash
    quickly became popular, and at the time of writing is still the number one format
    for web-based video, browser-based gaming, and advertising.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这个时代还见证了Flash的发布和崛起（以及Shockwave，一种最终被Macromedia吞并的竞争技术），这是一种矢量和光栅图形格式，允许音频和视频流，逐帧动画，以及一系列其他功能。Flash迅速成为流行，并且在撰写本文时仍然是基于网络的视频，基于浏览器的游戏和广告的首选格式。
- en: Gradual standardization of the DOM across (most) browsers, as well as the rise
    of JavaScript libraries such as jQuery, which abstracted away the differences
    that remained between browsers, have opened up animation to a much wider range
    of people than ever before. The term DHTML isn't often used these days because
    of its connotations with poor support between browsers, but the underlying principles
    and techniques that drive many interactive and animated sites remain similar.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览器中的 DOM 逐渐标准化（大部分），以及 JavaScript 库（如 jQuery）的兴起，这些库抽象化了浏览器之间仍然存在的差异，使得动画对比以往更多的人开放。如今很少使用
    DHTML 这个术语，因为它与浏览器之间的支持不佳有关，但是许多交互式和动画网站的基本原理和技术仍然相似。
- en: Today, in addition to the animations made plausible and accessible by JavaScript
    libraries, we have much newer and much more exciting possibilities with CSS3 and
    native HTML elements such as the `<canvas>` element, which provides complete pixel-level
    control over an area of the page. We'll be looking at some CSS3 animation techniques,
    as well as the `<canvas>` element in more detail towards the end of the book.
    Flash-based animation is on the decline for the first time this century, and new
    technologies are poised on the horizon.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，除了 JavaScript 库可能实现的动画外，我们还有更加新颖和令人兴奋的可能性，比如 CSS3 和本机 HTML 元素（如 `<canvas>`
    元素），后者提供了对页面区域的完全像素级控制。我们将在本书的后面更详细地介绍一些 CSS3 动画技术，以及 `<canvas>` 元素。基于 Flash 的动画首次在本世纪出现下降趋势，新技术正在地平线上崛起。
- en: The power of animated UIs
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动画化用户界面的力量
- en: Modern operating systems use animations constantly to engage their users and
    to create a more compelling computing experience. When used in the right way,
    animations provide assistance to the users of the system, to lead and guide them
    through different tasks, provide context or feedback, and reinforce positive actions.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现代操作系统不断地使用动画来吸引用户，创造更引人入胜的计算体验。在正确的使用方式下，动画为系统的用户提供帮助，引导他们完成不同的任务，提供上下文或反馈，并加强积极的行为。
- en: A good example of this is the way that applications are minimized in Windows
    7 or OS X—the application appears to squish down into the icon on the taskbar/dock,
    which shows the user where to go when they want to return to the application.
    It's the simple details like this that can be most effective.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 一个很好的例子是在 Windows 7 或 OS X 中最小化应用程序的方式——应用程序似乎压缩到任务栏/停靠栏上的图标中，这向用户显示了他们想要返回到应用程序时应该去哪里。正是这样的简单细节最有效。
- en: Good animations can lend an air of sleek professionalism to an interface and
    make it appear more advanced or more modern. Apple's iPhone (or iPad) is a perfect
    example—the seamless use of subtle animations and transitions within the operating
    system and its applications allow the user to connect with the device in a profoundly
    satisfying and immersive way. Anything that appears or disappears is faded smoothly
    in or out, and menus and content panels slide in or out from the top or the sides.
    Sudden events can unsettle or distract users, but a well-timed animation can help
    to make them aware that something is happening or something is about to happen.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 良好的动画可以赋予界面一种时尚的专业感，使其显得更先进或更现代。苹果的 iPhone（或 iPad）就是一个完美的例子——在操作系统及其应用程序中无缝地使用微妙的动画和过渡，使用户能够以一种深刻满意和沉浸式的方式与设备连接。任何出现或消失的内容都会平滑地淡入淡出，菜单和内容面板会从顶部或侧面滑入或滑出。突然的事件可能会使用户感到不安或分心，但是适时的动画可以帮助他们意识到即将发生的事情。
- en: Be warned though, badly executed, clumsy, or overly pointless animations can
    do the opposite, making your interface appear basic, poorly designed, or inferior.
    No animation can be better than poor animation. Even if your application works
    perfectly, superfluous animations can leave your users feeling frustrated and
    cause them to forgo your application or website.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 但是需要警告的是，执行不好、笨拙或过于无意义的动画可能会产生相反的效果，使您的界面显得基本、设计不佳或劣质。没有动画总比糟糕的动画好。即使您的应用程序运行完美，过多的动画也可能使用户感到沮丧，导致他们放弃使用您的应用程序或网站。
- en: Desktop computers and a rapidly growing number of mobile and handheld devices
    are easily powerful enough to handle quite complex animations, and with integrated
    hardware acceleration and more refined CSS3 and HTML5 making its way into the
    latest browsers, the possibilities of what can be achieved on the Web are increasing
    exponentially.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 桌面电脑以及日益增长的移动和手持设备的计算能力已经足够强大，能够处理相当复杂的动画，并且随着集成硬件加速和更加精细的 CSS3 和 HTML5 进入最新的浏览器，网络上可以实现的可能性呈指数级增长。
- en: When to use animations
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 何时使用动画
- en: 'Animations can make a great impression and enhance the user experience in the
    following situations:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下情况下，动画可以留下深刻印象并增强用户体验：
- en: When showing or hiding windows, pop ups, and content panels
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当显示或隐藏窗口、弹出窗口和内容面板时
- en: When something is moved to a different area of the window or page
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当某物被移动到窗口或页面的其他区域时
- en: When something has changed state on the page as a result of the action of the
    user
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当用户的操作导致页面上某个内容发生了状态变化时
- en: To lead the user to a specific call to action or bring their attention to something
    important
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引导用户执行特定的行动或者引起他们对重要事项的注意
- en: When not to use animations
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 不适合使用动画的情况
- en: 'Too many animations in unnecessary places can be damaging. Try and avoid animations,
    or at least give them serious consideration, in the following situations:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在不必要的地方进行过多的动画可能会有害。在以下情况下，请尽量避免动画，或者至少认真考虑：
- en: When an action needs to be repeated very frequently by the user
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当用户需要非常频繁地重复某个操作时
- en: Where the devices known to use the system are likely to be incapable of displaying
    the animation adequately
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已知使用该系统的设备可能无法充分显示动画的情况下
- en: On time-sensitive actions or processes
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于时间敏感的操作或过程
- en: Note
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Bear in mind that these are guidelines only, not laws which must be obeyed at
    all costs, and they are certainly not definitive. There are few situations where
    animations should never, ever be used and few situations where they must always
    be used.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，这些只是指南，而不是必须始终遵守的法则，它们当然也不是绝对的。几乎没有任何情况下动画绝对不应该被使用，也几乎没有任何情况下动画一定要被使用。
- en: Use your judgment to determine whether an animation is suitable for your application
    or page and its intended audience. If possible, give your users the chance to
    enable or disable animations based on their own personal preferences.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 使用您的判断力来确定动画是否适用于您的应用程序或页面及其预期的受众。如果可能的话，请让用户有机会根据自己的个人喜好启用或禁用动画。
- en: Animation checklist
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 动画检查表
- en: 'Before implementing an animation in our pages or applications, consider the
    following checklist of questions:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的页面或应用程序中实现动画之前，请考虑以下问题清单：
- en: Is the animation appropriate for your target users?
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 动画是否适用于您的目标用户？
- en: Is the animation practical?
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 动画是否实用？
- en: Does the animation add value or enhance the user experience?
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 动画是否增加了价值或者增强了用户体验？
- en: Will the animation run at appropriate speeds on the devices that are most likely
    to be used?
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设备上是否会以适当的速度运行动画，这些设备很可能会被使用？
- en: If you can answer yes to all of the above questions, the animation will probably
    be a positive feature. If you answered no to any of these questions, you probably
    need to stop and think about what you are trying to achieve by adding the animation,
    and whether or not it could be better achieved in some other manner.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您能回答以上所有问题都是肯定的，那么该动画可能是一个积极的特征。如果您对其中任何问题的回答是否定的，您可能需要停下来思考一下您试图通过添加动画来实现什么，以及是否可以以其他方式更好地实现它。
- en: Animating with jQuery
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 jQuery 进行动画
- en: 'jQuery ([http://jquery.com](http://jquery.com)) provides a range of animation
    methods natively, without the use of additional effect libraries or plugins. There
    are, however, many plugins contributed from the online community, including jQuery
    UI ([http://jqueryui.com](http://jqueryui.com)), the official UI library for jQuery,
    which extends jQuery''s animation capabilities. Natively, jQuery provides methods
    that add sliding and fading behavior with minimal configuration and which work
    cross-browser. It also exposes methods related to managing the animation queue,
    and provides a means for creating custom animations that work on almost all numerical
    CSS styles. Over the course of this book, we''ll look at every animation method
    that the library contains in detail. These methods are listed here with descriptions
    of each:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery ([http://jquery.com](http://jquery.com)) 在本地提供了一系列动画方法，无需使用额外的效果库或插件。然而，许多插件都是由在线社区贡献的，包括
    jQuery UI ([http://jqueryui.com](http://jqueryui.com))，它是官方的 jQuery UI 库，扩展了 jQuery
    的动画能力。本地，jQuery 提供了一些方法，只需最小的配置就能添加滑动和淡出效果，并且能够跨浏览器工作。它还提供了与管理动画队列相关的方法，并提供了一种创建几乎适用于所有数字
    CSS 样式的自定义动画的方法。在本书的过程中，我们将详细介绍库中包含的每个动画方法。这些方法在此处列出，并附有各自的描述：
- en: '| Methods | Description |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| 方法 | 描述 |'
- en: '| --- | --- |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `animate()` | It performs a custom animation of a set of CSS properties.
    |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| `animate()` | 它执行一组 CSS 属性的自定义动画。 |'
- en: '| `clearQueue()` | It removes from the queue all items that have not yet been
    run. |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| `clearQueue()` | 它从队列中移除尚未运行的所有项。 |'
- en: '| `delay()` | It sets a timer to delay execution of subsequent items in the
    queue. |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| `delay()` | 它设置一个计时器来延迟队列中后续项的执行。 |'
- en: '| `dequeue()` | It executes the next function on the queue for the matched
    elements. |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| `dequeue()` | 它执行匹配元素队列中的下一个函数。 |'
- en: '| `fadeIn()` | It displays the matched elements by fading them to opaque. |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| `fadeIn()` | 它通过使匹配的元素逐渐变为不透明来显示它们。 |'
- en: '| `fadeOut()` | It hides the matched elements by fading them to transparent.
    |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| `fadeOut()` | 它通过使匹配的元素逐渐变为透明来隐藏它们。 |'
- en: '| `fadeTo()` | It adjusts the opacity of the matched elements. |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| `fadeTo()` | 它调整匹配的元素的不透明度。 |'
- en: '| `fadeToggle()` | It displays or hides the matched elements by animating their
    opacity. |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| `fadeToggle()` | 它通过动画其不透明度来显示或隐藏匹配的元素。 |'
- en: '| `finish()` | It stops the currently-running animation, removes all of the
    queued animations, and completes all of the animations for the matched elements.
    |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| `finish()` | 它停止当前正在运行的动画，移除所有排队的动画，并完成所有匹配元素的动画。 |'
- en: '| `hide()` | It hides the matched elements. |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| `hide()` | 它隐藏匹配的元素。 |'
- en: '| `queue()` | It shows the queue of functions to be executed on the matched
    elements. |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| `queue()` | 它显示要在匹配的元素上执行的函数队列。 |'
- en: '| `show()` | It displays the matched elements. |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| `show()` | 它显示匹配的元素。 |'
- en: '| `slideDown()` | It displays the matched elements with a sliding motion. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| `slideDown()` | 它以滑动动画显示匹配的元素。 |'
- en: '| `slideToggle()` | It displays or hides the matched elements with a sliding
    motion. |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| `slideToggle()` | 它以滑动动画显示或隐藏匹配的元素。 |'
- en: '| `slideUp()` | It hides the matched elements with a sliding motion. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| `slideUp()` | 它以滑动动画隐藏匹配的元素。 |'
- en: '| `stop()` | It stops the currently-running animation on the matched elements.
    |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| `stop()` | 它停止匹配的元素上当前正在运行的动画。 |'
- en: '| `toggle()` | It displays or hides the matched elements. |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| `toggle()` | 它显示或隐藏匹配的元素。 |'
- en: 'It''s important to note that there are two properties that can change the Global
    jQuery Object. These are listed below:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，有两个属性可以更改全局 jQuery 对象。它们如下所示：
- en: '| Property | Description |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| 属性 | 描述 |'
- en: '| --- | --- |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `jQuery.fx.interval` | It is the rate (in milliseconds) at which animations
    fire. |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| `jQuery.fx.interval` | 它是动画触发的速率（以毫秒为单位）。 |'
- en: '| `jQuery.fx.off` | It globally disables all animations. |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| `jQuery.fx.off` | 它全局禁用所有动画。 |'
- en: All in all, it gives us a powerful and robust environment to easily add almost
    any type of animation that we can conceive.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，它为我们提供了一个强大而稳健的环境，可以轻松添加几乎任何类型的动画。
- en: Animation is also a popular theme for plugins, with many available plugins that
    bring different types of animations to our fingertips for instant implementation
    with minimal configuration. We'll look at several plugins later in the book.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 动画也是插件的热门主题，有许多可用的插件，可以让我们即时使用各种不同类型的动画，只需进行最小的配置。我们将在本书的后面看到几个插件。
- en: Creating the project folder
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建项目文件夹
- en: So, that's the template file that we'll be referring to and using in the code
    examples throughout the book. Let's also take a moment to look at the folder structure
    that the example files use. Create a project folder and call it `jquery-animation`
    or any similar name. Within this, create three new folders and call them `css`,
    `img`, and `js`.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，这就是我们将在整本书中引用和使用的模板文件。让我们也花点时间看看示例文件使用的文件夹结构。创建一个项目文件夹并将其命名为`jquery-animation`或类似的名称。在其中创建三个新文件夹并将它们命名为`css`、`img`和`js`。
- en: The HTML pages we create will go into the `jquery-animation` folder alongside
    the subfolders. All of the CSS files we create will go into the `css` folder,
    and all of the images that we use in the examples will go into the `img` folder.
    The jQuery library and any additional script files we use or create will go into
    the `js` folder. This is also the directory structure you'll find if you download
    and unpack the accompanying code archive containing all of the examples.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建的 HTML 页面将放在`jquery-animation`文件夹中的子文件夹旁边。我们创建的所有 CSS 文件将放在`css`文件夹中，我们在示例中使用的所有图像将放在`img`文件夹中。jQuery
    库和我们使用或创建的任何其他脚本文件将放在`js`文件夹中。这也是您在下载和解压缩包含所有示例的附带代码存档时将找到的目录结构。
- en: The template file
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模板文件
- en: 'Each of the example files we''ll create throughout the course of this book
    will rely on a common set of elements. Rather than repeatedly showing these same
    elements in every single code section and examples in the book, we''ll take a
    look at them just once here:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的整个课程中，我们将创建的每个示例文件都依赖于一组公共元素。与其在书中的每个代码部分和示例中反复显示相同的元素，不如在这里仅查看它们一次：
- en: '```js'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '```js'
- en: <!DOCTYPE html>
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: <!DOCTYPE html>
- en: <html lang="en">
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: <html lang="en">
- en: <head>
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: <head>
- en: <meta charset="utf-8">
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <meta charset="utf-8">
- en: <title></title>
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <title></title>
- en: <link rel="stylesheet" href="css/.css">
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <link rel="stylesheet" href="css/.css">
- en: </head>
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: </head>
- en: <body>
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: <body>
- en: <script src="img/jquery.js"></script>
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <script src="img/jquery.js"></script>
- en: <script>
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <script>
- en: $(function(){
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $(function(){
- en: '});'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: </script>
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </script>
- en: </body>
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: </body>
- en: </html>
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: </html>
- en: '```'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Tip
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Downloading the example code**'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://packtpub.com](http://packtpub.com). If you purchased
    this book elsewhere, you can visit [http://packtpub.com/support](http://packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从您在 [http://packtpub.com](http://packtpub.com) 购买的所有 Packt 图书的帐户中下载示例代码文件。如果您在其他地方购买了本书，您可以访问
    [http://packtpub.com/support](http://packtpub.com/support) 并注册，文件将直接通过电子邮件发送给您。
- en: Save a copy of this file into the `jquery-animation` folder we just created
    and call it `template.html`. This is the base file that we'll use for every single
    example, so when we start working through the examples and I say *add the following
    markup to the* `<body>` *of the template file*, it means insert it directly between
    the opening `<body>` tag and the first `<script>` tag in the template file we
    just created in the preceding code. Whenever we add any JavaScript to the template
    file, it will be added within the anonymous function in the second `<script>`
    tag.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 把这个文件保存到刚刚创建的`jquery-animation`文件夹中，并把它命名为`template.html`。这是我们将用于每个示例的基础文件，所以当我们开始逐个示例地工作时，我说*将以下标记添加到*
    `<body>` *的模板文件中*时，意思是将其直接插入到我们刚刚在前面的代码中创建的模板文件的第一个 `<script>` 标记之前的 `<body>`
    标记之间。每当我们向模板文件中添加任何 JavaScript 时，它都将添加到第二个 `<script>` 标记中的匿名函数内。
- en: Let's take a look at what the template file contains. We start out with the
    HTML5 doctype declaration, as we'll be using plenty of HTML5 elements in our examples.
    We also set the `lang` attribute of the `<html>` element to `en` and the `<meta>`
    tag's `charset` attribute to `utf-8`, neither of which are strictly required,
    but are nevertheless best practice.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看模板文件包含了什么。我们从 HTML5 doctype 声明开始，因为我们将在示例中使用大量的 HTML5 元素。我们还将`<html>`元素的`lang`属性设置为`en`，以及`<meta>`标签的`charset`属性设置为`utf-8`，虽然这两者都不是严格必需的，但仍然是最佳实践。
- en: Next comes an empty `<title>` element, to which we can add the name of each
    example and a `<link>` element with an incomplete `href`, ready for us to add
    the name of the stylesheet that each example will use.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是一个空的`<title>`元素，我们可以在其中添加每个示例的名称，以及一个不完整的`<link>`元素的`href`，准备好添加每个示例将使用的样式表的名称。
- en: Since the versions prior to **Internet Explorer 9** (**IE9**) don't support
    any HTML5 elements, we need to use Remy Sharp's `html5shiv` script to make this
    browser use HTML5 correctly. We can link to the online version of this file for
    convenience using a conditional comment that targets all of the versions of IE
    lower than version 9\. Feel free to download `html5.js` and store it locally if
    you plan on playing with the examples in IE while disconnected from the Internet.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 由于**Internet Explorer 9**（**IE9**）之前的版本不支持任何HTML5元素，我们需要使用Remy Sharp的`html5shiv`脚本来正确使用HTML5。我们可以链接到此文件的在线版本以便使用条件注释，该注释针对所有低于版本9的IE版本。如果您计划在没有互联网连接的情况下在IE中尝试示例，请随时下载`html5.js`并将其存储在本地。
- en: To get the most out of the examples throughout the book, it would probably be
    wise to upgrade to the latest stable release versions of the most common browsers,
    which at the time of writing are *Firefox 24*, *Chrome 30*, *Safari 6*, and *Opera
    17* (although expect these to change quite rapidly).
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 为了充分利用本书中的示例，最好将浏览器升级至撰写本文时（*Firefox 24*, *Chrome 30*, *Safari 6*, and *Opera
    17*）的最新稳定发布版本，尽管这些版本可能会迅速改变。
- en: Note
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注
- en: It's important to note that jQuery 2.0 doesn't support *oldIE*, meaning IE8
    and below. For this reason, we won't be covering any browser compatibility fixes
    for those versions of IE.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，jQuery 2.0不支持*oldIE*，也就是IE8及以下版本。因此，我们不会为这些版本的IE提供任何浏览器兼容性修复。
- en: If your project needs to be compatible with IE8 or older, you'll need to use
    **jQuery 1.10** or below. Furthermore, if your project uses HTML5 elements and
    needs to be compatible with IE8 or below, you'll need to use `html5shiv` ([https://code.google.com/p/html5shiv](https://code.google.com/p/html5shiv)).
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的项目需要与IE8或更早的浏览器兼容，您需要使用**jQuery 1.10**或更低版本。此外，如果您的项目使用HTML5元素并需要与IE8或更低版本兼容，则需要使用`html5shiv`
    ([https://code.google.com/p/html5shiv](https://code.google.com/p/html5shiv))。
- en: IE9 does support a lot of HTML5 and CSS3, so using the `html5shiv` file in general
    will only be required as long as IE8 holds its top spot as the world's most used
    browser. At the time of writing, Internet Explorer 8 had a market share of 21
    percent worldwide according to NetMarketShare ([http://netmarketshare.com](http://netmarketshare.com)).
    With 19 percent, IE10 comes in second and Chrome 29, FireFox 23 and IE9 are following
    shortly behind. The `<body>` tag of the page is empty, except for some `<script>`
    tags. We'll obviously use jQuery in every example, so the first tag links to that.
    The current version of jQuery is 2.0 at the time of writing (but like the browser
    versions, this is likely to change pretty quickly).
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: IE9确实支持大量的HTML5和CSS3，因此通常只有在IE8保持全球最常用浏览器的首位时才需要使用`html5shiv`文件。撰写本文时，根据NetMarketShare的数据，全球范围内IE8的市场份额为21%（[http://netmarketshare.com](http://netmarketshare.com)）。IE10占据第二位，占有19%，Chrome
    29、FireFox 23和IE9紧随其后。页面的`<body>`标签为空，除了一些`<script>`标签。我们显然会在每个示例中使用jQuery，所以第一个标签链接到jQuery。撰写本文时，当前版本的jQuery是2.0（但与浏览器版本一样，这很可能会迅速改变）。
- en: 'Throughout the book, we''ll be using a local version of jQuery, so that we
    won''t have to rely on being connected to the Internet or worry about Internet
    slowness. However, in most cases, in production, it''s recommended to link to
    one of the 4 CDNs (Content Delivery Network) for jQuery. These can be found below:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将使用jQuery的本地版本，这样我们就不必依赖互联网连接或担心互联网速度。然而，在大多数情况下，在生产环境中，建议链接到jQuery的4个CDN（内容分发网络）之一。这些可以在下面找到：
- en: '| CDN hosted by | URL |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| CDN主办 | URL |'
- en: '| --- | --- |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| jQuery | [http://code.jquery.com](http://code.jquery.com) |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| jQuery | [http://code.jquery.com](http://code.jquery.com) |'
- en: '| Google | [https://developers.google.com/speed/libraries/devguide?csw=1#jquery](https://developers.google.com/speed/libraries/devguide?csw=1#jquery)
    |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| Google | [https://developers.google.com/speed/libraries/devguide?csw=1#jquery](https://developers.google.com/speed/libraries/devguide?csw=1#jquery)
    |'
- en: '| Microsoft | [http://asp.net/ajaxlibrary/cdn.ashx#jQuery_Releases_on_the_CDN_0](http://asp.net/ajaxlibrary/cdn.ashx#jQuery_Releases_on_the_CDN_0)
    |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| Microsoft | [http://asp.net/ajaxlibrary/cdn.ashx#jQuery_Releases_on_the_CDN_0](http://asp.net/ajaxlibrary/cdn.ashx#jQuery_Releases_on_the_CDN_0)
    |'
- en: '| CDNJS | [http://cdnjs.com/libraries/jquery](http://cdnjs.com/libraries/jquery)
    |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| CDNJS | [http://cdnjs.com/libraries/jquery](http://cdnjs.com/libraries/jquery)
    |'
- en: In the second `<script>` tag we have an empty function, into which all of the
    example JavaScript code we write will go. We pass the jQuery object into our anonymous
    function and alias it to the `$` character. Although not strictly necessary (except
    in the example where we create a jQuery plugin), this is another good habit to
    get into.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二个 `<script>` 标签中，我们有一个空函数，我们编写的所有示例 JavaScript 代码将放入其中。我们将 jQuery 对象传递到匿名函数中，并将其命名为
    `$` 字符。虽然这并非绝对必要（除非我们创建 jQuery 插件的示例），但这是一个很好的习惯。
- en: A basic animation example
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个基本的动画示例
- en: Let's look at a basic example of the kind of animation that can help reassure
    our visitors that something is happening. If the user performs an action, and
    the result is not displayed immediately, providing feedback to the user that their
    action is in the process of being executed is a helpful use of animation.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个基本的例子，这种动画可以帮助我们的访问者放心，显示一些事情正在发生。如果用户执行了一个动作，但结果并没有立即显示，提供反馈给用户，告诉他们的动作正在执行的过程中是一种有用的动画使用。
- en: In the next screenshot we can see the loading indicator centered beneath the
    **Initiate the action** button. It features three separate loading bars which
    sequentially light up to show that something is happening. Each bar is styled
    slightly differently.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个截图中，我们可以看到加载指示器位于“启动动作”按钮的正下方。它包含三个单独的加载条，顺序点亮，以显示有事发生。每个条形稍有不同的样式。
- en: Time for action – creating an animated loader
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 时机成熟 - 创建一个动画加载器
- en: In this example we'll create a simple animated loading indicator that we can
    start when a particular process is initiated and stop once the process has completed.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们将创建一个简单的动画加载指示器，当特定进程被启动时我们可以启动它，并在进程完成后停止它。
- en: 'Open up the template file that we just looked at and add the following `<button>`
    element to `<body>` (this should go before the `<script>` elements):'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开刚刚查看的模板文件，并将以下 `<button>` 元素添加到 `<body>` 中（这应该放在 `<script>` 元素之前）：
- en: '```js'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: <button id="go">Initiate the action</button>
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <button id="go">启动动作</button>
- en: '```'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Next, in the empty function in the second `<script>` element at the bottom
    of the page, add the following code:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在页面底部第二个空函数中，添加以下代码：
- en: '```js'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: var loader = $("<div></div>", {
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var loader = $("<div></div>", {
- en: 'id: "loader"'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'id: "loader"'
- en: '}).css("display", "none");'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}).css("display", "none");'
- en: var bar = $("<span></span>").css("opacity", 0.2);
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var bar = $("<span></span>").css("opacity", 0.2);
- en: var loadingInterval = null;
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var loadingInterval = null;
- en: for (var x = 0; x < 3; x++) {
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: for (var x = 0; x < 3; x++) {
- en: bar.clone().addClass("bar-" + x).appendTo(loader);
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: bar.clone().addClass("bar-" + x).appendTo(loader);
- en: '}'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: loader.insertAfter("#go");
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: loader.insertAfter("#go");
- en: function runLoader() {
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: function runLoader() {
- en: var firstBar = loader.children(":first"),
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var firstBar = loader.children(":first"),
- en: secondBar = loader.children().eq(1),
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: secondBar = loader.children().eq(1),
- en: thirdBar = loader.children(":last");
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: thirdBar = loader.children(":last");
- en: firstBar.fadeTo("fast", 1, function () {
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: firstBar.fadeTo("fast", 1, function () {
- en: firstBar.fadeTo("fast", 0.2, function () {
  id: totrans-140
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: firstBar.fadeTo("fast", 0.2, function () {
- en: secondBar.fadeTo("fast", 1, function () {
  id: totrans-141
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: secondBar.fadeTo("fast", 1, function () {
- en: secondBar.fadeTo("fast", 0.2, function () {
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: secondBar.fadeTo("fast", 0.2, function () {
- en: thirdBar.fadeTo("fast", 1, function () {
  id: totrans-143
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: thirdBar.fadeTo("fast", 1, function () {
- en: thirdBar.fadeTo("fast", 0.2);
  id: totrans-144
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: thirdBar.fadeTo("fast", 0.2);
- en: '});'
  id: totrans-145
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '});'
  id: totrans-146
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '});'
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '});'
  id: totrans-148
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '});'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '};'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '};'
- en: $("#go").click(function () {
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("#go").click(function () {
- en: if (!$("#loader").is(":visible") ) {
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: if (!$("#loader").is(":visible") ) {
- en: loader.show();
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: loader.show();
- en: loadingInterval = setInterval(function () {
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: loadingInterval = setInterval(function () {
- en: runLoader();
  id: totrans-155
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: runLoader();
- en: '}, 1200);'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}, 1200);'
- en: '} else {'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '} else {'
- en: loader.hide();
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: loader.hide();
- en: clearInterval(loadingInterval);
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: clearInterval(loadingInterval);
- en: '}'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '});'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Save the file as `loading.html` in the main project folder (`jquery-animation`).
    Finally, we''ll need to add a few basic styles to the example. Create a new file
    in your text editor and add the following code to it:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件保存为 `loading.html`，放在主项目文件夹（`jquery-animation`）中。最后，我们需要在示例中添加一些基本样式。在文本编辑器中创建一个新文件，将以下代码添加到其中：
- en: '```js'
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: '#loader { margin:10px 0 0 36px; }'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#loader { margin:10px 0 0 36px; }'
- en: '#loader span {'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#loader span {'
- en: display:block;
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: display:block;
- en: width:6px;
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: width:6px;
- en: float:left;
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: float:left;
- en: margin-right:6px;
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: margin-right:6px;
- en: 'border:1px solid #336633;'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'border:1px solid #336633;'
- en: position:relative;
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: position:relative;
- en: background-color:#ccffcc;
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: background-color:#ccffcc;
- en: '}'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '#loader .bar-0 {'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#loader .bar-0 {'
- en: height:15px;
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: height:15px;
- en: bottom:-20px;
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: bottom:-20px;
- en: '}'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '#loader .bar-1 {'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#loader .bar-1 {'
- en: height:25px;
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: height:25px;
- en: bottom:-10px;
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: bottom:-10px;
- en: '}'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '#loader .bar-2 {'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#loader .bar-2 {'
- en: height:35px;
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: height:35px;
- en: margin-right:0;
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: margin-right:0;
- en: '}'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: Save this file in the `css` folder as `loading.css` and update the HTML file
    to call this stylesheet.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此文件保存在 `css` 文件夹中为 `loading.css`，并更新 HTML 文件以调用此样式表。
- en: At this point, your code should look like the following screenshot once we click
    on the button:![Time for action – creating an animated loader](img/9642OS_01_01.jpg)
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此时，当我们点击按钮后，你的代码应该看起来像以下截图一样：![行动时间-创建动画加载器](img/9642OS_01_01.jpg)
- en: '*What just happened?*'
  id: totrans-190
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: The `<button>` hardcoded onto the page is used to show and hide the loading
    animation. This is done purely for the purpose of this example. In an actual implementation,
    we'd show the loading animation at the start of a load operation, when new content
    is being added to the page for example, and then hide it again once the operation
    is complete.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 在页面上硬编码的 `<button>` 用于显示和隐藏加载动画。这纯粹是为了这个例子。在实际的实现中，我们会在加载操作开始时显示加载动画，例如当新内容被添加到页面上时，并且在操作完成后再次隐藏它。
- en: The first thing we did inside the outer function is set some variables. We created
    a new `<div>` element as a container for the loader, using an **object literal**
    as the second argument in the anonymous function to give it an `id` of `loader`.
    We then set its style to `display:none` with jQuery's `css()` method so that it
    is not immediately visible.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 在外部函数内部我们做的第一件事是设置一些变量。我们创建了一个新的 `<div>` 元素作为加载器的容器，使用**对象字面量**作为匿名函数的第二个参数，给它赋予一个
    `id` 为 `loader`。然后我们用 jQuery 的 `css()` 方法将其样式设置为 `display:none`，这样它就不会立即可见。
- en: Note
  id: totrans-193
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: An *object* literal is a list of paired values separated by commas and wrapped
    in curly braces.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '*对象*字面量是一组由逗号分隔并用大括号括起来的成对值。'
- en: We also created a new `<span>` element, which will be used as a template to
    create the three individual loading bars. We set its opacity to `0.2` (20% opaque)
    using the `css()` method. jQuery normalizes this style for us so that it works
    correctly in Internet Explorer. The last variable, `loadingInterval`, will be
    used to store `id` of an **interval** so that we can clear the interval when we
    need to. We set this to null initially, as the interval has not yet been set.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还创建了一个新的 `<span>` 元素，它将被用作创建三个单独的加载条的模板。我们使用 `css()` 方法将其不透明度设置为 `0.2`（20%
    不透明）。jQuery 为我们标准化了这个样式，使其在 Internet Explorer 中正确工作。最后一个变量，`loadingInterval`，将用于存储一个**间隔**的
    `id`，以便我们在需要时清除间隔。最初我们将其设置为 null，因为间隔还没有设置。
- en: Note
  id: totrans-196
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: An *interval* is a numerical value set (in milliseconds) to pause or delay an
    action.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '*间隔*是一个数字值（以毫秒为单位），用于暂停或延迟一个操作。'
- en: Once our variables have been defined and initialized, we then execute a short
    `for` loop, with just three iterations. Within this loop, we clone the span element
    we created, give it a class name (so that each bar can be styled separately),
    and then append it to the container. Once the three loading bars have been added
    to the container, we insert the loader after the `<button>` element.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们的变量被定义和初始化，我们就执行了一个简短的 `for` 循环，只有三次迭代。在这个循环中，我们克隆了我们创建的 span 元素，给它一个类名（以便每个条可以分别样式化），然后将它附加到容器中。一旦三个加载条被添加到容器中，我们就在
    `<button>` 元素之后插入了加载器。
- en: Next, we define a function called `runLoader`. This is the function that will
    be repeatedly called by the interval. The function doesn't run until the button
    is clicked. Within this function, we cache the selector for each of the three
    individual bars and then run a series of nested functions.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们定义了一个名为 `runLoader` 的函数。这是将会被间隔重复调用的函数。该函数在按钮被点击之前不会运行。在这个函数内部，我们缓存了每个单独条形图的选择器，然后运行了一系列嵌套函数。
- en: We first increased the first-loading bar to full opacity using the `fadeTo()`
    jQuery animation method. This method takes a string indicating the speed of the
    animation as its first argument (in milliseconds, or using strings `"fast"` or
    `"slow"`), the opacity that the element should be faded to as its second argument
    (values range from 0-1, including decimals such as 0.50), and a callback function
    as the third argument. The callback function is executed as soon as the animation
    ends.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先使用 `fadeTo()` jQuery 动画方法将第一个加载条的不透明度增加到完全不透明。此方法将一个字符串作为其第一个参数（以毫秒为单位表示动画的速度，或使用字符串
    `"fast"` 或 `"slow"`），将元素应该淡出到的不透明度作为其第二个参数（值范围从 0 到 1，包括小数，如 0.50），并将回调函数作为第三个参数。回调函数在动画结束后立即执行。
- en: In the callback function, we then fade the first loading bar back to its original
    opacity of `0.2`. We supply another callback function to this method call, and
    within this callback function we animate the second loading bar to full opacity
    and then back to its original opacity. The same process is repeated for the third
    loading bar.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在回调函数中，我们将第一个加载条的不透明度淡化为原始的`0.2`。我们为这个方法调用提供了另一个回调函数，在这个回调函数中，我们将第二个加载条的不透明度动画到完全不透明，然后再动画到原始的不透明度。同样的过程也用于第三个加载条。
- en: Finally, we use the jQuery `click()` method to add two functions which will
    be executed alternately each time the button is clicked. We'll use an `if` statement
    to check whether our `#loader` element is visible on the page by using `.is(":visible")`
    and adding an exclamation point (`!`) so that it returns true if the `#loader`
    element is not visible. If it isn't visible, we'll show the loader and then set
    the interval that repeatedly calls the `runLoader()` function. If the element
    is already visible, we hide the loader and clear the interval.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们使用jQuery的`click()`方法添加两个函数，这两个函数将在每次点击按钮时交替执行。我们将使用`if`语句来检查我们的`#loader`元素是否在页面上可见，使用`.is(":visible")`并添加一个感叹号(`!`)，以便如果`#loader`元素不可见，则返回true。如果它不可见，我们将显示加载器，然后设置一个重复调用`runLoader()`函数的间隔。如果元素已经可见，我们隐藏加载器并清除间隔。
- en: Have a go hero – extending the loading animation
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 动手试试英雄 —— 扩展加载动画
- en: I mentioned that we could use the loading animation when making requests and
    waiting for a response. Try using it with jQuery's AJAX methods, showing the loader
    just before making the request, and hiding it again once the response has been
    processed. The JSONP example, which retrieves images of cats, on the jQuery website
    ([http://api.jquery.com/jQuery.getJSON](http://api.jquery.com/jQuery.getJSON)),
    makes a great test case. Depending on the speed of your connection, the loader
    may not be visible for very long.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 我提到过，在进行请求并等待响应时，我们可以使用加载动画。试试在使用jQuery的AJAX方法时使用它，在发出请求之前显示加载器，一旦响应被处理，再次隐藏它。jQuery网站上的JSONP示例([http://api.jquery.com/jQuery.getJSON](http://api.jquery.com/jQuery.getJSON))，用来获取猫的图片，是一个很好的测试案例。根据您的连接速度，加载器可能不会显示很长时间。
- en: Pop quiz – basic animation with jQuery
  id: totrans-205
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 快速测验 —— 使用jQuery进行基本动画
- en: Q1\. Thinking about what we discussed earlier regarding when and when not to
    use animations, when would be an appropriate time to use this animation?
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: Q1\. 考虑我们之前讨论的关于何时使用动画和何时不使用动画的问题，什么时候使用这个动画是合适的？
- en: When there is a browser-intensive operation taking place
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当浏览器进行密集的操作时
- en: When there is a delay between something being requested from the server and
    the request returning from the server, but where the processing required by the
    browser is minimal
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当有一个从服务器请求某些内容并且请求返回服务器的延迟，但浏览器需要处理的内容很少时
- en: As an alternative to a Flash animation
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作为Flash动画的替代方案
- en: When animated GIF images are not supported
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当不支持动画GIF图像时
- en: Q2\. What arguments are used with jQuery's `fadeTo()` method?
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: Q2\. jQuery的`fadeTo()`方法使用了哪些参数？
- en: An integer representing the ending opacity
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 表示结束不透明度的整数
- en: An object containing configuration options for the animation
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 包含动画的配置选项的对象
- en: A string or integer representing the speed or duration of the animation as the
    first argument, the ending opacity of the target element, and optionally a callback
    function to be executed when the animation ends
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一个参数表示动画的速度或持续时间，目标元素的最终不透明度，可选的回调函数在动画结束时执行。
- en: No arguments are required
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不需要参数
- en: Summary
  id: totrans-216
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this introductory chapter, we looked at a brief history of animation on the
    Web including how it began, early HTML elements and browser support, the rise
    of Flash, and the direction it's heading in the not-too-distant future.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个介绍性的章节中，我们简要介绍了Web动画的历史，包括它是如何开始的，早期的HTML元素和浏览器支持，Flash的兴起，以及它在不太遥远的未来的发展方向。
- en: We also looked at how animations can be used in a user interface to enhance
    the user experience. We saw some guidelines as to when animation should and shouldn't
    be used and looked at some of the things we should consider when implementing
    animations.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还看到了动画如何在用户界面中用来增强用户体验。我们了解了一些关于何时应该使用动画和何时不应该使用动画的指导方针，并看了一些在实现动画时应该考虑的事项。
- en: We concluded the chapter with a basic example of using a loading animation.
    In this example, we used the `fadeTo()` jQuery method to change the opacity of
    elements on the page and a simple interval to play the animation. We didn't cover
    the method in full detail but we saw one example of how it can be used. We'll
    look at this method in more detail in the next chapter, which covers all of the
    fading animations provided by jQuery.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 我们用一个加载动画的基本示例结束了本章。在这个例子中，我们使用了`fadeTo()` jQuery方法来改变页面元素的不透明度，以及一个简单的间隔来播放动画。我们没有详细讨论这个方法，但我们看到了一个它的使用示例。在下一章中，我们将更详细地讨论这个方法，该章涵盖了
    jQuery 提供的所有淡入淡出动画。
- en: In the next chapter, we'll be focusing on animating images. We'll be creating
    a basic image rotator, and then extending the functionality of that script to
    build more functionality on top. We'll be left with a very lightweight image rotator
    that we can use on future development projects.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将专注于图片动画。我们将创建一个基本的图片旋转器，然后扩展该脚本的功能，以构建更多功能。我们将得到一个非常轻量级的图片旋转器，可以在未来的开发项目中使用。
