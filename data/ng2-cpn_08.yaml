- en: Chapter 8. Integrating Third-Party Components
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章。集成第三方组件
- en: There are a lot of UI components built with other libraries that we might want
    to use in our Angular 2 application. Throughout this chapter we will integrate
    a tooltip widget from the popular bootstrap library.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多使用其他库构建的UI组件，我们可能想在我们的Angular 2应用程序中使用。在本章中，我们将集成来自流行的bootstrap库的tooltip小部件。
- en: Importing the bootstrap and jQuery libraries are the topics that we cover in
    this chapter.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 导入bootstrap和jQuery库是我们在本章中涵盖的主题。
- en: Preparing our development environment
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备我们的开发环境
- en: 'Before we continue, let''s create a new project. Open `app.component.ts` and
    remove the external links to the HTML template and the CSS file:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，让我们创建一个新项目。打开`app.component.ts`并删除HTML模板和CSS文件的外部链接：
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Importing dependencies
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入依赖项
- en: Since we are going to wrap a component from the bootstrap library, we first
    need to download and import the bootstrap library and its dependencies and import
    it in to our code. The first step will be to install `bootstrap` with `npm`. Open
    the Terminal, make sure that you are inside the project root, and type `npm install
    bootstrap -S`. This command will download the bootstrap files into the `node_modules`
    and write it on the `package.json`.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们将包装来自bootstrap库的组件，我们首先需要下载并导入bootstrap库及其依赖项，并将其导入到我们的代码中。第一步是使用`npm`安装`bootstrap`。打开终端，确保你在项目根目录中，然后键入`npm
    install bootstrap -S`。此命令将下载bootstrap文件到`node_modules`并将其写入`package.json`。
- en: Since bootstrap is dependent on jQuery library, we need to install it as well.
    We will use `npm` for it as well. In the Terminal, type `npm install jquery –S`.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 由于bootstrap依赖于jQuery库，我们也需要安装它。我们也将使用`npm`。在终端中，键入`npm install jquery –S`。
- en: 'We also need to install corresponding typings for these two libraries to be
    able to compile the application. The names of the corresponding typing modules
    are the same as the target libraries but with the `@types` prefix. To install
    them, just use the following command:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要安装这两个库的相应类型，以便能够编译应用程序。相应类型模块的名称与目标库相同，但带有`@types`前缀。要安装它们，只需使用以下命令：
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The CSS file of the `Bootstrap` library needs to be configured globally for
    the application in the styles section of the `angular-cli.json` file:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '`Bootstrap`库的CSS文件需要在`angular-cli.json`文件的样式部分中全局配置为应用程序：'
- en: '[PRE2]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Since the latest versions of the Angular CLI rely on `Webpack`, we use its
    expose loader to make available jQuery globally to the `Bootstrap` library. The
    latter needs this to extend jQuery by adding a set of methods such as `tooltip`
    and `collapse`. To install the `expose loader`, just use the following command:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 由于最新版本的Angular CLI依赖于`Webpack`，我们使用其暴露加载器将jQuery全局可用于`Bootstrap`库。后者需要这样做以通过添加一组方法（如`tooltip`和`collapse`）来扩展jQuery。要安装`expose
    loader`，只需使用以下命令：
- en: '[PRE3]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We can now import both jQuery and Bootstrap where we need them using the `import`
    clause.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以在需要的地方使用`import`子句导入jQuery和Bootstrap。
- en: 'Before we move forward, open `app.component.ts` and add the following import
    statements for the jQuery and Bootstrap libraries:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，打开`app.component.ts`并添加以下导入语句以导入jQuery和Bootstrap库：
- en: '[PRE4]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Bootstrap tooltip component
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Bootstrap tooltip组件
- en: 'Angular 2''s ability to bind to element properties and events without the need
    for custom directives enables us to integrate with third-party code easily. Bootstrap
    uses some custom attributes to make the tooltip work. We can use it as is. Open
    `app.component.ts` and add the bootstrap attributes to the heading to display
    a tooltip from the bottom. We also need to leverage the `AfterViewInit` hook to
    initialize the tooltip when the template is rendered:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Angular 2能够绑定到元素属性和事件，而无需自定义指令，使我们能够轻松集成第三方代码。Bootstrap使用一些自定义属性来使提示工作。我们可以直接使用它。打开`app.component.ts`并将bootstrap属性添加到标题中，以从底部显示提示。我们还需要利用`AfterViewInit`钩子在模板渲染时初始化提示：
- en: '[PRE5]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now, let''s open the browser and test it. Hover over the title and wait for
    the tooltip to appear at the bottom:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们打开浏览器测试一下。将鼠标悬停在标题上，等待提示出现在底部：
- en: '![Bootstrap tooltip component](../Images/image00115.jpeg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![Bootstrap提示组件](../Images/image00115.jpeg)'
- en: Now, let's integrate it with Angular and make it dynamic. The process is straightforward.
    We can bind to each property that we want to control. Let's start with the `title`.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们将其与Angular集成并使其动态化。这个过程很简单。我们可以绑定到我们想要控制的每个属性。让我们从`title`开始。
- en: 'Open `app.component.ts` and add the following code:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 打开`app.component.ts`并添加以下代码：
- en: '[PRE6]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'We didn''t have to write a single line of code in our component class to make
    it work. Open the browser, type a title, and hover over the title to see the result:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不必在组件类中编写任何代码就能使其工作。打开浏览器，输入一个标题，将鼠标悬停在标题上，看看结果：
- en: '![Bootstrap tooltip component](../Images/image00116.jpeg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![Bootstrap提示组件](../Images/image00116.jpeg)'
- en: Bootstrap collapse component
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Bootstrap折叠组件
- en: Let's try another example, but this time we will bind to events as well. For
    this example we will use another widget from the bootstrap library called `collapse`.
    In the `components` folder, create a new folder named `collapse`. Inside it, create
    a file named `collapse.ts` for our component and a file named `collapse.html`
    for the `component` template.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试另一个例子，但这次我们将绑定到事件。对于这个例子，我们将使用bootstrap库中的另一个小部件，称为`collapse`。在`components`文件夹中，创建一个名为`collapse`的新文件夹。在其中，为我们的组件创建一个名为`collapse.ts`的文件和一个名为`collapse.html`的`component`模板文件。
- en: 'Open `collapse.ts` and paste the following code. This is an example collapse
    widget that was taken *as-is* from the bootstrap website ([http://getbootstrap.com/javascript/#collapse](http://getbootstrap.com/javascript/#collapse)):'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 打开`collapse.ts`并粘贴以下代码。这是一个折叠小部件的示例，直接从bootstrap网站([http://getbootstrap.com/javascript/#collapse](http://getbootstrap.com/javascript/#collapse))中获取：
- en: '[PRE7]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Open `collapse.html` and paste in the following:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 打开`collapse.html`并粘贴以下内容：
- en: '[PRE8]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Let''s render the component. Open `app.component.ts`, import the `collapse`
    component, and use it in the template as follows:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们渲染这个组件。打开`app.component.ts`，导入`collapse`组件，并在模板中使用它，如下所示：
- en: '[PRE9]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Don''t forget to add the `Collapse` class to the `declarations` attribute of
    the root module of the application to make the `collapse` component usable, as
    shown in the following code:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 不要忘记将`Collapse`类添加到应用程序的根模块的`declarations`属性中，以使`collapse`组件可用，如下所示：
- en: '[PRE10]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Now, open the browser to test the collapse event:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，打开浏览器测试折叠事件：
- en: '![Bootstrap collapse component](../Images/image00117.jpeg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![Bootstrap折叠组件](../Images/image00117.jpeg)'
- en: We already know how to bind to properties from the tooltip example. In this
    example, we will bind to the collapse events.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经知道如何从提示示例中绑定属性。在这个例子中，我们将绑定到折叠事件。
- en: 'According to the bootstrap documents, the collapse fires four events throughout
    it''s life cycle. We will focus on two of them:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 根据bootstrap文档，折叠在其生命周期中触发四个事件。我们将专注于其中两个：
- en: '`show.bs.collapse`: This method fires when the `show` method is called.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`show.bs.collapse`：当调用`show`方法时触发此方法。'
- en: '`hide.bs.collapse`: This method fires when the `hide` method is called.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hide.bs.collapse`：当调用`hide`方法时，此方法将触发。'
- en: 'If we want to listen to those events, we need to hold a reference to the DOM
    element. For this, we will inject `ElementRef`. Open `collapse.ts` and the following
    code:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要监听这些事件，我们需要保存对DOM元素的引用。为此，我们将注入`ElementRef`。打开`collapse.ts`并添加以下代码：
- en: '[PRE11]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: There is a lot of ways to listen to an event on an element. We choose to use
    jQuery to wrap the native element and register an event listener for the collapse.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多方法可以监听元素上的事件。我们选择使用jQuery来包装原生元素，并为折叠注册事件监听器。
- en: 'You can open the browser and watch the logs in the console corresponding to
    the collapse events:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以打开浏览器并观看控制台中与折叠事件对应的日志：
- en: '![Bootstrap collapse component](../Images/image00118.jpeg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![Bootstrap折叠组件](../Images/image00118.jpeg)'
- en: Summary
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Angular 2 plays well with third-party code by enabling binding to native properties
    naturally. On the other hand, if we need to hold a reference to the DOM element,
    we can inject `ElementRef in` to our component.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Angular 2通过自然地绑定到原生属性，与第三方代码很好地配合。另一方面，如果我们需要保存对DOM元素的引用，我们可以在组件中注入`ElementRef`。
