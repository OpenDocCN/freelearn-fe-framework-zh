["```js\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ChatComponent} from './chat.component';\n\nexport const ROUTES: Routes = [\n  {path: 'app-friends-chat/:id', component: ChatComponent}\n];\n\n/**\n * Chat Routing Module\n */\n@NgModule({\n  imports: [\n    RouterModule.forChild(ROUTES)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class ChatRoutingModule { }\n```", "```js\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {UserService} from '../services/user.service';\nimport {ChatMessageComponent} from './chat-message/chat-message.component';\nimport {ChatMessageListComponent} from './chat-message-list/chat-message-list.component';\nimport {ChatMessageFormComponent} from './chat-message-form/chat-message-form.component';\nimport {ChatComponent} from './chat.component';\nimport {ChatRoutingModule} from './chat-routing.module';\n\n/**\n * Chat Module\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        BrowserModule,\n        FormsModule,\n        ChatRoutingModule\n    ],\n    declarations: [\n        ChatMessageComponent,\n        ChatMessageListComponent,\n        ChatMessageFormComponent,\n        ChatComponent\n    ],\n    providers: [\n        UserService\n    ]\n})\nexport class ChatModule {\n}\n```", "```js\n...\n@NgModule({\n   declarations: [\n      ...\n   ],\n   imports: [\n      ...\n      ChatModule,\n   ],\n   providers: [\n      ...\n   ],\n   bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n```", "```js\n#messages {\n    background-color: #F2F2F2 !important;\n}\n```", "```js\n$mercury_solid:  #e5e5e5;\n$sushi: #8BC34A;\n$concrete_solid: #F2F2F2;\n$iron: #E1E2E3;\n$pickled_bluewood: #2d384a;\n```", "```js\n@import \"../../shared/colors\";\n\n.chat-message-list-main-container {\n\n    #messages {\n        background-color: $concrete_solid !important;\n    }\n}\n```", "```js\ndiv class=\"chat-main-container\">\n    <div class=\"main_container\">\n        <div class=\"col-md-8 col-md-offset-2\">\n            ...\n        </div>\n    </div>\n</div>\n```", "```js\ndiv class=\"chat-main-container\">\n    <div class=\"main_container\">\n        <div class=\"col-md-8 col-md-offset-2\">\n            <app-chat-message-list [friendUid]=\"uid\">\n            </app-chat-message-list>\n            <app-chat-message-form [friendUid]=\"uid\">\n            </app-chat-message-form>\n        </div>\n    </div>\n</div>\n```", "```js\n.chat-main-container {\n    margin-top: 10px;\n    margin-left: 80px;\n\n    p {\n        font-size: 10px;\n    }\n\n}\n```", "```js\nimport {Component} from '@angular/core';\n\n@Component({\n    selector: 'app-friends-chat',\n    styleUrls: ['chat.component.scss'],\n    templateUrl: 'chat.component.html',\n})\nexport class ChatComponent {\n}\n```", "```js\n<div class=\"chat-message-list-main-container\">\n    <div #scrollContainer class=\"message-list-container\" \n     id=\"messages\">\n    ...    \n    </div>\n</div>\n```", "```js\n<div class=\"chat-message-list-main-container\">\n    <div #scrollContainer class=\"message-list-container\" id=\"messages\">\n        <app-chat-message *ngFor=\"let message of messages;\" \n         [message]=\"message\">\n        </app-chat-message>\n    </div>\n</div>\n```", "```js\n<div #scrollContainer class=\"message-list-container\" id=\"messages\"></div>\n```", "```js\n#messages {\n    background-color: $concrete_solid !important;\n}\n```", "```js\n.message-list-container {\n        ...\n        box-shadow: inset 0 3px 6px rgba(0, 0, 0, .05);\n        border-radius: 8px;\n    }\n```", "```js\n.chat-message-list-main-container {\n\n    #messages {\n        background-color: #F2F2F2 !important;\n    }\n\n    .message-list-container {\n        position: relative;\n        padding: 15px 15px 15px;\n        border-color: #e5e5e5 #eee #eee;\n        border-style: solid;\n        border-width: 1px 0;\n        background-color: #E1E2E3;\n        box-shadow: inset 0 3px 6px rgba(0, 0, 0, .05);\n        height: 60vh;\n        overflow-y: scroll;\n        background-color: #2d384a !important;\n        border-radius: 8px;\n    }\n\n    p {\n        font-size: 10px;\n    }\n\n}\n```", "```js\n@ViewChild('scrollContainer') private scrollContainer: ElementRef\n```", "```js\ninterface AfterViewChecked{\n    ngAfterViewChecked: void\n}\n```", "```js\nngAfterViewChecked() {\n        this.scrollToBottom();\n        this.cdRef.detectChanges();\n    }\n\n    scrollToBottom(): void {\n        try {\n            this.scrollContainer.nativeElement.scrollTop =   \n            this.scrollContainer.nativeElement.scrollHeight;\n        } catch(err) {\n            console.log(\"Error\");\n        }\n    }\n```", "```js\nimport {AfterViewChecked, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\n\n@Component({\n    selector: 'app-chat-message-list',\n    styleUrls: ['chat-message-list.component.scss'],\n    templateUrl: 'chat-message-list.component.html'\n})\nexport class ChatMessageListComponent implements OnInit , AfterViewChecked{\n    @ViewChild('scrollContainer') private scrollContainer: ElementRef;\n\n    constructor(private messageService: MessagingService,\n                private userService: UserService,\n                private cdRef: ChangeDetectorRef) {\n    }\n\n    ngAfterViewChecked() {\n        this.scrollToBottom();\n        this.cdRef.detectChanges();\n    }\n\n    scrollToBottom(): void {\n        try {\n            this.scrollContainer.nativeElement.scrollTop = \n            this.scrollContainer.nativeElement.scrollHeight;\n        } catch(err) {\n            console.log(\"Error\");\n        }\n    }\n\n}\n```", "```js\n@mixin message-pointer($rotate , $skew) {\n    transform: rotate($rotate) skew($skew);\n    -moz-transform: rotate($rotate) skew($skew);\n    -ms-transform: rotate($rotate) skew($skew);\n    -o-transform: rotate($rotate) skew($skew);\n    -webkit-transform: rotate($rotate) skew($skew);\n}\n```", "```js\n@import \"../../shared/shared\";\n\n.chat-message-main-container {\n\n    .message-bubble::before {\n        ...\n        @include message-pointer(29deg , -35deg);\n        ...\n    }\n\n}\n```", "```js\n<div class=\"chat-message-main-container\">\n    <div class=\"message-bubble\" [class.receiver]=\"isReceiver(message)\" \n    [class.sender]=\"isSender(message)\">\n        <p>{{ message.message }}</p>\n        <div class=\"timestamp\">\n            {{ message.timestamp | date:\"MM/dd/yy hh:mm a\" }}\n        </div>\n    </div>\n</div>\n```", "```js\n@import \"../../shared/shared\";\n\n.chat-message-main-container {\n\n    .message-bubble {\n        background-color: #ffffff;\n        border-radius: 5px;\n        box-shadow: 0 0 6px #B2B2B2;\n        display: inline-block;\n        padding: 10px 18px;\n        position: relative;\n        vertical-align: top;\n        width: 400px;\n    }\n\n    .message-bubble::before {\n        background-color: #ffffff;\n        content: \"\\00a0\";\n        display: block;\n        height: 16px;\n        position: absolute;\n        top: 11px;\n        @include message-pointer(29deg , -35deg);\n        width: 20px;\n    }\n\n    .sender {\n        display: inherit;\n        margin: 5px 45px 5px 20px;\n    }\n\n    .sender::before {\n        box-shadow: -2px 2px 2px 0 rgba(178, 178, 178, .4);\n        left: -9px;\n    }\n\n    .receiver {\n        display: inherit;\n        margin: 5px 20px 5px 170px;\n    }\n\n    .receiver::before {\n        box-shadow: 2px -2px 2px 0 rgba(178, 178, 178, .4);\n        right: -9px;\n    }\n\n}\n```", "```js\nimport {ChangeDetectionStrategy, Component, Input, OnInit} from '@angular/core';\nimport {UserService} from '../../services/user.service';\nimport {Message} from '../../services/message';\n\n@Component({\n  selector: 'app-chat-message',\n  styleUrls: ['chat-message.component.scss'],\n  templateUrl: 'chat-message.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ChatMessageComponent implements OnInit {\n\n  @Input() message: Message;\n\n  uid: string;\n\n  constructor(private userService: UserService) {\n  }\n\n  ngOnInit() {\n    this.uid = this.userService.getSavedUser().getValue().uid;\n  }\n\n  isReceiver(message: Message) {\n    return this.uid === message.receiverUid;\n  }\n\n  isSender(message: Message) {\n    return this.uid === message.senderUid;\n  }\n\n}\n```", "```js\n<div class=\"chat-message-form-main-container\">\n    <div class=\"chat-message-form-container\">\n        <input type=\"textarea\" placeholder=\"Type a message\" \n         class=\"message-text\" [(ngModel)]=\"newMessage\" \n         (keyup.enter)=\"sendMessage()\">\n        <button (click)=\"sendMessage()\" \n         class=\"btn btn-outline-success my-2 my-sm-0\" \n         type=\"submit\">SEND</button>\n    </div>\n</div>\n```", "```js\n@import \"../../shared/colors\";\n\n.chat-message-form-main-container {\n\n    .chat-message-form-container {\n        padding: 9px 50px;\n        margin-bottom: 14px;\n        background-color: #f7f7f9;\n        border: 1px solid #e1e1e8;\n        border-radius: 4px;\n\n        .message-text {\n            display: block;\n            padding: 9.5px;\n            margin: 0 0 10px;\n            font-size: 13px;\n            line-height: 1.42857143;\n            color: #333;\n            word-break: break-all;\n            word-wrap: break-word;\n            background-color: #ffffff;\n            border: 1px solid $sushi;\n            border-radius: 4px;\n            width: 100%;\n        }\n    }\n}\n```", "```js\nimport { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport {MessagingService} from '../../services/messaging.service';\nimport {Message} from '../../services/message';\nimport {UserService} from '../../services/user.service';\n\n@Component({\n  selector: 'chat-message-form',\n    styleUrls: ['chat-message-form.component.scss'],\n    templateUrl: 'chat-message-form.component.html'\n})\nexport class ChatMessageFormComponent implements OnInit {\n\n  uid: string;\n\n  newMessage: string;\n\n  constructor(private messageService: MessagingService,\n              private userService: UserService) { }\n\n  ngOnInit() {\n      this.uid = this.userService.getSavedUser().getValue().getUid();\n  }\n\n   sendMessage() {\n  }\n\n}\n```"]