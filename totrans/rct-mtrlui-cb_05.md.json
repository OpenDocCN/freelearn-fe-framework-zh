["```js\nimport React, { useState, Fragment } from 'react';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nexport default function StatefulExpansionPanels() {\n  const [panels] = useState([\n    {\n      title: 'First Panel Title',\n      content: 'First panel content...'\n    },\n    {\n      title: 'Second Panel Title',\n      content: 'Second panel content...'\n    },\n    {\n      title: 'Third Panel Title',\n      content: 'Third panel content...'\n    },\n    {\n      title: 'Fourth Panel Title',\n      content: 'Fourth panel content...'\n    }\n  ]);\n\n  return (\n    <Fragment>\n      {panels\n        .filter(panel => !panel.hidden)\n        .map((panel, index) => (\n          <ExpansionPanel\n            key={index}\n            disabled={panel.disabled}\n          >\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n              <Typography>{panel.title}</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <Typography>{panel.content}</Typography>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n        ))}\n    </Fragment>\n  );\n}\n```", "```js\nconst [panels] = useState([\n  {\n    title: 'First Panel Title',\n    content: 'First panel content...'\n  },\n  {\n    title: 'Second Panel Title',\n    content: 'Second panel content...'\n  },\n  {\n    title: 'Third Panel Title',\n    content: 'Third panel content...'\n  },\n  {\n    title: 'Fourth Panel Title',\n    content: 'Fourth panel content...'\n  }\n]);\n```", "```js\n{panels\n  .filter(panel => !panel.hidden)\n  .map((panel, index) => (\n\n      }>\n       {panel.title}\n\n       {panel.content}\n\n   ))}\n```", "```js\nconst [expanded, setExpanded] = useState(0);\nconst [panels] = useState([\n  {\n    title: 'First Panel Title',\n    content: 'First panel content...'\n  },\n  {\n    title: 'Second Panel Title',\n    content: 'Second panel content...'\n  },\n  {\n    title: 'Third Panel Title',\n    content: 'Third panel content...'\n  },\n  {\n    title: 'Fourth Panel Title',\n    content: 'Fourth panel content...'\n  }\n]);\n```", "```js\nconst onChange = expanded => () => {\n  setExpanded(expanded);\n};\n```", "```js\n<ExpansionPanel\n  key={index}\n  expanded={index === expanded}\n  disabled={panel.disabled}\n  onChange={onChange(index)}\n>\n  <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n    <Typography>{panel.title}</Typography>\n  </ExpansionPanelSummary>\n  <ExpansionPanelDetails>\n    <Typography>{panel.content}</Typography>\n  </ExpansionPanelDetails>\n</ExpansionPanel>\n```", "```js\nimport React, { Fragment } from 'react';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst FormattingPanelHeaders = () => (\n  <Fragment>\n    <ExpansionPanel>\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography variant=\"subtitle1\">Devices</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Typography>Devices content...</Typography>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n    <ExpansionPanel>\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography variant=\"subtitle1\">Networks</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Typography>Networks content...</Typography>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n    <ExpansionPanel>\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography variant=\"subtitle1\">Storage</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Typography>Storage content...</Typography>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  </Fragment>\n);\n\nexport default FormattingPanelHeaders;\n```", "```js\nimport DevicesIcon from 'material-ui/icons/Devices';\nimport NetworkWifiIcon from 'material-ui/icons/NetworkWifi';\nimport StorageIcon from '@material-ui/icons/Storage';\n```", "```js\nconst styles = theme => ({\n  icon: {\n    marginRight: theme.spacing(1)\n  }\n});\n```", "```js\n<Fragment>\n  <ExpansionPanel>\n    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n      <DevicesIcon className={classes.icon} />\n      <Typography variant=\"subtitle1\">Devices</Typography>\n    </ExpansionPanelSummary>\n    <ExpansionPanelDetails>\n      <Typography>Devices content...</Typography>\n    </ExpansionPanelDetails>\n  </ExpansionPanel>\n  <ExpansionPanel>\n    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n      <NetworkWifiIcon className={classes.icon} />\n      <Typography variant=\"subtitle1\">Networks</Typography>\n    </ExpansionPanelSummary>\n    <ExpansionPanelDetails>\n      <Typography>Networks content...</Typography>\n    </ExpansionPanelDetails>\n  </ExpansionPanel>\n  <ExpansionPanel>\n    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n      <StorageIcon className={classes.icon} />\n      <Typography variant=\"subtitle1\">Storage</Typography>\n    </ExpansionPanelSummary>\n    <ExpansionPanelDetails>\n      <Typography>Storage content...</Typography>\n    </ExpansionPanelDetails>\n  </ExpansionPanel>\n</Fragment>  \n```", "```js\nimport React, { Fragment } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst styles = theme => ({\n  panelDetails: {\n    flexDirection: 'column',\n    height: 150,\n    overflow: 'auto'\n  }\n});\n\nconst IpsumContent = () => (\n  <Fragment>\n    <Typography paragraph>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer\n      ultricies nibh ut ipsum placerat, eget egestas leo imperdiet.\n      Etiam consectetur mollis ultrices. Fusce eu eros a dui maximus\n      rutrum. Aenean at dolor eu nunc ultricies placerat. Sed finibus\n      porta sapien eget euismod. Donec eget tortor non turpis\n      hendrerit euismod. Phasellus at commodo augue. Maecenas\n      scelerisque augue at mattis pharetra. Aenean fermentum sed neque\n      id feugiat.\n    </Typography>\n\n    <Typography paragraph>\n      Aliquam erat volutpat. Donec sit amet venenatis leo. Nullam\n      tincidunt diam in nisi pretium, sit amet tincidunt nisi aliquet.\n      Proin quis justo consectetur, congue nisi nec, pharetra erat. Ut\n      volutpat pulvinar neque vitae vestibulum. Phasellus nisl risus,\n      dapibus at sapien in, aliquam tempus tellus. Integer accumsan\n      tortor id dolor lacinia, et pulvinar est porttitor. Mauris a est\n      vitae arcu iaculis dictum. Sed posuere suscipit ultricies.\n      Vivamus a lacus in dui vehicula tincidunt.\n    </Typography>\n\n    <Typography paragraph>\n      In ut velit laoreet, blandit nisi id, tempus mi. Mauris interdum\n      in turpis vel tempor. Vivamus tincidunt turpis vitae porta\n      dignissim. Quisque condimentum augue arcu, quis tincidunt erat\n      luctus sit amet. Sed quis ligula malesuada, sollicitudin nisl\n      nec, molestie tellus. Donec commodo consequat gravida. Mauris in\n      rhoncus tellus, eget posuere risus. Pellentesque eget lectus\n      lorem. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n      Integer condimentum, sapien varius vulputate lobortis, urna elit\n      vestibulum ligula, sit amet interdum lectus augue ac eros.\n      Vestibulum lorem ante, tincidunt eget faucibus id, placerat non\n      est. Vivamus pretium consectetur nunc at imperdiet. Nullam eu\n      elit dui. In imperdiet magna ac dui aliquam gravida. Aenean\n      ipsum ex, fermentum eu pretium quis, posuere et velit.\n    </Typography>\n  </Fragment>\n);\n\nconst ScrollablePanelContent = withStyles(styles)(({ classes }) => (\n  <Fragment>\n    <ExpansionPanel>\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography>First</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails className={classes.panelDetails}>\n        <IpsumContent />\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n    <ExpansionPanel>\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography>Second</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails className={classes.panelDetails}>\n        <IpsumContent />\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n    <ExpansionPanel>\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography>Third</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails className={classes.panelDetails}>\n        <IpsumContent />\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  </Fragment>\n));\n\nexport default ScrollablePanelContent;\n```", "```js\nconst styles = theme => ({\n  panelDetails: {\n    flexDirection: 'column',\n    height: 150,\n    overflow: 'auto'\n  }\n});\n```", "```js\n<ExpansionPanelDetails className={classes.panelDetails}>\n  <IpsumContent />\n</ExpansionPanelDetails>  \n```", "```js\nimport React, { useState, Fragment } from 'react';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst fetchPanelContent = index =>\n  new Promise(resolve =>\n    setTimeout(\n      () =>\n        resolve(\n          [\n            'First panel content...',\n            'Second panel content...',\n            'Third panel content...',\n            'Fourth panel content...'\n          ][index]\n        ),\n      1000\n    )\n  );\n\nexport default function LazyLoadingPanelContent() {\n  const [panels, setPanels] = useState([\n    { title: 'First Panel Title' },\n    { title: 'Second Panel Title' },\n    { title: 'Third Panel Title' },\n    { title: 'Fourth Panel Title' }\n  ]);\n\n  const onChange = index => e => {\n    if (!panels[index].content) {\n      fetchPanelContent(index).then(content => {\n        const newPanels = [...panels];\n        newPanels[index] = { ...newPanels[index], content };\n        setPanels(newPanels);\n      });\n    }\n  };\n\n  return (\n    <Fragment>\n      {panels.map((panel, index) => (\n        <ExpansionPanel key={index} onChange={onChange(index)}>\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography>{panel.title}</Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <Typography>{panel.content}</Typography>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      ))}\n    </Fragment>\n  );\n}\n```", "```js\nconst fetchPanelContent = index =>\n  new Promise(resolve =>\n    setTimeout(\n      () =>\n        resolve(\n          [\n            'First panel content...',\n            'Second panel content...',\n            'Third panel content...',\n            'Fourth panel content...'\n          ][index]\n        ),\n      1000\n    )\n  );\n```", "```js\nconst onChange = index => (e) => {\n  if (!panels[index].content) {\n    fetchPanelContent(index).then(content => {\n      const newPanels = [...panels];\n      newPanels[index] = { ...newPanels[index], content };\n      setPanels(newPanels);\n    });\n  }\n};\n```", "```js\nconst MaybeProgress = ({ loading }) =>\n  loading ? <LinearProgress /> : null;\n\nconst useStyles = makeStyles(theme => ({\n  panelDetails: { flexDirection: 'column' }\n}));\n```", "```js\nreturn (\n  <Fragment>\n    {panels.map((panel, index) => (\n      <ExpansionPanel key={index} onChange={onChange(index)}>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography>{panel.title}</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails className={classes.panelDetails}>\n          <MaybeProgress loading={!panel.content} />\n          <Typography>{panel.content}</Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    ))}\n  </Fragment>\n);\n```", "```js\nconst onChange = index => (e, expanded) => {\n  if (!panels[index].content && expanded) {\n    fetchPanelContent(index).then(content => {\n      const newPanels = [...panels];\n      newPanels[index] = { ...newPanels[index], content };\n      setPanels(newPanels);\n    });\n  }\n};\n```"]