["```js\ngit switch CH09.\n```", "```js\n<button>\n  <icon src=\"img/myIcon\" />\n  My button with icon\n</button>\n```", "```js\n<template>\n  <button :class=\"theme\">\n    <slot></slot>\n  </button>\n</template>\n<script setup>\ndefineProps({\n  value: {\n    type: [String, Number],\n    required: true\n  },\n  width: {\n    type: String,\n    default: \"100px\"\n  },\n  theme: {\n    type: String,\n    default: \"light\",\n    validator: (value) => [\"light\", \"dark\"].includes(value)\n  }\n})\n</script>\n```", "```js\n<TheButton value=\"Example value\" />\n```", "```js\n<TheButton>Example value</TheButton>\n```", "```js\n<template>\n  <button :class=\"theme\">\n    <slot>Click Me</slot>\n  </button>\n</template>\n```", "```js\n<TheButton></TheButton>\n```", "```js\n<TheButton>Show this</TheButton>\n```", "```js\n<template>\n  <h1></h1>\n  <main></main>\n  <footer></footer>\n</template>\n<style scoped>\nh1, main, footer {\n  grid-column-start: 1;\n  grid-column-end: 3;\n}\nh1{\n  align-items: center;\n}\nmain {\n  padding: 16px 32px;\n}\nfooter {\n  border-top: solid 1px lightgray;\n}\n</style>\n```", "```js\n<template>\n  <h1><slot name=\"heading\"></slot></h1>\n  <main><slot name=\"default\"></slot></main>\n  <footer>\n    <slot name=\"footer\">\n    Copyright reserved to Vue.js for beginners\n    </slot>\n  </footer>\n</template>\n```", "```js\n<template>\n<StaticTemplate>\n  <template #heading>About Page</template>\n  <template #default>\n    This is my content and default slot\n  <template>\n</StaticTemplate>\n</template>\n<script setup>\nimport StaticTemplate from '../components/templates/staticTemplate.vue'\n</script>\n```", "```js\n<template>\n  <form>\n    <h2>Create a Post</h2>\n      <textarea rows=\"4\" cols=\"20\" ref=\"textareaRef\">\n      </textarea>\n      <TheButton>Create</TheButton>\n  </form>\n</template>\n<script setup>\n  import { onMounted, ref } from 'vue';\n  import TheButton from '../atoms/TheButton.vue';\n  const textareaRef = ref(null);\n  onMounted( () => {\n    textareaRef.value.focus();\n  });\n</script>\n```", "```js\n<textarea\n  rows=\"4\"\n  cols=\"20\"\n  ref=\"textareaRef\"\n  required=\"true\"\n  minlength=\"10\"\n></textarea>\n```", "```js\n<template>\n<form ref=\"createPostForm\">\n   ...\n</form>\n</template>\n<script setup>\nimport TheButton from '../atoms/TheButton.vue';\nimport { onMounted, ref } from 'vue';\nconst textareaRef = ref(null);\nconst createPostForm = ref(null);\n```", "```js\n<template>\n  <form ref=\"createPostForm\" @submit=\"createPost\">\n    <h2>Create a Post</h2>\n    <textarea\n      rows=\"4\"\n      cols=\"20\"\n      ref=\"textareaRef\"\n      required=\"true\"\n      minlength=\"10\"\n    ></textarea>\n    <TheButton>Create Post</TheButton>\n  </form>\n</template>\n<script setup>\nimport TheButton from '../atoms/TheButton.vue';\nimport { onMounted, ref } from 'vue';\nconst textareaRef = ref(null);\nconst createPostForm = ref(null);\nconst createPost = (event) => {\n  event.preventDefault();\n  if(createPostForm.value.reportValidity()){\n    //code to create post\n  };\n}\n...\n```", "```js\n<script setup>\nimport { ref } from 'vue';\nimport TheButton from '../atoms/TheButton.vue'\nimport IconLeftArrow from '../icons/IconLeftArrow.vue'\nimport IconRightArrow from '../icons/IconRightArrow.vue'\n...\n```", "```js\n<template>\n<aside>\n  <template v-if=\"\">\n    <IconRightArrow />\n  </template>\n  <template v-else>\n    <h2>Sidebar</h2>\n    <IconLeftArrow />\n    <TheButton>Create post</TheButton>\n    <div>Current time: {{currentTime}}</div>\n    <TheButton @click=\"onUpdateTimeClick\">Update Time</TheButton>\n  </template>\n</aside>\n</template>\n```", "```js\nimport { ref } from 'vue';\n...\nconst currentTime = ref(new Date().toLocaleTimeString());\nconst closed = ref(false);\n```", "```js\n<template>\n<aside>\n  <template v-if=\"closed\">\n    <IconRightArrow />\n  </template>\n```", "```js\n<template v-if=\"closed\">\n  <IconRightArrow @click=\"toggleSidebar\" />\n</template>\n<template v-else>\n  <h2>Sidebar</h2>\n  <IconLeftArrow @click=\"toggleSidebar\" />\n  <TheButton>Create post</TheButton>\n...\n```", "```js\nconst toggleSidebar = () => {\n  closed.value = !closed.value;\n}\n```", "```js\n<template>\n<aside :class=\"{ 'sidebar__closed': closed}\">\n  <template v-if=\"closed\">\n    <IconRightArrow class=\"sidebar__icon\" @click=\"toggleSidebar\" />\n  </template>\n  <template v-else>\n    <h2>Sidebar</h2>\n    <IconLeftArrow class=\"sidebar__icon\" @click=\"toggleSidebar\" />\n    <TheButton>Create post</TheButton>\n    <div>Current time: {{currentTime}}</div>\n    <TheButton @click=\"onUpdateTimeClick\">Update Time</TheButton>\n  </template>\n</aside>\n</template>\n<script setup>...</script>\n<style scoped>\naside {\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  &.sidebar__closed{\n    width: 40px;\n  }\n  .sidebar__icon{\n    position: absolute;\n    right: 12px;\n    top: 22px;\n    cursor: pointer;\n  }\n}\n</style>\n```", "```js\n<script setup>\nimport { ref, onBeforeMount } from 'vue';\nimport TheButton from '../atoms/TheButton.vue'\nimport IconLeftArrow from '../icons/IconLeftArrow.vue'\nimport IconRightArrow from '../icons/IconRightArrow.vue'\nconst currentTime = ref(new Date().toLocaleTimeString());\nconst closed = ref(false);\nconst toggleSidebar = () => {\n  closed.value = !closed.value;\n  window.localStorage.setItem(\"sidebar\", closed.value);\n}\n...\nonBeforeMount( () => {\n  const sidebarState = window.localStorage.getItem(\"sidebar\");\n  closed.value = sidebarState === \"true\";\n});\n</script>\n```"]