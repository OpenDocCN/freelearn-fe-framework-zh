["```js\n    ssh root@THE_DROPLET_IP \n    ```", "```js\n    cd ~ \n    curl -sL https://deb.nodesource.com/setup_19.x -o nodesource_setup.sh \n    ```", "```js\n    sudo bash nodesource_setup.sh \n    ```", "```js\n    sudo apt install nodejs -y \n    ```", "```js\n    node -v \n    v19.9.0 \n    npm -v \n    9.6.3 \n    ```", "```js\n    vi /root/.ssh/id_rsa.pub \n    ```", "```js\n    git clone git@github.com:FoggDev/production.git \n    ```", "```js\n    cd production \n    npm install \n    ```", "```js\n    npm start \n    ```", "```js\n    npm run start:production \n    ```", "```js\nnpm install -g pm2 \n```", "```js\nsudo apt-get update \nsudo apt-get install nginx \n```", "```js\n    sudo ufw app list\n    Available applications:\n    Nginx Full\n    Nginx HTTP\n    Nginx HTTPS\n    OpenSSH \n    ```", "```js\n    sudo ufw allow 'Nginx HTTP'\n    Rules updated\n    Rules updated (v6) \n    ```", "```js\n    Start server: sudo systemctl start nginx\n    Stop server: sudo systemctl stop nginx\n    Restart server: sudo systemctl restart nginx \n    ```", "```js\nsudo vi /etc/nginx/sites-available/default \n```", "```js\n    location / {\n      proxy_pass http://localhost:3000;\n      proxy_http_version 1.1;\n      proxy_set_header Upgrade $http_upgrade;\n      proxy_set_header Connection 'upgrade'; \n      proxy_set_header Host $host; \n      proxy_cache_bypass $http_upgrade;\n     } \n    ```", "```js\n    sudo nginx -t \n    ```", "```js\n    sudo systemctl restart nginx \n    ```", "```js\n    ssh-keygen -t rsa\n    # Then save the key as /root/.ssh/id_rsa_droplet with no password.\n    # After go to .ssh directory\n    cd /root/.ssh \n    ```", "```js\n    cat id_rsa_droplet.pub >> authorized_keys \n    ```", "```js\n    # In your local machine do:\n    scp root@YOUR_DROPLET_IP:/root/.ssh/id_rsa_droplet ~/.ssh/\n    cd .ssh\n    ssh-add id_rsa_droplet\n    ssh -v root@YOUR_DROPLET_IP \n    ```", "```js\n    version: 2.1\n    jobs:\n    build:\n    working_directory: ~/tmp\n    docker:\n      - image: cimg/node:14.16.1\n    steps:\n      - checkout\n      - run: npm install\n      - run: npm run lint\n      - run: npm test\n      - run: ssh -o StrictHostKeyChecking=no $DROPLET_USER@$DROPLET_IP 'cd production; git checkout master; git pull; npm install; npm run start:production;'\n     workflows:\n     build-deploy:\n     jobs:\n      - build:\n     filters:\n     branches:\n     only: master \n    ```", "```js\n     version: 2.1 \n    ```", "```js\n     jobs:\n     build:\n     working_directory: ~/tmp \n    ```", "```js\n     docker:\n     - image: cimg/node:18.12.1 \n    ```", "```js\n     steps:\n     - checkout\n     - run: npm install\n     - run: npm run lint\n     - run: npm test\n     - run: ssh -o StrictHostKeyChecking=no $DROPLET_USER@$DROPLET_IP 'cd production; git checkout master; git pull; npm install; npm run start:production;' \n    ```"]