- en: Growing Our Application Using Firebase
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Firebase扩展我们的应用程序
- en: In this chapter, we will take a look at how Firebase provides cloud messaging
    to engage our users. We will add a Firebase cloud messaging feature to our application.
    We will cover Google analytics, which provides a good dashboard to analyze our
    application and take action accordingly, as this helps to improve our application
    further. Finally, we will discuss Google ads, which helps to monetize our application.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨Firebase如何提供云消息以吸引我们的用户。我们将向我们的应用程序添加Firebase云消息功能。我们将介绍Google分析，它提供了一个良好的仪表板来分析我们的应用程序并相应地采取行动，因为这有助于进一步改进我们的应用程序。最后，我们将讨论Google广告，它有助于使我们的应用程序货币化。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Introduction to Firebase cloud messaging
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Firebase云消息简介
- en: Adding FCM to our application
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将FCM添加到我们的应用程序
- en: Google data analytics
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google数据分析
- en: Learning about Google Ads
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解Google广告
- en: Introduction to Firebase cloud messaging
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Firebase云消息简介
- en: '**Firebase cloud messaging** (**FCM**) is a cross-platform service used to
    deliver messages reliably across different platforms. It uses the push methodology
    to send messages, and we can send up to 4 KB of data to the client. It supports
    many use cases, such as to engage users with promotional messages and send a message
    when the user is in the background.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**Firebase云消息** (**FCM**) 是一个跨平台服务，用于在不同平台之间可靠地传递消息。它使用推送方法发送消息，我们可以向客户端发送多达4
    KB的数据。它支持许多用例，例如通过促销消息与用户互动，并在用户处于后台时发送消息。'
- en: 'It has the following two main modules:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 它有两个主要模块：
- en: '**Trusted server**: This server is used to send messages to clients and can
    be a Firebase console or a server SDK implementation.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**受信任的服务器**：此服务器用于向客户端发送消息，可以是Firebase控制台或服务器SDK实现。'
- en: '**Client application**: This includes client applications in the web, Android,
    or iOS. This receives messages from the trusted server.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户端应用程序**：这包括Web、Android或iOS中的客户端应用程序。它从受信任的服务器接收消息。'
- en: Adding FCM to our application
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将FCM添加到我们的应用程序
- en: 'In this section, we will configure FCM in our application. We will perform
    the following steps to configure FCM:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将配置我们的应用程序中的FCM。我们将执行以下步骤来配置FCM：
- en: '**Creating a** **manifest.json** **file**: Our first step will be to create
    a `manifest.json` file within the `src` folder. This file contains `gcm_sender_id`,
    which authorizes a client to a trusted FCM server and enables FCM to send messages
    to our application. For a desktop browser, the client ID—`103953800507`—remains
    fixed for a web application, so you don''t need to change it.'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**创建一个** **manifest.json** **文件**：我们的第一步是在`src`文件夹内创建一个`manifest.json`文件。此文件包含`gcm_sender_id`，它授权客户端访问受信任的FCM服务器，并使FCM能够向我们的应用程序发送消息。对于桌面浏览器，客户端ID——`103953800507`——对于Web应用程序是固定的，因此您不需要更改它。'
- en: The web manifest file is a simple JSON file, in which we can specify the configuration
    for our application, such as its name, display, and orientation.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 网页清单文件是一个简单的JSON文件，在其中我们可以指定应用程序的配置，例如其名称、显示和方向。
- en: 'Here''s the code for `manifest.json`:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这是`manifest.json`的代码：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Configuring** **manifest.json** **in** **index.html**: Once we create the
    manifest file, we include the file reference in `index.html`.'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**在** **index.html** **中配置** **manifest.json**：一旦我们创建了manifest文件，我们就将文件引用包含在`index.html`中。'
- en: 'Then we include the modified `index.html`:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们包含修改后的`index.html`：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Creating a service worker**: After we create a manifest file, we create a
    Firebase service worker to process incoming push messages from the trusted server
    and to register our Firebase app with a messaging sender `ID`, which we can get
    from the Firebase portal by navigating to Project Overview > Project settings
    > CLOUD MESSAGING.'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**创建服务工作者**：在我们创建manifest文件之后，我们创建一个Firebase服务工作者来处理来自受信任服务器的传入推送消息，并将我们的Firebase应用程序与消息发送者`ID`注册，我们可以通过导航到项目概览
    > 项目设置 > 云消息获取此`ID`。'
- en: A service worker is a type of web worker that runs in the background and helps
    in push in notifications.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 服务工作者是一种在后台运行的Web工作者，它有助于推送通知。
- en: 'Here''s the `firebase-messaging-sw.js` file as of now:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在的`firebase-messaging-sw.js`文件如下：
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Referring to the manifest and service worker in** **angular-cli.json**: Next,
    we mention the service worker and manifest file''s reference in `angular-cli.json`;
    the following is the modified `angular-cli.json`:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**在** **angular-cli.json** **中引用manifest和service worker**：接下来，我们在`angular-cli.json`中提及服务工作者和manifest文件的引用；以下是被修改的`angular-cli.json`：'
- en: '[PRE3]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**Creating FCM Service**: This service class is used to receive the client
    token and insert the token to the Firebase database. It is also used to register
    for token refresh when a token expires. The method steps for creating this service
    class are as follows:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**创建FCM服务**：此服务类用于接收客户端令牌并将令牌插入Firebase数据库。它还用于在令牌过期时注册令牌刷新。创建此服务类的步骤如下：'
- en: The first method step is to get user permission for notifications by an alert
    dialog, and once the user clicks on the Allow button,  we call `getToken()` from
    the Firebase messaging object to get the token. We send this token to the Firebase
    database so that we can use this token in the future to send promotional messages
    to all of our users. We also create an `onTokenRefresh()` method to refresh our
    token once it expires.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个步骤是通过警报对话框获取用户通知权限，一旦用户点击**允许**按钮，我们就从Firebase消息对象调用`getToken()`来获取令牌。我们将此令牌发送到Firebase数据库，以便我们可以在将来使用此令牌向所有用户发送促销消息。我们还创建了一个`onTokenRefresh()`方法，以便在令牌过期时刷新我们的令牌。
- en: The second method step is to register for push notification messages by calling `onMessage()` when
    the application is in the foreground.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个步骤是在应用处于前台时调用`onMessage()`来注册推送通知消息。
- en: 'Here''s the `fcm-messaging.service.ts` file as of now:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在的`fcm-messaging.service.ts`文件如下：
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**Registering Firebase messaging for update in app component**: Once we create
    service methods, we call user permission, token, and register for a message update
    in our app component as shown in the following `app.component.ts`:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**在应用组件中注册Firebase消息以更新**：一旦我们创建了服务方法，我们就调用用户权限、令牌并在我们的应用组件中注册消息更新，如下面的`app.component.ts`所示：'
- en: '[PRE5]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Finally, our application is now ready to send push notification messages. You
    can send messages either by a curl command or Postman request.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们的应用程序现在已准备好发送推送通知消息。您可以通过curl命令或Postman请求发送消息。
- en: 'To send a push notification from Postman, we require the following details:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 要从Postman发送推送通知，我们需要以下详细信息：
- en: '**URL**: This is an FCM endpoint registered with our trusted server. Its unique
    URL is [https://fcm.googleapis.com/fcm/send](https://fcm.googleapis.com/fcm/send).'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**URL**：这是一个已在我们可信服务器上注册的FCM端点。其唯一的URL是[https://fcm.googleapis.com/fcm/send](https://fcm.googleapis.com/fcm/send)。'
- en: '**Content type**: This is a type of content sent to the server and in our case
    is JSON type as `application/json`.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内容类型**：这是发送到服务器的内容类型，在我们的案例中是JSON类型，作为`application/json`。'
- en: '**Authorization**: This key is the server key for our Firebase project. You
    can find this key in our Firebase portal by navigating to Project Overview|Project
    settings|CLOUD MESSAGING|Server Key.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**授权**：这是我们的Firebase项目的服务器密钥。您可以通过导航到Firebase门户中的项目概览|项目设置|CLOUD MESSAGING|服务器密钥来找到此密钥。'
- en: '**Body**: This contains the title, body, action, and the target sender `ID`.
    The sender token ID is saved in our Firebase database.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**正文**：这包含标题、正文、操作和目标发送者`ID`。发送者令牌ID已保存在我们的Firebase数据库中。'
- en: 'This is an example of a Postman request for a Headers tab:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个Postman请求的Headers标签的示例：
- en: '![](img/00069.gif)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00069.gif)'
- en: 'The Postman for the Body tab will be as follows:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Postman的Body标签将如下所示：
- en: '![](img/00070.gif)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00070.gif)'
- en: 'The notification that appears on the bottom-right corner of your screen should
    look as follows:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 出现在您屏幕右下角的提示应该如下所示：
- en: '![](img/00071.jpeg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00071.jpeg)'
- en: Google data analytics
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Google数据分析
- en: Google analytics is a free service offered by Google that provides statistics
    about the visitors and traffic to our website. It provides a more valuable input
    about the visitors and geographies. It also provides input about the behavior
    of the visitor when they use our website. The following are the steps for registering
    Google analytics to your application.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: Google分析是Google提供的一项免费服务，它提供了关于我们网站访问者和流量的统计数据。它提供了关于访问者和地理的更有价值的信息。它还提供了关于访问者在使用我们的网站时的行为信息。以下是将Google分析注册到您的应用程序的步骤。
- en: '**Creating a Google analytics account**: We can create a Google analytics account
    with an existing Gmail account or a new Gmail account by performing the following
    steps:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**创建Google分析账户**：我们可以通过执行以下步骤使用现有的Gmail账户或新Gmail账户创建Google分析账户：'
- en: Open the browser and paste in the analytics URL ([https://analytics.google.com/analytics](https://analytics.google.com/analytics))
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开浏览器并粘贴分析URL ([https://analytics.google.com/analytics](https://analytics.google.com/analytics))
- en: Click on the SIGNUP button
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**注册**按钮
- en: Fill out your live application URL and form information
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写您的实时应用程序URL和表单信息
- en: Click on the Get Tracking ID button
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**获取跟踪ID**按钮
- en: '**Integrating tracking code into our application**: After a successful signup,
    we can integrate the generated global site tag into our application. Take a look
    at the following sample global site code in `index.html`:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**将跟踪代码集成到我们的应用程序中**：在成功注册后，我们可以将生成的全局站点标签集成到我们的应用程序中。请查看以下 `index.html` 中的示例全局站点代码：'
- en: '[PRE6]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'After a successful signup, our Google analytics dashboard should look like
    this:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在成功注册后，我们的 Google 分析控制台应该看起来像这样：
- en: '![](img/00072.jpeg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00072.jpeg)'
- en: Learning about Google adsense
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解 Google Adsense
- en: Google adsense provides a platform to monetize our web application. Firebase
    ads are not supported for this web application, so we will work with Google ads
    to monetize our application. In this section, we will take a look at how to add
    ads to our application.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: Google Adsense 为我们的网络应用程序提供了一个盈利平台。Firebase 广告不支持此网络应用程序，因此我们将与 Google Adsense
    合作以使我们的应用程序盈利。在本节中，我们将探讨如何将广告添加到我们的应用程序中。
- en: '**Creating an adsense account**: We can create an adsense account with the
    existing Gmail account or create a new Gmail account by performing the following
    steps:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**创建 Adsense 账户**：我们可以使用现有的 Gmail 账户创建 Adsense 账户，或者通过以下步骤创建一个新的 Gmail 账户：'
- en: Open the browser and paste in the adsense URL ([https://www.google.com/adsense](http://adsense) )
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开浏览器并粘贴 Adsense URL ([https://www.google.com/adsense](http://adsense) )
- en: Click on the SIGNUP button
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**注册**按钮
- en: Fill out your live application URL and address details
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写您的实时应用程序 URL 和地址详情
- en: Click on the SUBMIT button
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**提交**按钮
- en: '**Adding the adsense script to our application**: When you click on the Submit
    button, Google ads will provide steps to register your site with ads. It gives
    code to paste into the `index.html` of our application. Take a look at the following
    sample script to paste into the `index.html`:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**将 Adsense 脚本添加到我们的应用程序中**：当您点击提交按钮时，Google Adsense 将提供步骤以将您的网站注册为广告。它提供了代码，需要粘贴到我们的应用程序的
    `index.html` 中。请查看以下示例脚本，以粘贴到 `index.html` 中：'
- en: '[PRE7]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'After a successful signup, our Google adsense dashboard look as follows:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在成功注册后，我们的 Google Adsense 控制台看起来如下：
- en: '![](img/00073.jpeg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00073.jpeg)'
- en: Summary
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we covered Firebase cloud messaging. We integrated FCM into
    our application, which helps to engage our users. We also covered Google analytics
    and saw how to enable analytics in our application. This gives a good perspective
    about the application's usage. Finally, we discussed Google adsense, which helps
    to monetize our application.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了 Firebase 云消息传递。我们将 FCM 集成到我们的应用程序中，这有助于吸引我们的用户。我们还介绍了 Google 分析，并展示了如何在我们的应用程序中启用分析。这为我们提供了关于应用程序使用的良好视角。最后，我们讨论了
    Google Adsense，它有助于使我们的应用程序盈利。
- en: In the next chapter, we will discuss the **Progressive Web App** (**PWA**) and
    add a few features to make our application PWA-compliant.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论**渐进式网络应用**（**PWA**）并添加一些功能以使我们的应用程序符合 PWA 规范。
