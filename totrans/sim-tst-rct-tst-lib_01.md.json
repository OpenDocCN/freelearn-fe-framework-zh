["```js\n<input\n  type=\"text\"\n  id=\"firstname\"\n  placeholder=\"first name...\"\n>\n```", "```js\nscreen.getByPlaceholderText(/first name/i) \n```", "```js\n<label for=\"firstname\">First name:</label>\n<input\n  type=\"text\"\n  id=\"firstname\"\n  name=\"firstname\"\n  placeholder=\"first name...\"\n>\n```", "```js\nscreen.getByRole('textbox', {\n  name: /first name:/i\n})\n```", "```js\nconst div = document.createElement('div');\nReactDOM.render(<SomeComponent />, div);\ndocument.body.appendChild(div);\nscreen.getByText('Login');\n```", "```js\nrender(<SomeComponent />);\n```", "```js\nnpm install --save-dev jest\n```", "```js\ntest('should return the total number of characters', () => {\n  function totalCharsInName(name) {\n    return name.length;\n  }\n  expect(totalCharsInName('Steve')).toEqual(5);\n});\n```", "```js\nimport React, { Component } from 'react';\nexport default class Profile extends Component {\n  state = { showDetails: true };\n  setDetails = () => {\n    this.setState((prevState) => ({ showDetails: !prevState.      showDetails }));\n  };\n```", "```js\nrender() {\n    return (\n      <div className=\"card\" style={{ width: \"18rem\" }}>\n        <img\n          className=\"card-img-top\"\n          src=\"img/286x180?font=lobster\"\n          alt=\"Card cap\"\n        />\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{this.props.name}</h5>\n          <p className=\"card-subtitle mb-2 text-muted\">{this.             props.title}</p>\n```", "```js\nbutton onClick={this.setDetails} className=\"btn btn-primary\">\n            {this.state.showDetails ? \"Hide Details\" : \"Display                  Details\"}\n          </button>\n          {this.state.showDetails ? (\n            <p className=\"card-text details\">{this.props.                  details}</p>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n```", "```js\ntest('Profile, given click \"hide details\" button, shows \"display details\" button', () => {\n  const div = document.createElement('div');\n  ReactDOM.render(\n    <Profile\n      name='John Doe'\n      title='Team Lead'\n      details='This is my 5th year and I love helping others'\n    />,\n    div\n  );\ndocument.body.appendChild(div);\n```", "```js\n  const hideDetailsBtn = screen.getByRole('button', { name: /     hide details/i });\n  fireEvent.click(hideDetailsBtn);\n  const displayDetailsBtn = screen.getByRole('button', {\n    name: /display details/i,\n  });\n```", "```js\n  expect(displayDetailsBtn).toBeTruthy();\n  // Test cleanup\n    div.remove();\n});\n```", "```js\ntest(Profile, given click \"hide details\" button, shows \"display   details\" button', () => {}\nit(Profile, given click \"hide details\" button, shows \"display   details\" button', () => {}\n```", "```js\ndescribe(<Profile />, () => {\n test(given click \"hide details\" button, shows \"display   details\" button', () => {}\n test('another test for the profile component', () => {}\n}\n```", "```js\nexpect(displayDetailsBtn).toBeTruthy();\n```", "```js\n    npm install –-save-dev @testing-library/jest-dom\n    ```", "```js\n    import '@testing-library/jest-dom/extend-expect';\n    ```", "```js\nconst displayDetailsBtn = screen.getByRole('button', {\n    name: /display details/i,\n  });  \nexpect(displayDetailsBtn).toBeTruthy();\n```", "```js\nexpect(displayDetailsBtn).toBeInTheDocument();\n```", "```js\n    const removedHideDetailsBtn = screen.queryByRole('button',       {\n    name: /hide details/i,\n  });\n  expect(removedHideDetailsBtn).toBeFalsy();\n```", "```js\n  expect(removedHideDetailsBtn).not.toBeInTheDocument();\n```", "```js\ntest('Login, given credentials, returns enabled submit button', () => {\n  const div = document.createElement('div');\n  ReactDOM.render(<Login />, div);\n  document.body.appendChild(div);\n  const username = screen.getByRole('textbox', { name: /     username/i });\n  const password = screen.getByLabelText(/password/i);\n  const rememberMe = screen.getByRole('checkbox');\n  const loginBtn = screen.getByRole('button', { name: /submit/i });\n```", "```js\n  const fakeData = {\n    username: 'test user',\n    password: '123password',\n  };\n  fireEvent.change(username, { target: { value: fakeData.     username } });\n  fireEvent.change(password, { target: { value: fakeData.     password } });\n  fireEvent.click(rememberMe);\n```", "```js\n  expect(loginBtn.hasAttribute('disabled')).toBe(false);\n```", "```js\n  expect(loginBtn).not.toBeDisabled()\n```", "```js\n  expect(screen.getByTestId('form')).toHaveFormValues({\n    username: fakeData.username,\n    password: fakeData.password,\n    rememberMe: true,\n  });\n```", "```js\nexpect(loginBtn.hasAttribute('disable')).toBe(true);\nfireEvent.change(username, { target: { value: fakeData.username } });\nfireEvent.change(password, { target: { value: fakeData.password } });\n```", "```js\nexpect(loginBtn).not.toBeDisabled();\nfireEvent.change(username, { target: { value: fakeData.username } });\nfireEvent.change(password, { target: { value: fakeData.password } });\nfireEvent.click(rememberMe);\n```", "```js\nimport React, { Component } from 'react';\nexport default class Profile extends Component {\n  state = { showDetails: true };\n  setDetails = () => {\n    this.setState((prevState) => ({ showDetails: !prevState.      showDetails }));\n  };\n```", "```js\nrender() {\n    return (\n      <div className=\"card\" style={{ width: \"18rem\" }}>\n        <img\n          className=\"card-img-top\"\n          src=\"img/286x180?font=lobster\"\n          alt=\"Card cap\"\n        />\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{this.props.name}</h5>\n          <p className=\"card-subtitle mb-2 text-muted\">{this.             props.title}</p>\n```", "```js\nbutton onClick={this.setDetails} className=\"btn btn-primary\">\n            {this.state.showDetails ? \"Hide Details\" : \"Display                 Details\"}\n          </button>\n          {this.state.showDetails ? (\n            <p className=\"card-text details\">{this.props.                details}</p>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n```", "```js\nimport React from 'react';\nimport { mount } from 'enzyme';\nimport Profile from './Profile';\ntest('setDetails sets the state value', () => {\n const wrapper = mount(\n   <Profile\n     name=\"John Doe\"\n     title=\"Team Lead\"\n     details=\"This is my 5th year and I love helping others\"\n   />\n  );\n```", "```js\n expect(wrapper.state('showDetails')).toEqual(true);\n expect(wrapper.find('.card-text.details').props().children).    toEqual(\n  'This is my 5th year and I love helping others'\n );\nwrapper.instance().setDetails();\n```", "```js\n expect(wrapper.state('showDetails')).toEqual(false);\n expect(wrapper.update().find('.card-text.details').exists()).    toBeFalsy();\n});\n```"]