["```js\n$ create-react-app todoifier\n```", "```js\n$ yarn start\n```", "```js\nimport React from 'react';\nimport './App.css';\n\nconst App = () => (\n <div className=\"App\">\n   <h2>Todoifier</h2>\n </div>\n);\n\nexport default App;\n```", "```js\nimport React from 'react';\nimport './Todo.css';\n\nconst Todo = () => <div className=\"Todo\">I am an item</div>;\n\nexport default Todo;\n```", "```js\n.Todo {\n  border: 2px solid black;\n  text-align: center;\n  background: #f5f5f5;\n  color: #333;\n  margin: 20px;\n  padding: 20px;\n}\n```", "```js\nimport Todo from './Todo';\n```", "```js\nconst App = () => (\n  <div className=\"App\">\n    <h2>Todoifier</h2>\n    <br />\n    <Todo />\n  </div>\n);\n```", "```js\nconst App = () => (\n  <div className=\"App\">\n    <h2>Todoifier</h2>\n    <br />\n    <Todo />\n    <Todo />\n  </div>\n);\n```", "```js\nconst Todo = props => {\n```", "```js\nfunction Todo(props) {\n```", "```js\nconst Todo = props => <div className=\"Todo\">{props.description}</div>;\n```", "```js\nconst App = () => (\n  <div className=\"App\">\n    <h2>Todoifier</h2>\n    <br />\n    <Todo description=\"Do the thing\" />\n    <Todo description=\"Do another thing\" />\n  </div>\n);\n```", "```js\nimport React, { Component } from 'react';\n```", "```js\nclass Todo extends Component { /* ... */ }\n```", "```js\nfunctionName(argument1, argument2) { /* ... */ }\n```", "```js\nclass Todo extends Component {\n  render() {\n    return <div className=\"Todo\">{this.props.description}</div>;\n  }\n}\n```", "```js\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: props.description,\n      done: false\n    };\n  }\n```", "```js\n  render() {\n    return <div className=\"Todo\">{this.state.description}</div>;\n  }\n```", "```js\nmarkAsDone() {\n  this.setState({ done: true });\n}\n```", "```js\n  render() {\n    return (\n      <div className={'Todo' + (this.state.done ? ' Done' : '')}>\n        {this.state.description}\n        <br />\n        <button onClick={this.markAsDone}>Mark as Done</button>\n      </div>\n    );\n  }\n```", "```js\nthis.markAsDone = this.markAsDone.bind(this);\n```", "```js\n  cssClasses() {\n    let classes = ['Todo'];\n    if (this.state.done) {\n      classes = [...classes, 'Done'];\n    }\n    return classes.join(' ');\n  }\n```", "```js\n  render() {\n    return (\n      <div className={this.cssClasses()}>\n// ...\n```", "```js\n.Done {\n  background: #f58888;\n}\n```", "```js\nimport React, { Component } from 'react';\nimport Todo from './Todo';\nimport './TodoList.css';\n\nclass TodoList extends Component {\n\n}\n\nexport default TodoList;\n```", "```js\nrender() {\n  return (\n    <div className=\"TodoList\">\n      <Todo description=\"Item #1\" />\n      <Todo description=\"Item #2\" />\n    </div>\n  );\n}\n```", "```js\n.TodoList {\n margin: 20px;\n padding: 20px;\n border: 2px solid #00D8FF;\n background: #DDEEFF;\n}\n```", "```js\nimport TodoList from './TodoList';\n```", "```js\nconst App = () => (\n  <div className=\"App\">\n    <h2>Todoifier</h2>\n    <br />\n    <TodoList />\n  </div>\n);\n```", "```js\nconstructor(props) {\n  super(props);\n  this.state = { items: ['Item #1', 'Item #2'] };\n}\n```", "```js\nrenderItems() {\n  return this.state.items.map(description => (\n    <Todo key={description} description={description} />\n  ));\n}\n```", "```js\nrender() {\n  return <div className=\"TodoList\">{this.renderItems()}</div>;\n}\n```", "```js\nconstructor(props) {\n  super(props);\n  this.state = { items: ['Item #1', 'Item #2', 'Item #3'] };\n}\n```", "```js\n .NewTodo {\n  margin: 20px;\n  padding: 20px;\n  border: 2px solid #00FFD8;\n  background: #DDFFEE;\n  text-align: center;\n }\n```", "```js\nimport React, { Component } from 'react';\nimport './NewTodo.css';\n\nclass NewTodo extends Component {\n}\n\nexport default NewTodo;\n```", "```js\n  constructor(props) {\n    super(props);\n    this.state = { item: '' };\n    this.handleUpdate = this.handleUpdate.bind(this);\n  }\n```", "```js\n  handleUpdate(event) {\n    this.setState({ item: event.target.value });\n  }\n```", "```js\nrender() {\n  return (\n    <div className=\"NewTodo\">\n      <input type=\"text\" onChange={this.handleUpdate} />\n      &nbsp;&nbsp;\n      <button>Add</button>\n    </div>\n  );\n}\n```", "```js\nimport NewTodo from './NewTodo';\n```", "```js\nrender() {\n  return (\n    <div className=\"TodoList\">\n      <NewTodo />\n      {this.renderItems()}\n    </div>\n  );\n}\n```", "```js\nthis.addTodo = this.addTodo.bind(this);\n```", "```js\naddTodo(item) {\n  this.setState({ items: [...this.state.items, item] });\n}\n```", "```js\nrender() {\n  return (\n    <div className=\"TodoList\">\n      <NewTodo addTodo={this.addTodo} />\n      {this.renderItems()}\n    </div>\n  );\n}\n```", "```js\nthis.addTodo = this.addTodo.bind(this);\n```", "```js\naddTodo() {\n  this.props.addTodo(this.state.item);\n  this.setState({ item: '' });\n}\n```", "```js\n\n  render() {\n    return (\n      <div className=\"NewTodo\">\n        <input\n          type=\"text\"\n          onChange={this.handleUpdate}\n          value={this.state.item}\n        />\n        &nbsp;&nbsp;\n        <button onClick={this.addTodo}>Add</button>\n      </div>\n    );\n  }\n```", "```js\n  constructor(props) {\n    super(props);\n    this.state = { items: ['Item #1', 'Item #2', 'Item #3'] };\n\n    this.addTodo = this.addTodo.bind(this);\n    this.removeTodo = this.removeTodo.bind(this);\n  }\n```", "```js\n  removeTodo(removeItem) {\n    const filteredItems = this.state.items.filter(description => {\n      return description !== removeItem;\n    });\n    this.setState({ items: filteredItems });\n  }\n```", "```js\n  renderItems() {\n    return this.state.items.map(description => (\n      <Todo\n        key={description}\n        description={description}\n        removeTodo={this.removeTodo}\n      />\n    ));\n  }\n```", "```js\nthis.removeTodo = this.removeTodo.bind(this);\n```", "```js\nremoveTodo() {\n  this.props.removeTodo(this.state.description);\n}\n```", "```js\nrender() {\n return (\n <div className={this.cssClasses()}>\n {this.state.description}\n <br />\n <button onClick={this.markAsDone}>Mark as Done</button>\n <button onClick={this.removeTodo}>Remove Me</button>\n </div>\n );\n}\n```"]