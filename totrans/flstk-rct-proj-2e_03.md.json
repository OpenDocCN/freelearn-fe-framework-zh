["```js\n| mern-simplesetup/\n | -- client/\n  | --- HelloWorld.js\n  | --- main.js\n | -- server/\n  | --- devBundle.js\n  | --- server.js\n | -- .babelrc\n | -- nodemon.json\n | -- package.json\n | -- template.js\n | -- webpack.config.client.js\n | -- webpack.config.client.production.js\n | -- webpack.config.server.js\n```", "```js\n\"dependencies\": {\n    \"@hot-loader/react-dom\": \"16.13.0\",\n    \"express\": \"4.17.1\",\n    \"mongodb\": \"3.5.5\",\n    \"react\": \"16.13.1\",\n    \"react-dom\": \"16.13.1\",\n    \"react-hot-loader\": \"4.12.20\"\n  }\n```", "```js\n\"devDependencies\": {\n    \"@babel/core\": \"7.9.0\",\n    \"@babel/preset-env\": \"7.9.0\",\n    \"@babel/preset-react\": \"7.9.4\",\n    \"babel-loader\": \"8.1.0\",\n    \"nodemon\": \"2.0.2\",\n    \"webpack\": \"4.42.1\",\n    \"webpack-cli\": \"3.3.11\",\n    \"webpack-dev-middleware\": \"3.7.2\",\n    \"webpack-hot-middleware\": \"2.25.0\",\n    \"webpack-node-externals\": \"1.7.2\"\n  }\n```", "```js\n{\n  \"presets\": [\n   [\"@babel/preset-env\",\n    {\n     \"targets\": {\n      \"node\": \"current\"\n     }\n    }\n   ],\n   \"@babel/preset-react\"\n  ],\n  \"plugins\": [\n   \"react-hot-loader/babel\"\n  ]\n}\n```", "```js\nconst path = require('path')\nconst webpack = require('webpack')\nconst CURRENT_WORKING_DIR = process.cwd()\n\nconst config = { ... }\n\nmodule.exports = config\n```", "```js\nconst config = {\n   name: \"browser\",\n   mode: \"development\",\n   devtool: 'eval-source-map',\n   entry: [\n     'webpack-hot-middleware/client?reload=true',\n     path.join(CURRENT_WORKING_DIR, 'client/main.js')\n   ],\n   output: {\n     path: path.join(CURRENT_WORKING_DIR , '/dist'),\n     filename: 'bundle.js',\n     publicPath: '/dist/'\n   },\n   module: {\n     rules: [\n       {\n         test: /\\.jsx?$/,\n         exclude: /node_modules/,\n         use: ['babel-loader']\n       }\n     ]\n   }, \n   plugins: [\n     new webpack.HotModuleReplacementPlugin(),\n     new webpack.NoEmitOnErrorsPlugin()\n   ],\n   resolve: {\n     alias: {\n       'react-dom': '@hot-loader/react-dom'\n     }\n   }\n}\n```", "```js\nconst nodeExternals = require('webpack-node-externals')\nconst config = {\n  name: \"server\",\n  entry: [ path.join(CURRENT_WORKING_DIR , './server/server.js') ],\n  target: \"node\",\n  output: {\n    path: path.join(CURRENT_WORKING_DIR , '/dist/'),\n    filename: \"server.generated.js\",\n    publicPath: '/dist/',\n    libraryTarget: \"commonjs2\"\n  },\n  externals: [nodeExternals()],\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        use: [ 'babel-loader' ]\n      }\n    ]\n  }\n}\n```", "```js\nconst config = {\n  mode: \"production\",\n  entry: [\n    path.join(CURRENT_WORKING_DIR, 'client/main.js')\n  ],\n  output: {\n    path: path.join(CURRENT_WORKING_DIR , '/dist'),\n    filename: 'bundle.js',\n    publicPath: \"/dist/\"\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.jsx?$/,\n        exclude: /node_modules/,\n        use: [\n          'babel-loader'\n        ]\n      }\n    ]\n  }\n}\n```", "```js\n{\n  \"verbose\": false,\n  \"watch\": [ \"./server\" ],\n  \"exec\": \"webpack --mode=development --config \n      webpack.config.server.js \n        && node ./dist/server.generated.js\"\n}\n```", "```js\nexport default () => {\n  return `<!doctype html>\n   <html lang=\"en\">\n    <head>\n     <meta charset=\"utf-8\">\n     <title>MERN Kickstart</title>\n    </head>\n    <body>\n     <div id=\"root\"></div>\n     <script type=\"text/javascript\" src=\"img/bundle.js\"> \n    </script>\n    </body>\n   </html>` \n}\n```", "```js\nimport React from 'react'\nimport { render } from 'react-dom'\nimport HelloWorld from './HelloWorld'\n\nrender(<HelloWorld/>, document.getElementById('root'))\n```", "```js\nimport React from 'react'\nimport { hot } from 'react-hot-loader'\n\nconst HelloWorld = () => {\n  return (\n    <div>\n     <h1>Hello World!</h1>\n    </div>\n   )\n}\n\nexport default hot(module)(HelloWorld) \n```", "```js\nimport express from 'express'\n\nconst app = express()\n```", "```js\nimport webpack from 'webpack'\nimport webpackMiddleware from 'webpack-dev-middleware'\nimport webpackHotMiddleware from 'webpack-hot-middleware'\nimport webpackConfig from './../webpack.config.client.js'\n\nconst compile = (app) => {\n if(process.env.NODE_ENV == \"development\"){\n  const compiler = webpack(webpackConfig)\n  const middleware = webpackMiddleware(compiler, {\n   publicPath: webpackConfig.output.publicPath\n  })\n  app.use(middleware)\n  app.use(webpackHotMiddleware(compiler))\n }\n}\n\nexport default {\n compile\n}\n```", "```js\nimport devBundle from './devBundle'\nconst app = express()\ndevBundle.compile(app)\n\n```", "```js\nimport path from 'path'\nconst CURRENT_WORKING_DIR = process.cwd()\napp.use('/dist', express.static(path.join(CURRENT_WORKING_DIR, 'dist')))\n```", "```js\nimport template from './../template'\napp.get('/', (req, res) => {\n   res.status(200).send(template())\n})\n```", "```js\nlet port = process.env.PORT || 3000\napp.listen(port, function onStart(err) {\n if (err) {\n  console.log(err) \n }\n console.info('Server started on port %s.', port)\n})\n```", "```js\nimport { MongoClient } from 'mongodb'\nconst url = process.env.MONGODB_URI ||\n  'mongodb://localhost:27017/mernSimpleSetup'\nMongoClient.connect(url, (err, db)=>{\n  console.log(\"Connected successfully to mongodb server\")\n db.close()\n})\n```", "```js\n\"scripts\": {\n  \"development\": \"nodemon\",\n  \"build\": \"webpack --config webpack.config.client.production.js \n    && webpack --mode=production --config \n      webpack.config.server.js\",\n  \"start\": \"NODE_ENV=production node ./dist/server.generated.js\"\n} \n```"]