["```js\nconst theme = {\n  DARK: \"dark\",\n  LIGHT: \"light\",\n};\nexport const GlobalStore = () => {\n  const [selectedTheme, setSelectedTheme] = useState\n    (theme.LIGHT);\n  const [serverData, setServerData] = useState(null);\n  const [isLoadingData, setIsLoadingData] = useState\n    (false);\n  const toggleTheme = () => {\n    setSelectedTheme((currentTheme) =>\n      currentTheme === theme.LIGHT ? theme.DARK :\n        theme.LIGHT\n    );\n  };\n  const fetchData = (name = \"Daniel\") => {\n    setIsLoadingData(true);\n    fetch(`<insert_url_here>/${name}`)\n      .then((response) => response.json())\n      .then((responseData) => {\n        setServerData(responseData);\n      })\n .finally(() => {\n        setIsLoadingData(false);\n      })\n      .catch(() => setIsLoadingData(false));\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return {\n    selectedTheme,\n    toggleTheme,\n    serverData,\n    isLoadingData,\n    fetchData\n  };\n};\n```", "```js\nconst [selectedTheme, setSelectedTheme] = useState(theme.LIGHT);\nconst [secondaryTheme, setSecondaryTheme] = useState(theme.LIGHT);\n…\n  const toggleSecondaryTheme = () => {\n    setSecondaryTheme((currentTheme) =>\n      currentTheme === theme.LIGHT ? theme.DARK :\n        theme.LIGHT\n    );\n  };\n  const toggleTheme = () => {\n    setSelectedTheme((currentTheme) =>\n      currentTheme === theme.LIGHT ? theme.DARK :\n        theme.LIGHT\n    );\n  };\n```"]