["```js\n<base href=\"/\">\n```", "```js\n<nav class=\"navbar navbar-expand-lg navbar-light bg-color\"></nav>\n```", "```js\n<ul class=\"navbar-nav\"></ul>\n```", "```js\n<li class=\"nav-item\" *ngIf=\"authenticationService?.isAuthenticated()\"><a class=\"nav-link\" routerLink=\"/app-friends-userprofile\" routerLinkActive=\"active\">My Profile</a></li>\n```", "```js\nauthenticationService: AuthenticationService;\n\nconstructor(private authService: AuthenticationService) {\n   this.authenticationService = authService;\n}\n```", "```js\n<h1 class=\"title\">Friends - A Social App</h1>\n<div class=\"nav-container\">\n<nav class=\"navbar navbar-expand-lg navbar-light bg-color\">\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\"\n      *ngIf=\"authenticationService?.isAuthenticated()\"><a \n      class=\"nav-link\" routerLink=\"/app-friends-userprofile\" \n      routerLinkActive=\"active\">My Profile</a></li>\n      <li class=\"nav-item\" \n     *ngIf=\"authenticationService?.isAuthenticated()\">\n      <a class=\"nav-link\" routerLink=\"/app-friends-userfriends\" \n      routerLinkActive=\"active\">Friends</a></li>\n      <li class=\"nav-item\" ><a class=\"nav-link\" routerLink=\"/app-\n      friends-about\" routerLinkActive=\"active\">About</a></li>\n      <li class=\"nav-item\" active \n     *ngIf=\"!authenticationService?.isAuthenticated()\">\n      <a class=\"nav-link\" routerLink=\"/app-friends-login\" \n      routerLinkActive=\"active\">Login</a></li>\n    </ul>\n    <div class=\"form-container\">\n    <form class=\"form-inline my-2 my-lg-0\">\n      <input class=\"form-control mr-sm-2\" type=\"text\" \n      placeholder=\"Search friends...\" aria-label=\"Search\">\n      <button class=\"btn btn-success my-2 my-sm-0\" \n      type=\"submit\">Search</button>\n    </form>\n    </div>\n  </div>\n</nav>\n</div>\n<router-outlet></router-outlet>\n```", "```js\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-friends-page-not-found',\n  template: '<h2>Page not found</h2>'\n})\nexport class PageNotFoundComponent {}\n```", "```js\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-friends-about',\n  template: '<h2>Friends is a social app</h2>'\n})\nexport class AboutComponent {}\n```", "```js\nexport const ROUTES: Routes = [\n  {path: 'app-friends-about', component: AboutComponent, \n   pathMatch: 'full'},\n  {path: '**', redirectTo: 'app-friends-page-not-found'},\n];\n```", "```js\nimport {RouterModule, Routes} from '@angular/router';\nimport {NgModule} from '@angular/core';\nimport {PageNotFoundComponent} from './notfound/page-not-found.component';\nimport {AboutComponent} from './about/about.component';\n\nexport const ROUTES: Routes = [\n  {path: 'app-friends-about', component: AboutComponent,\n   pathMatch: 'full'},\n  {path: '**', redirectTo: 'app-friends-page-not-found'},\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(\n      ROUTES\n    )],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRouting {\n}\n```", "```js\n@NgModule({\n    declarations: [\n        AppComponent,\n        PageNotFoundComponent,\n        AboutComponent\n    ],\n    imports: [\n        ...\n        AuthenticationModule,\n        AppRouting\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n```", "```js\nexport const ROUTES: Routes = [\n   {path: 'app-friends-login', component: LoginComponent},\n   {path: 'app-friends-signup', component: SignupComponent}\n];\n```", "```js\nRouterModule.forChild( ROUTES )\n```", "```js\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport {SignupComponent} from './signup/signup.component';\n\nexport const ROUTES: Routes = [\n   {path: 'app-friends-login', component: LoginComponent},\n   {path: 'app-friends-signup', component: SignupComponent}\n];\n\n/**\n * Authentication Routing Module\n */\n@NgModule({\n   imports: [\n      RouterModule.forChild(ROUTES)\n   ],\n   exports: [\n      RouterModule\n   ]\n})\nexport class AuthenticationRouting {}\n```", "```js\nimport { NgModule } from '@angular/core';\nimport { AuthenticationRouting } from './authentication.routing';\n\n/**\n * Authentication Module\n */\n@NgModule({\n    imports: [\n        ...\n        AuthenticationRouting\n    ],\n    declarations: [\n        ...\n    ],\n    providers: [\n        ...\n    ]\n})\nexport class AuthenticationModule {\n}\n```", "```js\n<button routerLink=\"/app-friends-signup\" data-tag=\"signup-tag\" routerLinkActive=\"active\" class=\"btn btn-success\">\nSIGNUP\n</button>\n```", "```js\nconstructor(\n    ...\n    private router: Router,\n){}\n```", "```js\nprivate navigateToUserProfile() {\n  this.router.navigateByUrl('/app-friends-userprofile');\n}\n```", "```js\npublic isAuthenticated(): boolean {\n    let user = this.angularFireAuth.auth.currentUser;\n    return user ? true : false;\n}\n```", "```js\nimport {Injectable} from '@angular/core';\nimport {AngularFireAuth} from 'angularfire2/auth';\n\n/**\n * Authentication service\n *\n */\n@Injectable()\nexport class AuthenticationService {\n\n  /**\n   * Constructor\n   *\n   * @param {AngularFireAuth} angularFireAuth provides the  \n     functionality related to authentication\n   */\n  constructor(private angularFireAuth: AngularFireAuth) {\n  }\n\n  public signup(email: string, password: string): Promise<any> {\n    return \n    this.angularFireAuth.auth.createUserWithEmailAndPassword(email, \n    password);\n  }\n\n  public login(email: string, password: string): Promise<any> {\n    return \n    this.angularFireAuth.auth.signInWithEmailAndPassword(email, \n    password);\n  }\n\n  public resetPassword(email: string): Promise<any> {\n    return this.angularFireAuth.auth.sendPasswordResetEmail(email);\n  }\n\n  public isAuthenticated(): boolean {\n    const user = this.angularFireAuth.auth.currentUser;\n    return user ? true : false;\n  }\n\n  public signout() {\n    return this.angularFireAuth.auth.signOut();\n  }\n}\n```", "```js\nimport {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {AuthenticationService} from './authentication.service';\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n\n  constructor(private authService: AuthenticationService,\n              private router: Router) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: \n  RouterStateSnapshot): boolean {\n    const isLoggedIn: boolean = this.authService.isAuthenticated();\n    if (!isLoggedIn) {\n      this.router.navigateByUrl('/app-friends-login');\n    }\n    return isLoggedIn;\n  }\n}\n```", "```js\nimport {AuthenticationGuard} from '../services/authentication.guard';\n\n/**\n * User Module\n */\n@NgModule({\n    imports: [\n        ...\n    ],\n    declarations: [\n        ...\n    ],\n    providers: [\n        AuthenticationGuard\n    ]\n})\nexport class UserModule {\n}\n```", "```js\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {UserProfileComponent} from './user-profile/user-profile.component';\nimport {AuthenticationGuard} from '../services/authentication.guard';\n\nconst ROUTES: Routes = [\n  {path: '', redirectTo: '/app-friends-userprofile', pathMatch: \n  'full' , canActivate: [AuthenticationGuard]},\n  {path: 'app-friends-userprofile', component: UserProfileComponent \n   , canActivate: [AuthenticationGuard]}\n\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(ROUTES)\n  ],\n  exports: [\n    RouterModule\n  ],\n  providers: [\n    AuthenticationGuard\n  ]\n})\nexport class UserRoutingModule { }\n```", "```js\nimport {Component} from '@angular/core';\nimport {User} from '../../services/user';\nimport {Router} from '@angular/router';\nimport {AuthenticationService} from '../../services/authentication.service';\nimport {UserService} from '../../services/user.service';\nimport {AngularFireAuth} from 'angularfire2/auth';\n\n@Component({\n  selector: 'app-friends-login',\n  styleUrls: ['login.component.scss'],\n  templateUrl: 'login.component.html',\n})\nexport class LoginComponent {\n\n  ...\n\n  private user: User;\n\n  constructor(private userService: UserService,\n              private router: Router,\n              private authService: AuthenticationService,\n              private angularFireAuth: AngularFireAuth) {\n    this.angularFireAuth.auth.onAuthStateChanged(user => {\n      if (user) {\n        this.getUserInfo(user.uid);\n      }\n    });\n  }\n\n  private navigateToUserProfile() {\n    this.router.navigateByUrl('/app-friends-userprofile');\n  }\n\n  private getUserInfo(uid: string) {\n    this.userService.getUser(uid).subscribe(snapshot => {\n      this.user = snapshot;\n      this.navigateToUserProfile();\n    });\n  }\n}\n```", "```js\n<div class=\"user-profile\">\n    <div class=\"user-profile-btn\">\n        <button type=\"button\" (click)='onLogout()' class=\"btn btn-\n         info\">LOGOUT</button>\n    </div>\n</div>\n```", "```js\nimport {Component, OnInit} from '@angular/core';\nimport {AuthenticationService} from '../../services/authentication.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-friends-userprofile',\n  styleUrls: ['user-profile.component.scss'],\n  templateUrl: 'user-profile.component.html'\n})\nexport class UserProfileComponent {\n\n  constructor(private authService: AuthenticationService,\n              private router: Router) {\n  }\n\n  onLogout(): void {\n    this.authService.signout().then(() => {\n      this.navigateToLogin();\n    });\n  }\n\n  navigateToLogin() {\n    this.router.navigateByUrl('/app-friends-login');\n  }\n}\n```", "```js\npublic signout(): Promise<any> {\n    return this.angularFireAuth.auth.signOut();\n}\n```"]