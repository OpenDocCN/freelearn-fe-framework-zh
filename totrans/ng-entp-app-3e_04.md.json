["```js\n$ npx create-nx-workspace \n```", "```js\n    projects/stage7 \n    ```", "```js\n    npx ng build stage7 \n    ```", "```js\nPS> Install-Script -Name setup-windows-dev-env\nPS> setup-windows-dev-env.ps1 \n```", "```js\n$> bash <(wget -O - https://git.io/JvHi1) \n```", "```js\n    $ npm create @angular\n    (Enter project name)\n    (select SCSS)\n    (respond no to SSR) \n    ```", "```js\n    **src/app/app.****routes****.****ts**\n    import { Routes } from '@angular/router'\n    export const routes: Routes = [] \n    ```", "```js\n    **src/app/app.****config****.****ts**\n    import { ApplicationConfig } from '@angular/core';\n    import { provideRouter } from '@angular/router';\n    import { routes } from './app.routes';\n    export const appConfig: ApplicationConfig = {\n      providers: [provideRouter(**routes**) ]\n    }; \n    ```", "```js\n    **src/main.****ts**\n    import { bootstrapApplication } from '@angular/platform-browser';\n    import { appConfig } from './app/app.config';\n    import { AppComponent } from './app/app.component';\n    bootstrapApplication(AppComponent, **appConfig**)\n      .catch((err) => console.error(err)); \n    ```", "```js\n    npx mrm angular-vscode \n    ```", "```js\n    npx mrm npm-docker \n    ```", "```js\n    **\"scripts\"****: {**\n     **...,**\n    **\"build:prod\"****:** **\"ng build --configuration production\"****,**\n    **}** \n    ```", "```js\n    $ npx ng add @angular/material\n    (select Custom, No to global typography, Yes to browser animations)\n    $ npm i @ngbracket/ngx-layout \n    ```", "```js\n    **src****/styles****.scss**\n    …\n    html, body { height: 100%; }\n    body { margin: 0; font-family: Roboto, 'Helvetica Neue',\n      sans-serif; }\n    .top-pad { margin-top: 16px; }\n    .h-pad { margin: 0 16px; }\n    .v-pad { margin: 16px 0; }\n    .left-pad { margin-left: 8px; }\n    .flex-spacer { flex: 1 1 auto; } \n    ```", "```js\n    $ npx ng g m manager --routing\n    $ npx ng g m inventory --routing\n    $ npx ng g m pos --routing\n    $ npx ng g m user --routing \n    ```", "```js\n    /src/app\n    │   app.component.scss\n    │   app.component.html\n    │   app.component.spec.ts\n    │   app.component.ts\n    │   app.config.ts\n    │   app.routes.ts\n    ├───inventory\n    │      inventory-routing.module.ts\n    │      inventory.module.ts\n    ├───manager\n    │      manager-routing.module.ts\n    │      manager.module.ts\n    ├───pos\n    │      pos-routing.module.ts\n    │      pos.module.ts\n    └───user\n    │      user-routing.module.ts\n    │      user.module.ts \n    ```", "```js\n**src/app/manager/manager.****module****.****ts**\nimport { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { ManagerRoutingModule } from './manager-routing.module'\n@NgModule({\n  imports: [CommonModule, ManagerRoutingModule],\n  declarations: [],\n})\nexport class ManagerModule {} \n```", "```js\n**src/app/manager/manager-routing.****module****.****ts**\nimport { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\nconst routes: Routes = []\n@NgModule({\n  imports: [RouterModule.forChild(routes)], \n  exports: [RouterModule],\n})\nexport class ManagerRoutingModule {} \n```", "```js\n$ npm run style:fix && npm run lint:fix \n```", "```js\n$ npx ng g c home --inline-template --inline-style \n```", "```js\n**src/app/app.****routes****.****ts**\n...\n**import** **{** **HomeComponent** **}** **from****'./home/home.component'**\n**import** **{** \n**PageNotFoundComponent**\n**}** **from****'./page-not-found/page-not-found.component'**\nconst routes: Routes = [\n  **{** **path****:** **''****,** **redirectTo****:** **'home'****,** **pathMatch****:** **'full'** **},**\n  **{** **path****:** **'home'****,** **component****:** **HomeComponent** **},**\n  **{** **path****:** **'**'****,** **component****:** **PageNotFoundComponent** **},**\n]\n... \n```", "```js\n**src/app/page-not-found/page-not-found.****component****.****ts**\n...\n  template: `\n    **<p>**\n      **This page doesn't exist. Go back to**\n      **<a routerLink=\"/home\">home</a>.**\n    **</p>**\n  `,\n... \n```", "```js\n    **src/app/app.****component****.****ts**\n    ...\n    template: `\n      <mat-toolbar color=\"primary\">\n        <a mat-button routerLink=\"/home\"><h1>LemonMart</h1></a>\n      </mat-toolbar>\n      <router-outlet></router-outlet>\n    `, \n    ```", "```js\n    $lemon-mart-primary: mat.define-palette(mat.$green-palette, 800); \n    ```", "```js\n    $lemon-mart-accent: mat.define-palette(mat.$lime-palette, A400); \n    ```", "```js\n    **styles****.scss**\n    ...\n    /* You can add global styles to this file and also import other style files */\n    ... \n    ```", "```js\n    **styles****.scss**\n    @use 'lemonmart-theme';\n    ... \n    ```", "```js\n    **angular.json**\n    \"apps\": [\n      {\n      ...\n        \"assets\": [\n          \"src/assets\",\n          \"src/favicon.ico\",\n          \"src/android-chrome-192x192.png\",\n          \"src/favicon-16x16.png\",\n          \"src/mstile-310x150.png\",\n          \"src/android-chrome-512x512.png\",\n          \"src/favicon-32x32.png\",\n          \"src/mstile-310x310.png\",\n          \"src/apple-touch-icon.png\",\n          \"src/manifest.json\",\n          \"src/mstile-70x70.png\",\n          \"src/browserconfig.xml\",\n          \"src/mstile-144x144.png\",\n          \"src/safari-pinned-tab.svg\",\n          \"src/mstile-150x150.png\"\n        ] \n    ```", "```js\n    **src/index.html**\n    <link rel=\"apple-touch-icon\" sizes=\"180x180\"\n      href=\"/apple-touch- icon.png?v=rMlKOnvxlK\">\n    <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\"\n      href=\"/favicon-32x32.png?v=rMlKOnvxlK\">\n    <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\"\n      href=\"/favicon-16x16.png?v=rMlKOnvxlK\">\n    <link rel=\"manifest\" href=\"/manifest.json?v=rMlKOnvxlK\">\n    <link rel=\"mask-icon\"\n      href=\"/safari-pinned-tab.svg?v=rMlKOnvxlK\" color=\"#b3ad2d\">\n    <link rel=\"shortcut icon\" href=\"/favicon.ico?v=rMlKOnvxlK\">\n    <meta name=\"theme-color\" content=\"#ffffff\"> \n    ```", "```js\n    **src/app/app.****component****.****ts**\n    **import** **{** **MatIconRegistry** **}** **from****'@angular/material/icon'**\n    **import** **{** **DomSanitizer** **}** **from****'@angular/platform-browser'**\n    ...\n    export class AppComponent {\n      **constructor****(**\n        **iconRegistry****:** **MatIconRegistry****,** \n        **sanitizer****:** **DomSanitizer**\n      **) {** \n        **iconRegistry.****addSvgIcon****(**\n          **'lemon'****,**\n          **sanitizer.****bypassSecurityTrustResourceUrl****(**\n            **'assets/img/icons/lemon.svg'**\n          **)** \n        **)**\n      } \n    } \n    ```", "```js\n    import { LEMON_ICON } from './svg.icons'iconRegistry.\n    addSvgIconLiteral('lemon', sanitizer. bypassSecurityTrustHtml(LEMON_ICON)) \n    ```", "```js\n    **src/app/app.****component****.****ts**\n    template: ` \n      <mat-toolbar color=\"primary\"> \n        **<mat-icon svgIcon=\"lemon\"></mat-icon>** \n        <a mat-button routerLink=\"/home\"><h1>LemonMart</h1></a> \n      </mat-toolbar> \n      <router-outlet></router-outlet>\n    `, \n    ```", "```js\n    **src/index.html**\n    <head>\n      ...\n      <link href=\"https://fonts.googleapis.com icon?family=Material+Icons\"\n        rel=\"stylesheet\">\n    </head> \n    ```", "```js\n    **src/app/app.****component****.****ts**\n    template: `\n      <mat-toolbar color=\"primary\">\n        **<button mat-icon-button>**\n          **<mat-icon>menu</mat-icon>**\n        **</button>**\n        <mat-icon svgIcon=\"lemon\"></mat-icon>\n        <a mat-button routerLink=\"/home\"><h1>LemonMart</h1></a>\n        **<span class=\"flex-spacer\"></span>**\n        **<button mat-icon-button>**\n          **<mat-icon>account_circle</mat-icon>**\n        **</button>**\n        **<button mat-icon-button>**\n          **<mat-icon>lock_open</mat-icon>**\n        **</button>**\n      </mat-toolbar>\n      <router-outlet></router-outlet>\n    `, \n    ```", "```js\n    **src/app/home/home.****component****.****ts**\n      styles: [`\n        div[fxLayout] {margin-top: 32px;}\n      `],\n      template: `\n        <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n          <span class=\"mat-display-2\">Hello, Limoncu!</span>\n          <button mat-raised-button color=\"primary\">Login</button>\n        </div>\n      ` \n    ```", "```js\n**rootRouter example**\nconst routes: Routes = [\n  { path: '', redirectTo: '/a', pathMatch: 'full' },\n  {\n    path: 'a',\n    component: AComponent,\n    children: [\n      { path: '', component: MasterComponent, outlet: 'master' },\n      { path: '', component: DetailComponent, outlet: 'detail' },\n    ],\n  },\n  {\n    path: 'b',\n    loadChildren: \n      () => import('./b/b.module')\n        .then((module) => module.BModule), \n    canLoad: [AuthGuard],\n  },\n  { path: 'c', loadChildren: () => import('./c/routes').then(mod => mod.C_ROUTES)},},\n  { path: '**', component: PageNotFoundComponent },\n] \n```", "```js\n**/b childRouter example**\nconst routes: Routes = [\n  { path: '', redirectTo: '/b/a', pathMatch: 'full' },\n  { path: 'a', component: BAComponent },\n  { path: 'b', component: BBComponent },\n]\n**/c route config example**\nconst routes: Routes = [\n  { path: '', redirectTo: '/c/a', pathMatch: 'full' },\n  { path: 'a', component: CAComponent },\n  { path: 'b', component: CBComponent },\n] \n```", "```js\n    $ npx ng g c manager/managerHome manager -s -t \n    ```", "```js\n    **/src**\n    **├───app**\n    **│ │**\n    **│ ├───manager**\n    **│ │ │ manager-routing.module.ts**\n    **│ │ │ manager.module.ts**\n    **│ │ │**\n    **│ │ └───manager-home**\n    **│ │ │ │ manager-home.component.spec.ts**\n    **│ │ │ │ manager-home.component.ts** \n    ```", "```js\n    **src/app/manager/manager-routing.****module****.****ts**\n    import { \n      ManagerHomeComponent \n    } from './manager-home/manager-home.component' \n    const routes: Routes = [ \n      { path: '', redirectTo: 'home', pathMatch: 'full' }, \n      { path: 'home', component: ManagerHomeComponent }, \n    ] \n    ```", "```js\n    **src/app/app.****routes****.****ts**\n    import { Routes } from '@angular/router'\n    import { HomeComponent } from './home/home.component'\n    import { PageNotFoundComponent } from './page-not-found/page-not-found.component'\n\n      const routes: Routes = [ \n        ... \n        { \n          path: 'manager', \n          loadChildren: \n            () => import('./manager/manager.module')\n              . then(m=> m.ManagerModule), \n        },\n        ... \n      ] \n    ... \n    ```", "```js\n    **src/app/manager/manager-routing.module.ts**\n    const routes: Routes = [\n      { path: '', redirectTo: 'home', pathMatch: 'full' },\n      { path: 'home', component: ManagerHomeComponent },\n    ] \n    ```", "```js\n    Lazy Chunk Files            | Names          |  Raw Size |\n    src_app_manager_module_ts.js| manager-module | 358.75 kB | \n    ```", "```js\n**src/app/home/home.****component****.****ts**\n  ...\n  <button mat-raised-button color=\"primary\" routerLink=\"/manager\">\n    Login as Manager\n  </button>\n  ... \n```", "```js\n    $ npx ng g c manager/manager --flat -s -t \n    ```", "```js\n    **src/app/manager/manager.****component****.****ts**\n    styles: `\n      div[fxLayout] {\n        margin-top: 32px;\n      }\n      .active-link {\n        font-weight: bold;\n        border-bottom: 2px solid #005005;\n      }\n    `,\n      template: `\n        <mat-toolbar color=\"accent\" fxLayoutGap=\"8px\">\n          <a mat-button routerLink=\"home\" routerLinkActive=\"active-link\">\n            Manager's Dashboard\n          </a>\n          <a mat-button routerLink=\"users\" routerLinkActive=\"active-link\">\n            User Management\n          </a>\n          <a mat-button routerLink=\"receipts\"\n            routerLinkActive=\"active- link\">\n            Receipt Lookup\n          </a>\n        </mat-toolbar>\n        <router-outlet></router-outlet> \n      `, \n    ```", "```js\n    $ npx ng g c manager/userManagement\n    $ npx ng g c manager/receiptLookup \n    ```", "```js\n    **example**\n    { path: '', redirectTo: 'home', pathMatch: 'full' },\n    { path: 'home', component: ManagerHomeComponent },\n    { path: 'users', component: UserManagementComponent },\n    { path: 'receipts', component: ReceiptLookupComponent }, \n    ```", "```js\n**src/app/manager/manager-routing.****module****.****ts**\n...\nimport { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport {\n  ManagerHomeComponent\n} from './manager-home/manager-home.component'\nimport {\n  ManagerComponent\n} from './manager.component'\nimport {\n  ReceiptLookupComponent\n} from './receipt-lookup/receipt-lookup.component'\nimport {\n  UserManagementComponent\n} from './user-management/user-management.component' \nconst routes: Routes = [\n  {\n    path: '', \n    component: ManagerComponent, \n    children: [\n      { path: '', redirectTo: 'home', pathMatch: 'full' },\n      { path: 'home', component: ManagerHomeComponent },\n      { path: 'users', component: UserManagementComponent },\n      { path: 'receipts', component: ReceiptLookupComponent },\n    ],\n  },\n] \n```", "```js\n    $ npx ng g c user/profile\n    $ npx ng g c user/logout -t -s\n    $ npx ng g c user/navigationMenu -t -s \n    ```", "```js\n    **src/app/app.****routes****.****ts**\n    ... \n    { \n      path: 'user', \n      loadChildren: \n        () => import('./user/user.module')\n          .then(m => m.UserModule), \n    }, \n    ```", "```js\n    **src/app/user/user-routing.****module****.****ts**\n    ...\n    const routes: Routes = [\n      { path: 'profile', component: ProfileComponent },\n      { path: 'logout', component: LogoutComponent },\n    ] \n    ```", "```js\n    **src/app/app.****component****.****ts**\n    ... \n    <mat-toolbar> \n      ... \n      <button \n        **mat-mini-fab routerLink=****\"/user/profile\"**\n        **matTooltip=****\"Profile\"** **aria-label=****\"User Profile\"**\n      > \n        <mat-icon>account_circle</mat-icon> \n      </button>\n      <button\n         **mat-mini-fab routerLink=****\"/user/logout\"** \n         **matTooltip=****\"Logout\"** **aria-label=****\"Logout\"**\n      > \n        <mat-icon>lock_open</mat-icon> \n      </button> \n    </mat-toolbar> \n    ```", "```js\n    **src/app/app.****component****.****ts**\n    ...\n    <mat-toolbar>\n      ...\n      <a mat-icon-button routerLink=\"/home\">\n        <mat-icon svgIcon=\"lemon\"></mat-icon>\n        LemonMart\n      </a>\n      ...\n    </mat-toolbar> \n    ```", "```js\n    <span class=\"left-pad\" data-testid=\"title\">LemonMart</span> \n    ```", "```js\n**src/app/manager/manager.****component****.****ts**\n<mat-toolbar color=\"accent\" **fxLayoutGap=****\"8px\"**> \n  ... \n  **<span** **class****=****\"flex-spacer\"****><****/span>** \n  **<button** \n    **mat-mini-fab routerLink=\"/i****nventory****\"** \n    **matTooltip=\"****Inventory****\" aria-label=\"****Inventory****\"**\n  **>** \n    **<mat-icon>list</mat-icon>** \n  **</button>** \n  **<button** \n    **mat-mini-fab routerLink=\"****/pos****\"** \n    **matTooltip=\"****POS****\" aria-label=\"****POS****\"**\n  **>** \n    **<mat-icon>shopping_cart</mat-icon>** \n  **</button>** \n</mat-toolbar> \n```", "```js\n**src/app/common/common.****testing****.****ts**\nimport {\n  HttpClientTestingModule\n} from '@angular/common/http/testing'\nimport { ReactiveFormsModule } from '@angular/forms'\nimport {\n  NoopAnimationsModule\n} from '@angular/platform-browser/animations'\nimport { RouterTestingModule } from '@angular/router/testing'\nimport {\n  MatIconTestingModule\n} from '@angular/material/icon/testing'\nexport const commonTestingProviders = [\n  // Intentionally left blank! Used in later chapters.\n]\nexport const commonTestingModules = [\n  ReactiveFormsModule,\n  NoopAnimationsModule,\n  HttpClientTestingModule,\n  RouterTestingModule,\n  MatIconTestingModule,\n] as unknown[] \n```", "```js\n**src/app/app.****component****.****spec****.****ts**\n...\ndescribe('AppComponent', () => {\n  beforeEach(waitForAsync(() => {\n    TestBed.configureTestingModule({\n      imports: [...commonTestingModules, AppComponent],\n      providers: [],\n    }).compileComponents()\n  }))\n... \n```"]