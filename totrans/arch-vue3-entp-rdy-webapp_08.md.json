["```js\n```", "```js\n```", "```js\n// src/helpers/index.js\nexport function increment(current, max = 10) {\n if (current < max) {\n   return current + 1;\n }\n return current;\n}\n```", "```js\nimport { describe, it, expect } from 'vitest';\nimport { increment } from '../../helpers';\ndescribe('increment', () => {\n it('increments the current number by 1', () => {\n   expect(increment(0, 10)).toBe(1);\n });\n it('does not increment the current number over the max', () => {\n   expect(increment(10, 10)).toBe(10);\n });\n it('has a default max of 10', () => {\n   expect(increment(10)).toBe(10);\n });\n});\n```", "```js\nimport { describe, it, expect } from 'vitest';\nimport { increment } from '../../helpers';\ndescribe('increment', () => {\n….\n});\n```", "```js\n it('increments the current number by 1', () => {\n   expect(increment(0, 10)).toBe(1);\n });\n```", "```js\nyarn test\n```", "```js\n```", "```js\n```", "```js\nimport { defineConfig } from 'vite';\nimport vue from '@vitejs/plugin-vue';\n// https://vitejs.dev/config/\nexport default defineConfig({\n plugins: [vue()],\n test: {\n   environment: 'happy-dom',\n   globals: true,\n },\n});\n```", "```js\nimport { render } from '@testing-library/vue';\nimport Button from '../../components/atoms/Button.vue';\ntest('mounted a button with custom label', async () => {\n // The render method returns a collection of utilities to\n // query your component.\n const { getByText } = render(Button, {\n   props: {\n     label: 'Test',\n   },\n });\n // getByText returns the first matching node for the\n // provided text, and Check if button is render with Label\n // from props\n const button = getByText('Test');\n});\n```"]