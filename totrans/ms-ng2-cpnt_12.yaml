- en: Appendix A. Task Management Application Source Code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The source code of the task management application built in this book is available
    from the Packt download servers. The links for each chapter's final code are listed
    in this appendix. This appendix also provides instructions on how to use the downloaded
    code and the steps required in order to run the code. Furthermore, it helps you
    troubleshoot some of the common problems that you can experience when working
    with the task management application and some hints on how to resolve them.
  prefs: []
  type: TYPE_NORMAL
- en: Download
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following list provides download links for each chapter of the book. The
    download links reference downloadable archive files, which need to be unpacked
    on your local hard drive:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Chapter | Link |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| [Chapter 2](part0020.xhtml#aid-J2B81 "Chapter 2. Ready, Set, Go!"), *Ready,
    Set, Go!* | [https://github.com/PacktPublishing/Mastering-Angular-2-Components/tree/master/angular-2-components-chapter-2](https://github.com/PacktPublishing/Mastering-Angular-2-Components/tree/master/angular-2-components-chapter-2)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [Chapter 3](part0028.xhtml#aid-QMFO1 "Chapter 3. Composing with Components"),
    *Composing with Components* | [https://github.com/PacktPublishing/Mastering-Angular-2-Components/tree/master/angular-2-components-chapter-3](https://github.com/PacktPublishing/Mastering-Angular-2-Components/tree/master/angular-2-components-chapter-3)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [Chapter 4](part0036.xhtml#aid-12AK82 "Chapter 4. No Comments, Please!"),
    *No Comments, Please!* | [https://github.com/PacktPublishing/Mastering-Angular-2-Components/tree/master/angular-2-components-chapter-4](https://github.com/PacktPublishing/Mastering-Angular-2-Components/tree/master/angular-2-components-chapter-4)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [Chapter 5](part0039.xhtml#aid-1565U1 "Chapter 5. Component-Based Routing"),
    *Component-Based Routing* | [https://github.com/PacktPublishing/Mastering-Angular-2-Components/tree/master/angular-2-components-chapter-5](https://github.com/PacktPublishing/Mastering-Angular-2-Components/tree/master/angular-2-components-chapter-5)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [Chapter 6](part0044.xhtml#aid-19UOO1 "Chapter 6. Keeping Up with Activities"),
    *Keeping Up with Activities* | [https://github.com/PacktPublishing/Mastering-Angular-2-Components/tree/master/angular-2-components-chapter-6](https://github.com/PacktPublishing/Mastering-Angular-2-Components/tree/master/angular-2-components-chapter-6)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [Chapter 7](part0049.xhtml#aid-1ENBI2 "Chapter 7. Components for User Experience"),
    *Components for User Experience* | [https://github.com/PacktPublishing/Mastering-Angular-2-Components/tree/master/angular-2-components-chapter-7](https://github.com/PacktPublishing/Mastering-Angular-2-Components/tree/master/angular-2-components-chapter-7)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [Chapter 8](part0054.xhtml#aid-1JFUC2 "Chapter 8. Time Will Tell"), *Time
    Will Tell* | [https://github.com/PacktPublishing/Mastering-Angular-2-Components/tree/master/angular-2-components-chapter-8](https://github.com/PacktPublishing/Mastering-Angular-2-Components/tree/master/angular-2-components-chapter-8)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [Chapter 9](part0059.xhtml#aid-1O8H62 "Chapter 9. Spaceship Dashboard"),
    *Spaceship Dashboard* | [https://github.com/PacktPublishing/Mastering-Angular-2-Components/tree/master/angular-2-components-chapter-9](https://github.com/PacktPublishing/Mastering-Angular-2-Components/tree/master/angular-2-components-chapter-9)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [Chapter 10](part0064.xhtml#aid-1T1401 "Chapter 10. Making Things Pluggable"),
    *Making Things Pluggable* | [https://github.com/PacktPublishing/Mastering-Angular-2-Components/tree/master/angular-2-components-chapter-10](https://github.com/PacktPublishing/Mastering-Angular-2-Components/tree/master/angular-2-components-chapter-10)
    |'
  prefs: []
  type: TYPE_TB
- en: '| [Chapter 11](part0070.xhtml#aid-22O7C2 "Chapter 11. Putting Things to the
    Test"), *Putting Things to the Test* | [https://github.com/PacktPublishing/Mastering-Angular-2-Components/tree/master/angular-2-components-chapter-11](https://github.com/PacktPublishing/Mastering-Angular-2-Components/tree/master/angular-2-components-chapter-11)
    |'
  prefs: []
  type: TYPE_TB
- en: The complete source code is also available at [http://www.packtpub.com](http://www.packtpub.com).
  prefs: []
  type: TYPE_NORMAL
- en: Prerequisites
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The task management application is built using Node.js technologies; therefore,
    it requires that you have Node.js installed on your machine before you can run
    any of the code.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download and install Node.js from the website, [http://nodejs.org](http://nodejs.org).
    In order to build the Sass source files and start a server with live-reload, two
    global node modules are required:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Usage
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'After downloading the source code of an individual chapter, you''ll need to
    install NPM as well as JSPM dependencies. By running the following two lines of
    code on your console, you''ll make sure all dependencies are installed. Make sure
    that you run these commands from inside the downloaded and extracted code folder:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'After you''ve installed the required dependencies, you can go ahead and start
    the application:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The NPM start script will invoke gulp in order to compile any Sass files as
    well as live server to start a static server with live-reload. Please read the
    prerequisites topic on how to install these global Node.js modules.
  prefs: []
  type: TYPE_NORMAL
- en: Troubleshooting
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We've carefully considered various environments where the task management source
    code will be executed. However, there's always a chance that you'll experience
    some issues when working with the source code. This topic will provide you with
    solutions for common problems when working with the task management application.
  prefs: []
  type: TYPE_NORMAL
- en: Cleaning IndexDB to reset data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The task management application uses a data store that is persisted in your
    browser. If you use the application extensively across multiple chapters, chances
    are high that your data is causing some application instability.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you''d like to clean the local database used in the application, you can
    run the following line of code on the debugger console of your browser. It''s
    important that you run the code snippet in the debugger of your browser with the
    task management application open. If your browser points to a different origin,
    the application database can''t be deleted. After deleting the database, the application
    can be reloaded, and it will recreate the database with the initial sample data:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Enabling web components in Firefox
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Chapter 6](part0044.xhtml#aid-19UOO1 "Chapter 6. Keeping Up with Activities"),
    *Keeping Up with Activities*, relies on the presence of Shadow DOM in the browser.
    Chrome supports Shadow DOM natively after version 35\. In Firefox, you can enable
    Shadow DOM by visiting the `about:config` page and turning on the `dom.webcomponents.enabled`
    flag.'
  prefs: []
  type: TYPE_NORMAL
- en: IE, Edge, and Safari don't support this standard at all; however, we can teach
    them how to deal with Shadow DOM by including a polyfill named `webcomponents.js`.
    You can find more information on this polyfill at [https://github.com/webcomponents/webcomponentsjs](https://github.com/webcomponents/webcomponentsjs).
  prefs: []
  type: TYPE_NORMAL
