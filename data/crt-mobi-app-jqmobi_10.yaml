- en: Chapter 10. Putting It All Together – Flood.FM
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第十章.将一切汇聚在一起 - Flood.FM
- en: Flood.FM is a unique idea. This is a website where listeners will be greeted
    with music from local, independent bands across several genres and geographic
    regions. Building this will take many of the skills we've developed so far, and
    we'll pepper in some new techniques that can be used in this new service. We've
    already drawn interfaces on Post-its, and used GPS and client-side templates.
    We've taken care of regular HTML5 audio and video. We've even started working
    on multiple mobile sizes and used media queries to rework our layouts into responsive
    designs.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Flood.FM是一个独特的想法。这是一个网站，听众将受到来自几个流派和地理区域的本地独立乐队的音乐的欢迎。构建这个网站将需要我们迄今为止开发的许多技能，并且我们将在这项新服务中使用一些新的技术。我们已经在便签上绘制了界面，并使用了GPS和客户端模板。我们已经处理了常规的HTML5音频和视频。我们甚至已经开始处理多个移动尺寸，并使用媒体查询将我们的布局重新设计为响应式设计。
- en: All of these were simpler implementations meant to get the job done and be as
    gracefully failing as possible. Let's see what technology and techniques we could
    bring to bear on this venture.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些都是为了完成任务并尽可能优雅地失败而简化的实现。让我们看看我们可以在这个项目上使用什么技术和技巧。
- en: 'In this chapter we will cover:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖：
- en: A taste of Balsamiq
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一份Balsamiq的味道
- en: Organizing your code
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组织你的代码
- en: Introduction to the Web Audio API
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web Audio API简介
- en: Prompting the user to install your app
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引导用户安装你的应用程序
- en: New device-level hardware access
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新的设备级硬件访问
- en: To App or not to App, that is the question
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要做应用还是不要做应用，这是个问题
- en: PhoneGap versus Apache Cordova
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PhoneGap与Apache Cordova
- en: A Taste of Balsamiq
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一份Balsamiq的味道
- en: We started this book by learning a technique called paper prototyping. For your
    own work with clients, it's a great tool. However, if you're dealing with larger
    or distributed teams, you might need something more. Balsamiq ([http://www.balsamiq.com/](http://www.balsamiq.com/))
    is a very popular UX tool for rapid prototyping. It is perfect for creating and
    sharing interactive mockups.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过学习一种称为纸质原型的技术来开始这本书。对于与客户一起工作，这是一个很好的工具。然而，如果你正在处理更大或分布式的团队，你可能需要更多。Balsamiq
    ([http://www.balsamiq.com/](http://www.balsamiq.com/)) 是一个非常流行的用于快速原型设计的UX工具。它非常适合创建和共享交互式的模型。
- en: '![A Taste of Balsamiq](img/0069_10_01.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![一份Balsamiq的味道](img/0069_10_01.jpg)'
- en: And when I say very popular, I mean lots of major names that you're used to
    seeing. Over 80,000 companies create their software with the help of Balsamiq
    Mockups.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 当我说非常流行时，我是指你习惯看到的许多大公司。超过80,000家公司都在使用Balsamiq Mockups来创建他们的软件。
- en: '![A Taste of Balsamiq](img/0069_10_02.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![一份Balsamiq的味道](img/0069_10_02.jpg)'
- en: So, let's take a look at what the creators of Flood.FM had in mind. Here is
    the first screen they drew; it looks like a pretty standard implementation so
    far. It has an icon toolbar at the bottom and a listview in the content. Translating
    that is pretty simple, really. We've done this before using Glyphish icons and
    standard toolbars.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，让我们看看Flood.FM的创建者们打算做什么。这是他们绘制的第一个屏幕；到目前为止，它看起来像是一个非常标准的实现。它在底部有一个图标工具栏，在内容中有一个列表视图。实际上，将其翻译成中文非常简单。我们以前使用Glyphish图标和标准工具栏做过这样的事情。
- en: '![A Taste of Balsamiq](img/0069_10_04.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![一份Balsamiq的味道](img/0069_10_04.jpg)'
- en: 'Ideally, we''d like to keep this particular implementation as pure HTML/JS/CSS.
    That way, we could compile it into a native app at some point using PhoneGap.
    However, we''d like to stay true to the DRY (Don''t Repeat Yourself) principle.
    That means that we''re going to want to inject this footer onto every page without
    using a server-side process. To that end, let''s set up a hidden part of our app
    to contain all the global elements that we may want:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 理想情况下，我们希望保持这个特定实现纯粹的HTML/JS/CSS。这样，我们可以在某个时候使用PhoneGap将其编译为本机应用程序。但是，我们希望忠于DRY（不要重复自己）原则。这意味着我们想要在每个页面上注入这个页脚，而不使用服务器端过程。为此，让我们设置一个应用程序的隐藏部分，其中包含我们可能想要的所有全局元素：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We'll keep this code at the bottom of the page and hide it with a simple CSS
    rule in the stylesheet, `#globalComponents{display:none;}`.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把这段代码放在页面底部，并在样式表中使用一个简单的CSS规则来隐藏它，`#globalComponents{display:none;}`。
- en: Now let's set up our application to insert this global footer into each page,
    just before they are created. Using the `clone()` method (shown in the next code
    snippet) ensures that not only are we pulling over a copy of the footer, but also
    any data attached with it. In this way, each page is built with the exact same
    footer, just like it is in a server-side include. When the page goes through its
    normal initialization process, the footer will receive the same markup treatment
    as the rest of the page.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们来设置我们的应用程序，在创建每个页面之前将全局页脚插入其中。使用`clone()`方法（下一行的代码段中显示）可以确保我们不仅复制了页脚，还带上了附加的任何数据。这样，每个页面都带有完全相同的页脚，就像它在服务器端一样。当页面经过正常的初始化过程时，页脚将接收与页面其余部分相同的标记处理。
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Look at what we've done here in this piece of JavaScript code. It's a little
    different from what we've done before. We're actually organizing our code a little
    more effectively.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 看看我们在这段 JavaScript 代码中所做的。这跟我们之前做的有点不同。我们实际上更有效地组织了我们的代码。
- en: Organizing your code
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 组织你的代码
- en: In the previous chapters, we structured our code very loosely. In fact, I'm
    sure the academic types would laugh at the audacity of even calling it structured.
    I believe in a very pragmatic approach to coding, which leads me to use more simple
    structures and a bare minimum of libraries. However, there are values and lessons
    to be learned out there.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的章节中，我们的代码结构非常松散。事实上，我确信学术界的人一定会嘲笑我们敢称之为结构化的胆量。我相信编码非常务实的方法，这导致我使用更简单的结构和最少的库。不过，其中也有一些价值和经验可以借鉴。
- en: MVC, MVVM, MV*
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MVC、MVVM、MV*
- en: For the last couple of years, serious JavaScript developers have been bringing
    backend development structures to the web as the size and scope of their project
    demanded a more regimented approach. For highly ambitious, long-lasting, in-browser
    apps, this kind of structured approach can help. This is even more true if you're
    on a larger team.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 过去几年里，一些认真对待 JavaScript 开发的人都将后端开发结构引入到网页开发中，因为项目的规模和范围需要更加有条理的方法。对于雄心勃勃、持续时间长、纯网页端的应用来说，这种结构化方法可以提供帮助。特别是如果你在一个较大的团队中。
- en: '**MVC** stands for "Model-View-Controller" ( see [http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller](http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller)),
    **MVVM** is for "Model View ViewModel"(see [http://en.wikipedia.org/wiki/Model_View_ViewModel](http://en.wikipedia.org/wiki/Model_View_ViewModel)),
    and **MV*** is shorthand for "Model View Whatever" and is the general term used
    to sum up this entire movement of bringing these kinds of structures to the front-end.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**MVC**代表"Model-View-Controller"（参见[http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller](http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller)），**MVVM**代表"Model
    View ViewModel"（参见[http://en.wikipedia.org/wiki/Model_View_ViewModel](http://en.wikipedia.org/wiki/Model_View_ViewModel)），而**MV***是缩写，代表"Model
    View Whatever"，是总称，用来概括将这些结构带到前端的整个运动。'
- en: 'Some of the more popular libraries include:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 一些更流行的库包括：
- en: Backbone.JS ([http://backbonejs.org/](http://backbonejs.org/))
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Backbone.JS（[http://backbonejs.org/](http://backbonejs.org/)）
- en: Spine ([http://spinejs.com/](http://spinejs.com/))
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 脊骨（[http://spinejs.com/](http://spinejs.com/)）
- en: Lumbar ([http://walmartlabs.github.com/lumbar/](http://walmartlabs.github.com/lumbar/))
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 腰椎（[http://walmartlabs.github.com/lumbar/](http://walmartlabs.github.com/lumbar/)）
- en: Ember ([http://emberjs.com/](http://emberjs.com/))
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 琥珀（[http://emberjs.com/](http://emberjs.com/)）
- en: Knockout ([http://knockoutjs.com/](http://knockoutjs.com/))
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Knockout（[http://knockoutjs.com/](http://knockoutjs.com/)）
- en: AngularJS ([http://angularjs.org/](http://angularjs.org/))
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AngularJS（[http://angularjs.org/](http://angularjs.org/)）
- en: Batman.js ([http://batmanjs.org/](http://batmanjs.org/))
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Batman.js（[http://batmanjs.org/](http://batmanjs.org/)）
- en: A very nice comparison of these, and more, is at [http://codebrief.com/2012/01/the-top-10-javascript-mvc-frameworks-reviewed/](http://codebrief.com/2012/01/the-top-10-javascript-mvc-frameworks-reviewed/).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 更全面的比较可以在[http://codebrief.com/2012/01/the-top-10-javascript-mvc-frameworks-reviewed/](http://codebrief.com/2012/01/the-top-10-javascript-mvc-frameworks-reviewed/)上找到，还有其他的。
- en: An adapter and sample of how to make Backbone play nicely with jQuery Mobile
    can be found at [http://view.jquerymobile.com/1.3.0/docs/examples/backbone-require/index.php](http://view.jquerymobile.com/1.3.0/docs/examples/backbone-require/index.php).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如何使 Backbone 与 jQuery Mobile 良好协作的适配器和示例可以在[http://view.jquerymobile.com/1.3.0/docs/examples/backbone-require/index.php](http://view.jquerymobile.com/1.3.0/docs/examples/backbone-require/index.php)找到。
- en: 'An example for Ember can be found at [https://github.com/LuisSala/emberjs-jqm](https://github.com/LuisSala/     emberjs-jqm).'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '琥珀的示例可以在[https://github.com/LuisSala/emberjs-jqm](https://github.com/LuisSala/     emberjs-jqm)找到。'
- en: Angular also has adapters for jQM in progress. There are several examples at
    [https://github.com/tigbro/jquery-mobile-angular-adapter](https://github.com/tigbro/jquery-mobile-angular-adapter).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Angular 还在进行 jQM 的适配器。[https://github.com/tigbro/jquery-mobile-angular-adapter](https://github.com/tigbro/jquery-mobile-angular-adapter)
    上有几个示例。
- en: MV* and jQuery Mobile
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MV* 和 jQuery Mobile
- en: Yes, you can do it. You can add any one of these MV* frameworks to jQuery Mobile
    and make as complex an app as you like. Of them all, I lean toward the Ember platform
    for desktop and Angular for jQuery Mobile. However, I'd like to propose another
    alternative.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，你可以做到。你可以将任何一个 MV* 框架添加到 jQuery Mobile 中，并制作出你喜欢的复杂应用程序。在其中，我倾向于在桌面上使用 Ember
    平台，在 jQuery Mobile 中使用 Angular。但是，我想提出另一种选择。
- en: 'I''m not going to go in-depth into the concepts behind MVC frameworks. Essentially,
    it''s all about separating the concerns of your application into more manageable
    pieces, each having a specific purpose. We don''t need yet another library/framework
    to do this. It is simple enough to write code in a more organized fashion. Let''s
    create a structure similar to what I''ve started before:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我不打算深入探讨 MVC 框架背后的概念。基本上，这一切都是关于将应用程序的关注点分离成更可管理的部分，每个部分都有特定的目的。我们不需要再添加另一个库/框架来做到这一点。以更有组织的方式编写代码就足够了。让我们创建一个类似我之前开始的结构：
- en: '[PRE2]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The application
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用程序
- en: Under the application section, let's fill in some of our app code and give it
    a *namespace*. Essentially, namespacing is taking your application-specific code
    and putting it into its own named object so that the functions and variables won't
    collide with other potential global variables and functions. It keeps you from
    polluting the global space and helps preserve your code from those who are ignorant
    regarding your work. Granted, this is JavaScript and people can override anything
    they wish. However, this also makes it a whole lot more intentional to override
    something like `floodApp.getStarted` than simply creating your own function called
    `getStarted`. Nobody is going to accidentally override a namespaced function.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用程序部分下，让我们填写一些我们的应用程序代码，并给它一个*命名空间*。本质上，命名空间是将你的应用程序特定代码放入自己命名的对象中，这样函数和变量就不会与其他潜在的全局变量和函数冲突。它可以防止你污染全局空间，并帮助保护你的代码免受那些对你的工作无知的人的破坏。当然，这是
    JavaScript，人们可以重写任何他们想要的东西。但是，这也使得像`floodApp.getStarted`这样的重写比简单地创建自己的名为`getStarted`的函数要更有意义。没有人会意外地重写一个命名空间函数。
- en: '[PRE3]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Pay attention, in particular, to the function `fireCustomEvent` . With that,
    we can now set up an event management system. At its core, the idea is pretty
    simple. We''d like to be able to simply put tag attributes on our clickable objects
    and have them fire events, like all the MV* systems. This fits the bill perfectly.
    It would be quite common to set up a click event handler on a link or something
    to catch the activity. This is far more simple. Just an attribute here and there,
    and you''re wired in. The HTML code becomes more readable too. It''s easy to see
    how declarative this makes your code:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 特别要注意`fireCustomEvent`函数。有了它，我们现在可以设置一个事件管理系统。其核心思想非常简单。我们希望能够简单地在可点击的对象上放置标签属性，并使其触发事件，就像所有的
    MV* 系统一样。这完全符合要求。在链接或其他东西上设置一个点击事件处理程序是相当常见的。这更简单。只需在这里或那里添加一个属性，就可以连接上。HTML 代码也变得更加可读。很容易看出这使你的代码声明性的：
- en: '[PRE4]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The events
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 事件
- en: Now instead of watching for clicks, we're listening for events. You can have
    as many parts of your app as you like registering themselves to listen for the
    event and then execute appropriately.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们不再监听点击，而是监听事件。你可以有尽可能多的应用程序部分注册自己来监听事件，然后适当地执行。
- en: 'As we fill out our application more and more, we''ll start collecting a lot
    of events; instead of letting them get scattered throughout multiple nested callbacks
    and such, we''ll be keeping them all in one handy spot. In most JavaScript MV*
    frameworks, this part of the code is referred to as the Router. Hooked to each
    event, you will see nothing but namespaced application calls:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我们的应用程序越来越完善，我们会开始收集大量事件；而不是让它们散布在多个嵌套的回调函数中，我们会将它们全部放在一个方便的地方。在大多数 JavaScript
    MV* 框架中，代码的这部分被称为路由器。连接到每个事件的只会是命名空间应用程序调用：
- en: '[PRE5]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Notice the separation of concerns into interface events and application events.
    We're using this as a point of distinction between events that are fired as a
    result of natural jQuery Mobile events (interface events) and events that we have
    thrown (application events). This may be an arbitrary distinction, but for someone
    who comes along later to maintain your code, this could come in handy.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 注意将关注点分为界面事件和应用程序事件。我们将其用作对 jQuery Mobile 事件（界面事件）和我们抛出的事件（应用程序事件）之间的区别点。这可能是一个任意的区别，但对于后来维护你的代码的人来说，这可能会派上用场。
- en: The model
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模型
- en: 'The model section contains the data for your application. This is typically
    the kind of data that is pulled in from your backend APIs. It''s probably not
    as important here, but it never hurts to namespace what''s yours. Here, we have
    labeled our data as `modelData`. Any information we pull in from the APIs can
    be dumped right into this object, like we''ve done here with the station data:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 模型部分包含了你的应用程序的数据。这通常是从后端 API 中拉取的数据类型。这里可能不是很重要，但给自己的东西加上命名空间从来都不会有坏处。在这里，我们将我们的数据标记为
    `modelData`。我们从 API 中拉取的任何信息都可以直接放入这个对象中，就像我们在这里使用站点数据一样：
- en: '[PRE6]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Pair this style of programming with client-side templating, and you'll be looking
    at some highly maintainable, well-structured code. However, there are some features
    that are still missing. Typically, these frameworks will also provide bindings
    for your templates. This means that you only have to render the templates once.
    After that, simply updating your model object will be enough to cause the UI to
    update itself.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 将这种编程风格与客户端模板配对，你将看到一些高度可维护、结构良好的代码。然而，仍然有一些功能是缺失的。通常，这些框架还会为你的模板提供绑定。这意味着你只需要渲染模板一次。之后，只需更新你的模型对象，就足以导致
    UI 自动更新。
- en: The problem with these bound templates is that they update the HTML in a way
    that would be perfect for a desktop application. But remember, jQuery Mobile does
    a lot of DOM manipulation to make things happen.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这些绑定模板的问题在于它们以一种对桌面应用程序非常完美的方式更新 HTML。但请记住，jQuery Mobile 通过大量的 DOM 操作来实现这些功能。
- en: 'In jQuery Mobile, a listview starts like this:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在 jQuery Mobile 中，一个列表视图是这样开始的：
- en: '[PRE7]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'After the normal DOM manipulation, you get this:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在正常的 DOM 操作之后，你会得到这样的结果：
- en: '[PRE8]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: And that's just a single list item. You really don't want to include all that
    junk in your templates; so what you need to do is, just add your usual items to
    the listview and then call `.listview("refresh")`. Even if you're using one of
    the MV* systems, you'll still have to either find or write an adapter that will
    refresh the listviews when something is added or deleted. With any luck, these
    kinds of things will be solved at the platform level soon. Until then, using a
    real MV* system with jQM will be a pain in the posterior.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这仅仅是一个列表项。你真的不想在你的模板中包含所有这些垃圾；所以你需要做的就是，只需将你通常的项目添加到列表视图中，然后调用 `.listview("refresh")`。即使你使用的是
    MV* 系统之一，当添加或删除某些内容时，你仍然必须找到或编写一个适配器来刷新列表视图。希望这些问题很快就会在平台级别得到解决。在那之前，使用真正的 MV*
    系统与 jQM 会很痛苦。
- en: Introduction to the Web Audio API
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 Web Audio API
- en: When we touched upon the subject of HTML audio in [Chapter 6](ch06.html "Chapter 6. HTML5
    Audio"), *HTML5 Audio*, we were looking at it from a perspective of progressive
    enhancement and maximum device support. We took regular pages with native audio
    controls and used JavaScript to build a new interface to control the audio. We
    then looked at ways to combine it all and go for the better experience. Now we'll
    take it a few steps further.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在[第 6 章](ch06.html "Chapter 6. HTML5 Audio")中谈到 HTML 音频时，*HTML5 音频*，我们是从渐进增强和最大设备支持的角度来看待它的。我们拿原生音频控件的常规页面，并使用
    JavaScript 构建一个新的界面来控制音频。然后我们看了一些组合它们的方法，并追求更好的体验。现在我们将再进一步。
- en: The Web Audio API is a fairly new development and, at the time of writing this,
    only existed within the mobile space on iOS 6\. The Web Audio API is available
    on the latest versions of desktop Chrome, so you can still do your initial test
    coding there.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: Web Audio API 是一个相当新的开发，截至本文写作时，它只存在于 iOS 6 的移动空间中。Web Audio API 在最新版本的桌面 Chrome
    上可用，因此你仍然可以在那里进行初始测试编码。
- en: For now, this means no Android, no Windows Phone, and no Blackberry. At least,
    not yet. However, it's only a matter of time before this is built into other major
    platforms.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，这意味着没有 Android、没有 Windows Phone，也没有 Blackberry。至少，还没有。然而，只是时间问题，这将被构建到其他主要平台中。
- en: Most of the code for this part of the project and the full explanation of the
    API can be found at [http://developer.apple.com/library/safari/#documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/PlayingandSynthesizingSounds/PlayingandSynthesizingSounds.html](http://developer.apple.com/library/safari/#documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/PlayingandSynthesizingSounds/PlayingandSynthesizingSounds.html).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 项目的大部分代码以及API的完整说明都可以在[http://developer.apple.com/library/safari/#documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/PlayingandSynthesizingSounds/PlayingandSynthesizingSounds.html](http://developer.apple.com/library/safari/#documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/PlayingandSynthesizingSounds/PlayingandSynthesizingSounds.html)找到。
- en: 'Let''s use feature detection to branch our capabilities:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用特性检测来分支我们的功能：
- en: '[PRE9]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The original code for this page was designed to kick off simultaneous downloads
    for every song in the queue. With a fat connection, this would probably be OK.
    Not so much on mobile. Because of the limited connectivity and bandwidth, it would
    be better to just chain the downloads to ensure better experience and a more respectful
    use of bandwidth:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这个页面的原始代码旨在同时下载队列中的每首歌曲。对于高速连接，这可能还可以。但在移动设备上则不太适用。由于连接性和带宽有限，最好只是链接下载以确保更好的体验和更加尊重带宽的使用：
- en: '[PRE10]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Now the `bufferSound` function just needs to call `fetchNextSong` after buffering,
    as shown in the following code snippet:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在`bufferSound`函数只需在缓冲后调用`fetchNextSong`，如下面的代码片段所示：
- en: '[PRE11]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'One last thing we need to change from the original is, telling the buffer to
    pull the songs in the order that they were inserted:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要从原始版本中更改的最后一件事是，告诉缓冲器按插入顺序拉取歌曲：
- en: '[PRE12]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: For anyone on iOS, this solution is pretty nice. There is a lot more to this
    API for those who want to dig in. With this out-of-the-box example, you get a
    nice canvas-based audio analyzer that gives you a very nice professional look
    as the audio levels bounce to the music. Slider controls are used to change the
    volume, the left-right balance, and the high-pass filter. If you don't know what
    a high-pass filter is, don't worry, I think that filter's usefulness went the
    way of the cassette deck. Regardless, it's fun to play with.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 对于iOS上的任何人来说，这个解决方案相当不错。对于那些想要深入了解的人来说，这个API还有更多内容。通过这个开箱即用的示例，你可以得到一个很好的基于画布的音频分析器，它使音频水平跟随音乐弹跳的外观非常专业。滑块控件用于更改音量、左右平衡和高通滤波器。如果你不知道什么是高通滤波器，不要担心，我认为那个滤波器的实用性已经过时了。不管怎样，玩起来很有趣。
- en: '![Introduction to the Web Audio API](img/0069_10_05.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![Web Audio API 简介](img/0069_10_05.jpg)'
- en: The Web Audio API is a very serious piece of business. This example was adapted
    from the example on Apple's site. It only plays one sound. However, the Web Audio
    API was designed with the idea of making it possible to play multiple sounds,
    alter them in multiple ways, and even dynamically generate sounds using JavaScript.
    Getting that deep is probably worth a book of its own. It would also require a
    deeper knowledge of audio processing than I am likely to ever have. In the meantime,
    if you want to see this proof of concept in jQuery Mobile, you will find it in
    the example source in `webaudioapi.html`. For an even deeper look at what is coming,
    you can check the docs at [https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html](https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: Web Audio API 是一项非常严肃的业务。这个例子是从苹果网站上的例子改编的。它只播放一个声音。然而，Web Audio API 的设计理念是使其能够播放多个声音，以多种方式改变它们，甚至使用JavaScript动态生成声音。深入研究可能值得一本书。它还需要比我可能会拥有的更深入的音频处理知识。同时，如果您想在jQuery
    Mobile中查看这个概念验证，您可以在`webaudioapi.html`的示例源代码中找到它。要更深入地了解即将到来的内容，您可以查看[https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html](https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html)的文档。
- en: Prompting the user to install your app
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提示用户安装您的应用
- en: Remember in [Chapter 6](ch06.html "Chapter 6. HTML5 Audio"), *HTML5 Audio*,
    we added the Apple touch icons to make the Lindsey Stirling site look like an
    app when bookmarked to the home screen? We even went so far as to use a manifest
    file to locally cache the assets for faster access and offline use.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 记得在[第六章](ch06.html "Chapter 6. HTML5 Audio")中，*HTML5 音频*，我们添加了苹果触摸图标，使林赛·斯特林网站在添加到主屏幕书签时看起来像一个应用程序？
    我们甚至进一步使用清单文件来本地缓存资产，以实现更快的访问和离线使用。
- en: '![Prompting the user to install your app](img/0069_10_06.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![提示用户安装您的应用](img/0069_10_06.jpg)'
- en: Now let's take a look at how we can prompt our users to download the Flood.FM
    app to their home screens. It is very likely that you've seen it before; it's
    the little bubble that pops up and instructs the user with the steps to install
    the app.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看一下如何提示我们的用户将 Flood.FM app 下载到他们的主屏幕。很可能你以前见过它；它是那个小气泡，弹出来指导用户安装应用程序的步骤。
- en: There are many different projects out there, but the best one that I have seen
    is a derivative of the one started by Google. Much thanks and respect to Mr. Okamototk
    on GitHub ([https://github.com/okamototk](https://github.com/okamototk)) for taking
    and improving it. Okamototk evolved the bubble to include several versions of
    Android, legacy iOS, and even BlackBerry. You can find his original work at [https://github.com/okamototk/jqm-mobile-bookmark-bubble](https://github.com/okamototk/jqm-mobile-bookmark-bubble).
    However, unless you can read Japanese or enjoy translating it, I'd recommend you
    just take the code from this chapter's example.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多不同的项目，但我见过的最好的一个是 Google 创始的一个分支。非常感谢和尊重 GitHub 上的 Mr. Okamototk（[https://github.com/okamototk](https://github.com/okamototk)）对它的采取和改进。Okamototk
    将气泡发展成包括几个 Android 版本、传统 iOS 版本，甚至还支持 BlackBerry。你可以在[https://github.com/okamototk/jqm-mobile-bookmark-bubble](https://github.com/okamototk/jqm-mobile-bookmark-bubble)找到他的原作品。但是，除非你能读日文或乐于翻译，我建议你只是从本章的示例中获取代码。
- en: Don't worry about annoying your customers too much. With this version, if they
    dismiss the bookmarking bubble three times, they won't see it again. The count
    is stored in HTML5 LocalStorage; so if they clear out the storage, they'll see
    the bubble again. Thankfully, most people out there don't even know that can be
    done, so it won't happen very often. Usually it's geeks like us that clear things
    like LocalStorage and cookies, and we know what we're getting into when we do
    it.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 不用太担心过于打扰你的客户。使用这个版本，如果他们三次关闭了书签气泡，他们就不会再看到它。 这个计数存储在 HTML5 本地存储中；所以如果他们清除了存储，他们会再次看到气泡。幸运的是，大多数人根本不知道这是可以做到的，所以这种情况不会发生很频繁。通常只有像我们这样的极客会清理类似
    LocalStorage 和 cookies 的东西，而当我们这样做时，我们知道我们在做什么。
- en: 'In my edition of the code, I''ve combined all the JavaScript into a single
    file meant to be placed between your import of jQuery and jQuery Mobile. At the
    top, the first non-commented line is:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的代码版本中，我已将所有 JavaScript 合并为一个单个文件，放置在你的 jQuery 和 jQuery Mobile 导入之间。顶部的第一行非注释行是：
- en: '[PRE13]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: This is what you would change to be your own first page or where you want the
    bubble to popup.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这是你将要改变成自己的第一页或你想要气泡弹出的地方。
- en: In my version, I have hardcoded the font color and text shadow properties into
    the bubble. This was needed because in jQM, the font color and text shadow color
    vary based on the theme you're using. Consequently, in jQuery Mobile's default
    "A" theme (white text on a black background), the font was showing up as white
    with a dark shadow on top of a white bubble. Now, with my modified version for
    jQM, it will always look right.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的版本中，我已经将字体颜色和文本阴影属性硬编码到了气泡中。这是因为在 jQM 中，字体颜色和文本阴影颜色根据你使用的主题而变化。因此，在 jQuery
    Mobile 的默认“ A”主题（黑色背景上的白色文本），字体会显示为白色，阴影为黑色，出现在白色气泡上。现在，在我修改过的 jQM 版本中，它看起来总是对的。
- en: 'We just need to be sure we''ve set up our page with the proper links in the
    head, and that our images are in place:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只需要确保我们在头部设置了正确的链接，以及我们的图片放在了正确的位置：
- en: '[PRE14]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![Prompting the user to install your app](img/0069_10_07.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![提示用户安装您的应用程序](img/0069_10_07.jpg)'
- en: Note the Flood.FM logo here. The logo is pulled from our link tags marked with
    `rel="apple-touch-icon-precomposed"` and injected into the bubble. So, really,
    the only thing in `jqm_bookmark_bubble.js` that you would need to alter is `page_popup_bubble`.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 注意这里的 Flood.FM 标志。标志是从我们标记有 `rel="apple-touch-icon-precomposed"` 的链接标签中提取并注入到气泡中的。所以，实际上，你需要改变的
    `jqm_bookmark_bubble.js` 中的唯一东西是 `page_popup_bubble`。
- en: New device-level hardware access
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 新的设备级硬件访问
- en: New kinds of hardware-level access are coming to our mobile browsers every year.
    Here is a look at some of what you can start doing now and what's on the horizon.
    Not all of these are applicable to every project but if you think creatively,
    you can probably find innovative ways to use them.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 每年我们的移动浏览器都会有新的硬件级访问方式。下面是一些你现在可以开始做的事情以及未来的展望。并不是所有这些都适用于每个项目，但如果你有创意，你可能会找到创新的方式来使用它们。
- en: Accelerometers
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加速计
- en: Accelerometers are the little do-dads inside your phone that measure the phone's
    orientation in space. To geek out on this, read [http://en.wikipedia.org/wiki/Accelerometer](http://en.wikipedia.org/wiki/Accelerometer).
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 加速计是你手机里的小装置，用来测量手机在空间中的方向。想要深入了解，请阅读 [http://en.wikipedia.org/wiki/Accelerometer](http://en.wikipedia.org/wiki/Accelerometer)。
- en: This goes beyond the simple orientation we've been using. This is true access
    to the accelerometers, in detail. Think about the user being able to shake their
    device or tilting it as a method of interaction with your app. Maybe Flood.FM
    is playing something they don't like and we can give them a fun way to rage against
    the song. Something like, "shake a song to never hear it again." Here is a simple
    marble rolling game somebody made as a proof of concept. See [http://menscher.com/teaching/woaa/examples/html5_accelerometer.html](http://menscher.com/teaching/woaa/examples/html5_accelerometer.html).
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这超出了我们之前简单的定位。这是对加速计的真正访问，而且是详细的。想象一下用户能够摇动他们的设备或者倾斜它作为与你的应用交互的一种方法。也许 Flood.FM
    正在播放一些他们不喜欢的东西，我们可以给他们一个有趣的方式来对抗这首歌。比如，“摇一首歌以永远不再听到它”。这里是某人制作的一个简单的弹珠滚动游戏，作为概念验证。参见
    [http://menscher.com/teaching/woaa/examples/html5_accelerometer.html](http://menscher.com/teaching/woaa/examples/html5_accelerometer.html)。
- en: Camera
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相机
- en: Apple's iOS 6 and Android's JellyBean can both access photos on their file systems
    as well as the cameras. Granted, these are the latest and greatest versions of
    these two platforms. If you intend to support the many woefully out of date Android
    devices (2.3 2.4) that are *still* being sold off the shelves as if brand new,
    then you're going to want to go with a native compilation like PhoneGap or Apache
    Cordova to get that capability.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 苹果的 iOS 6 和安卓的 JellyBean 都可以访问它们的文件系统中的照片以及相机。当然，这些是这两个平台的最新版本。如果你打算支持许多仍然在货架上销售的过时的
    Android 设备（2.3 2.4），好像它们是全新的一样，那么你需要选择本地编译，比如 PhoneGap 或 Apache Cordova 来获取这个功能。
- en: '[PRE15]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The following screenshot has iOS to the left and Android to the right:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示 iOS 在左边，Android 在右边：
- en: '![Camera](img/0069_10_08.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![相机](img/0069_10_08.jpg)'
- en: APIs on the horizon
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 即将推出的 API
- en: 'Mozilla is doing a lot to push the mobile web API envelope. Here is what is
    now on the horizon and will probably be ready to use in less then two years:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: Mozilla 正在大力推动移动网络 API 的发展。以下是即将到来并且可能在不到两年内就可以使用的内容：
- en: battery levels
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电池电量
- en: charging status
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 充电状态
- en: ambient light sensors
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 环境光传感器
- en: proximity sensors
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接近传感器
- en: vibration
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 振动
- en: contacts
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 联系人
- en: network information
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络信息
- en: mobile connection (carrier, signal strength, and so on)
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移动连接（运营商、信号强度等）
- en: Web SMS
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web 短信
- en: Web Bluetooth
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web 蓝牙
- en: Web FM
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web FM
- en: Archive API (opening and reading contents from compressed folders)
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存档 API（打开和读取来自压缩文件的内容）
- en: If you want to read more, check out [https://wiki.mozilla.org/WebAPI](https://wiki.mozilla.org/WebAPI).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想阅读更多，请查看 [https://wiki.mozilla.org/WebAPI](https://wiki.mozilla.org/WebAPI)。
- en: To app or not to app, that is the question
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择开发应用还是不开发应用，这是个问题
- en: Should you or should you not compile your project into a native app? Here are
    some things to consider.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 是否应该将你的项目编译成原生应用？以下是一些需要考虑的事项。
- en: Raining on the parade (take this seriously)
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下雨了（认真对待这个问题）
- en: 'When you compile your first project into an app, there is a certain thrill
    that you get. You did it! You made a real app! It is at this point that we need
    to remember the words of Dr. Ian Malcolm from the movie Jurassic Park (Go watch
    it again. I''ll wait):'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 当你把你的第一个项目编译成一个应用时，你会感到一种特殊的激动。你做到了！你做了一个真正的应用程序！在这一点上，我们需要记住《侏罗纪公园》电影中伊恩·马尔科博士的话（去重新看一遍吧。我等你）：
- en: '![Raining on the parade (take this seriously)](img/0069_10_09.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![下雨了（认真对待这个问题）](img/0069_10_09.jpg)'
- en: '"You stood on the shoulders of geniuses to accomplish something as fast as
    you could, and before you even knew what you had, you patented it, and packaged
    it, and slapped it on a plastic lunchbox, and now [bangs on the table] you''re
    selling it, you wanna sell it. Well... your scientists were so preoccupied with
    whether or not they could that they didn''t stop to think if they should."'
  id: totrans-125
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “你站在巨人的肩膀上，尽可能地做了一些事情，甚至在你知道你拥有什么之前，你就已经对它进行了专利申请，打包了它，把它塞进了一个塑料午餐盒里，现在 [敲打桌子]
    你在卖它，你想卖它。好吧……你的科学家们是如此专注于他们是否能够做到，以至于他们没有停下来思考他们是否应该。”
- en: These words are very close to prophetic for us. In the end, their own creation
    ate most of the guests for lunch.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 这些话对我们来说很接近预言性质。最后，他们自己的创造吞食了大部分客人。
- en: According to this report from August 2012 [http://www.webpronews.com/over-two-thirds-of-the-app-store-has-never-been-downloaded-2012-08](http://www.webpronews.com/over-two-thirds-of-the-app-store-has-never-been-downloaded-2012-08)
    (and several others like it that I've seen before), *over two-thirds of all apps
    on the app stores have never been downloaded*. Not even once! So, realistically,
    app stores are where most projects go to die.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 根据2012年8月的这份报告[http://www.webpronews.com/over-two-thirds-of-the-app-store-has-never-been-downloaded-2012-08](http://www.webpronews.com/over-two-thirds-of-the-app-store-has-never-been-downloaded-2012-08)（以及我以前看过的几篇类似的报告），*超过三分之二的应用商店中的所有应用从未被下载过*。甚至没有一次！所以，现实情况是，大多数项目在应用商店中被抛弃。
- en: Even if your app is discovered, the likelihood that anyone will use it for any
    significant period of time is astonishingly small. According to this article in
    Forbes ([http://tech.fortune.cnn.com/2009/02/20/the-half-life-of-an-iphone-app/](http://tech.fortune.cnn.com/2009/02/20/the-half-life-of-an-iphone-app/)),
    most apps are abandoned in the space of minutes and never opened again. Paid apps
    last about twice as long, before either being forgotten or removed. Games have
    some staying power, but let us be honest, jQuery Mobile isn't exactly a compelling
    gaming platform, is it?
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 即使你的应用被发现，任何人会长时间使用它的可能性令人惊讶地小。根据《福布斯》（[http://tech.fortune.cnn.com/2009/02/20/the-half-life-of-an-iphone-app/](http://tech.fortune.cnn.com/2009/02/20/the-half-life-of-an-iphone-app/)）中的一篇文章，大多数应用在几分钟内被放弃，再也不会被打开。付费应用的持续时间大约是之前的两倍，然后要么被遗忘，要么被删除。游戏有一些持久力，但坦率地说，jQuery
    Mobile并不是一个引人入胜的游戏平台，对吧？
- en: 'The Android world is in terrible shape. Devices can still be purchased running
    ancient versions of the OS, and carriers and hardware partners are not providing
    updates to them in anything even resembling a timely fashion. If you want to monitor
    the depths of sorrow that could be yours by embracing a native strategy, look
    here:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 安卓世界的情况糟糕透顶。仍然可以购买到运行古老版本操作系统的设备，而运营商和硬件合作伙伴在提供更新方面甚至没有及时性可言。如果你想了解采用本地策略可能带来的沉重压力，可以看看这里：
- en: '[http://developer.android.com/about/dashboards/index.html](http://developer.android.com/about/dashboards/index.html)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://developer.android.com/about/dashboards/index.html](http://developer.android.com/about/dashboards/index.html)'
- en: '![Raining on the parade (take this seriously)](img/0069_10_10.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![破坏幻想（认真对待）](img/0069_10_10.jpg)'
- en: You can see just how fractured the Android landscape is as well as how many
    older versions you'll probably have to support. Until Android and its business
    partner pull their collective heads out, Android will continue to be the Internet
    Explorer 6 of the native mobile world. You do *not* want to support that.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到安卓生态系统有多么分裂，以及你可能需要支持多少旧版本。在安卓及其商业伙伴摆脱束缚之前，安卓将继续成为本地移动世界的IE 6。你*不*想支持那个。
- en: On the flip side, if you're publishing strictly to the web, then every time
    your users visit your site, they'll be on the latest edition using the latest
    APIs, and you'll never have to worry about somebody using some out-of-date version.
    Do you have a security patch you need to apply? You can do it in seconds. If you're
    on the Apple app store, this patch could take days or even weeks.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，如果你严格发布到网络，那么每当用户访问你的网站时，他们都将使用最新版本和最新API，你永远不必担心有人使用过时的版本。你需要应用安全补丁吗？你可以在几秒钟内完成。如果你在苹果应用商店，这个补丁可能需要数天甚至数周。
- en: Three good reasons for compiling an app
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编译应用的三个好理由
- en: Yes, I know I just finished telling you about your slim chances of success and
    the fire and brimstone you will face for supporting apps. However, here are a
    few good reasons to make a real app. In fact, in my opinion, they're the only
    acceptable reasons.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，我知道我刚刚告诉过你成功的机会渺茫，以及你将面临支持应用的火海和硫磺。然而，以下是制作真正应用的几个好理由。实际上，在我看来，它们是唯一可接受的理由。
- en: The project itself IS the product
  id: totrans-136
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 项目本身就是产品
- en: This is the first and only sure sign that you need to package your project as
    an app. I'm not talking about selling things through your project. I'm talking
    about the project itself. It should be made into an app. May the force be with
    you.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 这是你需要将项目打包成应用的第一个也是唯一确定的迹象。我不是在说通过你的项目销售东西。我说的是项目本身。它应该制作成一个应用。愿原力与你同在。
- en: Access to native-only hardware capabilities
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 访问本地独有的硬件功能
- en: GPS and camera are reliably available for the two major platforms in their latest
    editions. iOS even supports accelerometers. However, if you're looking for more
    than this, you'll need to compile down to an app to get access to these APIs.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: GPS 和摄像头在它们的最新版本中，都可靠地为两个主要平台提供支持。iOS 甚至支持加速计。不过，如果你希望得到更多，你将需要编译成应用程序以获得这些
    API 的访问权限。
- en: Push notifications
  id: totrans-140
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 推送通知
- en: Do you like them? I don't know about you, but I get way too many push notifications;
    any app that gets too pushy either gets uninstalled or its notifications are completely
    turned off. I'm not alone in this. However, if you simply must have push notifications
    and can't wait for the web-based implementation, you'll have to compile an app.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 你喜欢它们吗？我不知道你，但我得到的推送通知太多了；任何一个过于张扬的应用要么被删除，要么完全关闭通知。我在这方面并不孤单。然而，如果你一定要有推送通知，而且不能等待基于网页的实现，你就必须编译一个应用程序。
- en: Supporting current customers
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 支持当前客户
- en: OK, this one is a stretch, but if you work in corporate America, you're going
    to hear it. The idea is that you're an established business and you want to give
    mobile support to your clients. You or someone above you has read a few whitepapers
    and/or case studies that show that almost 50 percent of people search in the app
    stores first.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，这有一定的牵强之处，但如果你在美国企业工作，你就会听到这个。这意味着你是一家成熟的企业，你希望为客户提供移动支持。你或者你的上级已经读过一些白皮书和/或案例研究，表明有将近`50%`的人首先在应用商店搜索。
- en: Even if that were true (which I'm still not sold on), you're talking to a businessperson.
    They understand money, expenses, and escalated maintenance. Once you explain to
    them the cost, complexity, and potential ongoing headaches of building and testing
    for all the platforms and their OS versions in the wild, it becomes a very appealing
    alternative to simply put out a marketing push to your current customers that
    you're now supporting mobile, and all they have to do is go to your site on their
    mobile device. Marketing folks are always looking for reasons to toot their horns
    at customers anyway. Marketing might still prefer to have the company icon on
    the customer's device to reinforce brand loyalty, but this is simply a matter
    of educating them that it can be done without an app.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 即使这是真的（我对此仍然没有把握），你要对一个商人说这些。他们懂得金钱、开销和增加的维护成本。一旦向他们解释了在各种平台和它们的操作系统版本中进行建设和测试的成本、复杂性和潜在的持续头疼之后，对于公司向现有客户推广支持移动端，让他们只需要在其移动设备上访问你的网站，这成为一个非常吸引人的替代方案。营销人员总是在寻找可以向客户吹嘘的理由。营销部门可能仍然倾向于在客户设备上显示公司的图标，以增强品牌忠诚度，但这只是需要教育他们，这可以在没有应用程序的情况下完成。
- en: You still may not be able to convince all the right people that apps are the
    wrong way to go when it comes to customer support. If you can't do it on your
    own, slap them on their heads with a little Jakob Nielson. If they won't listen
    to you, maybe they'll listen to him. I would defy anyone who says that the Nielsen
    Norman Group doesn't know what they're saying. See [http://www.nngroup.com/articles/mobile-sites-vs-apps-strategy-shift/](http://www.nngroup.com/articles/mobile-sites-vs-apps-strategy-shift/).
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 即使你可能无法说服所有正确的人认为应用程序对于客户支持是错误的选择。如果你自己做不到，就用一点 Jakob Nielson 的见解敲打他们的头颅。如果他们不听你的，也许他们会听他的。我敢说任何人反驳尼尔森·诺曼集团不知道他们在说什么的说法。参见
    [http://www.nngroup.com/articles/mobile-sites-vs-apps-strategy-shift/](http://www.nngroup.com/articles/mobile-sites-vs-apps-strategy-shift/)。
- en: '"Summary: Mobile apps currently have better usability than mobile sites, but
    forthcoming changes will eventually make a mobile site the superior strategy."'
  id: totrans-146
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '"总结：当前移动应用程序的可用性比移动网站更好，但即将发生的变化最终会使移动网站成为更加优越的策略。"'
- en: 'So the $64,000 question becomes: are we making something for right now or for
    the future? If we''re making it for right now, what are the criteria that should
    mark the retirement of the native strategy? Or do we intend to stay locked on
    it forever? Don''t go into that war without an exit strategy.'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，一个价值`64,000`美元的问题就是：我们是为现在还是为未来而生产的？如果我们是为现在而做，那么应该标志着本地策略退休的标准是什么？或者我们打算永远固守它吗？不要在没有退出战略的情况下参与那场战争。
- en: PhoneGap versus Apache Cordova
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PhoneGap 与 Apache Cordova
- en: Well, after all that, if you're still thinking of making a native app, I salute
    you. I admire your spirit and wish you the best of luck.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，在所有这些之后，如果你仍然想制作一个本地应用程序，我向你致敬。我钦佩你的精神，并祝你好运。
- en: Note
  id: totrans-150
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you Google "jquery mobile phonegap performance", you're going to find a *lot*
    of negative articles. The problems seem legion. Sluggish performance, screen blinking
    between transitions, and so on. Not that Sencha Touch or any other mobile web
    frameworks seem to be doing any better. Just be aware that it may not perform
    as well as it would over the web.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你搜索 "jquery mobile phonegap performance"，你会找到 *很多* 负面文章。问题似乎是无穷无尽的。性能低下，屏幕在转换之间闪烁，等等。并不是说
    Sencha Touch 或任何其他移动 Web 框架似乎做得更好。只是要意识到它可能不像在 Web 上运行时表现那样好。
- en: PhoneGap started out as a project to take regular HTML, JS, and CSS and package
    them nicely into a distributable app for any app store. Eventually, it became
    part of the Apache Software Foundation. At its core, PhoneGap *is* Apache Cordova.
    In fact, if you go the documentation site for Cordova, it's actually still hosted
    at [http://docs.phonegap.com/](http://docs.phonegap.com/).
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: PhoneGap 最初是一个将常规的 HTML、JS 和 CSS 打包成一个可在任何应用商店分发的应用程序的项目。最终，它成为了 Apache 软件基金会的一部分。在其核心，PhoneGap
    *是* Apache Cordova。事实上，如果你去 Cordova 的文档站点，它实际上仍然托管在 [http://docs.phonegap.com/](http://docs.phonegap.com/)。
- en: 'In addition to simply compiling down your app, you also get access to the following
    device-level APIs.:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 除了简单地编译你的应用程序之外，你还可以访问以下设备级别的 API：
- en: 'Accelerometer: Tap into the device''s motion sensor.'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加速度计：利用设备的运动传感器。
- en: 'Camera: Capture a photo using the device''s camera.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 相机：使用设备的相机拍摄照片。
- en: 'Capture: Capture media files using the device''s media capture applications.'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 捕获：使用设备的媒体捕获应用程序捕获媒体文件。
- en: 'Compass: Obtain the direction that the device is pointing to.'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指南针：获取设备指向的方向。
- en: 'Connection: Quickly check the network state and cellular network information.'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接：快速检查网络状态和蜂窝网络信息。
- en: 'Contacts: Work with the device''s contacts database.'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 联系人：使用设备的联系人数据库。
- en: 'Device: Gather device-specific information.'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设备：收集设备特定信息。
- en: 'Events: Hook into native events through JavaScript.'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 事件：通过 JavaScript 连接到本地事件。
- en: 'File: Hook into native file systems through JavaScript.'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件：通过 JavaScript 连接到本地文件系统。
- en: 'Geolocation: Make your application location-aware.'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 地理位置：使你的应用程序具有位置感知能力。
- en: 'Globalization: Enable representation of objects specific to a locale.'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 全球化：启用特定于区域设置的对象表示。
- en: 'InAppBrowser: Launch URLs in another in-app browser instance.'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: InAppBrowser：在另一个应用程序浏览器实例中启动 URL。
- en: 'Media: Record and play backaudio files.'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 媒体：记录并回放音频文件。
- en: 'Notification: Visual, audible, and tactile device notifications.'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通知：设备的视觉、听觉和触觉通知。
- en: 'Splashscreen: Show and hide the applications splash screen.'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动画面：显示和隐藏应用程序的启动画面。
- en: 'Storage: Hook into the device''s native storage options.'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储：连接到设备的原生存储选项。
- en: So far, so good. We get a lot more stuff we can do, and we can do it all in
    JavaScript.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，一切都很顺利。我们有更多的东西可以做，而且我们可以全部在 JavaScript 中完成。
- en: Next, we need to actually build our app. You'll need to download PhoneGap or
    Cordova onto your machine. Don't forget to download the SDKs for every platform
    you intend to support as well. No, wait, scratch that!
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要真正构建我们的应用程序。你需要在你的计算机上下载 PhoneGap 或 Cordova。不要忘记下载你打算支持的每个平台的 SDK。不，等等，划掉！
- en: '![PhoneGap versus Apache Cordova](img/0069_10_11.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![PhoneGap 与 Apache Cordova 对比](img/0069_10_11.jpg)'
- en: Now there is PhoneGap Build. It's a cloud-based build service for PhoneGap.
    You don't have to install any SDKs at all. PhoneGap Build just took all the work
    out of this. If you want it to compile iOS apps, you'll still to provide them
    with your developer certificates, but aside from that little hiccup, you're good
    to go.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 现在有了 PhoneGap Build。这是一个面向 PhoneGap 的基于云的构建服务。你根本不需要安装任何 SDK。PhoneGap Build
    只是把所有工作都做了。如果你想要编译 iOS 应用程序，你仍然需要提供开发者证书，但除了这一点小问题，一切都很顺利。
- en: 'To get started, all you have to do is log in with either your Adobe ID or your
    GitHub ID. Then either paste in the URL to the GitHub repo you want to build,
    or upload a zip file less than 9.5 MB in size:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用，你只需用你的 Adobe ID 或 GitHub ID 登录。然后，要么粘贴 GitHub 存储库的 URL，要么上传一个小于 9.5 MB
    的 zip 文件：
- en: '![PhoneGap versus Apache Cordova](img/0069_10_12.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![PhoneGap 与 Apache Cordova 对比](img/0069_10_12.jpg)'
- en: 'Next, you fill out a little information about the app itself :'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你需要填写关于应用程序本身的一些信息：
- en: '![PhoneGap versus Apache Cordova](img/0069_10_13.jpg)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![PhoneGap 与 Apache Cordova 对比](img/0069_10_13.jpg)'
- en: Click on the **Ready to build** button. Now just sit back and watch the pretty
    progress spinners do their thing.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**准备构建**按钮。现在只需坐下来，看着漂亮的进度指示器做它们的工作。
- en: '![PhoneGap versus Apache Cordova](img/0069_10_14.jpg)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![PhoneGap 与 Apache Cordova 对比](img/0069_10_14.jpg)'
- en: Look, they even give you a lovely little QR code to scan for downloading the
    app. The only reason it's giving a red symbol on iOS is because, at this point,
    I have not given them my developer certificates.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 看，他们甚至给了你一个可爱的小二维码，用于下载这个应用。在 iOS 上显示红色标志的唯一原因是，这一点上，我还没有提供给他们我的开发者证书。
- en: Summary
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: I don't know about you, but I'm exhausted. I really don't think there's any
    more that can be said about jQuery Mobile or its supporting technologies at this
    time. You've got examples on how to build things for a whole host of industries,
    and ways to deploy it through either the Web or PhoneGap Build. At this point,
    you should be quoting Bob the Builder. "Can we build it? Yes, we can!"
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 我不知道你怎么想，但我真的筋疲力尽了。我真的觉得在这个时候关于 jQuery Mobile 或其支持技术已经没有更多可说的了。你已经有了如何为许多行业构建东西的例子，以及通过
    Web 或 PhoneGap Build 部署它的方法。在这一点上，你应该引用建筑工人鲍勃的话。“我们能建造它吗？是的，我们能！”
- en: I hope this book has assisted and/or inspired you to go make something great.
    I hope you change the world and get filthy stinking rich doing it. I'd love to
    hear your success stories as you move forward. To let me know how you're doing,
    or to let me know of any errata, or even if you just have some questions, please
    don't hesitate to email me directly at `<[shane@roughlybrilliant.com](mailto:shane@roughlybrilliant.com)>`.
    Now, go be brilliant!
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望这本书对你有所帮助和/或启发，让你去做一些了不起的事情。我希望你改变世界，并且通过这样做获得巨额财富。在你前进的过程中，我很乐意听到你的成功故事。想要告诉我你的近况，或者指出任何勘误，甚至是有一些问题要问，欢迎直接给我发邮件到`<[shane@roughlybrilliant.com](mailto:shane@roughlybrilliant.com)>`。现在，去做一些精彩的事吧！
