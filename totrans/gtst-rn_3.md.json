["```js\n    npm install -g react-native-cli\n\n    ```", "```js\n    $ react-native init ReactNotes\n\n    ```", "```js\n      create .flowconfig\n      create .gitignore\n      create .watchmanconfig\n      create index.ios.js\n      create index.android.js\n      create ios/main.jsbundle\n      create ios/ReactNotes/AppDelegate.h\n      create ios/ReactNotes/AppDelegate.m\n      create ios/ReactNotes/Base.lproj/LaunchScreen.xib\n      create ios/ReactNotes/Images.xcassets/AppIcon.appiconset/Contents json\n      create ios/ReactNotes/Info.plist\n      create ios/ReactNotes/main.m\n      create ios/ReactNotesTests/ReactNotesTests.m\n      create ios/ReactNotesTests/Info.plist\n      create ios/ReactNotes.xcodeproj/project.pbxproj\n      create ios/ReactNotes.xcodeproj/xcshareddata/xcschemes/ReactNotes.xcscheme\n      create android/app/build.gradle\n      create android/app/proguard-rules.pro\n      create android/app/src/main/AndroidManifest.xml\n      create android/app/src/main/res/values/strings.xml\n      create android/app/src/main/res/values/styles.xml\n      create android/build.gradle\n      create android/gradle.properties\n      create android/settings.gradle\n      create android/app/src/main/res/mipmap-hdpi/ic_launcher.png\n      create android/app/src/main/res/mipmap-mdpi/ic_launcher.png\n      create android/app/src/main/res/mipmap-xhdpi/ic_launcher.png\n      create android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png\n      create android/gradle/wrapper/gradle-wrapper.jar\n      create android/gradle/wrapper/gradle-wrapper.properties\n      create android/gradlew\n      create android/gradlew.bat\n      create android/app/src/main/java/com/reactnotes/MainActivity.java\n    ```", "```js\n       Open /Users/ethanholmes/ReactNotes/ios/ReactNotes.xcodeproj in Xcode\n       Hit Run button\n    ```", "```js\n       Have an Android emulator running, or a device connected\n       cd /Users/ethanholmes/ReactNotes\n       react-native run-android\n    ```", "```js\n$ react-native run-android\n\n```", "```js\n/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n */\n'use strict';\n\nvar React = require('react-native');\nvar {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View,\n} = React;\n\nvar ReactNotes = React.createClass({\n  render: function() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.welcome}>\n          Welcome to React Native!\n        </Text>\n        <Text style={styles.instructions}>\n          To get started, edit index.ios.js\n        </Text>\n        <Text style={styles.instructions}>\n          Press Cmd+R to reload,{'\\n'}\n          Cmd+D or shake for dev menu\n        </Text>\n      </View>\n    );\n  }\n});\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10,\n  },\n  instructions: {\n    textAlign: 'center',\n    color: '#333333',\n    marginBottom: 5,\n  },\n});\n\nAppRegistry.registerComponent('ReactNotes', () => ReactNotes);\n```", "```js\nimport React, {\n    Text,\n    View\n} from 'react-native';\n\nexport default class SimpleButton extends React.Component {\n  render () {\n    return (\n      <View>\n        <Text>Simple Button</Text>\n      </View>\n    );\n  }\n}\n```", "```js\nimport React, {\n  AppRegistry,\n  StyleSheet,\n  View\n} from 'react-native';\n\nimport SimpleButton from './App/Components/SimpleButton';\n\nclass ReactNotes extends React.Component {\n  render () {\n    return (\n      <View style={styles.container}>\n        <SimpleButton />\n      </View>\n    );\n  }\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  }\n});\nAppRegistry.registerComponent('ReactNotes', () => ReactNotes);\n```", "```js\n  import React, {\n  Text,\n  TouchableOpacity,\n  View\n} from 'react-native';\n\nexport default class SimpleButton extends React.Component {\n  render () {\n    return (\n      <TouchableOpacity onPress={() => console.log('Pressed!')}>\n        <View>\n          <Text>Simple Button</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\n```", "```js\n  import React, {\n  Text,\n  TouchableOpacity,\n  View\n} from 'react-native';\n\nexport default class SimpleButton extends React.Component {\n  render () {\n    return (\n      <TouchableOpacity onPress={this.props.onPress}>\n        <View>\n          <Text>{this.props.customText || 'Simple Button'}</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nSimpleButton.propTypes = {\n  onPress: React.PropTypes.func.isRequired,\n  customText: React.PropTypes.string\n};\n```", "```js\nimport React, {\n  AppRegistry,\n  Navigator,\n  StyleSheet,\n  View\n} from 'react-native';\n\nrender () {\n  return (\n    <Navigator\n      initialRoute={{name: 'home'}}\n      renderScene={this.renderScene}\n    />\n  );\n}\n```", "```js\nclass ReactNotes extends React.Component {\n  renderScene (route, navigator) {\n     ...\n  }\n  render () {\n    ...\n  }\n}\n```", "```js\nrenderScene (route, navigator) {\n  switch (route.name) {\n    case 'home':\n      return (\n        <View style={styles.container}>\n          <SimpleButton\n            onPress={() => console.log('Pressed!')}\n            customText='Create Note'\n          />\n        </View>\n      );\n    case 'createNote':\n  }\n}\n```", "```js\nimport React, {\n  StyleSheet,\n  Text,\n  View\n} from 'react-native';\n\nexport default class NoteScreen extends React.Component {\n  render () {\n    return (\n      <View style={styles.container}>\n        <Text>Create Note Screen!</Text>\n      </View>\n    );\n  }\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  }\n});\n```", "```js\nimport NoteScreen from './App/Components/NoteScreen';\n\nclass ReactNotes extends React.Component {\n  renderScene (route, navigator) {\n    switch (route.name) {\n      case 'home':\n        return (\n          <View style={styles.container}>\n            <SimpleButton\n              onPress={() => {\n                navigator.push({\n                  name: 'createNote'\n                });\n              }}\n              customText='Create Note'\n            />\n          </View>\n        );\n      case 'createNote':\n        return (\n            <NoteScreen />\n        );\n    }\n  }\n```", "```js\nrender () {\n  return (\n    <Navigator\n      initialRoute={{name: 'home'}}\n      renderScene={this.renderScene}\n      navigationBar={\n        <Navigator.NavigationBar\n          routeMapper={NavigationBarRouteMapper}\n        />\n      }\n    />\n  );\n}\n```", "```js\nvar NavigationBarRouteMapper = {\n  LeftButton: function(route, navigator, index, navState) {\n    ...\n  },\n\n  RightButton: function(route, navigator, index, navState) {\n    ...\n  },\n\n  Title: function(route, navigator, index, navState) {\n    ...\n  }\n};\n```", "```js\nvar NavigationBarRouteMapper = {\n  ...\n\n  RightButton: function(route, navigator, index, navState) {\n    switch (route.name) {\n      case 'home':\n        return (\n          <SimpleButton\n            onPress={() => {\n              navigator.push({\n                name: 'createNote'\n              });\n            }}\n            customText='Create Note'\n          />\n        );\n      default:\n         return null;\n    }\n  },\n\n  ...\n};\n```", "```js\nvar NavigationBarRouteMapper = {\n  LeftButton: function(route, navigator, index, navState) {\n    switch (route.name) {\n      case 'createNote':\n        return (\n          <SimpleButton\n            onPress={() => navigator.pop()}\n            customText='Back'\n           />\n        );\n      default:\n        return null;\n    }\n  },\n\n  ...\n};\n```", "```js\nvar NavigationBarRouteMapper = {\n  ...\n\n  Title: function(route, navigator, index, navState) {\n    switch (route.name) {\n      case 'home':\n        return (\n          <Text>React Notes</Text>\n        );\n      case 'createNote':\n        return (\n          <Text>Create Note</Text>\n        );\n    }\n  }\n};\n```", "```js\nimport React, {\n  StyleSheet,\n  Text,\n  View\n  } from 'react-native';\nexport default class HomeScreen extends React.Component {\n  render () {\n    return (\n      <View style={styles.container}>\n        <Text>Home</Text>\n      </View>\n    );\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  }\n});\n```", "```js\nimport HomeScreen from './App/Components/HomeScreen';\n\n...\n\nclass ReactNotes extends React.Component {\n  renderScene (route, navigator) {\n    switch (route.name) {\n      case 'home':\n        return (\n          <HomeScreen />\n        );\n      case 'createNote':\n        return (\n          <NoteScreen />\n        );\n    }\n  }\n\n  ...\n\n}\n```", "```js\nimport React, {\n  StyleSheet,\n  TextInput,\n  View\n}from 'react-native';\n```", "```js\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 64\n  },\n  title: {\n    height: 40\n  },\n  body: {\n    flex: 1\n  }\n});\n```", "```js\nrender () {\n  return (\n    <View style={styles.container}>\n      <TextInput placeholder=\"Untitled\"\n        style={styles.title}/>\n      <TextInput multiline={true}placeholder=\"Start typing\" style={styles.body}/></View>\n  );\n}\n```", "```js\n<TextInput\n  ref=\"title\"\n  autoFocus={true}\n  placeholder=\"Untitled\"\n style={styles.title}\n/>\n```", "```js\n<TextInput\n  ref=\"body\"\n  multiline={true}\n  placeholder=\"Start typing\"\n  style={styles.body}\n/>\n```", "```js\n<TextInput\n  autoFocus={true}\n  placeholder=\"Untitled\"\n  style={styles.title}\n  onEndEditing={(text) => {this.refs.body.focus()}}\n  />\n```"]