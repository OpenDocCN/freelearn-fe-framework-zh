- en: '18'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '18'
- en: Next Steps and Further Resources
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下一步和进一步资源
- en: Learning Objectives
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 学习目标
- en: 'By the end of this chapter, you will know the following:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将了解以下内容：
- en: How to make the move from reading the book to applying your knowledge
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何从阅读书籍到应用你的知识
- en: How to best practice what you’ve learned throughout this book
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何最好地实践本书中学到的内容
- en: Which React topics you can explore next
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以探索的下一个React主题
- en: Which popular third-party React packages might be worth a closer look
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哪些流行的第三方React包可能值得仔细研究
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: With this book, you’ve gotten a thorough (re-)introduction to the key React
    concepts you must know in order to work with React successfully, providing both
    theoretical and practical guidance for components, props, state, context, React
    Hooks, routing, server-side React, and many other crucial concepts.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这本书，你已经全面（重新）了解了你必须知道的、为了成功使用React的关键React概念，为组件、属性、状态、上下文、React Hooks、路由、服务器端React以及许多其他关键概念提供了理论和实践指导。
- en: But React is more than just a collection of concepts and ideas. It powers an
    entire ecosystem of third-party libraries that help with many common React-specific
    problems. There is also a huge React community that shares solutions for common
    problems or popular patterns.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 但React不仅仅是一系列概念和想法的集合。它支持一个完整的第三方库生态系统，帮助解决许多常见的React特定问题。还有一个庞大的React社区，分享解决常见问题或流行模式的解决方案。
- en: In this last, brief chapter, you’ll learn about some of the most important and
    popular third-party libraries you might want to explore. You will also be introduced
    to other great resources that help with learning React. In addition, this chapter
    will share some recommendations on how best to proceed and continue to grow as
    a React developer after finishing this book.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个最后的、简短的章节中，你将了解一些你可能想要探索的最重要和最受欢迎的第三方库。你还将被介绍到其他有助于学习React的优质资源。此外，本章还将分享一些关于如何在完成本书后作为React开发者继续前进和成长的建议。
- en: How Should You Proceed?
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你应该如何进行？
- en: Use the knowledge you gained throughout this book as a foundation to build upon.
    Dive deeper into Next.js, explore other popular React libraries, or learn more
    about React alternatives like Angular or Vue. Web development offers a broad range
    of technologies, languages, libraries, patterns, and concepts. And while this
    can sometimes feel overwhelming, it’s also a vast pool of opportunities to grow
    as a developer and become better at solving complex problems.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 以本书中获得的知识为基础，进一步深入探索Next.js，研究其他流行的React库，或者了解更多关于React替代品如Angular或Vue的内容。Web开发提供了广泛的技术、语言、库、模式和概念。虽然这有时可能让人感到不知所措，但它也是一个巨大的机会池，可以帮助开发者成长并更好地解决复杂问题。
- en: But besides learning more about React and related packages, it’s also important
    to apply your knowledge and practice what you’ve learned. Don’t just read book
    after book. Instead, use your newly gained skills to build some demo projects.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 除了学习更多关于React和相关包的知识外，应用你的知识和实践你所学的也很重要。不要只是读一本书又一本书。相反，利用你新获得的知识来构建一些演示项目。
- en: You don’t have to build the next Amazon or TikTok. There’s a reason why applications
    like these are built by huge teams. But you should build small demo projects that
    focus on a couple of core problems. You could, for example, build a very basic
    website that allows users to store and view their daily goals, or build a basic
    Meetups page where visitors can organize and join meetup events.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你不必构建下一个亚马逊或TikTok。这些应用程序之所以由大型团队构建，是有原因的。但你应该构建一些关注几个核心问题的简单演示项目。例如，你可以构建一个非常基础的网站，让用户能够存储和查看他们的每日目标，或者构建一个基本的Meetups页面，让访客可以组织和参加聚会活动。
- en: 'To put it simply: practice is key. You must apply what you’ve learned and build
    stuff. Because by building demo projects, you’ll automatically encounter problems
    that you’ll have to solve without a solution at hand. You’ll have to try out different
    approaches and search the internet for possible (partial) solutions. Ultimately,
    this is how you learn the most and how you develop your problem-solving skills.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 简单来说：实践是关键。你必须应用你所学的知识并构建一些东西。因为通过构建演示项目，你将自动遇到需要解决的问题，而你手头并没有解决方案。你必须尝试不同的方法，并在互联网上搜索可能的（部分）解决方案。最终，这就是你学习最多和培养解决问题的技能的方式。
- en: You won’t find a solution for all problems in this book, but this book does
    give you the basic tools and building blocks that will help you with those problems.
    Solutions are then built by combining these building blocks and by building upon
    the knowledge gathered throughout this book.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 你在这本书中找不到所有问题的解决方案，但这本书确实提供了基本的工具和构建块，这将帮助你解决这些问题。解决方案是通过组合这些构建块，并在本书中收集到的知识基础上构建而成的。
- en: Become a Fullstack React Developer
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 成为全栈 React 开发者
- en: This book already covered crucial concepts to get you started with React-based
    backend development. *Chapters 15* , *16* , and *17* explored server-side rendering,
    Next.js, server components and actions, and related features that will be needed
    to build fullstack React apps.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 本书已经涵盖了开始基于 React 的后端开发所需的关键概念。第 *15* 章、*16* 章和 *17* 章探讨了服务器端渲染、Next.js、服务器组件和动作以及构建全栈
    React 应用所需的相关功能。
- en: Consequently, diving deeper into Next.js might be an interesting next step.
    With the help of the official documentation or online courses like my *Next.js
    & React – The Complete Guide* course, you can acquire the necessary knowledge
    to become a fullstack React developer.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，深入研究 Next.js 可能是下一步有趣的选择。借助官方文档或像我的 *Next.js & React – The Complete Guide*
    在线课程，你可以获得成为全栈 React 开发者所需的知识。
- en: 'And it’s not just Next.js: you can also explore alternatives like Remix and
    React Router (which is receiving more fullstack capabilities) or TanStack Start.
    If you don’t care about having a fully integrated fullstack development experience
    as, for example, provided by Next.js, you can also learn more about connecting
    a decoupled backend to a React frontend—i.e., you can learn how to build and connect
    a separate backend (REST or GraphQL) API with Node.js or any other backend language.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 而不仅仅局限于 Next.js：你还可以探索像 Remix 和 React Router（它正在获得更多的全栈功能）或 TanStack Start 这样的替代方案。如果你不介意没有像
    Next.js 提供的完全集成的全栈开发体验，你还可以了解更多关于将解耦的后端连接到 React 前端的知识——即，你可以学习如何使用 Node.js 或任何其他后端语言构建和连接一个独立的后端（REST
    或 GraphQL）API。
- en: Becoming a fullstack developer is not something you have to do, though. It’s
    an option, but depending on your personal preferences or your role in a team,
    it might not be the right option for you. It’s just important to know that building
    fullstack applications with React is one possible path you could explore—and that
    it’s a path that became considerably easier with Next.js and similar frameworks.
    Either way, as mentioned before, you should also apply your React knowledge and
    practice by building demo projects, no matter whether you’re diving deeper into
    fullstack development or not.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 成为全栈开发者并不是你必须做的事情。这是一个选择，但根据你个人的偏好或你在团队中的角色，这可能不是最适合你的选择。重要的是要知道，使用 React 构建全栈应用是一条可能的探索路径——而且随着
    Next.js 和类似框架的出现，这条路径变得相当容易。无论如何，如前所述，你应该通过构建演示项目来应用你的 React 知识和实践，无论你是否在深入研究全栈开发。
- en: Interesting Problems to Explore
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 值得探索的有趣问题
- en: So, which problems and demo apps could you explore and try to build?
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，你可以探索和尝试构建哪些问题和演示应用？
- en: In general, you can try to build (simplified) clones of popular web apps (such
    as a highly simplified version of Amazon). Ultimately, your imagination is the
    limit, but in the following sections, you will find details and advice for three
    project ideas and the challenges that come with them.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，你可以尝试构建（简化版）流行的网络应用的克隆（例如亚马逊的高度简化版）。最终，你的想象力是无限的，但在接下来的几节中，你将找到三个项目想法的详细信息和相关挑战的建议。
- en: Build a Shopping Cart
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 构建购物车
- en: A very common type of website is an online shop. You can find online shops for
    all kinds of products—ranging from physical goods such as books, clothing, or
    furniture to digital products such as video games or movies—and building such
    an online shop would be an interesting project idea and challenge.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 一种非常常见的网站类型是在线商店。你可以找到各种产品的在线商店——从书籍、服装或家具等实体商品到视频游戏或电影等数字产品——构建这样的在线商店将是一个有趣的项目想法和挑战。
- en: Of course, online shops do come with many features that can’t be built with
    client-side React alone. For example, the whole payment process is mostly a backend
    task where requests must be handled by servers. Inventory management would be
    another feature that takes place in databases and on servers, and not in the browsers
    of your website visitors. Consequently, you can use Next.js (or one of the alternatives
    mentioned earlier in this chapter) to take care of this backend functionality
    and thus build a fullstack React application. But even if you don’t want to dive
    into fullstack development, online shops contain many features that require interactive
    user interfaces (and, therefore, benefit from using React’s client-side features).
    For example, you can set up different pages that show lists of available products,
    product details, or the current status of an order, as you learned in *Chapter
    13* , *Multipage Apps with React Router* . You also typically have shopping carts
    on websites. Building such a cart, combined with the functionality of adding and
    removing items, would similarly utilize several React features—for example, state
    management, as explained in *Chapter 4* , *Working with Events and State* .
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，在线商店确实拥有许多仅凭客户端React无法构建的功能。例如，整个支付过程主要是一个后端任务，其中请求必须由服务器处理。库存管理将是另一个在数据库和服务器上发生，而不是在网站访客的浏览器中发生的功能。因此，你可以使用Next.js（或本章前面提到的替代方案之一）来处理这些后端功能，从而构建一个全栈React应用程序。但即使你不想深入全栈开发，在线商店也包含许多需要交互式用户界面的功能（因此，使用React的客户端功能会受益）。例如，你可以设置不同的页面来显示可用的产品列表、产品详情或订单的当前状态，正如你在*第13章*，*使用React
    Router的多页应用程序*中学到的。你通常在网站上还有购物车。构建这样一个购物车，结合添加和删除项目的功能，同样会利用到多个React功能——例如，状态管理，如*第4章*，*处理事件和状态*中解释的那样。
- en: It all starts with having a couple of pages (routes) for dummy products (that
    are hardcoded into the frontend code and not fetched from some backend), product
    details, and the shopping cart itself. The shopping cart displays items that need
    to be managed via app-wide state (e.g., via context, as covered in *Chapter 11*
    , *Working with Complex State* ), as website visitors must be able to add items
    to the cart from the product detail page. You will also need a broad variety of
    React components—many of which must be reusable (e.g., the individual shopping
    cart items that are displayed). Your knowledge of React components and props from
    *Chapter 2* , *Understanding React Components and JSX* , and *Chapter 3* , *Components
    and Props* , will help with that.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些都始于拥有几个用于虚拟产品（这些产品硬编码在前端代码中，而不是从某些后端获取）的页面（路由）、产品详情以及购物车本身。购物车显示需要通过应用程序全局状态（例如，通过上下文，如*第11章*，*处理复杂状态*中所述）管理的项目，因为网站访客必须能够从产品详情页面添加项目到购物车。你还需要各种各样的React组件——其中许多必须是可重用的（例如，显示的单独购物车项目）。你对React组件和属性的了解，来自*第2章*，*理解React组件和JSX*，以及*第3章*，*组件和属性*，将有助于此。
- en: The shopping cart state is also a non-trivial state. A simple list of products
    typically won’t do the trick—though you can, of course, at least apply your knowledge
    from *Chapter 5* , *Rendering Lists and Conditional Content* . Instead, you must
    check whether an item is already part of the cart or if it’s added for the first
    time. If it’s part of the cart already, you must update the quantity of the cart
    item. Of course, you’ll also need to ensure that users are able to remove items
    from the cart or reduce the quantity of an item. And if you want to get even fancier,
    you can even simulate price changes that must be factored in when updating the
    shopping cart state.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 购物车状态也是一个非平凡的状态。一个简单的产品列表通常不足以解决问题——尽管你当然至少可以应用你在*第5章*，*渲染列表和条件内容*中学到的知识。相反，你必须检查一个项目是否已经是购物车的一部分，或者它是否是第一次添加。如果它已经是购物车的一部分，你必须更新购物车中项目的数量。当然，你还需要确保用户能够从购物车中删除项目或减少项目的数量。而且，如果你想更加复杂，你甚至可以模拟在更新购物车状态时必须考虑的价格变化。
- en: As you can see, this extremely simple dummy online shop already offers quite
    a bit of complexity. Of course, as mentioned earlier, you could also add backend
    functionality and store dummy products in a database. If you want to, you can
    dive deeper into Next.js to build a more complex fullstack application based on
    React. This allows you to apply the knowledge you gained in *Chapter 15* , *Server-side
    Rendering &* *Building Fullstack Apps with Next.js* , and *Chapter 16* , *React
    Server Components & Server Actions* .
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，这个极其简单的虚拟在线商店已经提供了相当多的复杂性。当然，正如之前提到的，您也可以添加后端功能并将虚拟产品存储在数据库中。如果您愿意，可以更深入地学习Next.js，构建一个基于React的更复杂的全栈应用程序。这使您能够应用在*第15章*，*服务器端渲染与构建Next.js全栈应用程序*，以及*第16章*，*React服务器组件与服务器操作*中学到的知识。
- en: Build an Application’s Authentication System (User Signup and Login)
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 构建应用程序的认证系统（用户注册和登录）
- en: A lot of websites allow users to sign up or log in. For many websites, user
    authentication is required before performing certain tasks. For example, you must
    create a Google account before uploading videos to YouTube or using Gmail (and
    many other Google services). Similarly, an account is typically needed before
    taking paid online courses or buying (digital) video games online. You also can’t
    perform online banking without being logged in. And that’s just a short list;
    many more examples could be added, but you get the idea. User authentication is
    required for a broad variety of reasons on many websites.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 许多网站允许用户注册或登录。对于许多网站来说，在执行某些任务之前需要用户认证。例如，您必须创建一个Google账户，才能上传视频到YouTube或使用Gmail（以及许多其他Google服务）。同样，在在线购买（数字）视频游戏或参加付费在线课程之前通常也需要一个账户。您不登录也无法进行在线银行操作。这只是简短的一览；还有更多例子可以添加，但您已经明白了。在许多网站上，出于各种原因都需要用户认证。
- en: And on even more websites, it’s optionally available. For example, you might
    be able to order products as a guest, but you benefit from extra advantages when
    creating an account (e.g., you may track your order history or collect reward
    points).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在更多网站上，这通常是可选的。例如，您可能可以以访客身份订购产品，但创建账户时您将获得额外的优势（例如，您可以跟踪您的订单历史或收集奖励积分）。
- en: Of course, building your own version of YouTube is much too challenging to be
    a good practice project. There’s a reason why Google has thousands of developers
    on its payroll. However, you can identify and clone individual features, such
    as user authentication.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，构建自己的YouTube版本挑战性太强，不适合作为良好的实践项目。谷歌之所以雇佣了数千名开发者，是有原因的。然而，您可以识别并复制单个功能，例如用户认证。
- en: Build your own user authentication system with React. Make sure that users can
    sign up and log in. Add a few example pages (routes) to your website and find
    a way of making some pages only available to logged-in users. These targets might
    not sound like much, but you will actually face quite a lot of challenges along
    the way—challenges that force you to find solutions for brand-new problems.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 使用React构建自己的用户认证系统。确保用户可以注册和登录。向您的网站添加一些示例页面（路由），并找到一种方法使某些页面仅对已登录用户可用。这些目标可能听起来不多，但实际上您在实现过程中会遇到很多挑战——这些挑战迫使您为全新的问题找到解决方案。
- en: While you could just use some dummy (client-side) logic in your React app code
    to simulate HTTP requests that are sent to your servers behind the scenes, you
    could also add a real demo backend instead. That backend would need to store user
    accounts in a database, validate login requests, and send back authentication
    tokens that inform the React frontend about the current authentication status
    of a user. In your React app, these HTTP requests would be treated as side effects,
    as covered in *Chapter 8* , *Handling Side Effects* .
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然您可以在React应用程序代码中使用一些虚拟（客户端）逻辑来模拟发送到您后台服务器的HTTP请求，但您也可以添加一个真实的演示后端。该后端需要在数据库中存储用户账户，验证登录请求，并发送回认证令牌，告知React前端用户的当前认证状态。在您的React应用程序中，这些HTTP请求将被视为副作用，如*第8章*，*处理副作用*中所述。
- en: Again, if you want to use a real backend, you’ll also need to dive into backend
    development and either build a separate server-side application or use Next.js
    (or any similar fullstack React framework). Alternatively, you can also use services
    like Firebase, Supabase, Auth0, or one of the many other services that provide
    authentication backends for frontend applications. Either way, you can explore
    how to connect your React app to such a backend.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，如果你想要使用真正的后端，你还需要深入了解后端开发，要么构建一个单独的服务器端应用程序，要么使用Next.js（或任何类似的完整栈React框架）。或者，你也可以使用Firebase、Supabase、Auth0或许多其他提供前端应用程序认证后端的服务。无论哪种方式，你都可以探索如何将你的React应用程序连接到这样的后端。
- en: As you can tell, this “simple” project idea (or, rather, feature idea) presents
    a lot of challenges and will require you to build on your React knowledge and
    find solutions for a broad variety of problems.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，这个“简单”的项目想法（或者更确切地说，功能想法）提出了许多挑战，并将要求你基于React知识构建，并为广泛的问题找到解决方案。
- en: Build an Event Management Website
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 构建一个活动管理网站
- en: If you first were to build your own shopping cart system and get started with
    user authentication, you could then take it a step further and build a more complex
    website that combines these features (and offers new, additional features).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你首先尝试构建自己的购物车系统并开始用户认证，然后你可以更进一步，构建一个结合这些功能（并提供新的、额外的功能）的更复杂的网站。
- en: One such project idea would be an event management site. This is a website on
    which users can create accounts and, once they’re logged in, events. All visitors
    can then browse these events and register for them. It would be up to you whether
    registration as a guest (without creating an account first) is possible or not.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一个项目想法就是一个活动管理网站。这是一个用户可以创建账户，一旦登录，就可以创建活动的网站。所有访客都可以浏览这些活动并注册。是否允许作为访客注册（而不先创建账户）取决于你。
- en: It’s also your choice whether you want to add backend logic (that is, a server
    that handles requests and stores users and events in a database) or you will simply
    store all data in your React application (via the app-wide state). If you don’t
    add a backend, all data will be lost whenever the page is reloaded, and you can’t
    see the events created by other users on other machines, but you can still practice
    all these key React features.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以选择是否要添加后端逻辑（即处理请求并将用户和活动存储在数据库中的服务器）或者你将简单地通过应用范围内的状态存储所有数据。如果不添加后端，所有数据将在页面重新加载时丢失，你将无法在其他机器上看到其他用户创建的活动，但你仍然可以练习所有这些关键的React功能。
- en: 'There are many React features that are needed for this kind of dummy website:
    reusable components, pages (routes), component-specific and app-wide state, handling
    and validating user input, displaying conditional and list data, and much more.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这种类型的模拟网站，需要许多React功能：可重用组件、页面（路由）、组件特定的和全局状态、处理和验证用户输入、显示条件性和列表数据等等。
- en: Again, this is clearly not an exhaustive list of examples. You can build whatever
    you want. Be creative and experiment because you’ll only master React if you use
    it to solve problems.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，这显然不是示例的完整列表。你可以构建任何你想要的东西。发挥创意，进行实验，因为只有当你用它来解决问题时，你才能真正掌握React。
- en: Common and Popular React Libraries
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常见且流行的React库
- en: No matter which kind of React app you’re building, you’ll encounter many problems
    and challenges along the way. From handling and validating user input to sending
    HTTP requests, complex applications come with many challenges.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你正在构建哪种类型的React应用程序，你都会在过程中遇到许多问题和挑战。从处理和验证用户输入到发送HTTP请求，复杂的应用程序伴随着许多挑战。
- en: You can solve all challenges on your own and even write all the (React) code
    that’s needed on your own. And for practicing, this might indeed be a good idea.
    But as you’re building more and more complex apps, it might make sense to outsource
    certain problems.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以自己解决所有挑战，甚至自己编写所有需要的（React）代码。而且，为了练习，这确实是一个好主意。但随着你构建越来越复杂的应用程序，外包某些问题可能是有意义的。
- en: 'Thankfully, React features a rich and vibrant ecosystem that offers third-party
    packages that solve all kinds of common problems. Here’s a brief, non-exhaustive
    list of popular third-party libraries that might be helpful:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，React拥有丰富而充满活力的生态系统，提供了解决各种常见问题的第三方包。以下是一个简要的、非详尽的列表，列出了一些可能有所帮助的流行第三方库：
- en: '**TanStack Query** : A very popular library that helps with data fetching,
    caching, and management in React apps ( [https://tanstack.com/query/latest](https://tanstack.com/query/latest)
    ).'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**TanStack Query**：一个在 React 应用程序中帮助数据获取、缓存和管理的非常流行的库（[https://tanstack.com/query/latest](https://tanstack.com/query/latest)）。'
- en: '**Framer Motion** : A React-specific library that allows you to build and implement
    powerful, visually pleasing animations into your React apps ( [https://www.framer.com/motion/](https://www.framer.com/motion/)
    ).'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Framer Motion**：一个针对 React 的特定库，允许你在 React 应用程序中构建和实现强大且视觉上令人愉悦的动画（[https://www.framer.com/motion/](https://www.framer.com/motion/)）。'
- en: '**React Hook Form** : A library that simplifies the process of handling and
    validating user input ( [https://react-hook-form.com/](https://react-hook-form.com/)
    ).'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**React Hook Form**：一个简化处理和验证用户输入过程的库（[https://react-hook-form.com/](https://react-hook-form.com/)）。'
- en: '**Formik** : Another popular library that helps with form input handling and
    validation ( [https://formik.org/](https://formik.org/) ).'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Formik**：另一个流行的库，有助于处理和验证表单输入（[https://formik.org/](https://formik.org/)）。'
- en: '**Axios** : A general JavaScript library that simplifies the process of sending
    HTTP requests and handling responses ( [https://axios-http.com/](https://axios-http.com/)
    ).'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Axios**：一个通用的 JavaScript 库，简化了发送 HTTP 请求和处理响应的过程（[https://axios-http.com/](https://axios-http.com/)）。'
- en: '**Redux** : In the past, this was an essential React library. Nowadays, it
    can still be important as it can greatly simplify the management of (complex)
    cross-component or app-wide state ( [https://redux.js.org/](https://redux.js.org/)
    ).'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Redux**：在过去，这是一个必不可少的 React 库。如今，它仍然很重要，因为它可以极大地简化（复杂）跨组件或应用程序范围状态的管理（[https://redux.js.org/](https://redux.js.org/)）。'
- en: '**Zustand** : If you are in need of an extra library that helps with managing
    state in React apps, you can also explore Zustand—a very popular alternative to
    Redux ( [https://zustand-demo.pmnd.rs/](https://zustand-demo.pmnd.rs/) ).'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Zustand**：如果你需要额外的库来帮助管理 React 应用程序中的状态，你还可以探索 Zustand——这是 Redux 的一个非常受欢迎的替代品（[https://zustand-demo.pmnd.rs/](https://zustand-demo.pmnd.rs/)）。'
- en: This is just a short list of some helpful and popular libraries. Since there’s
    an endless number of potential challenges, you could also compile an infinite
    list of libraries. Search engines and Stack Overflow (a message board for developers)
    are your friends when it comes to finding more libraries that solve other problems.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是一个关于一些有用和流行库的简短列表。由于潜在的挑战数不胜数，你还可以编制一个无限的库列表。在寻找解决其他问题的库时，搜索引擎和 Stack Overflow（一个开发者论坛）是你的好朋友。
- en: Using TypeScript
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 TypeScript
- en: You may also consider using TypeScript, instead of plain JavaScript, for your
    React projects.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以考虑在你的 React 项目中使用 TypeScript，而不是纯 JavaScript。
- en: TypeScript is a JavaScript superset that adds strong and strict typing. As a
    result, using TypeScript can help you catch and avoid certain errors related to
    missing values or incorrect value types.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: TypeScript 是一种 JavaScript 超集，它增加了强类型和严格类型。因此，使用 TypeScript 可以帮助你捕捉并避免与缺失值或错误值类型相关的某些错误。
- en: You can get started with TypeScript for React with the help of the official
    documentation ( [https://react.dev/learn/typescript](https://react.dev/learn/typescript)
    ) or dedicated online courses or tutorials.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过官方文档（[https://react.dev/learn/typescript](https://react.dev/learn/typescript)）或专门的在线课程或教程开始使用
    TypeScript 进行 React 开发。
- en: Other Resources
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他资源
- en: As mentioned, React does have a highly vibrant ecosystem—and not just when it
    comes to third-party libraries. You’ll also find thousands of blog posts, discussing
    all kinds of best practices, patterns, ideas, and solutions to possible problems.
    Searching for the right keywords (such as *React form validation with Hooks* )
    will almost always yield interesting articles or helpful libraries.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 正如之前提到的，React 确实拥有一个高度活跃的生态系统——这不仅仅体现在第三方库方面。你还会发现成千上万的博客文章，讨论各种最佳实践、模式、想法以及可能的解决方案。通过搜索正确的关键词（例如
    *使用 Hooks 的 React 表单验证*），几乎总能找到有趣的文章或有用的库。
- en: You’ll also find plenty of paid online courses, such as the *React – The Complete
    Guide* course at [https://www.udemy.com/course/react-the-complete-guide-incl-redux/](https://www.udemy.com/course/react-the-complete-guide-incl-redux/)
    , and free tutorials on YouTube.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 你还会找到大量的付费在线课程，例如 [https://www.udemy.com/course/react-the-complete-guide-incl-redux/](https://www.udemy.com/course/react-the-complete-guide-incl-redux/)
    上的 *React – The Complete Guide* 课程，以及 YouTube 上的免费教程。
- en: 'The official documentation is another great place to explore as it contains
    deep dives into core topics as well as more tutorial articles: [https://react.dev/](https://react.dev/)
    .'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 官方文档是另一个很好的探索之地，因为它包含了深入核心主题的深入探讨以及更多教程文章：[https://react.dev/](https://react.dev/)。
- en: Beyond React for Web Applications
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 超越 React 网络应用
- en: This book focused on using React to build websites. This was for a couple of
    reasons. The first is that React, historically, was created to simplify the process
    of building complex web user interfaces, and React is powering more and more websites
    every day. It’s one of the most widely used client-side web development libraries
    and is more popular than ever before.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 本书专注于使用 React 来构建网站。这有几个原因。首先，React 最初是为了简化构建复杂网络用户界面的过程而创建的，而且 React 正在为越来越多的网站提供动力。它是使用最广泛的客户端网络开发库之一，而且比以往任何时候都更受欢迎。
- en: But it also makes sense to learn how to use React for web development because
    you need no extra tools—only a text editor and a browser.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，学习如何使用 React 进行网页开发也是有意义的，因为你不需要额外的工具——只需一个文本编辑器和浏览器即可。
- en: That said, React can be used to build user interfaces outside the browser and
    websites as well. With React Native and Ionic for React, you have two very popular
    projects and libraries that use React to build native mobile apps for iOS and
    Android.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，React 也可以用来构建浏览器外部的用户界面以及网站。借助 React Native 和为 React 定制的 Ionic，你拥有两个非常流行的项目库，它们使用
    React 来构建针对 iOS 和 Android 的原生移动应用。
- en: Therefore, after learning all these React essentials, it makes a lot of sense
    to also explore these projects. Pick up some React Native or Ionic courses (or
    use the official documentation) to learn how you can use all the React concepts
    covered in this book to build real native mobile apps that can be distributed
    through the platform app stores.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在学完所有这些 React 基础知识之后，探索这些项目也很有意义。挑选一些 React Native 或 Ionic 课程（或使用官方文档），了解你如何使用本书中涵盖的所有
    React 概念来构建可以分发到平台应用商店的真正原生移动应用。
- en: React can be used to build all kinds of interactive user interfaces for various
    platforms. Now that you’ve finished this book, you have the tools you need to
    build your next project with React—no matter which platform it targets.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: React 可以用于构建各种平台的各种交互式用户界面。现在你已经完成了这本书，你拥有了使用 React 构建下一个项目的工具——无论它针对哪个平台。
- en: Final Words
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最后的话
- en: With all the concepts discussed throughout this book, as well as the extra resources
    and starting points to dive deeper, you are well prepared to build feature-rich
    and highly user-friendly web applications with React.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 通过本书中讨论的所有概念，以及深入学习的额外资源和起点，你已充分准备好使用 React 构建功能丰富且高度用户友好的网络应用。
- en: No matter if it’s a simple blog or a complex Software-as-a-Service solution,
    you now know the key React concepts you need in order to build a React-driven
    web app your users will love.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 无论是一个简单的博客还是一个复杂的软件即服务解决方案，你现在都知道了构建用户喜爱的 React 驱动的网络应用所需的关键 React 概念。
- en: I hope you got a lot out of this book. Please share any feedback you have, for
    example, via X ( `@maxedapps` ) or by sending an email to `customercare@packt.com`
    .
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望你能从这本书中获得很多收获。请分享你的任何反馈，例如，通过 X (`@maxedapps`) 或发送电子邮件至 `customercare@packt.com`。
- en: Join Us on Discord
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加入我们的 Discord 社区
- en: Read this book alongside other users, AI experts, and the author himself.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他用户、AI 专家和作者本人一起阅读这本书。
- en: Ask questions, provide solutions to other readers, chat with the author via
    Ask Me Anything sessions, and much more.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 提出问题，为其他读者提供解决方案，通过“问我任何问题”的环节与作者聊天，等等。
- en: Scan the QR code or visit the link to join the community.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 扫描二维码或访问链接加入社区。
- en: '[https://packt.link/ReactKeyConcepts2e](https://packt.link/ReactKeyConcepts2e)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/ReactKeyConcepts2e](https://packt.link/ReactKeyConcepts2e)'
- en: '![img](img/QR_Code1044817876677025718.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![img](img/QR_Code1044817876677025718.png)'
