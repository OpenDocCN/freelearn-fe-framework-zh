["```js\nservice firebase.storage {\n  match /b/{bucket}/o {\n    match /{allPaths=**} {\n      allow read, write: if request.auth!=null;\n    }\n  }\n}\n```", "```js\nexport const environment = {\n    production: false,\n    firebase: {\n        apiKey: 'XXXX',\n        authDomain: 'friends-4d4fa.firebaseapp.com',\n        databaseURL: 'https://friends-4d4fa.firebaseio.com',\n        projectId: 'friends-4d4fa',\n        storageBucket: 'friends-4d4fa.appspot.com',\n        messagingSenderId: '321535044959'\n    }\n};\n```", "```js\n<div class=\"person-icon\">\n  <img [src]=\"profileImage\" style=\"max-width: 100%; max-height: \n   100%;\">\n  <input (change)=\"onPersonEdit($event)\" required accept=\".jpg\" \n   type=\"file\" style=\"opacity: 0.0; position: absolute; top:120px; \n   left: 30px; bottom: 0; right:0; width: 200px; height:200px;\" />\n</div>\n```", "```js\nexport class UserProfileComponent implements OnInit {\n\n    profileImage: any = '../../../assets/images/person_edit.png';\n ...\n}\n```", "```js\n<div class=\"user-profile\" *ngIf=\"user\">\n    <div class=\"person-icon\">\n      <img [src]=\"profileImage\" style=\"max-width: 100%; max-height: \n       100%;\">\n      <input (change)=\"onPersonEdit($event)\" required accept=\".jpg\"  \n        type=\"file\" style=\"opacity: 0.0; position: absolute;  \n        top:120px; left: 30px; bottom: 0; right:0; width: 200px; \n        height:200px;\" />\n    </div>\n...\n</div>\n<app-edit-dialog></app-edit-dialog>\n```", "```js\n.user-profile{\n    width: 50%;\n    margin-left: 24px;\n    margin-top: 10px;\n    .person-icon{\n        width: 200px;\n        height: 200px;\n    }\n    ...\n}\n```", "```js\nonPersonEdit(event) {\n   const selectedFiles: FileList = event.target.files;\n   const file = selectedFiles.item(0);\n   this.userService.addProfileImage(this.user, file);\n}\n```", "```js\n@Injectable()\nexport class UserService {\n\n   private fbStorage: any;\n\n   private basePath = '/profile';\n\n   /**\n    * Constructor\n    *\n    * @param {AngularFireDatabase} fireDb provides the functionality \n      related to authentication\n    */\n   constructor(private fireDb: AngularFireDatabase) {\n      this.fbStorage = fireDb.app.storage();\n   }\n  ...\n}\n```", "```js\n`${this.basePath}/${file.name}`\n```", "```js\nthis.fbStorage.ref(`${this.basePath}/${file.name}`).put(file)\n```", "```js\npublic addProfileImage(user: User, file: File) {\n  this.fbStorage.ref(`${this.basePath}/${file.name}`).\n  put(file).then(\n    snapshot => {\n      const imageUrl: string = snapshot.downloadURL;\n      this.fireDb.object(`${USERS_CHILD}/${user.uid}`).\n      update({image: imageUrl});\n      user.image = imageUrl;\n      this.saveUser(user);\n\n    }).catch((error) => {\n      ...\n  });\n}\n```", "```js\nngOnInit() {\n    this.user = this.userService.getSavedUser().getValue();\n    this.userService.getSavedUser().subscribe(\n        (user) => {\n            if (this.user.image) {\n                this.profileImage = this.user.image;\n            }\n        }\n    );\n}\n```", "```js\nhttps://firebasestorage.googleapis.com/v0/b/friends-4d4fa.appspot.com/o/profile%2Fclaire.jpg?alt=media&token=e00012af-c71c-48eb-92bc-4a0c9f989cbd\n```", "```js\n<img src=\"img/url\">\n```", "```js\n<img class=\"card-img-top\"  src={{friend.image}} alt=\"Card image cap\">\n```", "```js\n.main_container {\n    margin-top: 10px;\n    margin-left: 80px;\n    .content_container {\n        display: inline;\n        .list {\n            float: left;\n            .card-img-top {\n                height: 180px;\n                width: 260px;\n                background-image: \n                url('../../../assets/images/person.png');\n            }\n        }\n\n        .left {\n            float: left;\n            margin-top: 140px;\n        }\n\n        .right {\n            float: left;\n            margin-top: 140px;\n        }\n    }\n}\n```", "```js\npublic getDownloadURL(user: User, file: File) {    this.fbStorage.child('images/claire.jpg').getDownloadURL().then((url) => {\n        // assign to the img src\n    }).catch((error) => {\n        // Handle any errors\n    });\n}\n```", "```js\npublic deleteFile() {\n    this.fbStorage.child('images/claire.jpg').delete().then(function()  \n{\n        // File deleted successfully\n    }).catch((error) => {\n        // Handle any errors\n    });\n}\n```", "```js\npublic addProfileImage(user: User, file: File) {\n  this.fbStorage.ref(`${this.basePath}/${file.name}`).put(file).then(\n    snapshot => {\n      ...\n\n    }).catch((error) => {\n    const errorMessage = error.message;\n    alert(errorMessage);\n  });\n}\n```"]