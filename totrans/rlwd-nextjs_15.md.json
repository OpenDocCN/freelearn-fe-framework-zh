["```js\n<?php\n  session_start();\n  $_SESSION[\"first_name\"] = \"John\";\n  $_SESSION[\"last_name\"]  = \"Doe\";\n?>\n```", "```js\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI5MDhlYWZhNy03MWJkLTQyMDMtOGY3Ni1iNjA3MmNkMTFlODciLCJuYW1lIjoiSmFuZSBEb2UiLCJpYXQiOjE1MTYyMzkwMjJ9.HCl73CTg8960TvLP7i5mV2hKQlSJLaLAlmvHk38kL8o\n```", "```js\n// First chunk\n{\n  \"alg\": \"HS256\", // Algorithm used to sign the token\n  \"typ\": \"JWT\"    // Token type\n}\n// Second chunk\n{\n  \"sub\": \"908eafa7-71bd-4203-8f76-b6072cd11e87\", // JWT subject\n  \"name\": \"Jane Doe\",                            // User name\n  \"iat\": 1516239022                              // Issued at\n}\n```", "```js\nconst jwt = require('jsonwebtoken');\nconst myToken = jwt.sign(\n  {\n    name: 'Jane Doe',\n    admin: false,\n  },\n  'secretpassword',\n);\n```", "```js\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiSmFuZSBEb2UiLCJhZG1pbiI6ZmFsc2UsImlhdCI6MTYzNDEzMTI2OH0.AxLW0CwWpsIUk71WNbbZS9jTPpab8z4LVfJH6rsa4Nk\n```", "```js\nconst jwt = require('jsonwebtoken');\nconst myToken = jwt.sign(\n  {\n    name: 'Jane Doe',\n    admin: false,\n  },\n  'secretpassword',\n);\nconst tokenValue = jwt.verify(myToken, 'secretpassword');\nconsole.log(tokenValue);\n// => { name: 'Jane Doe', admin: false, iat: 1634131396 }\n```", "```js\nconst tokenValue = jwt.verify(\n'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiSmFuZSBEb2UiLCJhZG1pbiI6dHJ1ZSwiaWF0IjoxNjM0MTMxMjY4fQ.SAv6UDKdlb3CokrC8o3e_pZs_Fk0JyY2oDpYJ0bDUyU',\n  'secretpassword',\n);\n```", "```js\nJsonWebTokenError: invalid signature\n```", "```js\nnpx create-next-app with-custom-auth\n```", "```js\nexport default (req, res) => {}\n```", "```js\nexport default (req, res) => {\n  const { method } = req;\n  const { email, password } = req.body;\n  if (method !== 'POST') {\n    return res.status(404).end();\n  }\n}\n```", "```js\nexport default (req, res) => {\n  const { method } = req;\n  const { email, password } = req.body;\n  if (method !== 'POST') {\n    return res.status(404).end();\n  }\n  if (!email || !password) {\n    return res.status(400).json({\n      error: 'Missing required params',\n    });\n  }\n}\n```", "```js\nfunction authenticateUser(email, password) {\n  const validEmail = 'johndoe@somecompany.com';\n  const validPassword = 'strongpassword';\n  if (email === validEmail && password === validPassword) {\n    return {\n      id: 'f678f078-fcfe-43ca-9d20-e8c9a95209b6',\n      name: 'John Doe',\n      email: 'johndoe@somecompany.com',\n    };\n  }\n  return null;\n}\n```", "```js\nexport default (req, res) => {\n  const { method } = req;\n  const { email, password } = req.body;\n  if (method !== 'POST') {\n    return res.status(404).end();\n  }\n  if (!email || !password) {\n    return res.status(400).json({\n      error: 'Missing required params',\n    });\n  }\n  const user = authenticateUser(email, password);\n  if (user) {\n    return res.json({ user });\n  } else {\n    return res.status(401).json({\n      error: 'Wrong email of password',\n    });\n  }\n};\n```", "```js\nyarn add jsonwebtoken\n```", "```js\nimport jwt from 'jsonwebtoken';\nconst JWT_SECRET = 'my_jwt_password';\nexport function encode(payload) {\n  return jwt.sign(payload, JWT_SECRET);\n}\nexport function decode(token) {\n  return jwt.verify(token, JWT_SECRET);\n}\n```", "```js\nimport { encode } from '../../lib/jwt';\nfunction authenticateUser(email, password) {\n  const validEmail = 'johndoe@somecompany.com';\n  const validPassword = 'strongpassword';\n  if (email === validEmail && password === validPassword) {\n    return encode({\n      id: 'f678f078-fcfe-43ca-9d20-e8c9a95209b6',\n      name: 'John Doe',\n      email: 'johndoe@somecompany.com',\n    });\n  }\n  return null;\n}\n```", "```js\nyarn add cookie\n```", "```js\nimport { serialize } from 'cookie';\n// ...\nexport default (req, res) => {\n  const { method } = req;\n  const { email, password } = req.body;\n  if (method !== 'POST') {\n    return res.status(404).end();\n  }\n  if (!email || !password) {\n    return res.status(400).json({\n      error: 'Missing required params',\n    });\n  }\n  const user = authenticateUser(email, password);\n  if (user) {\n    res.setHeader('Set-Cookie',\n        serialize('my_auth', user, { path: '/', httpOnly:                   true })\n    );\n    return res.json({ success: true });\n  } else {\n    return res.status(401).json({\n      success: false,\n      error: 'Wrong email of password',\n    });\n  }\n};\n```", "```js\nimport styles from '../styles/app.module.css';\nexport default function ProtectedRoute() {\n  return (\n    <div className={styles.container}>\n      <h1>Protected Route</h1>\n      <p>You can't see me if not logged-in!</p>\n    </div>\n  );\n}\n```", "```js\n.container {\n  min-height: 100vh;\n  padding: 0 0.5rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n}\n```", "```js\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport styles from '../styles/app.module.css';\nexport default function Home() {\n  const [loginError, setLoginError] = useState(null);\n  return (\n    <div className={styles.container}>\n      <h1>Login</h1>\n      <form className={styles.form} \n        onSubmit={handleSubmit}>\n        <label htmlFor=\"email\">Email</label>\n        <input type=\"email\" id=\"email\" />\n        <label htmlFor=\"password\">Password</label>\n        <input type=\"password\" id=\"password\" />\n        <button type=\"submit\">Login</button>\n        {loginError && (\n          <div className={styles.formError}> \n            {loginError} </div>\n      )}\n      </form>\n    </div>\n  );\n}\n```", "```js\n.form {\n  display: flex;\n  flex-direction: column;\n}\n.form input {\n  padding: 0.5rem;\n  margin: 0.5rem;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  width: 15rem;\n}\n.form label {\n  margin: 0 0.5rem;\n}\n.form button {\n  padding: 0.5rem;\n  margin: 0.5rem;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  width: 15rem;\n  cursor: pointer;\n}\n.formError {\n  color: red;\n  font-size: 0.8rem;\n  text-align: center;\n}\n```", "```js\nexport default function Home() {\n  const router = useRouter();\n  const [loginError, setLoginError] = useState(null);\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const { email, password } = event.target.elements;\n    setLoginError(null);\n    handleLogin(email.value, password.value)\n      .then(() => router.push('/protected-route'))\n      .catch((err) => setLoginError(err.message));\n  };\n  // ...\n```", "```js\n// ...\nasync function handleLogin(email, password) {\n  const resp = await fetch('/api/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      email,\n      password,\n    }),\n  });\n  const data = await resp.json();\n  if (data.success) {\n    return;\n  }\n  throw new Error('Wrong email or password');\n}\n// ...\n```", "```js\nimport { parse } from 'cookie';\nimport { decode } from '../../lib/jwt';\nexport default (req, res) => {\n  if (req.method !== 'GET') {\n    return res.status(404).end();\n  }\n  const { my_auth } = parse(req.headers.cookie || '');\n  if (!my_auth) {\n    return res.json({ loggedIn: false });\n  }\n  return res.json({\n    loggedIn: true,\n    user: decode(my_auth),\n  });\n};\n```", "```js\n{\n  \"loggedIn\": true,\n  \"user\": {\n    \"id\": \"f678f078-fcfe-43ca-9d20-e8c9a95209b6\",\n    \"name\": \"John Doe\",\n    \"email\": \"johndoe@somecompany.com\",\n    \"iat\": 1635085226\n  }\n}\n```", "```js\nimport { useState, useEffect } from 'react';\nexport function useAuth() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [user, setUser]         = useState(null);\n  const [loading, setLoading]   = useState(true);\n  const [error, setError]       = useState(null);\n  useEffect(() => {\n    setLoading(true);\n    fetch('/api/get-session')\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.loggedIn) {\n          setLoggedIn(true);\n          setUser(data.user);\n        }\n      })\n      .catch((err) => setError(err))\n      .finally(() => setLoading(false));\n  }, []);\n  return {\n    user,\n    loggedIn,\n    loading,\n    error,\n  };\n}\n```", "```js\nimport { useRouter } from 'next/router';\nimport { useAuth } from '../lib/hooks/auth';\nimport styles from '../styles/app.module.css';\nexport default function ProtectedRoute() {\n  const router = useRouter();\n  const { loading, error, loggedIn } = useAuth();\n  if (!loading && !loggedIn) {\n    router.push('/login');\n  }\n  return (\n    <div className={styles.container}>\n      {loading && <p>Loading...</p>}\n      {error && <p> An error occurred. </p>}\n      {loggedIn && (\n        <>\n          <h1>Protected Route</h1>\n          <p>You can't see me if not logged-in!</p>\n        </>\n      )}\n    </div>\n  );\n}\n```", "```js\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { useAuth } from '../lib/hooks/auth';\nimport styles from '../styles/app.module.css';\n// ...\n```", "```js\n// ...\nexport default function Home() {\n  const router = useRouter();\n  const [loginError, setLoginError] = useState(null);\n  const { loading, loggedIn } = useAuth();\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n  if (!loading && loggedIn) {\n    router.push('/protected-route');\n    return null;\n  }\n// ...\n```", "```js\nnpx create-next-app with-auth0\n```", "```js\nAUTH0_SECRET=f915324d4e18d45318179e733fc25d7aed95ee6d6734c8786c03 AUTH0_BASE_URL='http://localhost:3000'AUTH0_ISSUER_BASE_URL='https://YOUR_AUTH0_DOMAIN.auth0.com'AUTH0_CLIENT_ID='YOUR_AUTH0_CLIENT_ID'AUTH0_CLIENT_SECRET='YOUR_AUTH0_CLIENT_SECRET'\n```", "```js\nimport { handleAuth } from '@auth0/nextjs-auth0';\nexport default handleAuth();\n```", "```js\nyarn add @auth0/nextjs-auth0\n```", "```js\nimport { UserProvider } from '@auth0/nextjs-auth0';\nexport default function App({ Component, pageProps }) {\n  return (\n    <UserProvider>\n      <Component {...pageProps} />\n    </UserProvider>\n  );\n}\n```", "```js\nimport { useUser } from '@auth0/nextjs-auth0';\nexport default function Index() {\n  const { user, error, isLoading } = useUser();\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n  if (error) {\n    return <div>{error.message}</div>;\n  }\n  if (user) {\n    return (\n      <div>\n        <h1> Welcome back! </h1>\n        <p>\n          You're logged in with the following email    \n            address:\n          {user.email}!\n        </p>\n        <a href=\"/api/auth/logout\">Logout</a>\n      </div>\n    );\n  }\n  return (\n    <div>\n      <h1> Welcome, stranger! </h1>\n      <p>Please <a href=\"/api/auth/login\">Login</a>.</p>\n    </div>\n  );\n}\n```"]