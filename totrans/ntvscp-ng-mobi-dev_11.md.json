["```js\nnpm install nativescript-dev-sass --save-dev\n```", "```js\n@import 'style/common';\n@import 'style/ios-overrides';\n```", "```js\n@import 'style/common';\n@import 'style/android-overrides';\n```", "```js\n// baseline theme colors\n@import '~nativescript-theme-core/scss/dark';\n// define our own variables or simply override those from the light set here...\n```", "```js\n// customized variables\n@import 'variables';\n// theme standard rulesets\n@import '~nativescript-theme-core/scss/index';\n// all the styles we had created previously in common.css migrated into here:\n\n.action-bar {\n  background-color:#101B2E; // we can now convert this to a SASS variable\n}\n\nPage {\n  background-color:#101B2E; // we can now convert this to a SASS variable\n}\n\nListView { \n  separator-color: transparent; \n}\n\n.track-name-float {\n  color: RGBA(136, 135, 3, .5); // we can now convert this to a SASS variable\n}\n\n.slider.fader {\n  background-color: #000; // we could actually use $black from core theme now\n}\n\n.list-group .muted {\n  opacity:.2;\n}\n\n```", "```js\n@import '~nativescript-theme-core/scss/platforms/index.android';\n// our custom Android overrides can go here if needed...\n```", "```js\n@import '~nativescript-theme-core/scss/platforms/index.ios';\n// our custom iOS overrides can go here if needed...\n```", "```js\n*.js\n*.map\n*.css\nhooks\nlib\nnode_modules\n/platforms\n```", "```js\n{\n  \"files.exclude\": {\n    \"**/app/**/*.css\": {\n \"when\": \"$(basename).scss\"\n },\n \"**/app/**/*.js\": {\n \"when\": \"$(basename).ts\"\n },\n    \"**/hooks\": true,\n    \"**/node_modules\": true,\n    \"platforms\": true\n  }\n}\n```", "```js\nnpm install nativescript-ngx-fonticon --save\n```", "```js\n*.js\n*.map\n*.css\n!app/assets/font-awesome.css\nhooks\nlib\nnode_modules\n/platforms\n```", "```js\n...\nimport { TNSFontIconModule } from 'nativescript-ngx-fonticon';\n...\n@NgModule({\n  imports: [\n    ...MODULES,\n    // font icons\n    TNSFontIconModule.forRoot({\n 'fa': './assets/font-awesome.css'\n }),\n    ...\n  ],\n  ...\n})\nexport class CoreModule {\n```", "```js\n...\n// libs\nimport { TNSFontIconService } from 'nativescript-ngx-fonticon';\n\n@Component({\n  moduleId: module.id,\n  selector: 'my-app',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n\n  constructor(private fontIconService: TNSFontIconService) {\n    ...\n```", "```js\n...\n// libs\nimport { TNSFontIconModule } from 'nativescript-ngx-fonticon';\n...\n@NgModule({\n  imports: [\n    NativeScriptModule, \n    NativeScriptRouterModule, \n    NativeScriptFormsModule, \n    TNSFontIconModule\n  ],\n  ...\n  exports: [\n    ...\n    TNSFontIconModule, ...PIPES  ]\n})\nexport class SharedModule {}\n```", "```js\n// customized variables\n@import 'variables';\n// theme standard rulesets\n@import '~nativescript-theme-core/scss/index';\n\n.fa {\n font-family: 'FontAwesome', fontawesome-webfont;\n font-size: 25;\n}\n```", "```js\n<ActionBar title=\"Compositions\" class=\"action-bar\">\n  <ActionItem (tap)=\"add()\" ios.position=\"right\">\n    <Button [text]=\"'fa-plus' | fonticon\" class=\"fa action-item\"></Button>\n  </ActionItem>\n</ActionBar>\n<ListView [items]=\"(mixer$ | async)?.compositions | orderBy: 'order'\" class=\"list-group\">\n  <ng-template let-composition=\"item\">\n    <GridLayout rows=\"auto\" columns=\"100,*,auto\" class=\"list-group-item\">\n      <Button [text]=\"'fa-pencil' | fonticon\" (tap)=\"edit(composition)\" \n        row=\"0\" col=\"0\" class=\"fa\"></Button>\n      <Label [text]=\"composition.name\" (tap)=\"select(composition)\" \n        row=\"0\" col=\"1\" class=\"h2\"></Label>\n      <Label [text]=\"composition.tracks.length\" \n        row=\"0\" col=\"2\" class=\"text-right\"> </Label>\n    </GridLayout>\n  </ng-template>\n</ListView>\n```", "```js\n.list-group {\n  background-color: $black;\n\n  .muted {\n    opacity:.2;\n  }\n}\n```", "```js\n<ListView #listview [items]=\"tracks | orderBy: 'order'\" \n  class=\"list-group\" [itemTemplateSelector]=\"templateSelector\">\n  <ng-template let-track=\"item\" nsTemplateKey=\"default\">\n    <GridLayout rows=\"auto\" columns=\"60,*,30\" \n      class=\"list-group-item\" [class.muted]=\"track.mute\">\n      <Button [text]=\"'fa-circle' | fonticon\" \n        (tap)=\"record(track)\" row=\"0\" col=\"0\" class=\"fa c-ruby\"></Button>\n      <Label [text]=\"track.name\" row=\"0\" col=\"1\" class=\"h2\"></Label>\n      <Label [text]=\"(track.mute ? 'fa-volume-off' : 'fa-volume-up') | fonticon\"\n        row=\"0\" col=\"2\" class=\"fa\" (tap)=\"track.mute=!track.mute\"></Label>\n    </GridLayout>\n  </ng-template>\n  ...\n```", "```js\n<ActionBar [title]=\"title\" class=\"action-bar\">\n  <ActionItem nsRouterLink=\"/mixer/home\">\n    <Button [text]=\"'fa-list-ul' | fonticon\" class=\"fa action-item\"></Button>\n  </ActionItem>\n  <ActionItem (tap)=\"toggleList()\" ios.position=\"right\">\n    <Button [text]=\"((uiState$ | async)?.trackListViewType == 'default' ? 'fa-sliders' : 'fa-list') | fonticon\" class=\"fa action-item\"></Button>\n  </ActionItem>\n  <ActionItem (tap)=\"recordAction.next()\" ios.position=\"right\">\n    <Button [text]=\"'fa-circle' | fonticon\" class=\"fa c-ruby action-item\"></Button>\n  </ActionItem>\n</ActionBar>\n```", "```js\n<StackLayout row=\"1\" col=\"0\" class=\"controls\">\n  <shuttle-slider></shuttle-slider>\n  <Button [text]=\"((playerState$ | async)?.player?.playing ? 'fa-pause' : 'fa-play') | fonticon\" (tap)=\"togglePlay()\" class=\"fa c-white t-30\"></Button>\n</StackLayout>\n```", "```js\n<ActionBar title=\"Record\" icon=\"\" class=\"action-bar\">\n  <NavigationButton visibility=\"collapsed\"></NavigationButton>\n  <ActionItem text=\"Cancel\" ios.systemIcon=\"1\" (tap)=\"cancel()\"></ActionItem>\n</ActionBar>\n<FlexboxLayout class=\"record\">\n  <GridLayout rows=\"auto\" columns=\"auto,*,auto\" class=\"p-10\" [visibility]=\"isModal ? 'visible' : 'collapsed'\">\n    <Button [text]=\"'fa-times' | fonticon\" (tap)=\"cancel()\" row=\"0\" col=\"0\" class=\"fa c-white\"></Button>\n  </GridLayout>\n  <Waveform class=\"waveform\"\n    [model]=\"recorderService.model\" \n    type=\"mic\" \n    plotColor=\"yellow\" \n    fill=\"false\" \n    mirror=\"true\" \n    plotType=\"buffer\">\n  </Waveform>\n  <StackLayout class=\"p-5\">\n    <FlexboxLayout class=\"controls\">\n      <Button [text]=\"'fa-backward' | fonticon\" class=\"fa text-center\" (tap)=\"recorderService.rewind()\" [isEnabled]=\"state == recordState.readyToPlay || state == recordState.playing\"></Button>\n      <Button [text]=\"recordBtn | fonticon\" class=\"fa record-btn text-center\" (tap)=\"recorderService.toggleRecord()\" [isEnabled]=\"state != recordState.playing\" [class.is-recording]=\"state == recordState.recording\"></Button>\n      <Button [text]=\"playBtn | fonticon\" class=\"fa text-center\" (tap)=\"recorderService.togglePlay()\" [isEnabled]=\"state == recordState.readyToPlay || state == recordState.playing\"></Button>\n    </FlexboxLayout>\n    <FlexboxLayout class=\"controls bottom\" [class.recording]=\"state == recordState.recording\">\n      <Button [text]=\"'fa-check' | fonticon\" class=\"fa\" [class.save-ready]=\"state == recordState.readyToPlay\" [isEnabled]=\"state == recordState.readyToPlay\" (tap)=\"recorderService.save()\"></Button>\n    </FlexboxLayout>\n  </StackLayout>\n</FlexboxLayout>\n```", "```js\n...\nexport class RecordComponent implements OnInit, OnDestroy { \n  ...\n  public recordBtn: string = 'fa-circle';\n public playBtn: string = 'fa-play';\n```", "```js\n@import '../../../style/variables';\n\n.record {\n  background-color: $slate;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: stretch;\n  align-content: center;\n}\n\n.record .waveform {\n  background-color: transparent;\n  order: 1;\n  flex-grow: 1;\n}\n\n.controls {\n  width: 100%;\n  height: 200;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n\n  .fa {\n    font-size: 40;\n    color: $white;\n\n    &.record-btn {\n      font-size: 70;\n      color: $ruby;\n      margin: 0 50 0 50;\n\n      &.is-recording {\n        color: $white;\n      }\n    }\n  }\n}\n\n.controls.bottom {\n  height: 90;\n  justify-content: flex-end;\n}\n\n.controls.bottom.recording {\n  background-color: #B0342D;\n}\n\n.controls.bottom .fa {\n  border-radius: 60;\n  font-size: 30;\n  height: 62;\n  width: 62;\n  padding: 2;\n  margin: 0 10 0 0;\n}\n\n.controls.bottom .fa.save-ready {\n  background-color: #42B03D;\n}\n\n.controls .btn {\n  color: #fff;\n}\n\n.controls .btn[isEnabled=false] {\n  background-color: transparent;\n  color: #777;\n}\n```", "```js\n// baseline theme colors\n@import '~nativescript-theme-core/scss/dark';\n\n$slate: #150e0c;\n\n// page\n$background: $black;\n// action-bar\n$ab-background: $black;\n```"]