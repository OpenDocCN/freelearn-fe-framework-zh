- en: Setting Up Your Development Environment
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 搭建开发环境
- en: Let's start with questioning the premise of this entire book, Angular itself.
    Why learn Angular, but not React, Vue, or some other framework? First, I won't
    be making an argument against learning any new tool. I believe that every tool
    has its place and purpose. Becoming somewhat proficient in React or Vue can only
    help further your understanding of Angular. **Single Page Application** (**SPA**)
    frameworks such as Backbone or Angular have grabbed my full attention since 2012,
    when I realized server-side rendered templates are impossible to maintain and
    cause very expensive rewrites of software systems. If you're intent on creating
    maintainable software, decoupling of APIs and business logic from the **user interface**
    (**UI**) is the prime directive you must abide by.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从质疑整本书的前提开始，即Angular本身。为什么学习Angular，而不是React、Vue或其他框架？首先，我不会反对学习任何新工具的论点。我相信每个工具都有其存在的场所和目的。熟练掌握React或Vue只会进一步加深您对Angular的理解。自2012年以来，像Backbone或Angular这样的**单页面应用**（**SPA**）框架就吸引了我的全部注意力，当时我意识到服务器端渲染的模板是不可能维护的，并且会导致软件系统的非常昂贵的重写。如果您打算创建可维护的软件，必须遵守的首要指令是将API和业务逻辑与**用户界面**（**UI**）解耦。
- en: The question is, why get good at Angular? I have found that Angular neatly fits
    the Pareto principal. It has become a mature and evolving platform, allowing you
    to achieve 80% of tasks with 20% of the effort. Furthermore, starting with version
    4, in **Long Term Support** (**LTS**) until October 2018, every major release
    is supported for 18 months, creating a continuum of learning, staying up-to-date
    and deprecating old features. From the perspective of a full-stack developer,
    this continuum is invaluable, since your skills and training will remain useful
    and fresh for many years to come.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 问题是，为什么要精通Angular？我发现Angular完美地符合帕累托原则。它已经成为一个成熟且不断发展的平台，使您能够用20%的努力完成80%的任务。此外，从版本4开始，在**长期支持**（**LTS**）直到2018年10月，每个主要版本都受到18个月的支持，创造了一个持续学习、保持最新和淘汰旧功能的过程。从全栈开发人员的角度来看，这种连续性是非常宝贵的，因为您的技能和培训将在未来多年内保持有用和新鲜。
- en: This first chapter will help you and your team members create a consistent development
    environment. It can be tough for beginners to create the correct development environment,
    which is essential for a frustration-free development experience. For seasoned
    developers and teams, achieving a consistent and minimal development environment
    remains a challenge. Once achieved, such a development environment helps avoid
    many IT-related issues, including ongoing maintenance, licensing, and upgrade
    costs.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这第一章将帮助您和您的团队成员创建一致的开发环境。对于初学者来说，创建正确的开发环境可能很困难，这对于无挫折的开发体验至关重要。对于经验丰富的开发人员和团队来说，实现一致和最小的开发环境仍然是一个挑战。一旦实现，这样的开发环境有助于避免许多与IT相关的问题，包括持续维护、许可和升级成本。
- en: Instructions on installing GitHub Desktop, Node.js, Angular CLI, and Docker
    will be a good reference from absolute beginners all the way to seasoned teams,
    along with strategies to automate and ensure the correct and consistent configuration
    of your development environment.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 安装GitHub桌面版、Node.js、Angular CLI和Docker的说明将成为从初学者到经验丰富的团队的良好参考，以及自动化和确保开发环境的正确和一致配置的策略。
- en: Feel free to skip this chapter if you already have a robust development environment
    setup; however, beware that some of the environmental assumptions declared in
    this chapter may result in some instructions not working for you in later chapters.
    Come back to this chapter as a reference if you run into issues or need to help
    a colleague, pupil, or friend set up their development environment.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经设置了强大的开发环境，可以跳过本章；但是，请注意，本章中声明的一些环境假设可能会导致后续章节中的一些指令对您不起作用。如果遇到问题或需要帮助同事、学生或朋友设置他们的开发环境，请返回本章作为参考。
- en: 'In this chapter, you will learn the following:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学到以下内容：
- en: 'Working with CLI package managers to install and update software:'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用CLI包管理器安装和更新软件：
- en: Chocolatey on Windows 10
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 10上的Chocolatey
- en: Homebrew on macOS X
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: macOS X上的Homebrew
- en: 'Using scripting to automate installation using:'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用脚本来自动化安装：
- en: Powershell on Windows 10
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 10上的Powershell
- en: Bash on macOS X
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: macOS X上的Bash
- en: Achieving a consistent and cross-platform development environment
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现一致且跨平台的开发环境
- en: 'You should be familiar with these:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该熟悉这些内容：
- en: JavaScript ES2015+
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JavaScript ES2015+
- en: Frontend development basics
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 前端开发基础知识
- en: RESTful APIs
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RESTful API
- en: 'The supported operating system are as follows:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 支持的操作系统如下：
- en: Windows 10 Pro v1703+ with PowerShell v5.1+
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 10 Pro v1703+与PowerShell v5.1+
- en: macOS Sierra v10.12.6+ with Terminal (Bash or Oh My Zsh)
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: macOS Sierra v10.12.6+与终端（Bash或Oh My Zsh）
- en: Most of the suggested software also works on Linux systems, but your experience
    may vary
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大多数建议的软件也适用于Linux系统，但您的体验可能会有所不同。
- en: 'The suggested cross-platform software is as follows:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 建议的跨平台软件如下：
- en: Node 8.10+ (except non-LTS versions)
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Node 8.10+（除非非LTS版本）
- en: npm 5.7.1+
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: npm 5.7.1+
- en: GitHub Desktop 1.0.0+
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GitHub Desktop 1.0.0+
- en: Visual Studio Code v1.16.0+
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Visual Studio Code v1.16.0+
- en: Google Chrome 64+
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Chrome 64+
- en: CLI package managers
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CLI包管理器
- en: Installing software through a **Graphical User Interface** (**GUI**) is slow
    and difficult to automate. As a full-stack developer, whether you're a Windows
    or a Mac user, you must rely on **Command-Line Interface** (**CLI**) package managers
    to efficiently install and configure the software you will be depending on. Remember,
    anything that can be expressed as a CLI command can also be automated.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 通过**图形用户界面**（**GUI**）安装软件是缓慢且难以自动化的。作为全栈开发人员，无论您是Windows用户还是Mac用户，您都必须依赖**命令行界面**（**CLI**）包管理器来高效地安装和配置您将依赖的软件。请记住，任何可以表示为CLI命令的东西也可以被自动化。
- en: Install Chocolatey for Windows
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为Windows安装Chocolatey
- en: 'Chocolatey is a CLI-based package manager for Windows, which can be used for
    automated software installation. To install Chocolatey on Windows, you will need
    to run an elevated command shell:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Chocolatey是Windows的基于CLI的包管理器，可用于自动化软件安装。要在Windows上安装Chocolatey，您需要运行一个提升的命令行：
- en: Launch the Start menu
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动开始菜单
- en: Start typing in `PowerShell`
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开始在`PowerShell`中输入
- en: You should see Windows PowerShell Desktop App as a search result
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该看到Windows PowerShell桌面应用程序作为搜索结果
- en: Right-click on Windows PowerShell and select Run as Administrator
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击Windows PowerShell并选择以管理员身份运行
- en: This will trigger a User Account Control (UAC) warning; select Yes to continue
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将触发用户账户控制（UAC）警告；选择“是”继续
- en: 'Execute the following command in PowerShell to install the Chocolatey package
    manager:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在PowerShell中执行以下命令来安装Chocolatey包管理器：
- en: '[PRE0]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Verify your Chocolatey installation by executing `choco`
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过执行`choco`来验证您的Chocolatey安装
- en: 'You should see a similar output, as shown in the following screenshot:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该看到类似的输出，如下面的屏幕截图所示：
- en: '![](Images/4ce21c0f-3f85-4441-bf36-adfef32776ab.png)Successful installation
    of ChocolateyAll subsequent Chocolatey commands must also be executed from an
    elevated command shell. Alternatively, it is possible to install Chocolatey in
    a non-administrator setting that doesn''t require an elevated command shell. However,
    this will result in a non-standard and less secure development environment, and
    certain applications installed through the tool may still require elevation.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '![](Images/4ce21c0f-3f85-4441-bf36-adfef32776ab.png)成功安装Chocolatey所有后续的Chocolatey命令也必须从提升的命令行中执行。或者，也可以在不需要提升的命令行中安装Chocolatey。但是，这将导致非标准和不太安全的开发环境，并且通过该工具安装的某些应用程序可能仍然需要提升。'
- en: 'For more information, refer to: [https://chocolatey.org/install](https://chocolatey.org/install).'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅：[https://chocolatey.org/install](https://chocolatey.org/install)。
- en: Installing Homebrew for macOS
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为macOS安装Homebrew
- en: Homebrew is a CLI-based package manager for macOS, which can be used for automated
    software installation. To install Homebrew on macOS, you will need to run a command
    shell.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Homebrew是macOS的基于命令行的软件包管理器，可用于自动化软件安装。要在macOS上安装Homebrew，您需要运行一个命令行。
- en: Launch Spotlight Search with ⌘ + Space
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用⌘ + Space启动Spotlight搜索
- en: Type in `terminal`
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“终端”中输入
- en: 'Execute the following command in the Terminal to install the Homebrew package
    manager:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在终端中执行以下命令以安装Homebrew软件包管理器：
- en: '[PRE1]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Verify your Homebrew installation by executing `brew`
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过执行`brew`来验证您的Homebrew安装
- en: 'You should see a similar output, as follows:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该看到类似的输出，如下所示：
- en: '![](Images/3e8bd1f9-2ac6-4f22-9df8-4407185798e9.png)Successful installation
    of Homebrew'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '![](Images/3e8bd1f9-2ac6-4f22-9df8-4407185798e9.png)成功安装Homebrew'
- en: 'To enable access to additional software, execute the following command:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要启用对其他软件的访问，请执行以下命令：
- en: '[PRE2]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'For more information, check out: [https://brew.sh/](https://brew.sh/).'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 有关更多信息，请访问：[https://brew.sh/](https://brew.sh/)。
- en: Git and GitHub Desktop
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Git和GitHub桌面
- en: 'This section aims to establish a best practice Git configuration that''s suitable
    for the widest audience possible. In order to make the best use of this section
    and subsequent chapters of this book, it is presumed that you, the reader, have
    the following prerequisites fulfilled:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 本节旨在建立一个最佳实践的Git配置，适用于尽可能广泛的受众。为了充分利用本节和本书后续章节，假定读者已满足以下先决条件：
- en: An understanding of what Source Code Management and Git are
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对源代码管理和Git的理解
- en: Create a free account on [GitHub.com](https://github.com/)
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[GitHub.com](https://github.com/)上创建一个免费帐户
- en: Why use GitHub?
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么使用GitHub？
- en: If you are a Git user, chances are that you also use an online repository, such
    as GitHub, Bitbucket, or GitLab. Each repository has a free-tier for open source
    projects, coupled with robust websites with varying feature sets, including on-premise
    Enterprise options that you can pay for. GitHub, with 38+ million repositories
    hosted in 2016, is by far the most popular online repository. GitHub is widely
    considered a baseline utility that will never go offline by the community.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是Git用户，很可能您也使用在线存储库，如GitHub、Bitbucket或GitLab。每个存储库都有一个免费的开源项目层，配有功能各异的强大网站，包括您可以付费使用的本地企业选项。GitHub在2016年托管了3800多万个存储库，是目前最受欢迎的在线存储库。GitHub被广泛认为是一个基本的实用工具，永远不会被社区下线。
- en: Over time, GitHub has added many rich features that have transformed it from
    a mere repository to an online platform. Throughout this book, I’ll be referencing
    GitHub features and functionalities, so you can leverage its capabilities to transform
    the way you develop, maintain, and release software.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 随着时间的推移，GitHub添加了许多丰富的功能，使其从一个简单的存储库变成了一个在线平台。在本书中，我将引用GitHub的功能和功能，以便您可以利用其能力来改变您开发、维护和发布软件的方式。
- en: Why use GitHub Desktop?
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么使用GitHub桌面？
- en: It is true that the Git CLI tool is powerful, and you will be just fine if you
    stick to it. However, we, full-stack developers, are worried about a variety of
    concerns. In your rush to complete the task at hand, you can easily ruin your
    and sometimes your team's day, by following bad or incomplete advice.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Git CLI工具确实很强大，如果你坚持使用它，你会没问题的。然而，作为全栈开发人员，我们担心各种问题。在你匆忙完成手头的任务时，你很容易因为遵循错误或不完整的建议而毁掉你自己，有时甚至毁掉你的团队的一天。
- en: 'See the following screenshot of such advice from StackOverflow ([http://stackoverflow.com/questions/1125968/force-git-to-overwrite-local-files-on-pull](http://stackoverflow.com/questions/1125968/force-git-to-overwrite-local-files-on-pull)):'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 请参见来自StackOverflow的以下建议的截图([http://stackoverflow.com/questions/1125968/force-git-to-overwrite-local-files-on-pull](http://stackoverflow.com/questions/1125968/force-git-to-overwrite-local-files-on-pull))：
- en: '![](Images/ecd0f401-456e-472a-9729-fe20f4479c30.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/ecd0f401-456e-472a-9729-fe20f4479c30.png)'
- en: If you execute the preceding command, be prepared to lose uncommitted local
    changes. Unfortunately, novice users have a tendency to follow the simplest and
    most direct instructions, potentially leading to lost work. If you think your
    past commits are safe, think twice! When it comes to Git, if you can imagine it,
    it can be done through the CLI.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你执行上述命令，请准备好失去未提交的本地更改。不幸的是，新手用户倾向于遵循最简单和最直接的指令，可能导致丢失工作。如果你认为你过去的提交是安全的，再想想！当涉及到Git时，如果你能想象到，通过CLI都可以做到。
- en: Thankfully, with GitHub, you can protect branches and implement the GitHub workflow,
    which entails branching, committing, merging, updating, and submitting pull requests.
    The protections and the workflow help prevent harmful Git commands from making
    irreversible changes and enable a level of quality control so that your team remains
    productive. Performing all of these actions through the CLI, especially when there
    are merge conflicts, can get complicated and tedious.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，通过GitHub，你可以保护分支并实施GitHub工作流程，其中包括分支、提交、合并、更新和提交拉取请求。这些保护和工作流程有助于防止有害的Git命令造成不可逆转的更改，并实现一定程度的质量控制，使你的团队保持高效。通过CLI执行所有这些操作，特别是在存在合并冲突时，可能会变得复杂和繁琐。
- en: 'For a more in-depth understanding of the benefits and pitfalls of Git and GitHub,
    you can read my 2016 article on the topic at: [Bit.ly/InDepthGitHub](http://bit.ly/InDepthGitHub).'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 要更深入地了解Git和GitHub的优势和缺陷，你可以阅读我2016年关于这个主题的文章：[Bit.ly/InDepthGitHub](http://bit.ly/InDepthGitHub)。
- en: Installing Git and GitHub Desktop
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Git和GitHub桌面
- en: GitHub Desktop provides an easy-to-use GUI to execute the GitHub workflow, in
    a manner that is consistent across Windows and macOS. Consistency is highly valuable
    when on-boarding new or junior team members or if you're not a frequent contributor
    to the code base.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub桌面提供了一个易于使用的GUI来执行GitHub工作流程，这种方式在Windows和macOS上是一致的。当新人或初级团队成员加入时，或者如果你不经常贡献代码，一致性是非常有价值的。
- en: 'Execute the installation command:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行安装命令：
- en: 'For Windows:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Windows：
- en: '[PRE3]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'For macOS:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 对于macOS：
- en: '[PRE4]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Verify your Git installation by executing `git --version` and observe the version
    number returned
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过执行 `git --version` 来验证你的Git安装，并观察返回的版本号
- en: You will need to restart your Terminal after the installation of a new CLI tool.
    However, you can avoid relaunching your Terminal and save some time by refreshing
    or sourcing your environment variables. On Windows, execute `refreshenv`; on macOS,
    execute `source ~/.bashrc` or `source ~/.zshrc`.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装新的CLI工具后，你需要重新启动你的终端。然而，你可以通过刷新或源化你的环境变量来避免重新启动终端并节省一些时间。在Windows上，执行 `refreshenv`；在macOS上，执行
    `source ~/.bashrc` 或 `source ~/.zshrc`。
- en: Verify your GitHub Desktop installation by launching the application
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过启动应用程序来验证你的GitHub桌面安装
- en: Sign in to [https://github.com/](https://github.com/) on GitHub Desktop
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在GitHub桌面上登录[https://github.com/](https://github.com/)
- en: 'Once you have created a repository, you can launch the application from your
    Terminal by executing this:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建了存储库后，您可以通过在终端中执行以下命令来启动应用程序：
- en: '[PRE5]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'If you are already on the correct folder, you can type in the following command
    instead:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您已经在正确的文件夹中，可以输入以下命令：
- en: '[PRE6]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'For Windows, on GitHub Desktop launch, if you get stuck on the Sign in screen,
    close the application, relaunch it as an administrator, complete the setup, and
    then you will be able to use it normally, without having to launch it as an administrator
    again. For more information, refer to: [https://desktop.github.com/](https://desktop.github.com/).'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Windows，在GitHub Desktop启动时，如果卡在登录屏幕上，请关闭应用程序，以管理员身份重新启动，完成设置，然后您将能够正常使用它，而无需再次以管理员身份启动。有关更多信息，请参阅：[https://desktop.github.com/](https://desktop.github.com/)。
- en: Node.js
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Node.js
- en: 'This section aims to establish a best practice JavaScript development environment.
    To make the best use of this book, it is presumed that you have the following
    prerequisites fulfilled:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 本节旨在建立最佳实践的JavaScript开发环境。为了充分利用本书，假定您已满足以下先决条件：
- en: Awareness of the modern JavaScript ecosystem and tools
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对现代JavaScript生态系统和工具的认识
- en: 'NodeJS''s site: [https://nodejs.org](https://nodejs.org)'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NodeJS的网站：[https://nodejs.org](https://nodejs.org)
- en: 'Npm''s site: [https://www.npmjs.com](https://www.npmjs.com)'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Npm的网站：[https://www.npmjs.com](https://www.npmjs.com)
- en: 'Angular''s site: [https://angular.io](https://angular.io)'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Angular的网站：[https://angular.io](https://angular.io)
- en: 'Legacy AngularJS''s site: [https://angularjs.org/](https://angularjs.org/)'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Legacy AngularJS的网站：[https://angularjs.org/](https://angularjs.org/)
- en: 'Yarn''s site: [https://yarnpkg.com](https://yarnpkg.com)'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Yarn的网站：[https://yarnpkg.com](https://yarnpkg.com)
- en: 'React''s site: [https://facebook.github.io/react](https://facebook.github.io/react)'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: React的网站：[https://facebook.github.io/react](https://facebook.github.io/react)
- en: Node.js is JavaScript that runs anywhere. It's an open source project that aimed
    to run JavaScript on the server, built on Google Chrome's V8 JavaScript engine.
    In late 2015, Node.js stabilized and announced enterprise-friendly 18 month LTS
    cycles that brought predictability and stability to the platform, paired with
    a more frequently updated, but more experimental, Latest branch. Node also ships
    bundled with npm, the Node package manager, and as of 2018, npm is the largest
    repository of JavaScript packages in the world.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: Node.js是可以在任何地方运行的JavaScript。它是一个开源项目，旨在在服务器上运行JavaScript，构建在谷歌Chrome的V8 JavaScript引擎上。2015年底，Node.js稳定下来，并宣布了企业友好的18个月LTS周期，为平台带来了可预测性和稳定性，配合更频繁更新但更实验性的Latest分支。Node还附带了npm，Node包管理器，截至2018年，npm是世界上最大的JavaScript包存储库。
- en: 'For a more detailed look into Node''s history, read my two-part article on
    Node at: [Bit.ly/NodeJSHistory](http://bit.ly/NodeJSHistory).'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 要更详细地了解Node的历史，请阅读我在Node上的两部分文章：[Bit.ly/NodeJSHistory](http://bit.ly/NodeJSHistory)。
- en: You may have heard of yarn and how it's faster or better than npm. As of npm
    5, which ships bundled with Node 8, npm is more feature rich, easier to use and
    on par with yarn in terms of performance. Yarn is published by Facebook, which
    also created the React JavaScript UI library. It must be noted that yarn relies
    on the npm repository, so whichever tool you use, you get access to the same library
    of packages.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能听说过yarn以及它比npm更快或更好。截至npm 5，它与Node 8捆绑在一起，npm更加功能丰富，更易于使用，并且在性能方面与yarn不相上下。Yarn由Facebook发布，该公司还创建了React
    JavaScript UI库。必须指出的是yarn依赖于npm存储库，因此无论您使用哪种工具，都可以访问相同的包库。
- en: Existing Node.js Installation
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 现有的Node.js安装
- en: If you installed Node.js before, when installing a new version of Node using
    choco or brew, ensure that you read the command outputs carefully. Your package
    manager may return caveats or additional instructions to follow, so you can successfully
    complete the installation.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您之前安装过Node.js，在使用choco或brew安装新版本Node时，请确保仔细阅读命令输出。您的软件包管理器可能会返回警告或额外的指令，因此您可以成功完成安装。
- en: It is also highly likely that your system or folder permissions have been edited
    manually in the past, which may interfere with a frustration-free operation of
    Node. If the following commands do not resolve your issues, use the GUI installer
    from Node's site as a last resort.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 您的系统或文件夹权限很可能在过去被手动编辑过，这可能会影响Node的无障碍操作。如果以下命令无法解决您的问题，请作为最后的手段使用Node网站上的GUI安装程序。
- en: Regardless, you must take care to uninstall all global tools that were installed
    using `npm -g` previously. With every major Node version, there's a chance that
    native bindings between your tool and Node have been invalidated. Further, global
    tools rapidly fall out of date and project-specific tools quick go out of sync.
    As a result, installing tools globally is now an anti-pattern that has been replaced
    with better techniques, which are covered in the next section and under the Angular
    CLI section in [Chapter 2](312e0dbe-54ac-45c6-97c7-f41c98723919.xhtml),* Create
    a Local Weather Web Application*.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，您必须小心卸载之前使用`npm -g`安装的所有全局工具。随着每个主要的Node版本，您的工具与Node之间的本地绑定可能会失效。此外，全局工具很快就会过时，项目特定的工具也很快就会不同步。因此，全局安装工具现在是一种反模式，已被更好的技术所取代，这些技术在下一节和[第2章](312e0dbe-54ac-45c6-97c7-f41c98723919.xhtml)的Angular
    CLI部分中有介绍，*创建一个本地天气Web应用*。
- en: To see a list of your globally install packages, execute `npm list -g --depth
    0`. To uninstall a global package, execute `npm uninstall -g package-name`. I
    would recommend that you uninstall all globally installed packages and restart
    from scratch with the suggestions provided in the next section.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看全局安装的软件包列表，请执行`npm list -g --depth 0`。要卸载全局软件包，请执行`npm uninstall -g package-name`。我建议您卸载所有全局安装的软件包，并根据下一节提供的建议重新开始。
- en: Installing Node.js
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Node.js
- en: This book will presume that you're using Node 8.4 or a later version. Odd numbered
    versions of Node are not meant to be long lived. 6.x.x, 8.x.x, 10.x.x, and so
    on are okay, but avoid 7.x.x, 9.x.x, and so on, at all costs.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 本书假定您正在使用Node 8.4或更高版本。Node的奇数版本不适合长期使用。6.x.x、8.x.x、10.x.x等是可以的，但是要尽量避免7.x.x、9.x.x等。
- en: 'Execute the installation command:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行安装命令：
- en: 'For Windows:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Windows：
- en: '[PRE7]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'For macOS:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 对于macOS：
- en: '[PRE8]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Verify installation of Node by executing `node -v`
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证Node的安装是否成功，执行`node -v`
- en: Verify npm by executing `npm -v`
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证npm的安装是否成功，执行`npm -v`
- en: Note that you should never upgrade your npm version using `npm install -g npm`
    on Windows, as highlighted in [Chapter 4](374c123d-2621-42e2-b301-ed67c9c7d708.xhtml), *Staying
    Up to Date with Angular Updates*. It is highly recommended that you use the `npm-windows-upgrade` npm
    package.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，不要在Windows上使用`npm install -g npm`来升级npm版本，如[第4章](374c123d-2621-42e2-b301-ed67c9c7d708.xhtml)中所述，*与Angular更新保持最新*。强烈建议您使用`npm-windows-upgrade`
    npm包。
- en: 'The npm repository contains numerous useful and mature CLI commands that are
    often cross-platform. Listed here are the ones I rely on frequently and choose
    to install globally for performance reasons:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: npm存储库包含许多有用且成熟的CLI命令，通常是跨平台的。以下是我经常依赖并选择全局安装以提高性能的命令：
- en: '`npx`: Executes CLI tools by downloading the latest version on demand or project-specific
    local `node_modules `folder. It ships with npm 5 and will allow you to run code
    generators that frequently update without a global install.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`npx`：通过按需下载最新版本或项目特定的本地`node_modules`文件夹来执行CLI工具。它随npm 5一起提供，并允许您运行频繁更新的代码生成器，而无需全局安装。'
- en: '`rimraf`: The Unix command `rm -rf`, but works on Windows as well. Very useful
    in deleting the `node_modules` folder, especially when Windows is unable to do
    so due to the nested folder structure.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rimraf`：Unix命令`rm -rf`，但在Windows上也可以使用。在删除`node_modules`文件夹时非常有用，特别是当Windows由于嵌套文件夹结构而无法执行此操作时。'
- en: '`npm-update`: Analyzes your project folder and reports on which package have
    newer versions or not, with the option to be able to update all of them, if you
    so wish.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`npm-update`：分析您的项目文件夹，并报告哪些包有更新版本，哪些没有，如果您愿意，可以更新所有这些包。'
- en: '`n`: Dead easy to tool to switch between versions of Node quickly, without
    having to remember the specific version number. Unfortunately, it only works on
    macOS/Linux.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`n`：非常容易快速切换Node版本的工具，无需记住特定版本号。不幸的是，它只在macOS/Linux上运行。'
- en: '`http-server`: Simple, zero-configuration command-line HTTP server, which is
    a great way to locally test static HTML/CSS pages or even the dist folder of your
    Angular or React project.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`http-server`：简单的、零配置的命令行HTTP服务器，是本地测试静态HTML/CSS页面或Angular或React项目的`dist`文件夹的绝佳方式。'
- en: '`npm-windows-upgrade`: Necessary to upgrade npm on Windows.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`npm-windows-upgrade`：在Windows上升级npm所必需的。'
- en: Visual Studio Code
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Visual Studio Code
- en: '**Visual Studio Code** (**VS Code**) is one of the best code editors/IDEs out
    there. It''s free and it''s cross-platform. The remarkable thing is that VS Code
    has the lightning fast performance of a code editor, think NotePad++ or Sublime
    Text, but the feature set and conveniences of costly IDEs, think Visual Studio
    or WebStorm. For JavaScript development, this speed is essential and is a tremendous
    quality-of-life improvement for a developer, who frequently switches back and
    forth between different projects. VS Code brings together an integrated terminal,
    easy-to-use extension system, transparent settings, excellent search and replace
    functionalities, and, in my opinion, the best Node.js debugger that exists.'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '**Visual Studio Code**（**VS Code**）是最好的代码编辑器/集成开发环境之一。它是免费的，而且跨平台。值得注意的是，VS
    Code具有代码编辑器的极快性能，类似于NotePad++或Sublime Text，但具有昂贵的集成开发环境的功能集和便利性，例如Visual Studio或WebStorm。对于JavaScript开发，这种速度是必不可少的，并且对于经常在不同项目之间频繁切换的开发人员来说，这是一项巨大的生活质量改善。VS
    Code集成了终端、易于使用的扩展系统、透明的设置、出色的搜索和替换功能，以及在我看来存在的最好的Node.js调试器。'
- en: Installing Visual Studio Code
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Visual Studio Code
- en: For Angular development, this book will be leveraging VS Code. It is highly
    recommended that you also use VS Code.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Angular开发，这本书将利用VS Code。强烈建议您也使用VS Code。
- en: 'Execute the installation command:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行安装命令：
- en: 'For Windows:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Windows：
- en: '[PRE9]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'For macOS:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 对于macOS：
- en: '[PRE10]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: One of the best features of Visual Studio Code is that you can also launch it
    from the CLI. If you're in a folder that you'd like to be editing, simply execute
    `code .` or a particular file by executing `code ~/.bashrc` or `code readme.md`.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio Code的最佳功能之一是您还可以从CLI启动它。如果您想要编辑的文件夹中，只需执行`code .`或通过执行`code ~/.bashrc`或`code
    readme.md`来执行特定文件。
- en: Verify install by launching Visual Studio Code
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过启动Visual Studio Code来验证安装
- en: Navigate to a folder and execute `code .`
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到一个文件夹并执行`code .`
- en: This will open up a new VS Code window with the Explorer displaying the contents
    of the current folder
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将打开一个新的VS Code窗口，其中资源管理器显示当前文件夹的内容
- en: For more information, refer to [https://code.visualstudio.com](https://code.visualstudio.com).
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅[https://code.visualstudio.com](https://code.visualstudio.com)。
- en: Automation for Windows and macOS
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows和macOS的自动化
- en: 'At the beginning of the chapter, I proclaimed a*nything that can be expressed
    as a CLI command can also be automated.* Throughout the setup process, we have
    ensured that every tool being used was set up and their functionality verifiable
    through a CLI command. This means we can easily create a PowerShell or bash script
    to string these commands together and ease the task of setting up and verifying
    new environments. In fact, I have created a rudimentary implementation of these
    scripts, which you may download from the `Chapter 1` folder of the GitHub Repository
    for this book:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的开头，我宣称*任何可以表示为CLI命令的东西也可以被自动化*。在设置过程中，我们确保每个使用的工具都已设置并且通过CLI命令可验证其功能。这意味着我们可以轻松地创建一个PowerShell或bash脚本来串联这些命令，并简化设置和验证新环境的任务。事实上，我已经创建了这些脚本的一个基本实现，您可以从本书的GitHub存储库的`第1章`文件夹中下载：
- en: Navigate to [https://github.com/duluca/web-dev-environment-setup](https://github.com/duluca/web-dev-environment-setup) to
    find the scripts
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航至[https://github.com/duluca/web-dev-environment-setup](https://github.com/duluca/web-dev-environment-setup)查找脚本
- en: Execute `install-windows-deps.ps1` in PowerShell to install and verify dependencies
    on Windows
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在PowerShell中执行`install-windows-deps.ps1`以安装和验证Windows上的依赖关系
- en: Execute `install-mac-deps.sh` in Terminal to install and verify dependencies
    on macOS
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在终端中执行`install-mac-deps.sh`以安装和验证macOS上的依赖关系
- en: The harsh reality is that these scripts do not represent a very capable or resilient
    solution. Scripts can't be executed or managed remotely, and they can't easily
    recover from errors or survive machine boot cycles. In addition, your IT requirements
    may be above and beyond what is covered here.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 残酷的现实是，这些脚本并不代表一个非常有能力或弹性的解决方案。脚本无法远程执行或管理，并且它们无法轻松地从错误中恢复或在机器启动周期中生存。此外，您的IT需求可能超出了这里所涵盖的范围。
- en: If you deal with large teams and frequent turnover, an automation tool will
    pay dividends handsomely, whereas if you're on your own or part of a smaller,
    stable team, it will be vastly overkill. I encourage you to explore tools such
    as Puppet, Chef, Ansible, and Vagrant to help you decide which one may best fit
    your needs or if a simple script is just good enough.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您处理大型团队和频繁的人员流动，自动化工具将大大地产生回报，而如果您是独自一人或是一个较小、稳定的团队的一部分，它将是极度过剩的。我鼓励您探索诸如Puppet、Chef、Ansible和Vagrant等工具，以帮助您决定哪一个最适合您的需求，或者一个简单的脚本是否足够好。
- en: Summary
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you mastered the use of CLI-based package managers for both
    Windows and macOS to speed up and automate the set up of development environments
    for you and your colleagues. By reducing variance from one developer's environment
    to the next, your team can overcome any individual configuration issue more easily
    and remain focused on the execution of the task at hand more often. With a collective
    understanding of a common environment, no single individual on the team will carry
    the burden of having to help troubleshoot everyone else's issues. As a result,
    your team will be more productive. By leveraging more sophisticated and resilient
    tools, mid-to-large sized organizations will be able to achieve great savings
    in their IT budgets.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，您掌握了基于CLI的软件包管理器在Windows和macOS上的使用，以加快和自动化开发环境的设置，为您和您的同事。通过减少开发人员环境之间的差异，您的团队可以更容易地克服任何个人配置问题，并更多地专注于手头的任务执行。通过对共同环境的集体理解，团队中没有一个人需要承担帮助排除其他人问题的负担。因此，您的团队将更加高效。通过利用更复杂和弹性的工具，中大型组织将能够在其IT预算中实现巨大的节省。
- en: In the next chapter, you will become familiar with the new Angular platform,
    optimize your web development environment, leverage Kanban using Waffle and GitHub
    issues, learn Angular fundamentals to build a simple web app with a full-stack
    architecture in mind, and get introduced to reactive programming with RxJS.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，您将熟悉新的Angular平台，优化您的Web开发环境，利用Waffle和GitHub问题来使用看板，学习Angular基础知识以构建一个考虑全栈架构的简单Web应用，并介绍使用RxJS进行响应式编程。
- en: Further reading
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: The article on Automating the Setup of the Local Developer Machine by Vishwas
    Parameshwarappa is a great place to start for using Vagrant. You can find the
    article at [Red-gate.com/simple-talk/sysadmin/general/automating-setup-local-developer-machine](https://www.red-gate.com/simple-talk/sysadmin/general/automating-setup-local-developer-machine).
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: Vishwas Parameshwarappa的《自动化本地开发者机器设置》一文是使用Vagrant的绝佳起点。您可以在[Red-gate.com/simple-talk/sysadmin/general/automating-setup-local-developer-machine](https://www.red-gate.com/simple-talk/sysadmin/general/automating-setup-local-developer-machine)找到这篇文章。
