["```js\n$ docker info\n\n```", "```js\n$ docker run hello-world\n\n```", "```js\n// source: https://github.com/docker-library/hello-world/blob/master/Dockerfile \nFROM scratch \nCOPY hello / \nCMD [\"/hello\"]\n\n```", "```js\nAWS_ACCESS_KEY_ID=<<___AWS_ACCESS_KEY_ID__>> \nAWS_SECRET_ACCESS_KEY=<<___AWS_SECRET_ACCESS_KEY__>> \nAWS_BUCKET_NAME=publishing-app \nAWS_REGION_NAME=eu-central-1 \nMONGO_USER=<<___your_mlab_mongo_user__>> \nMONGO_PASS=<<___your_mlab_mongo_pass__>> \nMONGO_PORT=<<___your_mlab_mongo_port__>> \nMONGO_ENV=publishingapp \nMONGO_HOSTNAME=<<___your_mlab_mongo_hostname__>>\n\n```", "```js\nvar env = require('node-env-file'); \n// Load any undefined ENV variables form a specified file.  \nenv(__dirname + '/.env'); \n\nrequire(\"babel-core/register\"); \nrequire(\"babel-polyfill\"); \nrequire('./server');\n\n```", "```js\n// this is old code from our codebase: \nimport mongoose from 'mongoose'; \nvar Schema = mongoose.Schema; \n\nconst conf = { \n  hostname: process.env.MONGO_HOSTNAME || 'localhost', \n  port: process.env.MONGO_PORT || 27017, \n  env: process.env.MONGO_ENV || 'local', \n}; \nmongoose.connect(&grave;mongodb://${conf.hostname}: \n ${conf.port}/${conf.env}&grave;);\n\n```", "```js\nimport mongoose from 'mongoose'; \nvar Schema = mongoose.Schema; \n\nconst conf = { \n  hostname: process.env.MONGO_HOSTNAME || 'localhost', \n  port: process.env.MONGO_PORT || 27017, \n  env: process.env.MONGO_ENV || 'local', \n}; \n\nlet dbUser \nif(process.env.MONGO_USER && process.env.MONGO_PASS) { \n  dbUser = {user: process.env.MONGO_USER, pass: \n   process.env.MONGO_PASS} \n} else { \n  dbUser = undefined; // on local dev not required \n} \nmongoose.connect(&grave;mongodb://${conf.hostname}:${conf.port}/${conf.env}&grave;, dbUser);\n\n```", "```js\nnpm start\n\n```", "```js\n[[your are in the project main directory]]\n$ touch Dockerfile\n\n```", "```js\nFROM centos:centos7 \n\nRUN yum update -y \nRUN yum install -y tar wget \nRUN wget -q https://nodejs.org/dist/v4.0.0/node-v4.0.0-linux-x64.tar.gz -O - | tar xzf - -C /opt/ \n\nRUN mv /opt/node-v* /opt/node \nRUN ln -s /opt/node/bin/node /usr/bin/node \nRUN ln -s /opt/node/bin/npm /usr/bin/npm \n\nCOPY . /opt/publishing-app/ \n\nWORKDIR /opt/publishing-app \n\nRUN npm install \nRUN yum clean all \n\nEXPOSE 80 \nCMD [\"npm\", \"start\"]\n\n```", "```js\n$ [[[in the main directory]]]\n$ touch .dockerignore\n\n```", "```js\n.git \nnode_modules \n.DS_Store\n\n```", "```js\ndocker login\n\n```", "```js\ndocker build -t przeor/pub-app-docker .\n\n```", "```js\n[[[striped from here for the sake of brevity]]]\nStep 12 : EXPOSE 80\n ---> Running in 081e0359cbd5\n ---> ce0433b220a0\nRemoving intermediate container 081e0359cbd5\nStep 13 : CMD npm start\n ---> Running in 581df04c8c81\n ---> 1970dde57fec\nRemoving intermediate container 581df04c8c81\nSuccessfully built 1910dde57fec\n\n```", "```js\n$ docker-machine env\n\n```", "```js\nexport DOCKER_TLS_VERIFY=\"1\"\nexport DOCKER_HOST=\"tcp://192.168.99.100:2376\"\nexport DOCKER_CERT_PATH=\"/Users/przeor/.docker/machine/machines/default\"\nexport DOCKER_MACHINE_NAME=\"default\"\n# Run this command to configure your shell: \n# eval $(docker-machine env)\n\n```", "```js\n$ docker run -d -p 80:80  przeor/pub-app-docker npm start\n\n```", "```js\ndocker ps\n\n```", "```js\ndocker run -i -t -p 80:80 przeor/pub-app-docker\n\n```", "```js\n.git \nnode_modules \n.DS_Store \n.env\n\n```", "```js\nif(!process.env.PORT) { \n  var env = require('node-env-file'); \n  // Load any undefined ENV variables form a specified file.  \n  env(__dirname + '/.env'); \n}\n\n```", "```js\ndocker build -t przeor/pub-app-docker\n\n```", "```js\n$ docker run -i -t -e PORT=80 -e AWS_ACCESS_KEY_ID='AKIMOCKED5JM4VUHA' -e AWS_SECRET_ACCESS_KEY='k3JxMOCKED0oRI6w3ZEmENE1I0l' -e AWS_BUCKET_NAME='publishing-app' -e AWS_REGION_NAME='eu-central-1' -e MONGO_USER='usermlab' -e MONGO_PASS='MOCKEDpassword' -e MONGO_PORT=25732 -e MONGO_ENV='publishingapp' -e MONGO_HOSTNAME='ds025761.mlab.com' -p 80:80 przeor/pub-app-docker\nnpm start\n\n```", "```js\nAWS_ACCESS_KEY_ID=<<___AWS_ACCESS_KEY_ID__>>\nAWS_SECRET_ACCESS_KEY=<<___AWS_SECRET_ACCESS_KEY__>>\nAWS_BUCKET_NAME=publishing-app\nAWS_REGION_NAME=eu-central-1\nMONGO_USER=<<___your_mlab_mongo_user__>>\nMONGO_PASS=<<___your_mlab_mongo_pass__>>\nMONGO_PORT=<<___your_mlab_mongo_port__>>\nMONGO_ENV=publishingapp\nMONGO_HOSTNAME=<<___your_mlab_mongo_hostname__>>\nPORT=80\n\n```", "```js\ndocker push przeor/pub-app-docker\n\n```", "```js\n docker images\n docker rm CONTAINER-ID\n\n```", "```js\n        docker ps\ndocker stop CONTAINER-ID\n\n```", "```js\n        docker tag przeor/pub-app-docker:latest przeor/pub-app-  \n        docker:0.1\ndocker images\n\n```", "```js\n        $ docker-machine env\n\n```", "```js\n        docker build -t przeor/pub-app-docker .\n\n```", "```js\n        $ docker run -d -p 80:80 przeor/pub-app-docker npm start\n\n```", "```js\n        docker run -i -t -p 80:80 przeor/pub-app-docker\n\n```", "```js\n$ docker run -d -p 80:80  przeor/pub-app-docker npm start\n\n```", "```js\n$ cd ~/Downloads/\n$ chmod 400 pubapp-ec2-key-pair.pem\n$ ssh -i pubapp-ec2-key-pair.pem ec2-user@52.29.107.244\n\n```", "```js\n[ec2-user@ip-172-31-26-81 ~]$ sudo yum update -y\n[ec2-user@ip-172-31-26-81 ~]$ sudo yum install -y docker\n[ec2-user@ip-172-31-26-81 ~]$ sudo service docker start\n\n```", "```js\n[ec2-user@ip-172-31-26-81 ~]$ sudo usermod -a -G docker ec2-user\n[ec2-user@ip-172-31-26-81 ~]$ exit\n\n> ssh -i pubapp-ec2-key-pair.pem ec2-user@52.29.107.244\n[ec2-user@ip-172-31-26-81 ~]$ docker info\n\n```", "```js\n    [ec2-user@ip-172-31-26-81 ~]$ docker run -d PORT=80 -e AWS_ACCESS_KEY_ID='AKIMOCKED5JM4VUHA' -e AWS_SECRET_ACCESS_KEY='k3JxMOCKED0oRI5w3ZEmENE1I0l' -e AWS_BUCKET_NAME='publishing-app' -e AWS_REGION_NAME='eu-central-1' -e MONGO_USER='usermlab' -e MONGO_PASS='MOCKEDpassword' -e MONGO_PORT=25732 -e MONGO_ENV='publishingapp' -e MONGO_HOSTNAME='ds025761.mlab.com' -p 80:80 przeor/pub-app-docker npm start\n\n```", "```js\nAWS_ACCESS_KEY_ID=<<___AWS_ACCESS_KEY_ID__>>\nAWS_SECRET_ACCESS_KEY=<<___AWS_SECRET_ACCESS_KEY__>>\nAWS_BUCKET_NAME=publishing-app\nAWS_REGION_NAME=eu-central-1\nMONGO_USER=<<___your_mlab_mongo_user__>>\nMONGO_PASS=<<___your_mlab_mongo_pass__>>\nMONGO_PORT=<<___your_mlab_mongo_port__>>\nMONGO_ENV=publishingapp\nMONGO_HOSTNAME=<<___your_mlab_mongo_hostname__>>\nPORT=80\n\n```", "```js\n[ec2-user@ip-172-31-26-81 ~]$ docker ps\n\n```", "```js\n[ec2-user@ip-172-31-26-81 ~]$ curl http://localhost\n\n```", "```js\n    DNS name: \nEC2Contai-EcsElast-1E4Y3WOGMV6S4-39378274.eu-central-\n    1.elb.amazonaws.com (A Record)\n\n```", "```js\nns-1276.awsdns-31.org.\nns-1775.awsdns-29.co.uk.\nns-763.awsdns-31.net.\nns-323.awsdns-40.com.\n\n```", "```js\nns-1276.awsdns-31.org\nns-1775.awsdns-29.co.uk\nns-763.awsdns-31.net\nns-323.awsdns-40.com\n\n```"]