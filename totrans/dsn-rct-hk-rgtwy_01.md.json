["```js\n<HTML>\n  <head>\n    <meta charset=\"utf-8\">\n  </head>\n  <style>\n    h1 { color: red; }\n  </style>\n  <script>\n    console.log('start...')\n  </script>\n  <body>\n    <h1>Hello World</h1>\n  </body> \n</HTML>\n```", "```js\n$(document).ready(function(){\n  $(\"button\").click(function(){\n    $(this).css(\"background-color\", \"yellow\");\n    $(\"#div3\").fadeIn(3000);\n    $(\"#p1\").css(\"color\", \"red\")\n      .slideUp(2000)\n      .slideDown(2000);\n  });\n});\nfunction appendText() {\n  var txt1 = \"<p>Text.</p>\";       \n  var txt2 = $(\"<p></p>\").text(\"Text.\");\n  var txt3 = document.createElement(\"p\");\n  txt3.innerHTML = \"Text.\";\n  $(\"body\").append(txt1, txt2, txt3);\n}\n```", "```js\n<body>\n  <div ng-app=\"myApp\" ng-controller=\"myCtrl\">\n    <p>Name: <input type=\"text\" ng-model=\"name\" /></p>\n  </div>\n  <script>\n    var app = angular.module('myApp', []);\n    app.controller('myCtrl', function($scope) {\n      $scope.name= \"John\";\n    });\n  </script>\n</body>\n```", "```js\nfunction HeroListController($scope, $element, $attrs) {\n  var ctrl = this;\n  ctrl.updateHero = function(hero, prop, value) {\n    hero[prop] = value;\n  };\n  ctrl.deleteHero = function(hero) {\n    var idx = ctrl.list.indexOf(hero);\n    if (idx >= 0) {\n      ctrl.list.splice(idx, 1);\n    }\n  };\n}\nangular.module('heroApp').component('heroList', {\n  templateUrl: 'heroList.html',\n  controller: HeroListController\n});\n```", "```js\n<div id=\"root\"></div>\n<script type=\"text/babel\">\n  class App extends React.Component {\n    render() {\n      return <h1>Hello World</h1>\n    }\n  }\n  ReactDOM.render(App, document.getElementById('root'));\n</script>\n```", "```js\n<script type=\"text/babel\">\n  const App = function() {\n    return <h1>Hello World</h1>\n  }\n</script>\n```", "```js\n@customElement('my-element')\nexport class MyElement extends LitElement {\n  ...\n  render() {\n    return html`\n      <h1>Hello, ${this.name}!</h1>\n      <button @click=${this._onClick}>\n        Click Count: ${this.count}\n      </button>\n      <slot></slot>\n    `;\n  }\n}\n```", "```js\n<body>\n  <h1>Hello World</h1>\n  <my-element name=\"abc\">\n    <p>\n      Let's get started.\n    </p>\n  </my-element>\n</body>\n```", "```js\n<component attr=\"Title\">Hello World</component>\n```", "```js\n<h1 title=\"Title\">Hello World</h1>\n```", "```js\n<!doctype HTML>\n<HTML lang=\"en\">\n  <body>\n    <div id=\"root\"></div>\n  </body>  \n</HTML>\n```", "```js\n<script>\n  const App = () => {\n    return <h1>Hello World.</h1>\n  }\n  const rootEl = document.getElementById(\"root\")\n  ReactDOM.render(<App />, rootEl)\n</script>\n```", "```js\n  const App = () => {\n    return <h1>Hello World</h1>\n  }\n```", "```js\nconst Home = () => {\n  return <h1>Home Page</h1>\n}\nconst Product = () => {\n  return <h1>Product Page</h1>\n}\n```", "```js\nconst Route = ({ home }) => {\n  return home ? <Home /> : <Product />\n}\n```", "```js\nconst App = () => {\n  const home = true\n  return <Route home={home} />\n}\n```", "```js\nfunction StatelessComponent(props) {\n  return <div>{props.name}</div>\n}\n```", "```js\nconst Title = ({ name, onChange, on, url }) => {...}\n```", "```js\nconst Title = ({ obj }) => {\n  return <h1>{obj.text}</h1>\n}\nconst Title = ({ fn }) => {\n  return <h1>{fn()}</h1>\n}\n```", "```js\nconst App = () => {\n  return <Title text=\"Hello World\" />  \n}\n```", "```js\n  ReactDOM.render(<App />, rootEl)\n```", "```js\nconst App = () => {\n  return (\n    <Title>\n      Hello World\n    </Title>\n  )  \n}\n```", "```js\nconst Title = ({ children }) => {\n  return <h1>{children}</h1>\n}\n```", "```js\nconst Title = () => {\n  return <h1>Haha, you got me</h1>\n}\n```", "```js\nconst App = () => {\n  return <Title />\n}\n```", "```js\nconst Title = ({ text }) => {\n  return <h1>{text}</h1>\n}\nconst App = ({ flag }) => {\n  const text = flag ? \"Hello\" : \"World\"\n  return <Title text={text} />\n}\n```", "```js\nconst Child = ({ change }) => {\n  const onChange = () => {\n    change()\n  }\n  return <input onChange={onChange} />\n}\nconst Parent = () => {\n  const change = () => {\n    console.log(\"child notify me\")\n  } \n  return <Child change={change} />\n}\n```", "```js\nconst Title = () => {\n  const text = \"Hello World1\"\n  return <h1>{text}</h1>\n}\n```", "```js\nconst Title = () => {\n  const fn = () => \"Hello World\"\n  return <h1>{fn()}</h1>\n}\n```", "```js\nconst Title = () => {\n  const arr = ['Apple', 'Orange']\n  return (\n    <ul>\n      {arr.map((v) => (\n        <li>{v}</li>\n      ))}\n    </ul>\n  )\n}\n```", "```js\n  return (\n    <ul>\n      {[<li>Apple</li>, <li>Orange</li>]}\n    </ul>\n  )\n```", "```js\n      {['Apple', 'Orange'].map(v => (\n        <li>{v}</li>\n      ))}\n```", "```js\nconst arr = ['Apple', 'Orange']\nconst Title = () => {\n  return (\n    <ul>\n      {arr.map((v) => (\n        <li>{v}</li>\n      ))}\n    </ul>\n  )\n}\n```", "```js\nconst menus = [\n  { key: 'home', label: 'Home' },\n  { key: 'product', label: 'Product' },\n  { key: 'about', label: 'About' },\n  { key: 'secure', label: 'Secure', disabled: true },\n]\n```", "```js\nconst Nav = ({ selected, items }) => {\n  const isActive = item => item.key === selected\n  const onClick = item => () => { \n    window.location.href = item.url\n  }\n  return ...\n}\n```", "```js\n  return (\n    <ul>\n      {items.map(item => (\n        <li\n          key={item.key}\n          className={isActive(item) ? 'active' : ''}\n        >\n          <button\n            disabled={item.disabled}\n            onClick={onClick}\n          >\n            {item.label}\n          </button>\n        </li>\n      ))}\n    </ul>\n  )\n```", "```js\n<Nav items={menus} selected=\"home\" /> \n```", "```js\nconst NavItem = ({\n  label, active, disabled, onClick\n}) => (\n  <li className={active ? 'active' : ''}>\n    <button disabled={disabled} onClick={onClick}>\n      {label}\n    </button>\n  </li>\n)\n```", "```js\nconst Nav = ({ selected, items }) => {\n  const isActive = item => item.key === selected\n  const onClick = item => () => { \n    window.location.href = item.url\n  }\n\n  return (\n    <ul>\n      {items.map(item => (\n        <NavItem \n          key={item.key}\n          label={item.label}\n          disabled={item.disabled}\n          active={isActive(item)}\n          onClick={onClick(item)}\n        />\n      ))}\n    </ul>\n  ) \n}\n```", "```js\nclass ClassComponent extends React.Component {\n  render() {\n    const { name } = this.props;\n    return <h1>Hello, { name }</h1>;\n }\n}\n```", "```js\nimport { memo } from 'react'\nconst Title = memo(() => <h1>Hello</h1>)\nconst App = () => <Title />\n```"]