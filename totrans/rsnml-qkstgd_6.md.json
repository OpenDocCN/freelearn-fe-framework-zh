["```js\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Header = styled.header`\n  font-size: 1.5em;\n  text-align: center;\n  color: dodgerblue;\n`;\n```", "```js\nconst Title = styled.h1`\n  text-align: ${props => props.center ? \"center\" : \"left\"};\n  text-decoration: ${props => props.underline ? \"underline\" : \"none\"};\n  color: white;\n  background-color: coral;\n`;\n\nrender(\n  <div>\n    <Title>I'm Left Aligned</Title>\n    <Title center>I'm Centered!</Title>\n    <Title center underline>I'm Centered & Underlined!</Title>\n  </div>\n);\n```", "```js\n/* StyledComponents.re */\n[@bs.module \"styled-components\"] [@bs.scope \"default\"] [@bs.variadic]\nexternal h1: (array(string), array('a)) => ReasonReact.reactClass = \"h1\";\n\nmodule Title = {\n  let title =\n    h1(\n      [|\n        \"text-align: \",\n        \"; text-decoration: \",\n        \"; color: white; background-color: coral;\",\n      |],\n      [|\n        props => props##center ? \"center\" : \"left\",\n        props => props##underline ? \"underline\" : \"none\",\n      |],\n    );\n\n  [@bs.deriving abstract]\n  type jsProps = {\n    center: bool,\n    underline: bool,\n  };\n\n  let make = (~center=false, ~underline=false, children) =>\n    ReasonReact.wrapJsForReason(\n      ~reactClass=title,\n      ~props=jsProps(~center, ~underline),\n      children,\n    );\n};\n```", "```js\n/* JavaScript */\nMath.max(1, 2);\nMath.max(1, 2, 3, 4);\n```", "```js\n/* Reason */\n[@bs.scope \"Math\"][@bs.val][@bs.variadic] external max: array('a) => unit = \"\";\nmax([|1, 2|]);\nmax([|1, 2, 3, 4|]);\n```", "```js\n/* Home.re */\nlet component = ReasonReact.statelessComponent(\"Home\");\n\nlet make = _children => {\n  ...component,\n  render: _self =>\n    <StyledComponents.Title center=true underline=true>\n {ReasonReact.string(\"Page1\")}\n </StyledComponents.Title>,\n};\n```", "```js\n/* Title.re */\n%bs.raw\n{|const styled = require(\"styled-components\").default|};\n\nlet title = [%bs.raw\n  {|\n     styled.h1`\n       text-align: ${props => props.center ? \"center\" : \"left\"};\n       text-decoration: ${props => props.underline ? \"underline\" : \"none\"};\n       color: white;\n       background-color: coral;\n     `\n   |}\n];\n\n[@bs.deriving abstract]\ntype jsProps = {\n  center: bool,\n  underline: bool,\n};\n\nlet make = (~center=false, ~underline=false, children) =>\n  ReasonReact.wrapJsForReason(\n    ~reactClass=title,\n    ~props=jsProps(~center, ~underline),\n    children,\n  );\n```", "```js\n/* Home.re */\nlet component = ReasonReact.statelessComponent(\"Home\");\n\nlet make = _children => {\n  ...component,\n  render: _self =>\n    <Title center=true underline=true> {ReasonReact.string(\"Page1\")} </Title>,\n};\n```", "```js\ngit clone https://github.com/PacktPublishing/ReasonML-Quick-Start-Guide.git\ncd ReasonML-Quick-Start-Guide\ncd Chapter06/app-start\nnpm install\n```", "```js\n/* bsconfig.json */\n...\n\"bs-dependencies\": [\"reason-react\", \"bs-css\"],\n...\n```", "```js\n/* App.re */\n\n...\nlet component = ReasonReact.reducerComponent(\"App\");\n\nmodule Styles = {\n  open Css;\n};\n...\n```", "```js\n.App {\n  min-height: 100vh;\n\n  &:after {\n    content: \"\";\n    transition: opacity 450ms cubic-bezier(0.23, 1, 0.32, 1),\n      transform 0ms cubic-bezier(0.23, 1, 0.32, 1) 450ms;\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, 0.33);\n    transform: translateX(-100%);\n    opacity: 0;\n    z-index: 1;\n  }\n\n  &.overlay {\n    &:after {\n      transition: opacity 450ms cubic-bezier(0.23, 1, 0.32, 1);\n      transform: translateX(0%);\n      opacity: 1;\n    }\n  }\n}\n```", "```js\nmodule Styles = {\n  open Css;\n\n  let app = style([\n    minHeight(vh(100.)),\n  ]);\n};\n```", "```js\nmin-height: red;\n```", "```js\nmodule Styles = {\n  open Css;\n\n  let app =\n    style([\n      minHeight(vh(100.)),\n\n      after([\n contentRule(\"\"),\n transitions([\n `transition(\"opacity 450ms cubic-bezier(0.23, 1, 0.32, 1)\"),\n `transition(\"transform 0ms cubic-bezier(0.23, 1, 0.32, 1) 450ms\"),\n ]),\n        position(fixed),\n        top(zero),\n        right(zero),\n        bottom(zero),\n        left(zero),\n        backgroundColor(rgba(0, 0, 0, 0.33)),\n        transform(translateX(pct(-100.))),\n        opacity(0.),\n        zIndex(1),\n      ]),\n\n      selector(\n        \"&.overlay\",\n        [ \n          after([\n            `transition(\"opacity 450ms cubic-bezier(0.23, 1, 0.32, 1)\"),\n            transform(translateX(zero))),\n            opacity(1.),\n          ]),\n        ],\n      )\n    ]);\n};\n```", "```js\n/* App.re */\n...\nrender: self =>\n  <div\n    className={\"App \" ++ Styles.app ++ (self.state.isOpen ? \" overlay\" : \"\")}\n...\n```", "```js\ncontent: url(./img/icon/chevron.svg);\n```", "```js\ncontentRule(url(\"./img/icon/chevron.svg\")) /* type error */\n```", "```js\nunsafe(\"content\", \"url('./img/icon/chevron.svg')\")\n```"]