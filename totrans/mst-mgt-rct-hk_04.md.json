["```js\nconst addOne = (n) => n + 1;\n```", "```js\nlet base = 1;\nconst addBase = (n) => n + base;\n```", "```js\nconst createContainer = () => {\n  let base = 1;\n  const addBase = (n) => n + base;\n  const changeBase = (b) => { base = b; };\n  return { addBase, changeBase };\n};\nconst { addBase, changeBase } = createContainer();\n```", "```js\nconst Component = ({ number }) => {\n  return <div>{number}</div>;\n};\n```", "```js\nconst AddOne = ({ number }) => {\n  return <div>{number + 1}</div>;\n};\n```", "```js\nconst AddBase = ({ number }) => {\n  const [base, changeBase] = useState(1);\n  return <div>{number + base}</div>;\n};\n```", "```js\nconst Component1 = () => {\n  const [count, setCount] = useState(0);\n  return (\n    <div>\n      {count}\n      <button onClick={() => setCount((c) => c + 1)}>\n        Increment Count\n      </button>\n    </div>\n  );\n};\nconst Component2 = () => {\n  const [count, setCount] = useState(0);\n  return (\n    <div>\n      {count}\n      <button onClick={() => setCount((c) => c + 1)}>\n        Increment Count\n      </button>\n    </div>\n  );\n};\n```", "```js\nconst Component1 = ({ count, setCount }) => {\n  return (\n    <div>\n      {count}\n      <button onClick={() => setCount((c) => c + 1)}>\n        Increment Count\n      </button>\n    </div>\n  );\n};\nconst Component2 = ({ count, setCount }) => {\n  return (\n    <div>\n      {count}\n      <button onClick={() => setCount((c) => c + 1)}>\n        Increment Count\n      </button>\n    </div>\n  );\n};\nconst Parent = () => {\n  const [count, setCount] = useState(0);\n  return (\n    <>\n      <Component1 count={count} setCount={setCount} />\n      <Component2 count={count} setCount={setCount} />\n    </>\n  );\n};\n```", "```js\nconst AdditionalInfo = () => {\n  return <p>Some information</p>\n};\nconst Component1 = ({ count, setCount }) => {\n  return (\n    <div>\n      {count}\n      <button onClick={() => setCount((c) => c + 1)}>\n        Increment Count\n      </button>\n      <AdditionalInfo />\n    </div>\n  );\n};\nconst Parent = () => {\n  const [count, setCount] = useState(0);\n  return (\n    <>\n      <Component1 count={count} setCount={setCount} />\n      <Component2 count={count} setCount={setCount} />\n    </>\n  );\n};\n```", "```js\nconst AdditionalInfo = () => {\n  return <p>Some information</p>\n};\nconst Component1 = ({ count, setCount, additionalInfo }) => {\n  return (\n    <div>\n      {count}\n      <button onClick={() => setCount((c) => c + 1)}>\n        Increment Count\n      </button>\n      {additionalInfo}\n    </div>\n  );\n};\nconst Parent = ({ additionalInfo }) => {\n  const [count, setCount] = useState(0);\n  return (\n    <>\n      <Component1\n        count={count}\n        setCount={setCount}\n        additionalInfo={additionalInfo}\n      />\n      <Component2 count={count} setCount={setCount} />\n    </>\n  );\n};\nconst GrandParent = () => {\n  return <Parent additionalInfo={<AdditionalInfo />} />;\n};\n```", "```js\nconst AdditionalInfo = () => {\n  return <p>Some information</p>\n};\nconst Component1 = ({ count, setCount, children }) => {\n  return (\n    <div>\n      {count}\n      <button onClick={() => setCount((c) => c + 1)}>\n        Increment Count\n      </button>\n      {children}\n    </div>\n  );\n};\nconst Parent = ({ children }) => {\n  const [count, setCount] = useState(0);\n  return (\n    <>\n      <Component1 count={count} setCount={setCount}>\n        {children}\n      </Component1>\n      <Component2 count={count} setCount={setCount} />\n    </>\n  );\n};\nconst GrandParent = () => {\n  return (\n    <Parent>\n      <AdditionalInfo />\n    </Parent>\n  );\n};\n```", "```js\nconst createContainer = () => {\n  let base = 1;\n  const addBase = (n) => n + base;\n  const changeBase = (b) => { base = b; };\n  return { addBase, changeBase };\n};\nconst container1 = createContainer();\nconst container2 = createContainer();\ncontainer1.changeBase(10);\nconsole.log(container1.addBase(2)); // shows \"3\"\nconsole.log(container2.addBase(2)); // shows \"12\"\n```", "```js\nconst Component1 = ({ count, setCount }) => {\n  return (\n    <div>\n      {count}\n      <button onClick={() => setCount((c) => c + 1)}>\n        Increment Count\n      </button>\n    </div>\n  );\n};\nconst Parent = ({ count, setCount }) => {\n  return (\n    <>\n      <Component1 count={count} setCount={setCount} />\n    </>\n  );\n};\nconst GrandParent = ({ count, setCount }) => {\n  return (\n    <>\n      <Parent count={count} setCount={setCount} />\n    </>\n  );\n};\nconst Root = () => {\n  const [count, setCount] = useState(0);\n  return (\n    <>\n      <GrandParent count={count} setCount={setCount} />\n    </>\n  );\n};\n```", "```js\nconst Component1 = () => {\n  // useGlobalCountState is a pseudo hook \n  const [count, setCount] = useGlobalCountState();\n  return (\n    <div>\n      {count}\n      <button onClick={() => setCount((c) => c + 1)}>\n        Increment Count\n      </button>\n    </div>\n  );\n};\nconst Parent = () => {\n  return (\n    <>\n      <Component1 />\n    </>\n  );\n};\nconst GrandParent = () => {\n  return (\n    <>\n      <Parent />\n    </>\n  );\n};\nconst Root = () => {\n  return (\n    <>\n      <GrandParent />\n    </>\n  );\n};\n```", "```js\nconst globalState = {\n  authInfo: { name: 'React' },\n};\nconst Component1 = () => {\n  // useGlobalState is a pseudo hook\n  const { authInfo } = useGlobalState();\n  return (\n    <div>\n      {authInfo.name}\n    </div>\n  );\n};\n```"]