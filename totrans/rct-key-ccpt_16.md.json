["```js\nimport pg from 'pg'; // pg package (more info: node-postgres.com)\nconst { Client } = pg\n\nconst client = new Client({\n  user: 'username',\n  password: 'your-password',\n  host: 'my.database-server.com',\n  port: 5334,\n  database: 'demo',\n});\nasync function ProductsPage() {\n  await client.connect();\n  const res = await client.query('SELECT * FROM products'); \n  await client.end();\n  return (\n    <ul>\n      {res.rows.map(row => <li key={row.id}>{row.title}</li>)}\n    </ul>\n  );\n} \n```", "```js\nexport default function ServerComponentInfo() {\n  return <p>This is a React Server Component.</p>;\n} \n```", "```js\n<ServerComponentInfo /> \n```", "```js\nimport ServerComponentInfo from '../components/ServerComponentInfo';\nexport default function Home() {\n  return <ServerComponentInfo />;\n} \n```", "```js\nimport Link from 'next/link';\nexport default function ServerComponentInfo() {\n  return (\n    <div id=\"rsc-info\">\n      <p>This is a React Server Component.</p>\n      <p><Link href=\"/info\">Learn More</Link></p>\n    </div>\n  );\n} \n```", "```js\nimport fs from 'node:fs/promises';\nexport default async function InfoPage() {\n  const info = await fs.readFile('data/rsc-info.json', 'utf-8');\n  const { summary } = JSON.parse(info);\n\n  return (\n    <div id=\"info-page\">\n      <h1>Understanding React Server Components</h1>\n      <p>\n        {summary}\n      </p>\n    </div>\n  );\n} \n```", "```js\n'use client';\nimport { useState } from 'react';\nexport default function Cart() {\n  const [isVisible, setIsVisible] = useState(false);\n  function handleCartVisibility() {\n    setIsVisible((prevState) => !prevState);\n  }\n  return (\n    <div id=\"cart\">\n      <button onClick={handleCartVisibility}>\n        {isVisible ? 'Hide Cart' : 'Show Cart'}\n      </button>\n      {isVisible && <p>Cart Items</p>}\n    </div>\n  );\n} \n```", "```js\n'use client';\nimport { useEffect, useRef, useState } from 'react';\nexport default function UserTodos() {\n  const todoRef = useRef(null);\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    const storedTodos = localStorage.getItem('todos');\n    setTodos(storedTodos ? JSON.parse(storedTodos) : []);\n  }, []);\n  function handleAddTodo(event) {\n    event.preventDefault();\n    const todo = todoRef.current.value.trim();\n    const newTodo = {\n      id: new Date().getTime(),\n      text: todo,\n    };\n    setTodos((prevTodos) => [...prevTodos, newTodo]);\n    const storedTodos = localStorage.getItem('todos');\n    localStorage.setItem(\n      'todos',\n      JSON.stringify(\n        storedTodos \n          ? [...JSON.parse(storedTodos), newTodo] \n          : [newTodo]\n      )\n    );\n  }\n  return (\n    <>\n      <form onSubmit={handleAddTodo}>\n        <input type=\"text\" placeholder=\"Your to-do\" ref={todoRef} />\n        <button type=\"submit\">Add</button>\n      </form>\n      <ul>\n        {todos.map((todo) => (\n          <li key={todo.id}>{todo.text}</li>\n        ))}\n      </ul>\n    </>\n  );\n} \n```", "```js\nimport UserTodos from '../components/UserTodos';\nexport default function Home() {\n  return (\n    <main>\n      <h1>Manage your to-dos with ease!</h1>\n      <UserTodos />\n    </main>\n  );\n} \n```", "```js\n**'use client'****;**\nimport { useState } from 'react';\nimport CartItem from './CartItem';\nexport default function Cart() {\n  const [isVisible, setIsVisible] = useState(false);\n  function handleCartVisibility() {\n    setIsVisible((prevState) => !prevState);\n  }\n  return (\n    <div id=\"cart\">\n      <button onClick={handleCartVisibility}>\n        {isVisible ? 'Hide Cart' : 'Show Cart'}\n      </button>\n      {isVisible && (\n        <ul>\n          **<****CartItem****title****=****{****'****Book****'****}****quantity****=****{1}** **/>**\n          **<****CartItem****title****=****{****'****Pen****'****}****quantity****=****{2}** **/>**\n          **<****CartItem****title****=****{****'****Pencil****'****}****quantity****=****{5}** **/>**\n        </ul>\n      )}\n    </div>\n  );\n} \n```", "```js\nexport default function CartItem({ title, quantity }) {\n  return (\n    <li>\n      <article>\n        <h2>{title}</h2>\n        <p>Quantity: {quantity}</p>\n      </article>\n    </li>\n  );\n} \n```", "```js\nimport fs from 'node:fs/promises';\nexport default async function DyncamicCartItem({ id }) {\n  const data = await fs.readFile(`data/cart.json`, 'utf8');\n  const storedCart = JSON.parse(data);\n  const cartItem = storedCart.find((item) => item.id === id);\n  return (\n    <li>\n      <article>\n        <h2>{cartItem.title}</h2>\n        <p>Quantity: {cartItem.quantity}</p>\n      </article>\n    </li>\n  );\n} \n```", "```js\n'use client';\nimport { useState } from 'react';\nexport default function Cart(**{ children }**) {\n  const [isVisible, setIsVisible] = useState(false);\n  function handleCartVisibility() {\n    setIsVisible((prevState) => !prevState);\n  }\n  return (\n    <div id=\"cart\">\n      <button onClick={handleCartVisibility}>\n        {isVisible ? 'Hide Cart' : 'Show Cart'}\n      </button>\n      {isVisible && **<****ul****>****{children}****</****ul****>**}\n    </div>\n  );\n} \n```", "```js\nimport DyncamicCartItem from '../components/DynamicCartItem';\nimport Cart from '../components/Cart';\nexport default function Home() {\n  return (\n    <>\n      <header>\n        <Cart>\n          <DyncamicCartItem id={1} />\n          <DyncamicCartItem id={2} />\n          <DyncamicCartItem id={3} />\n        </Cart>\n      </header>\n      <main>\n        <h1>Some dummy app</h1>\n      </main>\n    </>\n  );\n} \n```", "```js\nimport fs from 'node:fs/promises';\nasync function fetchGoals() {\n  await new Promise((resolve) => setTimeout(resolve, 3000)); // delay\n  const goals = await fs.readFile('./data/user-goals.json', 'utf-8');\n  return JSON.parse(goals);\n}\nexport default async function GoalsPage() {\n  const fetchedGoals = await fetchGoals();\n  return (\n    <>\n    <h1>Top User Goals</h1>\n    <ul>\n      {fetchedGoals.map((goal) => (\n        <li key={goal}>{goal}</li>\n      ))}\n    </ul>\n    </>\n  );\n} \n```", "```js\nexport default function LoadingGoals() {\n  return <p id=\"fallback\">Loading user goals, please wait...</p>;\n} \n```", "```js\nexport default function UserFeedback() {\n  **async****function****saveFeedback****(****formData****) {**\n    **'use server'****;**\n    **const** **feedback = formData.****get****(****'feedback'****);**\n    **console****.****log****(feedback);**\n  **}**\n  return (\n    <form **action****=****{saveFeedback}**>\n      <p>\n        <label htmlFor=\"feedback\">Your feedback</label>\n        <textarea id=\"feedback\" name=\"feedback\" rows={3} />\n      </p>\n      <p><button>Submit</button></p>\n    </form>\n  );\n} \n```", "```js\n**import** **{ storeFeedback }** **from****'../lib/feedback-db'****;**\nfunction UserFeedback() {\n  async function saveFeedback(formData) {\n    'use server';\n    const feedback = formData.get('feedback');\n    **storeFeedback****(feedback);**\n  }\n  return (\n    <form **action****=****{saveFeedback}**>\n      <p>\n        <label htmlFor=\"feedback\">Your feedback</label>\n        <textarea id=\"feedback\" name=\"feedback\" rows={3} />\n      </p>\n      <p><button>Submit</button></p>\n    </form>\n  );\n} \n```", "```js\nimport fs from 'node:fs/promises';\nexport async function storeFeedback(text) {\n  const storedFeedback = await fs.readFile('data/user-feedback.json');\n  const feedback = JSON.parse(storedFeedback);\n  feedback.push({ id: new Date().getTime(), text });\n  await fs.writeFile(\n    'data/user-feedback.json', \n    JSON.stringify(feedback)\n  );\n} \n```", "```js\n**import** **{ redirect }** **from****'next/navigation'****;**\nimport { storeFeedback } from '../lib/feedback-db';\nexport default function UserFeedback() {\n  async function saveFeedback(formData) {\n    'use server';\n    const feedback = formData.get('feedback');\n    await storeFeedback(feedback);\n    **redirect****(****'/thanks'****)**\n  }\n  // same JSX code as before, hence omitted\n} \n```", "```js\n**import** **{ useActionState }** **from****'react'****;**\nimport { redirect } from 'next/navigation';\nimport { storeFeedback } from '../lib/feedback-db';\nimport FeedbackForm from './FeedbackForm';\nexport default function UserFeedback() {\n  async function saveFeedback(prevState, formData) {\n    'use server';\n    const feedback = formData.get('feedback');\n    **if** **(!feedback || feedback.****trim****() ===** **''****) {**\n      **return** **{** **error****:** **'Please provide some feedback!'** **};**\n    **}**\n    await storeFeedback(feedback);\n    redirect('/thanks');\n  }\n  **const** **[formState, formAction] =** **useActionState****(saveFeedback, {**\n    **error****:** **null****,**\n  **});**\n  return (\n    <form action={formAction}>\n      <p>\n        <label htmlFor=\"feedback\">Your feedback</label>\n        <textarea id=\"feedback\" name=\"feedback\" rows={3} />\n      </p>\n      **{formState.error &&** **<****p****id****=****\"error\"****>****{formState.error}****</****p****>****}**\n      <p>\n        <button>Submit</button>\n      </p>\n    </form>\n  );\n} \n```", "```js\n**'use client'****;**\nimport { useActionState } from 'react';\nimport { redirect } from 'next/navigation';\nimport { storeFeedback } from '../lib/feedback-db';\nimport FeedbackForm from './FeedbackForm';\nexport default function UserFeedback() {\n  // component code didn't change, hence omitted\n} \n```", "```js\n'use client';\nimport { useActionState } from 'react';\nexport default function FeedbackForm(**{action}**) {\n  const [formState, formAction] = useActionState(**action**, {\n    error: null,\n  });\n  return (\n    <form action={formAction}>\n      <p>\n        <label htmlFor=\"feedback\">Your feedback</label>\n        <textarea id=\"feedback\" name=\"feedback\" rows={3} />\n      </p>\n      {formState.error && <p id=\"error\">{formState.error}</p>}\n      <p>\n        <button>Submit</button>\n      </p>\n    </form>\n  );\n} \n```", "```js\nimport { redirect } from 'next/navigation';\nimport { storeFeedback } from '../lib/feedback-db';\n**import****FeedbackForm****from****'./FeedbackForm'****;**\nexport default function UserFeedback() {\n  async function saveFeedback(prevState, formData) {\n    'use server';\n    const feedback = formData.get('feedback');\n    if (!feedback || feedback.trim() === '') {\n      return { error: 'Please provide some feedback!' };\n    }\n    await storeFeedback(feedback);\n    redirect('/thanks');\n  }\n  return **<****FeedbackForm****action****=****{saveFeedback}** **/>**;\n} \n```", "```js\n'use server';\nimport { redirect } from 'next/navigation';\nimport { storeFeedback } from '../lib/feedback-db';\nexport async function saveFeedback(prevState, formData) {\n  const feedback = formData.get('feedback');\n  if (!feedback || feedback.trim() === '') {\n    return { error: 'Please provide some feedback!' };\n  }\n  await storeFeedback(feedback);\n  redirect('/thanks');\n} \n```", "```js\n'use client';\n**import** **{ saveFeedback }** **from****'../actions/feedback'****;**\nimport { useActionState } from 'react';\nexport default function UserFeedback() {\n  const [formState, formAction] = useActionState(**saveFeedback**, {\n    error: null,\n  });\n  return (\n    <form action={formAction}>\n      <p>\n        <label htmlFor=\"feedback\">Your feedback</label>\n        <textarea id=\"feedback\" name=\"feedback\" rows={3} />\n      </p>\n      {formState.error && <p id=\"error\">{formState.error}</p>}\n      <p>\n        <button>Submit</button>\n      </p>\n    </form>\n  );\n} \n```"]