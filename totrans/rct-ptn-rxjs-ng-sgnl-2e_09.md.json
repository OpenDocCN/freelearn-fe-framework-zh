["```js\nimport { Observable} from 'rxjs';\nconst coldObservable$ = new Observable(observer => {\n  observer.next(Math.random());\n  observer.next(Math.random());\n  observer.complete();\n});\n/** First subscriber */\ncoldObservable$.subscribe(data => {\n  console.log(`The first Observer : ${data}`);\n});\n/** Second subscriber */\ncoldObservable$.subscribe(data => {\n  console.log(`The second Observer : ${data}`);\n});\n//console output\nThe first Observer: 0.043246216289945405\nThe first Observer: 0.7836505017199451\nThe second Observer: 0.18013755537578624\nThe second Observer: 0.23196314531696882\n```", "```js\nimport { Observable, fromEvent } from 'rxjs';\n// Hot Observable\nconst hotObservable$ = fromEvent(document, 'click');\nhotObservable$.subscribe(({ x, y }: MouseEvent) => {\n  console.log(`The first subscriber: [${x}, ${y}]`);\n});\nhotObservable$.subscribe(({ x, y }: MouseEvent)=> {\n  console.log(`The second subscriber: [${x}, ${y}]`);\n});\n//console output\nThe first subscriber: [108, 104]\nThe second subscriber: [108, 104]\n```", "```js\nconst value = Math.random();\nconst coldObservable$ = new Observable(observer => {\n  observer.next(value);\n  observer.next(value);\n  observer.complete();\n});\n/** first subscriber */\ncoldObservable$.subscribe(data => {\n  console.log(`The first subscriber: ${data}`);\n});\n/** second subscriber */\ncoldObservable$.subscribe(data => {\n  console.log(`The second subscriber: ${data}`);\n});\n//console output\nThe first subscriber: 0.6642828154026537\nThe first subscriber: 0.6642828154026537\nThe second subscriber: 0.6642828154026537\nThe second subscriber: 0.6642828154026537\n```", "```js\n    const observer = {\n      next: x => console.log('Observer got a next value: '\n                             + x),\n      error: err => console.error('Observer got an error:\n                                  '+err),\n      complete: () => console.log('Observer got a\n                                  completion'),\n    };\n    ```", "```js\nconst plainSubject$ = new Subject();\nplainSubject$.next(10);\nplainSubject$.next(20);\nplainSubject$.subscribe({\n    next: (message) => console.log(message),\n    error: (error) => console.log(error),\n    complete: () => console.log('Stream Completed'),\n  });\nplainSubject$.subscribe({\n    next: (message) => console.log(message),\n    error: (error) => console.log(error),\n    complete: () => console.log('Stream Completed'),\n  });\nplainSubject$.next(30);\n//console output\n30\n30\n```", "```js\nconst replaySubject$ = new ReplaySubject();\nreplaySubject$.next(10);\nreplaySubject$.next(20);\nreplaySubject$.next(50);\nreplaySubject$.subscribe({\n  next: (message) => console.log(message),\n  error: (error) => console.log(error),\n  complete: () => console.log('Stream Completed'),\n});\nreplaySubject$.subscribe({\n  next: (message) => console.log(message),\n  error: (error) => console.log(error),\n  complete: () => console.log('Stream Completed'),\n});\nreplaySubject$.next(30);\n//console output\n10\n20\n50\n10\n20\n50\n30\n30\n```", "```js\nconst  replaySubject$ = new ReplaySubject(2);\n```", "```js\n20\n50\n20\n50\n30\n30\n```", "```js\nconst behaviourSubject$ = new BehaviorSubject(1);\nbehaviourSubject$.next(10);\nbehaviourSubject$.next(20);\nbehaviourSubject$.next(50);\nbehaviourSubject$.subscribe({\n  next: (message) => console.log(message),\n  error: (error) => console.log(error),\n  complete: () => console.log('Stream Completed'),\n});\nbehaviourSubject$.subscribe({\n  next: (message) => console.log(message),\n  error: (error) => console.log(error),\n  complete: () => console.log('Stream Completed'),\n});\nbehaviourSubject$.next(30);\n//console output\n50\n50\n30\n30\n```", "```js\nconst behaviourSubject$ = new BehaviorSubject(1);\nbehaviourSubject$.subscribe({\n  next: (message) => console.log(message),\n  error: (error) => console.log(error),\n  complete: () => console.log('Stream Completed'),\n});\nbehaviourSubject$.subscribe({\n  next: (message) => console.log(message),\n  error: (error) => console.log(error),\n  complete: () => console.log('Stream Completed'),\n});\nbehaviourSubject$.next(30);\n//console output\n1\n1\n30\n30\n```"]