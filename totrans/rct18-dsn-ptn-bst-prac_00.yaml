- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: '**React** is a revolutionary, open-source JavaScript library that breathes
    life into web applications by constructing intricate user interfaces from small,
    isolated chunks known as components. This book serves as a roadmap, guiding you
    through the wonders of React and enhancing your productivity by introducing an
    efficient workflow without compromising on quality.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**React**是一个革命性的开源JavaScript库，通过构建由称为组件的小型、隔离的块组成的复杂用户界面，为Web应用程序注入活力。本书作为一份路线图，引导您领略React的奇妙之处，通过引入一个高效的工作流程来提高您的生产力，同时不牺牲质量。'
- en: Our journey begins by delving deep into the core of React, gaining a thorough
    understanding of its internal mechanisms and architecture. With this strong foundation
    in place, we will guide you towards writing clean and maintainable code, breaking
    down complex concepts into digestible and manageable chunks.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的旅程从深入React的核心开始，全面了解其内部机制和架构。在这个坚实的基础之上，我们将引导您编写干净且易于维护的代码，将复杂的概念分解成易于消化和管理的小块。
- en: Continuing our journey, we will uncover the art of building components that
    aren’t just one-off entities but reusable pieces across your application. We’ll
    illuminate the path to structuring your applications, making them more organized
    and manageable. The seemingly daunting task of creating functional forms will
    become a breeze as we equip you with strategies and techniques to do so effectively.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续旅程的过程中，我们将揭示构建组件的艺术，这些组件不仅仅是单一实体，而是可以在整个应用程序中重复使用的部件。我们将阐明构建应用程序结构的方法，使它们更加有序和易于管理。随着我们为您提供有效实现这一目标的策略和技术，创建功能表单的看似艰巨的任务将变得轻而易举。
- en: As we ascend further, we’ll immerse ourselves in styling React components. You’ll
    learn how to bring your applications to life with aesthetic appeal while ensuring
    they remain swift and responsive. Moreover, you’ll discover the secrets of enhancing
    application performance, fine-tuning your components for speed and efficiency.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我们进一步攀登，我们将沉浸在React组件的样式化中。您将学习如何通过美学吸引力使您的应用程序生动起来，同时确保它们保持快速和响应。此外，您还将发现提高应用程序性能的秘密，对您的组件进行微调以实现速度和效率。
- en: In the final phase of our journey, we’ll delve into testing methodologies effectively,
    refining the quality and reliability of your applications. You’ll also gain insight
    into contributing to React and its thriving ecosystem, joining the ranks of developers
    who continually drive its evolution.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们旅程的最后阶段，我们将深入研究有效的测试方法，提高您应用程序的质量和可靠性。您还将获得对贡献React及其繁荣生态系统的洞察，加入那些不断推动其发展的开发者行列。
- en: By the end of this book, the trial-and-error process, the developmental hurdles,
    and guesswork will be things of the past. You will have harnessed the power of
    React, equipped with the skills necessary to construct and deploy real-world React
    web applications with confidence and finesse.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 到本书结束时，试错过程、开发障碍和猜测将成为过去。您将掌握React的力量，拥有构建和部署真实世界React Web应用程序所需的知识和技能，自信且优雅。
- en: Who this book is for
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书面向谁
- en: This book is for web developers who want to increase their understanding of
    React and apply it to real-life app development. Intermediate-level experience
    with React and JavaScript is assumed.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书是为那些希望提高他们对React的理解并将其应用于实际应用程序开发的网络开发者而写的。假设您具有中级React和JavaScript经验。
- en: What this book covers
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: In *Chapter 1*, *Taking Your First Steps with React*, we start our journey to
    understand React by learning to write declarative code and distinguishing between
    our components and React’s elements. We also discuss why we combine logic and
    templates in React, a decision that was controversial initially but ultimately
    beneficial. Recognizing the potential for feeling overwhelmed in the rapidly evolving
    world of JavaScript, we suggest taking small, manageable steps to avoid fatigue.
    We wrap up by introducing the new `create-vite` tool, preparing you for hands-on
    coding experience in React.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第一章*，*React的初学者之旅*中，我们通过学习编写声明式代码和区分我们的组件与React的元素来开始理解React的旅程。我们还讨论了为什么我们在React中将逻辑和模板结合起来，这个决定最初颇具争议，但最终是有益的。在JavaScript快速发展的世界中，我们建议采取小而可控的步骤以避免疲劳。我们通过介绍新的`create-vite`工具来结束，为您在React中进行动手编码体验做好准备。
- en: In *Chapter 2*, *Introducing TypeScript*, we’ll learn the basics of TypeScript,
    including creating simple types, interfaces, using enums, namespaces, and template
    literals. We’ll also figure out how to set up our first TypeScript configuration
    file (`tsconfig.json`) and divide it into two parts - a common part and a specific
    part, which is particularly handy when working with MonoRepos. After this chapter,
    you’ll be all set to delve into using JSX/TSX code and explore ways to make your
    code better in the next chapter. Get ready to use TypeScript to make your React
    apps easy to work with and maintain.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第2章*，*介绍TypeScript*中，我们将学习TypeScript的基础知识，包括创建简单的类型、接口、使用枚举、命名空间和模板字符串。我们还将了解如何设置我们的第一个TypeScript配置文件（`tsconfig.json`），并将其分为两部分
    - 一个公共部分和一个特定部分，这在与MonoRepos一起工作时特别有用。在本章之后，你将准备好深入使用JSX/TSX代码，并在下一章探索使你的代码更好的方法。准备好使用TypeScript使你的React应用易于使用和维护。
- en: In *Chapter 3*, *Cleaning Up Your Code*, we’ll get to know JSX, including how
    it’s written and what it can do. We’ll also set up Prettier and ESLint to keep
    our code neat and prevent mistakes. Plus, we’ll learn about functional programming,
    which makes our code easier to manage and test. After tidying up our code, we’ll
    be prepared to go deeper into React and learn how to make components that we can
    use repeatedly in the next chapter. By adopting good habits, we can build React
    apps that are simple to manage, grow, and check.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第3章*，*清理你的代码*中，我们将了解JSX，包括它的编写方式和它能做什么。我们还将设置Prettier和ESLint以保持我们的代码整洁并防止错误。此外，我们将学习函数式编程，它使我们的代码更容易管理和测试。在整理好我们的代码后，我们将准备好更深入地学习React，并在下一章学习如何制作我们可以重复使用的组件。通过养成良好的习惯，我们可以构建简单易管理、可扩展和可检查的React应用。
- en: 'In *Chapter 4*, *Exploring Popular Composition Patterns*, we’ll learn how to
    use “props” to make our reusable components work together better. Using props
    helps keep our components separate and welldefined. We’ll look at two common ways
    to organize components: the container and presentational pattern, which keeps
    the rules and looks of our components separate. We’ll also learn about **Higher
    Order Components** (**HOCs**) for dealing with context without making our components
    too dependent, and the Function as Child pattern for creating components on-the-fly.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第4章*，*探索流行的组合模式*中，我们将学习如何使用“props”使我们的可重用组件更好地协同工作。使用props有助于保持我们的组件独立和定义明确。我们将探讨两种常见的组件组织方式：容器模式和展示模式，它们将组件的规则和外观分开。我们还将了解**高阶组件**（**HOCs**）用于处理上下文，而不会使我们的组件过于依赖，以及函数作为子组件的模式，用于动态创建组件。
- en: In *Chapter 5*, *Writing Code for the Browser*, we’ll look at how React can
    be used in a web browser to create forms, handle events, and animate SVGs. We’ll
    learn about the `useRef` Hook, which is an easy way to reach DOM nodes.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第5章*，*为浏览器编写代码*中，我们将了解React如何在Web浏览器中用于创建表单、处理事件和动画SVG。我们将学习`useRef`钩子，它是一种轻松访问DOM节点的方法。
- en: With React’s simple, straightforward approach, managing complex web apps becomes
    easier. Plus, React allows us to access DOM nodes directly if we need to, which
    makes it simple to use React with other libraries.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 使用React简单直接的方法，管理复杂的Web应用变得更容易。此外，如果需要，React允许我们直接访问DOM节点，这使得我们可以轻松地将React与其他库一起使用。
- en: In *Chapter 6*, *Making Your Components Look Beautiful*, we’ll dive into styling
    in React. We’ll start by looking at the problems with making CSS work for big
    projects, using the experiences of Meta as an example. We’ll learn about how we
    can write styles directly inside our React components, which keeps our code tidy
    and easy to read. But we’ll also learn about the limitations of this method and
    explore another way of styling, called CSS modules, that lets us write CSS in
    separate files but keep the styles scoped to individual components. Finally, we’ll
    get to know `styled-components`, a popular library for styling in React. By the
    end of this chapter, you’ll have many tools for making your React apps look great.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第6章*，*让你的组件看起来很漂亮*中，我们将深入了解React中的样式。我们首先将探讨CSS在大项目中工作的问题，以Meta的经验为例。我们将学习如何在我们的React组件内部直接编写样式，这使我们的代码整洁且易于阅读。但我们也将了解这种方法的优势，并探索另一种样式方法，称为CSS模块，它允许我们在单独的文件中编写CSS，但将样式限制在单个组件中。最后，我们将了解`styled-components`，这是一个流行的React样式库。到本章结束时，你将拥有许多使你的React应用看起来很棒的工具。
- en: In *Chapter 7*, *Anti-Patterns to Be Avoided*., we’ll talk about four ways of
    using components that could slow down or mess up our web apps. For each problem,
    we’ll use an example to show what goes wrong and how to fix it. We’ll learn why
    using properties to set up the state can cause problems between the state and
    the properties. We’ll also see how using the wrong “key” attribute can mess up
    the way React updates components. Lastly, we’ll learn why spreading non-standard
    properties to DOM elements is a bad idea. Understanding these issues will help
    us use React more effectively and avoid common mistakes.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第7章*，*应避免的反模式*中，我们将讨论四种使用组件的方法，这些方法可能会减慢或破坏我们的Web应用。对于每个问题，我们将使用示例来展示出了什么问题以及如何修复它。我们将了解为什么使用属性设置状态可能会在状态和属性之间引起问题。我们还将看到如何使用错误的“key”属性破坏React更新组件的方式。最后，我们将了解为什么将非标准属性扩展到DOM元素是一个坏主意。理解这些问题将帮助我们更有效地使用React并避免常见错误。
- en: In *Chapter 8*, *React Hooks*, we’ll have a lot of fun learning about the new
    React Hooks. We’ll learn how they work, how to use them to get data, and how to
    change a class component into a Hooks one. We’ll also learn about effects and
    the differences between `memo`, `useMemo`, and `useCallback`. Finally, we’ll see
    how the `useReducer` Hook works and how it’s different from `react-redux`. All
    of this will help us make our React components faster and better.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第8章*，*React Hooks*中，我们将愉快地学习关于新React Hooks的知识。我们将了解它们是如何工作的，如何使用它们来获取数据，以及如何将类组件转换为Hooks组件。我们还将了解副作用以及`memo`、`useMemo`和`useCallback`之间的区别。最后，我们将看到`useReducer`
    Hook是如何工作的，以及它与`react-redux`的不同之处。所有这些都将帮助我们使我们的React组件更快、更好。
- en: In *Chapter 9*, *React Router*, we’ll learn about React Router, a tool we use
    with React to move between pages in a single-page application. React doesn’t do
    this on its own, so we use React Router. We’ll find out how to use it to make
    our app respond to different URLs and manage navigation. By the end of this chapter,
    you’ll know how React Router works and how to use it in your projects. We’ll learn
    the differences between the `react-router`, `react-router-dom`, and `react-router-native`
    packages, how to set up React Router, how to add the `<Routes>` component, and
    how to add parameters to the routes.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第9章*，*React Router*中，我们将学习关于React Router的知识，这是我们与React一起使用来在单页应用中切换页面的工具。React本身不这样做，所以我们使用React
    Router。我们将了解如何使用它来使我们的应用响应不同的URL并管理导航。到本章结束时，你将了解React Router是如何工作的，以及如何在你的项目中使用它。我们将学习`react-router`、`react-router-dom`和`react-router-native`包之间的区别，如何设置React
    Router，如何添加`<Routes>`组件，以及如何向路由添加参数。
- en: In *Chapter 10*, *React 18 New Features*, we’ll explore the new and improved
    React 18\. It has loads of features that make building cool, interactive apps
    even easier.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第10章*，*React 18新特性*中，我们将探索新的和改进的React 18。它拥有众多特性，使得构建酷炫、交互式的APP变得更加容易。
- en: With automatic state update grouping, concurrent rendering, Suspense for getting
    data, better error handling, and new component types, you can create engaging
    and fast apps. If you work with React, it’s a good idea to consider upgrading
    to React 18\. We’ll also look at some of the big new features in Node 18 and 19,
    which can make our web projects even better.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 通过自动状态更新分组、并发渲染、用于获取数据的Suspense、更好的错误处理和新的组件类型，你可以创建引人入胜且快速的APP。如果你使用React，考虑升级到React
    18是个不错的选择。我们还将探讨Node 18和19的一些重大新特性，这些特性可以使我们的Web项目更加出色。
- en: In *Chapter 11*, *Managing Data*, we’ll learn about the React Context API and
    how to use React Suspense with SWR. We’ll learn the basics of the Context API,
    including creating and using contexts and how the `useContext` hook makes this
    even easier. We’ll also look at React Suspense and how it helps us handle loading
    states better for a smoother user experience. We’ll also learn about SWR, which
    makes it easier to fetch and cache data with React Suspense. Lastly, we’ll learn
    how to use the new Redux Toolkit. All these tools will help us build faster and
    more user-friendly React apps.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第11章*，*数据管理*中，我们将学习关于React Context API以及如何使用React Suspense与SWR的知识。我们将了解Context
    API的基础知识，包括创建和使用上下文以及`useContext`钩子如何使这一切变得更加简单。我们还将探讨React Suspense以及它是如何帮助我们更好地处理加载状态以提供更流畅的用户体验的。我们还将了解SWR，它使得使用React
    Suspense获取和缓存数据变得更加容易。最后，我们将学习如何使用新的Redux Toolkit。所有这些工具都将帮助我们构建更快、更用户友好的React应用。
- en: In *Chapter 12*, *Server Side Rendering*, we’ll finish our journey through **server-side
    rendering** (**SSR**) with React. Now you’ll know how to create an app that uses
    SSR, and why it can be useful for things like **search engine optimization** (**SEO**),
    social sharing, and improving performance. We’ll learn how to load data on the
    server and put it into the HTML template so it’s ready for the client-side app
    when it starts up in the browser. Lastly, we’ll see how tools like Next.js can
    make setting up SSR in React a lot easier by reducing the amount of extra code
    and hiding some of the tricky parts.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第12章*，*服务器端渲染*，我们将通过React完成对**服务器端渲染**（**SSR**）的旅程。现在你将知道如何创建一个使用SSR的应用程序，以及为什么它对搜索引擎优化（**SEO**）、社交分享和提升性能等方面很有用。我们将学习如何在服务器上加载数据并将其放入HTML模板中，以便在浏览器启动时客户端应用程序准备好。最后，我们将看到像Next.js这样的工具如何通过减少额外代码和隐藏一些复杂部分来简化在React中设置SSR。
- en: In *Chapter 13*, *Understanding GraphQL with a Real Project*, we’re going to
    learn about GraphQL, a cool tool that helps us work with APIs and our data more
    efficiently. Unlike regular REST APIs, GraphQL lets us ask for exactly what we
    need and nothing more. We’re going to use it to make a simple login and user registration
    system for a real project. We’ll learn how to install PostgreSQL, set up environment
    variables with an `.env` file, set up Apollo Server, make GraphQL queries and
    mutations, work with resolvers, create Sequelize models, use JWTs, play with the
    GraphQL Playground, and do authentication. By the end, you’ll know how to use
    GraphQL in your own projects.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第13章*，*通过真实项目理解GraphQL*，我们将学习GraphQL，这是一个帮助我们更高效地与API和数据工作的酷炫工具。与常规的REST API不同，GraphQL允许我们请求我们需要的精确内容，而不需要更多。我们将用它来为真实项目制作一个简单的登录和用户注册系统。我们将学习如何安装PostgreSQL，使用`.env`文件设置环境变量，设置Apollo
    Server，执行GraphQL查询和突变，与解析器一起工作，创建Sequelize模型，使用JWT，在GraphQL Playground中玩耍，并进行身份验证。到那时，你将知道如何在你的项目中使用GraphQL。
- en: In *Chapter 14*, *MonoRepo Architecture*, we’ll talk about something called
    a “MonoRepo.” Normally, when we build apps, we have one app, one git repository,
    and one build output. But many organizations use a single repository for all their
    apps, components, and libraries to make development easier. This is what we call
    a monorepository. It’s like keeping all your code in one big basket instead of
    having many little baskets. This makes it easier to keep everything updated and
    it can save time. We’ll also discuss how a MonoRepo can make it easier to refactor
    code, improve teamwork, and speed up the process of updating a package dependency
    without having to publish a new version every time there’s an update.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第14章*，*MonoRepo架构*，我们将讨论一个称为“MonoRepo”的概念。通常，当我们构建应用程序时，我们有一个应用程序，一个git仓库和一个构建输出。但许多组织使用单个仓库来存储所有应用程序、组件和库，以简化开发。这就是我们所说的单仓库。这就像把所有的代码放在一个大篮子里，而不是许多小篮子里。这使得保持一切更新变得更容易，并且可以节省时间。我们还将讨论MonoRepo如何使代码重构、提高团队合作和加快更新包依赖项的过程变得更容易，而无需每次更新时发布新版本。
- en: '*Chapter 15*, *Improving the Performance of Your Applications*, we will explore
    techniques to make your apps run smoother and quicker for a better user experience.
    We’ll delve into how React updates your app’s display and how using keys can aid
    in this process for improved efficiency. We will discover the importance of well-structured,
    task-focused components in boosting app performance. We will discuss the concept
    of immutability and its significance in helping `React.memo` and `shallowCompare`
    work effectively. Toward the end, we will introduce various tools and libraries
    that can further speed up your applications. This chapter aims to equip you with
    valuable knowledge to enhance the speed and performance of your apps.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第15章*，*提高应用程序的性能*，我们将探讨使你的应用程序运行得更顺畅、更快的技巧，以提供更好的用户体验。我们将深入了解React如何更新应用程序的显示，以及如何使用键来提高此过程的效率。我们将发现结构良好、任务导向的组件在提升应用程序性能方面的重要性。我们将讨论不可变性的概念及其在帮助`React.memo`和`shallowCompare`有效工作中的重要性。接近尾声时，我们将介绍各种工具和库，这些工具和库可以进一步加快你的应用程序。本章旨在为你提供宝贵的知识，以增强你应用程序的速度和性能。
- en: In *Chapter 16*, *Testing and Debugging*, we’re going to learn all about testing.
    You’ll find out why testing is important and explore different tools and techniques
    for checking if our React components are working as they should. We’ll work with
    libraries like React Testing Library and Jest to write and run tests, and even
    see how to test complex parts of our application like high-order components or
    forms with lots of fields. Plus, we’ll learn how to use tools like React DevTools
    and Redux DevTools to help us develop better apps. By the end of this chapter,
    you’ll have a solid grasp of how to keep your app working well through effective
    testing.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在第 16 章，*测试和调试*中，我们将学习有关测试的所有内容。你会发现为什么测试很重要，并探索检查我们的 React 组件是否按预期工作的不同工具和技术。我们将使用
    React Testing Library 和 Jest 等库来编写和运行测试，甚至了解如何测试应用中的复杂部分，如高阶组件或字段众多的表单。此外，我们还将学习如何使用
    React DevTools 和 Redux DevTools 等工具来帮助我们开发更好的应用。到本章结束时，你将牢固掌握如何通过有效的测试保持应用的良好运行状态。
- en: In *Chapter 17*, *Deploying to Production*, we’re going to take the React app
    you’ve built and share it with the world! We’ll use a cloud service called DigitalOcean
    to do this. You’ll learn how to use Node.js and nginx to get your app up and running
    on a server, and we’ll use an Ubuntu server from DigitalOcean for this purpose.
    We’ll walk you through how to set up a DigitalOcean Droplet, configure it, and
    link it to your domain. We’re also going to introduce you to CircleCI, which is
    a tool that helps you automatically make sure your app is always ready for users,
    no matter how many changes you make. By the end of this chapter, you’ll have your
    app live on the internet for everyone to see!
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在第 17 章，*部署到生产环境*中，我们将把您构建的 React 应用分享给全世界！我们将使用一个名为 DigitalOcean 的云服务来完成这项工作。您将学习如何使用
    Node.js 和 nginx 在服务器上运行您的应用，我们将使用 DigitalOcean 的 Ubuntu 服务器来完成这项工作。我们将向您介绍如何设置
    DigitalOcean Droplet、配置它并将其链接到您的域名。我们还将向您介绍 CircleCI，这是一个帮助您自动确保应用始终为用户准备就绪的工具，无论您做了多少更改。到本章结束时，您的应用将可以在互联网上供所有人查看！
- en: To get the most out of this book
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 要充分利用本书
- en: 'To master React, you need to have a fundamental knowledge of JavaScript and
    Node.js. This book is mostly targeted at web developers, and, at the time of writing,
    the following assumptions were made of the reader:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 要掌握 React，你需要具备 JavaScript 和 Node.js 的基础知识。本书主要面向网页开发者，在撰写本书时，对读者的以下假设：
- en: The reader knows how to install the latest version of Node.js.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读者知道如何安装 Node.js 的最新版本。
- en: The reader is an intermediate developer who can understand JavaScript ES6 syntax.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读者是一位中级开发者，能够理解 JavaScript ES6 语法。
- en: The reader has some experience of CLI tools and Node.js syntax.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读者对 CLI 工具和 Node.js 语法有一些经验。
- en: Download the example code files
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: The code bundle for the book is hosted on GitHub at [https://github.com/PacktPublishing/React-18-Design-Patterns-and-Best-Practices-Fourth-Edition/](https://github.com/PacktPublishing/React-18-Design-Patterns-and-Best-Practices-Fourth-Edition/).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 本书代码包托管在 GitHub 上，网址为 [https://github.com/PacktPublishing/React-18-Design-Patterns-and-Best-Practices-Fourth-Edition/](https://github.com/PacktPublishing/React-18-Design-Patterns-and-Best-Practices-Fourth-Edition/)。
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还从丰富的图书和视频目录中提供了其他代码包，可在 [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)
    上找到。查看它们吧！
- en: Download the color images
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载彩色图像
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://packt.link/o1WtB](https://packt.link/o1WtB).'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了一份包含本书中使用的截图/图表彩色图像的 PDF 文件。您可以从这里下载：[https://packt.link/o1WtB](https://packt.link/o1WtB)。
- en: Conventions used
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用了多种文本约定。
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    For example: “After you create this `util`, you need to create the `index.ts`
    file at `packages/utils/src/index.ts."`'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '`CodeInText`：表示文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟 URL、用户输入和 Twitter 账号。例如：“在您创建此
    `util` 之后，您需要在 `packages/utils/src/index.ts` 创建 `index.ts` 文件。”'
- en: 'A block of code is set as follows:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置为以下格式：
- en: '[PRE0]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都按以下方式编写：
- en: '[PRE1]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see on
    the screen. For instance, words in menus or dialog boxes appear in the text like
    this. For example: “The first package we need to create to be able to compile
    other packages is called **devtools**.”'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**：表示新术语、重要单词或屏幕上看到的单词。例如，菜单或对话框中的单词在文本中显示如下。例如：“我们需要创建的第一个包，以便能够编译其他包，称为**devtools**。”'
- en: Warnings or important notes appear like this.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要说明看起来像这样。
- en: Tips and tricks appear like this.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士和技巧看起来像这样。
- en: Get in touch
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们始终欢迎读者的反馈。
- en: '**General feedback**: Email `feedback@packtpub.com` and mention the book’s
    title in the subject of your message. If you have questions about any aspect of
    this book, please email us at `questions@packtpub.com`.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**一般反馈**：请通过`feedback@packtpub.com`发送电子邮件，并在邮件主题中提及书籍标题。如果您对此书的任何方面有疑问，请通过`questions@packtpub.com`发送电子邮件给我们。'
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you reported this to us. Please visit [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    click **Submit Errata**, and fill in the form.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**勘误**：尽管我们已经尽一切努力确保内容的准确性，但错误仍然可能发生。如果您在此书中发现错误，我们将不胜感激，如果您能向我们报告，请访问[http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata)，点击**提交勘误**，并填写表格。'
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packtpub.com` with a
    link to the material.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**盗版**：如果您在互联网上发现我们作品的任何形式的非法副本，如果您能提供位置地址或网站名称，我们将不胜感激。请通过`copyright@packtpub.com`与我们联系，并提供材料的链接。'
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [http://authors.packtpub.com](http://authors.packtpub.com).'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您有兴趣成为作者**：如果您在某个领域有专业知识，并且您有兴趣撰写或为书籍做出贡献，请访问[http://authors.packtpub.com](http://authors.packtpub.com)。'
- en: Share your thoughts
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分享您的想法
- en: Once you’ve read *React 18 Design Patterns and Best Practices, Fourth Edition*,
    we’d love to hear your thoughts! Please [click here to go straight to the Amazon
    review page](https://packt.link/r/1803233109) for this book and share your feedback.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您阅读了*React 18设计模式和最佳实践，第四版*，我们很乐意听到您的想法！请[点击此处直接转到此书的Amazon评论页面](https://packt.link/r/1803233109)并分享您的反馈。
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 您的评论对我们和科技社区非常重要，并将帮助我们确保我们提供高质量的内容。
- en: Download a free PDF copy of this book
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载此书的免费PDF副本
- en: Thanks for purchasing this book!
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢您购买此书！
- en: Do you like to read on the go but are unable to carry your print books everywhere?Is
    your eBook purchase not compatible with the device of your choice?
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 你喜欢在路上阅读，但无法携带你的印刷书籍到处走？你的电子书购买是否与你的选择设备不兼容？
- en: Don’t worry, now with every Packt book you get a DRM-free PDF version of that
    book at no cost.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 不要担心，现在每购买一本Packt书籍，您都可以免费获得该书的DRM免费PDF版本。
- en: Read anywhere, any place, on any device. Search, copy, and paste code from your
    favorite technical books directly into your application.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何地方、任何设备上阅读。直接从您最喜欢的技术书籍中搜索、复制和粘贴代码到您的应用程序中。
- en: The perks don’t stop there, you can get exclusive access to discounts, newsletters,
    and great free content in your inbox daily
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 优惠远不止这些，您还可以获得独家折扣、时事通讯和每日免费内容的每日电子邮件。
- en: 'Follow these simple steps to get the benefits:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下简单步骤获取好处：
- en: Scan the QR code or visit the link below
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扫描下面的二维码或访问以下链接
- en: '![](img/B18414_Free_PDF_QR.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18414_Free_PDF_QR.png)'
- en: '[https://packt.link/free-ebook/978-1-80323-310-9](https://packt.link/free-ebook/978-1-80323-310-9)'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/free-ebook/978-1-80323-310-9](https://packt.link/free-ebook/978-1-80323-310-9)'
- en: Submit your proof of purchase
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提交您的购买证明
- en: That’s it! We’ll send your free PDF and other benefits to your email directly
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就这些！我们将直接将您的免费PDF和其他优惠发送到您的电子邮件。
