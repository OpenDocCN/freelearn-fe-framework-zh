["```js\nnpm install --save-dev @testing-library/react\n```", "```js\nnpx create-react-app your-project-title-here --use-npm\n```", "```js\nnpm install -g create-react-app\n```", "```js\ncreate-react-app your-project-title-here --use-npm\n```", "```js\nimport { render} from '@testing-library/react'\nimport Jumbotron from './Jumbotron'\nit('displays the heading, () => {\n  render(<Jumbotron />)\n}\n```", "```js\nimport { render, screen } from '@testing-library/react'\n```", "```js\nit('displays the heading', () => {\n  render(<Jumbotron />)\n  screen.getByText(/welcome to our site!/i)\n})\n```", "```js\nit('displays the heading, () => {\n  render(<Jumbotron />)\n  screen.getByRole('heading', { name: /welcome to our \n    site!/i })\n})\n```", "```js\nUnable to find an accessible element with the role \n  \"heading\" and name `/fake/i`\n```", "```js\nheading:\n      Name \"Logo\":\n      <h3\n        class=\"navbar-brand mb-0\"\n        style=\"font-size: 1.5rem;\"\n      />\n      Name \"Welcome to our site!\":\n      <h1 />\n```", "```js\nit('displays the heading', () => {\n  render(<Jumbotron />)\n  expect(\nscreen.getByRole('heading', { name: /welcome to our \n      site!/i })\n  ).toBeInTheDocument()\n})\n```", "```js\nconst Travel = () => {\n  return (\n    <div className=\"card text-center m-1\" style={{ width: \n      '18rem' }}>\n      <i className=\"material-icons\" style={{ fontSize: \n         '4rem' }}>\n        airplanemode_active\n      </i>\n      <h4>Travel Anywhere</h4>\n\n```", "```js\n<p className=\"p-1\">\n        Our premium package allows you to take exotic trips\n          anywhere at the cheapest prices! \n      </p>\n    </div>\n  )\n}\nexport default Travel\n```", "```js\nimport { render } from '@testing-library/react'\nimport Travel from './Travel'\nit('displays the header and paragraph text', () => {\n  const { container } = render(<Travel />)\n```", "```js\n  expect(container).toMatchInlineSnapshot(`\n    <div>\n      <div\n        class=\"card text-center m-1\"\n        style=\"width: 18rem;\"\n      >\n        <i\n          class=\"material-icons\"\n          style=\"font-size: 4rem;\"\n        >\n          airplanemode_active\n        </i>\n```", "```js\nnpm test -- -u\n```", "```js\nconst Table = props => {\n  return (\n    <table className=\"table table-striped\">\n      <thead className=\"thead-dark\">\n        <tr>\n          <th scope=\"col\">Name</th>\n          <th scope=\"col\">Department</th>\n          <th scope=\"col\">Title</th>\n        </tr>\n      </thead>\n```", "```js\n      <tbody>\n        {props.employees.map(employee => {\n          return (\n            <tr key={employee.id}>\n              <td>{employee.name}</td>\n              <td>{employee.department}</td>\n              <td>{employee.title}</td>\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n  )\n}\nexport default Table\n```", "```js\nimport { render, screen } from '@testing-library/react'\nimport fakeEmployees from './mocks/employees'\nimport Table from './Table'\nit('renders with expected values', () => {\n  render(<Table employees={fakeEmployees} />)\n```", "```js\nconst fakeEmployees = [\n  {\n    id: 1,\n    name: 'John Smith',\n    department: 'Sales',\n    title: 'Senior Sales Agent'\n  },\n  {\n    id: 2,\n    name: 'Sarah Jenkins',\n    department: 'Engineering',\n    title: 'Senior Full-Stack Engineer'\n  },\n  { id: 3, name: 'Tim Reynolds', department: 'Design', \n     title: 'Designer' }\n]\n```", "```js\nit('renders with expected values', () => {\n  render(<Table employees={fakeEmployees} />)\n  expect(screen.getByRole('cell', { name: /john smith/i \n    })).toBeInTheDocument()\n  expect(screen.getByRole('cell', { name: /engineering/i \n    })).toBeInTheDocument()\n  expect(screen.getByRole('cell', { name: /designer/i \n    })).toBeInTheDocument()\n})\n```", "```js\nit('has the correct class', () => {\n  render(<Table employees={fakeEmployees} />)\n  expect(screen.getByRole('table')).toHaveAttribute(\n    'class',\n    'table table-striped'\n  )\n})\n```", "```js\nit('displays the header and paragraph text', () => {\n   render(<Travel />)\n   screen.debug()\n})\n```", "```js\nit('displays the header and paragraph text', () => {\n  render(<Travel />)\n  const header = screen.getByRole('heading', { name: \n    /travel anywhere/i })\n  screen.debug(header)\n})\n```"]