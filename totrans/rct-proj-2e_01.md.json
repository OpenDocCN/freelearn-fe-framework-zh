["```js\n    node -v\n    ```", "```js\n    npm -v\n    ```", "```js\nnpm init -y\n```", "```js\n{\n  \"name\": \"chapter-1\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\"\n}\n```", "```js\n    npm install --save-dev webpack webpack-cli\n    ```", "```js\n    chapter-1\n      |- node_modules\n      |- package.json\n    + |- src\n    +    |- index.js\n    ```", "```js\n    console.log('Rick and Morty');\n    ```", "```js\n      {\n        \"name\": \"chapter-1\",\n        \"version\": \"1.0.0\",\n        \"description\": \"\",\n        \"main\": \"index.js\",\n        \"scripts\": {\n    -     \"test\": \"echo \\\"Error: no test specified\\\" && \n                   exit 1\"\n    +     \"start\": \"webpack --mode development\",\n    +     \"build\": \"webpack --mode production\"\n        },\n        \"keywords\": [],\n        \"author\": \"\",\n        \"license\": \"ISC\"\n      }\n    ```", "```js\n    chapter-1\n      |- node_modules\n      |- package.json\n    + |- dist\n    +    |- main.js \n      |- src\n         |- index.js\n    ```", "```js\n    asset main.js 794 bytes [compared for emit] (name: main)\n    ./src/index.js 31 bytes [built] [code generated]\n    webpack compiled successfully in 67 ms\n    ```", "```js\n    node dist/main.js\n    ```", "```js\n> node dist/main.js\nRick and Morty\n```", "```js\nnpm install react react-dom\n```", "```js\nnpm install --save-dev @babel/core babel-loader @babel/preset-env @babel/preset-react\n```", "```js\nchapter-1\n  |- node_modules\n  |- package.json\n+ |- babel.config.json\n+ |- webpack.config.js\n  |- dist\n     |- main.js \n  |- src\n     |- index.js\n```", "```js\nmodule.exports = {\n module: {\n   rules: [\n     {\n       test: /\\.js$/,\n       exclude: /node_modules/,\n       use: {\n         loader: 'babel-loader'\n       },\n     },\n   ],\n },\n};\n```", "```js\n{\n  \"presets\": [\n    [\n      \"@babel/preset-env\",\n      {\n        \"targets\": {\n          \"esmodules\": true\n        }\n      }\n    ],\n    [\n      \"@babel/preset-react\",\n      {\n        \"runtime\": \"automatic\"\n      }\n    ]\n  ]\n}\n```", "```js\n    import ReactDOM from 'react-dom/client';\n    function App() {\n      return <h1>Rick and Morty</h1>;\n    }\n    const container = document.getElementById('app');\n    const root = ReactDOM.createRoot(container);\n    root.render(<App />);\n    ```", "```js\n    chapter-1\n      |- node_modules\n      |- package.json\n      |- babel.config.json\n      |- webpack.config.js\n      |- dist\n         |- main.js\n    + |- public\n    +    |- index.html\n      |- src\n         |- index.js\n    ```", "```js\n    <!DOCTYPE html>\n    <html lang=\"en\">\n      <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,\n          initial-scale=1.0\" />\n        <meta http-equiv=\"X-UA-Compatible\" \n          content=\"ie=edge\" />\n        <title>Rick and Morty</title>\n      </head>\n      <body>\n        <section id=\"root\"></section>\n      </body>\n    </html>\n    ```", "```js\n    npm install --save-dev html-webpack-plugin\n    ```", "```js\n+ const HtmlWebpackPlugin = \n    require('html-webpack-plugin');\n  module.exports = {\n    module: {\n      rules: [\n        {\n          test: /\\.js$/,\n          exclude: /node_modules/,\n          use: {\n            loader: 'babel-loader',\n          },\n        },\n      ],\n    },\n+   plugins: [\n+     new HtmlWebpackPlugin({\n+       template: './public/index.html',\n+       filename: './index.html',\n+     }),\n+   ],\n};\n```", "```js\nnpm install --save-dev webpack-dev-server\n```", "```js\n{\n    \"name\": \"chapter-1\",\n    \"version\": \"1.0.0\",\n    \"description\": \"\",\n    \"private\": true,\n    \"scripts\": {\n-       \"start\": \"webpack –mode development\",\n+       \"start\": \"webpack serve –mode development\",        \n        \"build\": \"webpack –mode production\"\n    },\n    \"keywords\": [],\n    \"author\": \"\",\n    \"license\": \"ISC\"\n    …\n}\n```", "```js\nnpm start\n```", "```js\n    chapter-1\n      |- node_modules\n      |- package.json\n      |- babel.config.json\n      |- webpack.config.js\n      |- dist\n         |- main.js\n         |- index.html\n      |- public\n         |- index.html\n      |- src\n    +    |- components\n    +       |- List.js \n         |- index.js\n    ```", "```js\nfunction List() {\n  return <h2>Characters</h2>;\n}\nexport default List;\n```", "```js\n      import ReactDOM fr'm 'react-dom/client';\n    + import List from './components/List';\n      function App() {\n    -   return <h1>Rick and Morty</h1>;\n    +   return (\n    +     <div>\n    +       <h1>Rick and Morty</h1>\n    +       <List />\n    +     </div>\n    +   );\n        }; \n\n      // ...\n\n    ```", "```js\n    function Character() {\n      return <h3>Character</h3>;\n    };\n    export default Character;\n    ```", "```js\n    + import Character from './Character';\n      function List() {\n    - return <h2>Characters</h2>;\n    + return (\n    +   <div>\n    +     <h2>Characters</h2>\n    +     <Character />\n    +     <Character />\n    +   </div>\n    + );\n    }\n    export default List;\n    ```", "```js\n<App>\n    <List>\n        <Character>\n```", "```js\n- function Character() {\n- return <h3>Character</h3>;\n+ function Character(character) {\n+ return (\n+   <div>\n+     <h3>{character.name}</h3>\n+     <img src={character.image} alt={character.name} \n        width='300' />\n+     <p>{'Origin: ${character.origin && \n        character.origin.name}'}</p>\n+   </div>\n+ );\n};\nexport default Character;\n```", "```js\n+ import { useState } from 'react';\n  import Character from './Character';\n  function List() {\n+   const [characters, setCharacters] = useState([]);\n    return (\n      // ...\n```", "```js\n- import { useState } from 'react';\n+ import { useEffect, useState } from 'react';\n  import Character from './Character';\n  function List() {\n    const [characters, setCharacters] = useState([]);\n+   useEffect(() => {\n+     async function fetchData() {\n+       const data = await fetch(\n          'https://rickandmortyapi.com/api/character');\n+       const { results } = await data.json();\n+       setCharacters(results);\n+     }\n+     fetchData();\n+   }, [characters.length]);\n  return (\n    // ...\n```", "```js\n  function List() {\n+   const [loading, setLoading] = useState(true);\n    const [characters, setCharacters] = useState([]);\n    useEffect(() => {\n      async function fetchData() {\n        const data = await fetch(\n          'https://rickandmortyapi.com/api/character');\n        const { results } = await data.json();\n        setCharacters(results);\n+       setLoading(false);\n      }\n      fetchData();\n    }, [characters.length]);\n  return (\n    // ...\n```", "```js\n  // ...\n  return (\n    <div>\n      <h2>Characters</h2>\n-     <Character />\n-     <Character />\n+     {loading ? (\n+       <div>Loading...</div>\n+     ) : (\n+       characters.map((character) => (\n+         <Character\n+           key={character.id}\n+           name={character.name}\n+           origin={character.origin}\n+           image={character.image}\n+         />\n+       ))\n+     )}\n    </div>\n  );\n}\nexport default List;\n```", "```js\nnpm install --save-dev bootstrap\n```", "```js\n  import ReactDOM from 'react-dom/client';\n  import List from './containers/List';\n+ import 'bootstrap/dist/css/bootstrap.min.css';\n  function App() {\n    // ...    \n```", "```js\nnpm install --save-dev css-loader style-loader\n```", "```js\n  const HtmlWebpackPlugin = require('html-webpack-plugin');\n  module.exports = {\n    module: {\n      rules: [\n        {\n          test: /\\.js$/,\n          exclude: /node_modules/,\n          use: {\n            loader: 'babel-loader',\n          },\n        },\n+       {\n+         test: /\\.css$/,\n+         use: ['style-loader', 'css-loader'],\n+       },\n      ],\n    },\n    plugins: [\n      new HtmlWebpackPlugin({\n        template: './public/index.html',\n        filename: './index.html',\n      }),\n    ],\n  };\n```", "```js\n  // ...\n  function App() {\n    return (\n-     <div>\n+     <div className='container'>\n        <h1>Rick and Morty</h1>\n        <List />\n      </div>\n    );\n  };\n  const root = ReactDOM.createRoot(\n    document.getElementById('root'));\n  root.render(<App />);\n```", "```js\n  // ...\n  return (\n    <div>\n      <h2>Characters</h2>\n+     <div className='row'>\n        {loading ? (\n          <div>Loading...</div>\n        ) : (\n          // ...\n          ))\n        )}\n+     </div>\n    </div>\n  );\n}\nexport default List;\n```", "```js\nfunction Character(character) {\n  return (\n    <div className='col-3'>\n      <div className='card'>\n        <img\n          src={character.image}\n          alt={character.name}\n          className='card-img-top'\n        />\n        <div className='card-body'>\n          <h3 className='card-title'>{character.name}</h3>\n          <p>{'Origin: ${character.origin && \n            character.origin.name}'}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Character;\n```", "```js\n  // ...\n  function App() {\n    return (\n      <div className='container'>\n-       <h1>Rick and Morty</h1>\n+       <nav className='navbar sticky-top navbar-light\n          bg-dark'>\n+         <h1 className='navbar-brand text-light'>\n            Rick and Morty</h1>\n+       </nav>\n        <List />\n      </div>\n        );\n  // ...\n\n```", "```js\nnpm install --save-dev eslint eslint-webpack-plugin eslint-plugin-react\n```", "```js\n{\n  \"env\": {\n    \"browser\": true,\n    \"node\": true,\n    \"es6\": true\n  },\n  \"parserOptions\": {\n    \"ecmaVersion\": 2020,\n    \"sourceType\": \"module\"\n  },\n  \"plugins\": [\"react\"],\n  \"extends\": [\"eslint:recommended\",\n              \"plugin:react/recommended\"],\n  \"rules\": {\n    \"react/react-in-jsx-scope\": \"off\"\n  }\n}  \n```", "```js\n  const HtmlWebpackPlugin = require('html-webpack-plugin');\n+ const ESLintPlugin = require('eslint-webpack-plugin');\n  module.exports = {\n    // ...\n    plugins: [\n      new HtmlWebpackPlugin({\n        template: './public/index.html',\n        filename: './index.html',\n      }),\n+     new ESLintPlugin(),\n    ],\n  };\n```"]