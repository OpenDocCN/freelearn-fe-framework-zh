["```js\nimport React from 'react';\nimport { render } from 'react-dom';\n\nconst App = React.createClass({\n  render() {\n    return (\n      <div>My first component</div>\n    );\n  }\n});\n\nrender(<App />, document.querySelector('#app'));\n```", "```js\n<!DOCTYPE html>\n<body>\n  <div id=\"app\"></div>\n</body>\n\n<script type=\"text/javascript\" src=\"img/app.js\"></script>\n```", "```js\n<div>My first component</div>\n```", "```js\nReact.createElement(\"div\", null, \"My first component\");\n```", "```js\nconst App = React.createClass ({\n  render() {\n    return (\n      <div>{this.props.greeting}</div>\n    );\n  }\n});\n\nrender(<App greeting=\"Hello world!\"/>,\ndocument.querySelector('#app'));\n```", "```js\n<App greeting=\"Hello world\" message=\"Enjoy the day\" />\n```", "```js\ngetDefaultProps() {\n  return {\n    greeting: \"\"\n  }\n}\n```", "```js\nsetInitialState() {\n  return {\n    greeting: \"Hello world!\"\n  }\n}\n```", "```js\nrender() {\n  return (\n    <div>{this.state.greeting}</div>\n   );\n}\n```", "```js\ngetInitialState: function () {\n  return {\n    random_number: 0\n  }\n},\ncomponentDidMount(){\n  setInterval(()=>{\n    this.setState({\n      random_number: Math.random()*100\n    });\n  },1000)\n},\nrender() {\n  return (\n    <div>{this.state.random_number}</div>\n  );\n}\n```", "```js\nrender(){\n  return (<div>My component</div>);\n}\n```", "```js\nimport React from 'react';\nconst App = React.createClass ({\n  statics: {\n    myMethod: (foo) => {\n      return foo == \"bar\";\n    }\n  },\n  render() {\n    return null;\n  }\n});\nconsole.log(App.myMethod('bar'));  // true\n```", "```js\npropTypes: {\n  myOptionalObject: React.PropTypes.object,\n  aRequiredString: React.PropTypes.string.isRequired,\n  anOptionalNumber: React.PropTypes.number,\n  aValueOfAnyKind: React.PropTypes.any,\n  customProp: function(props, propName, componentName) {\n    if (!/matchme/.test(props[propName])) {\n      return new Error('Validation failed!');\n    }\n  }\n}\n```", "```js\ndisplayName: \"My component Name\"\n```", "```js\ncomponentDidMount() {\n  // Executed after the component is mounted\n}\n```", "```js\ncomponentWillMount() {\n  // Executed before the component is mounted \n}\n```", "```js\ncomponentWillReceiveProps(nextProps) {\n  // you can compare nextProps with this.props\n  // and optionally set a new state or execute functions\n  // based on the new props\n\n}\n```", "```js\ncomponentWillUpdate (nextProps) {\n  // you can compare nextProps with this.props \n  // or nextState with this.state\n}\n```", "```js\ncomponentDidUpdate() {\n  // Execute functions after the component has been updated\n}\n```", "```js\ncomponentWillUnmount() {\n  // Execute functions before the component is unmounted\n  // from the DOM\n}\n```", "```js\n       <p>I made a new paragraph! :)\n```", "```js\nimport React from 'react';\nimport {render} from 'react-dom';\n\nconst App = React.createClass ({\n\n  getInitialState() {\n    return {\n      greeting: \"\",\n      message: \"\"\n    }\n  },\n\n  componentWillMount() {\n    this.setState ({\n      greeting: this.props.greeting\n    });\n  },\n\n  componentDidMount() {\n    this.refs.input.focus();\n  },\n\n  handleClear: function (event) {\n    this.refs.input.value=\"\";\n    this.setState ({\n      message: \"\"\n    });\n  },\n\n  handleChange: function (event) {\n    this.setState ({\n      message: event.target.value\n    });\n  },\n\n  render: function () {\n    return (\n      <div>\n        <h1>Refs and data binding</h1>\n        <h2>{this.state.greeting}</h2>\n        Type a message:\n        <br/>\n        <input type=\"text\" ref=\"input\"\n          onChange={this.handleChange} />\n        <br/>\n        Your message: {this.state.message}\n        <br/>\n        <input type=\"button\"\n          value=\"Clear\"\n          onClick={this.handleClear}\n        />\n      </div>\n\n    );\n  }\n\n});\n\nrender (\n  <App greeting=\"Let's bind some values\" />,\n    document.getElementById('#app')\n);\n```", "```js\nconst HelloWorld = require(\"./helloworld.jsx\");\nconst HelloWorld = require(\"./helloworld.jsx\");\n```", "```js\nrender() {\n  return <div>\n  <HelloWorld />\n</div>\n}\n```", "```js\n    npm install â€“-save babelify@7.2.0 browserify-middleware@7.0.0 express@4.13.3 react@0.14.3 reactify@1.1.1 browser-sync@2.10.0 babel-preset-react@6.3.13 babel-preset-es2015@6.3.13 browserify@12.0.1 react-dom@0.14.3 watchify@3.6.1\n\n    ```", "```js\n    {\n      \"presets\": [\"es2015\",\"react\"]\n    }\n    ```", "```js\n    var express = require(\"express\");\n    var browserify  = require('browserify-middleware');\n    var babelify = require(\"babelify\");\n    var browserSync = require('browser-sync');\n    var app = express();\n    var port = process.env.PORT || 8080;\n    ```", "```js\n    browserify.settings ({\n      transform: [babelify.configure({\n      })],\n      presets: [\"es2015\", \"react\"],\n      extensions: ['.js', '.jsx'],\n      grep: /\\.jsx?$/\n    });\n    ```", "```js\n    // serve client code via browserify\n    app.get('/bundle.js', browserify(__dirname+'/source/app.jsx'));\n    ```", "```js\n    // resources\n    app.get(['*.png','*.jpg','*.css','*.map'], function (req, res) {\n      res.sendFile(__dirname+\"/public/\"+req.path);\n    });\n    ```", "```js\n    // all other requests will be routed to index.html\n    app.get('*', function (req, res) {\n      res.sendFile(__dirname+\"/public/index.html\");\n    });\n    ```", "```js\n    // Run the server\n    app.listen(port,function() {\n      browserSync ({\n        proxy: 'localhost:' + port,\n            files: ['source/**/*.{jsx}','public/**/*.{css}'],\n        options: {\n          ignored: 'node_modules'\n        }\n      });\n    });\n    ```", "```js\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <title>ReactJS Blueprints</title>\n        <meta charset=\"utf-8\">\n        <link rel=\"stylesheet\" href=\"app.css\" />\n\n      </head>\n      <body>\n        <div id=\"container\"></div>\n          <script src=\"img/bundle.js\"></script>\n      </body>\n\n    </html>\n    ```", "```js\n    body {\n      background:#eee;\n      padding:22px;\n    }\n    br {\n      line-height: 2em;\n    }\n    h1 {\n      font-size:24px;\n    }\n    h2 {\n      font-size:18px;\n    }\n    ```", "```js\n    'use strict';\n    import React from 'react';\n    import { render } from 'react-dom';\n    const App = React.createClass({\n      render() {\n        return (\n          <section>\n            <h1>My scaffold</h1>\n            <p>Hello world</p>\n          </section>\n        );\n      }\n    });\n\n    render (\n      <App />,\n        document.getElementById('container')\n    );\n    ```"]