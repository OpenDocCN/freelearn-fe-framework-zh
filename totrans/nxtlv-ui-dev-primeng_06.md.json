["```js\nnpm install primeflex\n```", "```js\n// styles.scss\n@import 'primeflex/primeflex.scss';\n```", "```js\n<h1 [routerLink]=\"['/']\">Welcome to chapter-06</h1>\n<div class=\"layout-wrapper\">\n   <aside>\n      <nav>\n         <p-menu [model]=\"items\" />\n      </nav>\n   </aside>\n   <main>\n      <router-outlet />\n   </main>\n</div>\n....\nstyles: [\n   `\n      .layout-wrapper {\n         display: flex;\n         gap: 4rem;\n         flex-wrap: wrap;\n}\n   `,\n],\n```", "```js\n<h1 [routerLink]=\"['/']\">Welcome to chapter-06</h1>\n<div class=\"flex flex-wrap gap-7\">\n       ...\n</div>\n```", "```js\n<div class=\"flex\">\n   <div class=\"text-center p-3 bg-primary\">Flex Item 1</div>\n   <div class=\"text-center p-3 bg-primary\">Flex Item 2</div>\n   <div class=\"text-center p-3 bg-primary\">Flex Item 3</div>\n</div>\n```", "```js\n<div class=\"flex flex-wrap\">\n   ...\n</div>\n```", "```js\n<div class=\"flex flex-wrap justify-content-evenly\">\n   ...\n</div>\n```", "```js\n<div class=\"grid\">\n   <div class=\"col-6\">\n         <div class=\"text-center p-3 bg-primary\">6</div>\n   </div>\n   <div class=\"col-6\">\n         <div class=\"text-center p-3 bg-primary\">6</div>\n   </div>\n   <div class=\"col-6\">\n         <div class=\"text-center p-3 bg-primary\">6</div>\n   </div>\n   <div class=\"col-6\">\n         <div class=\"text-center p-3 bg-primary\">6</div>\n   </div>\n</div>\n```", "```js\n<div class=\"grid\">\n   <div class=\"col-12 md:col-6 lg:col-3\">\n      <div class=\"text-center p-3 bg-primary\">6</div>\n   </div>\n   ...\n</div>\n```", "```js\nimport { TableModule } from 'primeng/table'\n```", "```js\ninterface Product {\n   id: number\n   name: string\n   price: number\n   description: string\n   quantity: number\n   rating: number\n   category: string\n}\n```", "```js\n<p-table\n   [value]=\"products\"\n   [tableStyle]=\"{ 'min-width': '50rem' }\"\n>\n      <ng-template pTemplate=\"header\">\n            <tr>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Category</th>\n                  <th>Quantity</th>\n            </tr>\n      </ng-template>\n      <ng-template pTemplate=\"body\" let-product>\n            <tr>\n                  <td>{{ product.id }}</td>\n                  <td>{{ product.name }}</td>\n                  <td>{{ product.category }}</td>\n                  <td>{{ product.quantity }}</td>\n            </tr>\n      </ng-template>\n</p-table>\n```", "```js\ncols = [\n   { field: 'id', header: 'ID' },\n   { field: 'name', header: 'Name' },\n   { field: 'category', header: 'Category' },\n   { field: 'quantity', header: 'Quantity' },\n]\n...\n<p-table\n    [columns]=\"cols\"\n    [value]=\"products\"\n    [tableStyle]=\"{ 'min-width': '50rem' }\"\n>\n      <ng-template pTemplate=\"header\" let-columns>\n            <tr>\n                  <th *ngFor=\"let col of columns\">\n                        {{ col.header }}\n                  </th>\n            </tr>\n      </ng-template>\n      <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\n            <tr>\n                  <td *ngFor=\"let col of columns\">\n                        {{ rowData[col.field] }}\n                  </td>\n            </tr>\n      </ng-template>\n</p-table>\n```", "```js\n<p-table [value]=\"products\">\n      <ng-template pTemplate=\"header\">\n            <tr>\n                  <th pSortableColumn=\"name\">Name\n                        <p-sortIcon field=\"name\"></p-sortIcon>\n                  </th>\n                  <th pSortableColumn=\"price\">Price\n                        <p-sortIcon field=\"price\"></p-sortIcon>\n                  </th>\n            </tr>\n      </ng-template>\n      <ng-template pTemplate=\"body\" let-product>\n            <tr>\n                  <td>{{ product.name }}</td>\n                  <td>{{ product.price }}</td>\n            </tr>\n      </ng-template>\n</p-table>\n```", "```js\n<p-table\n    [value]=\"products\"\n    [globalFilterFields]=\"['name', 'price']\"\n    #dt\n>\n   <ng-template pTemplate=\"caption\">\n      <div class=\"flex\">\n         <button pButton label=\"Clear\" class=\"p-button-outlined\"\n            icon=\"pi pi-filter-slash\" (click)=\"dt.clear()\"\n         ></button>\n         <span class=\"p-input-icon-left ml-auto\">\n            <i class=\"pi pi-search\"></i>\n            <input pInputText type=\"text\" placeholder=\"Search keyword\"\n               (input)=\"dt.filterGlobal($event.target.value, 'contains')\"            />\n         </span>\n      </div>\n   </ng-template>\n   <ng-template pTemplate=\"header\">\n      <tr>\n         <th>\n            <input pInputText type=\"text\" placeholder=\"Search by name\"\n               (input)=\"dt.filter($event.target.value, 'name', 'contains')\"\n          />\n         </th>\n         <th>\n            <input pInputText type=\"text\" placeholder=\"Search by price\"\n               (input)=\"dt.filter($event.target.value, 'price', 'equals')\"\n            />\n         </th>\n      </tr>\n   </ng-template>\n   <ng-template pTemplate=\"body\" let-product>\n      <tr>\n         <td>{{ product.name }}</td>\n         <td>{{ product.price }}</td>\n      </tr>\n   </ng-template>\n   <ng-template pTemplate=\"emptymessage\">\n      <tr>\n         <td colspan=\"7\">No products found.</td>\n      </tr>\n   </ng-template>\n</p-table>\n```", "```js\n<p-table\n   [value]=\"products\"\n   [paginator]=\"true\"\n   [rowsPerPageOptions]=\"[5,10,20]\"\n   [rows]=\"10\"\n   >\n   <!-- Table content -->\n</p-table>\n```", "```js\nimport { DataViewModule } from 'primeng/dataview'\n```", "```js\n<p-dataView [value]=\"products\">\n   <ng-template pTemplate=\"list\" let-products>\n      <div class=\"col-12\" *ngFor=\"let product of products\">\n         <div class=\"flex flex-column xl:flex-row xl:align-items-start p-4 gap-4\">\n            <div class=\"flex flex-column sm:flex-row justify-content-between align-items-center xl:align-items-start flex-1 gap-4\">\n                  <div class=\"flex flex-column align-items-center sm:align-items-start gap-3\">\n                        <div class=\"text-2xl font-bold text-900\">{{ product.name }}</div>\n                        <div class=\"flex align-items-center gap-3\">\n                              <span class=\"flex align-items-center gap-2\">\n                                    <i class=\"pi pi-tag\"></i>\n                                    <span class=\"font-semibold\">{{ product.category }}</span>\n                              </span>\n                        </div>\n                  </div>\n                  <div class=\"flex sm:flex-column align-items-center sm:align-items-end gap-3 sm:gap-2\">\n                        <span class=\"text-2xl font-semibold\">{{'$'+ product.price }}</span>\n                        <button pButton icon=\"pi pi-shopping-cart\" class=\"md:align-self-end mb-2 p-button-rounded\" ></button>\n                  </div>\n            </div>\n            </div>\n         </div>\n   </ng-template>\n</p-dataView>\n```", "```js\n<p-dataView\n    [value]=\"products\"\n    [rows]=\"4\"\n    [paginator]=\"true\"\n>\n      <!-- DataView template -->\n</p-dataView>\n```", "```js\n<p-dataView\n   [value]=\"products\"\n   [rows]=\"4\"\n   [paginator]=\"true\"\n   [sortField]=\"sortField\"\n   [sortOrder]=\"sortOrder\"\n   >\n   <ng-template pTemplate=\"header\">\n      <div class=\"flex flex-column md:flex-row md:justify-content-between\">\n         <p-dropdown\n            [options]=\"sortOptions\"\n            [(ngModel)]=\"sortKey\"\nplaceholder=\"Sort By Price\"\n            (onChange)=\"onSortChange($event)\"\n            styleClass=\"mb-2 md:mb-0\"\n         />\n      </div>\n   </ng-template>\n   <!-- DataView template -->\n</p-dataView>\n...\nsortOptions = [\n   { label: 'Price High to Low', value: '!price' },\n   { label: 'Price Low to High', value: 'price' }\n];\nsortOrder!: number;\nsortField!: string;\nonSortChange(event: HTMLInputElement) {\n   const value = event.value;\n   if (value.indexOf('!') === 0) {\n      this.sortOrder = -1;\n      this.sortField = value.substring(1, value.length);\n   } else {\n      this.sortOrder = 1;\n      this.sortField = value;\n   }\n}\n```", "```js\nnpm install @angular/cdk\n```", "```js\nimport { OrderListModule } from 'primeng/orderlist'\n```", "```js\n<p-orderList\n         [value]=\"products\"\n         [listStyle]=\"{ 'max-height': '30rem' }\"\n         header=\"Products\"\n>\n   <ng-template let-product pTemplate=\"item\">\n      <div class=\"flex flex-column xl:flex-row xl:align-items-start gap-4\">\n         <div\n            class=\"flex flex-column sm:flex-row justify-content-between align-items-center xl:align-items-start flex-1 gap-4\"\n         >\n            <div\n               class=\"flex flex-column align-items-center sm:align-items-start gap-3\"\n            >\n               <div class=\"text-xl font-bold text-700\">{{ product.name }}</div>\n               <div class=\"flex align-items-center gap-3\">\n                  <span class=\"flex align-items-center gap-2\">\n                     <i class=\"pi pi-tag\"></i>\n                     <span class=\"font-semibold\">{{ product.category }}</span>\n                  </span>\n               </div>\n            </div>\n            <div\n               class=\"flex sm:flex-column align-items-center sm:align-items-end gap-3 sm:gap-2\"\n            >\n               <span class=\"text-xl font-semibold\">{{\n                  '$' + product.price\n               }}</span>\n               <button\n                  pButton\n                  icon=\"pi pi-shopping-cart\"\n                  class=\"md:align-self-end mb-2 p-button-rounded\"\n               ></button>\n            </div>\n         </div>\n      </div>\n   </ng-template>\n</p-orderList>\n```", "```js\n<p-orderList\n   [value]=\"products\"\n   [listStyle]=\"{ 'max-height': '30rem' }\"\n   header=\"Products\"\n   filterBy=\"name\"\n   filterPlaceholder=\"Filter by name\"\n>\n   <!-- Item template here... -->\n</p-orderList>\n```", "```js\n<p-orderList\n   [value]=\"products\"\n   [listStyle]=\"{ 'max-height': '30rem' }\"\n   header=\"Products\"\n   [dragdrop]=\"true\"\n>\n<!-- Item template here... -->\n</p-orderList>\n```", "```js\nimport { PickListModule } from 'primeng/picklist'\n```", "```js\n<p-pickList\n   [source]=\"products\"\n   [target]=\"selectedProducts\"\n   sourceHeader=\"Available Products\"\n   targetHeader=\"Selected Products\"\n   [dragdrop]=\"true\"\n   [responsive]=\"true\"\n   [sourceStyle]=\"{ height: '30rem' }\"\n   [targetStyle]=\"{ height: '30rem' }\"\n   breakpoint=\"1400px\"\n>\n   <ng-template let-product pTemplate=\"item\">\n       <!-- Item template here... -->\n   </ng-template>\n</p-pickList>\n```", "```js\nimport { CardModule } from 'primeng/card'\n```", "```js\n<p-card\n     ngFor=\"let product of products\"\n   [header]=\"product.name\"\n   [style]=\"{ width: '300px' }\"\n>\n   <img\n      src=\"img/placeholder.png\"\n      alt=\"{{ product.name }}\"\n      style=\"width:100%\"\n   />\n   <div class=\"flex flex-column\">\n      <p>{{ product.description }}</p>\n      <h3>\\${{ product.price }}</h3>\n      <button pButton type=\"button\" label=\"Add to Cart\"></button>\n   </div>\n</p-card>\n```"]