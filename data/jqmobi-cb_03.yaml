- en: Chapter 3. Toolbars
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三章 工具栏
- en: 'In this chapter we will cover:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖：
- en: Using fullscreen fixed toolbars
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用全屏固定工具栏
- en: Using persistent navbars in toolbars
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用持久导航栏工具栏
- en: Customizing the header with multiple buttons
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用多个按钮自定义页眉
- en: Adding a customized round button to the header
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向页眉添加自定义圆形按钮
- en: Adding an image to the header
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向页眉添加图像
- en: Adding a customized back button
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加自定义返回按钮
- en: Adding a layout grid to the footer
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向页脚添加布局网格
- en: Introduction
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: The jQuery Mobile framework provides two toolbars, the **Header** and the **Footer**.
    The header is the first container in the page and the footer is the last. Header
    is used to specify the title of the application or the page, and can include the
    standard **navbar** for navigation. The footer is used for a variety of purposes.
    It can include standard buttons and form controls and can be customized to suit
    your needs. It can also contain a navbar for page navigation. The footer is also
    usually used to display the copyrights and license information.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery Mobile 框架提供了两个工具栏，**页眉** 和 **页脚**。 页眉是页面中的第一个容器，页脚是最后一个。 页眉用于指定应用程序或页面的标题，并可以包含用于导航的标准
    **导航栏**。 页脚用于各种目的。 它可以包含标准按钮和表单控件，并可以根据您的需要进行自定义。 它还可以包含用于页面导航的导航栏。 页脚通常也用于显示版权和许可信息。
- en: Using fullscreen fixed toolbars
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用全屏固定工具栏
- en: '**Fixed toolbars** remain in the same position on the screen when the page
    is scrolled. When the page content of your application occupies the entire viewport,
    the fixed toolbars will overlap the page content. You cannot toggle the visibility
    of the fixed toolbars here. To toggle the toolbar visibility, you can use the
    fixed toolbars in the **Fullscreen mode**. This recipe shows you how to create
    a simple **Photo Viewer** application that uses fullscreen toolbars.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**固定工具栏** 在页面滚动时保持在屏幕上的相同位置。 当您的应用程序页面内容占据整个视口时，固定工具栏将重叠在页面内容上。 你不能在这里切换固定工具栏的可见性。
    要切换工具栏的可见性，您可以在 **全屏模式** 中使用固定工具栏。 此示例向您展示了如何创建一个使用全屏工具栏的简单 **照片查看器** 应用程序。'
- en: Getting ready
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: Copy the full code of this recipe from the `code/03/fullscreen-toolbars` sources
    folder. This code can be launched using the URL `http://localhost:8080/03/fullscreen-toolbars/main.html`.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 从 `code/03/fullscreen-toolbars` 源文件夹中复制此示例的完整代码。 可以使用 URL `http://localhost:8080/03/fullscreen-toolbars/main.html`
    启动此代码。
- en: How to do it...
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In `main.html` create the `#main` page and a `<img>` tag to display a scaled
    down image of the **Niagara Falls**, as shown in the following code:'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `main.html` 中创建 `#main` 页面和一个 `<img>` 标签，以显示缩小的 **尼亚加拉瀑布** 图像，如下代码所示：
- en: '[PRE0]'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Create the `#photo` page to display the image in fullscreen mode:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 `#photo` 页面以全屏模式显示图像：
- en: '[PRE1]'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: How it works...
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'In `main.html`, create the `#main` page to display the thumbnail image of the
    **Niagara Falls** using the `<img>` tag with a small `width` and `height`. Add
    a link to open the `#photo` page. When you first launch the application, the following
    screen is displayed with a smaller sized image of the snap:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `main.html` 中，创建 `#main` 页面以使用 `<img>` 标签显示 **尼亚加拉瀑布** 的缩略图，使用较小的 `width`
    和 `height`。 添加一个链接以打开 `#photo` 页面。 当您首次启动应用程序时，将显示以下屏幕，并带有较小尺寸的快照图像：
- en: '![How it works...](img/7225_03_01.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/7225_03_01.jpg)'
- en: Next create the `#photo` page, with fixed toolbars using the `data-fixed="true"`
    attribute. Set the page container to occupy the full screen using the `data-fullscreen="true"`
    attribute. Add the image using the `<img>` tag with `100% width` and `height`.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来创建 `#photo` 页面，使用 `data-fixed="true"` 属性添加固定工具栏。 使用 `data-fullscreen="true"`
    属性设置页面容器占据整个屏幕。 使用 `<img>` 标签添加图像，宽度为 `100%`，高度为 `height`。
- en: 'Now when you click on the **View full screen** button in `#main`, the `#photo`
    page is opened with the fullscreen image of the **Niagara Falls**. The fixed toolbars
    can also be seen. When you tap the screen now, the visibility of the toolbars
    is toggled. The fullscreen display looks like the following screenshot:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当您单击 `#main` 中的 **查看全屏** 按钮时，将打开 `#photo` 页面，显示全屏图像的 **尼亚加拉瀑布**。 也可以看到固定工具栏。
    现在，当您点击屏幕时，工具栏的可见性将切换。 全屏显示如下截图所示：
- en: '![How it works...](img/7225_03_02.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/7225_03_02.jpg)'
- en: There's more...
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The fullscreen toolbars will overlap over the page content by default. You will
    not be able to access any content that is shown below the toolbar. You will have
    to tap the screen, toggle the toolbar visibility, and then access the page content.
    This could become a usability issue for the users of your application. So use
    this feature judiciously.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，全屏工具栏将覆盖页面内容。您将无法访问工具栏下方显示的任何内容。您需要点击屏幕，切换工具栏的可见性，然后访问页面内容。这可能会成为您的应用程序用户的可用性问题。因此，请明智地使用此功能。
- en: Note
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注
- en: Fullscreen toolbars are ideal in pages where you have to display full screen
    content such as photos, previews, slideshows, or videos.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 全屏工具栏在需要显示全屏内容的页面中非常理想，例如照片、预览、幻灯片或视频。
- en: The position—fixed CSS property
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: CSS 属性 `position:fixed`
- en: Browsers have to support the `position:fixed` CSS property for the proper dynamic
    positioning of the fixed toolbars. Most modern browsers support this property.
    For older browsers, this support might not be there and the framework gracefully
    degrades and falls back to using regular static toolbars. In these older platforms,
    you can use **Polyfills** to support fixed toolbars and a detailed note on this
    is available at [http://jquerymobile.com//test/docs/toolbars/bars-fixed.html](http://jquerymobile.com//test/docs/toolbars/bars-fixed.html).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览器必须支持 `position:fixed` CSS 属性，才能正确动态定位固定工具栏。大多数现代浏览器都支持此属性。对于较旧的浏览器，可能不支持此功能，框架将会优雅地降级并回退到使用常规静态工具栏。在这些旧平台上，您可以使用**Polyfills**来支持固定工具栏，并在
    [http://jquerymobile.com//test/docs/toolbars/bars-fixed.html](http://jquerymobile.com//test/docs/toolbars/bars-fixed.html)
    中提供有关此的详细说明。
- en: Toggling the fixed toolbar visibility
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 切换固定工具栏的可见性
- en: 'As already mentioned in this recipe, you can tap the screen to toggle the visibility
    of the fixed toolbars. This change on tap behavior can be controlled by using
    the `tapToggle` property (by default `true`) of the **fixedtoolbar plugin** .
    To enable or disable tapping, use the following code snippet, that uses a jQuery
    selector to find the toolbar:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 正如本文中已经提到的，您可以点击屏幕来切换固定工具栏的可见性。通过使用 **fixedtoolbar 插件** 的 `tapToggle` 属性（默认为
    `true`），可以控制此点击行为的变化。要启用或禁用点击，请使用以下代码片段，该代码片段使用 jQuery 选择器来找到工具栏：
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Toggling the fixed toolbar visibility using JavaScript
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 JavaScript 切换固定工具栏的可见性
- en: You can also use JavaScript to toggle the fixed toolbars' visibility by calling
    the `show` or `hide` methods on the `fixedtoolbar` plugin as shown in the following
    code. The code snippet uses the jQuery selector to find the toolbar.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用 JavaScript 调用 `fixedtoolbar` 插件上的 `show` 或 `hide` 方法来切换固定工具栏的可见性，如下面的代码所示。代码片段使用
    jQuery 选择器来找到工具栏。
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: See also
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Using persistent navbars in toolbars* recipe
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在工具栏中使用持久性导航栏* 食谱'
- en: Using persistent navbars in toolbars
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在工具栏中使用持久性导航栏
- en: The **Navbar widget** can be used to provide navigation links in your application.
    A **Persistent Navbar** stays fixed in the same position in your application,
    like a fixed tab bar, as you navigate between pages. This recipe shows you how
    to use persistent navbars in the toolbars to create a simple **TV Menu UI**.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**Navbar widget** 可用于在您的应用程序中提供导航链接。**Persistent Navbar** 保持在您的应用程序中的同一位置固定，就像一个固定的选项卡栏一样，在您页面之间导航时不会移动。本文向您展示如何在工具栏中使用持久性导航栏来创建一个简单的**电视菜单
    UI**。'
- en: Getting ready
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Copy the full code of this recipe from the `code/03/persistent-navbar` sources
    folder. This code can be launched using the URL `http://localhost:8080/03/persistent-navbar/main.html`.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 从 `code/03/persistent-navbar` 源文件夹中复制此处食谱的全部代码。可以使用 URL `http://localhost:8080/03/persistent-navbar/main.html`
    来启动此代码。
- en: How to do it...
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In `main.html` create a simple **TV Menu UI** with three pages in it, "`#movies`",
    "`#songs`", and "`#serials`". Add the `#movies` page with its header and footer
    having navbars as shown in the following code:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `main.html` 中创建一个简单的**电视菜单 UI**，其中包含三个页面，分别是 "`#movies`"、"`#songs`" 和 "`#serials`"。在下面的代码中，添加带有导航栏的
    `#movies` 页面，其页眉和页脚如下所示：
- en: '[PRE4]'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Next add the `#songs` page with similar content, as shown in the following
    code:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，按照以下代码添加 `#songs` 页面，内容相似：
- en: '[PRE5]'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Finally, add the `#serials` page as in the following code:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，按照以下代码添加 `#serials` 页面：
- en: '[PRE6]'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: How it works...
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它的工作原理...
- en: 'Create `main.html` and add three pages to it: `#movies`, `#songs`, and `#serials`.
    In `#main` page, add a fixed header by specifying `data-position="fixed"`. To
    persist this header across all the pages, set the attribute `data-id="persistheader"`.
    Now add a `navbar` with three links as shown in the previous code. The first link
    points to the same page and so use `#` for the `href` tag. Also add the attribute
    `class="ui-btn-active ui-state-persist` to indicate that this button should be
    in active state when you navigate into this page. Next add a footer to the page
    with a navbar having three links, **New**, **Popular**, and **Classics**, as shown
    in the previous code. Add the attributes `data-id="persistfooter"` and `data-position="fixed"`
    to indicate that this is a fixed footer and it is to be persisted across all the
    pages. You should use the same `data-id` value for the headers of all three pages.
    Similarly the same `data-id` should be used for the footers of the three pages.
    Using the same value will create a sticky `navbar`, which will stay put and not
    transition when the page transition occurs.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`main.html`并向其添加三个页面：`#movies`、`#songs`和`#serials`。在`#main`页面中，通过指定`data-position="fixed"`来添加一个固定页眉。为了在所有页面中保持此页眉不变，请设置属性`data-id="persistheader"`。现在添加一个具有三个链接的`navbar`，如前面的代码所示。第一个链接指向相同的页面，因此对于`href`标签，使用`#`。还要添加属性`class="ui-btn-active
    ui-state-persist`，表示当您进入此页面时，此按钮应处于活动状态。接下来，在页面底部添加一个带有三个链接的页脚，分别为**New**、**Popular**和**Classics**，如前面的代码所示。添加属性`data-id="persistfooter"`和`data-position="fixed"`，以指示这是一个固定的页脚，并且要在所有页面中保持不变。您应该为所有三个页面的页眉使用相同的`data-id`值。同样，页脚的三个页面应使用相同的`data-id`。使用相同的值将创建一个粘性的`navbar`，在页面转换时保持不动。
- en: Next add the `#songs` page with similar content as the **Movies** page. Set
    the same `data-id` values to the header and footer as mentioned earlier. Now set
    the second button to active state in the header `navbar` by setting the attribute
    `class="ui-btn-active ui-state-persist"` to it. Finally, add the `"#serials"`
    page with fixed persistent header and footer as in the earlier pages. Here set
    the third button in the header `navbar` as active. When you launch the application,
    you can navigate to the three pages using the header navbar. All the three pages
    have the same header and footer.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，添加`#songs`页面，其内容与**Movies**页面相似。与之前提到的相同，将标题和页脚的`data-id`值设置为相同。现在，在页眉`navbar`中将第二个按钮设置为活动状态，将属性`class="ui-btn-active
    ui-state-persist"`设置为它。最后，添加带有固定持久页眉和页脚的`"#serials"`页面，就像之前的页面一样。在这里，将页眉`navbar`中的第三个按钮设置为活动状态。当您启动应用程序时，您可以使用页眉导航栏导航到这三个页面。这三个页面都有相同的页眉和页脚。
- en: 'You can randomly select different buttons in the footer for the three pages.
    When you navigate back and forth between the pages, you will see that the footer
    button state is persisted and remembered for the pages. The screen is displayed
    as shown in the following screenshot:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在三个页面的页脚中随机选择不同的按钮。当您在页面之间来回导航时，您会看到页脚按钮的状态被保持和记住了。屏幕显示如下截图所示：
- en: '![How it works...](img/7225_03_03.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/7225_03_03.jpg)'
- en: Note
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The persistent navbar is very handy in menu driven applications, where it is
    often used to provide navigation between the pages.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在菜单驱动的应用程序中，持续的导航栏非常方便，通常用于页面之间的导航。
- en: There's more...
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'You can set icons to the navbar buttons by adding the `data-icon` attribute.
    The icon position can be set to `top`, `bottom`, `right`, or `left` using the
    `data-iconpos` attribute as shown in the following code:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过添加`data-icon`属性为`navbar`按钮设置图标。可以使用`data-iconpos`属性将图标位置设置为`top`、`bottom`、`right`或`left`，如下面的代码所示：
- en: '[PRE7]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 3D page transitions with persistent fixed toolbars
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 具有固定持久工具栏的 3D 页面过渡
- en: If you use persistent fixed toolbars with pages that have 3D page transitions,
    you could run into positioning issues. The performance could also be slow. So
    it is better that you convert these pages to use 2D animations, such as `slide`,
    `slidup`, `slidedown`, `fade`, or `none`.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您将具有 3D 页面过渡的持久固定工具栏与页面一起使用，则可能会遇到定位问题。性能也可能较慢。因此，最好将这些页面转换为使用 2D 动画，例如`slide`、`slidup`、`slidedown`、`fade`或`none`。
- en: See also
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参见
- en: The *Using fullscreen fixed toolbars* recipe
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用全屏固定工具栏*配方'
- en: Customizing the header with multiple buttons
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义具有多个按钮的页眉
- en: When you add buttons to the page header, they line up to the left side of the
    header and only one button can be positioned to the right side by default. This
    recipe shows you how to add four buttons to the header, with two of them positioned
    to the right-hand side.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 当您将按钮添加到页面标题时，它们会排列到标题的左侧，并且默认情况下只能将一个按钮定位到右侧。本配方向您展示如何将四个按钮添加到标题中，并且其中两个按钮位于右侧。
- en: Getting ready
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Copy the full code of this recipe from the `code/03/multiple-header-buttons`
    sources folder. This code can be launched using the URL `http://localhost:8080/03/multiple-header-buttons/main.html`.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 从`code/03/multiple-header-buttons`源文件夹复制此配方的完整代码。可以使用URL`http://localhost:8080/03/multiple-header-buttons/main.html`启动此代码。
- en: How to do it...
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Create a new stylesheet called `jqm.css` and define two new custom styles as
    given in the following code:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`jqm.css`的新样式表，并根据以下代码中的给定内容定义两个新的自定义样式：
- en: '[PRE8]'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Include the previous stylesheet in the `<head>` tag of `main.html` as shown
    in the following code:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`main.html`的`<head>`标签中包含前一个样式表，如下所示：
- en: '[PRE9]'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Now add four buttons to the page header using the default styles provided by
    the jQuery Mobile framework and also use your custom styles, as shown in the following
    code:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，使用jQuery Mobile框架提供的默认样式向页面标题添加四个按钮，同时也使用您的自定义样式，如下代码所示：
- en: '[PRE10]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: How it works...
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Create the `jqm.css` stylesheet and define two new classes, `.ui-btn-nexttoleft`
    and `.ui-btn-nexttoright`, to specify the absolute positions that will be used
    by the buttons. Create `main.html` and include the link to the previous stylesheet
    after including the link to the `jquery.mobile.css` file as shown in the previous
    code.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`jqm.css`样式表，并定义两个新类`.ui-btn-nexttoleft`和`.ui-btn-nexttoright`，以指定按钮将使用的绝对位置。创建`main.html`并在包含`jquery.mobile.css`文件的链接之后包含对前一个样式表的链接，如前述代码所示。
- en: 'Next add a header with `<h1>` text in the middle of the header and two anchor
    buttons on both its sides. Add the attribute `class="ui-btn-left"` to the first
    button to make it appear in the left-hand corner. Add the attribute `class="ui-btn-nexttoleft"`
    to the second button. Similarly, add the attribute `class="ui-btn-nexttoright"`
    to the third button and finally add `class="ui-btn-right"` to the fourth button,
    which will appear in the right-hand corner. The second and third buttons use the
    custom classes that you have defined. Now when you launch the page, the buttons
    are positioned in the header as shown in the following screenshot:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在页眉中添加一个带有`<h1>`文本的页眉，并在其两侧添加两个锚按钮。将属性`class="ui-btn-left"`添加到第一个按钮，使其出现在左上角。将属性`class="ui-btn-nexttoleft"`添加到第二个按钮。类似地，将属性`class="ui-btn-nexttoright"`添加到第三个按钮，最后将`class="ui-btn-right"`添加到第四个按钮，它将出现在右上角。第二和第三个按钮使用您定义的自定义类。现在，当您启动页面时，按钮将按照以下屏幕截图中所示的方式在页眉中定位：
- en: '![How it works...](img/7225_03_04.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理...](img/7225_03_04.jpg)'
- en: Note
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Take care while using absolute values in your stylesheet; you might have to
    modify the absolute positions if the text size or layout changes.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在样式表中使用绝对值时要小心；如果文本大小或布局发生变化，可能需要修改绝对位置。
- en: There's more...
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多信息...
- en: Using the attribute `data-role="header"` to the header `div` container causes
    the jQuery Mobile framework to enhance the header in the standard way. You can
    skip this attribute and customize the header in your own way by using the class
    `"ui-bar"` in your `div` container. You can also include widgets other than buttons
    in the header.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 使用属性`data-role="header"`添加到页眉`div`容器会使jQuery Mobile框架以标准方式增强页眉。您可以跳过此属性，并通过在`div`容器中使用类`"ui-bar"`自定义页眉。您还可以在页眉中包含除按钮之外的小部件。
- en: '[PRE11]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: See also
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Custom styling a dialog* recipe in [Chapter 2](ch02.html "Chapter 2. Pages
    and Dialogs"), *Pages and Dialogs*
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第2章](ch02.html "第2章。页面和对话框")中的*自定义样式对话框*配方，*页面和对话框*'
- en: The *Adding a customized round button to the header* recipe
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在页眉中添加自定义圆形按钮*配方'
- en: The *Adding an image to the header* recipe
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在页眉中添加图像*配方'
- en: Adding a customized round button to the header
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在页眉中添加自定义圆形按钮
- en: The jQuery Mobile framework allows you to add custom controls to the header
    of a page. This recipe shows you how to add a custom round button to the header
    of your application.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery Mobile框架允许您向页面的页眉中添加自定义控件。本配方向您展示如何向应用程序的页眉中添加自定义圆形按钮。
- en: Getting ready
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Copy the full code of this recipe from the `code/03/round-button-header` sources
    folder. This code can be launched using the URL `http://localhost:8080/03/round-button-header/main.html`.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 从 `code/03/round-button-header` 源文件夹中复制此配方的完整代码。此代码可使用 URL `http://localhost:8080/03/round-button-header/main.html`
    启动。
- en: How to do it...
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Create a new stylesheet called `jqm.css` and define a custom `roundbtn` class
    in it:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建名为 `jqm.css` 的新样式表，并在其中定义一个自定义的 `roundbtn` 类：
- en: '[PRE12]'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Create `main.html` and include the previous stylesheet in the `<head>` tag:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 `main.html`，在 `<head>` 标签中包含先前的样式表：
- en: '[PRE13]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Add an `About` button to the header of the `#main` page using the newly defined
    `roundbtn` style, as shown in the following code:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用新定义的 `roundbtn` 样式，在 `#main` 页面的页眉中添加一个 `About` 按钮，如下面的代码所示：
- en: '[PRE14]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Add the `#about` dialog as, in the following code:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `#about` 对话框添加如下代码中：
- en: '[PRE15]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: How it works...
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Create the `jqm.css` stylesheet and define a new class `roundbtn` with `width`,
    `height`, and `border-radius` properties as shown in the previous code. To create
    a round button set the `border-radius` property value to exactly half the value
    of the `width` property. Finally, add the vendor specific properties for `border-radius`
    to ensure that the border radius works well on various browsers.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 `jqm.css` 样式表，并在其中定义一个名为 `roundbtn` 的新类，其中包含 `width`、`height` 和 `border-radius`
    属性，如前面的代码所示。要创建一个圆形按钮，将 `border-radius` 属性的值设置为 `width` 属性值的一半。最后，添加供应商特定的属性以确保边框半径在各种浏览器上正常工作。
- en: Create `main.html` and include the link to the above stylesheet after including
    the link to the `jquery.mobile.css` file as shown in the previous code. Next create
    the `#main` page and add a header with `<h1>` text to it. Set the `height` of
    the header to `50px` using the style attribute to ensure the round button with
    `40px` `height` (as specified in the CSS) fits properly in the header. Next add
    an anchor link in the header with attributes `data-role="button"` and `data-rel="dialog"`
    to open the `"#about"` page as a dialog. Add the `roundbtn` style to this button
    using the `class` attribute. Also add the other classes that are added by the
    framework while enhancing an anchor link to a button. You can obtain this list
    of classes by inspecting the anchor element using your browser's developer tools.
    You have to add these classes manually to ensure that the round button gets the
    proper style as it has been customized.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 `main.html`，在包含链接到 `jquery.mobile.css` 文件之后，包含上述样式表的链接，如前面的代码所示。接下来创建 `#main`
    页面，并在其中添加带有 `<h1>` 文本的页眉。使用样式属性将页眉的 `height` 设置为 `50px`，以确保圆形按钮的 `height`（如 CSS
    中指定的）适合页眉。接下来，在页眉中添加一个锚链接，其属性为 `data-role="button"` 和 `data-rel="dialog"`，以将 `"#about"`
    页面作为对话框打开。使用 `class` 属性为此按钮添加 `roundbtn` 样式。还要添加框架在将锚链接增强为按钮时添加的其他类。您可以通过使用浏览器的开发者工具检查锚元素来获取这些类的列表。您必须手动添加这些类，以确保圆形按钮获得正确的样式，因为它已被定制。
- en: Finally, define the `#about` page as given in the previous code. When you launch
    the application, a round button is now displayed in the header as shown in the
    following screenshot. Clicking on the round button will open the `#about` dialog.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，根据前面的代码定义 `#about` 页面。当您启动应用程序时，页眉中现在会显示一个圆形按钮，如下面的屏幕截图所示。单击圆形按钮将打开 `#about`
    对话框。
- en: '![How it works...](img/7225_03_05.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/7225_03_05.jpg)'
- en: There's more...
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Your browser should support the `border-radius` or the corresponding vendor
    specific prefix `border-radius` property in the CSS. If it does not, you will
    see a rectangular button instead of a round button.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器应支持 CSS 中的 `border-radius` 或相应的供应商特定前缀 `border-radius` 属性。如果不支持，则会看到一个矩形按钮而不是一个圆形按钮。
- en: See also
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参见
- en: The *Using CSS to create a bouncing page transition* recipe in [Chapter 2](ch02.html
    "Chapter 2. Pages and Dialogs"), *Pages and Dialogs*, for a note on vendor prefixes
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第二章](ch02.html "第二章。页面和对话框") 中的 *使用 CSS 创建弹跳页面过渡* 配方，*页面和对话框*，关于供应商前缀的注意事项'
- en: The *Custom styling a dialog* recipe in [Chapter 2](ch02.html "Chapter 2. Pages
    and Dialogs"), *Pages and Dialogs*
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第二章](ch02.html "第二章。页面和对话框") 中的 *自定义样式对话框* 配方，*页面和对话框*'
- en: The *Customizing the header with multiple buttons* recipe
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用多个按钮自定义页眉* 配方'
- en: The *Adding an image to the header* recipe
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在页眉中添加图像* 配方'
- en: Adding an image to the header
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在页眉中添加图像
- en: The header of a jQuery Mobile page usually contains the text which is to be
    used as the page header. You can also add other content and markup to the header.
    This recipe shows you how to add an image to the header of your application.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery Mobile页面的页眉通常包含要用作页面页眉的文本。您还可以向页眉添加其他内容和标记。本配方向您展示如何向应用程序的页眉添加图像。
- en: Getting ready
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Copy the full code of this recipe from the `code/03/header-image` sources folder.
    This code can be launched using the URL `http://localhost:8080/03/header-image/main.html`.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 从`code/03/header-image`源文件夹中复制此配方的全部代码。可以使用URL`http://localhost:8080/03/header-image/main.html`来启动这段代码。
- en: How to do it...
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: In this recipe, the image `ABC.png` is used as the logo image for a a fictitious
    company, ABC Inc.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，图像`ABC.png`被用作一个虚构公司ABC Inc.的标志图像。
- en: '![How to do it...](img/7225_03_06.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作……](img/7225_03_06.jpg)'
- en: 'Create `main.html` and add the above image to its header. The image is linked
    to a dialog as shown in the following code:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`main.html`并将上述图像添加到其页眉。图片链接到对话框，代码如下所示：
- en: '[PRE16]'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Add the `#about` dialog as shown in the following code:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如下代码所示，添加`#about`对话框：
- en: '[PRE17]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: How it works...
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: In `main.html`, create a `#main` page and add a header with `<h1>` text to it.
    Now add an anchor link in the header to open the `#about` page as a dialog by
    using the attribute `data-rel="dialog"`. Specify a custom style to the anchor
    link using the attribute `class="ui-btn ui-shadow ui-btn-up-a"`. Do not add `data-role="button"`
    as the framework would then enhance this link as a button. Next add an `<img>`
    element pointing to the `ABC.png` image as shown in the previous code. Scale this
    image to a suitable size by using the `width` and `height` attributes. Finally,
    define the `#about` page as given in the code. When you launch the application,
    the header of the `#main` page displays the `ABC.png` image on the left corner
    as shown in the following screenshot. Clicking on this image opens the `#about`
    dialog page.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在`main.html`中，创建一个`#main`页面，并在其中添加一个带有`<h1>`文本的页眉。现在，使用属性`data-rel="dialog"`在页眉中添加一个锚点链接，以打开`#about`页面作为对话框。使用属性`class="ui-btn
    ui-shadow ui-btn-up-a"`指定锚点链接的自定义样式。请不要添加`data-role="button"`，因为框架会将此链接增强为按钮。接下来，如前面的代码中所示，添加指向`ABC.png`图像的`<img>`元素。通过使用`width`和`height`属性将该图像缩放到适当的大小。最后，如下代码中所示，定义`#about`页面。启动应用程序后，`#main`页面的页眉会显示左上角的`ABC.png`图像，如下截图所示。单击该图像将打开`#about`对话框页面。
- en: '![How it works...](img/7225_03_07.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理……](img/7225_03_07.jpg)'
- en: There's more...
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'You can also use native styling for the image and avoid any custom styles being
    set on the anchor element to display only the image. It is done by using the attribute
    `data-role="none"` as in the following code:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以为图像使用本机样式，避免在锚点元素上设置任何自定义样式以仅显示图像。使用属性`data-role="none"`即可实现，代码如下所示：
- en: '[PRE18]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: See also
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Customizing the header with multiple buttons* recipe
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用多个按钮自定义页眉*的配方'
- en: The *Adding a customized round button to the header* recipe
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在页眉中添加自定义的圆形按钮*配方'
- en: Adding a customized back button
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加一个定制的返回按钮
- en: When a new page is opened in your application, the jQuery Mobile framework provides
    an option to add a **Back** button to the header of the page to help you navigate
    back to the previous page. The **Back** button is not visible by default. This
    recipe shows you how to dynamically add and customize the **Back** button in your
    application using JavaScript.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用程序中打开新页面时，jQuery Mobile框架提供了一个选项，可以在页面的页眉中添加一个**返回**按钮，以帮助您导航回上一页。默认情况下，**返回**按钮是不可见的。本配方向您展示如何使用JavaScript动态添加和自定义应用程序中的**返回**按钮。
- en: Getting ready
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Copy the full code of this recipe from the `code/03/custom-back-button` sources
    folder. This code can be launched using the URL `http://localhost:8080/03/custom-back-button/main.html`.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 从`code/03/custom-back-button`源文件夹中复制此配方的全部代码。可以使用URL`http://localhost:8080/03/custom-back-button/main.html`来启动这段代码。
- en: How to do it...
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: Create `main.html` and add two anchor links in it. The first link opens a page
    with a **Back** button in its header and the second link opens a page without
    the **Back** button.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`main.html`并在其中添加两个锚点链接。第一个链接打开一个带有页眉中**返回**按钮的页面，而第二个链接则打开一个没有**返回**按钮的页面。
- en: 'Also add a submit button to the page as shown in the following code:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同时在页面中添加一个提交按钮，如下代码所示：
- en: '[PRE19]'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Add the following script to the `<head>` section of the page and bind it to
    the `click` event of the submit button:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下脚本添加到页面的`<head>`部分，并将其绑定到提交按钮的`click`事件：
- en: '[PRE20]'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Create `page1.html` with a **Back** button in its page header as shown in the
    following code:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在页面页眉中创建带有**返回**按钮的`page1.html`，如下所示的代码：
- en: '[PRE21]'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Create `page2.html`, which does not have the **Back** button by default:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`page2.html`，默认情况下没有**返回**按钮：
- en: '[PRE22]'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: How it works...
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Create `main.html` and add two anchor links to it, which open `page1.html` and
    `page2.html` respectively. Create `page1.html` and add the attribute `data-add-back-btn="true"`
    to the page `div` container as shown in the previous code. Now when you click
    on the first button in `main.html`, it opens `page1.html` and you can see the
    **Back** button displayed in the page header. Click on it to go back to `main.html`.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`main.html`并向其添加两个锚链接，分别打开`page1.html`和`page2.html`。创建`page1.html`并在页面`div`容器中添加属性`data-add-back-btn="true"`，如前面的代码所示。现在，当你点击`main.html`中的第一个按钮时，它会打开`page1.html`，你可以看到页面页眉中显示了**返回**按钮。点击它返回到`main.html`。
- en: Create `page2.html` and do not add the `data-add-back-btn` attribute to it.
    Now when you click on the second button in `main.html`, it opens `page2.html`
    and there is no **Back** button in the header. You can add an anchor link to the
    page content to navigate back to `main.html`.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`page2.html`，并且不要添加`data-add-back-btn`属性。现在，当你点击`main.html`中的第二个按钮时，它会打开`page2.html`，而页眉中没有**返回**按钮。你可以在页面内容中添加一个锚链接来返回`main.html`。
- en: Now in `main.html`, add a submit button with `id="addbackbtns"` and text **Click
    to Add and Customize Back Button**. In the `pageinit` event handler, which gets
    invoked after the page has initialized at startup, bind the `click` event of the
    submit button to a callback function. Here set the option `addBackBtn` of the
    `$.mobile.page.prototype` object to `true` as shown in the previous code. This
    will automatically enable the **Back** button on all the pages in your application.
    Also you can customize the **Back** button further by setting its text and theme
    using the `backBtnText` and `backBtnTheme` options as shown in the previous code.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在`main.html`中，添加一个提交按钮，带有`id="addbackbtns"`和文本**点击添加和自定义返回按钮**。在页面初始化后启动的`pageinit`事件处理程序中，将提交按钮的`click`事件绑定到回调函数。在这里，像前面的代码中所示，将`$.mobile.page.prototype`对象的`addBackBtn`选项设置为`true`。这将自动在应用程序的所有页面上启用**返回**按钮。此外，您还可以通过设置`backBtnText`和`backBtnTheme`选项进一步自定义**返回**按钮的文本和主题，如前面的代码所示。
- en: 'Now you can visit both the pages from `main.html` and see that the back buttons
    are now available and have the same style. Both have yellow color and their text
    is set to **Prev**, as shown in the following screenshot:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以从`main.html`访问这两个页面，并看到返回按钮现在可用且样式相同。两者都是黄色的，文本设置为**Prev**，如下图所示：
- en: '![How it works...](img/7225_03_08.jpg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理...](img/7225_03_08.jpg)'
- en: There's more...
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'As mentioned in the recipe, you can set the following property and globally
    enable the **Back** button for all the pages in your application:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 如食谱中所述，你可以设置以下属性并在应用程序的所有页面上全局启用**返回**按钮：
- en: '[PRE23]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'When the **Back** button is enabled by default on all the pages, you can set
    it off for a particular page by adding the attribute `data-add-back-btn="false"`
    to its page `div` container:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 当所有页面默认启用**返回**按钮时，你可以通过将属性`data-add-back-btn="false"`添加到其页面`div`容器中来关闭特定页面的按钮：
- en: '[PRE24]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: See also
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Customizing the header with multiple buttons* recipe
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用多个按钮自定义页眉*的方法'
- en: The *Adding a customized round button to the header* recipe
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在页眉中添加自定义的圆形按钮*的方法'
- en: Adding a layout grid to the footer
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在页脚中添加布局网格
- en: A **Layout Grid** allows you to place controls in columns next to each other.
    This recipe shows you how to add multiple form controls to the page footer using
    a layout grid.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '**布局网格**允许您在相邻的列中放置控件。这个食谱向您展示了如何使用布局网格在页脚添加多个表单控件。'
- en: Getting ready
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Copy the full code of this recipe from the `code/03/footer-layoutgrid` sources
    folder. This code can be launched using the URL `http://localhost:8080/03/footer-layoutgrid/main.html`.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 从`code/03/footer-layoutgrid`源文件夹复制此食谱的完整代码。可以使用URL`http://localhost:8080/03/footer-layoutgrid/main.html`启动此代码。
- en: How to do it...
  id: totrans-166
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Create `main.html` and add a footer to its page. Add a layout grid to the page
    footer and add form controls to this layout grid, as shown in the following code:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`main.html`并在其页面中添加一个页脚。向页面页脚添加布局网格，并像下面的代码中所示添加表单控件：
- en: '[PRE25]'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: How it works...
  id: totrans-169
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Create `main.html` and add a footer to it. Style the footer by specifying the
    attribute `class="ui-bar"`. This creates a horizontal bar in which you can add
    your custom controls. Now add a two column layout grid to the footer by creating
    a `fieldset` element with the attribute `class="ui-grid-a"`.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`main.html`并向其添加一个页脚。通过指定属性`class="ui-bar"`来样式化页脚。这将创建一个水平栏，您可以在其中添加自定义控件。现在通过创建一个具有属性`class="ui-grid-a"`的`fieldset`元素向页脚添加一个两列布局网格。
- en: Add a `div` container with the attributes `data-role="fieldcontain"` to the
    first column of the layout grid. You must add the attribute `class="ui-block-a"`,
    to indicate that this `div` container is placed in the first column of the grid.
    Now add a Slider widget to this column by adding an `input` element with `type="range"`.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在布局网格的第一列添加一个带有属性`data-role="fieldcontain"`的`div`容器。必须添加属性`class="ui-block-a"`，以指示该`div`容器放置在网格的第一列中。现在通过添加一个带有`type="range"`属性的`input`元素将滑块小部件添加到此列。
- en: Similarly add a `div` container with the attributes `data-role="fieldcontain"`
    and `class="ui-block-b"`, to indicate that this `div` container should be placed
    in the second column of the layout grid. Add three radio buttons to this column
    in a single group by adding the attribute `data-role="controlgroup"`. Also add
    the attribute `data-type="horizontal"` to place the radio controls in a horizontal
    row (by default they are laid out vertically below each other).
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，添加一个带有属性`data-role="fieldcontain"`和`class="ui-block-b"`的`div`容器，以指示该`div`容器应放置在布局网格的第二列中。通过添加属性`data-role="controlgroup"`将三个单选按钮添加到单个组中，还添加属性`data-type="horizontal"`将单选按钮放置在水平行中（默认情况下，它们是垂直排列在彼此下方）。
- en: 'The footer now looks as shown in the following image:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 现在页脚的外观如下图所示：
- en: '![How it works...](img/7225_03_09.jpg)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理...](img/7225_03_09.jpg)'
- en: There's more...
  id: totrans-175
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'Up to five columns can be specified in a layout grid by styling the grid using
    the corresponding class, as shown in the following code:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过为网格添加相应的类来指定布局网格中的最多五列，如下面的代码所示：
- en: Two column grid – use the `ui-grid-a` class
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两列网格 - 使用`ui-grid-a`类
- en: Three column grid – use the `ui-grid-b` class
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 三列网格 - 使用`ui-grid-b`类
- en: Four column grid – use the `ui-grid-c` class
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 四列网格 - 使用`ui-grid-c`类
- en: Five column grid – use the `ui-grid-d` class
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 五列网格 - 使用`ui-grid-d`类
- en: Note
  id: totrans-181
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Given the lack of real estate in mobile devices, use the four or five column
    layout grids selectively. The UI might look cramped and there may not be enough
    space to fill in your form controls.
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 鉴于移动设备的屏幕空间有限，要有选择地使用四列或五列的布局网格。界面可能会显得拥挤，可能没有足够的空间来填充表单控件。
- en: Size of the controls in a layout grid
  id: totrans-183
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 布局网格中控件的大小
- en: Adding a form control or a widget to a layout grid column will cause the control
    to occupy the entire width of the column. If you do not want this behavior, you
    will have to modify the style of your control.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 向布局网格列添加表单控件或小部件将导致该控件占据整个列的宽度。如果不想要这种行为，您将需要修改控件的样式。
- en: Note
  id: totrans-185
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The Button and Select form controls support the `data-inline="true"` attribute.
    You can set this attribute to the controls and they will retain their actual compact
    sizes, and they will not resize to occupy the entire width of the column.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮和选择表单控件支持`data-inline="true"`属性。您可以将此属性设置为控件，它们将保持其实际的紧凑大小，并且不会调整大小以占据整个列的宽度。
- en: Breaking to the next row in a layout grid
  id: totrans-187
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在布局网格中换到下一行
- en: If your layout grid has multiple rows, you have to add the various controls
    in their own div containers, starting with `class="ui-block-a"` for the first
    column and moving to `class="ui-block-e"` for the fifth column. Adding a sixth
    `ui-block` or using a `div` container with `class="ui-block-a"` at any point of
    time in between will cause the columns to wrap and the newly added `div` container
    now moves to the next row.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的布局网格有多行，您必须将各种控件添加到它们自己的`div`容器中，从第一列开始为`class="ui-block-a"`，移动到第五列为`class="ui-block-e"`。在任何时候添加第六个`ui-block`或在中间使用`class="ui-block-a"`的`div`容器将导致列换行，新添加的`div`容器现在移至下一行。
- en: Note
  id: totrans-189
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Start a row with the class `ui-block-a` and move towards `ui-block-e` in a proper
    sequence.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 从`ui-block-a`类开始一行，按正确的顺序向`ui-block-e`移动。
- en: Do not repeat the same ui-blocks in the same row.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 不要在同一行中重复相同的ui块。
- en: See also
  id: totrans-192
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Using persistent navbars in toolbars* recipe
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在工具栏中使用持久性导航栏*方法'
- en: The *Creating a custom layout grid* recipe in [Chapter 4](ch04.html "Chapter 4. Buttons
    and Content Formatting"), *Buttons and Content Formatting*
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[第四章](ch04.html "第四章. 按钮和内容格式化")的*创建自定义布局网格*配方，*按钮和内容格式化*
