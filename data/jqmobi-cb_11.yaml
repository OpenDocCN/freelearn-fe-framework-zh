- en: Chapter 11. HTML5 and jQuery Mobile
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第11章。HTML5和jQuery Mobile
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下内容：
- en: Using the new HTML5 semantics
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用新的HTML5语义
- en: Improving speed and taking your application offline
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提高速度并使应用程序脱机运行
- en: Using Web Workers for intensive tasks
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Web Workers进行密集任务
- en: Using local and session storage
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用本地和会话存储
- en: 2D drawing with Canvas
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用Canvas进行2D绘图
- en: Applying Gaussian blur on a SVG image
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在SVG图像上应用高斯模糊
- en: Tracking your location with the Geolocation API
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用地理位置API跟踪你的位置
- en: Playing music with the `<audio>` element
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`<audio>`元素播放音乐
- en: Viewing videos with the `<video>` element
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`<video>`元素观看视频
- en: Introduction
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: HTML5 introduces new semantics and many new cool features, such as Application
    Cache, 2D Canvas, Geolocation, Local and Session Storage, Web Workers, and support
    for audio and video. The jQuery Mobile framework is built on HTML5 and CSS3, and
    provides excellent support for these new semantics and new features. This chapter
    introduces some of these features that you can use in your jQuery Mobile apps.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5引入了新的语义和许多新的酷功能，如应用程序缓存，2D画布，地理位置，本地和会话存储，Web Workers以及对音频和视频的支持。jQuery
    Mobile框架构建在HTML5和CSS3上，并提供对这些新的语义和新功能的出色支持。本章介绍了一些建议，你可以在你的jQuery Mobile应用中使用这些功能。
- en: Note
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注
- en: There are many resources on the web for learning HTML5\. To mention a few, you
    can read more at HTML5 Rocks ([http://www.html5rocks.com/en](http://www.html5rocks.com/en)),
    HTML5 Demos ([http://www.html5demos.com](http://www.html5demos.com)), and the
    Mozilla Developer Network ([https://developer.mozilla.org/en-US/docs/HTML/HTML5](https://developer.mozilla.org/en-US/docs/HTML/HTML5)).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多关于学习HTML5的网络资源。举几个例子，你可以在HTML5 Rocks ([http://www.html5rocks.com/en](http://www.html5rocks.com/en)),
    HTML5 Demos ([http://www.html5demos.com](http://www.html5demos.com)), 和Mozilla
    Developer Network ([https://developer.mozilla.org/en-US/docs/HTML/HTML5](https://developer.mozilla.org/en-US/docs/HTML/HTML5))阅读更多信息。
- en: The support for HTML5 elements and features on various browsers and platforms
    is varied. You will have to take care while using a particular feature and ensure
    that it works on your target platforms. This level of support continues to improve
    with every passing day.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 各种浏览器和平台对HTML5元素和功能的支持程度各不相同。在使用特定功能时，你必须小心，并确保它在你的目标平台上可以运行。这种支持程度每一天都在不断提高。
- en: Note
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注
- en: '[http://www.caniuse.com](http://www.caniuse.com) has a good reference on the
    updated status of platform support available for the various HTML5 features.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.caniuse.com](http://www.caniuse.com)提供了关于各种HTML5功能的平台支持更新状态的良好参考。'
- en: Using the new HTML5 semantics
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用新的HTML5语义
- en: 'HTML5 defines new semantics to better organize an HTML document into more logical
    sections. This recipe shows you how to use the new HTML5 semantics to define your
    jQuery Mobile app. The following HTML5 elements are covered in this recipe:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5定义了新的语义，以更好地将HTML文档组织为更加合乎逻辑的部分。这个建议向你展示如何使用新的HTML5语义来定义你的jQuery Mobile应用。本建议涵盖了以下HTML5元素：
- en: '`section`: This defines the section in a document. Headers, footers, and the
    page content are all sections.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`section`：这定义了文档中的部分。页眉，页脚和页面内容都是部分。'
- en: '`header`: This defines the document header.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`header`：这定义了文档的页眉。'
- en: '`footer`: This defines the document footer.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`footer`：这定义了文档的页脚。'
- en: '`aside`: This defines the additional content related to the main content of
    the document, usually placed as a sidebar.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`aside`：这定义了与文档主要内容相关的附加内容，通常放置在侧边栏中。'
- en: '`article`: This defines the content related to the document, but it can also
    stand alone and can be independently distributed.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`article`：这定义了与文档相关的内容，但也可以独立存在并且可以独立分发。'
- en: '`nav`: This is a section providing navigation links and can contain one or
    more anchor links.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nav`：这是提供导航链接并且可以包含一个或多个锚链接的部分。'
- en: Getting ready
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Copy the full code of this recipe from the `code/11/semantics` folder. You
    can launch this code using the URL: `http://localhost:8080/11/semantics/main.html`.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 从`code/11/semantics`文件夹复制此示例的完整代码。你可以使用以下URL启动此代码：`http://localhost:8080/11/semantics/main.html`。
- en: How to do it...
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The steps to be followed are as follows:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 需要遵循的步骤如下：
- en: 'Create `main.html` that uses the new HTML5 semantics for the page; do not use
    the `<div>` tag here:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`main.html`，在页面中使用新的HTML5语义；不要在这里使用`<div>`标签：
- en: '[PRE0]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: How it works...
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Create `main.html`, and add the `#main` page to it using a `<section>` tag with
    the `data-role='page'` attribute. Add the `<header>` tag with `data-role='header'`
    to create the page header. Next, add a `<section>` tag with `data-role='content'`
    to create the page content section. Finally, add the footer with the `<footer>`
    tag with the `data-role='footer'`attribute. You now have the page with a header,
    content, and footer ready. You will note that `<div>` has not been used so far.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 `main.html`，并使用带有 `data-role='page'` 属性的 `<section>` 标签将 `#main` 页面添加到其中。添加带有
    `data-role='header'` 属性的 `<header>` 标签以创建页面页眉。接下来，添加带有 `data-role='content'` 属性的
    `<section>` 标签以创建页面内容部分。最后，使用带有 `data-role='footer'` 属性的 `<footer>` 标签添加页脚。现在，您已经准备好了具有页眉、内容和页脚的页面。到目前为止，您会注意到还没有使用
    `<div>`。
- en: 'Add the `<aside>` and `<article>` elements to the page content, as shown in
    the code. Since there are multiple articles, you can group them in a `<section>`
    element. Finally, add a `<nav>` element with two button links to the page footer.
    Add the `ui-btn-right` class to move the second button to the right side of the
    screen. Now, when you launch the app, the following screen will be displayed:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在页面内容中添加 `<aside>` 和 `<article>` 元素，如代码所示。由于有多篇文章，您可以将它们分组在一个 `<section>` 元素中。最后，在页面页脚添加一个带有两个按钮链接的
    `<nav>` 元素。添加 `ui-btn-right` 类来将第二个按钮移到屏幕右侧。现在，当您启动应用程序时，将显示以下屏幕：
- en: '![How it works...](img/7225_11_01.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/7225_11_01.jpg)'
- en: There's more...
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'HTML5 supports many more new elements, such as:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5 支持许多新元素，例如：
- en: '`figure`: This is used to contain images, photos, diagrams, illustrations,
    and so on.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`figure`: 用于包含图像、照片、图表、插图等。'
- en: '`figcaption`: This defines the caption for `<figure>.`'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`figcaption`: 为 `<figure>` 定义标题。'
- en: '`hgroup`: This is used to group a set of header elements (`<h1>`,`<h2>`, and
    so on).'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hgroup`: 用于对一组标题元素（`<h1>`、`<h2>`等）进行分组。'
- en: '`mark`: This is used to highlight the text.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mark`: 用于突出显示文本。'
- en: '`meter`: This is used to specify a numeric value within a min-max range. You
    can also specify a threshold value (low and high).'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`meter`: 用于指定在最小-最大范围内的数值。您还可以指定阈值（低和高）。'
- en: '`progress`: This is used to indicate progress.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`progress`: 用于指示进度。'
- en: '`time`: This is used to mark up a date/time value.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`time`: 用于标记日期/时间值。'
- en: About using <div>
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关于使用 <div>
- en: Prior to HTML5, `<div>` was used as the container to group elements. But this
    was not very descriptive. The HTML5 document structure is much more descriptive
    and meaningful with header, footer, and so on.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在 HTML5 之前，`<div>` 被用作容器来组合元素。但这不是很描述性的。HTML5 文档结构更加描述性和有意义，具有页眉、页脚等。
- en: Note
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: When using HTML5, use `<div>` to group elements that do not fit the description
    of any of the new HTML5 elements, such as `<section>`.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用 HTML5 时，请使用 `<div>` 来组合不符合任何新 HTML5 元素描述的元素，例如 `<section>`。
- en: Using <section> with jQuery Mobile
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 <section> 与 jQuery Mobile
- en: Support for HTML5 semantics is varied and improving in the numerous platforms
    available on the market today. As of v1.1.1, the jQuery Mobile framework recommends
    using the `<div>` element with the `data-role` attribute to specify the various
    page components, such as header and footer. This is to ensure compatibility with
    the older versions of browsers, such as IE8, and also to support the maximum number
    of devices and platforms. This would definitely change in a near future version
    of jQuery Mobile, when support for the older browsers is dropped. Till then, use
    the new HTML5 elements, keeping your target users in mind.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在当前市场上可用的多个平台上，对 HTML5 语义的支持各不相同且不断改善。截至 v1.1.1，jQuery Mobile 框架建议使用带有 `data-role`
    属性的 `<div>` 元素来指定各种页面组件，例如页眉和页脚。这是为了确保与旧版浏览器（如 IE8）的兼容性，同时也支持尽可能多的设备和平台。在不久的将来版本的
    jQuery Mobile 中，当对旧版本浏览器的支持被放弃时，这肯定会发生变化。在那之前，请根据您的目标用户使用新的 HTML5 元素。
- en: Improving speed and taking your application offline
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提高速度并使您的应用脱机化
- en: HTML5 introduced a new feature called **Application Cache** that allows your
    web app to cache network resources locally. You can also control and configure
    this cache much better than the earlier browser caching techniques. With Application
    Cache, your mobile app can work better, even in situations where there is slow
    or no network coverage. Your app is faster, as it can find many of the resources
    stored locally instead of fetching them from the server. This also helps the user
    with lower data transfer costs that would be charged by the service provider.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5 引入了一个称为 **Application Cache** 的新功能，允许你的 Web 应用将网络资源缓存在本地。你还可以比以前的浏览器缓存技术更好地控制和配置这个缓存。有了
    Application Cache，你的移动应用即使在网络覆盖不好或没有网络的情况下也能更好地运行。你的应用会更快，因为它可以在本地找到许多资源，而不是从服务器获取它们。这也有助于用户降低服务提供商可能收取的数据传输费用。
- en: This recipe shows you how to use the Application Cache feature in your jQuery
    Mobile app. It also shows you how to use a locally stored jQuery Mobile library
    instead of fetching the library files from the CDN.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方向你展示了如何在你的 jQuery Mobile 应用中使用 **Application Cache** 功能。它还向你展示了如何使用本地存储的
    jQuery Mobile 库，而不是从 CDN 获取库文件。
- en: Getting ready
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Copy the full code of this recipe from the `code/11/appcache` folder. You will
    have to host this code on a web server to see how Application Cache works. The
    `sources` folder contains a `nodejs` web server that you can use to run this app.
    You can launch this code using the URL: `http://localhost:8080/11/appcache/main.html`.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 从 `code/11/appcache` 文件夹复制本配方的完整代码。你需要将此代码托管在 Web 服务器上才能查看 Application Cache
    的工作原理。`sources` 文件夹包含一个 `nodejs` Web 服务器，你可以用来运行此应用程序。你可以使用以下 URL 启动此代码：`http://localhost:8080/11/appcache/main.html`。
- en: How to do it...
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The steps to be followed are:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 需要遵循的步骤是：
- en: 'Create `main.html`, and specify the manifest file in the `<html>` tag:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 `main.html`，并在 `<html>` 标签中指定清单文件：
- en: '[PRE1]'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Add the following three links to the page content in `main.html`:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `main.html` 页面内容中添加以下三个链接：
- en: '[PRE2]'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Create the following `jqmcookbook.appcache` manifest file and specify the files
    that are to be cached:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建以下 `jqmcookbook.appcache` 清单文件，并指定要缓存的文件：
- en: '[PRE3]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Create the following `cached.html` file, which gets cached by the app, and
    is available for offline access:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建以下 `cached.html` 文件，它会被应用程序缓存，并可供离线访问：
- en: '[PRE4]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Create the following `online.html` file, which does not get cached and is fetched
    from the network every time it is accessed:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建以下 `online.html` 文件，它不会被缓存，并且每次访问时都会从网络获取：
- en: '[PRE5]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Create the following `offline.html` file that gets cached and is used as a
    fallback when the `online.html` page is not accessible over the network:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建以下 `offline.html` 文件，它会被缓存，并在无法访问 `online.html` 页面时用作回退：
- en: '[PRE6]'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Finally, create the following `network.html` file that does not get cached,
    and is always fetched from the network; it does not use any fallback:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，创建以下 `network.html` 文件，它不会被缓存，并且总是从网络获取；它不使用任何回退：
- en: '[PRE7]'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: How it works...
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Create `main.html`, and specify `jqmcookbook.appcache` as the manifest file
    in its `<html>` tag. This indicates to the browser that the HTML file should be
    cached. It also indicates that the manifest file must be processed for finding
    all the resources that are to be cached locally. Add three links for the `cached.html`,
    `online.html`, and `network.html` pages, as shown. These will be used as the resources
    that will be cached in this recipe.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 `main.html`，并在其 `<html>` 标签中指定 `jqmcookbook.appcache` 作为清单文件。这表示向浏览器指示应该缓存
    HTML 文件。它还表示清单文件必须被处理以找到所有要在本地缓存的资源。按照示例添加 `cached.html`、`online.html` 和 `network.html`
    页面的三个链接。这些将被用作本配方中将要缓存的资源。
- en: Create the `jqmcookbook.appcache` manifest file with the text `CACHE MANIFEST`
    specified in its first line. You can add comments to the manifest file, and they
    start with the `#` character. Now, add the resources to be cached by your app
    to the manifest file. Each filename must be on a separate line, and you can use
    relative or absolute paths. The Cache Manifest file has three sections identified
    by the `CACHE`, `FALLBACK`, and `NETWORK` headers.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 创建带有 `CACHE MANIFEST` 文本的 `jqmcookbook.appcache` 清单文件。你可以在清单文件中添加注释，它们以 `#`
    字符开头。现在，将要由你的应用程序缓存的资源添加到清单文件中。每个文件名必须在单独的一行上，并且你可以使用相对或绝对路径。Cache Manifest 文件有三个部分，分别用
    `CACHE`、`FALLBACK` 和 `NETWORK` 标头标识。
- en: Define the default `CACHE` section and list the files that should be cached
    locally. Add `main.html` and `cached.html` to this section. When you launch the
    app and click on the first button, it opens `cached.html` regardless of whether
    the device is online or offline.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 定义默认的`CACHE`部分，并列出应该在本地缓存的文件。将`main.html`和`cached.html`添加到此部分。当你启动应用程序并点击第一个按钮时，无论设备是在线还是离线，它都会打开`cached.html`。
- en: Note
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Images, icons, stylesheets, JavaScript, and other static files are the resources
    that you should cache locally.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图像、图标、样式表、JavaScript和其他静态文件都是你应该在本地缓存的资源。
- en: Cached files are downloaded only at the first time. When the app tries to access
    any of these files, they are always fetched from the cache first or, only if not
    available, they are fetched from the server.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 缓存文件只有在第一次下载时才会被下载。当应用尝试访问这些文件中的任何一个时，它们总是首先从缓存中获取，或者只有在缓存中不存在时才会从服务器获取。
- en: Note
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: It is good practice to cache the main HTML file (with the manifest defined in
    its `<html>` tag) in your app.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用程序中缓存主HTML文件（在其`<html>`标签中定义了清单）是个不错的做法。
- en: Next, define the `FALLBACK` section with two filenames in each line. Specify
    `online.html` as the first file, and then specify the fallback as `offline.html`.
    Now, when you click on the second button in the app, `online.html` is shown only
    if the device is online. If the device goes offline, then `offline.html` is automatically
    shown from the cache. Here, the first file is always fetched from the network
    and is never cached.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，定义`FALLBACK`部分，每行定义两个文件名。将`online.html`指定为第一个文件，然后将`offline.html`指定为后备。现在，当你点击应用程序中的第二个按钮时，只有在设备在线时才会显示`online.html`。如果设备离线，那么`offline.html`将自动从缓存中显示。在这里，第一个文件总是从网络获取，而不会被缓存。
- en: Finally, define the `NETWORK` section with `network.html` listed in it. Use
    this section to define the list of files that should never be cached in your app.
    These files are always fetched from the network. Now, when you click on the third
    button, `network.html` is shown only if the device is online, and an error is
    shown if the device is offline.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，定义`NETWORK`部分，并将`network.html`列在其中。使用这部分来定义在您的应用中永远不应该被缓存的文件列表。这些文件总是从网络获取。现在，当你点击第三个按钮时，只有在设备在线时才会显示`network.html`，如果设备离线，则会显示错误。
- en: There's more...
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: You can see the list of currently cached files in your browser using the developer/debugging
    tools that most browsers provide today. The following screenshot shows the Chrome
    Developer Tool's view of the resources that have been cached for the `main.html`
    file in this recipe. The files listed in the manifest are all seen in the **Application
    Cache** section.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用大多数浏览器提供的开发者/调试工具在浏览器中看到当前缓存的文件列表。以下截图显示了Chrome开发者工具中对本文档中`main.html`文件缓存资源的视图。清单中列出的文件都在**Application
    Cache**部分中看到。
- en: '![There''s more...](img/7225_11_02.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多...](img/7225_11_02.jpg)'
- en: Restriction on the cache size
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缓存大小的限制
- en: There is a browser limitation on how much data you can store locally. Usually
    it is 5 to 10 MBs, and requires the user's permission to go over this limit. Some
    browsers, such as Chrome, allow you to set this value as unlimited. So, cache
    files with care and include the resources that you access often. Also include
    resources that you need to take your app offline.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览器对本地存储的数据量有限制。通常是5到10 MB，需要用户允许超过此限制。一些浏览器，如Chrome，允许你将此值设置为无限制。因此，小心地缓存文件，并包括你经常访问的资源。还包括那些需要让您的应用离线的资源。
- en: Refreshing the Application Cache
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 刷新应用程序缓存
- en: Each time the `main.html` file is accessed, the remote manifest file is fetched
    and is compared with the local manifest file. Only if the manifest has changed
    (this could be even just a comment), the new manifest file is fetched. Then the
    cache will be cleared and the entire set of cached files will be refreshed from
    the server. The flip side to this is that, just adding a single new file to the
    manifest file will trigger a full refresh, even if none of the other files have
    changed.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 每次访问`main.html`文件时，远程清单文件都会被获取并与本地清单文件进行比较。只有清单文件已更改（这甚至可能只是一个注释），新的清单文件才会被获取。然后缓存将被清除，并且整套缓存文件将从服务器刷新。与此相对的是，即使其他文件没有发生变化，向清单文件中添加一个新文件也会触发完全刷新。
- en: Note
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Using a version number in the comment of the manifest file is a good way of
    keeping the cached files updated.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在清单文件的注释中使用版本号是保持缓存文件更新的好方法。
- en: The MIME type of the manifest file
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 清单文件的MIME类型
- en: You should always serve the manifest file with the **MIME** type of text/cache-manifest.
    You can name this manifest anything. Your server should be able to recognize this
    MIME type. If it does not, you should add this MIME type to your server configuration.
    The nodejs web server that is shipped with the sources for this cookbook, already
    supports the text/cache-manifest MIME type.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该始终以 **MIME** 类型为 text/cache-manifest 提供清单文件。您可以将此清单命名为任何内容。您的服务器应该能够识别此 MIME
    类型。如果没有，请将此 MIME 类型添加到服务器配置中。本配方所附源代码中附带的 nodejs Web 服务器已经支持 text/cache-manifest
    MIME 类型。
- en: The Ajax pre-filter workaround
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Ajax 预过滤器解决方案
- en: Application Cache does not work properly on some browsers and the Ajax pre-filter
    workaround is required in this case. In these browsers, a successful Ajax call
    returns a `0` HTTP status on success. To work around this, you should use a jQuery
    Ajax pre-filter and set the `isLocal` attribute to `true`. The detailed github
    discussion thread on using the `isLocal` workaround is available at [https://github.com/jquery/jquery-mobile/issues/1579](https://github.com/jquery/jquery-mobile/issues/1579).
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 应用缓存在某些浏览器上无法正常工作，因此在这种情况下需要使用 Ajax 预过滤器的解决方法。在这些浏览器中，成功的 Ajax 调用会在成功时返回 `0`
    HTTP 状态。为了解决这个问题，您应该使用 jQuery Ajax 预过滤器，并将 `isLocal` 属性设置为 `true`。有关使用 `isLocal`
    解决方法的详细 GitHub 讨论线程，请参阅 [https://github.com/jquery/jquery-mobile/issues/1579](https://github.com/jquery/jquery-mobile/issues/1579)。
- en: See also
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Using Web Workers for intensive tasks* recipe
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*为密集任务使用 Web Workers* 配方'
- en: '[Chapter 2](ch02.html "Chapter 2. Pages and Dialogs"), *Pages and Dialogs*,
    The *Prefetching pages for faster navigation* and The *Using the DOM cache to
    improve performance* recipes'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第二章](ch02.html "第二章. 页面和对话框")，*页面和对话框*，*为更快的导航预取页面* 和 *使用 DOM 缓存以提高性能* 配方'
- en: Using Web Workers for intensive tasks
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为密集任务使用 Web Workers
- en: When you run a script that does some complex or lengthy activity, the browser
    thread freezes and does not respond till the task is complete. This can be overcome
    by using a Web Worker—a background independent thread that is used to run JavaScript.
    The browser thread is not blocked, and thus can continue to respond to user actions.
    This recipe shows you how to use Web Workers.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 当运行执行复杂或耗时活动的脚本时，浏览器线程会冻结并且在任务完成前不响应。这可以通过使用 Web Worker 来克服——这是一个在后台独立运行 JavaScript
    的线程。浏览器线程不会被阻塞，因此可以继续响应用户操作。本配方向您展示如何使用 Web Workers。
- en: Getting ready
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'Copy the full code of this recipe from the `code/11/webworkers` folder. You
    can launch this code using the URL: `http://localhost:8080/11/webworkers/main.html`.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 从 `code/11/webworkers` 文件夹中复制此配方的完整代码。您可以使用以下 URL 启动此代码：`http://localhost:8080/11/webworkers/main.html`。
- en: How to do it...
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The steps to be performed are as follows:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 执行的步骤如下：
- en: 'Create `main.html` with a checkbox and a slider as its page content:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 `main.html`，其页面内容包括复选框和滑块：
- en: '[PRE8]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Add the following script to trigger a long running loop when the checkbox is
    clicked. When checked, the loop is run in a Web worker and there is no UI freeze,
    and you can continue to use the page. When the checkbox is unchecked, immediately
    everything freezes till the loop is done.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在复选框被点击时添加以下脚本以触发长时间运行的循环。选中时，循环在 Web worker 中运行，没有 UI 冻结，并且您可以继续使用页面。当复选框未选中时，一切立即冻结，直到循环完成。
- en: '[PRE9]'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Finally, add the `webworker.js` JavaScript file to handle the loop:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，添加 `webworker.js` JavaScript 文件来处理循环：
- en: '[PRE10]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: How it works...
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Create `main.html`, and add a slider and a checkbox with `id='countchk'` to
    the content of `#main`. Also, add an empty `#msgdiv` attribute to display the
    messages. Bind the `change` event of the checkbox to an event handler in the `pageinit`
    callback.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 `main.html`，并将一个复选框和一个带有 `id='countchk'` 的滑块添加到 `#main` 的内容中。此外，添加一个空的 `#msgdiv`
    属性来显示消息。将复选框的 `change` 事件绑定到 `pageinit` 回调中的事件处理程序。
- en: When the checkbox is selected, trigger the loop in a Web Worker. Initiate the
    Web Worker by calling `new Worker()`, and pass it the name of the JavaScript `webworker.js`
    file. Define the `onmessage` event handler to handle messages received by the
    worker. You can display this message in `#msgdiv`. Finally, invoke the worker
    by posting a `start` message to it. This message can be anything, and the code
    must be written in the worker to handle it. In the file `webworker.js`, define
    the `onmessage` callback to handle the incoming message from the browser thread.
    Run the loop and return an appropriate message to the main thread.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 当选中复选框时，在 Web Worker 中触发循环。通过调用 `new Worker()` 来启动 Web Worker，并将 JavaScript
    `webworker.js` 文件的名称传递给它。定义 `onmessage` 事件处理程序来处理工作器接收到的消息。您可以在 `#msgdiv` 中显示此消息。最后，通过向其发送
    `start` 消息来调用工作器。这个消息可以是任何东西，必须在工作器中编写代码来处理它。在文件 `webworker.js` 中，定义 `onmessage`
    回调来处理来自浏览器线程的传入消息。运行循环并向主线程返回相应的消息。
- en: 'When you launch the page and select the checkbox, the loop is initiated in
    a Web Worker. You can use the slider and see the messages being updated in the
    page even though the loop is still running:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 当您启动页面并选择复选框时，循环将在 Web Worker 中启动。您可以使用滑块，即使循环仍在运行，也可以看到页面中的消息被更新：
- en: '![How it works...](img/7225_11_03.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理……](img/7225_11_03.jpg)'
- en: 'When the checkbox is not selected, the loop runs in the main browser thread
    itself. Now, the entire UI freezes even before the checkbox can reflect your click,
    and the UI responds only after the loop is completed:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 当复选框未被选中时，循环将在主浏览器线程中运行。现在，在复选框可以反映您的选择之前，整个界面都会冻结，并且只有在循环完成后界面才会响应：
- en: '![How it works...](img/7225_11_04.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理……](img/7225_11_04.jpg)'
- en: There's more...
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多……
- en: Support for Web Workers might not be available in all browsers. You can check
    for the Web Worker support in your app by calling the following code, which checks
    for the presence of the `Worker` property of the `window` object. If undefined,
    the feature is not available.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有浏览器中可能并不支持 Web Workers。您可以通过调用以下代码来检查应用程序中对 Web Worker 的支持情况，该代码检查 `window`
    对象的 `Worker` 属性是否存在。如果未定义，则表示不支持该功能。
- en: '[PRE11]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Using Modernizr to check for Web Worker support
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 Modernizr 检查 Web Worker 的支持
- en: '**Modernizr** (available at [http://www.modernizr.com](http://www.modernizr.com))
    is a very popular and handy library that can be used to detect the support for
    Web Workers and other HTML5 and CSS3 features in your browser. It provides **polyfills**
    or **fallbacks** in case a particular property is not supported in a browser.
    It comes with an **MIT** **license** , and can be freely used. The `Modernizr.webworkers`
    property would be defined and available if your browser supports Web Workers.'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '**Modernizr**（位于 [http://www.modernizr.com](http://www.modernizr.com)）是一个非常受欢迎和方便的库，可用于检测浏览器中对
    Web Worker 和其他 HTML5 和 CSS3 功能的支持。它提供 **polyfills** 或 **fallbacks** ，以防某个属性在浏览器中不受支持。它使用
    **MIT** **许可证** ，可以自由使用。如果您的浏览器支持 Web Workers，`Modernizr.webworkers` 属性将被定义和可用。'
- en: See also
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Improving speed and taking your application offline* recipe
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*改进速度并使应用离线* 配方'
- en: Using local and session storage
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用本地和会话存储
- en: '**Cookies** was the mechanism used to store client-side information earlier.
    But a cookie can only store up to 4 KB of data, which is sent to the server with
    every single request. **Web Storage** is the client-side storage standard introduced
    with HTML5\. It has two types: **Local Storage** and **Session Storage** . Data
    stored in Session Storage is available till the user''s session is active, and
    is lost once the session ends. Local Storage data is persisted across sessions.
    This recipe shows you how to use Local Storage and Session Storage.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '**Cookies** 曾是以前用于存储客户端信息的机制。但是一个 cookie 只能存储最多 4 KB 的数据，这些数据将随每个请求发送到服务器。**Web
    Storage** 是在 HTML5 中引入的客户端存储标准。它有两种类型：**本地存储** 和 **会话存储** 。会话存储中存储的数据在用户会话处于活动状态时可用，并在会话结束后丢失。本地存储中的数据在会话之间持久存在。该配方向您展示如何使用本地存储和会话存储。'
- en: Getting ready
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Copy the full code of this recipe from the `code/11/storage` folder. You can
    launch this code using the URL: `http://localhost:8080/11/storage/main.html`.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 从 `code/11/storage` 文件夹复制此配方的全部代码。您可以使用以下 URL 启动此代码：`http://localhost:8080/11/storage/main.html`。
- en: How to do it...
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到……
- en: 'The steps to be followed are:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 应遵循的步骤为：
- en: 'Create `main.html` with its page content having three text fields and a **Save**
    button:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建带有三个文本字段和一个 **保存** 按钮的 `main.html`：
- en: '[PRE12]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Add the following script to persist the text field contents by clicking on
    the **Save** button:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下脚本添加到点击**保存**按钮以保持文本字段内容的持久性：
- en: '[PRE13]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Finally, restore the persisted values when the page is shown:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，在显示页面时恢复持久化的值：
- en: '[PRE14]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Refresh the page, and later close and reopen the page to see how these persisted
    values behave over a single session and across multiple sessions.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 刷新页面，然后稍后关闭并重新打开页面，查看这些持续存在的值在单个会话和多个会话中的行为如何。
- en: How it works...
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'Add three texts with IDs: `nostore`, `sessionstore`, and `localstore`. Add
    a button with `id=''savebtn''`, and bind its `click` event to a callback in the
    `pageinit` event handler. In the callback, persist the text fields by calling
    the `setItem()` method with unique keys (`localval` and `sessionval`) on the `window.sessionStorage`
    and `window.localStorage` objects respectively.'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 添加三个带有 ID 的文本：`nostore`、`sessionstore` 和 `localstore`。添加一个带有`id='savebtn'`的按钮，并将其`click`事件绑定到`pageinit`事件处理程序中的回调函数。在回调函数中，通过在`window.sessionStorage`和`window.localStorage`对象上分别调用`setItem()`方法并使用唯一键（`localval`
    和 `sessionval`）来持久化文本字段。
- en: To restore these persisted values when the page reloads or refreshes, add an
    event handler to the `pageshow` event. Pass the `localval` key to the `window.localStorage.getItem()`
    function to read from local storage. Pass the `sessionval` key to `window.sessionStorage.getItem()`
    to read from session storage. Set these values to the respective text fields.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 要在页面重新加载或刷新时恢复这些持久化的值，请向`pageshow`事件添加事件处理程序。将`localval`键传递给`window.localStorage.getItem()`函数以从本地存储中读取。将`sessionval`键传递给`window.sessionStorage.getItem()`以从会话存储中读取。将这些值设置到相应的文本字段中。
- en: When the app loads, enter the text values and click on the **Save** button to
    persist them.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序加载时，请输入文本值，然后单击**保存**按钮以使它们持久化。
- en: '![How it works...](img/7225_11_05.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/7225_11_05.jpg)'
- en: 'Next, refresh the browser to reload the page. The session is still alive, and
    you will see the local and session storage values get restored. The first field
    is cleared as it was not persisted, as shown in the following screenshot:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，刷新浏览器以重新加载页面。会话仍然存在，您将看到本地和会话存储值被恢复。第一个字段被清除，因为它没有被持久化，如下图所示：
- en: '![How it works...](img/7225_11_06.jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/7225_11_06.jpg)'
- en: 'Finally, close the app and reopen it. This time, the session is terminated.
    You will see that only the **Local Storage** data is shown and the other two text
    fields are cleared:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，关闭应用程序并重新打开它。这次，会话已终止。您将看到只显示**本地存储**数据，其他两个文本字段已清除：
- en: '![How it works...](img/7225_11_07.jpg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/7225_11_07.jpg)'
- en: There's more...
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'Support for Web Storage might not be available in all browsers. You can check
    if the `window` object has a valid `localstorage` or `sessionStorage` property
    to verify if you can use the feature by running the following code:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 不同浏览器可能不支持 Web 存储功能。您可以通过运行以下代码检查`window`对象是否具有有效的`localstorage`或`sessionStorage`属性以验证您是否可以使用该功能：
- en: '[PRE15]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: You can also use the free `Modernizr` library to test for Web Storage support
    by checking if the `Modernizr.localstorage` and the `Modernizr.sessionstorage`
    properties are valid.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用免费的`Modernizr`库来测试 Web 存储支持，方法是检查`Modernizr.localstorage`和`Modernizr.sessionstorage`属性是否有效。
- en: Inspecting the Web Storage
  id: totrans-151
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 检查 Web 存储
- en: 'You can open the developer tools in your browser and inspect the current set
    of key-values stored in your browser for the Local and Session Storage. The following
    screenshot shows the Local Storage key-value that was saved in this recipe:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在浏览器中打开开发者工具，检查浏览器中存储的本地和会话存储的当前键值集。以下截图显示了在此示例中保存的本地存储键值：
- en: '![Inspecting the Web Storage](img/7225_11_08.jpg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![检查 Web 存储](img/7225_11_08.jpg)'
- en: 'The following screenshot shows the key-value stored using **Session Storage**:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了使用**会话存储**存储的键值：
- en: '![Inspecting the Web Storage](img/7225_11_09.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![检查 Web 存储](img/7225_11_09.jpg)'
- en: WebSQL Storage
  id: totrans-156
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: WebSQL 存储
- en: WebSQL Storage is another feature that was defined in HTML5 to store client-side
    data. It uses SQLite queries to perform the data operations. Both IE and Firefox
    do not support this feature. This specification is no longer being maintained
    and might be dropped going forward.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: WebSQL 存储是 HTML5 中定义的另一个功能，用于存储客户端数据。它使用 SQLite 查询执行数据操作。IE 和 Firefox 都不支持此功能。此规范已不再维护，并且可能会在未来被放弃。
- en: IndexedDB Storage
  id: totrans-158
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: IndexedDB 存储
- en: The **IndexedDB** **Storage** is another form of client-side storage using indexed
    data queries. Only Firefox and Chrome browsers support this feature well at the
    time of writing this recipe. Older IE versions, Safari, and Opera do not support
    this feature.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '**IndexedDB 存储** 是使用索引数据查询的另一种形式的客户端存储。在编写本教程时，只有 Firefox 和 Chrome 浏览器很好地支持此功能。旧版
    IE、Safari 和 Opera 不支持此功能。'
- en: 2D drawing with Canvas
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Canvas 进行 2D 绘图
- en: '**Canvas** is a rectangular region in your web page where you can draw 2D shapes
    using JavaScript, and also render bitmap images. It is used for graphs, animations,
    images, photo compositions, real-time video processing, and games. This recipe
    shows you how to use the Canvas in your jQuery Mobile app.'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '**Canvas** 是您的网页中的矩形区域，您可以使用 JavaScript 绘制 2D 形状，并渲染位图图像。它用于图表、动画、图像、照片合成、实时视频处理和游戏。本教程向您展示了如何在
    jQuery Mobile 应用程序中使用 Canvas。'
- en: Getting ready
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'Copy the full code of this recipe from the `code/11/canvas` folder. You can
    launch this code using the URL: `http://localhost:8080/11/canvas/main.html`.'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 从 `code/11/canvas` 文件夹中复制本教程的完整代码。您可以使用以下 URL 启动此代码：`http://localhost:8080/11/canvas/main.html`。
- en: How to do it...
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The steps to be followed are:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 应遵循的步骤是：
- en: 'Create `main.html` with its page content having a `canvas` element:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建带有 `canvas` 元素的页面内容的 `main.html`：
- en: '[PRE16]'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Add the following script to get the 2D context, and then draw two rectangles:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下脚本以获取 2D 上下文，然后绘制两个矩形：
- en: '[PRE17]'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: How it works...
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'Create `main.html`, and add a `<canvas>` element with `id=''mycanvas''` to
    the `#main` page with `width` and `height` of `500` pixels. The text **Canvas
    is not supported on your browser** is shown if the browser does not support the
    Canvas feature. Next, add a script to the `pageinit` callback function to get
    the 2D context (`cxt`) of the `mycanvas` element. Define the `fillStyle` of `cxt`
    with a grey shade `#5f98c5`. Now, draw a filled rectangle using `fillRect()`,
    passing the origin, length, and breadth as parameters. Next, use `strokeRect()`
    to draw a rectangle outline without any fill. The screen is now displayed, as
    shown in the following screenshot:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 `main.html`，并在 `#main` 页面上添加一个 `id='mycanvas'` 的 `<canvas>` 元素，宽度和高度均为 `500`
    像素。如果浏览器不支持 Canvas 功能，则显示文本 **Canvas is not supported on your browser**。接下来，在
    `pageinit` 回调函数中添加脚本以获取 `mycanvas` 元素的 2D 上下文 (`cxt`)。将 `cxt` 的 `fillStyle` 定义为灰色阴影
    `#5f98c5`。现在，使用 `fillRect()` 绘制一个填充的矩形，传递原点、长度和宽度作为参数。接下来，使用 `strokeRect()` 绘制一个没有填充的矩形轮廓。屏幕现在显示如下截图所示：
- en: '![How it works...](img/7225_11_10.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理...](img/7225_11_10.jpg)'
- en: There's more...
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: This recipe just gives a basic introduction to the Canvas element, and shows
    you how to use it in your jQuery Mobile app. The Canvas is a very powerful element
    and supports a wide array of APIs. You can set colors, styles, gradients, patterns,
    fonts, and text alignment. You can draw geometric shapes, such as lines, rectangles,
    paths, arcs, and bezier curves. The canvas supports transformation APIs, such
    as scale, rotate, translate, and transform. You can draw images and also manipulate
    them at a pixel level. Canvas helps in photo composition. You can also save the
    drawing state of the canvas in a stack, and restore any previous saved drawing
    state from the stack.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程只是对 Canvas 元素进行了基本介绍，并向您展示了如何在 jQuery Mobile 应用程序中使用它。Canvas 是一个非常强大的元素，支持各种
    API。您可以设置颜色、样式、渐变、图案、字体和文本对齐方式。您可以绘制几何形状，如线条、矩形、路径、弧线和贝塞尔曲线。画布支持变换 API，如缩放、旋转、平移和变换。您可以绘制图像，也可以在像素级别对其进行操作。Canvas
    有助于图像合成。您还可以将画布的绘制状态保存在堆栈中，并从堆栈中恢复任何以前保存的绘制状态。
- en: Note
  id: totrans-175
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The elements drawn on a canvas take in absolute coordinates. So, take care while
    using these values, keeping in mind the actual screen size of your target devices.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在画布上绘制的元素采用绝对坐标。因此，在使用这些值时，请注意目标设备的实际屏幕尺寸。
- en: See also
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Applying Gaussian blur on a SVG image* recipe
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在 SVG 图像上应用高斯模糊* 教程'
- en: Applying Gaussian blur on a SVG image
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 SVG 图像上应用高斯模糊
- en: '**Scalable Vector Graphics** (**SVG**) is a family of specifications for 2D
    Scalable Vector Graphics. They are XML-based and can be static or dynamic (animated
    or interactive). This recipe shows you how to use a SVG image in your app, and
    apply a Gaussian filter when you click on it.'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '**可缩放矢量图形** (**SVG**) 是用于 2D 可缩放矢量图形的一系列规范。它们基于 XML，可以是静态的或动态的（动画或交互式）。本教程向您展示了如何在应用程序中使用
    SVG 图像，并在单击时应用高斯滤镜。'
- en: Getting ready
  id: totrans-181
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'Copy the full code of this recipe from the `code/11/svg` folder. The SVG image
    is available in the `code/resources/images` folder. You can launch this code using
    the URL: `http://localhost:8080/11/svg/main.html`.'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 从 `code/11/svg` 文件夹中复制此示例的完整代码。SVG 图像位于 `code/resources/images` 文件夹中。您可以使用以下
    URL 启动此代码：`http://localhost:8080/11/svg/main.html`。
- en: How to do it...
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The steps to be followed are:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 需要遵循的步骤是：
- en: 'Create `main.html` with a SVG element in its page content. Draw a SVG rectangle
    and display the SVG image within the rectangle:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在页面内容中创建 `main.html`，其中包含一个 SVG 元素。绘制一个 SVG 矩形，并在矩形内显示 SVG 图像：
- en: '[PRE18]'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Apply the Guassian filter to the SVG image when the image is clicked:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当点击图像时，将 Guassian 滤波器应用于 SVG 图像：
- en: '[PRE19]'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: How it works...
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'Create `main.html`, and add a `<svg>` element to its page content. Specify
    the SVG namespace and version, as shown in the code. Create a rectangle using
    the `<rect>` element, and specify its attributes, such as the width, height, and
    x and y positions, and also set its `stroke` style. Next, add an `<image>` element
    with `id=''svgimg''` pointing to the SVG image, and specify the image''s location,
    position, and size to be used. When you load the page, the following screenshot
    will be shown:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 `main.html`，并在其页面内容中添加一个 `<svg>` 元素。如代码所示，指定 SVG 命名空间和版本。使用 `<rect>` 元素创建一个矩形，并指定其属性，如宽度、高度、x
    和 y 位置，还设置其 `stroke` 样式。接下来，添加一个 `id='svgimg'` 指向 SVG 图像的 `<image>` 元素，并指定要使用的图像的位置、位置和大小。加载页面时，将显示以下截图：
- en: '![How it works...](img/7225_11_11.jpg)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/7225_11_11.jpg)'
- en: 'Now, define the Gaussian filter by adding a `<filter>` element with `id=''gausfilter''`
    inside a `<defs>` element. Add the `<feGaussianBlur>` element inside `<filter>`,
    and set a standard deviation of `5`. Finally, bind the `click` event on the `#svgimg`
    image to an event handler in the `pageinit` callback function. Here, add the `filter=''gausfilter''`
    attribute to the `<image>` tag using the jQuery `attr()` call. Now, when you click
    on the SVG image, the Gaussian blur gets applied, as shown in the following screenshot:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，通过在 `<defs>` 元素内部添加 `id='gausfilter'` 的 `<filter>` 元素来定义高斯滤波器。在 `<filter>`
    内部添加 `<feGaussianBlur>` 元素，并设置标准差为 `5`。最后，在 `pageinit` 回调函数中将 `click` 事件绑定到 `#svgimg`
    图像上的事件处理程序。在这里，使用 jQuery 的 `attr()` 调用向 `<image>` 标签添加 `filter='gausfilter'` 属性。现在，当你点击
    SVG 图像时，高斯模糊将被应用，如下截图所示：
- en: '![How it works...](img/7225_11_12.jpg)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/7225_11_12.jpg)'
- en: There's more...
  id: totrans-194
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: SVG supports vector graphics, raster graphics, and text elements. It allows
    you to transform, clip paths, apply alpha masks, and filter effects on the SVG
    images. The SVG image used in this recipe was designed and contributed to the
    *Open Clipart* website at [http://openclipart.org](http://openclipart.org), by
    ChrisDesign ([http://chrisdesign.wordpress.com](http://chrisdesign.wordpress.com)).
    The Open Clipart website also has thousands of free SVG images available in the
    public domain.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: SVG 支持矢量图形、光栅图形和文本元素。它允许您在 SVG 图像上进行变换、裁剪路径、应用 alpha 蒙版和滤镜效果。本示例中使用的 SVG 图像是由
    ChrisDesign ([http://chrisdesign.wordpress.com](http://chrisdesign.wordpress.com))
    设计并贡献给 *Open Clipart* 网站 ([http://openclipart.org](http://openclipart.org)) 的。Open
    Clipart 网站还有成千上万的免费 SVG 图像可供使用，属于公共领域。
- en: SVG Tiny specification
  id: totrans-196
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SVG Tiny 规范
- en: The SVG specification has a mobile version, and it is called the **SVG Tiny**
    (**SVGT**) specification. Currently, SVGT v1.2 is the W3C recommendation. It has
    good support on most of the mobile devices and platforms, and support for it continues
    to improve by the day.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '**SVG Tiny**（**SVGT**）规范有一个移动版，目前 SVGT v1.2 是 W3C 的推荐标准。它在大多数移动设备和平台上得到良好支持，而且支持程度每天都在不断提高。'
- en: See also
  id: totrans-198
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *2D drawing with Canvas* recipe
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用 Canvas 进行 2D 绘图* 示例'
- en: Tracking your location with the Geolocation API
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Geolocation API 跟踪您的位置
- en: The **Geolocation API** is a separate specification and is part of the HTML5
    stack. You can use JavaScript and locate the client device location using various
    techniques, such as IP address, Wi-Fi, GSM/CDMA cell IDs, or device Global Positioning
    System (GPS). This recipe shows you how to find the current location using the
    Geolocation API in your app.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '**地理位置 API** 是一个独立的规范，是 HTML5 技术栈的一部分。您可以使用 JavaScript 并使用各种技术（如 IP 地址、Wi-Fi、GSM/CDMA
    小区 ID 或设备全球定位系统（GPS））定位客户端设备的位置。本示例向您展示了如何在应用程序中使用 Geolocation API 查找当前位置。'
- en: Getting ready
  id: totrans-202
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Copy the full code of this recipe from the `code/11/geolocation` folder. You
    can launch this code using the URL: `http://localhost:8080/11/geolocation/main.html`.'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 从 `code/11/geolocation` 文件夹中复制此示例的完整代码。您可以使用以下 URL 启动此代码：`http://localhost:8080/11/geolocation/main.html`。
- en: How to do it...
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The steps to be followed are:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 要遵循的步骤是：
- en: Create `main.html` with an empty `div` tag to display the geolocation information.
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个空的 `div` 标签 `main.html` 来显示地理位置信息。
- en: '[PRE20]'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Invoke the `getCurrentPosition()` method to obtain the current location using
    a `show_pos()` callback function.
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用 `getCurrentPosition()` 方法使用 `show_pos()` 回调函数获取当前位置。
- en: '[PRE21]'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Finally, display the current location in the `show_pos()` callback function:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，在 `show_pos()` 回调函数中显示当前位置：
- en: '[PRE22]'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: How it works...
  id: totrans-212
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Create `main.html`, and add an empty `div` tag with `id='geopos'` to the `#main`
    page to display the location information. Use the `pageinit` event handler to
    first check if the `navigator.geolocation` object is available. If available,
    invoke the `getCurrentPosition()` method with a callback function, `show_pos()`,
    to get the location information. The `show_pos()` callback function can access
    the position (`pos`) object, which has the various properties of the current location.
    Access `pos.coords` to obtain information, such as the latitude, longitude, altitude,
    and accuracy. The `pos` object also has an associated timestamp for the current
    location reading. Now, display the location details in the `#geopos` attribute
    of `div`.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 `main.html`，并向 `#main` 页面添加一个空的 `div` 标签，其 `id='geopos'` 用于显示位置信息。使用 `pageinit`
    事件处理程序首先检查是否可用 `navigator.geolocation` 对象。如果可用，调用 `getCurrentPosition()` 方法并使用回调函数
    `show_pos()` 获取位置信息。`show_pos()` 回调函数可以访问位置 (`pos`) 对象，该对象具有当前位置的各种属性。访问 `pos.coords`
    以获取诸如纬度、经度、高度和精度等信息。`pos` 对象还具有与当前位置读数相关联的时间戳。现在，在 `#geopos` 的 `div` 属性中显示位置详细信息。
- en: 'When you launch the app, the browser first asks your permission to access the
    location information. Once you agree, the following location details are shown
    on the screen:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 当您启动应用时，浏览器首先会询问您是否同意访问位置信息。一旦您同意，以下位置详情将显示在屏幕上：
- en: Note
  id: totrans-215
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The Geolocation API specification mandates that the user location information
    is confidential, and that the browser should warn and obtain the user's permission
    before accessing or sharing this information.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: Geolocation API 规范要求用户位置信息是机密的，并且浏览器在访问或分享此信息之前应发出警告并获得用户的许可。
- en: '![How it works...](img/7225_11_13.jpg)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理...](img/7225_11_13.jpg)'
- en: There's more...
  id: totrans-218
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: In this recipe, the `getCurrentPosition()` call pings for the user location
    only once, and displays the information using the `show_pos()`callback function.
    But, if you wish to track a moving device, you can access continuous location
    readings using the `watchCurrentPosition()` call. The syntax remains the same,
    but this method continuously and periodically keeps pinging for the device location
    and invokes the `show_pos()` callback every time. This method also populates the
    `pos.coords.speed` and `pos.coords.heading` attributes to give feedback on the
    speed and direction of the moving device. The user is prompted for permission
    to share the location details only on the first call.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，`getCurrentPosition()` 调用仅一次获取用户位置，并使用 `show_pos()` 回调函数显示信息。但是，如果您希望跟踪移动设备，可以使用
    `watchCurrentPosition()` 调用获取连续的位置读数。语法保持不变，但此方法持续并定期获取设备位置并在每次调用时调用 `show_pos()`
    回调。此方法还填充 `pos.coords.speed` 和 `pos.coords.heading` 属性，以提供有关移动设备速度和方向的反馈。用户仅在第一次调用时被提示共享位置详细信息的权限。
- en: '[PRE23]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Google Gears
  id: totrans-221
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Google Gears
- en: Prior to the Geolocation API specification, the Google Gears JavaScript library
    was very popular for fetching location information. Google Gears subsequently
    contributed quite a bit to the development of the Geolocation API and is now deprecated.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Geolocation API 规范之前，Google Gears JavaScript 库非常流行，用于获取位置信息。随后，Google Gears
    对 Geolocation API 的发展做出了相当大的贡献，并且现已被弃用。
- en: Geolocation on desktop browsers
  id: totrans-223
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 桌面浏览器上的地理位置
- en: The location information obtained on desktop browsers is based on the IP and
    MAC address details obtained from the ISP servers. So, this information has a
    wide accuracy margin, sometimes in the range of a few kilometers, whereas mobile
    devices rely on the network towers and on GPS devices (if enabled) for positioning.
    Thus mobile devices can very accurately pinpoint the position, altitude, speed,
    and heading information within a range of a few meters.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 在桌面浏览器上获取的位置信息基于从 ISP 服务器获取的 IP 和 MAC 地址详细信息。因此，此信息具有较大的精度范围，有时在几公里范围内，而移动设备依赖于网络基站和
    GPS 设备（如果已启用）来进行定位。因此，移动设备可以在几米范围内非常准确地确定位置、高度、速度和方向信息。
- en: Playing music with the <audio> element
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 <audio> 元素播放音乐
- en: HTML5 introduced a new `<audio>` element that can be used to play audio files
    directly in the browser. Prior to this, browsers had to use plugins, such as Flash
    Player, Real Player, or Quick Time to play audio files. The `<audio>` element
    provides a lightweight alternative, and this recipe shows you how to use it in
    your app to play audio files.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5引入了一个新的`<audio>`元素，可以直接在浏览器中播放音频文件。在此之前，浏览器必须使用插件，如Flash Player、Real Player或Quick
    Time来播放音频文件。`<audio>`元素提供了一个轻量级的替代方案，本示例向您展示如何在您的应用程序中使用它来播放音频文件。
- en: Getting ready
  id: totrans-227
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Copy the full code of this recipe from the `code/11/audio` folder. The audio
    snips are available in the `code/resources/audio` folder. You can launch this
    code using the URL: `http://localhost:8080/11/audio/main.html`.'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 从`code/11/audio`文件夹复制此示例的完整代码。音频片段可在`code/resources/audio`文件夹中找到。您可以使用以下网址启动此代码：`http://localhost:8080/11/audio/main.html`。
- en: How to do it...
  id: totrans-229
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何实现...
- en: 'The steps to be followed are:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 需要遵循的步骤是：
- en: 'Create `main.html` with the `<audio>` element in its page content:'
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在页面内容中创建带有`<audio>`元素的`main.html`：
- en: '[PRE24]'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: How it works...
  id: totrans-233
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Add the `<audio>` element to the `#main` page with the `controls`, `autoplay`,
    and `preload` attributes. The `controls` attribute displays the play button, volume
    slider, and other controls. The `preload='auto'` option indicates that the browser
    can start streaming the audio file in the background as soon as the page is ready.
    The `autoplay` attribute tells the browser that it can directly start playing
    the audio file when downloaded and ready.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 在`#main`页面上添加`<audio>`元素，并使用`controls`、`autoplay`和`preload`属性。`controls`属性显示播放按钮、音量滑块和其他控件。`preload='auto'`选项表示浏览器可以在页面准备好后立即开始流式传输音频文件。`autoplay`属性告诉浏览器可以在下载和准备好时直接开始播放音频文件。
- en: Note
  id: totrans-235
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The `<audio>` element also supports a `loop` attribute, which keeps the audio
    playing in a continuous loop.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '`<audio>`元素还支持`loop`属性，使音频以连续循环的方式播放。'
- en: 'Different browsers support different audio formats, and the first supported
    audio format is picked and played. So, add URL links to the audio file in the
    `.mp3`, `.oga`, and `.webma` formats using the `<source>` element, as shown in
    the code. One of these three audio formats will be recognized by most browsers.
    Finally, add an error message, `Browser does not support audio tag`, at the end.
    This message is displayed if the browser does not support the `audio` element.
    Now, when you load the page, the screenshot similar to the following is seen,
    and the audio file starts to play:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的浏览器支持不同的音频格式，并选择并播放第一个受支持的音频格式。因此，使用`<source>`元素添加`.mp3`、`.oga`和`.webma`格式的音频文件的URL链接，如代码所示。这三种音频格式中的一种将被大多数浏览器识别。最后，在末尾添加错误消息`浏览器不支持音频标签`。如果浏览器不支持`audio`元素，则会显示此消息。现在，当您加载页面时，将看到类似以下的截图，并且音频文件开始播放：
- en: '![How it works...](img/7225_11_14.jpg)'
  id: totrans-238
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理...](img/7225_11_14.jpg)'
- en: There's more...
  id: totrans-239
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Older browsers, such as IE8, do not support the `<audio>` element. You will
    have to use a flash fallback mechanism in this case.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 较旧的浏览器，如IE8，不支持`<audio>`元素。在这种情况下，您将需要使用Flash回退机制。
- en: For a note on audio formats and codecs, using the flash fallback and HTML5 media
    players, refer to the next recipe on the `<video>` element.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 有关音频格式和编解码器、使用Flash回退和HTML5媒体播放器的注意事项，请参阅下一个有关`<video>`元素的示例。
- en: See also
  id: totrans-242
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Viewing videos with the <video> element* recipe
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`<audio>`元素查看视频的*Viewing videos with the <video> element*示例
- en: Viewing videos with the <video> element
  id: totrans-244
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`<video>`元素查看视频
- en: HTML5 introduced a new `<video>` element to play video files directly in the
    browser. Prior to this, browsers had to use plugins, such as Flash Player, Real
    Player, or Quick Time to play video files. The `<video>` element is a lightweight
    alternative, and this recipe shows you how to use it in your app to view videos.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5引入了一个新的`<video>`元素，可以直接在浏览器中播放视频文件。在此之前，浏览器必须使用插件，如Flash Player、Real Player或Quick
    Time来播放视频文件。`<video>`元素是一个轻量级的替代方案，本示例向您展示如何在您的应用程序中使用它来查看视频。
- en: Getting ready
  id: totrans-246
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Copy the full code of this recipe from the `code/11/video` folder. The video
    snips are available in the `code/resources/video` folder. You can launch this
    code using the URL: `http://localhost:8080/11/video/main.html`.'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 从`code/11/video`文件夹复制此示例的完整代码。视频片段可在`code/resources/video`文件夹中找到。您可以使用以下网址启动此代码：`http://localhost:8080/11/video/main.html`。
- en: How to do it...
  id: totrans-248
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何实现...
- en: 'The steps to be followed are:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 需要遵循的步骤是：
- en: 'Create `main.html` with the `<video>` element in its page content:'
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在页面内容中创建带有`<video>`元素的`main.html`：
- en: '[PRE25]'
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: How it works...
  id: totrans-252
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Add the `<video>` element to the `#main` page with the `controls`, `autoplay`,
    and `preload` attributes. The `controls` attribute displays the play button, volume
    slider, full screen button, and other controls. The `preload='auto'` option indicates
    that the browser can start streaming the video file in the background as soon
    as the page is ready. The `autoplay` attribute tells the browser that it can directly
    play the video when ready. Also, add the `width` and `height` attributes to size
    the video in pixels.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 在`#main`页面上添加`<video>`元素，带有`controls`，`autoplay`和`preload`属性。`controls`属性显示播放按钮、音量滑块、全屏按钮和其他控件。`preload='auto'`选项表示浏览器可以在页面准备就绪后立即开始流式传输视频文件。`autoplay`属性告诉浏览器可以在准备就绪时直接播放视频。此外，添加`width`和`height`属性以像素为单位调整视频大小。
- en: 'Different browsers support different video formats, and the first supported
    video format is picked and played. So, add URL links to the video files in the
    `.mp4`, `.ogv`, and .`webmv` formats using the `<source>` element, as shown in
    the code. One of these three video formats will be recognized by most browsers.
    Finally, add an error message, `Browser does not support video tag`, at the end.
    This message is displayed if the browser does not support the video element. Now,
    when you load the page, a screenshot similar to the following is shown, and the
    video file starts to play:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的浏览器支持不同的视频格式，并选择并播放第一个受支持的视频格式。因此，使用`<source>`元素向`.mp4`，`.ogv`和`.webmv`格式的视频文件添加URL链接，如示例代码所示。这三种视频格式中的一种将被大多数浏览器识别。最后，在末尾添加错误消息`浏览器不支持视频标签`。如果浏览器不支持视频元素，则显示此消息。现在，当您加载页面时，将显示类似以下内容的屏幕截图，并且视频文件开始播放：
- en: '![How it works...](img/7225_11_15.jpg)'
  id: totrans-255
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理...](img/7225_11_15.jpg)'
- en: There's more...
  id: totrans-256
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The `<video>` tag also supports a few additional attributes, such as `loop`
    (to play the video in a continuous loop), `muted` (to turn off the audio), and
    `poster` (the URL of the image to be displayed at the beginning as a poster, before
    the video begins to play).
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '`<video>`标签还支持一些额外的属性，如`loop`（以连续循环播放视频）、`muted`（关闭音频）和`poster`（在视频开始播放之前作为海报显示的图像的
    URL）。'
- en: Note
  id: totrans-258
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注
- en: Set `preload` to `auto` to automatically download the media file, as some browsers
    do not support `preload` due to security reasons.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 将`preload`设置为`auto`以自动下载媒体文件，因为一些浏览器出于安全原因不支持`preload`。
- en: The flash fallback
  id: totrans-260
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 闪回
- en: Older browsers, such as IE8, do not support the `<video>` and `<audio>` elements.
    You can still play HTML5 audio and video in unsupported browsers by using a flash
    player as the fallback mechanism. You have to embed the player using the `<object>`
    tag at the end of the `<video>` or `<audio>` element. The browser in this case
    does not recognize the new HTML5 tags, and falls through to play the audio/video
    using the flash fallback.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 较旧的浏览器，如IE8，不支持`<video>`和`<audio>`元素。您仍然可以通过使用 Flash 播放器作为后备机制在不受支持的浏览器中播放 HTML5
    音频和视频。您必须在`<video>`或`<audio>`元素的末尾使用`<object>`标签嵌入播放器。在这种情况下，浏览器不识别新的 HTML5 标签，并继续使用
    Flash 后备播放音频/视频。
- en: The Codecs
  id: totrans-262
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编解码器
- en: There are multiple audio/video formats that are popular on the web today. The
    support is varied in different browsers, which support only specific audio/video
    codecs. You have to ensure that your app works on maximum platforms, by including
    different formats of the same audio/video files, if necessary, as shown in this
    recipe. Detailed information on this matter, including tables showing the support
    matrix, is available at [http://diveintohtml5.info/video.html](http://diveintohtml5.info/video.html).
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 当今网络上有多种流行的音频/视频格式。不同浏览器的支持程度各异，只支持特定的音频/视频编解码器。您必须通过包括同一音频/视频文件的不同格式（必要时）来确保您的应用程序在最大平台上正常工作，如本文所示。有关此事的详细信息，包括显示支持矩阵的表格，请参见[http://diveintohtml5.info/video.html](http://diveintohtml5.info/video.html)。
- en: The Audio and Video API
  id: totrans-264
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 音频和视频 API
- en: '**Audio API** and **Video API** are now available for you to directly control
    the `<audio>` and `<video>` elements using JavaScript. They allow you to trigger
    actions (play, pause, and so on) and listen to events (playing, ended, and so
    on).'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '**音频 API** 和 **视频 API** 现在已经可以直接使用 JavaScript 控制 `<audio>` 和 `<video>` 元素。它们允许您触发操作（播放、暂停等）并监听事件（播放、结束等）。'
- en: HTML5 media players
  id: totrans-266
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: HTML5 媒体播放器
- en: The HTML5 tags by themselves give you very plain looking UI and controls. You
    can enhance the look and feel and add additional features using the Audio and
    Video API. Instead, with minimal effort, you can also use any of the popular libraries
    that are available, such as **jPlayer** ([http://jplayer.org](http://jplayer.org)),
    **MediaElement.js** ([mediaelementjs.com](http://mediaelementjs.com)), **JW Player**
    ([http://longtailvideo.com](http://longtailvideo.com)), **Video.js** ([http://videojs.com](http://videojs.com)),
    and **Audio.js** ([http://kolber.github.com/audiojs/](http://kolber.github.com/audiojs/)).
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5 标签本身提供了非常简单的 UI 和控件。你可以使用音频和视频 API 来增强外观和功能。另外，你也可以很轻松地使用任何流行的库，比如**jPlayer**（[http://jplayer.org](http://jplayer.org)）、**MediaElement.js**（[mediaelementjs.com](http://mediaelementjs.com)）、**JW
    Player**（[http://longtailvideo.com](http://longtailvideo.com)）、**Video.js**（[http://videojs.com](http://videojs.com)）以及**Audio.js**（[http://kolber.github.com/audiojs/](http://kolber.github.com/audiojs/)）。
- en: See also
  id: totrans-268
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Playing music with the <audio> element* recipe
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用 <audio> 元素播放音乐* 示例'
