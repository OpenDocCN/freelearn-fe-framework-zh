- en: Chapter 3. Building Responsive Navigation Menu
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三章。构建响应式导航菜单
- en: The `header` section is an important section when a website is being built.
    There are some common elements in this area such as a logo, a login, navigation
    options, a sign-up option, and a search field. But planning this area is not too
    easy because if we put all the elements together, we will give our users a messy
    navigation. Another option is to reserve a lot of space for our header, but it
    will probably hide more content above the fold on smartphones. The expected result
    is to occupy a small amount of space for your header and to handle that space
    efficiently in order to display those elements.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 当网站正在建设时，`header` 部分是一个重要的部分。在这个区域有一些常见的元素，如徽标、登录、导航选项、注册选项和搜索字段。但规划这个区域并不太容易，因为如果我们把所有元素放在一起，我们会给用户一个杂乱的导航。另一个选择是为我们的头部保留大量的空间，但这可能会在智能手机上遮挡更多的屏幕上方内容。预期的结果是占用少量的空间来处理您的标题，并有效地处理那个空间以显示这些元素。
- en: In this chapter, we will analyze some types of navigation menu, when it is the
    correct situation to use each one in a clear and intuitive way, and to avoid frustrating
    users. That's why crafting our navigation menu in a way that will allow users
    to easily and clearly see the main and sub-items in it is important to us.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将分析一些类型的导航菜单，在何种情况下以一种清晰直观的方式使用每种类型，并避免使用户感到沮丧。这就是为什么我们设计我们的导航菜单的方式，让用户能够轻松清晰地看到其中的主要和子项对我们很重要。
- en: 'In this chapter we will:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将：
- en: Design a menu improving its usability
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计一个改善可用性的菜单
- en: See most-used responsive navigation patterns and how to code each type
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看最常用的响应式导航模式以及如何编写每种类型的代码
- en: Apply our recently gained knowledge by doing the exercise
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过做练习来应用我们最近获得的知识
- en: Designing a menu by improving its usability
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过改善其可用性来设计一个菜单
- en: On responsive websites, especially for those which are using the mobile-first
    concept, the content is the main reason the user is visiting our site, so we must
    provide a reasonable space to show the content before the fold.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在响应式网站上，特别是对于那些使用移动优先概念的网站，内容是用户访问我们网站的主要原因，所以我们必须提供一个合理的空间在屏幕上展示内容之前。
- en: In order to provide this space, we need to handle the way we display the menu
    better so that we will be able to offer another view of it, depending on the device.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提供这个空间，我们需要更好地处理菜单的显示方式，以便根据设备提供另一种视图。
- en: 'Anyway, the goal is the same: to make it easier for users to find what they
    are looking for without drastically affecting the useful area. When the menu is
    organized, we give the users the freedom to choose where they want to navigate
    to through our site.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，目标都是相同的：使用户更容易找到他们正在寻找的内容，而不会对有用的区域产生重大影响。当菜单被组织好时，我们给了用户自由选择通过我们的网站导航到哪里的权利。
- en: 'The truth is that there is no answer for the duel between these two interfaces:
    the top and left navigation menus. Sometimes the navigation works well in one
    context; however, it may not work as well in another. To figure out which navigation
    is best for our site, it is important to understand the different contexts where
    the top and left navigation menus work best. Let''s analyze this battle in five
    rounds:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，关于这两种界面之间的决斗（顶部和左侧导航菜单）没有一个答案。有时导航在一个上下文中运作良好；然而，在另一个上下文中可能不那么有效。要找出哪种导航最适合我们的站点，了解顶部和左侧导航菜单在哪些不同的上下文中效果最好是很重要的。让我们在五轮比赛中分析这场战斗：
- en: '**Scanning**: In this, the left navigation menu wins because it occupies less
    space to show all items and facilitates a vertical scanning (more natural for
    users).'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**扫描**：在这方面，左侧导航菜单获胜，因为它占用更少的空间来显示所有项目，并且促进了垂直扫描（对用户更自然）。'
- en: '**Page space**: In this, the top navigation wins because it uses a minimal
    vertical space, reserving the content area just for content.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**页面空间**：在这方面，顶部导航获胜，因为它使用最小的垂直空间，将内容区域保留给内容。'
- en: '**Item priority**: For this round, there is a draw between the top and left
    navigation menus. The top navigation does not have the same weight among the items
    as the leftmost item will be read before others following the reading sequence.
    But, it depends on the type of content.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**项目优先级**：在这一轮中，顶部和左侧导航菜单之间打成平手。顶部导航的项目没有相同的权重，因为最左边的项目将在其他项目之前被阅读，但这取决于内容类型。'
- en: '**Visibility**: For this round, there is a draw between the top and left navigation
    menus. The top navigation menu is easier to see because it is usually near the
    logo. In the left navigation, some items may be hidden below the fold.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可见性**：在这一轮中，顶部和左侧导航菜单之间存在一种平衡。顶部导航菜单更容易看到，因为它通常靠近标志。在左侧导航中，一些项目可能隐藏在折叠下面。'
- en: '**Topics and interests**: For this round, there is a draw between the top and
    left navigation menus. If our site has a variety of content for a widespread audience
    (for example, e-commerce sites), the left navigation menu would be better for
    these users because they have a range of interests and are the ones who will choose
    which items they want to see. However, for specific topics, the top navigation
    menu fits better because finding the high-priority items quickly is more important.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主题和兴趣**：在这一轮中，顶部和左侧导航菜单之间存在一种平衡。如果我们的网站针对广泛的受众提供各种内容（例如电子商务网站），左侧导航菜单对这些用户更好，因为他们拥有各种兴趣，并且是选择要查看的项目的人。然而，对于特定主题，顶部导航菜单更合适，因为快速找到高优先级项目更为重要。'
- en: Most-used responsive navigation patterns
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最常用的响应式导航模式
- en: Planning mobile navigation is not an easy task because we need to provide unobtrusive
    and quick access to specific content in a responsive way and depending on the
    objective of the website. After a long study, *Brad Frost*, in his research of
    popular menu techniques, summarized some trends and established patterns for menu
    type concepts.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 规划移动导航并不是一件容易的事情，因为我们需要以响应式的方式提供不显眼且快速访问特定内容，这取决于网站的目标。经过长时间的研究，*布拉德·弗罗斯特* 在他对流行菜单技术的研究中总结了一些趋势，并建立了菜单类型概念的模式。
- en: 'According to his article ([http://bradfrostweb.com/blog/web/responsive-nav-patterns/](http://bradfrostweb.com/blog/web/responsive-nav-patterns/)),
    the navigation patterns are:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 根据他的文章（[http://bradfrostweb.com/blog/web/responsive-nav-patterns/](http://bradfrostweb.com/blog/web/responsive-nav-patterns/)），导航模式有：
- en: Top nav
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 顶部导航
- en: Footer anchor
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 底部锚点
- en: Toggle menu
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 切换菜单
- en: Select menu
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择菜单
- en: Footer-only
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅底部
- en: Multi toggle
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多重切换
- en: Toggle and slide
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 切换和滑动
- en: Off-canvas
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 侧边栏
- en: Let's inspect each one, see how they look, and understand which approach fits
    better with your project.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们检查每个，看看它们的样子，并了解哪种方法更适合你的项目。
- en: Top nav
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 顶部导航
- en: 'The Top nav pattern is the most-viewed pattern on the Internet because it requires
    a little extra work for its adaptation. To implement this solution, we only need
    to keep the menu at the top, as we can see in the following screenshot:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 顶部导航模式是因为它需要一点额外的工作而成为互联网上最受欢迎的模式。要实现这个解决方案，我们只需要保持菜单在顶部，正如我们在下面的截图中所看到的那样：
- en: '![Top nav](img/3602OS_03_01.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![顶部导航](img/3602OS_03_01.jpg)'
- en: How to do it...
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'In this situation, as shown in the previous screenshot, it is showing the menu
    above the logo on the smartphone. So, let''s code this HTML script to understand
    the changes:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，如前面的截图所示，在智能手机上显示菜单位于标志的上方。因此，让我们编写这个 HTML 脚本来理解这些变化：
- en: '[PRE0]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If you prefer to rearrange these elements (display logo on top and then the
    menu), you need to invert the order of elements, moving the `<h1>` tag before
    the `<nav>` tag in the code.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢重新排列这些元素（将标志显示在顶部然后是菜单），你需要反转元素的顺序，在代码中将 `<h1>` 标签移到 `<nav>` 标签之前。
- en: 'Unfortunately, the `<nav>` tag is not supported for Internet Explorer 8 and
    lower. However, this tag has a good semantic meaning and I recommend its usage.
    We will see in [Chapter 10](ch10.html "Chapter 10. Ensuring Browser Support"),
    *Ensuring Browser Support*, how to handle it using `Html5shiv with Modernizr`.
    By adopting the mobile-first concept and using this first block of code in CSS,
    we may customize the menu to be displayed by filling the horizontal area with
    tiny horizontal margins and aligning the menu in the center:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，`<nav>` 标签不受 Internet Explorer 8 及更低版本的支持。然而，这个标签有很好的语义含义，我推荐使用它。我们将在[第
    10 章](ch10.html "Chapter 10. Ensuring Browser Support")中看到，*Ensuring Browser Support*，如何使用
    `Html5shiv with Modernizr` 处理它。通过采用移动优先的概念，并在 CSS 中使用这个第一个代码块，我们可以自定义菜单的显示方式，通过填充水平区域来填充水平边距，并将菜单对齐到中心：
- en: '[PRE1]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'For screens more than 768 px, the menu width is reduced to 70 percent and floated
    to the right. Also, the logo is now floated to the left width, the width of 30
    percent, as shown in the following code:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 对于大于 768 像素的屏幕，菜单宽度减小到 70%，并向右浮动。此外，标志现在向左浮动，宽度为 30%，如下面的代码所示：
- en: Tip
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: These percentages are just a part of the example.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这些百分比只是示例的一部分。
- en: '[PRE2]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Tip
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: It is very simple to implement, but take care when you have more than three
    lines of menu items because it will consume much of the important area.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 实施起来非常简单，但是当菜单项超过三行时要小心，因为它将耗费大量重要区域。
- en: Footer anchor
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 页脚锚点
- en: Footer anchor is a smart solution for which the main objective is to keep more
    useful space to the content, without penalizing the mobile users seeing our site
    in a small area. To do this, it is necessary to reallocate the main menu to the
    footer and just keep an anchor link in the header that will focus on the menu
    whenever the user clicks on it.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 页脚锚点是一个聪明的解决方案，其主要目标是在不影响移动用户在小区域中看到我们的网站的情况下，为内容保留更多有用的空间。为此，需要将主菜单重新分配到页脚，并只在页眉中保留一个锚点链接，用户点击它时将聚焦于菜单。
- en: 'The following screenshot represents this navigation pattern being applied only
    to smartphones where the free space is short:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图表示了这种导航模式仅应用于智能手机，空间较小：
- en: '![Footer anchor](img/3602OS_03_02.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![页脚锚点](img/3602OS_03_02.jpg)'
- en: How to do it
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何做到这一点
- en: 'Let''s start using the same HTML code from the first navigation pattern. But
    now we will move the menu to the bottom of the DOM, just before the `</body>`
    tag and insert the following link in the beginning of the code after the `<body>`
    tag, because when the user clicks on it, the website will focus on the navigation
    menu:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从第一个导航模式使用相同的HTML代码开始。但是现在我们将菜单移动到DOM的底部，就在`</body>`标签之前插入下面的链接，因为当用户点击它时，网站将聚焦于导航菜单：
- en: '[PRE3]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The decimal code `☰` is a symbol to represent menus because it shows a symbol
    with three lines.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 十进制代码`☰`是代表菜单的符号，因为它显示了一个有三条线的符号。
- en: 'In the CSS code for smartphones, we need to:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在智能手机的CSS代码中，我们需要：
- en: Create a style for the menu items from menu. Some developers prefer to list
    these items showing one per line (facilitating touch), but it is up to you.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为菜单项创建一个样式。一些开发人员喜欢逐行列出这些项目（便于触摸），但这取决于你。
- en: Create a style for the button from the header (that will drive the user to the
    menu).
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为页眉按钮创建一个样式（将用户转到菜单）。
- en: 'The CSS code is as follows:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: CSS代码如下所示：
- en: '[PRE4]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: For tablets and desktops (devices with screen widths higher than 768 px) the
    best approach is hiding this header button. Now, we need to show the menu on header
    without changing anything on the HTML (we just have moved it to the footer area).
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 对于平板电脑和桌面（屏幕宽度大于768 px的设备），最好的方法是隐藏此页眉按钮。现在，我们需要在页眉上展示菜单，而不对HTML做任何更改（我们只是将其移到页脚区域）。
- en: 'Let''s implement the following code by setting the menu position on the top
    and hiding the header button:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过设置菜单位置在顶部并隐藏页眉按钮来实现以下代码：
- en: '[PRE5]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The toggle menu
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 切换菜单
- en: The toggle navigation pattern has almost the same behavior when compared to
    the previous pattern. The real difference is shown when the user clicks on the
    link from the header, and instead of driving the user to the anchored menu, the
    menu slides down just after the header, thereby providing the user an impressive
    effect and quick access to the main links. Its implementation is relatively easy,
    as we will soon see.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 切换导航模式与以前的模式比几乎具有相同的行为。真正的区别在于当用户点击页眉上的链接时，而不是将用户引导到锚定菜单，菜单会在页眉之后滑下来，从而为用户提供令人印象深刻的效果和快速访问主链接。它的实现相对容易，我们很快就会看到。
- en: Tip
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: In order to improve the performance of animation, try to use the `max-height`
    property
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提高动画性能，尝试使用`max-height`属性
- en: The Responsive Nav plugin
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 响应式导航插件
- en: 'The Responsive Nav plugin, [http://responsive-nav.com/](http://responsive-nav.com/),
    is a lightweight solution to create the toggle navigation for small screens. We
    are fond of three main features, which are:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 响应式导航插件，[http://responsive-nav.com/](http://responsive-nav.com/)，是为小屏幕创建切换导航的轻量级解决方案。我们喜欢三个主要特点，它们是：
- en: Using the touch events (we will understand it better later) and CSS3 transitions
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用触摸事件（我们稍后会更好地理解它）和CSS3过渡效果
- en: Building this plugin with accessibility in mind and also working with disabled
    JavaScript. The plugin does not require any external libraries
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建此插件时要考虑到无障碍，并与禁用JavaScript一起使用。该插件不需要任何外部库
- en: Working in all major desktop and mobile browsers, including IE 6 and higher
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 适用于所有主要桌面和移动浏览器，包括IE 6及更高版本
- en: How to do it
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何做到这一点
- en: 'After downloading the files for of this solution, let''s insert this code in
    the `<head>` tag of our HTML:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 下载此解决方案的文件后，让我们将以下代码插入到我们的HTML的`<head>`标签中：
- en: '[PRE6]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'We will also use the same HTML code of the first example, but right before
    the `</body>` closing tag of DOM, we need to insert the function that executes
    the script:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将使用第一个示例的相同 HTML 代码，但是在 DOM 的`</body>`闭合标签之前，我们需要插入执行脚本的函数：
- en: '[PRE7]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'For now, let''s insert the same menu style from the footer anchor pattern:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们从页脚锚点模式中插入相同的菜单样式：
- en: '[PRE8]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'And that is it. We are done. There are some customizable options that will
    power up our feature implementation. Feel free to test other options, but by default
    it is already set to CSS3 animation in 400 ms showing up before the toggle button
    that is created automatically, or you can define yours this way:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样了。我们完成了。有一些可自定义的选项，可以增强我们的功能实现。随意测试其他选项，但默认情况下已设置为 CSS3 动画，显示时间为 400 毫秒，在自动生成的切换按钮之前显示，或者您可以按照以下方式定义您自己的设置：
- en: '[PRE9]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'In the following screenshot, we will see the **Responsive Nav** window in action,
    changing the menu style on smartphones and displaying an unobtrusive way to show
    the menu:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的截图中，我们将看到**响应式导航**窗口正在使用，它在智能手机上更改菜单样式，并以不显眼的方式显示菜单：
- en: '![How to do it](img/3602OS_03_03.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![操作方法](img/3602OS_03_03.jpg)'
- en: Tip
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The customization of toggle button and the orange color from the menu do not
    display by default. This is just a suggestion made by the creator's plugin in
    one of its demos.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 切换按钮的定制和菜单中的橙色默认情况下不显示。这只是插件创建者在其演示中提出的建议之一。
- en: The select menu
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择菜单
- en: One way of drastically reducing the space occupied by the menu is to use this
    pattern, where all the menu items are wrapped into a `<select>` tag. It avoids
    some alignment issues and ensures the cross-browser solution.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 一种显著减少菜单占用空间的方法是使用此模式，其中所有菜单项都包装在`<select>`标签中。它避免了一些对齐问题，并确保了跨浏览器解决方案。
- en: However, there are problems with this approach that affect usability, accessibility,
    and SEO. At first glance, a select menu for the main navigation does not look
    right because it does not blend in with the design. Maybe the user will think
    it is awkward or may get confused with the `select` form element.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，该方法存在影响可用性、可访问性和 SEO 的问题。乍一看，主导航菜单的选择菜单看起来不正确，因为它与设计不协调。也许用户会觉得这很尴尬，或者可能会与`select`表单元素混淆。
- en: The TinyNav.js jQuery plugin
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TinyNav.js jQuery 插件
- en: The TinyNav.js jQuery plugin, [http://tinynav.viljamis.com/](http://tinynav.viljamis.com/),
    is very useful for converting the `<ul>` or `<ol>` navigations to a select dropdown
    for small screens, and when the user selects one option, it navigates to the correct
    page with no extra effort. It may also select the current page and add `selected="selected"`
    for that item automatically.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: TinyNav.js jQuery 插件，[http://tinynav.viljamis.com/](http://tinynav.viljamis.com/)，非常有用，可以将`<ul>`或`<ol>`导航转换为小屏幕的选择下拉菜单，当用户选择一个选项时，它会自动导航到正确的页面，而无需额外努力。它还可能选择当前页面，并自动为该项目添加`selected="selected"`。
- en: How to do it
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 操作方法
- en: 'Let''s start using the same HTML code from the first navigation pattern. After
    downloading the TinyNav plugin, we will include the following code in the `<head>`
    tag:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始使用第一个导航模式的相同 HTML 代码。下载 TinyNav 插件后，我们将在`<head>`标签中包含以下代码：
- en: '[PRE10]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'And include the following code right before the `</body>` closing tag:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 并在`</body>`闭合标签之前包含以下代码：
- en: '[PRE11]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Add the following code in our CSS file which is hiding this navigation pattern
    and setting the common menu style in tablets and desktops. Also, it is exclusively
    showing the solution for devices with width less than 767 px (smartphones):'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的 CSS 文件中添加以下代码，该代码隐藏了此导航模式，并在平板电脑和台式机上设置了常见的菜单样式。此外，它还专门为宽度小于 767 px 的设备显示了解决方案：
- en: '[PRE12]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'TinyNav also provides some options such as inserting a label before the `<select>`
    element, setting the menu option from the current page to `active,` as I mentioned
    before, and defining the starter value from `<select>` if another option was not
    selected before. Here we can see how to use these three options:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: TinyNav 还提供了一些选项，例如在`<select>`元素之前插入标签，将菜单选项设置为“活动”的当前页面，正如我之前提到的，并定义在之前未选择其他选项时`<select>`的起始值。在这里，我们可以看到如何使用这三个选项：
- en: '[PRE13]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'This navigation pattern could be implemented for all devices with no extra
    work. In the example shown in the following screenshot, look at the plugin affecting
    only small devices:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 此导航模式可以在所有设备上实现，无需额外工作。在以下截图中显示的示例中，请注意插件仅影响小型设备：
- en: '![How to do it](img/3602OS_03_04.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![操作方法](img/3602OS_03_04.jpg)'
- en: Footer-only
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 仅页脚
- en: The footer-only navigation is similar to the footer anchor approach, except
    for the `link` anchor in the `header` section.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 仅页脚导航类似于页脚锚点方法，除了`header`部分中的`link`锚点之外。
- en: Take care while using this navigation pattern because the users may not find
    the menu on the footer and they may have to scroll to the end whenever they want
    to access other menu options. This navigation pattern may well adapt for sites
    with small amount of content and those that require less user's effort for scrolling.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用此导航模式时要小心，因为用户可能找不到页脚上的菜单，每当他们想要访问其他菜单选项时，他们可能必须滚动到末尾。这种导航模式可能适用于内容较少且需要较少用户努力滚动的网站。
- en: How to do it
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何操作
- en: Simply move the menu to the bottom of DOM.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 简单地将菜单移到DOM的底部。
- en: Tip
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Remember, if we change the code like this, it will directly affect the visual
    positioning of the menu for all devices. Make sure that your website is not too
    long before applying this technique because most users expect it at the top of
    the website.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，如果我们像这样更改代码，它将直接影响所有设备上菜单的视觉定位。在应用此技术之前，请确保您的网站不会太长，因为大多数用户希望它位于网站顶部。
- en: Multi toggle
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多重切换
- en: The multi toggle pattern is almost the same as the toggle menu because it also
    slides down just after the header, but it was crafted for complex menus, where
    there is at least one nested submenu. It works when the user clicks on the header
    button and a menu pops over the content. If the user clicks on the parent category,
    the children submenu will slide down displaying its subitems.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 多重切换模式几乎与切换菜单相同，因为它在头部之后也会滑动下来，但它是为复杂菜单而设计的，其中至少有一个嵌套子菜单。当用户点击头部按钮时，菜单就会弹出到内容上。如果用户点击父类别，则子菜单将滑动下来显示其子项。
- en: How to do it
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何操作
- en: This is the HTML code that will be used in this example. We will use the `<input
    type="checkbox">` element as a status controller of menu (opened or closed) and
    it will not be visible to users. I will explain in more detail about this technique
    later.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这是本示例中将使用的HTML代码。我们将使用`<input type="checkbox">`元素作为菜单的状态控制器（打开或关闭），并且用户不会看到它。稍后我将更详细地解释这个技术。
- en: '[PRE14]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The next step is customizing the menu style. Since it requires a lot of code,
    I highly recommend downloading the entire CSS source code provided by this book
    as suggestion for this pattern.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是自定义菜单样式。由于它需要大量代码，我强烈建议下载本书提供的整个CSS源代码作为此模式的建议。
- en: 'Let me explain two piece of code that may confuse you. In the beginning of
    CSS file there are properties with values " `\0025Bc`" (down arrow) and " `\0025C0`"
    (before arrow) that may render as arrow character instead of this code. Also,
    the `#toggle` checkbox should then be kept in the page (we cannot just set it
    as display:none), but not in the visible area:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 让我解释一下可能会使您困惑的两段代码。在CSS文件的开头有带有值“ `\0025Bc`”（向下箭头）和“ `\0025C0`”（之前的箭头）的属性，它可能会呈现为箭头字符而不是此代码。此外，`#toggle`复选框应保留在页面中（我们不能只将其设置为display:none），但不在可见区域内：
- en: '[PRE15]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Just a little interruption in the CSS code, as I want to explain a little bit
    more about the functionality of the `#toggle` checkbox for submenus.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在CSS代码中稍微中断一下，因为我想更详细地解释一下子菜单的`#toggle`复选框的功能。
- en: 'When the label `link-to-menu` is clicked, the `<a>` tag sets its height to
    `3em`. Also, we need to prepare the style to increase the height of links because
    jQuery will input the `open` class in the `<li>` element with `submenu` inside:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 当单击`link-to-menu`标签时，`<a>`标签将其高度设置为`3em`。此外，我们需要准备样式以增加链接的高度，因为jQuery将在具有`submenu`的`<li>`元素中输入`open`类：
- en: '[PRE16]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Also, do not forget to include the `jquery` library in the `<head>` tag:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 还要记得在`<head>`标签中包含`jquery`库：
- en: '[PRE17]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Almost in the end of DOM (right before the `</body>` closing tag), we will
    execute the following script to manage the insertion of the `open` class only
    for submenus controlling which submenu will be shown:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎在DOM的末尾（`</body>`结束标记之前），我们将执行以下脚本来管理仅对子菜单插入`open`类的操作，以控制将显示哪个子菜单：
- en: '[PRE18]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The expected visual result is demonstrated in the following screenshot:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 期望的视觉效果如下截图所示：
- en: '![How to do it](img/3602OS_03_05.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作](img/3602OS_03_05.jpg)'
- en: Toggle and slide
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 切换和滑动
- en: This pattern is similar to the multi toggle pattern, but instead of just toggling
    the submenu, the submenu slides from left to right when the top-level link is
    clicked. There is a `back` link to facilitate the user's navigation. I really
    appreciate this interaction effect and it certainly may impress the users.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 这种模式类似于多重切换模式，但不仅仅是切换子菜单，而且在单击顶级链接时，子菜单会从左向右滑动。有一个`back`链接以便用户导航。我真的很欣赏这种交互效果，它肯定会给用户留下深刻的印象。
- en: How to do it
  id: totrans-125
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何做
- en: Let's use exactly the same HTML code from the multi toggle pattern for this
    example (including the call of jQuery script from the `<head>` tag).
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用与多重切换模式相同的 HTML 代码进行此示例（包括从 `<head>` 标签调用 jQuery 脚本）。
- en: 'About the CSS code, we will use the same code from the multi toggle pattern,
    but inserting the following code at the end of file. The main difference between
    toggle and slide and multi toggle pattern is the new arrow character for submenu(the
    right arrow); the submenu is displayed, but not on the visible area:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 CSS 代码，我们将使用多重切换模式的相同代码，但在文件末尾插入以下代码。切换模式和滑动模式与多重切换模式的主要区别是子菜单的新箭头字符（右箭头）；子菜单显示在但不在可见区域上：
- en: '[PRE19]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Using the same suggestion, the following screenshot shows the exact moment
    before and after clicking on the **Projects** link (in this case, implemented
    only on smartphones):'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 使用相同的建议，以下屏幕截图显示了在点击 **Projects** 链接之前和之后的确切时刻（在这种情况下，仅在智能手机上实现）：
- en: '![How to do it](img/3602OS_03_06.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![如何做](img/3602OS_03_06.jpg)'
- en: Almost at the end of DOM (right before the `</body>` closing tag), we will execute
    almost the same script we had seen before, but one more functionality is added
    now.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DOM 几乎结束时（就在 `</body>` 结束标签之前），我们将执行几乎与之前看到的相同的脚本，但现在添加了一个功能。
- en: The following is the same code we used in previous example, which was added
    for the menu displaying control
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们在之前的示例中使用的相同代码，用于菜单显示控制
- en: '[PRE20]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The following part of the code handles the function that adds/removes the `open`
    class for submenus. Whenever this class is set in the element by clicking on the
    parent element, the submenu may slide horizontally on the screen.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码的一部分处理添加/移除子菜单的`open`类的功能。每当通过点击父元素在元素中设置此类时，子菜单可能会水平滑动在屏幕上。
- en: '[PRE21]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The off-canvas menu
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 侧栏菜单
- en: If you have used Facebook from the iPhone app or any other apps that now follow
    the off-canvas menu convention, you have seen an off-canvas panel on a native
    app. If you hit a menu button, a panel will slide and occupy part of the useful
    device area.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用过 iPhone 应用或现在遵循侧栏菜单约定的任何其他应用，你就会在原生应用上看到一个侧栏面板。如果你点击菜单按钮，面板将滑动并占用部分有用的设备区域。
- en: The jPanelMenu jQuery plugin
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: jPanelMenu jQuery 插件
- en: The jPanelMenu plugin, [http://jpanelmenu.com/](http://jpanelmenu.com/), is
    a lightweight JavaScript solution which hides the menu that you specified and
    displays it when we click on a header button triggering the action. jPanelMenu
    has some interesting options to append, such as animation with duration and effects,
    keyboard shortcut, and choosing the direction. We will see an example with these
    features soon.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: jPanelMenu 插件，[http://jpanelmenu.com/](http://jpanelmenu.com/)，是一个轻量级的 JavaScript
    解决方案，它隐藏了您指定的菜单，并在我们单击头部按钮触发操作时显示它。jPanelMenu 有一些有趣的选项可供附加，例如带有持续时间和效果的动画、键盘快捷键和选择方向。我们很快将看到具有这些功能的示例。
- en: 'So, the following screenshot is a suggestion for the off-canvas menu style
    implemented only for smartphones. As usual, we keep the original top menu for
    tablet and desktop:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，下面的屏幕截图是仅针对智能手机实现的侧栏菜单样式建议。像往常一样，我们保留原始的顶部菜单供平板电脑和台式机使用：
- en: '![The jPanelMenu jQuery plugin](img/3602OS_03_07.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![jPanelMenu jQuery 插件](img/3602OS_03_07.jpg)'
- en: How to do it
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何做
- en: 'Let''s start including the following CSS in the <head> tag:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从 `<head>` 标签中开始包含以下 CSS：
- en: '[PRE22]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Then, we will use almost the same HTML code from the footer navigation pattern,
    where we moved the menu to the final part of the HTML structure (footer area)
    and inserted the following link in the header of the page, because when the user
    clicks on it, the website will focus on the navigation menu:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将使用几乎与页脚导航模式相同的 HTML 代码，我们将菜单移动到 HTML 结构的最后部分（页脚区域），并在页面标题中插入以下链接，因为当用户点击它时，网站将专注于导航菜单：
- en: '[PRE23]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'After downloading the jPanelMenu, let''s include the following code in the
    `<head>` tag:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 下载 jPanelMenu 后，让我们在 `<head>` 标签中包含以下代码：
- en: '[PRE24]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Include the following code right before the `</body>` closing tag too. Also,
    this plugin offers some cool options, such as defining which effect will be used,
    direction and duration used when the menu appears, keyboard shortcuts, and some
    callbacks:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 也在`</body>`结束标签之前包括以下代码。此外，该插件还提供一些很酷的选项，如定义菜单出现时使用的效果、方向和持续时间，键盘快捷键以及一些回调函数：
- en: '[PRE25]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: There is no specific CSS code required for this pattern, but it still requires
    creating our CSS style for the menu to be shown beautifully.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这种模式，不需要特定的CSS代码，但仍然需要创建我们自己的CSS样式来美观地显示菜单。
- en: Exercise 3 – customizing menu using the toggle menu solution
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习3 - 使用切换菜单解决方案自定义菜单
- en: After seeing eight types of responsive menus and how to implement each one of
    them, let's choose the toggle menu to implement in our site.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在了解了八种响应式菜单及如何实现它们后，让我们选择切换菜单来在我们的网站上实现。
- en: If you are building your own site, feel free to analyze the best option considering
    all the features from each menu navigation pattern.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在建立自己的网站，请随意分析考虑每种菜单导航模式的所有功能，然后选择最佳选项。
- en: Summary
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned how the top and left navigation work better depending
    on each situation. We also learned eight different navigation patterns by using
    CSS3 or JavaScript plugins.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何根据不同情况使顶部和左侧导航更有效。我们还学习了使用CSS3或JavaScript插件来实现八种不同的导航模式。
- en: In the next chapter, we will cover a way to handle the responsive font size
    of the text. Also, we will customize the font family by using CSS3 and three good
    JavaScript plugins, giving more creativity to heading titles.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将介绍处理文本的响应式字体大小的方法。此外，我们将使用CSS3和三个很棒的JavaScript插件来自定义字体系列，为标题添加更多创意。
