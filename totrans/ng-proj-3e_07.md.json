["```js\nng new gh-portfolio --routing=false --style=scss \n```", "```js\n    npm install bootstrap \n    ```", "```js\n    @import \"bootstrap/scss/bootstrap\"; \n    ```", "```js\n    npm install bootstrap-icons \n    ```", "```js\n    @import \"bootstrap/scss/bootstrap\";\n    **@import****\"bootstrap-icons/font/bootstrap-icons\"****;** \n    ```", "```js\n    export class AppComponent {\n      title = 'gh-portfolio';\n      **username =** **'<Your GitHub login>'****;**\n    } \n    ```", "```js\n    <div class=\"toolbar d-flex align-items-center\">\n      <img width=\"40\" alt=\"Angular Logo\" src=\"img/angular.png\" />\n      <span>Welcome to my GitHub portfolio</span>\n      <a class=\"ms-auto p-2\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/{{username}}\" title=\"GitHub\">\n        <i class=\"bi-github\"></i>\n      </a>\n    </div> \n    ```", "```js\n    <div class=\"content d-flex flex-column\">\n      <div class=\"row\">\n        <div class=\"col-sm-3\"></div>\n        <div class=\"col-sm-9\">\n          <div class=\"row\">\n            <div class=\"col-12 col-sm-12\"></div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-12 col-sm-12\"></div>\n          </div>\n        </div>\n      </div>\n    </div> \n    col-sm-3 class selector will display the *personal information* feature. The element with the col-sm-9 class selector will be split into two rows, one for the *repositories* and another for the *organizations* features.\n    ```", "```js\n    .toolbar {\n      height: 60px;\n      background-color: #1976d2;\n      color: white;\n      font-weight: 600;\n    }\n    .toolbar img {\n      margin: 0 16px;\n    }\n    .toolbar i {\n      font-size: 1.5rem;\n      color: white;\n      margin: 0 16px;\n    }\n    .toolbar a {\n      margin-bottom: 5px;\n    }\n    .toolbar i:hover {\n      opacity: 0.8;\n    }\n    .content {\n      margin: 52px auto 32px;\n      padding: 0 16px;\n    } \n    ```", "```js\n    import { NgModule } from '@angular/core';\n    import { BrowserModule } from '@angular/platform-browser';\n    **import** **{** **HttpClientModule** **}** **from****'@angular/common/http'****;**\n    import { AppComponent } from './app.component';\n    @NgModule({\n      declarations: [\n        AppComponent\n      ],\n      imports: [\n        BrowserModule,\n        **HttpClientModule**\n      ],\n      providers: [],\n      bootstrap: [AppComponent]\n    })\n    export class AppModule { } \n    ```", "```js\n    ng generate service github \n    ```", "```js\n    **import** **{** **HttpClient** **}** **from****'@angular/common/http'****;**\n    import { Injectable } from '@angular/core';\n    @Injectable({\n      providedIn: 'root'\n    })\n    export class GithubService {\n      constructor(**private** **http: HttpClient**) { }\n    } \n    ```", "```js\n    readonly username = '<Your GitHub login>';\n    private apiUrl = 'https://api.github.com'; \n    ```", "```js\n    import { Component, **OnInit** } from '@angular/core';\n    **import** **{** **GithubService** **}** **from****'./github.service'****;**\n    @Component({\n      selector: 'app-root',\n      templateUrl: './app.component.html',\n      styleUrls: ['./app.component.scss']\n    })\n    export class AppComponent **implements****OnInit** {\n      title = 'gh-portfolio';\n      **username =** **''****;**\n      **constructor****(****private** **githubService: GithubService****) {}**\n    **ngOnInit****():** **void** **{**\n    **this****.****username** **=** **this****.****githubService****.****username****;**\n     **}**\n    } \n    ```", "```js\n    ng generate component personal-info \n    ```", "```js\n    ng generate interface user \n    ```", "```js\n    export interface User {\n    **avatar_url****:** **string****;**\n    **name****:** **string****;**\n    **blog****:** **string****;**\n    **location****:** **string****;**\n    **bio****:** **string****;**\n    **twitter_username****:** **string****;**\n    **followers****:** **number****;**\n    } \n    ```", "```js\n    import { Observable } from 'rxjs';\n    import { User } from './user'; \n    ```", "```js\n    getUser(): Observable<User> {\n      return this.http.get<User>(`${this.apiUrl}/users/${this.username}`);\n    } \n    ```", "```js\n    import { Component, **OnInit** } from '@angular/core';\n    **import** **{** **Observable** **}** **from****'rxjs'****;**\n    **import** **{** **GithubService** **}** **from****'../github.service'****;**\n    **import** **{** **User** **}** **from****'../user'****;** \n    ```", "```js\n    export class PersonalInfoComponent implements OnInit {\n      user$: Observable<User> | undefined;\n      constructor(private githubService: GithubService) {}\n      ngOnInit(): void {\n        this.user$ = this.githubService.getUser();\n      }\n    } \n    ```", "```js\n    <div class=\"card\" *ngIf=\"user$ | async as user\">\n      <img [src]=\"user.avatar_url\" class=\"card-img-top\" alt=\"{{user.name}} photo\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">{{user.name}}</h5>\n        <p class=\"card-text\">{{user.bio}}</p>\n      </div>\n      <ul class=\"list-group list-group-flush\">\n        <li class=\"list-group-item\" title=\"Location\">\n          <i class=\"bi-geo me-2\"></i>{{user.location}}\n        </li>\n        <li class=\"list-group-item\" title=\"Followers\">\n          <i class=\"bi-people me-2\"></i>{{user.followers}}\n        </li>\n      </ul>\n      <div class=\"card-body\">\n        <a href=\"https://www.twitter.com/{{user.twitter_username}}\" class=\"card-link\">Twitter</a>\n        <a [href]=\"user.blog\" class=\"card-link\">Personal blog</a>\n      </div>\n    </div> \n    ```", "```js\n    <div class=\"col-sm-3\">\n    **<****app-personal-info****></****app-personal-info****>**\n    </div> \n    ```", "```js\n    ng generate component panel \n    ```", "```js\n    import { Component, **Input** } from '@angular/core';\n    @Component({\n      selector: 'app-panel',\n      templateUrl: './panel.component.html',\n      styleUrls: ['./panel.component.scss']\n    })\n    export class PanelComponent {\n      **@Input****() caption =** **''****;**\n    **@Input****() icon =** **''****;**\n    } \n    ```", "```js\n    <div class=\"card mb-4\">\n      <div class=\"card-header\">\n        <i class=\"bi bi-{{icon}} me-1\"></i>\n        {{caption}}\n      </div>\n      <div class=\"card-body\">\n        <ng-content></ng-content>\n      </div>\n    </div> \n    ```", "```js\n    ng generate interface repository \n    ```", "```js\n    export interface Repository {\n      **name****:** **string****;**\n    **html_url****:** **string****;**\n    **description****:** **string****;**\n    **fork****:** **boolean****;**\n    **stargazers_count****:** **number****;**\n    **language****:** **string****;**\n    **forks_count****:** **number****;**\n    } \n    ```", "```js\n    import { Repository } from './repository'; \n    ```", "```js\n    export class GithubService {\n      readonly username = '<Your GitHub login>';\n      **private** **userUrl =** **'https://api.github.com/users/'** **+** **this****.****username****;**\n      constructor(private http: HttpClient) { }\n      getUser(): Observable<User> {\n        return this.http.get<User>(**this****.****userUrl**);\n      }\n    } \n    ```", "```js\n    getRepos(): Observable<Repository[]> {\n      return this.http.get<Repository[]>(this.userUrl + '/repos');\n    } \n    ```", "```js\n    ng generate component repositories \n    ```", "```js\n    import { Component, **OnInit** } from '@angular/core';\n    **import** **{** **Observable** **}** **from****'rxjs'****;**\n    **import** **{ map }** **from****'rxjs/operators'****;**\n    **import** **{** **GithubService** **}** **from****'../github.service'****;**\n    **import** **{** **Repository** **}** **from****'../repository'****;** \n    ```", "```js\n    export class RepositoriesComponent implements OnInit {\n      repos$: Observable<Repository[]> | undefined;\n      constructor(private githubService: GithubService) { }\n      ngOnInit(): void {\n        this.repos$ = this.githubService.getRepos().pipe(\n          map(repos => repos.filter(repo => !repo.fork))\n        );\n      }\n    } \n    ```", "```js\n    <app-panel caption=\"Repositories\" icon=\"archive\">\n      <div class=\"row row-cols-1 row-cols-md-3 g-4\">\n        <div class=\"col p-2\" *ngFor=\"let repo of repos$ | async\">\n          <div class=\"card h-100\">\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">\n                <a [href]=\"repo.html_url\">{{repo.name}}</a>\n              </h5>\n              <p class=\"card-text\">{{repo.description}}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </app-panel> \n    ```", "```js\n    <ul class=\"list-group list-group-flush list-group-horizontal\">\n      <li class=\"list-group-item border-0\">\n        <i class=\"bi-code me-2\"></i>\n        {{repo.language}}\n      </li>\n      <li class=\"list-group-item border-0\">\n        <i class=\"bi-star me-2\"></i>\n        {{repo.stargazers_count}}\n      </li>\n      <li class=\"list-group-item border-0\">\n        <i class=\"bi-diagram-2 me-2\"></i>\n        {{repo.forks_count}}\n      </li>\n    </ul> \n    language of each repository, how many have starred it, and how many have forked it.\n    ```", "```js\n    <div class=\"col-sm-9\">\n      <div class=\"row\">\n        <div class=\"col-12 col-sm-12\">\n          **<****app-repositories****></****app-repositories****>**\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-12 col-sm-12\"></div>\n      </div>\n    </div> \n    ```", "```js\n    ng generate interface organization \n    ```", "```js\n    export interface Organization {\n      **login****:** **string****;**\n    **description****:** **string****;**\n    **avatar_url****:** **string****;**\n    } \n    ```", "```js\n    import { Organization } from './organization'; \n    ```", "```js\n    getOrganizations(): Observable<Organization[]> {\n      return this.http.get<Organization[]>(this.userUrl + '/orgs');\n    } \n    ```", "```js\n    ng generate component organizations \n    ```", "```js\n    import { Component, **OnInit** } from '@angular/core';\n    **import** **{** **Observable** **}** **from****'rxjs'****;**\n    **import** **{** **GithubService** **}** **from****'../github.service'****;**\n    **import** **{** **Organization** **}** **from****'../organization'****;** \n    ```", "```js\n    export class OrganizationsComponent implements OnInit {\n      orgs$: Observable<Organization[]> | undefined;\n      constructor(private githubService: GithubService) { }\n      ngOnInit(): void {\n        this.orgs$ =\n         this.githubService.getOrganizations();\n      }\n    } \n    ```", "```js\n    <app-panel caption=\"Organizations\" icon=\"diagram-3\">\n      <div class=\"list-group\">\n        <a href=\"https://www.github.com/{{org.login}}\" class=\"list-group-item list-group-item-action\" *ngFor=\"let org of orgs$ | async\">\n          <div class=\"row\">\n            <img [src]=\"org.avatar_url\">\n            <div class=\"col-sm-9\">\n              <div class=\"d-flex w-100 justify-content-between\">\n                <h5 class=\"mb-1\">{{org.login}}</h5>\n              </div>\n              <p class=\"mb-1\">{{org.description}}</p>\n            </div>\n          </div>\n        </a>\n      </div>\n    </app-panel> \n    ```", "```js\n    img {\n      width: 60px;\n      height: 40px;\n    } \n    ```", "```js\n    <div class=\"col-sm-9\">\n      <div class=\"row\">\n        <div class=\"col-12 col-sm-12\">\n          <app-repositories></app-repositories>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-12 col-sm-12\">\n          **<****app-organizations****></****app-organizations****>**\n        </div>\n      </div>\n    </div> \n    ```", "```js\nng add @nguniversal/express-engine \n```", "```js\n    \"server\": {\n      \"builder\": \"@angular-devkit/build-angular:server\",\n      \"options\": {\n        \"outputPath\": \"dist/gh-portfolio/server\",\n        \"main\": \"server.ts\",\n        \"tsConfig\": \"tsconfig.server.json\",\n        \"inlineStyleLanguage\": \"scss\"\n      },\n      \"configurations\": {\n        \"production\": {\n          \"outputHashing\": \"media\"\n        },\n        \"development\": {\n          \"buildOptimizer\": false,\n          \"optimization\": false,\n          \"sourceMap\": true,\n          \"extractLicenses\": false,\n          \"vendorChunk\": true\n        }\n      },\n      \"defaultConfiguration\": \"production\"\n    } \n    ```", "```js\n    \"scripts\": {\n      \"ng\": \"ng\",\n      \"start\": \"ng serve\",\n      \"build\": \"ng build\",\n      \"watch\": \"ng build --watch --configuration development\",\n      \"test\": \"ng test\",\n    **\"dev:ssr\"****:****\"ng run gh-portfolio:serve-ssr\"****,**\n    **\"serve:ssr\"****:****\"node dist/gh-portfolio/server/main.js\"****,**\n    **\"build:ssr\"****:****\"ng build && ng run gh-portfolio:server\"****,**\n    **\"prerender\"****:****\"ng run gh-portfolio:prerender\"**\n    } \n    ```", "```js\nimport { Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nexport class CheckPlatformComponent {\n  isBrowser: boolean;\n\n  constructor( @Inject(PLATFORM_ID) platformId: any) {\n    this.isBrowser = isPlatformBrowser(platformId);\n  }\n} \n```", "```js\nnpm run dev:ssr \n```", "```js\n    npm run prerender \n    ```", "```js\n    npm run serve:ssr \n    ```", "```js\n    import { TransferHttpCacheModule } from '@nguniversal/common'; \n    ```", "```js\n    @NgModule({\n      declarations: [\n        AppComponent,\n        PersonalInfoComponent,\n        PanelComponent,\n        RepositoriesComponent,\n        OrganizationsComponent\n      ],\n      imports: [\n        BrowserModule,\n        HttpClientModule,\n        **TransferHttpCacheModule**\n      ],\n      providers: [],\n      bootstrap: [AppComponent]\n    }) \n    ```", "```js\n    npm run prerender \n    ```", "```js\n    npm run serve:ssr \n    ```", "```js\n<head>\n  **<****meta****charset****=****\"utf-8\"****>**\n**<****title****>****GhPortfolio****</****title****>**\n  <base href=\"/\">\n  **<****meta****name****=****\"viewport\"****content****=****\"width=device-width, initial-scale=1\"****>**\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head> \n```", "```js\n    import { Title } from '@angular/platform-browser'; \n    ```", "```js\n    constructor(private githubService: GithubService, **private** **titleService: Title**) {} \n    ```", "```js\n    ngOnInit(): void {\n      this.username = this.githubService.username;\n      **this****.****titleService****.****setTitle****(****'GitHub portfolio app'****);**\n    } \n    ```", "```js\n    import { **Meta**, Title } from '@angular/platform-browser'; \n    ```", "```js\n    constructor(private githubService: GithubService, private titleService: Title, **private** **meta: Meta**) {} \n    ```", "```js\n    ngOnInit(): void {\n      this.username = this.githubService.username;\n      this.titleService.setTitle('GitHub portfolio app');\n      **this****.****meta****.****addTags****([**\n     **{**\n    **name****:** **'description'****,**\n    **content****:** **`****${****this****.username}****'s GitHub portfolio`**\n     **},**\n     **{**\n    **name****:** **'author'****,**\n    **content****:** **this****.****username**\n     **}**\n     **]);**\n    } \n    ```"]