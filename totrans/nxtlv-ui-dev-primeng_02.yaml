- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: Setting Up Your Development Environment
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置你的开发环境
- en: In this second chapter, we will dive into the crucial task of setting up your
    development environment to build Angular applications with PrimeNG components.
    This chapter equips you with the necessary knowledge and tools to create a seamless
    and productive development environment. From installing the required software
    to understanding the project structure, we will guide you through each step to
    ensure a smooth setup process.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将深入探讨设置你的开发环境以使用PrimeNG组件构建Angular应用程序的关键任务。本章将为你提供创建无缝且高效开发环境所需的知识和工具。从安装所需的软件到理解项目结构，我们将指导你完成每个步骤，以确保设置过程顺利。
- en: By the end of this chapter, you will have a well-configured development environment
    and will be equipped with the necessary tools to start building Angular applications
    with PrimeNG. Understanding the technical requirements, setting up the Angular
    CLI, and familiarizing yourself with the project structure will lay a solid foundation
    for your web development journey. Additionally, leveraging an IDE such as VS Code
    and utilizing useful extensions will boost your productivity and make the development
    process more efficient.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将拥有一个配置良好的开发环境，并配备开始使用PrimeNG构建Angular应用程序所需的工具。了解技术要求、设置Angular CLI以及熟悉项目结构将为你的Web开发之旅打下坚实的基础。此外，利用VS
    Code等IDE以及使用有用的扩展将提高你的工作效率，使开发过程更加高效。
- en: 'So, let’s dive in and set up your development environment for an optimal Angular
    development experience. In this chapter, we will cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们深入探讨并设置你的开发环境，以获得最佳的Angular开发体验。在本章中，我们将涵盖以下主题：
- en: Setting up the Angular CLI
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置Angular CLI
- en: Creating a new Angular project
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建新的Angular项目
- en: Understanding the project structure
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解项目结构
- en: Discovering useful VS Code extensions
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发现有用的VS Code扩展
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The chapter contains various code samples from a new Angular project. You can
    find the related source code in the `chapter-02` folder of the following GitHub
    repository: [](https://github.com/PacktPublishing/Next-Level-UI-Development-with-PrimeNG)
    .'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章包含来自新Angular项目的各种代码示例。你可以在以下GitHub仓库的`chapter-02`文件夹中找到相关源代码：[https://github.com/PacktPublishing/Next-Level-UI-Development-with-PrimeNG](https://github.com/PacktPublishing/Next-Level-UI-Development-with-PrimeNG)。
- en: 'Before diving into the setup process, it’s important to ensure that your system
    meets the necessary technical requirements for development. Let’s take a look
    at the key components you’ll need to have in place:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入设置过程之前，确保你的系统满足开发所需的技术要求非常重要。让我们看看你需要准备的关键组件：
- en: '**Node.js (NVM)**: Install Node.js, a JavaScript runtime, using **Node Version
    Manager** (**NVM**) to manage multiple Node.js versions on your system. You can
    download and install NVM from the official website: [https://github.com/nvm-sh/nvm](https://github.com/nvm-sh/nvm).
    If your company imposes restrictions on the usage of NVM, please refer to the
    official Node.js website ([https://nodejs.org](https://nodejs.org)) for installation
    instructions and follow the provided guide.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Node.js (NVM)**：使用**Node版本管理器**（**NVM**）安装Node.js，这是一个JavaScript运行时，以在你的系统上管理多个Node.js版本。你可以从官方网站下载并安装NVM：[https://github.com/nvm-sh/nvm](https://github.com/nvm-sh/nvm)。如果你的公司对NVM的使用有限制，请参考官方Node.js网站（[https://nodejs.org](https://nodejs.org)）的安装说明，并遵循提供的指南。'
- en: '**npm**: Choose npm for managing dependencies in your Angular projects. It
    comes bundled with Node.js, so if you have Node.js installed, you will be able
    to use npm. If you prefer to use alternatives to npm, you can check out either
    Yarn ([https://yarnpkg.com](https://yarnpkg.com)) or pnpm ([https://pnpm.io](https://pnpm.io)).'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**npm**：选择npm来管理Angular项目中的依赖项。它捆绑了Node.js，所以如果你已经安装了Node.js，你将能够使用npm。如果你希望使用npm的替代品，你可以查看Yarn（[https://yarnpkg.com](https://yarnpkg.com)）或pnpm（[https://pnpm.io](https://pnpm.io)）。'
- en: '**GitHub**: Sign up for a GitHub account to leverage this web-based hosting
    service for version control and collaboration. GitHub allows you to track changes,
    collaborate with team members, and host your Angular repositories. Sign up for
    an account at [https://github.com](https://github.com).'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GitHub**：注册一个GitHub账户以利用这个基于网络的托管服务进行版本控制和协作。GitHub允许你跟踪变更、与团队成员协作以及托管你的Angular仓库。在[https://github.com](https://github.com)注册一个账户。'
- en: '**VS Code (Visual Studio Code)**: Install VS Code, a free and extensible source-code
    editor developed by Microsoft. VS Code offers built-in support for Angular and
    integrates seamlessly with the Angular CLI, providing features such as code completion
    and debugging. Download VS Code from the official website: [https://code.visualstudio.com](https://code.visualstudio.com).'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**VS Code（Visual Studio Code）**：安装 VS Code，这是由微软开发的一个免费且可扩展的源代码编辑器。VS Code
    提供了对 Angular 的内置支持，并与 Angular CLI 无缝集成，提供代码补全和调试等功能。从官方网站下载 VS Code：[https://code.visualstudio.com](https://code.visualstudio.com)。'
- en: By ensuring that you have Node.js (NVM), a package manager (npm, Yarn, or pnpm),
    GitHub, and VS Code installed, you’ll have a solid foundation for setting up your
    Angular development environment. These tools will enable you to efficiently build,
    manage, and collaborate on your Angular projects with PrimeNG components.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 通过确保您已安装 Node.js（NVM）、包管理器（npm、Yarn 或 pnpm）、GitHub 和 VS Code，您将为设置 Angular 开发环境打下坚实的基础。这些工具将使您能够高效地构建、管理和协作
    PrimeNG 组件的 Angular 项目。
- en: Setting up the Angular CLI
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 Angular CLI
- en: The **Angular CLI** (**Command-Line Interface**) is a powerful tool that simplifies
    the process of creating, developing, and maintaining Angular applications. It
    provides a set of commands that automate common development tasks, allowing you
    to focus on building your application rather than setting up the project structure
    manually. In this section, we will guide you through the installation process
    of the Angular CLI and provide an overview of its core commands.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**Angular CLI**（**命令行界面**）是一个强大的工具，它简化了创建、开发和维护 Angular 应用程序的过程。它提供了一套命令，可以自动化常见的开发任务，让你能够专注于构建应用程序，而不是手动设置项目结构。在本节中，我们将指导你完成
    Angular CLI 的安装过程，并提供其核心命令的概述。'
- en: Note
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Ensure that you have a stable internet connection during the installation process.
    It may take some time to download and install the required packages, depending
    on your internet speed.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装过程中，请确保您有一个稳定的互联网连接。根据您的网速，下载和安装所需的包可能需要一些时间。
- en: Installing Node.js v18 (using NVM)
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 NVM 安装 Node.js v18
- en: 'To install NVM and set Node.js v18 as the default version, follow these steps:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 NVM 并将 Node.js v18 设置为默认版本，请按照以下步骤操作：
- en: 'Visit the official NVM repository on GitHub: [https://github.com/nvm-sh/nvm](https://github.com/nvm-sh/nvm).'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问 GitHub 上的官方 NVM 仓库：[https://github.com/nvm-sh/nvm](https://github.com/nvm-sh/nvm)。
- en: 'Follow the installation instructions specific to your operating system. This
    typically involves running a script to download and install NVM. The following
    script will help to download and install NVM v0.39.3:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据您的操作系统遵循特定的安装说明。这通常涉及运行一个脚本来下载和安装 NVM。以下脚本将帮助下载和安装 NVM v0.39.3：
- en: '[PRE0]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The version of NVM may change, so please visit the official website for the
    latest version and instructions.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: NVM 的版本可能会更改，请访问官方网站获取最新版本和说明。
- en: Open a new terminal window or restart your terminal to load NVM.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的终端窗口或重启终端以加载 NVM。
- en: 'Run the following command to verify that NVM is installed:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令以验证 NVM 是否已安装：
- en: '[PRE1]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: You should see the version number of NVM printed in the terminal. In this example,
    the current version is `0.39.3`.
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该在终端中看到 NVM 的版本号。在这个例子中，当前版本是 `0.39.3`。
- en: 'After that, run the following command to install Node.js v18 using NVM:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，运行以下命令使用 NVM 安装 Node.js v18：
- en: '[PRE2]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'In order to use Node.js v18 in a new terminal session, we need to set Node.js
    v18 as the default version. To do that, run the following command:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了在新的终端会话中使用 Node.js v18，我们需要将其设置为默认版本。为此，请运行以下命令：
- en: '[PRE3]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Finally, run the following commands to verify that Node.js v18 is installed
    and set as the default:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，运行以下命令以验证 Node.js v18 是否已安装并设置为默认：
- en: '[PRE4]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: These commands should display the version numbers of Node.js and npm respectively,
    and they should correspond to the installed Node.js v18.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这些命令应显示 Node.js 和 npm 的版本号，并且它们应与已安装的 Node.js v18 相对应。
- en: With Node.js v18 installed, let’s move on to installing the Angular CLI.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装了 Node.js v18 之后，让我们继续安装 Angular CLI。
- en: Installing the Angular CLI
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 Angular CLI
- en: To install the Angular CLI, complete the following instructions depending on
    your operating system.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您的操作系统完成以下安装 Angular CLI 的说明。
- en: 'For Windows machines, do the following:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Windows 计算机，请执行以下操作：
- en: Open Command Prompt or PowerShell.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令提示符或 PowerShell。
- en: 'Run the following command to install the Angular CLI globally:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令以全局安装 Angular CLI：
- en: '[PRE5]'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'For Linux/macOS machines, do the following:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Linux/macOS 计算机，请执行以下操作：
- en: Open Terminal.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端。
- en: 'Run the following command to install the Angular CLI globally:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令以全局安装 Angular CLI：
- en: '[PRE6]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Note
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If you encounter permission errors while installing Node.js or the Angular CLI
    using the npm package manager, you may need to use `sudo` before the commands
    to run them with administrator privileges.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在安装 Node.js 或 Angular CLI 时使用 npm 软件包管理器遇到权限错误，您可能需要在命令前使用 `sudo` 以管理员权限运行它们。
- en: 'For macOS (using Homebrew), do the following:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 macOS（使用 Homebrew），请执行以下操作：
- en: Open Terminal.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端。
- en: 'Install Homebrew by running the following command:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令安装 Homebrew：
- en: '[PRE7]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Once Homebrew is installed, run the following command to install Node.js:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦安装了 Homebrew，请运行以下命令来安装 Node.js：
- en: '[PRE8]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'After following the appropriate installation process for your system, confirm
    the version of the Angular CLI with this command:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在遵循您系统的适当安装过程之后，使用以下命令确认 Angular CLI 的版本：
- en: '[PRE9]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: You will receive the output shown in *Figure 2**.1*. As you can see, at the
    time of writing this book, the version of the Angular CLI is `17.0.6`.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到如图 2.1 所示的输出。如您所见，在撰写本书时，Angular CLI 的版本为 `17.0.6`。
- en: '![Figure 2.1 – The Angular CLI version](img/B18805_02_01.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.1 – Angular CLI 版本](img/B18805_02_01.jpg)'
- en: Figure 2.1 – The Angular CLI version
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.1 – Angular CLI 版本
- en: 'The Angular CLI provides a wide range of commands to streamline the development
    process. Here are some of the most commonly used commands and their explanations:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Angular CLI 提供了一系列命令以简化开发过程。以下是一些最常用的命令及其说明：
- en: '`ng new [project-name]`: Creates a new Angular project with the specified name.
    It sets up the project structure, installs dependencies, and generates initial
    boilerplate code.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ng new [project-name]`: 使用指定的名称创建新的 Angular 项目。它设置项目结构，安装依赖项，并生成初始样板代码。'
- en: '`ng serve`: Starts a development server and compiles your Angular application.
    It watches for changes in your files and automatically reloads the application
    in the browser.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ng serve`: 启动开发服务器并编译您的 Angular 应用程序。它监视文件中的更改，并在浏览器中自动重新加载应用程序。'
- en: '`ng generate [schematic] [name]`: Generates different elements of your Angular
    application such as components, services, modules, and more. It scaffolds the
    necessary files and updates the required configurations.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ng generate [schematic] [name]`: 生成您的 Angular 应用程序的不同元素，如组件、服务、模块等。它构建必要的文件并更新所需的配置。'
- en: '`ng build`: Builds the Angular application for production. It compiles the
    code and generates optimized files that can be deployed to a web server.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ng build`: 为生产构建 Angular 应用程序。它编译代码并生成可部署到 Web 服务器的优化文件。'
- en: '`ng test`: Executes unit tests for your Angular application. It runs the tests
    using the configured test runner and provides detailed information about test
    results.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ng test`: 执行 Angular 应用程序的单元测试。它使用配置的测试运行器运行测试，并提供有关测试结果的详细信息。'
- en: '`ng lint`: Analyzes the code for potential errors and code style violations.
    It helps enforce coding standards and maintain code quality.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ng lint`: 分析代码以查找潜在错误和代码风格违规。它有助于强制执行编码标准和维护代码质量。'
- en: '`ng deploy`: Deploys your Angular application to a hosting platform, such as
    GitHub Pages or Firebase Hosting. It automates the deployment process and makes
    your application accessible to the public.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ng deploy`: 将您的 Angular 应用程序部署到托管平台，例如 GitHub Pages 或 Firebase Hosting。它自动化部署过程，使您的应用程序对公众可访问。'
- en: Note
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: You can run `ng help` to see the list of commands and their usage. You can also
    check the official documentation for an overview of all commands at [https://angular.io/cli#command-overview](https://angular.io/cli#command-overview).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以运行 `ng help` 来查看命令列表及其用法。您还可以查看官方文档，以了解所有命令的概述，请参阅 [https://angular.io/cli#command-overview](https://angular.io/cli#command-overview)。
- en: By leveraging the Angular CLI, you can streamline your development workflow,
    automate repetitive tasks, and focus on building high-quality Angular applications.
    The installation process on Windows, Linux, and macOS, including an alternative
    option using Homebrew for macOS, ensures that you have the necessary tools to
    harness the power of the Angular CLI.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 通过利用 Angular CLI，您可以简化开发工作流程，自动化重复性任务，并专注于构建高质量的 Angular 应用程序。在 Windows、Linux
    和 macOS 上的安装过程，包括使用 Homebrew 的 macOS 的替代选项，确保您拥有利用 Angular CLI 力量的必要工具。
- en: Now that you have the Angular CLI set up, explore the various commands it offers
    to create, build, test, and deploy your Angular applications. With the Angular
    CLI, you’ll enhance your productivity as a professional developer and unlock the
    full potential of Angular for building robust and scalable web applications. In
    the next section, we will start to create a new Angular project.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经设置了 Angular CLI，探索它提供的各种命令来创建、构建、测试和部署你的 Angular 应用程序。使用 Angular CLI，你将提高作为专业开发者的生产力，并解锁构建强大和可扩展的
    Web 应用程序的全部潜力。在下一节中，我们将开始创建一个新的 Angular 项目。
- en: Creating a new Angular project
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个新的 Angular 项目
- en: Creating a new Angular project is a straightforward process. In this section,
    we will guide you through the steps of creating a new Angular project. We will
    also explore the structure and purpose of each file in a new Angular project.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个新的 Angular 项目是一个简单的过程。在本节中，我们将指导你完成创建新 Angular 项目的步骤。我们还将探索新 Angular 项目中每个文件的结构和目的。
- en: 'To create a new Angular project, follow these steps:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个新的 Angular 项目，请按照以下步骤操作：
- en: Open your Command Prompt or Terminal.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你的命令提示符或终端。
- en: Navigate to the directory where you want to create your project.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到你想要创建项目的目录。
- en: 'Run the following command to generate a new Angular project, replacing `my-app`
    with the desired name of your project:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令以生成一个新的 Angular 项目，将 `my-app` 替换为你项目期望的名称：
- en: '[PRE10]'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The `ng new` command creates a new Angular project with the default configuration
    and project structure. It installs the necessary dependencies and sets up the
    initial files for your application.
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`ng new` 命令使用默认配置和项目结构创建一个新的 Angular 项目。它安装必要的依赖项并设置应用程序的初始文件。'
- en: 'When running this command to create a new Angular project, there are several
    parameters (flags) you can use to customize the project setup. Here are some commonly
    used parameters:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 当运行此命令以创建新的 Angular 项目时，你可以使用几个参数（标志）来自定义项目设置。以下是一些常用参数：
- en: '`--dry-run`: Performs a dry run of the project generation without actually
    creating the files. It allows you to see the files that would be generated before
    committing to the project creation.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--dry-run`：在不实际创建文件的情况下执行项目生成的预览。这允许你在提交项目创建之前查看将要生成的文件。'
- en: '`--standalone`: Creates an application based upon the standalone API, without
    NgModules.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--standalone`：基于独立 API 创建应用程序，不使用 NgModules。'
- en: '`--inline-style` or `--inline-template`: Specifies whether to use inline styles
    or templates. By default, Angular generates separate style and template files.
    Using these flags, you can choose to have inline styles or templates within the
    component files.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--inline-style` 或 `--inline-template`：指定是否使用内联样式或模板。默认情况下，Angular 生成单独的样式和模板文件。使用这些标志，你可以选择在组件文件中具有内联样式或模板。'
- en: '`--prefix`: Sets the prefix for the generated component selector. The prefix
    is added to the selector of every component generated in the project.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--prefix`：设置生成的组件选择器的前缀。前缀被添加到项目中生成的每个组件的选择器中。'
- en: '`--style`: Specifies the style format to use in the project, such as CSS, SCSS,
    Sass, Less, or Stylus. For example, `--style=scss` will configure the project
    to use SCSS as the default style format.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--style`：指定项目要使用的样式格式，例如 CSS、SCSS、Sass、Less 或 Stylus。例如，`--style=scss` 将配置项目使用
    SCSS 作为默认样式格式。'
- en: '`--routing`: Generates a routing configuration for the initial project.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--routing`：为初始项目生成路由配置。'
- en: '`--skip-git`: Skips initializing a new Git repository in the project directory.
    This is useful if you prefer to manage version control manually.'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--skip-git`：跳过在项目目录中初始化新的 Git 仓库。如果你更喜欢手动管理版本控制，这很有用。'
- en: '`--skip-tests`: Prevents the generation of spec files for unit tests when creating
    new components. Use this flag if you don’t want test files to be generated by
    default.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--skip-tests`：在创建新组件时防止生成规范文件用于单元测试。如果你不希望默认生成测试文件，请使用此标志。'
- en: '`--skip-install`: Skips the installation of npm packages after project creation.
    Use this if you prefer to manually run `npm install` or `yarn` later to install
    dependencies.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--skip-install`：在项目创建后跳过安装 npm 包。如果你更喜欢稍后手动运行 `npm install` 或 `yarn` 来安装依赖项，请使用此选项。'
- en: '`--directory`: Specifies the directory name to create the project in. By default,
    the project is created in a folder with the same name as the project.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--directory`：指定创建项目的目录名称。默认情况下，项目将创建在与项目同名的文件夹中。'
- en: '`--minimal`: Create a workspace without any testing frameworks (use for learning
    purposes only).'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--minimal`：创建一个没有任何测试框架的工作区（仅用于学习目的）。'
- en: 'Here is the command to generate a new Angular project with such options:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是用这些选项生成新 Angular 项目的命令：
- en: '[PRE11]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Note
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Using the `--standalone` option is highly recommended as it reduces boilerplate
    code and became the default behavior in Angular 17.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `--standalone` 选项强烈推荐，因为它减少了样板代码，并且在 Angular 17 中成为默认行为。
- en: These are just a few of the parameters available when running `ng new`. You
    can find more options and detailed explanations by running `ng new --help` or
    referring to the official Angular documentation for the specific version that
    you’re using.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这些只是运行 `ng new` 时可用的参数中的一部分。您可以通过运行 `ng new --help` 或参考您所使用的特定版本的官方 Angular
    文档来找到更多选项和详细说明。
- en: 'After running the script, the Angular CLI will ask to enable Server-Side Rendering
    (SSR) and Static Site Generation (SSG/Prerendering). Select `NO` as the answer,
    since it’s not relevant at this moment:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 运行脚本后，Angular CLI 将询问是否启用服务器端渲染 (SSR) 和静态站点生成 (SSG/预渲染)。选择 `NO` 作为答案，因为目前这不相关：
- en: '[PRE12]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '*Figure 2**.2* shows the final result of creating your new Angular project:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 2**.2* 显示了创建新 Angular 项目的最终结果：'
- en: '![Figure 2.2 – The Angular CLI result](img/B18805_02_02.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.2 – Angular CLI 结果](img/B18805_02_02.jpg)'
- en: Figure 2.2 – The Angular CLI result
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.2 – Angular CLI 结果
- en: 'After that, you can run `ng serve` to check the newly created project, like
    so:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，您可以运行 `ng serve` 来检查新创建的项目，如下所示：
- en: '[PRE13]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Then you can visit [http://localhost:4200/](http://localhost:4200/) to check
    your web app – see *Figure 2**.3*:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您可以访问 [http://localhost:4200/](http://localhost:4200/) 来检查您的 Web 应用程序 – 见
    *图 2**.3*：
- en: '![Figure 2.3 – Angular demo app](img/B18805_02_03.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.3 – Angular 示例应用程序](img/B18805_02_03.jpg)'
- en: Figure 2.3 – Angular demo app
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.3 – Angular 示例应用程序
- en: Now that we have our first Angular application created, let’s go through its
    structure.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经创建了第一个 Angular 应用程序，让我们来了解一下其结构。
- en: Understanding the project structure
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解项目结构
- en: Understanding the purpose of each file in your Angular project is essential
    for navigating and developing your application effectively. Each file plays a
    specific role in the overall structure and functionality of your Angular project.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 理解您 Angular 项目中每个文件的目的对于有效地导航和开发应用程序至关重要。每个文件在 Angular 项目的整体结构和功能中都扮演着特定的角色。
- en: 'The following is a brief overview of the new structure of Angular:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是对 Angular 新结构的简要概述：
- en: '`README.md`: Contains a description of the Angular application.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`README.md`: 包含 Angular 应用程序的描述。'
- en: '`.editorconfig`: Contains configuration for code editors.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.editorconfig`: 包含代码编辑器的配置。'
- en: '`.gitignore`: Specifies intentionally untracked files that Git should ignore.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.gitignore`: 指定 Git 应该忽略的有意未跟踪的文件。'
- en: '`angular.json`: Contains CLI configuration defaults for all projects in the
    workspace, including configuration options for build, serve, and test tools that
    the CLI uses.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`angular.json`: 包含 CLI 对工作区中所有项目的配置默认值，包括 CLI 使用的构建、服务和测试工具的配置选项。'
- en: '`package.json`: Specifies the application’s dependencies, devDependencies,
    scripts, licensing, and so on.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`package.json`: 指定了应用程序的依赖项、开发依赖项、脚本、许可协议等内容。'
- en: '`tsconfig.json`: Specifies the TypeScript compiler configuration for the Angular
    application.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tsconfig.json`: 指定了 Angular 应用程序的 TypeScript 编译器配置。'
- en: '`tsconfig.app.json`: Specifies the TypeScript compiler configuration for the
    application’s main module.'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tsconfig.app.json`: 指定应用程序主模块的 TypeScript 编译器配置。'
- en: '`tsconfig.spec.json`: Specifies the TypeScript compiler configuration for the
    application’s unit tests.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tsconfig.spec.json`: 指定应用程序单元测试的 TypeScript 编译器配置。'
- en: '`src` directory contains the source code for the Angular application. It is
    divided into the following subdirectories:'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`src` 目录包含 Angular 应用程序的源代码。它分为以下子目录：'
- en: '`main.ts`: The entry point for the Angular application.'
  id: totrans-123
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`main.ts`: Angular 应用程序的入口点。'
- en: '`favicon.ico`: The application’s favicon.'
  id: totrans-124
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`favicon.ico`: 应用程序的小图标。'
- en: '`index.html`: The application’s main HTML file.'
  id: totrans-125
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`index.html`: 应用程序的主要 HTML 文件。'
- en: '`styles.scss`: The application’s main CSS file.'
  id: totrans-126
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`styles.scss`: 应用程序的主要 CSS 文件。'
- en: '`app`: Contains the application’s components, services, directives, pipes,
    and so on.'
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app`: 包含应用程序的组件、服务、指令、管道等。'
- en: '`app.component.spec.ts`: The unit test for the application’s main component.'
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app.component.spec.ts`: 应用程序主组件的单元测试。'
- en: '`app.component.ts`: The definition of the application’s main component.'
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app.component.ts`: 应用程序主组件的定义。'
- en: '`app.config.ts`: The configuration file for the application’s main entry point.'
  id: totrans-130
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app.config.ts`: 应用程序主入口点的配置文件。'
- en: '`assets`: Contains the application’s assets, such as images and fonts.'
  id: totrans-131
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`assets`：包含应用程序的资产，如图片和字体。'
- en: The new structure of Angular is a significant improvement over the previous
    structure (before Angular 14). It makes it easier to develop and maintain Angular
    applications, and it is more consistent with the way other web frameworks are
    structured.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: Angular 的新结构相对于之前的结构（在 Angular 14 之前）是一个重大改进。它使开发 Angular 应用程序和维护变得更加容易，并且与其他
    Web 框架的结构更加一致。
- en: Note
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Angular has released a new site which provides more tutorials and lessons on
    the latest Angular features. You can learn more at [https://angular.dev](https://angular.dev).
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: Angular 发布了一个新网站，提供了更多关于最新 Angular 功能的教程和课程。你可以在 [https://angular.dev](https://angular.dev)
    上了解更多信息。
- en: Now that you have created your Angular project and explored the project structure,
    you are ready to start building your application by leveraging the power of Angular
    and PrimeNG components. Before starting, let’s go through some useful VS Code
    extensions that will help us during the development process.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经创建了你的 Angular 项目并探索了项目结构，你就可以利用 Angular 和 PrimeNG 组件的力量开始构建你的应用程序了。在开始之前，让我们了解一下一些有用的
    VS Code 扩展，它们将在开发过程中帮助我们。
- en: Discovering useful VS Code extensions
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发现有用的 VS Code 扩展
- en: When it comes to developing Angular applications, having the right tools can
    greatly enhance your productivity and efficiency. One of the most popular code
    editors among developers is **Visual Studio Code** (**VS Code**). VS Code has
    a wide range of extensions that can help streamline your Angular development workflow.
    In this section, we will introduce some useful VS Code extensions specifically
    tailored for Angular development.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 当谈到开发 Angular 应用程序时，拥有合适的工具可以大大提高你的生产力和效率。开发者中最受欢迎的代码编辑器之一是 **Visual Studio
    Code**（**VS Code**）。VS Code 拥有一系列扩展，可以帮助简化你的 Angular 开发工作流程。在本节中，我们将介绍一些专门针对 Angular
    开发的有用 VS Code 扩展。
- en: Angular Language Service
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Angular 语言服务
- en: 'The **Angular Language Service** extension is an invaluable tool for Angular
    developers. This extension provides a rich editing experience for Angular templates,
    both inline and external, including the following:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '**Angular 语言服务** 扩展是 Angular 开发者的一个无价工具。此扩展为 Angular 模板（包括内联和外部）提供了丰富的编辑体验，包括以下内容：'
- en: '**Completion lists**: Provides suggestions and autocompletion for Angular template
    syntax, helping developers write code more efficiently and accurately'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**完成列表**：为 Angular 模板语法提供建议和自动完成，帮助开发者更高效、更准确地编写代码。'
- en: '**AOT diagnostic messages**: Displays compile-time diagnostic messages related
    to **Ahead-of-Time** (**AOT**) compilation in Angular templates, helping developers
    catch errors and improve code quality'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AOT 诊断消息**：显示与 Angular 模板中 **Ahead-of-Time**（**AOT**）编译相关的编译时诊断消息，帮助开发者捕获错误并提高代码质量。'
- en: '**Quick info**: Provides contextual information and documentation about Angular
    directives and components when hovering over them in the template, aiding developers
    in understanding and using the API effectively'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**快速信息**：当在模板中悬停时，提供有关 Angular 指令和组件的上下文信息和文档，帮助开发者有效地理解和使用 API。'
- en: '**Go to definitions**: Allows developers to navigate to the definition of a
    symbol in the template, making it easier to understand how components and directives
    are implemented and facilitating code exploration and debugging'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**转到定义**：允许开发者导航到模板中符号的定义，使理解组件和指令的实现更加容易，并促进代码探索和调试。'
- en: '*Figure 2**.4* shows an example of the autocomplete feature from the extension
    – here we type `heading` in the template and the extension gives the autocomplete
    option to the property from the component:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 2.4* 展示了扩展的自动完成功能的一个示例——在这里我们在模板中输入 `heading`，扩展会给出来自组件属性的自动完成选项：'
- en: '![Figure 2.4 – Angular Language Service autocomplete example](img/B18805_02_04.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.4 – Angular 语言服务自动完成示例](img/B18805_02_04.jpg)'
- en: Figure 2.4 – Angular Language Service autocomplete example
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.4 – Angular 语言服务自动完成示例
- en: Note
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Template autocomplete only works with public properties from the component.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 模板自动完成仅适用于组件的公共属性。
- en: Editor Config
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编辑器配置
- en: The `.editorconfig` file in your project and applies the defined rules to your
    code. With Editor Config, you can enforce indentation styles, line endings, encoding,
    and other formatting preferences. This extension is especially useful when collaborating
    with other developers on Angular projects, as it helps maintain a unified code
    style and minimizes style-related conflicts.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 你的项目中的`.editorconfig`文件应用了定义的规则到你的代码中。使用Editor Config，你可以强制执行缩进样式、行结束、编码和其他格式化偏好。这个扩展在与其他开发者协作进行Angular项目时特别有用，因为它有助于保持统一的代码风格并最小化与风格相关的冲突。
- en: 'Here is an example of the `.editorconfig` file in a newly created Angular project:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个新创建的Angular项目中`.editorconfig`文件的示例：
- en: '[PRE14]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: As you can see, the rules are descriptive – for example, setting the character
    encoding of the files to UTF-8 or using single quotes for all TypeScript files.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，规则是描述性的——例如，设置文件的字符编码为UTF-8或为所有TypeScript文件使用单引号。
- en: Angular Schematics
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Angular Schematics
- en: '**Angular Schematics** is a powerful extension that integrates with the Angular
    CLI and provides a scaffolding mechanism for generating and modifying code. It
    allows you to generate components, modules, services, and other Angular artifacts
    with ease. With Angular Schematics, you can quickly create boilerplate code and
    follow consistent patterns and practices within your Angular project. It saves
    time by automating repetitive tasks and helps maintain a standardized structure
    across your code base.'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '**Angular Schematics**是一个强大的扩展，它与Angular CLI集成，并提供了一种生成和修改代码的脚手架机制。它允许你轻松地生成组件、模块、服务和其他Angular工件。使用Angular
    Schematics，你可以快速创建样板代码，并在Angular项目中遵循一致的模式和实践。它通过自动化重复性任务来节省时间，并帮助在整个代码库中保持标准化的结构。'
- en: 'You can see in *Figure 2**.5* that there is a list of options, and we can generate
    a component named `about` without remembering the command detail:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在*图2.5*中看到有一系列选项，我们可以生成一个名为`about`的组件，而无需记住命令详情：
- en: '![Figure 2.5 – Angular Schematics](img/B18805_02_05.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![图2.5 – Angular Schematics](img/B18805_02_05.jpg)'
- en: Figure 2.5 – Angular Schematics
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.5 – Angular Schematics
- en: Auto Rename Tag
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自动重命名标签
- en: The **Auto Rename Tag** extension is a time-saving tool that automatically renames
    HTML tags as you edit them. When you modify the opening or closing tag of an element,
    this extension updates the corresponding tag throughout your code base, ensuring
    consistency and preventing tag mismatches. It eliminates the need for manual tag
    renaming, which can be error-prone and time-consuming, especially in larger Angular
    projects with complex HTML structures.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '**自动重命名标签**扩展是一个节省时间的工具，它会在你编辑HTML标签时自动重命名它们。当你修改元素的打开或关闭标签时，这个扩展会更新代码库中的相应标签，确保一致性并防止标签不匹配。它消除了手动重命名标签的需要，这在大型Angular项目中，尤其是具有复杂HTML结构的项目中，可能会出错且耗时。'
- en: Nx Console
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Nx Console
- en: This is a bonus section. If you prefer using **Nx Workspace** ([https://nx.dev](https://nx.dev))
    for Angular development, this extension is for you. The **Nx Console** extension
    for VS Code streamlines Angular development, offering code generation, dependency
    graph visualization, and productivity-enhancing features directly within the IDE.
    It boosts efficiency, enhances code quality, and accelerates development workflows.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个附加部分。如果你更喜欢使用**Nx Workspace** ([https://nx.dev](https://nx.dev))进行Angular开发，这个扩展就是为你准备的。VS
    Code的**Nx Console**扩展简化了Angular开发，直接在IDE内提供代码生成、依赖图可视化以及提高生产力的功能。它提高了效率，增强了代码质量，并加速了开发工作流程。
- en: Summary
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This chapter is dedicated to the crucial task of setting up your development
    environment to build Angular applications with PrimeNG components. We began by
    discussing the technical requirements, which include Node.js, Yarn/npm, GitHub,
    and VS Code. Detailed installation instructions were provided for each of these
    tools, ensuring that you have the necessary prerequisites for a seamless development
    experience.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 本章致力于设置开发环境以使用PrimeNG组件构建Angular应用程序的关键任务。我们首先讨论了技术要求，包括Node.js、Yarn/npm、GitHub和VS
    Code。为这些工具提供了详细的安装说明，确保你有无缝开发体验的必要先决条件。
- en: The chapter then focused on the Angular CLI, a powerful command-line interface
    for Angular development. We walked you through the installation process on Windows,
    Linux, and macOS, enabling you to leverage the Angular CLI’s extensive functionality,
    including scaffolding, building, and testing Angular applications. Additionally,
    we covered creating a new Angular project, exploring the latest standalone component
    option and the Angular project template. You should now have a well-configured
    development environment equipped with the Angular CLI, ready to embark on the
    exciting journey of building modern web applications with Angular and PrimeNG.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 本章接着聚焦于 Angular CLI，这是一个用于 Angular 开发的强大命令行界面。我们向您介绍了在 Windows、Linux 和 macOS
    上的安装过程，使您能够利用 Angular CLI 的广泛功能，包括脚手架、构建和测试 Angular 应用程序。此外，我们还涵盖了创建新的 Angular
    项目、探索最新的独立组件选项和 Angular 项目模板。现在，您应该已经拥有了一个配置良好的开发环境，并配备了 Angular CLI，准备好开始使用 Angular
    和 PrimeNG 构建现代网络应用的激动人心的旅程。
- en: Furthermore, we introduced you to several indispensable VS Code extensions tailored
    specifically for Angular development. These extensions, such as Angular Language
    Service, Editor Config, Angular Schematics, and Auto Rename Tag, significantly
    enhance your coding experience and boost productivity. With features such as intelligent
    code completion, formatting assistance, and workspace management, these extensions
    ensure that you maintain consistent coding styles and streamline your development
    workflow within the VS Code environment. By harnessing the power of these extensions,
    you’ll be well equipped to tackle the challenges of Angular development and maximize
    your efficiency throughout the development process.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们还向您介绍了几个专为 Angular 开发量身定制的不可或缺的 VS Code 扩展。这些扩展，如 Angular 语言服务、编辑器配置、Angular
    模式和自动重命名标签，显著提升了您的编码体验并提高了生产力。这些扩展具有智能代码补全、格式化辅助和工作区管理等功能，确保您保持一致的编码风格，并在 VS Code
    环境中简化开发工作流程。通过利用这些扩展的力量，您将充分准备去应对 Angular 开发的挑战，并在整个开发过程中最大限度地提高效率。
- en: With your development environment fully set up and optimized, you are now primed
    to dive into the subsequent chapters and explore the full potential of Angular
    and PrimeNG in creating exceptional web applications. Specifically, in the next
    chapter, we’ll go over Angular’s core features and improvements released in the
    latest version.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的开发环境完全设置和优化后，您现在可以深入下一章，探索 Angular 和 PrimeNG 在创建卓越网络应用中的全部潜力。具体来说，在下一章中，我们将介绍
    Angular 在最新版本中发布的核心功能和改进。
