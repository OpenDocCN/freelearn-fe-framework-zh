- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: Introduction to Vue.js
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Vue.js 简介
- en: 'This book will get you familiar with one of the most popular modern frontend
    frameworks at this time: **Vue.js**. Modern frameworks make it easy to add interactivity
    to static web pages and can help you build entire web applications!'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书将使你熟悉目前最受欢迎的现代前端框架之一：**Vue.js**。现代框架使得向静态网页添加交互性变得容易，并可以帮助你构建完整的网络应用程序！
- en: The latter is exactly what you will be learning while going through this book.
    You will learn different techniques that fit specific use cases, and this will
    result in a collection of portfolio-ready projects.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 后者正是你在阅读本书时会学习到的内容。你将学习适合特定用例的不同技术，这将导致一系列可供展示的项目集合。
- en: Before you start building projects, we will take a look at the context in which
    we will build those projects. In this chapter, we will get you set up to start
    any Vue.js project using the best practices.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在你开始构建项目之前，我们将看看我们将构建这些项目的背景。在本章中，我们将使用最佳实践来设置开始任何 Vue.js 项目的环境。
- en: 'We will cover the following topics in this chapter:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: The need for Vue.js
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vue.js 的需求
- en: Requirements and tooling
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需求和工具
- en: Setting up the development environment
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置开发环境
- en: My first app
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我的第一个应用程序
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: Before we get started, we need to make sure we’ve met all requirements to install
    and run Vue.js, and to also develop applications. Familiarity with HTML, CSS,
    and JavaScript with TypeScript is required to understand the concepts that are
    built on top of these technologies.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始之前，我们需要确保我们已经满足了安装和运行 Vue.js 以及开发应用程序的所有要求。熟悉 HTML、CSS、JavaScript 以及 TypeScript
    是理解这些技术之上的概念所必需的。
- en: In order for us to run Vue.js locally, we need to install Node.js ([https://nodejs.org/en/download](https://nodejs.org/en/download)).
    This is a runner for JavaScript on your development machine.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 为了我们能够在本地运行 Vue.js，我们需要安装 Node.js ([https://nodejs.org/en/download](https://nodejs.org/en/download))。这是在开发机器上运行
    JavaScript 的运行器。
- en: The need for Vue.js
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Vue.js 的需求
- en: There are a number of frontend frameworks available, and this is an ever evolving
    and changing landscape. The Vue.js ecosystem is, at this point in time, a very
    mature landscape, which offers numerous plugins and tooling built on top of it.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 目前有大量的前端框架可供选择，这是一个不断发展和变化的领域。在这个时候，Vue.js 生态系统是一个非常成熟的领域，它提供了许多基于它的插件和工具。
- en: Vue.js is a community-driven open source project maintained and developed by
    people from all over the world. It originated as a personal side project by Evan
    You and has grown to a framework with high adoption by all types of organizations,
    such as NASA, Apple, Google, and Microsoft. Being funded by sponsorships from
    both companies as individuals, Vue.js is an independent framework.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Vue.js 是一个由世界各地的人们维护和开发的开源项目，它是一个社区驱动的项目。它最初是由 Evan You 的个人副项目发展而来，并已经成长为一个被各种类型的组织广泛采用的框架，例如
    NASA、苹果、谷歌和微软。由于得到了公司和个人的赞助，Vue.js 是一个独立的框架。
- en: Vue.js is currently on version 3, a breaking change from the previous version,
    although most patterns are still applicable. Vue.js 3 supports all ES2015-compatible
    browsers.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Vue.js 目前处于第 3 版，与之前的版本相比有重大变化，尽管大多数模式仍然适用。Vue.js 3 支持所有 ES2015 兼容的浏览器。
- en: 'Let’s look at some reasons to choose Vue.js to build web applications:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看选择 Vue.js 构建网络应用程序的一些原因：
- en: It’s performant because it was built to be optimized from the ground up.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它的性能出色，因为它是从底层开始优化的。
- en: It’s lightweight, tree-shakeable, and ships only the code that is needed to
    run your application. The minimal code (after being optimized in a build step)
    is about 16 KB in size.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它轻量级，可摇树（tree-shakeable），只包含运行应用程序所需的代码。经过构建步骤优化后的最小代码（大小约为 16 KB）。
- en: It’s highly scalable, using preferred patterns such as Single File Components
    and the Composition API, which makes it suitable for enterprise applications.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它具有高度的可扩展性，使用如单文件组件和组合式 API 等首选模式，这使得它适合企业级应用。
- en: '**Single File Components** are part of the Vue.js philosophy where the template,
    script, and styling of a component are encapsulated in a single file, with the
    goal of improving the organization, readability, and maintainability of code.'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**单文件组件** 是 Vue.js 哲学的一部分，其中组件的模板、脚本和样式封装在一个单独的文件中，目的是提高代码的组织、可读性和可维护性。'
- en: The **Composition API** allows better organization and reuse of code throughout
    the application, which makes code more modular and easy to maintain.
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**组合式 API** 允许在整个应用程序中对代码进行更好的组织和重用，这使得代码更加模块化且易于维护。'
- en: On top of all these benefits, the learning curve is very accessible for entry-level
    developers. With syntax that is similar to classic HTML, JavaScript, and CSS notation,
    it’s easy to get started and find your way around.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有这些好处之上，对于入门级开发者来说，学习曲线非常容易上手。由于其语法与经典的 HTML、JavaScript 和 CSS 表示法相似，因此很容易开始并找到自己的路径。
- en: In this chapter, we will guide you through the initial setup and go through
    the steps and setup that you can use as boilerplate for all future Vue.js projects.
    We will be adopting the recommended setup to make sure you will learn and apply
    best practices from the start.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将引导你完成初始设置，并介绍你可以用作所有未来 Vue.js 项目样板的所有步骤和设置。我们将采用推荐的设置，以确保你从一开始就能学习和应用最佳实践。
- en: We’ll first make sure that you have the developer environment set up so that
    you can start creating interactive web applications!
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先确保你设置了开发者环境，这样你就可以开始创建交互式网络应用程序！
- en: Requirements and tooling
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 需求和工具
- en: In order to get started with Vue.js development efficiently, we will need to
    make sure you can actually run and edit the code sensibly. While you could technically
    run the code using the library from a **Content Delivery Network** (**CDN**),
    this is not recommended for real-world applications. As the official docs ([https://vuejs.org/guide/introduction.html](https://vuejs.org/guide/introduction.html))
    also state, there is no build setup involved, and the drawback is that this setup
    does not support the Single File Component syntax and leaves you with little control
    over applications’ optimizations such as compiling, minification, and lazy loading.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 为了高效地开始 Vue.js 开发，我们需要确保你能够合理地运行和编辑代码。虽然技术上可以使用来自**内容分发网络**（**CDN**）的库来运行代码，但这对于实际应用来说并不推荐。正如官方文档（[https://vuejs.org/guide/introduction.html](https://vuejs.org/guide/introduction.html)）也指出，这里不涉及构建设置，其缺点是这种设置不支持单文件组件语法，并且让你在应用程序的优化（如编译、压缩和懒加载）方面几乎没有控制权。
- en: In this book, we will make use of the Vue.js `npm` package and then use it to
    scaffold starter projects to build upon. We will start all of our projects using
    the command line. To use the `npm` package, you will need to install Node.js (a
    JavaScript runtime environment). Make sure to install at least Node.js version
    18\. npm is a public repository ([https://www.npmjs.com/](https://www.npmjs.com/))
    where developers publish, share, and use JavaScript packages.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我们将使用 Vue.js 的 `npm` 包，然后使用它来搭建起始项目以构建。我们将使用命令行启动所有项目。要使用 `npm` 包，你需要安装
    Node.js（一个 JavaScript 运行时环境）。请确保安装至少 Node.js 版本 18。npm 是一个公共仓库（[https://www.npmjs.com/](https://www.npmjs.com/)），开发者在这里发布、共享和使用
    JavaScript 包。
- en: 'Node.js can be downloaded from [https://nodejs.org/en](https://nodejs.org/en).
    You can confirm the correct installation of the version by opening a **Command-Line
    Interface** (**CLI**) and typing the following:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从 [https://nodejs.org/en](https://nodejs.org/en) 下载 Node.js。你可以通过打开**命令行界面**（**CLI**）并输入以下内容来确认正确安装了版本：
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'It should return something like this:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 应该返回类似以下内容：
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: It is always possible to develop or experiment without any local installations.
    We can turn to web-based environments for that. These environments offer sandboxed
    environments with sensible presets out of the box. This means they often are configured
    to use the recommended settings from the official documentation. They offer less
    control and are somewhat limited in more specific use cases. They are highly valuable,
    though, if you want to experiment with some of the concepts.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 总是可以在没有任何本地安装的情况下开发和实验。我们可以转向基于网络的平台来实现这一点。这些环境提供了开箱即用的沙箱环境，并具有合理的预设。这意味着它们通常配置为使用官方文档中推荐的设置。它们提供的控制较少，并且在更具体的用例中有些受限。然而，如果你想要尝试一些概念，它们是非常有价值的。
- en: Online resources
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在线资源
- en: Vue.js provides an online development playground, [https://sfc.vuejs.org/](https://sfc.vuejs.org/),
    but I would like to point out **StackBlitz** ([https://stackblitz.com/](https://stackblitz.com/)),
    where you can instantiate complete development environments that run in the browser.
    While it’s not useful for deploying applications, this is an excellent way of
    testing a proof of concept or just using it as a small playground.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Vue.js 提供了一个在线开发沙盒，[https://sfc.vuejs.org/](https://sfc.vuejs.org/)，但我想要指出**StackBlitz**（[https://stackblitz.com/](https://stackblitz.com/)），在那里你可以实例化在浏览器中运行的完整开发环境。虽然它对于部署应用程序没有用，但这是一种测试概念证明或将其用作小型沙盒的极好方式。
- en: You can just register, start a new project, and choose a **Vue.js 3** template
    to get started. Code examples will be available on GitHub, where you can clone
    or fork the repository to validate your own code against the working example.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 你只需注册，开始一个新项目，并选择一个 **Vue.js 3** 模板即可开始。代码示例将在 GitHub 上提供，你可以克隆或分叉存储库以验证你的代码与工作示例的一致性。
- en: For future reference, the Vue.js docs ([https://vuejs.org/guide/introduction.html](https://vuejs.org/guide/introduction.html))
    are very accessible and offer a step-by-step explanation of all the possible contexts.
    I would certainly recommend checking them out for a more in-depth understanding
    of the topics we will be covering.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 为了方便查阅，Vue.js 文档([https://vuejs.org/guide/introduction.html](https://vuejs.org/guide/introduction.html))非常易于访问，并提供了所有可能上下文的逐步解释。我肯定会推荐你查看它们，以更深入地了解我们将要讨论的主题。
- en: Once you get involved in the Vue.js community, you will find that it is a very
    helpful, supportive, and friendly community. Again, the official Vue.js website
    provides some guidance ([https://vuejs.org/about/community-guide.html](https://vuejs.org/about/community-guide.html)).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你参与到 Vue.js 社区中，你会发现它是一个非常有帮助、支持性强且友好的社区。再次强调，官方 Vue.js 网站提供了一些指导([https://vuejs.org/about/community-guide.html](https://vuejs.org/about/community-guide.html))。
- en: Welcome to the community, now let’s get started!
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎加入社区，现在让我们开始吧！
- en: Setting up the development environment
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置开发环境
- en: There are many ways of writing and editing code, and in time, you will find
    a flow that works best for you. For this book, we will get started using a generally
    recommended setup. Feel free to make changes that work for you.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 编写和编辑代码有许多方法，随着时间的推移，你将找到最适合你的流程。对于这本书，我们将使用通常推荐的设置开始。请随意进行对你有用的更改。
- en: Vue.js development takes place in an environment that allows you to write code
    efficiently by highlighting correct code and helping you to catch errors before
    you save your changes. Debugging and validating code can take place in various
    stages, but for the scope of this book, we’ll use the development interface as
    well as the browser environment.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Vue.js 开发在一个环境中进行，这个环境允许你通过突出显示正确代码并帮助你捕捉在保存更改之前出现的错误来高效地编写代码。调试和验证代码可以在多个阶段进行，但在这个书籍的范围内，我们将使用开发界面以及浏览器环境。
- en: Let’s start by installing a widely adopted development interface.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从安装一个广泛使用的开发界面开始。
- en: Integrated development environment
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 集成开发环境
- en: An **Integrated Development Environment** (**IDE**) helps you write and edit
    code by supporting helpers such as syntax highlighting, formatting, and plugins
    that tie in with the framework of choice. Any modern editor will do, but in this
    book, we will use Microsoft **Visual Studio Code** (**VSCode**), which is free
    to use and provides a good developer experience; it can be downloaded from [https://code.visualstudio.com/](https://code.visualstudio.com/).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**集成开发环境**（**IDE**）通过支持语法高亮、格式化和与所选框架集成的插件等辅助工具，帮助你编写和编辑代码。任何现代编辑器都可以，但在这本书中，我们将使用微软的
    **Visual Studio Code**（**VSCode**），它是免费使用的，并提供良好的开发者体验；可以从 [https://code.visualstudio.com/](https://code.visualstudio.com/)
    下载。'
- en: 'On top of the installation of the IDE, I recommend the following plugins, which
    make the developer experience much more pleasant:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装 IDE 之后，我推荐以下插件，这些插件可以让开发者的体验变得更加愉快：
- en: '**Vue Language Features** (**Volar**): Supports the markup of Vue.js 3 snippets
    and highlighting'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Vue 语言特性**（**Volar**）：支持 Vue.js 3 片段的标记和突出显示'
- en: '**Vue Volar extension pack**: Adds some recommended plugins to help automate
    some chores while coding'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Vue Volar 扩展包**：添加一些推荐的插件，帮助在编码时自动化一些琐事'
- en: '**Better comments**: For better markup of comments in the code'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**更好的注释**：用于在代码中更好地标记注释'
- en: '**Indent-rainbow**: Applies color to indented blocks of code, to quickly identify
    levels of indentation'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缩进彩虹**：为缩进的代码块应用颜色，以快速识别缩进级别'
- en: Vue.js can be developed using many other IDEs, other IDEs, such as WebStorm,
    Sublime Text, Vim/NeoVim, and Emacs. Choose what suits you, bear in mind that
    screenshots will be shown using the recommended VSCode setup, as described earlier.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Vue.js 可以使用许多其他 IDE 进行开发，其他 IDE，如 WebStorm、Sublime Text、Vim/NeoVim 和 Emacs。选择适合你的，记住，截图将使用之前描述的推荐
    VSCode 设置进行展示。
- en: Vue.js DevTools
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Vue.js DevTools
- en: Today’s browsers come with built-in tools that allow web developers to inspect
    and manipulate the HTML, CSS, and JavaScript code of web pages, test and debug
    their code, measure page performance, and simulate various device and network
    conditions.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 今天的浏览器都内置了工具，允许网络开发者检查和操作网页的 HTML、CSS 和 JavaScript 代码，测试和调试他们的代码，测量页面性能，并模拟各种设备和网络条件。
- en: macOS users can open the DevTools using *Cmd* + *Option* + *I*. Windows or Linux
    users can use *Ctrl* + *Shift* + *I*.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: macOS 用户可以使用 *Cmd* + *Option* + *I* 打开 DevTools。Windows 或 Linux 用户可以使用 *Ctrl*
    + *Shift* + *I*。
- en: It is good to note that when you’re inspecting an element in the browser, the
    elements you will see are the elements that are rendered by Vue.js! If you inspect
    the source code of the browser, you will see just the mounting point of the app.
    This is the virtual **Document Object Model** (**DOM**) in action, and we will
    clarify that a bit later on.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，当你检查浏览器中的元素时，你将看到的元素是 Vue.js 渲染的元素！如果你检查浏览器的源代码，你将只看到应用的挂载点。这是虚拟的**文档对象模型**（**DOM**）在起作用，我们将在稍后对此进行澄清。
- en: Since Vue.js runs (typically) in a browser environment, using DevTools is a
    skill that is just as valuable as writing clean code. For Chromium-based browsers
    and Firefox, Vue.js offers a standard plugin.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Vue.js 通常在浏览器环境中运行，使用 DevTools 是一项与编写干净代码一样有价值的技能。对于基于 Chromium 的浏览器和 Firefox，Vue.js
    提供了一个标准插件。
- en: The Vue.js DevTools plugin helps you with inspecting and manipulating Vue.js
    components while they are running in the browser. This will help with pinpointing
    bugs and getting a better understanding of how the state of the app is translated
    to the **User** **Interface** (**UI**).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Vue.js DevTools 插件可以帮助你在浏览器中运行时检查和操作 Vue.js 组件。这将有助于定位错误并更好地理解应用状态是如何转换为**用户界面**（**UI**）的。
- en: Note
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'You can find more information and install the plugin here: [https://vuejs.org/guide/scaling-up/tooling.html#browser-devtools](https://vuejs.org/guide/scaling-up/tooling.html#browser-devtools).'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在此处找到更多信息并安装插件：[https://vuejs.org/guide/scaling-up/tooling.html#browser-devtools](https://vuejs.org/guide/scaling-up/tooling.html#browser-devtools)。
- en: We will take an in-depth look at the Vue.js DevTools at a later stage. At this
    point, we’ve met all of the requirements of starting out with any Vue.js app,
    either small or large scale. They all meet the same basic requirements.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在稍后的阶段深入探讨 Vue.js DevTools。到目前为止，我们已经满足了启动任何规模（无论是小型还是大型）的 Vue.js 应用的所有要求。它们都满足相同的基本要求。
- en: At this point you must be eager to dive in and start with the first project,
    so let’s create a small app to familiarize ourselves with development.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你可能已经迫不及待地想要开始第一个项目了，所以让我们创建一个小型应用来熟悉开发过程。
- en: My first app
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我的第一款应用
- en: Let’s put our acquired tools and knowledge to the test by creating our very
    first Vue.js application, shall we?
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过创建我们的第一个 Vue.js 应用来检验我们所获得的工具和知识，怎么样？
- en: 'You would usually start by opening your CLI and navigating to a folder where
    you want to start your projects. Typing the following command creates a new empty
    project using the official `create-vue` tool:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 你通常会先打开 CLI 并导航到你想要开始项目的文件夹。输入以下命令将使用官方的 `create-vue` 工具创建一个新的空项目：
- en: '[PRE2]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Hit *y* to proceed, choose `my-first-vue` as the project name, and select the
    options shown in the following figure:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 按 *y* 继续操作，将 `my-first-vue` 作为项目名称，并选择以下图中显示的选项：
- en: '![Figure 1.1 – Using the Vue CLI to scaffold out an app with presets](img/B19563_01_01.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.1 – 使用 Vue CLI 使用预设搭建应用](img/B19563_01_01.jpg)'
- en: Figure 1.1 – Using the Vue CLI to scaffold out an app with presets
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.1 – 使用 Vue CLI 使用预设搭建应用
- en: We’ve selected TypeScript as a superset of JavaScript, which adds static typing.
    We’ve also enabled ESLint and Prettier. ESLint checks for syntax errors, formatting
    issues, and code style inconsistencies, and can even integrate with your IDE to
    visually mark problematic code. Prettier is used to enforce a consistent code
    style. These three options enhance the developer experience by highlighting potential
    issues before you run your code.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们选择了 TypeScript 作为 JavaScript 的超集，它增加了静态类型。我们还启用了 ESLint 和 Prettier。ESLint
    检查语法错误、格式问题和代码风格不一致，甚至可以与你的 IDE 集成，以视觉方式标记有问题的代码。Prettier 用于强制执行一致的代码风格。这三个选项通过在运行代码之前突出显示潜在问题来增强开发者的体验。
- en: Then, following the instructions, you can move into the created folder and type
    `npm install` to install the required dependencies. This will download the required
    package files from the `npm` registry and install them in the `node_modules` subfolder
    of your project.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，按照说明，你可以进入创建的文件夹，并输入 `npm install` 来安装所需的依赖项。这将从 `npm` 注册表中下载所需的包文件，并将它们安装到项目的
    `node_modules` 子文件夹中。
- en: If you run `npm run dev` the project will spin up a development server, which
    you can access with your browser. Usually, the local address will be something
    similar to `http://127.0.0.1:5173/`.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你运行 `npm run dev`，项目将启动一个开发服务器，你可以通过浏览器访问它。通常，本地地址将类似于 `http://127.0.0.1:5173/`。
- en: If you open that URL in the browser, you should see your first Vue.js application!
    The default is an empty starter that holds many of the pointers and links that
    we’ve already covered at this point, but it is a good starting point for any developer
    starting with Vue.js.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在这个浏览器中打开那个 URL，你应该能看到你的第一个 Vue.js 应用程序！默认情况下是一个空的起始项目，其中包含了许多我们到目前为止已经覆盖的指针和链接，但对于任何开始使用
    Vue.js 的开发者来说，这是一个很好的起点。
- en: '![Figure 1.2 – Your very first Vue.js app!](img/B19563_01_02.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.2 – 你的第一个 Vue.js 应用程序！](img/B19563_01_02.jpg)'
- en: Figure 1.2 – Your very first Vue.js app!
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.2 – 你的第一个 Vue.js 应用程序！
- en: With successful installation, we can take a closer look at what has actually
    been installed. Let’s dive into the installation files!
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在成功安装后，我们可以更仔细地看看实际上安装了什么。让我们深入了解安装文件！
- en: The project in the IDE
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 IDE 中的项目
- en: 'Now, if you open up the project in your IDE of choice, you will notice a predetermined
    structure. This will be applicable to all the projects that are scaffolded out
    this way. Let’s take a quick look at the structure:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果你在你选择的 IDE 中打开项目，你会注意到一个预定的结构。这适用于所有以这种方式构建的项目。让我们快速看一下结构：
- en: '![Figure 1.3 – The expanded folder structure of the starter app](img/B19563_01_03.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.3 – 起始应用的展开文件夹结构](img/B19563_01_03.jpg)'
- en: Figure 1.3 – The expanded folder structure of the starter app
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.3 – 起始应用的展开文件夹结构
- en: At the root of the project, you’ll find different types of files that are specific
    to configuring the project. The main files here are `index.html` and `package.json`.
    The `index.html` file is the entry point of the app. It is a lightweight HTML
    template with a `div` element that has the `id` app will be the mounting point
    of the application.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在项目的根目录下，你会找到一些特定于配置项目的文件类型。这里的主要文件是 `index.html` 和 `package.json`。`index.html`
    文件是应用的入口点。它是一个轻量级的 HTML 模板，包含一个 `div` 元素，该元素的 `id` 将成为应用的挂载点。
- en: The `package.json` file is a file that describes the project as a package, defines
    node scripts that can be executed, and also holds the references to all packages
    that the project depends on. The `node_modules` folder is the folder that holds
    all of the installed packages from the `package.json` file. This can be considered
    a read-only folder for our purposes.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '`package.json` 文件是一个描述项目作为包的文件，定义了可以执行的节点脚本，并包含了项目所依赖的所有包的引用。`node_modules`
    文件夹是包含从 `package.json` 文件中安装的所有包的文件夹。从这个目的来看，它可以被认为是一个只读文件夹。'
- en: Then we have the `public` and `src` folders. The `public` folder contains static
    assets, such as fonts, images, and icons that do not have to be processed by the
    build system. In the starter project, you will find a default `favicon.ico` present.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们有 `public` 和 `src` 文件夹。`public` 文件夹包含静态资源，如字体、图像和图标，这些资源不需要由构建系统处理。在起始项目中，你会找到一个默认的
    `favicon.ico`。
- en: Lastly, the `src` (short for source) folder is the folder in which we will be
    making the most changes. It contains two root files at this point. The `main.ts`
    file registers the Vue application and the styles and mounts it to the HTML template.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，`src`（代表源文件）文件夹是我们将进行最多更改的文件夹。目前它包含两个根文件。`main.ts` 文件注册 Vue 应用程序并应用样式，并将其挂载到
    HTML 模板上。
- en: The `App.vue` file is the entry point of the Vue.js application. If you open
    it, you might find some familiar syntaxes mixed in a single file, such as script
    tags, HTML, and CSS. We will get to that later.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '`App.vue` 文件是 Vue.js 应用的入口点。如果你打开它，你可能会在单个文件中找到一些熟悉的语法混合，例如脚本标签、HTML 和 CSS。我们稍后会详细介绍。'
- en: It also contains an `assets` folder similar to the `public` folder, with the
    difference that these folders can and will be processed by the build system. And
    finally, there is the `components` folder, where you can place the components
    that make up the application. If you adopt Single File Components, each will fulfill
    a specific role and encapsulate the template, script, and styles. You can already
    see a couple of components, which make up the default starting page.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 它还包含一个与`public`文件夹类似的`assets`文件夹，不同之处在于这些文件夹可以被并且将被构建系统处理。最后，还有`components`文件夹，你可以将构成应用程序的组件放在这里。如果你采用单文件组件，每个组件都将承担特定的角色，并封装模板、脚本和样式。你已经开始看到一些组件，它们构成了默认的起始页面。
- en: Your first coding steps
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 您的第一步编码
- en: 'Let’s create the first component and add it to the app:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建第一个组件并将其添加到应用程序中：
- en: Create a new file in the `components` folder called `MyFirst.vue`.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`components`文件夹中创建一个名为`MyFirst.vue`的新文件。
- en: A Vue.js component is preferably named using at least two camel-cased words
    and typically consists of a `script`, `template`, and `style` block. None of these
    are mandatory (although a `style` block without context would be of little value).
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Vue.js组件最好使用至少两个驼峰式命名的单词来命名，通常由`script`、`template`和`style`块组成。这些都不是强制性的（尽管没有上下文的话，`style`块几乎没有价值）。
- en: 'Let’s create a small HTML snippet:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们创建一个小HTML片段：
- en: '[PRE3]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'In `App.vue`, you can use this as a Vue.js component already! If you open it
    up, you will see a `script` tag with `import` statements. You can remove the `TheWelcome`
    import line and replace it with this:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`App.vue`中，你可以将其作为Vue.js组件使用！如果你打开它，你会看到一个带有`import`语句的`script`标签。你可以移除`TheWelcome`导入行，并用以下内容替换它：
- en: '[PRE4]'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Next, in the `template` tag, you can remove the `<TheWelcome />` HTML-like tag
    and replace it with the `<MyFirst />` HTML notation.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在`template`标签中，你可以移除类似HTML的`<TheWelcome />`标签，并用`<MyFirst />`HTML标记替换它。
- en: If you were still running the code, you would have noticed that the browser
    updated itself to reflect the changes. This is called hot reloading and makes
    for a smooth development flow. If you have stopped the process, you can restart
    it and revisit the page in the browser.
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你仍在运行代码，你会注意到浏览器已经更新了自己以反映这些更改。这被称为热重载，使得开发流程更加顺畅。如果你已经停止了进程，你可以重新启动它，并在浏览器中重新访问页面。
- en: You should see the component that you’ve created!
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该能看到你创建的组件！
- en: 'Let’s add a styling block to add some CSS to the component and see the hot
    reloading in action. In the `MyFirst.vue` file, add the following code below the
    `template` block:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们在组件中添加一个样式块，添加一些CSS，并查看热重载的效果。在`MyFirst.vue`文件中，在`template`块下方添加以下代码：
- en: '[PRE5]'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The contents of the style block will be processed like a normal CSS file. The
    `scoped` attribute means that the `div` and `span` style definitions are scoped
    down to only this component. Vue adds a unique data attribute to the virtual DOM
    and attaches the CSS rules to that attribute. In `App.vue`, you can see that global
    styles are also supported.
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样式块的内容将被像正常CSS文件一样处理。`scoped`属性意味着`div`和`span`样式定义仅限于这个组件。Vue会给虚拟DOM添加一个唯一的数据属性，并将CSS规则附加到该属性。在`App.vue`中，你可以看到也支持全局样式。
- en: In the browser, you will see the component update itself with the new styling!
    Now that we’re familiar with the development environment, we’ll start to create
    a more interactive component in the next chapter.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器中，你会看到组件自己更新以应用新的样式！现在我们已经熟悉了开发环境，我们将在下一章开始创建一个更具交互性的组件。
- en: Summary
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: At this point, you are ready to get started with Vue.js development. We’ve worked
    on setting up our local environment, and we used the recommended way of scaffolding
    out a new starter project.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你已经准备好开始使用Vue.js进行开发了。我们已经完成了本地环境的设置，并使用了推荐的脚手架方式来创建一个新的起始项目。
- en: In the next chapter, we’ll take a closer look at some of the Vue.js concepts
    (such as reactivity) and learn to inspect our app using official tools. Each lesson
    will introduce new concepts to apply in development.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将更详细地探讨一些Vue.js概念（例如响应性），并学习使用官方工具检查我们的应用程序。每一课都将介绍在开发中应用的新概念。
