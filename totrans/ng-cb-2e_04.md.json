["```js\n    npm run serve ng-basic-animation \n    ```", "```js\n    ...\n    **import** **{ provideAnimations }** **from****'@angular/platform-browser/animations'****;** \n    export const appConfig: ApplicationConfig = {\n      providers: [\n        provideRouter(appRoutes, withEnabledBlockingInitialNavigation())**,**\n    **provideAnimations****()**\n      ],\n    }; \n    ```", "```js\n    ...\n    **import** **{ trigger, transition, style, animate }** **from****'@angular/animations'****;**\n    @Component({\n      ...\n      imports: [CommonModule, FbCardComponent,\n        TwitterCardComponent],\n      **animations****: [**\n    **trigger****(****'fadeInOut'****, [**\n    **transition****(****':enter'****, [**\n    **style****({** **opacity****:** **0****,** **scale****:** **0.85** **}),**\n    **animate****(****'200ms 100ms'****,** **style****({** **opacity****:** **1****,**\n    **scale****:** **1** **})),**\n    **]),**\n    **transition****(****':leave'****, [** \n    **style****({** **opacity****:** **1****,** **scale****:** **1** **}),** \n    **animate****(****'100ms'****,** **style****({** **opacity****:** **0****,** **scale****:** **0.85** **})),**\n    **]),**\n    **]),**\n    **],** \n    })\n    ... \n    ```", "```js\n     <!-- Toolbar -->\n    <div class=\"toolbar\" role=\"banner\">...</div>\n    <main class=\"content\" role=\"main\">\n    <div class=\"type-picker mb-8\">...</div>\n    <ng-container [ngSwitch]=\"selectedCardType\">\n    <app-fb-card **[@****fadeInOut****]**\n    *ngSwitchCase=\"'facebook'\"></app-fb-card>\n    <app-twitter-card **[@****fadeInOut****]**\n     *ngSwitchCase=\"'twitter'\"></app-twitter-card>\n    </ng-container>\n    </main>} \n    ```", "```js\n    @keyframes fadeIn {\n      0% { opacity: 0; transform: scale(0.85); }\n      100% { opacity: 1; transform: scale(1); }\n    }\n    @keyframes fadeOut {\n      0% { opacity: 1; transform: scale(1); }\n      100% { opacity: 0; transform: scale(0.85); }\n    } \n    ```", "```js\n    /* For elements that are entering */\n    .fade-in {\n      animation: fadeIn 200ms 100ms forwards;\n    }\n\n    /* For elements that are leaving */\n    .fade-out {\n      animation: fadeOut 100ms forwards;\n    } \n    ```", "```js\n    npm run serve ng-multi-state-animations \n    ```", "```js\n    import { Component, **HostListener**} from '@angular/core';\n    ...\n    @Component({...})\n    export class FbCardComponent {\n      **cardState****:** **'active'** **|** **'hovered'** **=** **'active'****;**\n    **@****HostListener****(****'mouseenter'****)**\n    **onMouseEnter****() {**\n    **this****.****cardState** **=** **'hovered'****;**\n    **}**\n    **@****HostListener****(****'mouseleave'****)**\n    **onMouseLeave****() {**\n    **this****.****cardState** **=** **'active'****;**\n    **}**\n    } \n    ```", "```js\n    import { Component, **HostListener**} from '@angular/core';\n    ...\n    @Component({...})\n    export class TwitterCardComponent {\n      **cardState****:** **'active'** **|** **'hovered'** **=** **'active'****;**\n    **@****HostListener****(****'mouseenter'****)** \n    **onMouseEnter****() {** \n    **this****.****cardState** **=** **'hovered'****;** \n    **}** \n    **@****HostListener****(****'mouseleave'****)** \n    **onMouseLeave****() {** \n    **this****.****cardState** **=** **'active'****;** \n    **}**\n    } \n    ```", "```js\n    ...\n    export const cardAnimation = trigger('cardAnimation', [\n      state('active', style({\n        color: 'rgb(51, 51, 51)',\n        backgroundColor: 'white'\n      })),\n      **state****(****'hovered'****,** **style****({**\n    **transform****:** **'scale3d(1.05, 1.05, 1.05)'****,**\n    **backgroundColor****:** **'#333'****,**\n    **color****:** **'white'**\n    **})),**\n    transition('void => active', [...]),\n    ]) \n    ```", "```js\n    ...\n    export const cardAnimation = trigger('cardAnimation', [\n      state('active', style(...)),\n      state('hovered', style(...)),\n      transition('void => active', [...]),\n      **transition****(****'active => hovered'****, [**\n    **animate****(****'0.3s 0s ease-out'****,** **style****({**\n    **transform****:** **'scale3d(1.05, 1.05, 1.05)'****,**\n    **backgroundColor****:** **'#333'****,**\n    **color****:** **'white'**\n    **}))**\n    **]),**\n    ]) \n    ```", "```js\n    ...\n    export const cardAnimation = trigger('cardAnimation', [\n      state('active', style(...)),\n      state('hovered', style(...)),\n      transition('void => active', [...]),\n      transition('active => hovered', [...]),\n      **transition****(****'hovered => active'****, [**\n    **animate****(****'0.3s 0s ease-out'****,** **style****({**\n    **transform****:** **'scale3d(1, 1, 1)'****,**\n    **color****:** **'rgb(51, 51, 51)'****,**\n    **backgroundColor****:** **'white'**\n    **}))**\n    **]),**\n    ]) \n    ```", "```js\n<div [@animationTriggerName]=\"expression\">...</div>; \n```", "```js\n    npm run serve ng-animations-keyframes \n    ```", "```js\n    import {\n      ...,\n      keyframes\n    } from '@angular/animations';\n    ... \n    ```", "```js\n    ...\n    export const cardAnimation = trigger('cardAnimation', [\n      ...,\n      transition('void => *', [\n        style({ // ← Remove this style\n    transform: 'translateX(-200px)',\n          opacity: 0\n        }),\n        animate('0.2s ease', **keyframes****([**\n    **style****({**\n    **transform****:** **'translateX(-200px)'****,**\n    **offset****:** **0**\n    **}),**\n    **style****({**\n    **transform****:** **'translateX(0)'****,**\n    **offset****:** **1**\n    **})**\n    **]))**\n      ]),\n    ]) \n    ```", "```js\n    ...\n    export const cardAnimation = trigger('cardAnimation', [\n      transition('void => active', [\n        animate('**1.5s** ease', keyframes([\n          style({\n            transform: 'translateX(-200px)\n    **scale3d(0.4,0.4,0.4)**',\n            offset: 0\n          }),\n          style({...})\n        ]))\n      ]),\n    ]) \n    ```", "```js\n    ...\n    export const cardAnimation = trigger('cardAnimation', [\n      transition('void => *', [\n        animate('1.5s 0s ease', keyframes([\n          style({\n            transform: 'translateX(-200px)\n    scale3d(0.4,0.4,0.4)',\n            offset: 0\n          }),\n          **style****({**\n    **transform****:** **'translateX(0px) rotate(-90deg)**\n    **scale3d(0.5, 0.5, 0.5)'****,**\n    **offset****:** **0.25**\n    **}),**\n    **style****({**\n    **transform****:** **'translateX(-200px) rotate(90deg)**\n    **translateY(0) scale3d(0.6, 0.6, 0.6)'****,**\n    **offset****:** **0.5**\n    **}),**\n    style({\n            transform: 'translateX(0)',\n            offset: 1\n          })\n        ]))\n      ]),\n    ]) \n    ```", "```js\n    ...\n    export const cardAnimation = trigger('cardAnimation', [\n      transition('void => *', [\n        animate('1.5s 0s ease', keyframes([\n          style({...}),\n          style({...}),\n          style({...}),\n          **style****({**\n    **transform****:** **'translateX(-100px) rotate(135deg)**\n    **translateY(0) scale3d(0.6, 0.6, 0.6)'****,**\n    **offset****:** **0.75**\n    **}),**\n    style({...})\n        ]))\n      ]),\n    ]) \n    ```", "```js\n    npm run serve ng-animating-lists \n    ```", "```js\n    ...\n    **import** **{ provideAnimations }** **from****'@angular/platform-browser/animations'****;**\n    import { appRoutes } from './app.routes';\n    export const appConfig: ApplicationConfig = {\n      providers: [\n        provideRouter(appRoutes,\n          withEnabledBlockingInitialNavigation()),\n        **provideAnimations****()**\n      ], \n    ```", "```js\n    import { trigger, style, animate, transition } from '@angular/animations';\n    export const ANIMATIONS = {\n      LIST_ITEM_ANIMATION: trigger('listItemAnimation', [\n        transition(':enter', [\n          style({ opacity: 0 }),\n          animate('0.5s ease', style({ opacity: 1 })),\n        ]),\n        transition(':leave', [\n          style({ opacity: 1 }),\n          animate('0.5s ease', style({ opacity: 0 })),\n        ]),\n      ]),\n    }; \n    ```", "```js\n    ...\n    **import** **{** **ANIMATIONS** **}** **from****'../../../constants/animations'****;**\n    @Component({\n      ...\n      **animations****: [****ANIMATIONS****.****LIST_ITEM_ANIMATION****]**\n    }) \n    ```", "```js\n    <div class=\"fruits__item\" *ngFor=\"let item of bucket\"\n     **@****listItemAnimation**>\n      ...\n    </div> \n    ```", "```js\n    import {\n      ...,\n      **stagger,**\n    } from '@angular/animations';\n    export const ANIMATIONS = {\n      LIST_ITEM_ANIMATION: trigger('listItemAnimation', [\n        **transition****(****'* <=> *'****, [**\n    **// we'll add more code here**\n    **]),**\n      ]),\n    }; \n    ```", "```js\n    import { trigger, style, animate, transition, stagger, **query** } from '@angular/animations';\n    export const ANIMATIONS = {\n      LIST_ITEM_ANIMATION: trigger('listItemAnimation', [\n        transition('* <=> *', [\n          **query****(**\n    **':enter'****,**\n    **[**\n    **style****({** **opacity****:** **0** **}),**\n    **stagger****(****100****, [**\n    **animate****(****'0.5s ease'****,** **style****({** **opacity****:** **1** **}))**\n    **]),**\n    **],**\n    **{** **optional****:** **true** **}**\n    **),**\n        ]),\n      ]),\n    }; \n    ```", "```js\n    export const ANIMATIONS = {\n      LIST_ITEM_ANIMATION: trigger('listItemAnimation', [\n        transition('* <=> *', [\n          query(':enter', [...],\n            { optional: true }\n          ),\n          **query****(**\n    **':leave'****,**\n    **[**\n    **style****({** **opacity****:** **1** **}),**\n    **animate****(****'0.5s ease'****,** **style****({** **opacity****:** **0** **}))**\n    **],**\n    **{** **optional****:** **true** **}**\n    **),**\n        ]),\n      ]),\n    }; \n    ```", "```js\n     ...\n      <div class=\"fruits\" *ngIf=\"$bucket | async as bucket\"\n    **[@****listItemAnimation****]=****\"bucket.length\"**>\n        ...\n    </div>\n    ... \n    ```", "```js\n    npm run serve ng-seq-parallel-animations \n    ```", "```js\n    ...\n    **import** **{ provideAnimations }** **from****'@angular/platform-browser/animations'****;**\n    export const appConfig: ApplicationConfig = {\n      providers: [\n        provideRouter(appRoutes,\n          withEnabledBlockingInitialNavigation())**,**\n    **provideAnimations****()**\n      ],\n    }; \n    ```", "```js\n    import { trigger, style, transition, animate, query, group, keyframes } from '@angular/animations';\n    const duration = '1.5s';\n    export const cardAnimation = trigger('cardAnimation', [\n      transition('* <=> *', [\n        // more code here later\n      ]),\n    ]); \n    ```", "```js\n    export const cardAnimation = trigger('cardAnimation', [\n      transition('* <=> *', [\n         **query****(** **':leave'****, [**\n    **style****({** **transform****:** **'translateX(0)'****,** **opacity****:** **1** **}),**\n    **animate****(** **`****${duration}** **ease`****,** **style****({**\n    **transform****:** **'translateX(100%)'****,**\n    **})**\n    **),**\n    **animate****(** **`****${duration}** **ease`****,** **style****({**\n    **opacity****:** **0****,**\n    **})**\n    **),**\n    **],**\n    **{** **optional****:** **true** **}**\n    **)**\n      ]),\n    ]); \n    ```", "```js\n    ...\n    **import** **{ cardAnimation }** **from****'./animation'****;**\n    ...\n    @Component({\n      ...\n      **animations****: [cardAnimation],**\n      ...\n    })\n    export class AppComponent {...} \n    ```", "```js\n    ...\n    <main>\n      …\n      <div class=\"card-container relative h-[600px] w-full \n    overflow-hidden py-4\" \n    **[@****cardAnimation****]=****\"selectedCardType\"**>\n        ...\n      </div>\n    </main> \n    ```", "```js\n    ...\n    export const cardAnimation = trigger('cardAnimation', [\n      transition('* <=> *', [\n        **query****(****':enter'****, [**\n    **style****({** **opacity****:** **0** **}),**\n    **]),**\n    query( ':leave', [\n          ...\n        ]),\n    ]); \n    ```", "```js\n    ...\n    export const cardAnimation = trigger('cardAnimation', [\n      transition('* <=> *', [    query(':enter', [...]),\n        query(':leave', [...]),\n        **query****(** **':enter'****, [**\n    **style****({**\n    **transform****:** **'translateX(-100%)'****,**\n    **opacity****:** **0****,**\n    **}),**\n    **animate****(** **`****${duration}** **ease`****,** **style****({**\n    **transform****:** **'translateX(0)'****,**\n    **opacity****:** **1****,**\n    **})**\n    **),**\n    **],**\n    **{** **optional****:** **true** **}**\n    **),**\n      ]),\n    ]); \n    ```", "```js\n    import { ..., **group** } from '@angular/animations';\n    export const cardAnimation = trigger('cardAnimation', [\n      transition('* <=> *', [\n        query(':enter', [...]),\n        **group****([**\n    query( ':leave', [...], { optional: true }),\n          query(':enter', [...], { optional: true }),\n        **]),**\n      ]),\n    ]); \n    ```", "```js\n    npm run serve ng-route-animations \n    ```", "```js\n    ...\n    **import** **{ provideAnimations }** **from****'@angular/platform-browser/animations'****;** \n    export const appConfig: ApplicationConfig = {\n      providers: [\n        provideRouter(appRoutes,\n          withEnabledBlockingInitialNavigation())**,**\n    **provideAnimations****()**\n      ],\n    }; \n    ```", "```js\n    import {trigger,  transition } from '@angular/animations';\n    export const ROUTE_ANIMATION = trigger('routeAnimation', [\n      transition('* <=> *', [\n        // states and transitions to be added here\n      ])\n    ]); \n    ```", "```js\n    import { trigger, transition, **style**, **query** } from '@angular/animations';\n    **const** **optional = {** **optional****:** **true** **};**\n    export const ROUTE_ANIMATION = trigger('routeAnimation', [\n      transition('* <=> *', [\n        **style****({** **position****:** **'relative'****,**\n    **perspective****:** **'1000px'** **}),**\n    **query****(**\n    **':enter, :leave'****,**\n    **[****style****({** **position****:** **'absolute'****,** **width****:** **'100%'** **})],**\n    **optional**\n    **),**\n      ]),\n    ]); \n    ```", "```js\n    export const appRoutes: Route[] = [\n      ...,\n      {\n        path: 'home',\n       **data****: {** **transitionState****:** **'HomePage'** **},**\n    loadComponent: () =>\n    import('./home/home.component').then(\n            (m) => m.HomeComponent),\n      },\n      {\n        path: 'about',\n        **data****: {** **transitionState****:** **'****AboutPage'** **},**\n    loadComponent: () =>\n    import('./about/about.component').then(\n            (m) => m.AboutComponent),\n      },\n    ]; \n    ```", "```js\n    import { CommonModule } from '@angular/common';\n    import { Component, **ViewChild**} from '@angular/core';\n    import { RouterModule, **RouterOutlet**} from '@angular/router';\n    export class AppComponent {\n      **@****ViewChild****(****RouterOutlet****) routerOutlet!:** **RouterOutlet****;**\n    } \n    ```", "```js\n    ...\n    **import** **{** **ROUTE_ANIMATION** **}** **from****'./animations'****;**\n    @Component({\n      selector: \"app-root\",\n      templateUrl: \"./app.component.html\",\n      styleUrls: [\"./app.component.scss\"],\n      **animations****: [**\n    **ROUTE_ANIMATION**\n    **]**\n    }) \n    ```", "```js\n    ...\n    @Component({\n    ...\n    })\n    export class AppComponent {\n      @ViewChild(RouterOutlet) routerOutlet!: RouterOutlet;\n      **getRouteAnimationState****() {**\n    **return** **(**\n    **this****.****routerOutlet** **&&**\n    **this****.****routerOutlet****.****activatedRouteData** **&&**\n    **this****.****routerOutlet****.****activatedRouteData****[****'transitionState'****]**\n    **);**\n    **}**\n    } \n    ```", "```js\n    ...\n    <div class=\"content\" role=\"main\">\n    <div class=\"router-container\"\n     **[@****routeAnimation****]=****\"getRouteAnimationState()\"**>\n    <router-outlet></router-outlet>\n    </div>\n    </div> \n    ```", "```js\n    import { trigger, style, transition, query, **animate, keyframes** } from '@angular/animations';\n    ...\n    export const ROUTE_ANIMATION = trigger('routeAnimation', [\n      transition('* <=> *', [\n        style({ position: 'relative', perspective: '1000px' }),\n        query( ':enter, :leave', [...] ,optional),\n        **query****(** **':leave'****, [**\n    **animate****(** **'1s ease-in'****,** **keyframes****([**\n    **style****({** **opacity****:** **1****,** **offset****:** **0****,**\n    **transform****:** **'rotateY(0) translateX(0)**\n    **translateZ(0)'****,**\n    **}),**\n    **style****({** **offset****:** **0.25****,** **transform****:**\n    **'rotateY(45deg) translateX(25%)**\n    **translateZ(100px) translateY(5%)'****,**\n    **}),**\n    **style****({** **offset****:** **0.5****,** **transform****:**\n    **'rotateY(90deg) translateX(75%)**\n    **translateZ(400px) translateY(10%)'****,**\n    **}),**\n    **style****({** **offset****:** **0.75****,** **transform****:**\n    **'rotateY(135deg) translateX(75%)**\n    **translateZ(800px) translateY(15%)'****,**\n    **}),**\n    **style****({** **opacity****:** **0****,** **offset****:** **1****,** **transform****:**\n    **'rotateY(180deg) translateX(0)**\n    **translateZ(1200px) translateY(25%)'****,**\n    **}),**\n    **])**\n    **),**\n    **],**\n    **optional**\n    **),**\n      ]),\n    ]); \n    ```", "```js\n    ...\n    export const ROUTE_ANIMATION = trigger('routeAnimation', [\n      transition('* <=> *', [\n        style({ position: 'relative', perspective: '1000px' }),\n        query(':enter, :leave', ...),\n        query(':leave', ...),\n        **query****(** **':enter'****, [**\n    **animate****(** **'****1s ease-out'****,** **keyframes****([**\n    **style****({** **opacity****:** **0****,** **offset****:** **0****,** **transform****:**\n    **'rotateY(180deg) translateX(25%)** **translateZ(1200px)'****,**\n    **}),**\n    **style****({** **offset****:** **0.25****,** **transform****:**\n    **'rotateY(225deg) translateX(-25%) translateZ(1200px)'****,**\n    **}),**\n    **style****({** **offset****:** **0.5****,** **transform****:**\n    **'rotateY(270deg) translateX(-50%) translateZ(400px)'****,**\n    **}),**\n    **style****({** **offset****:** **0.75****,** **transform****:**\n    **'rotateY(315deg) translateX(-50%) translateZ(25px)'****,**\n    **}),**\n    **style****({** **opacity****:** **1****,** **offset****:** **1****,** **transform****:**\n    **'rotateY(360deg) translateX(0) translateZ(0)'****,**\n    **}),**\n    **])**\n    **),**\n    **],**\n    **optional**\n    **),**\n      ]),\n    ]); \n    ```", "```js\n    import {..., **group** } from '@angular/animations';\n    export const ROUTE_ANIMATION = trigger('routeAnimation', [\n      transition('* <=> *', [\n        style({ position: 'relative', perspective: '1000px' }),\n        query( ':enter, :leave', ...),\n        **group****([**\n    query( ':leave', [...], optional ),\n          query( ':enter', [...], optional),\n        **]),**\n      ]),\n    ]); \n    ```", "```js\ntransition('* <=> *', [\n    **style****({**\n**position****:** **'relative'**\n**}),**\n    ...\n]) \n```", "```js\n query(':enter, :leave', [\n      style({\n        **position****:** **'absolute'****,**\nwidth: '100%'\n      })\n    ], {optional: true}), \n```", "```js\n query(':leave', [\n      ...\n    ], {optional: true}),\n    query(':enter', [\n      ...\n    ], {optional: true}), \n```", "```js\n    npm run serve ng-disable-animations \n    ```", "```js\n    ...\n    export interface IEmployeeConfig {\n      canDeleteItems: boolean;\n    **disableAnimations****: boolean;**\n    }\n    ...\n    export const employeeConfig: IEmployeeConfig = {\n      canDeleteItems: true,\n      **disableAnimations****:** **false**\n    };\n    ... \n    ```", "```js\n    import { IEmployeeConfig } from '../app.config';\n\n    export const employeeConfig: IEmployeeConfig = {\n      canDeleteItems: false,\n      **disableAnimations****:** **true**\n    }; \n    ```", "```js\n    import { CommonModule } from '@angular/common';\n    import { Component, inject, OnInit, **HostBinding** } from '@angular/core';\n    ...\n    @Component({...})\n    export class BucketComponent implements OnInit {\n      ...\n      fruits: string[] = Object.values(Fruit);\n      **@****HostBinding****(****'@.disabled'****)**\n    **animationsDisabled =** **this****.****appConfig****.****disableAnimations****;**\n    ngOnInit(): void {...}\n            ...\n    } \n    ```"]