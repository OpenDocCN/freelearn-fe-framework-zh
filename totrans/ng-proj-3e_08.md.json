["```js\nnpm install -g nx \n```", "```js\nnpx create-nx-workspace packt --appName=tour --preset=angular-monorepo --style=css --linter=eslint --nx-cloud=false --routing \n```", "```js\nnpm install @angular/material \n```", "```js\nnx generate @angular/material:ng-add --project=tour --theme=deeppurple-amber --animations=enabled --typography \n```", "```js\n    export const appRoutes: Route[] = [\n      **{**\n    **path****:** **'tour'****,**\n    **loadChildren****:** **() =>****import****(****'@packt/visitor'****).****then****(****m** **=>** **m.****VisitorModule****)**\n     **},**\n     **{**\n    **path****:** **''****,**\n    **pathMatch****:** **'full'****,**\n    **redirectTo****:** **'****tour'**\n     **}**\n    ]; \n    ```", "```js\n    import { NgModule } from '@angular/core';\n    import { CommonModule } from '@angular/common';\n    import { VisitorComponent } from './visitor.component';\n    import { MatToolbarModule } from '@angular/material/toolbar';\n    import { MatButtonModule } from '@angular/material/button';\n    import { MatSidenavModule } from '@angular/material/sidenav';\n    import { MatIconModule } from '@angular/material/icon';\n    import { MatListModule } from '@angular/material/list';\n    **import** **{** **RouterModule** **}** **from****'@angular/router'****;**\n    @NgModule({\n      imports: [CommonModule, MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule,\n        **RouterModule****.****forChild****([**\n     **{** **path****:** **''****,** **component****:** **VisitorComponent** **}**\n     **])**\n      ],\n      declarations: [\n        VisitorComponent\n      ],\n    })\n    export class VisitorModule {} \n    ```", "```js\n    export const appRoutes: Route[] = [\n      **{**\n    **path****:** **'****admin'****,**\n    **loadChildren****:** **() =>****import****(****'@packt/admin'****).****then****(****m** **=>** **m.****AdminModule****)**\n     **}**,\n      {\n        path: 'tour',\n        loadChildren: () => import('@packt/visitor').then(m => m.VisitorModule)\n      },\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'tour'\n      }\n    ]; \n    ```", "```js\n    import { NgModule } from '@angular/core';\n    import { CommonModule } from '@angular/common';\n    import { AdminComponent } from './admin.component';\n    **import** **{** **RouterModule** **}** **from****'@angular/router'****;**\n    @NgModule({\n      imports: [\n        CommonModule,\n        **RouterModule****.****forChild****([**\n     **{** **path****:** **''****,** **component****:** **AdminComponent** **}**\n     **])**\n      ],\n      declarations: [\n        AdminComponent\n      ],\n    })\n    export class AdminModule {} \n    ```", "```js\nnx generate @nx/angular:ngrx app --root --no-interactive --parent=apps/tour/src/app/app.module.ts \n```", "```js\nnx generate @nrwl/angular:library poi \n```", "```js\nnx generate @nx/angular:ngrx poi --no-interactive --parent=libs/poi/src/lib/poi.module.ts --barrels \n```", "```js\n    export interface PoiEntity {\n      id: string | number; // Primary ID\n      name: string;\n      **lat****:** **number****;**\n    **lng****:** **number****;**\n    **description****:** **string****;**\n    **imgUrl****:** **string****;**\n    } \n    ```", "```js\n    nx generate service poi --project=poi \n    ```", "```js\n    import { HttpClient } from '@angular/common/http';\n    import { Observable } from 'rxjs';\n    import { PoiEntity } from '..'; \n    ```", "```js\n    export class PoiService {\n      constructor(**private** **http: HttpClient**) {}\n      **getAll****():** **Observable****<****PoiEntity****[]> {**\n    **return****this****.****http****.****get****<****PoiEntity****[]>(****'assets/poi.json'****);**\n     **}**\n    } \n    ```", "```js\n    import { Injectable, inject } from '@angular/core';\n    import { createEffect, Actions, ofType } from '@ngrx/effects';\n    import { switchMap, catchError, of, `map` } from 'rxjs';\n    import * as PoiActions from './poi.actions';\n    import * as PoiFeature from './poi.reducer';\n    `import { PoiService } from '../poi.service';` \n    ```", "```js\n    private poiService = inject(PoiService); \n    ```", "```js\n    init$ = createEffect(() =>\n      this.actions$.pipe(\n        ofType(PoiActions.initPoi),\n    **switchMap****(****() =>****this****.****poiService****.****getAll****()),**\n        switchMap(pois => of(PoiActions.loadPoiSuccess({ poi: **pois** }))),\n        catchError((error) => {\n          console.error('Error', error);\n          return of(PoiActions.loadPoiFailure({ error }));\n        })\n      )\n    ); \n    ```", "```js\n    import { PoiModule } from '@packt/poi'; \n    ```", "```js\n    @NgModule({\n      imports: [CommonModule, MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule,\n        RouterModule.forChild([\n          { path: '', component: VisitorComponent }\n        ]),\n        **PoiModule**\n      ],\n      declarations: [\n        VisitorComponent\n      ],\n    }) \n    ```", "```js\n    nx generate @schematics/angular:component poi-list --project=visitor \n    ```", "```js\n    import { Component, **OnInit** } from '@angular/core';\n    **import** **{** **Store** **}** **from****'@ngrx/store'****;**\n    **import** **{** **PoiActions****,** **PoiSelectors** **}** **from****'@packt/poi'****;** \n    ```", "```js\n    export class PoiListComponent implements OnInit {\n      constructor(private store: Store) {}\n      ngOnInit(): void {\n        this.store.dispatch(PoiActions.initPoi());\n      }\n    } \n    ```", "```js\n    pois$ = this.store.select(PoiSelectors.selectAllPoi); \n    ```", "```js\n    <mat-action-list *ngFor=\"let poi of pois$ | async\">\n      <button mat-list-item>{{poi.name}}</button>\n    </mat-action-list> \n    ```", "```js\n    npm install @angular/google-maps \n    ```", "```js\n    import { GoogleMapsModule } from '@angular/google-maps'; \n    ```", "```js\n    @NgModule({\n      imports: [CommonModule, MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule,\n        RouterModule.forChild([\n          { path: '', component: VisitorComponent }\n        ]),\n        PoiModule,\n        **GoogleMapsModule**\n      ],\n      declarations: [\n        VisitorComponent,\n        PoiListComponent\n      ],\n    }) \n    ```", "```js\n    <script src=\"img/js\"></script> \n    ```", "```js\n    nx generate @schematics/angular:component map --project=visitor \n    ```", "```js\n    import { Store } from '@ngrx/store';\n    import { PoiSelectors } from '@packt/poi'; \n    ```", "```js\n    export class MapComponent {\n     **poi$ =** **this****.****store****.****select****(****PoiSelectors****.****selectEntity****);**\n    **constructor****(****private** **store: Store****) { }**\n    } \n    ```", "```js\n    <google-map height=\"100%\" width=\"auto\" *ngIf=\"poi$ | async as poi\" [center]=\"poi\">\n      <map-marker [position]=\"poi\"></map-marker>\n    </google-map> \n    ```", "```js\n    export const selectPoi = createAction(\n      '[Poi/API] Select Poi',\n      props<{ poiId: string | number }>()\n    ); \n    ```", "```js\n    const reducer = createReducer(\n      initialPoiState,\n      on(PoiActions.initPoi, (state) => ({ ...state, loaded: false, error: null })),\n      on(PoiActions.loadPoiSuccess, (state, { poi }) =>\n        poiAdapter.setAll(poi, { ...state, loaded: true })\n      ),\n      on(PoiActions.loadPoiFailure, (state, { error }) => ({ ...state, error })),\n    **on****(****PoiActions****.****selectPoi****,** **(****state, { poiId }****) =>** **({ ...state,** **selectedId****: poiId }))**\n    ); \n    ```", "```js\n    import { PoiActions, **PoiEntity**, PoiSelectors } from '@packt/poi'; \n    ```", "```js\n    selectPoi(poi: PoiEntity) {\n      this.store.dispatch(PoiActions.selectPoi({poiId: poi.id}));\n    } \n    ```", "```js\n    <mat-action-list *ngFor=\"let poi of pois$ | async\">\n      <button mat-list-item **(****click****)=****\"selectPoi(poi)\"**>{{poi.name}}</button>\n    </mat-action-list> \n    ```", "```js\n    <google-map height=\"100%\" width=\"auto\" *ngIf=\"poi$ | async as poi\" [center]=\"poi\">\n      <map-marker [position]=\"poi\"></map-marker>\n      **<****map-info-window****>**\n    **<****mat-card****>**\n    **<****mat-card-header****>**\n    **<****mat-card-title****>****{{poi.name}}****</****mat-card-title****>**\n    **</****mat-card-header****>**\n    **<****img****mat-card-image** **[****src****]=****\"poi.imgUrl\"****>**\n    **<****mat-card-content****>**\n    **<****p****>****{{poi.description}}****</****p****>**\n    **</****mat-card-content****>**\n    **</****mat-card****>**\n    **</****map-info-window****>**\n    </google-map> \n    ```", "```js\n    import { MatCardModule } from '@angular/material/card'; \n    ```", "```js\n    @NgModule({\n      imports: [CommonModule, MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule,\n        RouterModule.forChild([\n          { path: '', component: VisitorComponent }\n        ]),\n        PoiModule,\n        GoogleMapsModule,\n        **MatCardModule**\n      ],\n      declarations: [\n        VisitorComponent,\n        PoiListComponent,\n        MapComponent\n      ],\n    }) \n    ```", "```js\n    import { Component, **ViewChild** } from '@angular/core';\n    import { Store } from '@ngrx/store';\n    import { PoiSelectors } from '@packt/poi';\n    **import** **{** **MapInfoWindow****,** **MapMarker** **}** **from****'@angular/google-maps'****;** \n    ```", "```js\n    @ViewChild(MapInfoWindow) info: MapInfoWindow | undefined; \n    ```", "```js\n    showInfo(marker: MapMarker) {\n      this.info?.open(marker);\n    } \n    ```", "```js\n    <map-marker **#****marker****=****\"mapMarker\"** **(****mapClick****)=****\"showInfo(marker)\"** [position]=\"poi\"></map-marker> \n    ```", "```js\n    export const visitPoi = createAction(\n      '[Poi/API] Visit Poi',\n      props<{ poiId: string | number }>()\n    )\n    export const visitPoiSuccess = createAction('[Poi/API] Visit Poi Success');\n    export const visitPoiFailure = createAction(\n      '[Poi/API] Visit Poi Failure',\n      props<{ error: any }>()\n    ); \n    ```", "```js\n    visit$ = createEffect(() =>\n      this.actions$.pipe(\n        ofType(PoiActions.visitPoi),\n        switchMap(action => {\n          const stat = localStorage.getItem('tour-' + action.poiId);\n          const total = stat ? Number(stat) + 1 : 1;\n          localStorage.setItem('tour-' + action.poiId, total.toString());\n          return of(PoiActions.visitPoiSuccess())\n        }),\n        catchError((error) => {\n          console.error('Error', error);\n          return of(PoiActions.visitPoiFailure({ error }));\n        })\n      )\n    ); \n    ```", "```js\n    import { **PoiActions**, PoiSelectors } from '@packt/poi'; \n    ```", "```js\n    showInfo(marker: MapMarker, **poiId:** **string** **|** **number**) {\n    **this****.****store****.****dispatch****(****PoiActions****.****visitPoi****({ poiId }));**\n      this.info?.open(marker);\n    } \n    ```", "```js\n    <map-marker #marker=\"mapMarker\" (mapClick)=\"showInfo(marker**, poi.id**)\" [position]=\"poi\" ></map-marker> \n    ```", "```js\n    npm install ng2-charts chart.js \n    ```", "```js\n    import { NgModule } from '@angular/core';\n    import { CommonModule } from '@angular/common';\n    import { AdminComponent } from './admin.component';\n    import { RouterModule } from '@angular/router';\n    **import** **{** **PoiModule** **}** **from****'@packt/poi'****;**\n    **import** **{** **NgChartsModule** **}** **from****'ng2-charts'****;**\n    @NgModule({\n      imports: [\n        CommonModule,\n        RouterModule.forChild([\n          { path: '', component: AdminComponent }\n        ]),\n    **PoiModule****,**\n    **NgChartsModule**\n      ],\n      declarations: [\n        AdminComponent\n      ],\n    })\n    export class AdminModule {} \n    ```", "```js\n    import { Component, **OnDestroy****,** **OnInit** } from '@angular/core';\n    **import** **{** **Store** **}** **from****'@ngrx/store'****;**\n    **import** **{** **PoiActions****,** **PoiEntity****,** **PoiSelectors** **}** **from****'@packt/poi'****;**\n    **import** **{** **Subscription** **}** **from****'rxjs'****;** \n    ```", "```js\n    export class AdminComponent implements OnInit, OnDestroy {\n      private subscription: Subscription | undefined;\n      constructor(private store: Store) { }\n      ngOnInit(): void {\n        this.subscription = this.store.select(PoiSelectors.selectAllPoi).subscribe();\n        this.store.dispatch(PoiActions.initPoi());\n      }\n      ngOnDestroy() {\n        this.subscription?.unsubscribe();\n      }\n    } \n    ```", "```js\n    nx generate service admin --project=admin \n    ```", "```js\n    import { PoiEntity } from '@packt/poi'; \n    ```", "```js\n    getStatistics(pois: PoiEntity[]): number[] {\n      return pois.map(poi => {\n        const stat = localStorage.getItem('tour-' + poi.id) ?? 0;\n        return +stat;\n      });\n    } \n    ```", "```js\n    import { AdminService } from './admin.service';\n    import { ChartDataset } from 'chart.js'; \n    ```", "```js\n    export class AdminComponent implements OnInit, OnDestroy {\n      private subscription: Subscription | undefined;\n      **dataSets****:** **ChartDataset****[] = [];**\n    **labels****:** **string****[] = [];**\n      constructor(private store: Store, **private** **adminService: AdminService**) { }\n      ngOnInit(): void {\n        this.subscription = this.store.select(PoiSelectors.selectAllPoi).subscribe();\n        this.store.dispatch(PoiActions.initPoi());\n      }\n      ngOnDestroy() {\n        this.subscription?.unsubscribe();\n      }\n    } \n    ```", "```js\n    private buildChart(pois: PoiEntity[]) {\n      this.labels = pois.map(poi => poi.name);\n      this.dataSets = [{\n        data: this.adminService.getStatistics(pois)\n      }]\n    } \n    ```", "```js\n    ngOnInit(): void {\n      this.subscription = this.store.select(PoiSelectors.selectAllPoi).subscribe(**pois** **=>****this****.****buildChart****(pois)**);\n      this.store.dispatch(PoiActions.initPoi());\n    } \n    ```", "```js\n    <div class=\"chart\" *ngIf=\"dataSets.length\">\n      <canvas\n        height=\"100\"\n        baseChart\n        [datasets]=\"dataSets\"\n        [labels]=\"labels\"\n        type=\"pie\">\n      </canvas>\n    </div> \n    ```"]