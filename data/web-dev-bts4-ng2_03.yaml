- en: Chapter 3. Advanced Bootstrap Components and Customization
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章。高级Bootstrap组件和自定义
- en: 'In this chapter, we continue to discover the world of Bootstrap 4\. You will
    meet new components, and we will continue to demonstrate the use of Bootstrap
    4 by showcasing a project we started to build in the preceding chapter. At the
    end of the chapter, you will have a solid understanding of:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将继续探索Bootstrap 4的世界。您将遇到新的组件，并且我们将继续通过展示我们在上一章开始构建的项目来演示Bootstrap 4的使用。在本章结束时，您将对以下内容有扎实的理解：
- en: How to display content with Jumbotron
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用Jumbotron显示内容
- en: How create a slideshow with Bootstrap
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用Bootstrap创建幻灯片放映
- en: How use typography in text
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在文本中使用排版
- en: How create input, button, and list groups
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何创建输入、按钮和列表组
- en: Getting attention with images and labels
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过图片和标签吸引注意力
- en: Using drop-down menus and tables
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用下拉菜单和表格
- en: How to capture a customer's attention
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何吸引顾客的注意力
- en: 'The Welcome page presents core marketing messages to website users, and it
    needs to get extra attention from them. We can use two different components to
    make that happen. Let''s start with:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎页面向网站用户展示核心营销信息，并且需要从他们那里获得额外的关注。我们可以使用两种不同的组件来实现这一点。让我们从以下开始：
- en: Open Terminal, create folder `ecommerce` and move in.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端，创建名为`ecommerce`的文件夹并进入。
- en: Copy the content of the project from the folder `chapter_3/1.ecommerce-seed`
    into the new project.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将项目的内容从文件夹`chapter_3/1.ecommerce-seed`复制到新项目中。
- en: 'Run the following script to install npm modules:'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下脚本以安装npm模块：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Start the TypeScript watcher and lite server with the next command:'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用下一个命令启动TypeScript监视器和轻量级服务器：
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This script opens a web browser and navigates to the Welcome page of the project.
    Now, we are ready to start development.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本将打开一个网页浏览器并导航到项目的欢迎页面。现在，我们准备开始开发。
- en: Displaying content with Jumbotron
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Jumbotron显示内容
- en: 'We can use the **Jumbotron** component to draw significant attention to marketing
    messages. It is a lightweight component, styled with large text and dense padding.
    We need to show:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用**Jumbotron**组件来吸引人们对营销信息的重要关注。它是一个轻量级组件，样式为大文本和密集填充。我们需要展示：
- en: The marketing message
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 营销信息
- en: The slogan
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标语
- en: Essential information for customers
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 顾客的基本信息
- en: 'Open the `app.component.html` page, find the first container under Navbar and
    change its content to the Jumbotron component:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 打开`app.component.html`页面，找到导航栏下的第一个容器，并将其内容更改为Jumbotron组件：
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![Displaying content with Jumbotron](Image00038.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![使用Jumbotron显示内容](Image00038.jpg)'
- en: You can force Jumbotron to use the full width of the page with the help of the
    `jumbotron-fluid` class and `container` or the `container-fluid` class within.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`jumbotron-fluid`类和`container`或`container-fluid`类来强制Jumbotron使用整个页面的宽度。
- en: I used standard HTML markup elements inside Jumbotron, but it might look better
    with a different style.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我在Jumbotron中使用了标准的HTML标记元素，但使用不同的样式可能会更好。
- en: Typography
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 排版
- en: In the preceding code, we used text elements without any classes, to see how
    Bootstrap renders them on the page. It uses the global default `font-size` of
    `16px` and `line-height1,5` . `Helvetica Neue, Helvetica, Arial, Sans Serf` are
    the default `font-family` in Bootstrap 4\. Every element has a `box-sizing` to
    avoid exceeding the width due to padding or borders. The paragraph element has
    a bottom margin of `1rem` . The body has a declared white `background-color` .
    Any page linked to Bootstrap 4 style sheets renders with those page-wide defaults.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述代码中，我们使用了没有任何类的文本元素，以查看Bootstrap如何在页面上呈现它们。它使用全局默认的`font-size`为`16px`和`line-height1,5`。`Helvetica
    Neue，Helvetica，Arial，Sans Serf`是Bootstrap 4的默认`font-family`。每个元素都有一个`box-sizing`，以避免由于填充或边框而超出宽度。段落元素的底部边距为`1rem`。页面声明了白色的`background-color`。任何链接到Bootstrap
    4样式表的页面都会使用这些页面范围的默认值。
- en: Headings
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 标题
- en: All heading elements, `<h1>` through `<h6>` , have a weight of `500` and a `line-height`
    of `1,1` . Bootstrap's developers have removed `margin-top` from them, but added
    the `margine-bottom` of `0,5rem` for easy spacing.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 所有标题元素，`<h1>`到`<h6>`，都具有`500`的权重和`1.1`的`line-height`。Bootstrap的开发人员已经从中删除了`margin-top`，但为了方便间距，添加了`0.5rem`的`margin-bottom`。
- en: 'In cases when you need to display some inline text you can use the `h1` through
    `h6` classes to style elements that mimic headings:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在需要显示一些内联文本的情况下，您可以使用`h1`到`h6`类来样式化模仿标题的元素：
- en: '[PRE3]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![Headings](Image00039.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![标题](Image00039.jpg)'
- en: Sub-headings
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 子标题
- en: 'If you require the inclusion of a sub-heading or secondary text smaller than
    the original, you may use the `<small>` tag:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要包含次级标题或比原始文本小的文本，可以使用`<small>`标签：
- en: '[PRE4]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![Sub-headings](Image00040.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![子标题](Image00040.jpg)'
- en: 'We can show faded and smaller text with the help of the `text-muted` class:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`text-muted`类显示淡化和较小的文本：
- en: '[PRE5]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![Sub-headings](Image00041.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![子标题](Image00041.jpg)'
- en: Display headings
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 显示标题
- en: 'When the standard heading is not enough and you need to draw the user''s attention
    to something special, I recommend using the `display-*` classes. There are four
    different sizes, and that means you can render the `<h1>` element with four different
    styles:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 当标准标题不够用，您需要引起用户对特殊事物的注意时，我建议使用`display-*`类。有四种不同的大小，这意味着您可以使用四种不同的样式呈现`<h1>`元素：
- en: '[PRE6]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![Display headings](Image00042.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![显示标题](Image00042.jpg)'
- en: Lead
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 引导
- en: 'We can add the `lead` class to any paragraph to make it stand out from other
    text:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将“lead”类添加到任何段落中，使其与其他文本脱颖而出：
- en: '[PRE7]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![Lead](Image00043.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![引导](Image00043.jpg)'
- en: 'Let''s update the Jumbotron component to make it look better:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更新Jumbotron组件，使其看起来更好：
- en: '[PRE8]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![Lead](Image00044.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![引导](Image00044.jpg)'
- en: The marketing message looks gorgeous, the slogan is in place, but we did not
    change the essential information for customers because there was no need.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 营销信息看起来很漂亮，口号也很到位，但我们没有改变顾客的基本信息，因为没有必要。
- en: Inline text elements
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 内联文本元素
- en: 'Here is a set of different styles we can use as inline text:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一组不同的样式，我们可以将其用作内联文本：
- en: '[PRE9]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![Inline text elements](Image00045.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![内联文本元素](Image00045.jpg)'
- en: Abbreviations
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缩写
- en: 'To mark any text as an abbreviation or acronym, we can use the `<abbr>` tag.
    It shows the standing out of other text and provides the expanded version when
    you hover over it with the help of the `title` attribute:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 要将任何文本标记为缩写或首字母缩略词，我们可以使用`<abbr>`标签。当您将鼠标悬停在其上时，它会突出显示其他文本，并提供扩展版本，帮助您使用`title`属性：
- en: '[PRE10]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![Abbreviations](Image00046.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![缩写](Image00046.jpg)'
- en: The class `initialism` makes an abbreviation for a slightly smaller font size.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '`initialism`类使缩写字体略小。'
- en: Blockquotes
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 块引用
- en: 'We can quote the content from another source within our document with the help
    of the `blockquote` tag and class:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`blockquote`标签和类在文档中引用另一个来源的内容：
- en: '[PRE11]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![Blockquotes](Image00047.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![Blockquotes](Image00047.jpg)'
- en: Also, we can add the author at the bottom of the `blockquote` with nested `footer`
    and `cite` tags.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们可以使用嵌套的`footer`和`cite`标签在`blockquote`底部添加作者。
- en: '[PRE12]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![Blockquotes](Image00048.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![Blockquotes](Image00048.jpg)'
- en: 'Do you prefer blockquotes aligned to the right side? Let''s use the `blockquote-reverse`
    class:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 您喜欢将块引用对齐到右侧吗？让我们使用`blockquote-reverse`类：
- en: '[PRE13]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![Blockquotes](Image00049.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![块引用](Image00049.jpg)'
- en: Address
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 地址
- en: 'We use the `address` element to display customer contact information at the
    bottom of the page:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用`address`元素在页面底部显示客户联系信息：
- en: '[PRE14]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![Address](Image00050.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![地址](Image00050.jpg)'
- en: Note
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can find the source code in the `chapter_3/2.ecommerce-jumbotron` folder
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在`chapter_3/2.ecommerce-jumbotron`文件夹中找到源代码
- en: Displaying content with a carousel
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用轮播显示内容
- en: Another component we can use to get customers' extra attention is the carousel.
    It helps us create elegant and interactive images or text slideshows. The carousel
    is a combination of different components, each of them playing a very specific
    role.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用的另一个组件来吸引顾客的额外注意是旋转木马。它帮助我们创建优雅和交互式的图像或文本幻灯片。旋转木马是不同组件的组合，每个组件都扮演着非常具体的角色。
- en: Carousel container
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 旋转木马容器
- en: 'The container wraps all other content so the plugin JavaScript code can find
    it by the `carousel` and `slide` classes. It must have an `id` for the carousel
    controls and inner components to function properly. If you want the carousel to
    start an animation when the page loads, use the `data-ride="carousel"` property:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 容器包裹所有其他内容，因此插件JavaScript代码可以通过“carousel”和“slide”类找到它。它必须具有旋转木马控件和内部组件正常运行所需的“id”。如果希望旋转木马在页面加载时开始动画，请使用“data-ride="carousel"”属性：
- en: '[PRE15]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Carousel inner
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 旋转木马内部
- en: 'This container holds carousel items as scrollable content and marks them with
    the `carousel-inner` class:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 该容器将旋转木马项目作为可滚动内容，并使用“carousel-inner”类对其进行标记：
- en: '[PRE16]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Carousel item
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 旋转木马项目
- en: The `carousel-item` class keeps the content of slides such as images, text,
    or a combination of them. You need to wrap text-based content with a `carousel-caption`
    container. The `active` class marks the item as initialized and without it the
    carousel won't be visible.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: “carousel-item”类保持幻灯片的内容，例如图像、文本或它们的组合。您需要使用“carousel-caption”容器包装基于文本的内容。使用“active”类将项目标记为已初始化，没有它，旋转木马将不可见。
- en: '[PRE17]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Carousel indicators
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 旋转木马指示器
- en: 'The carousel may have indicators to display and control the slideshow via a
    click or a tap to select a particular slide. Usually, it is an ordered list marked
    with a `carousel-indicators` class. Every item on the list must have the `data-target`
    property keeping the carousel container `id` . Because it''s an ordered list,
    you don''t need to sort it. If you need to alter the slide position around the
    current location use the  `data-slide` property to accept the keywords `prev`
    and `next` . Another option is to use the `data-slide-to` property to pass the
    index of the slide. Use the `active` class to mark the initial indicator:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 旋转木马可能有指示器来显示和控制幻灯片播放，可以通过单击或轻触来选择特定幻灯片。通常，它是一个带有“carousel-indicators”类的有序列表。列表上的每个项目都必须具有保持旋转木马容器“id”的“data-target”属性。因为它是一个有序列表，所以不需要对其进行排序。如果需要在当前位置周围改变幻灯片位置，请使用“data-slide”属性来接受关键字“prev”和“next”。另一个选项是使用“data-slide-to”属性传递幻灯片的索引。使用“active”类来标记初始指示器：
- en: '[PRE18]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Carousel controls
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 旋转木马控件
- en: 'You can use an alternative way to display slides via carousel control buttons.
    In this case, the two anchor elements play the role of the buttons. Add the `left`
    or the `right` classes to a particular button together with `carousel-control`
    . Use the carousel container `id` as a link in the `href` property. Set `prev`
    or `next` to the `data-slide` property:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用另一种方式通过旋转木马控件按钮显示幻灯片。在这种情况下，两个锚元素扮演按钮的角色。将特定按钮与“carousel-control”一起添加“left”或“right”类。在“href”属性中使用旋转木马容器“id”作为链接。将“prev”或“next”设置为“data-slide”属性：
- en: '[PRE19]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '![Carousel controls](Image00051.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![Carousel controls](Image00051.jpg)'
- en: 'Let''s compare the final result and wireframe of the Welcome page:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们比较欢迎页面的最终结果和线框图：
- en: '![Carousel controls](Image00052.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![Carousel controls](Image00052.jpg)'
- en: The wireframe of the Welcome page
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎页面的线框图
- en: As you can see, they look absolutely the same. Actually, we have finished with
    the Welcome page, and now it's time to move on to the Products page development.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，它们看起来完全相同。实际上，我们已经完成了欢迎页面，现在是时候继续进行产品页面的开发了。
- en: Note
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can find the source code in the `chapter_3/3.ecommerce-carousel` folder
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在“chapter_3/3.ecommerce-carousel”文件夹中找到源代码
- en: Products page layout
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 产品页面布局
- en: 'Let''s have a look at a wireframe of the Products page and imagine splitting
    it into rows and columns as we did for the Welcome page:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一下产品页面的线框图，并想象将其分成行和列，就像我们为欢迎页面所做的那样：
- en: '![Products page layout](Image00053.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![产品页面布局](Image00053.jpg)'
- en: The first row still contains our navigation header, but I put the other content
    into another single row. There are two columns with **Quick Shop** and **Categories**
    in one, and the grid includes a set of products in another one. Why have I split
    the Products page like that? The answer is pretty straightforward. Bootstrap always
    renders content by rows and then by columns inside them. On devices with a small
    layout, the header in the first row usually collapses into a hamburger menu. At
    the bottom, it displays the second row with **Quick Shop** , **Categories** and,
    below, the set of products aligned vertically.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行仍然包含我们的导航标题，但我把其他内容放到了另一行。有两列，一列是**快速购物**和**分类**，另一列是一组产品。为什么我要把产品页面分成这样？答案很简单。Bootstrap总是先按行渲染内容，然后再按列渲染。在布局较小的设备上，第一行的标题通常会折叠成汉堡菜单。在底部，它会显示第二行，包括**快速购物**，**分类**，以及垂直对齐的一组产品。
- en: I cloned the last project and cleaned the code but saved the navigation header
    and footer, because I don't want to mix the development of the Products page with
    the original one. Let's talk about the components in the first column.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我克隆了上一个项目并清理了代码，但保留了导航标题和页脚，因为我不想将产品页面的开发与原始页面混在一起。让我们先讨论第一列中的组件。
- en: Quick Shop component
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 快速购物组件
- en: This component is just a search input with a button. I don't implement business
    logic, but just design the page. This one is based on the Card element we explored
    in [Chapter 2](text00023.html#page "Chapter 2. Working with Bootstrap Components")
    ,  *Working with Bootstrap Components* . I would like to use the input group component,
    so let's see what it can do.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这个组件只是一个带有按钮的搜索输入。我没有实现业务逻辑，只是设计页面。这是基于我们在[第2章](text00023.html#page "第2章。使用Bootstrap组件")中探讨过的卡片元素，*使用Bootstrap组件*。我想使用输入组件，让我们看看它能做什么。
- en: Input group
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 输入组
- en: This is a group of form controls and text combined in one line. It was designed
    to extend form controls by adding text, buttons, or groups of buttons on either
    side of the input field and aligning them against each other. Creating an input
    group component is very easy. Just wrap the `input` with an element marked with
    the `input-group` class and append or prepend another one with an `input-group-addon`
    class. You can use the input group out of any form, but we need to mark the input
    element with the `form-control` class to have it width 100%.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一组表单控件和文本组合在一行中。它旨在通过在输入字段的两侧添加文本、按钮或按钮组并将它们对齐来扩展表单控件。创建输入组件非常容易。只需用标有`input-group`类的元素包装`input`，并附加或前置另一个带有`input-group-addon`类的元素。您可以在任何表单之外使用输入组，但我们需要用`form-control`类标记输入元素，以使其宽度达到100%。
- en: Note
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Use the input group for textual input elements only.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 仅对文本输入元素使用输入组。
- en: Text addons
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文本附加
- en: 'Here is an example of a text field with an appended addon:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个带有附加组件的文本字段的示例：
- en: '[PRE20]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '![Text addons](Image00054.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![文本附加](Image00054.jpg)'
- en: 'Another example with a prepended addon is:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个带有前置附加组件的示例是：
- en: '[PRE21]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '![Text addons](Image00055.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![文本附加](Image00055.jpg)'
- en: 'And finally we can combine all of them together:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以将它们全部组合在一起：
- en: '[PRE22]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '![Text addons](Image00056.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![文本附加](Image00056.jpg)'
- en: Sizing
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 尺寸
- en: 'There are two form sizing classes, `input-group-lg` and `input-group-sm` ,
    which  make an input group bigger or smaller than the standard one. You need to
    apply one to the element marked with `input-group` class, and the content within
    will automatically resize:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 有两个表单尺寸类，`input-group-lg`和`input-group-sm`，可以使输入组比标准尺寸更大或更小。你需要将其中一个应用到标有`input-group`类的元素上，其中的内容将自动调整大小：
- en: '[PRE23]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '![Sizing](Image00057.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![尺寸](Image00057.jpg)'
- en: Checkboxes and radio option addons
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 复选框和单选按钮附件
- en: 'We can use a checkbox or radio option instead of text addons:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用复选框或单选按钮选项来代替文本附件：
- en: '[PRE24]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '![Checkboxes and radio option addons](Image00058.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![复选框和单选按钮附件](Image00058.jpg)'
- en: Button addons
  id: totrans-131
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 按钮附件
- en: 'The most familiar elements are buttons, and you can use them within the input
    group. Just add one extra level of complexity:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 最常见的元素是按钮，你可以在输入组中使用它们。只需增加一层额外的复杂性：
- en: '[PRE25]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '![Button addons](Image00059.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![按钮附件](Image00059.jpg)'
- en: Drop-down menu addons
  id: totrans-135
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 下拉菜单附件
- en: 'We can use buttons to show drop-down menus. We will speak about drop-down menus
    a bit later in this chapter. The following code demonstrates the use of drop-down
    menus:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用按钮来显示下拉菜单。我们稍后在本章中会讲到下拉菜单。以下代码演示了如何使用下拉菜单：
- en: '[PRE26]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '![Drop-down menu addons](Image00060.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![下拉菜单附件](Image00060.jpg)'
- en: Segmented buttons
  id: totrans-139
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分段按钮
- en: 'Sometimes it can be useful to split button and drop-down menus, so that the
    layout is available as well:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 有时将按钮和下拉菜单分开可能会很有用，这样布局也会更清晰：
- en: '[PRE27]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '![Segmented buttons](Image00061.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![分段按钮](Image00061.jpg)'
- en: 'Now that we know how to use input groups, let''s create a **Quick Shop** component:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道如何使用输入组，让我们创建一个**快速购物**组件：
- en: '[PRE28]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '![Segmented buttons](Image00062.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![分段按钮](Image00062.jpg)'
- en: Note
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can find the source code in the `chapter_3/4.ecommerce-input-group` folder.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在`chapter_3/4.ecommerce-input-group`文件夹中找到源代码。
- en: Categories component
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 类别组件
- en: The Categories component lies under the **Quick Shop** . I would like to use
    the list group component to hold categories from which the customer can choose.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 类别组件位于**快速购物**下面。我想使用列表组件来保存顾客可以选择的类别。
- en: List group
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 列表组
- en: 'This one is a flexible component for displaying an unordered list of elements,
    such as simple items or custom content, with ease. Just mark any unordered list
    element with the `list-group` class and every item with `list-group-item` to quickly
    create the **list group** component:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个灵活的组件，用于轻松显示无序元素列表，比如简单的项目或自定义内容。只需用`list-group`类标记任何无序列表元素，并用`list-group-item`标记每个项目，就可以快速创建**列表组**组件：
- en: '[PRE29]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '![List group](Image00063.jpg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![列表组](Image00063.jpg)'
- en: Listing with tags
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 带标签的列表
- en: 'Sometimes we need to display a bit more information about every item such as
    counts, activities, and others. For that purpose we can add **tag** to each item
    and list group automatically to position it to the right:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 有时我们需要显示关于每个项目的更多信息，比如数量、活动等。为此，我们可以为每个项目和列表组自动添加**标签**，以将其定位到右侧：
- en: '[PRE30]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '![Listing with tags](Image00064.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![带标签的列表](Image00064.jpg)'
- en: Linked list groups
  id: totrans-158
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 链接列表组
- en: 'We can quickly create a vertical menu with a linked list group component. This
    kind of list is based on the `div` tag instead of `ul` . The whole item of this
    list is an anchor element, and it can be:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以快速创建一个带有链接列表组件的垂直菜单。这种列表基于`div`标签而不是`ul`。这个列表的整个项目都是一个锚元素，它可以是：
- en: Clickable
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可点击
- en: Hoverable
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可悬停
- en: Highlighted with the help of an `active` class
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过`active`类进行突出显示
- en: Disabled with the aid of a class with the same name
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过同名类进行禁用
- en: '[PRE31]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '![Linked list groups](Image00065.jpg)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![链接列表组](Image00065.jpg)'
- en: Button list groups
  id: totrans-166
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 按钮列表组
- en: 'If you prefer, use buttons instead of anchor elements, then you need to change
    the tag name of each item and add the `list-group-item-action` class into it.
    We can use `active` or `disabled` to make the item appear different:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您愿意，可以使用按钮代替锚元素，然后您需要更改每个项目的标签名称，并在其中添加`list-group-item-action`类。我们可以使用`active`或`disabled`使项目显示不同：
- en: '[PRE32]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '![Button list groups](Image00066.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![按钮列表组](Image00066.jpg)'
- en: Note
  id: totrans-170
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Using the standard `btn` class in list groups is prohibited.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在列表组中使用标准的`btn`类是被禁止的。
- en: Contextual classes
  id: totrans-172
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 上下文类
- en: 'You can also style individual list items with contextual classes. Just add
    a contextual class suffix to the `list-group-item` class. The item with the `active`
    class displays as a darkened version:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用上下文类样式化单独的列表项。只需将上下文类后缀添加到`list-group-item`类中。具有`active`类的项目会显示为变暗版本：
- en: '[PRE33]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '![Contextual classes](Image00067.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![上下文类](Image00067.jpg)'
- en: Custom content
  id: totrans-176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自定义内容
- en: 'Finally, you can add HTML within every item of a list group component, and
    make it clickable with an anchor element. Bootstrap 4 provides the `list-group-item-heading`
    and `list-group-item-text` classes for heading and text content. Any item with
    the `active` class displays custom content as a darkened version:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，您可以在列表组件的每个项目中添加HTML，并使用锚元素使其可点击。Bootstrap 4为标题和文本内容提供了`list-group-item-heading`和`list-group-item-text`类。具有`active`类的项目会显示为自定义内容的变暗版本：
- en: '[PRE34]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '![Custom content](Image00068.jpg)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![自定义内容](Image00068.jpg)'
- en: 'Now, it''s time to create our **Categories** component:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，是时候创建我们的**类别**组件了：
- en: '[PRE35]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '![Custom content](Image00069.jpg)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![自定义内容](Image00069.jpg)'
- en: We are finished with the first column, so let's go on to develop the second
    one, which contains the grid with a set of products.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经完成了第一列，现在继续开发第二列，其中包含一组产品的网格。
- en: Note
  id: totrans-184
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can find the source code in the `chapter_3/5.ecommerce-list-group` folder.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在`chapter_3/5.ecommerce-list-group`文件夹中找到源代码。
- en: Creating a product grid
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建产品网格
- en: We need to display a set of products in a grid of rows and columns inside the
    second column.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要在第二列内显示一组产品的行和列网格。
- en: Nested rows
  id: totrans-188
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 嵌套行
- en: 'We can nest additional rows inside any column to create a more complex layout
    similar to the one we have:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在任何列内嵌套额外的行，以创建类似于我们所拥有的更复杂的布局：
- en: '[PRE36]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'We create as many columns as we need within one row and Bootstrap will display
    them properly, based on the viewport size:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在一行内创建所需的列数，Bootstrap会根据视口大小正确显示它们：
- en: One column takes the whole size on an extra small viewport
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在超小视口上，一列占据整个大小
- en: Two columns on a small viewport
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 小视口上的两列
- en: Three columns on large and bigger viewports
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大型视口上的三列
- en: Product component
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 产品组件
- en: 'In a similar way, we use the Card to display information and controls in the
    product component:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 以类似的方式，我们使用卡片在产品组件中显示信息和控件：
- en: '[PRE37]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '![Product component](Image00070.jpg)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![产品组件](Image00070.jpg)'
- en: Let's talk a bit about the elements we have used here.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们稍微谈谈我们在这里使用的元素。
- en: Note
  id: totrans-200
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can find the source code in the `chapter_3/6.ecommerce-grid-in-grid` folder.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在`chapter_3/6.ecommerce-grid-in-grid`文件夹中找到源代码。
- en: Images
  id: totrans-202
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图片
- en: To the extent that we use images in the Card element, I think it's a good idea
    to talk about images with responsive behavior and image shapes.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 在卡片元素中使用图片时，我认为讨论具有响应行为和图片形状的图片是个好主意。
- en: Responsive images
  id: totrans-204
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 响应式图片
- en: 'You can make any image responsive with the `img-fluid` class. It applies the
    following to the picture and scales it with the parent element:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`img-fluid`类使任何图片具有响应性。它会将以下内容应用于图片，并与父元素一起缩放：
- en: Sets the `max-width` property to `100%`
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将`max-width`属性设置为`100%`
- en: Sets the `height` property to `auto`
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将`height`属性设置为`auto`
- en: '[PRE38]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '![Responsive images](Image00071.jpg)'
  id: totrans-209
  prefs: []
  type: TYPE_IMG
  zh: '![响应式图片](Image00071.jpg)'
- en: Image shapes
  id: totrans-210
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 图片形状
- en: 'In cases when you need to render images:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 在需要呈现图像的情况下：
- en: With rounded corners, use the `img-rounded` class
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`img-rounded`类来实现圆角
- en: Within a circle, use the `img-circle` class
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在圆圈内，使用`img-circle`类
- en: As a thumbnail, use the `img-thumbnail` class
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`img-thumbnail`类作为缩略图
- en: '![Image shapes](Image00072.jpg)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![图像形状](Image00072.jpg)'
- en: Image alignment
  id: totrans-216
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 图像对齐
- en: 'To align images horizontally, we can use either text alignment or helper float
    classes:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 要水平对齐图像，我们可以使用文本对齐或辅助浮动类：
- en: Use `text-*-center` classes on the parent of the picture to center it
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在图片的父元素上使用`text-*-center`类来使其居中
- en: Use the `center-block` class on an image to center it
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在图像上应用`center-block`类可以使其居中
- en: Use the `pull-*-left` or `pull-*-right` classes to float the image to the left
    or right respectively
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`pull-*-left`或`pull-*-right`类将图像浮动到左侧或右侧
- en: '[PRE39]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '![Image alignment](Image00073.jpg)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![图像对齐](Image00073.jpg)'
- en: I used the `table-border` class in the preceding code only to display borders.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 我在上面的代码中只使用了`table-border`类来显示边框。
- en: Tags
  id: totrans-224
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 标签
- en: 'If I need to highlight some information in a text string, I will use a tag.
    To create a tag I need to apply the `tag` class together with a contextual `tag-*`
    to `span` the element:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我需要在文本字符串中突出显示一些信息，我会使用标签。要创建一个标签，我需要将`tag`类与上下文`tag-*`一起应用到`span`元素上：
- en: '[PRE40]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '![Tags](Image00074.jpg)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![标签](Image00074.jpg)'
- en: 'The tag uses the relative font size of the parent element so it always scales
    to match its size. If you need tag to looks like a badge use the `tag-pill` class
    to achieve this:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 标签使用父元素的相对字体大小，因此它始终按比例缩放以匹配其大小。如果您需要标签看起来像徽章，请使用`tag-pill`类来实现：
- en: '[PRE41]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '![Tags](Image00075.jpg)'
  id: totrans-230
  prefs: []
  type: TYPE_IMG
  zh: '![标签](Image00075.jpg)'
- en: Button groups
  id: totrans-231
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 按钮组
- en: 'We can group buttons together either horizontally or vertically with the **button
    group** component. Buttons are oriented horizontally by default. To create a button
    group use buttons with the `btn` class in a container with the `btn-group` class:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用**按钮组**组件将按钮水平或垂直分组在一起。按钮默认是水平排列的。要创建一个按钮组，请在带有`btn-group`类的容器中使用带有`btn`类的按钮：
- en: '[PRE42]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '![Button groups](Image00076.jpg)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![按钮组](Image00076.jpg)'
- en: Sizing
  id: totrans-235
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 大小
- en: 'There are two sizes to make the button group bigger or smaller than the standard
    size. Add either the `btn-group-lg` or `btn-group-sm` class to the button group
    to resize all buttons in the group at once:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种尺寸可以使按钮组件比标准尺寸更大或更小。将`btn-group-lg`或`btn-group-sm`类添加到按钮组件中，可以一次调整组中所有按钮的大小：
- en: '[PRE43]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '![Sizing](Image00077.jpg)'
  id: totrans-238
  prefs: []
  type: TYPE_IMG
  zh: '![大小](Image00077.jpg)'
- en: Button toolbars
  id: totrans-239
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 按钮工具栏
- en: 'We can combine button groups into a **button toolbar** for more complex components:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将按钮组合成一个更复杂的**按钮工具栏**：
- en: '[PRE44]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '![Button toolbars](Image00078.jpg)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![按钮工具栏](Image00078.jpg)'
- en: Nesting drop-downs
  id: totrans-243
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 嵌套下拉菜单
- en: 'We can make a drop-down as a part of a button group by nesting it into another
    button group:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将下拉菜单作为按钮组的一部分嵌套到另一个按钮组中：
- en: '[PRE45]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '![Nesting drop-downs](Image00079.jpg)'
  id: totrans-246
  prefs: []
  type: TYPE_IMG
  zh: '![嵌套下拉菜单](Image00079.jpg)'
- en: 'Also, you can create a split drop-down menu component with a button group:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您可以使用按钮组件创建一个分割下拉菜单组件：
- en: '[PRE46]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '![Nesting drop-downs](Image00080.jpg)'
  id: totrans-249
  prefs: []
  type: TYPE_IMG
  zh: '![嵌套下拉菜单](Image00080.jpg)'
- en: Vertical button groups
  id: totrans-250
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 垂直按钮组
- en: 'If you need to orient a button group vertically, replace `btn-group` with the
    `btn-group-vertical` class:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要将按钮组垂直排列，请将`btn-group`替换为`btn-group-vertical`类：
- en: '[PRE47]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '![Vertical button groups](Image00081.jpg)'
  id: totrans-253
  prefs: []
  type: TYPE_IMG
  zh: '![垂直按钮组](Image00081.jpg)'
- en: The vertical button group doesn't support split drop-down menus.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 垂直按钮组不支持分割下拉菜单。
- en: Drop-down menus
  id: totrans-255
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下拉菜单
- en: We talk a lot about drop-down menus, so let's have a closer look at them. A
    drop-down menu is a toggle overlay for displaying a list of links. It is a combination
    of several components.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 我们经常谈论下拉菜单，让我们更仔细地看看它们。下拉菜单是一个用于显示链接列表的切换覆盖层。它是几个组件的组合。
- en: Drop-down containers
  id: totrans-257
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 下拉菜单容器
- en: 'This one wraps all other elements. Usually, it is a `div` element with a `dropdown`
    class, or another one uses `position: relative` .'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '这个包装了所有其他元素。通常，它是一个带有`dropdown`类的`div`元素，或者另一个使用`position: relative`的元素。'
- en: Drop-down triggers
  id: totrans-259
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 下拉触发器
- en: This is any item that the user can click or tap to expand the drop-down. We
    need to mark it with a `dropdown-toggle` class and set the `data-toggle="dropdown"`
    property.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 这是用户可以点击或点击以展开下拉菜单的任何项目。我们需要用`dropdown-toggle`类标记它，并设置`data-toggle="dropdown"`属性。
- en: Drop-down menus with items
  id: totrans-261
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 带有项目的下拉菜单
- en: 'A drop-down menu itself is a combination of elements with `dropdown-item` classes,
    and the wrapper contains all of them marked with the `dropdown-menu` class. It
    is a list-less component. For menu items, you can use anchor or button elements:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 下拉菜单本身是具有`dropdown-item`类的元素的组合，包装器包含所有标记为`dropdown-menu`类的元素。这是一个无列表的组件。对于菜单项，您可以使用锚点或按钮元素：
- en: '[PRE48]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '![Drop-down menus with items](Image00082.jpg)'
  id: totrans-264
  prefs: []
  type: TYPE_IMG
  zh: '![带有项目的下拉菜单](Image00082.jpg)'
- en: Menu alignment
  id: totrans-265
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 菜单对齐
- en: 'Drop-down menus are aligned to the left by default. If you need align one to
    the right, then you need to apply the `dropdown-menu-right` class to it. I have
    added the `text-xs-right` class to the parent element to align the whole component
    to the right:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 下拉菜单默认向左对齐。如果需要向右对齐，则需要向其应用`dropdown-menu-right`类。我已经向父元素添加了`text-xs-right`类来将整个组件对齐到右侧：
- en: '[PRE49]'
  id: totrans-267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '![Menu alignment](Image00083.jpg)'
  id: totrans-268
  prefs: []
  type: TYPE_IMG
  zh: '![菜单对齐](Image00083.jpg)'
- en: Menu headers and dividers
  id: totrans-269
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 菜单标题和分隔符
- en: 'A drop-down menu may have several header elements. You can add them with the
    help of heading elements and the `dropdown-header` classes:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 下拉菜单可以有几个标题元素。您可以使用标题元素和`dropdown-header`类来添加它们：
- en: '[PRE50]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '![Menu headers and dividers](Image00084.jpg)'
  id: totrans-272
  prefs: []
  type: TYPE_IMG
  zh: '![菜单标题和分隔符](Image00084.jpg)'
- en: Menu dividers
  id: totrans-273
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 菜单分隔符
- en: 'We can segregate groups of menu items not only with headers but also with dividers.
    Use the `dropdown-divider` class to mark menu items as dividers:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不仅可以使用标题，还可以使用分隔符来分隔菜单项的组。使用`dropdown-divider`类将菜单项标记为分隔符：
- en: '[PRE51]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '![Menu dividers](Image00085.jpg)'
  id: totrans-276
  prefs: []
  type: TYPE_IMG
  zh: '![菜单分隔符](Image00085.jpg)'
- en: Disabling menu items
  id: totrans-277
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 禁用菜单项
- en: 'If necessary we can disable menu items via the `disabled` class:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要，我们可以通过`disabled`类禁用菜单项：
- en: '[PRE52]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '![Disabling menu items](Image00086.jpg)'
  id: totrans-280
  prefs: []
  type: TYPE_IMG
  zh: '![禁用菜单项](Image00086.jpg)'
- en: Tables
  id: totrans-281
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 表格
- en: 'There are new classes to build consistently styled and responsive tables. Because
    we need **table** to design the shopping cart component I would like to look at
    it now. It is an opt-in, so it''s very easy to transform any table to a Bootstrap
    table by adding a `table` class. As a result we have a basic table with horizontal
    dividers:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 有新的类来构建一致样式和响应式的表格。因为我们需要**表格**来设计购物车组件，我现在想看一下它。这是一个选择加入的功能，所以通过添加`table`类很容易将任何表格转换为Bootstrap表格。结果是我们有一个带有水平分隔线的基本表格：
- en: '[PRE53]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '![Tables](Image00087.jpg)'
  id: totrans-284
  prefs: []
  type: TYPE_IMG
  zh: '![表格](Image00087.jpg)'
- en: table-inverse
  id: totrans-285
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: table-inverse
- en: 'The `table-inverse` class inverts the colors of a table:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '`table-inverse`类反转了表格的颜色：'
- en: '[PRE54]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '![table-inverse](Image00088.jpg)'
  id: totrans-288
  prefs: []
  type: TYPE_IMG
  zh: '![table-inverse](Image00088.jpg)'
- en: Striped rows
  id: totrans-289
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 条纹行
- en: 'We can alter the background colors of rows with the `table-striped` class:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`table-striped`类改变行的背景颜色：
- en: '[PRE55]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: '![Striped rows](Image00089.jpg)'
  id: totrans-292
  prefs: []
  type: TYPE_IMG
  zh: '![条纹行](Image00089.jpg)'
- en: Bordering tables
  id: totrans-293
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 边框表
- en: 'If you need a table with borders all around, use the `table-bordered` class:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要四周都有边框的表格，请使用`table-bordered`类：
- en: '[PRE56]'
  id: totrans-295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: '![Bordering tables](Image00090.jpg)'
  id: totrans-296
  prefs: []
  type: TYPE_IMG
  zh: '![边框表](Image00090.jpg)'
- en: Making rows hoverable
  id: totrans-297
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使行可悬停
- en: 'To achieve a *hover* effect while hovering the mouse over table rows, use the
    `table-hover` class:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 在鼠标悬停在表格行上时实现*悬停*效果，请使用`table-hover`类：
- en: '[PRE57]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '![Making rows hoverable](Image00091.jpg)'
  id: totrans-300
  prefs: []
  type: TYPE_IMG
  zh: '![使行可悬停](Image00091.jpg)'
- en: Table head options
  id: totrans-301
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 表头选项
- en: 'There are two classes to change the `thead` element of `table` . Add the `thead-default`
    class to apply a slightly gray background color:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 有两个类可以改变`table`的`thead`元素。添加`thead-default`类可以应用略带灰色背景颜色：
- en: '[PRE58]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: '![Table head options](Image00092.jpg)'
  id: totrans-304
  prefs: []
  type: TYPE_IMG
  zh: '![表头选项](Image00092.jpg)'
- en: 'The `thead-inverse` class inverts the text and background colors of `thead`
    :'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: '`thead-inverse`类可以反转`thead`的文本和背景颜色：'
- en: '[PRE59]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: '![Table head options](Image00093.jpg)'
  id: totrans-307
  prefs: []
  type: TYPE_IMG
  zh: '![表头选项](Image00093.jpg)'
- en: Making table smaller
  id: totrans-308
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使表格更小
- en: 'We can halve the padding of a table to make it smaller with the `table-sm`
    class:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以用`table-sm`类将表格的填充减半，使其变小：
- en: '[PRE60]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: '![Making table smaller](Image00094.jpg)'
  id: totrans-311
  prefs: []
  type: TYPE_IMG
  zh: '![使表格更小](Image00094.jpg)'
- en: Contextual classes
  id: totrans-312
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 上下文类
- en: 'There are five contextual classes to apply to individual rows or cells: `table-active`
    , `table-success` , `table-info` , `table-warning` , and `table-danger` .'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 有五个上下文类可以应用于单独的行或单元格：`table-active`、`table-success`、`table-info`、`table-warning`和`table-danger`。
- en: Responsive tables
  id: totrans-314
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 响应式表格
- en: 'Responsive tables support horizontal scrolling on small and extra small devices
    (under 768px). On devices bigger than small you won''t see any difference. Wrap
    a table with the `div` element with the `table-responsive` class to achieve this
    effect:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 响应式表格支持在小型和超小型设备（小于768px）上的水平滚动。在大于小型的设备上，你不会看到任何区别。用带有`table-responsive`类的`div`元素包裹表格，就可以实现这种效果：
- en: '[PRE61]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: Reflowing tables
  id: totrans-317
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重排表格
- en: 'There is a `table-reflow` class to help make the contents of a table reflow:'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个`table-reflow`类可以帮助表格内容重新流动：
- en: '[PRE62]'
  id: totrans-319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: '![Reflowing tables](Image00095.jpg)'
  id: totrans-320
  prefs: []
  type: TYPE_IMG
  zh: '![重排表格](Image00095.jpg)'
- en: Shopping cart component
  id: totrans-321
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 购物车组件
- en: 'We haven''t yet touched on the last component on the wireframe of the Products
    page: the shopping cart. This is the union of the cart information and the dropdown
    contains a table of items the customer has added to the cart:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还没有触及产品页面线框上的最后一个组件：购物车。这是购物车信息和下拉菜单的结合，包含顾客添加到购物车的商品表格：
- en: 'We display the cart information as button text:'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将购物车信息显示为按钮文本：
- en: '[PRE63]'
  id: totrans-324
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'I used an inversed, bordered table to print out a set of products the cusomer
    added to the cart:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用了一个反转的、有边框的表格来打印顾客添加到购物车的一组产品：
- en: '[PRE64]'
  id: totrans-326
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'I combined everything we have learned and here is what the Products page looks
    like for now:'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 我结合了我们学到的一切，现在产品页面看起来是这样的：
- en: '![Shopping cart component](Image00096.jpg)'
  id: totrans-328
  prefs: []
  type: TYPE_IMG
  zh: '![购物车组件](Image00096.jpg)'
- en: Note
  id: totrans-329
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can find the source code in the `chapter_3/7.ecommerce-dropdown` folder.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在`chapter_3/7.ecommerce-dropdown`文件夹中找到源代码。
- en: Summary
  id: totrans-331
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: We've covered a lot in this chapter, and it's time to interrupt our journey,
    take a break, and recap it all.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们涵盖了很多内容，现在是时候中断我们的旅程，休息一下，回顾一切了。
- en: Bootstrap allowed us to capture our customer's attention with Jumbotron and
    carousel slideshow quite easily.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap让我们很容易地用Jumbotron和轮播幻灯片抓住了顾客的注意力。
- en: We also looked at the powerful responsive grid system included with Bootstrap
    and created a simple two-column layout. While we were doing this, we learned about
    the five different column class prefixes and also nested our grid. To adapt our
    design, we discovered some of the helper classes included with the framework to
    allow us to float, center, and hide elements.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还研究了Bootstrap中包含的强大响应式网格系统，并创建了一个简单的两列布局。在这个过程中，我们了解了五种不同的列类前缀，还嵌套了我们的网格。为了调整我们的设计，我们发现了一些框架中包含的辅助类，让我们能够浮动、居中和隐藏元素。
- en: In this chapter, we saw in detail how to use input, button, and list groups
    in our project. A simple but powerful component such as dropdowns and tables helped
    us to create our components quickly and more efficiently.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们详细了解了如何在项目中使用输入、按钮和列表组。像下拉菜单和表格这样简单但强大的组件帮助我们更快速、更高效地创建我们的组件。
- en: In [Chapter 4](text00036.html#page "Chapter 4. Creating the Template") , *Creating
    the Template* , we're going to explore more Bootstrap fundamentals and continue
    to build the project we started to develop in this and the previous chapter.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第4章](text00036.html#page "第4章。创建模板") *创建模板*中，我们将更深入地探讨Bootstrap的基础知识，并继续构建我们在本章和上一章开始开发的项目。
- en: In the next chapter, the readers will learn how to create a UI template using
    some built-in Angular 2 directives. Readers will become familiar with the template
    syntax. We will show you how to bind properties and events in an HTML page and
    transform displays using pipes.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，读者将学习如何使用一些内置的Angular 2指令来创建UI模板。读者将熟悉模板语法。我们将向您展示如何在HTML页面中绑定属性和事件，并使用管道来转换显示。
