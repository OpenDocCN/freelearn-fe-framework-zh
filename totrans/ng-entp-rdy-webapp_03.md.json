["```js\n    projects/ch3 \n    ```", "```js\n    npx ng serve ch3 \n    ```", "```js\n    **src/app/app.component.html**\n    <div style=\"text-align:center\">\n      <h1>\n        LocalCast Weather\n      </h1>\n      <div>Your city, your forecast, right now!</div>\n      <h2>Current Weather</h2>\n      <div>current weather</div>\n    </div> \n    ```", "```js\n    **src/app/app.component.ts**\n    import { Component } from '@angular/core'\n    @Component({\n      selector: 'app-root',\n      templateUrl: './app.component.html',\n      styleUrls: ['./app.component.css'],\n    })\n    export class AppComponent {} \n    ```", "```js\n    **src/app**\n    ├── app.component.css\n    ├── app.component.html\n    ├── app.component.spec.ts\n    ├── app.component.ts\n    ├── app.module.ts\n    ├── current-weather\n      ├── current-weather.component.css\n      ├── current-weather.component.html\n      ├── current-weather.component.spec.ts\n      └── current-weather.component.ts \n    ```", "```js\n    **src/app/current-weather/current-weather.component.ts**\n    import { Component, OnInit } from '@angular/core'\n    @Component({\n      selector: 'app-current-weather',\n      templateUrl: './current-weather.component.html',\n      styleUrls: ['./current-weather.component.css'],\n    })\n    export class CurrentWeatherComponent implements OnInit {\n      constructor() {}\n      ngOnInit() {}\n    } \n    ```", "```js\n    **example**\n    import { Component, OnInit } from '@angular/core'\n    @Component({\n      selector: 'app-current-weather', \n      template: `\n      <p>\n        current-weather works!\n      </p>\n      `,\n      styles: []\n    })\n    export class CurrentWeatherComponent implements OnInit {\n      constructor() {}\n      ngOnInit() {}\n    } \n    ```", "```js\n    **src/app/app.module.ts**\n    ...\n    import { \n      CurrentWeatherComponent \n    } from './current-weather/ current-weather.component'\n    ...\n    @NgModule({\n    declarations: [\n        AppComponent, \n        CurrentWeatherComponent\n      ],\n    ... \n    ```", "```js\n    **src/app/app.component.html**\n    <div style=\"text-align:center\">\n      <h1>\n        LocalCast Weather\n      </h1>\n      <div>Your city, your forecast, right now!</div>\n      <h2>Current Weather</h2>\n      <app-current-weather></app-current-weather>\n    </div> \n    ```", "```js\n@Component(...)\nexport class CurrentWeatherComponent implements OnInit {\n  constructor() {}\n  ngOnInit() {}\n} \n```", "```js\n    **src/app/icurrent-weather.ts**\n    export interface ICurrentWeather {\n    } \n    ```", "```js\n    **src/app/interfaces.ts**\n    export interface ICurrentWeather {\n      city: string\n      country: string \n      date: Date \n      image: string\n      temperature: number \n      description: string\n    } \n    ```", "```js\n    **src/app/current-weather/current-weather.component.ts**\n    import { Component, OnInit } from '@angular/core' \n    import { ICurrentWeather } from '../interfaces'\n    @Component({\n      selector: 'app-current-weather',\n      templateUrl: './current-weather.component.html',\n      styleUrls: ['./current-weather.component.css'],\n    })\n    export class CurrentWeatherComponent implements OnInit {\n      current: ICurrentWeather\n      constructor() {}\n      ngOnInit() {}\n    } \n    ```", "```js\n    **src/app/current-weather/current-weather.component.ts**\n    ...\n    constructor() { \n      this.current = {\n        city: 'Bethesda', \n        country: 'US', \n        date: new Date(),\n        image: 'assets/img/sunny.svg', \n        temperature: 72,\n        description: 'sunny',\n      } as ICurrentWeather\n    }\n    ... \n    ```", "```js\n    **src/app/current-weather/current-weather.component.html**\n    <div>\n      ...\n    </div> \n    ```", "```js\n    <div>\n      <span>{{current.city}}, {{current.country}}</span>\n      ...\n    </div> \n    ```", "```js\n    <span>{{current.date | date:'fullDate'}}</span> \n    ```", "```js\n    <div>\n      <img [src]='current.image'>\n      <span>{{current.temperature | number:'1.0-0'}}˚F</span>\n    </div> \n    ```", "```js\n    <div>\n      {{current.description}}\n    </div> \n    ```", "```js\n    **src/app/current-weather/current-weather.component.html**\n    <div>\n      <div>\n        <span>{{current.city}}, {{current.country}}</span>\n        <span>{{current.date | date:'fullDate'}}</span>\n      </div>\n      <div>\n        <img [src]='current.image'>\n        <span>{{current.temperature | number:'1.0-0'}}˚F</span>\n      </div>\n      <div>\n        {{current.description}}\n      </div>\n    </div> \n    ```", "```js\n    **src/app**\n    ...\n    └── weather\n    ├── weather.service.spec.ts\n    └── weather.service.ts \n    ```", "```js\n**src/app/weather/weather.service.ts**\nimport { Injectable } from '@angular/core'\n@Injectable({\n  providedIn: 'root',\n})\nexport class WeatherService {\n  constructor() {}\n} \n```", "```js\n    **src/app/app.module.ts**\n    ... \n    import { HttpClientModule } from '@angular/common/http' \n    ... \n    @NgModule({ \n      ... \n      imports: [..., HttpClientModule]\n      ...\n    }) \n    ```", "```js\n    **src/app/weather/weather.service.ts**\n    import { HttpClient } from '@angular/common/http'\n    import { Injectable } from '@angular/core'\n    @Injectable()\n    export class WeatherService {\n      constructor(private httpClient: HttpClient) {}\n    } \n    ```", "```js\n    api.openweathermap.org/data/2.5/weather?q={city name},{country code} \n    ```", "```js\n    **http://samples.openweathermap.org/data/2.5/weather?q=London,uk&appid=b1b15e88fa797225412429c1c50c122a1**\n    {\n      \"coord\": { \n        \"lon\": -0.13,\n        \"lat\": 51.51\n      },\n      \"weather\": [\n        {\n          \"id\": 300,\n          \"main\": \"Drizzle\",\n          \"description\": \"light intensity drizzle\",\n          \"icon\": \"09d\"\n        }\n      ],\n      \"base\": \"stations\",\n      \"main\": {\n        \"temp\": 280.32,\n        \"pressure\": 1012,\n        \"humidity\": 81,\n        \"temp_min\": 279.15,\n        \"temp_max\": 281.15\n      },\n      \"visibility\": 10000,\n      \"wind\": {\n        \"speed\": 4.1,\n        \"deg\": 80\n      },\n      \"clouds\": {\n      \"all\": 90\n      },\n      \"dt\": 1485789600,\n      \"sys\": {\n        \"type\": 1,\n        \"id\": 5091,\n        \"message\": 0.0103,\n        \"country\": \"GB\",\n        \"sunrise\": 1485762037,\n        \"sunset\": 1485794875\n      },\n      \"id\": 2643743,\n      \"name\": \"London\",\n      \"cod\": 200\n    } \n    ```", "```js\n    **src/app/weather/weather.service.ts**\n    interface ICurrentWeatherData { \n      weather: [{\n        description: string,\n        icon: string\n      }],\n      main: {\n        temp: number\n      },\n      sys: {\n        country: string\n      },\n      dt: number,\n      name: string\n    } \n    ```", "```js\n    **src/environments/environment.ts**\n    export const environment = {\n      production: false,\n      appId: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',\n      baseUrl: 'http://',\n    } \n    ```", "```js\n    **src/app/weather/weather.service.ts**\n    import { HttpClient } from '@angular/common/http'\n    import { environment } from '../../environments/environment'\n    ...\n    export class WeatherService {\n      constructor(\n        private httpClient: HttpClient\n      ) { }\n    getCurrentWeather(city: string, country: string) { \n      return this.httpClient\n        .get<ICurrentWeatherData>(\n        `${environment.baseUrl}api.openweathermap.org/data/2.5/weather?` +\n            `q=${city},${country}&appid=${environment.appId}`\n        )\n      }\n    } \n    ```", "```js\n    **src/app/weather/weather.service.ts**\n    import { HttpClient, HttpParams } from '@angular/common/http'\n    import { environment } from '../../environments/environment'\n    ...\n    export class WeatherService {\n      constructor(private httpClient: HttpClient) { }\n      getCurrentWeather(city: string, country: string) {\n        const uriParams = new HttpParams()\n          .set('q', `${city},${country}`)\n          .set('appid', environment.appId)\n        return this.httpClient\n          .get<ICurrentWeatherData>(\n        `${environment.baseUrl}api.openweathermap.org/data/2.5/weather`,\n            { params: uriParams }\n          )\n      }\n    } \n    ```", "```js\n    **src/app/current-weather/current-weather.component.ts**\n    constructor(private weatherService: WeatherService) { } \n    ```", "```js\n    **src/app/current-weather/current-weather.component.ts**\n    ngOnInit() { \n      this.weatherService.getCurrentWeather('Bethesda', 'US')\n        .subscribe((data) => this.current = data)\n    } \n    ```", "```js\n(data) => { this.current = data } \n```", "```js\nfunction(data) { this.current = data } \n```", "```js\n(data) => { data.main.temp } \n```", "```js\nfunction(data) { return data.main.temp } \n```", "```js\n**src/app/weather/weather.service.ts**\nimport { Observable } from 'rxjs'\nimport { ICurrentWeather } from '../interfaces'\n...\nexport class WeatherService {\n  ...\n  getCurrentWeather(city: string, country: string): \n    Observable<ICurrentWeather> {\n  }\n  ...\n} \n```", "```js\n    **src/app/weather/weather.service.ts**\n    export class WeatherService {\n    ...\n      private transformToICurrentWeather(data: ICurrentWeatherData): ICurrentWeather {\n        return {\n          city: data.name,\n          country: data.sys.country,\n          date: data.dt * 1000,\n          image:\n    `http://openweathermap.org/img/w/${data.weather[0].icon}.png`, \n          temperature: this.convertKelvinToFahrenheit(data.main.temp), \n          description: data.weather[0].description,\n        }\n      }\n      private convertKelvinToFahrenheit(kelvin: number): number\n      { \n        return kelvin * 9 / 5 - 459.67\n      }\n    } \n    ```", "```js\n    **src/app/weather/weather.service.ts**\n    import { map } from 'rxjs/operators' \n    ```", "```js\n    **src/app/weather/weather.service.ts**\n    ...\n    return this.httpClient\n      .get<ICurrentWeatherData>(\n        `${environment.baseUrl}api.openweathermap.org/data/2.5/weather`,\n        { params: uriParams }\n      )\n      .pipe(map(data => this.transformToICurrentWeather(data)))\n    ... \n    ```", "```js\n**src/app/current-weather/current-weather.component.ts**\nngOnInit(): void {\n    // this.weatherService\n    //   .getCurrentWeather('Bethesda', 'US')\n    //   .subscribe(data => (this.current = data))\n} \n```", "```js\n**src/app/current-weather/current-weather.component.ts**\nconstructor(private weatherService: WeatherService) { \n  this.current = {\n    city: '',\n    country: '', \n    date: 0, \n    image: '',\n    temperature: 0, \n    description: '',\n  }\n} \n```", "```js\n**src/app/current-weather/current-weather.component.html**\n<div>\n  <div>\n    <span>{{current?.city}}, {{current?.country}}</span>\n    <span>{{current?.date | date:'fullDate'}}</span>\n  </div>\n  <div>\n    <img [src]='current?.image'>\n    <span>{{current?.temperature}}℉</span>\n  </div>\n  <div>\n    {{current?.description}}\n  </div>\n</div> \n```", "```js\n    **src/app/current-weather/current-weather.component.html**\n    <div *ngIf=\"!current\">\n      no data\n    </div>\n    <div *ngIf=\"current\">\n    ...\n    </div> \n    ```", "```js\n    **src/app/current-weather/current-weather.component.ts**\n    ngOnInit(): void {\n      this.weatherService\n          .getCurrentWeather('Bethesda', 'US')\n          .subscribe(data => (this.current = data))\n    } \n    ```"]