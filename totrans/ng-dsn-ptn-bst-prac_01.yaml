- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: Starting Projects the Right Way
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 正确开始项目
- en: '**Angular** is a framework that has the motto “*batteries included*” as a development
    philosophy. This means that practically all the resources you need for your frontend
    application needs are already available as soon as you create a new project.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**Angular** 是一个以“*一应俱全*”作为开发理念的框架。这意味着您需要的所有前端应用程序资源在创建新项目时就已经全部可用。'
- en: In this chapter, you will understand why choose Angular for your web application,
    what its main characteristics and design are, and why companies, especially the
    biggest ones, choose Angular as the main framework for developing single-page
    applications.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将了解为什么为您的 Web 应用程序选择 Angular，它的主要特性和设计是什么，以及为什么公司，尤其是最大的公司，选择 Angular
    作为开发单页应用程序的主要框架。
- en: You will explore the technologies that make up the framework and thus take greater
    advantage of possible alternatives if you need them for a specific case. You’ll
    also set up your workspace with the best tools to help you and your team’s productivity.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 您将探索构成框架的技术，并在需要特定情况下的可能替代方案时，充分利用这些技术。您还将使用最佳工具设置您的办公空间，以帮助您和您的团队提高生产力。
- en: 'In this chapter, we’re going to cover the following topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Why choose Angular?
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么选择 Angular？
- en: What technologies are present in the ecosystem?
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生态系统中有哪些技术？
- en: Configuring your development environment
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置您的开发环境
- en: Starting an Angular project
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开始一个 Angular 项目
- en: Using the Angular **Command-Line Interface** (**CLI**) for your productivity
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Angular **命令行界面** (**CLI**) 提高您的生产力
- en: By the end of this chapter, you will have arguments for using Angular in your
    project and be more productive in your development workspace.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，您将为在项目中使用 Angular 提供论据，并在您的开发工作区中更加高效。
- en: Technical requirements
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'To follow the instructions in this chapter, you’ll need the following:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 要遵循本章中的说明，您需要以下内容：
- en: '**Visual Studio Code** (**VS** **Code**) ([https://code.visualstudio.com/Download](https://code.visualstudio.com/Download))'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Visual Studio Code** (**VS** **Code**) ([https://code.visualstudio.com/Download](https://code.visualstudio.com/Download))'
- en: Node.js 18 or higher ([https://nodejs.org/en/download/](https://nodejs.org/en/download/))
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Node.js 18 或更高版本 ([https://nodejs.org/en/download/](https://nodejs.org/en/download/))
- en: The code files for this chapter are available at .
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码文件可在 [此处](https://example.org) 获取。
- en: Why choose Angular?
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么选择 Angular？
- en: The choice of technology to be used in a given project is critical to its success.
    You, as a project developer or architect, must help your team in this mission
    by choosing the best tool for the job.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在特定项目中选择要使用的技术对其成功至关重要。作为项目开发者或架构师，您必须通过选择最适合这项工作的工具来帮助您的团队完成这项任务。
- en: The Angular framework is one of the most used tools for building a single-page
    application, along with React and Vue. When choosing the right tool for the job,
    you need to answer *why*.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Angular 框架是构建单页应用程序最常用的工具之一，与 React 和 Vue 一起。在选择适合这项工作的正确工具时，您需要回答“为什么”。
- en: The following are some arguments for choosing Angular.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些选择 Angular 的论据。
- en: Batteries included
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一应俱全
- en: Angular is an opinionated framework, which means that the Angular development
    team has already made several choices of tools and solutions for every challenge
    that a web application can have. This way, you and your team don’t have to research
    which route engine or state management library you should use; it’s all included
    and configured for your project.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Angular 是一个有观点的框架，这意味着 Angular 开发团队已经为每个可能出现在 Web 应用程序中的挑战做出了几个工具和解决方案的选择。这样，您和您的团队就不必研究应该使用哪个路由引擎或状态管理库；所有这些都已经包含并为您项目配置好了。
- en: This feature also simplifies the onboarding of new developers in your team.
    Following the guidelines proposed by the documentation and using the best practices,
    Angular projects usually have the same structure and method of development. Knowing
    Angular you can quickly locate yourself in any ongoing project.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 此功能还简化了您团队中新开发者的入职流程。遵循文档中提出的指南和使用最佳实践，Angular 项目通常具有相同的结构和开发方法。了解 Angular 后，您可以快速定位到任何正在进行的项目。
- en: Google support
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Google 支持
- en: Angular was created and maintained by the Angular team at Google. Although excellent
    frameworks such as Vue.js and Svelte are maintained only by their communities,
    having such a big tech company supporting the framework brings security to the
    choice of technology, especially for large companies.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Angular是由谷歌的Angular团队创建和维护的。尽管像Vue.js和Svelte这样的优秀框架仅由其社区维护，但有一个大型科技公司支持框架，这为技术选择带来了安全性，尤其是对于大型公司来说。
- en: In addition, Angular is used in more than 300 internal applications and Google
    products, which means stability and quality because, before each new version of
    the framework is released, it is validated in all these applications.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Angular被用于超过300个内部应用程序和谷歌产品中，这意味着稳定性和质量，因为，在发布框架的新版本之前，它已经在所有这些应用程序中得到验证。
- en: The Angular team has strived since version 13 to increase transparency within
    the community by releasing a roadmap ([https://angular.io/guide/roadmap](https://angular.io/guide/roadmap))
    detailing all the improvements in progress and what to expect for the future of
    the framework, giving you peace of mind that it will be supported for years to
    come.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 自从版本13以来，Angular团队一直努力通过发布路线图([https://angular.io/guide/roadmap](https://angular.io/guide/roadmap))来增加社区内的透明度，详细说明所有正在进行中的改进以及未来框架的预期，让您放心，它将在未来几年内得到支持。
- en: Community
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 社区
- en: Technology is only as alive as the community that supports it, and Angular has
    a huge one. Meetups, podcasts, events, articles, and videos – the Angular community
    has many resources to help developers.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 技术的生命力取决于支持它的社区，Angular拥有一个庞大的社区。聚会、播客、活动、文章和视频——Angular社区拥有许多资源来帮助开发者。
- en: The people who make up this community also have the important contribution of
    giving feedback, creating and correcting issues in Angular. As it is an open source
    project, everyone is invited to evaluate and contribute to the code.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 构成这个社区的人们还对Angular做出了重要的贡献，即提供反馈、创建和修复Angular的问题。由于它是一个开源项目，每个人都受邀评估和贡献代码。
- en: The Angular team also asks the community for help with major framework decisions
    through **Requests for** **Comment** (**RFCs**).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Angular团队还通过**请求评论**（**RFCs**）的方式向社区寻求帮助，以做出重大的框架决策。
- en: In addition, the community creates many libraries that expand the possibilities
    of the framework, such as NgRx ([https://ngrx.io/](https://ngrx.io/)) for advanced
    state management and Transloco ([https://ngneat.github.io/transloco/](https://ngneat.github.io/transloco/))
    to support internationalization, among others.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，社区还创建了众多库，扩展了框架的可能性，例如NgRx([https://ngrx.io/](https://ngrx.io/))用于高级状态管理和Transloco([https://ngneat.github.io/transloco/](https://ngneat.github.io/transloco/))以支持国际化等。
- en: Tooling
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工具
- en: One of the differentiating factors of Angular compared to its competitors is
    the focus from the beginning on tooling and developer experience. The Angular
    CLI tool is a powerful productivity tool that we will explore in this chapter,
    which is used far beyond the simple creation and setup of a project.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 与其竞争对手相比，Angular的一个不同之处在于从一开始就专注于工具和开发者体验。Angular CLI工具是一个强大的生产力工具，我们将在本章中探讨它，它不仅用于项目的简单创建和设置。
- en: From a testing point of view, Angular is already equipped and configured with
    Karma as a test runner and Jasmine as a configuration tool. Angular’s tooling
    already configures the project build using webpack and already has a dev server.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 从测试的角度来看，Angular已经配备了Karma作为测试运行器和Jasmine作为配置工具。Angular的工具已经使用webpack配置了项目构建，并且已经有一个开发服务器。
- en: The tool is also extensible, allowing the community to create routines for configuring
    and updating their libraries.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 该工具也是可扩展的，允许社区为配置和更新他们的库创建常规。
- en: With these arguments, you will be able to base your choice of Angular on your
    project; let’s see now which technologies make up the framework’s ecosystem.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 基于这些论点，您将能够根据您的项目选择Angular；现在让我们看看构成框架生态系统的技术有哪些。
- en: What technologies are present in the ecosystem?
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生态系统中有哪些技术？
- en: The Angular team, when creating the solution for the growing complexity of web
    application development, decided to unite the best tools and libraries in an opinionated
    package with the maximum number of configurations made by default.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 当Angular团队为不断增长的Web应用程序开发复杂性寻找解决方案时，决定将最佳的工具和库联合在一个有见地的包中，并尽可能多地使用默认配置。
- en: We then have the following libraries that make up the core of Angular.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们有以下库构成了Angular的核心。
- en: TypeScript
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: TypeScript
- en: '**TypeScript** is a superset of the JavaScript language that adds type checking
    and other features to the language, ensuring a better developer experience and
    security for web development.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**TypeScript** 是 JavaScript 语言的超集，它向语言添加了类型检查和其他功能，确保了更好的开发体验和安全性，适用于 Web 开发。'
- en: It has been present in Angular since its first version and is the cornerstone
    of the framework that enables several features such as dependency injection, typed
    forms and Angular’s tooling.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 它自 Angular 的第一个版本以来就存在，是框架的基石，它使得依赖注入、类型化表单和 Angular 的工具等功能成为可能。
- en: TypeScript is currently the preferred tool for backend development in Node.js
    and is encouraged by communities of other frameworks such as React and Vue.js.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: TypeScript 目前是 Node.js 后端开发的首选工具，并且受到 React 和 Vue.js 等其他框架社区的鼓励。
- en: RXJS
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: RXJS
- en: RXJS is a library that implements the reactive paradigm ([https://www.reactivemanifesto.org/](https://www.reactivemanifesto.org/))
    in the JavaScript language.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: RXJS 是一个在 JavaScript 语言中实现响应式范式的库 ([https://www.reactivemanifesto.org/](https://www.reactivemanifesto.org/))。
- en: Since the first version of Angular, reactivity was a core theme that the framework
    wanted to achieve and so it uses the **RXJS** library to help with it.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 自 Angular 的第一个版本以来，响应性一直是框架想要实现的核心主题，因此它使用 **RXJS** 库来帮助实现这一目标。
- en: HTTP requests, routes, forms, and other Angular elements use the concepts of
    observables and their operators to provide Angular developers with the tools to
    create more fluid and dynamic applications with less boilerplate code.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: HTTP 请求、路由、表单以及其他 Angular 元素使用可观察对象及其操作符的概念，为 Angular 开发者提供工具，以创建更流畅和动态的应用程序，同时减少样板代码。
- en: RXJS also provides mechanisms for state management in a frontend application
    without the need to use more complex patterns such as Redux.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: RXJS 还提供了在前端应用程序中进行状态管理的方法，无需使用更复杂的模式，如 Redux。
- en: Karma and Jasmine
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Karma 和 Jasmine
- en: Quality should be the top priority in any application and this is especially
    important in frontend applications as for the user, it is *the* application.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 质量在任何应用程序中都应该是首要任务，这对于前端应用程序尤为重要，因为对于用户来说，它就是 **那个** 应用程序。
- en: One of the ways to attest to quality is through testing, and with that in mind,
    Angular already comes by default with the tool duo of **Jasmine** and **Karma**.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 质量的一个证明方式是通过测试，考虑到这一点，Angular 默认已经包含了 **Jasmine** 和 **Karma** 工具组合。
- en: Jasmine is a framework for unit-testing JavaScript and TypeScript applications
    with several functions for assertion and test assembly.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Jasmine 是一个用于对 JavaScript 和 TypeScript 应用程序进行单元测试的框架，它提供了多个断言和测试组装功能。
- en: Karma is the test runner, that is, the environment where the unit test setup
    is executed with the help of Jasmine. This environment, configured in its configuration
    file, runs in browsers, making the test more realistic in comparison to customers’
    daily lives.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Karma 是测试运行器，即执行单元测试设置的运行环境，它借助 Jasmine 来执行。这个环境在其配置文件中配置，在浏览器中运行，与客户的日常生活相比，使测试更加真实。
- en: Many people in the community switch these tools for the Jest framework due to
    performance in the execution of the tests, which is totally fine and even facilitated
    by the Angular CLI; however, it should be noted that this tool does not run in
    a browser, which really improves the performance of the test execution but may
    hide some particularity that only testing in a browser would provide.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 由于测试执行的性能，社区中许多人将这两个工具切换到 Jest 框架，这是完全可以接受的，甚至 Angular CLI 还提供了便利；然而，应该注意的是，这个工具不在浏览器中运行，这确实提高了测试执行的性能，但可能会隐藏一些只有通过在浏览器中进行测试才能提供的特定性。
- en: Webpack
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Webpack
- en: After the development of an application, it is necessary to create the bundle
    to send it to production, and Webpack is the tool that the Angular team chose
    for this task.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用程序开发完成后，需要创建捆绑包以发送到生产环境，Webpack 就是 Angular 团队选择的这个任务的工具。
- en: Webpack is a very powerful and versatile bundler, and it is thanks to it that
    the framework manages to make some interesting optimizations such as tree shaking
    and lazy loading of bundles.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: Webpack 是一个非常强大且通用的打包器，正是由于它，框架能够实现一些有趣的优化，如摇树优化和捆绑的懒加载。
- en: However, Webpack is complex in its configuration, and with that in mind, the
    Angular team has already set up and created some abstractions for fine-tuning
    the tool, such as the `angular.json` file.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，Webpack 的配置复杂，考虑到这一点，Angular 团队已经设置并创建了一些抽象，以便对工具进行微调，例如 `angular.json` 文件。
- en: We understand what pieces make up the framework and how they relate to delivering
    rich and fluid interfaces. We will now set up our development environment.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们理解框架的各个组成部分以及它们如何与提供丰富和流畅的用户界面相关联。现在，我们将设置我们的开发环境。
- en: Configuring your development environment
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置您的开发环境
- en: A well-organized environment with the right tools is the first step toward excellence
    and productivity; now, let’s set this environment up in your workspace.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有正确工具的井然有序的环境是通往卓越和高效的第一步；现在，让我们在您的开发空间中设置此环境。
- en: After installing Node.js following the instructions in the *Technical requirements*
    section, the following tools and their plugins will help you in your workflow.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 按照技术要求部分中的说明安装 Node.js 后，以下工具及其插件将帮助您在您的开发流程中。
- en: VS Code
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: VS Code
- en: '**VS Code** ([https://code.visualstudio.com/](https://code.visualstudio.com/))
    is currently the default tool for most developers, especially for frontend projects.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**VS Code** ([https://code.visualstudio.com/](https://code.visualstudio.com/))
    目前是大多数开发者的默认工具，尤其是对于前端项目。'
- en: There are other very good ones such as WebStorm ([https://www.jetbrains.com/webstorm](https://www.jetbrains.com/webstorm)),
    but VS Code, with its plugins especially for Angular projects, facilitates great
    productivity and ergonomics.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他非常好的工具，例如 WebStorm ([https://www.jetbrains.com/webstorm](https://www.jetbrains.com/webstorm))，但
    VS Code，特别是针对 Angular 项目的插件，可以极大地提高生产力和人体工程学。
- en: To install the plugins listed here, in the code editor, click on **Extensions**
    or use the shortcut *Ctrl* + *Shift* + *X* (Windows) or *Cmd* + *Shift* + *X*
    (macOS).
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装此处列出的插件，在代码编辑器中点击**扩展**或使用快捷键 *Ctrl* + *Shift* + *X*（Windows）或 *Cmd* + *Shift*
    + *X*（macOS）。
- en: The following are the VS Code plugins recommended for developing Angular applications.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是为开发 Angular 应用程序推荐的 VS Code 插件。
- en: Git Extension Pack
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Git 扩展包
- en: '**Git Extension Pack** ([https://marketplace.visualstudio.com/items?itemName=donjayamanne.git-extension-pack](https://marketplace.visualstudio.com/items?itemName=donjayamanne.git-extension-pack))
    is not specifically for developing Angular applications but it is useful for any
    kind of work.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**Git 扩展包** ([https://marketplace.visualstudio.com/items?itemName=donjayamanne.git-extension-pack](https://marketplace.visualstudio.com/items?itemName=donjayamanne.git-extension-pack))
    并非专门用于开发 Angular 应用程序，但它对任何类型的工作都很有用。'
- en: Git is the default tool for version control and VS Code has native support for
    it. This set of plugins improves this support even further, adding the ability
    to read comments and changes made in previous commits in the editor, support for
    multiple projects, and a better view of your repository history and logs.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: Git 是版本控制的默认工具，VS Code 对其有原生支持。这一套插件进一步增强了这种支持，增加了在编辑器中读取先前提交中注释和更改的能力、支持多个项目，以及更好地查看您的存储库历史和日志。
- en: Angular Language Service
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Angular 语言服务
- en: The **Angular Language Service** ([https://marketplace.visualstudio.com/items?itemName=Angular.ng-template](https://marketplace.visualstudio.com/items?itemName=Angular.ng-template))
    extension is maintained by the Angular team and adds support for most of the framework’s
    functionality right from the code editor.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**Angular 语言服务** ([https://marketplace.visualstudio.com/items?itemName=Angular.ng-template](https://marketplace.visualstudio.com/items?itemName=Angular.ng-template))
    扩展由 Angular 团队维护，并从代码编辑器开始添加了对框架大多数功能的支持。'
- en: 'By adding this extension to your editor, it will have the following features:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将此扩展添加到您的编辑器中，它将具有以下功能：
- en: Autocomplete in the HTML template file, allowing you to use component methods
    without having to consult the TypeScript file
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 HTML 模板文件中进行自动完成，让您无需查阅 TypeScript 文件即可使用组件方法
- en: Checking for possible compilation errors in HTML template files and TypeScript
    files
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查 HTML 模板文件和 TypeScript 文件中可能的编译错误
- en: Quick navigation between HTML and TypeScript templates, allowing you to consult
    the definition of methods and objects
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速在 HTML 和 TypeScript 模板之间导航，让您能够查阅方法和对象的定义
- en: This extension is also available for other IDEs such as WebStorm and Eclipse.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 此扩展也适用于其他 IDE，如 WebStorm 和 Eclipse。
- en: Prettier
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Prettier
- en: '**Prettier** ([https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode](https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode))
    is a JavaScript tool that solves the code formatting problem. It is opinionated
    on formatting settings although some customization is possible.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**Prettier** ([https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode](https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode))
    是一个 JavaScript 工具，用于解决代码格式化问题。尽管可以进行一些自定义，但它对格式化设置有明确的观点。'
- en: In addition to TypeScript, Prettier formats HTML, CSS, JSON, and JavaScript
    files, making this extension useful also for backend development using Node.js.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 TypeScript，Prettier 还格式化 HTML、CSS、JSON 和 JavaScript 文件，这使得此扩展对于使用 Node.js
    进行后端开发也非常有用。
- en: To standardize formatting across your entire team, you can install Prettier
    as a package for your project and run it on the project’s CI/CD track, which we’ll
    see in [*Chapter 12*](B19562_12.xhtml#_idTextAnchor311), *Packaging Everything
    – Best Practices* *for Deployment*.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在整个团队中标准化格式，您可以将 Prettier 作为项目包安装，并在项目的 CI/CD 轨道上运行它，我们将在 [*第 12 章*](B19562_12.xhtml#_idTextAnchor311)，*打包一切
    – 部署最佳实践* 中看到。
- en: ESLint
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ESLint
- en: When creating an application, the use of a linter is highly recommended to ensure
    good language practices and avoid errors from the beginning of development.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建应用程序时，强烈建议使用代码检查器以确保良好的语言实践并避免开发初期的错误。
- en: In the past, the default tool for linting TypeScript projects was **TSLint**,
    but the project has been absorbed by **ESLint** (https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint),
    which allows you to verify JavaScript and TypeScript projects.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去，用于检查 TypeScript 项目的默认工具是 **TSLint**，但该项目已被 **ESLint** (https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint)
    吸收，这使得您能够验证 JavaScript 和 TypeScript 项目。
- en: With this extension, verification occurs quickly while you type the code of
    your project. ESLint can be installed as a package in your Angular project and
    thus performs this validation on the CI/CD conveyor of your project, which we
    will see in [*Chapter 12*](B19562_12.xhtml#_idTextAnchor311), *Packaging Everything
    – Best Practices* *for Deployment*.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此扩展，在您键入项目代码的同时，验证会迅速发生。ESLint 可以作为包安装到您的 Angular 项目中，从而在项目的 CI/CD 传输带上执行此验证，我们将在
    [*第 12 章*](B19562_12.xhtml#_idTextAnchor311)，*打包一切 – 部署最佳实践* 中看到。
- en: EditorConfig
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: EditorConfig
- en: The **EditorConfig** ([https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig](https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig))
    plugin has the function of creating a default configuration file for not only
    VS Code but also any IDE that supports this format.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**EditorConfig** ([https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig](https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig))
    插件不仅为 VS Code，还为任何支持此格式的 IDE 提供创建默认配置文件的功能。'
- en: This plugin is useful for standardizing things for your project and your team
    – for example, the number of spaces that each *Tab* key represents, or whether
    your project will use single quotes or double quotes to represent strings.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 此插件对标准化您的项目和团队中的事物非常有用——例如，每个 *Tab* 键表示的空格数，或者您的项目是否将使用单引号或双引号来表示字符串。
- en: To use it, just create or have a file named `.editorconfig` at the root of your
    project and VS Code will respect the settings described in the file.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用它，只需在项目的根目录下创建或拥有一个名为 `.editorconfig` 的文件，VS Code 将尊重文件中描述的设置。
- en: VS Code settings
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: VS Code 设置
- en: VS Code, in addition to extensions, has several native settings that can help
    in your day-to-day work. By accessing the **File** menu, we can activate the automatic
    saving flag so you don’t have to worry about pressing *Ctrl* + *S* all the time
    (although this habit is already engraved in stone in our brains...).
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: VS Code 除了扩展之外，还有一些原生设置可以帮助您在日常工作中。通过访问 **文件** 菜单，我们可以激活自动保存标志，这样您就不必总是担心按 *Ctrl*
    + *S*（尽管这个习惯已经在我们的脑海中根深蒂固...）。
- en: Another interesting setting is **Zen** mode, where all windows and menus are
    hidden so you can just focus on your code. To activate it, go to **View** | **Appearance**
    | **Zen Mode**, or use the keyboard shortcut *Ctrl* + *K* + *Z* for Windows/Linux
    systems and *Cmd* + *K* + *Z* for macOS.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有趣的设置是 **禅模式**，其中所有窗口和菜单都被隐藏，这样您就可以专注于代码。要激活它，请转到 **视图** | **外观** | **禅模式**，或使用键盘快捷键
    *Ctrl* + *K* + *Z*（Windows/Linux 系统）和 *Cmd* + *K* + *Z*（macOS）。
- en: To improve the readability of your code during editing, an interesting setting
    is **Bracket coloring**, which will give each parenthesis and bracket in your
    code a different color.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在编辑时提高代码的可读性，一个有趣的设置是 **括号着色**，它将为您的代码中的每个括号和括号赋予不同的颜色。
- en: To enable this setting, open the `configuration` file using the shortcut *Ctrl*
    + *Shift* + *P* for Windows/Linux or *Cmd* + *Shift* + *P* for macOS and type
    `Open User` `Settings (JSON)`.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用此设置，请使用快捷键 *Ctrl* + *Shift* + *P*（Windows/Linux）或 *Cmd* + *Shift* + *P*（macOS）打开
    `配置` 文件，并输入 `打开用户` `设置 (JSON)`。
- en: 'In the file, add the following elements:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在文件中添加以下元素：
- en: '[PRE0]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: VS Code also has the **Inlay Hints** feature, which shows details of parameter
    types and return methods, as well as other useful information on the line you
    are reading in the code.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: VS Code 还具有 **内联提示** 功能，它显示参数类型和返回方法的详细信息，以及您正在阅读的代码行上的其他有用信息。
- en: To configure it in the **Settings** menu, look for **Inlay Hints** and activate
    it if it is not already configured. For the development of your Angular application,
    you can also perform specific configurations by selecting **TypeScript**.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 要在**设置**菜单中配置它，查找**内联提示**并激活它，如果它尚未配置。对于您的 Angular 应用程序的开发，您还可以通过选择**TypeScript**来执行特定的配置。
- en: 'It is also possible to turn on this functionality by directly configuring the
    `settings.json` file with the following elements:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以通过直接使用以下元素配置 `settings.json` 文件来启用此功能：
- en: '[PRE1]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Fira Code font and ligatures
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Fira Code 字体和连字符
- en: An important detail that not every developer pays attention to is the type of
    font they use in their code editor. A confusing font can make it difficult to
    read code and tire your eyes.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 并非每个开发者都会注意到的一个重要细节是他们代码编辑器中使用的字体类型。一个令人困惑的字体可能会使阅读代码变得困难，并使您的眼睛感到疲劳。
- en: The ideal option is to use monospaced fonts, that is, fonts where the characters
    occupy the same horizontal space.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 理想的选择是使用等宽字体，即字符占据相同水平空间的字体。
- en: 'A very popular font is `==`, `>=`, and `=>`, as shown in the following figure:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 如下图中所示，一个非常受欢迎的字体是 `==`、`>=` 和 `=>`：
- en: '![Figure 1.1 – Example of symbols with font ligatures](img/B19562_01_1.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.1 – 带有字体连字符的符号示例](img/B19562_01_1.jpg)'
- en: Figure 1.1 – Example of symbols with font ligatures
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.1 – 带有字体连字符的符号示例
- en: 'After installing the font on your operating system, to enable ligatures in
    the font in VS Code, access the `configuration` file as in the previous section
    and add the following elements:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的操作系统上安装字体后，要启用 VS Code 中字体的连字符，按照上一节中的说明访问 `configuration` 文件，并添加以下元素：
- en: '[PRE2]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Standardizing the extensions and settings in the project
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在项目中标准化扩展和设置
- en: In the *Why choose Angular?* section, we learned that one of the advantages
    of choosing this framework for your project is the standardization it provides
    to development and the team.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *为什么选择 Angular？* 部分中，我们了解到选择这个框架进行项目开发的一个优点是它为开发团队提供标准化。
- en: You can also standardize your VS Code settings and record them in your Git repository
    so that not only you but also our team can have that leap in productivity.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以标准化您的 VS Code 设置，并将它们记录在您的 Git 仓库中，这样不仅您，我们的团队也能获得这种生产力飞跃。
- en: 'To do this, in your repository, create a folder called `.vscode`, and inside
    that folder, create two files. The `extensions.json` file will have all the extensions
    recommended by the project. In this example, we will use the extensions we saw
    earlier:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成这个任务，在你的仓库中创建一个名为 `.vscode` 的文件夹，并在该文件夹内创建两个文件。`extensions.json` 文件将包含项目推荐的所有扩展。在这个例子中，我们将使用我们之前看到的扩展：
- en: '[PRE3]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Let’s also create the `settings.json` file, which allows you to add VS Code
    settings to your workspace. These settings take precedence over user settings
    and VS Code’s default settings.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再创建一个 `settings.json` 文件，它允许您将 VS Code 设置添加到您的工作区。这些设置优先于用户设置和 VS Code 的默认设置。
- en: 'This file will have the previously suggested settings:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 此文件将包含之前建议的设置：
- en: '[PRE4]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'By synchronizing these files in your repository, when your team members download
    the project and open VS Code for the first time, the following message will appear:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在您的仓库中同步这些文件，当您的团队成员下载项目并首次打开 VS Code 时，将显示以下消息：
- en: '![Figure 1.2 – VS Code prompt for recommended extensions](img/B19562_01_2.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.2 – VS Code 推荐扩展的提示](img/B19562_01_2.jpg)'
- en: Figure 1.2 – VS Code prompt for recommended extensions
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.2 – VS Code 推荐扩展的提示
- en: Once confirmed, all the extensions configured in the file will be installed
    in the VS Code development environment of your team members, thus automating the
    task of standardizing the team’s work environment.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦确认，文件中配置的所有扩展都将安装到团队成员的 VS Code 开发环境中，从而自动化标准化团队工作环境的任务。
- en: Angular DevTools
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Angular DevTools
- en: One tool missing from the Angular framework was a way to drill down into an
    application in the browser. Browsers such as Chrome and Firefox have greatly improved
    the developer experience over the years, broadly for all types of websites.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Angular 框架中缺失的一个工具是钻入浏览器中的应用程序的方式。多年来，像 Chrome 和 Firefox 这样的浏览器已经极大地改善了所有类型网站的开发者体验。
- en: With that in mind, the Angular team, starting from version 12, created the Angular
    DevTools extension for Chrome and Firefox.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在此背景下，Angular 团队从版本 12 开始为 Chrome 和 Firefox 创建了 Angular DevTools 扩展。
- en: To install it, you need to go to the extension store of the browser (Chrome
    or Firefox) and click on **Install**.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装它，您需要前往浏览器（Chrome 或 Firefox）的扩展程序商店并点击 **安装**。
- en: 'With it installed, access to the site built with Angular, and with the build
    set up for development, the **Angular** tab will appear in the developer tools:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 安装后，访问使用 Angular 构建的网站，以及为开发设置的构建，开发者工具中会出现 **Angular** 选项卡：
- en: '![Figure 1.3 – Angular DevTools Chrome extension example](img/B19562_01_3.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.3 – Angular DevTools Chrome 扩展示例](img/B19562_01_3.jpg)'
- en: Figure 1.3 – Angular DevTools Chrome extension example
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.3 – Angular DevTools Chrome 扩展示例
- en: This tool allows you to browse the structure of your app, locate the code of
    the components on the screen, and profile your application to detect possible
    performance problems.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 此工具允许您浏览应用程序的结构，定位屏幕上组件的代码，并对您的应用程序进行性能分析以检测可能的问题。
- en: Now you have a productive development environment for developing Angular applications,
    we are ready to start our application.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您已经拥有了开发 Angular 应用程序的生产力开发环境，我们准备开始我们的应用程序。
- en: Starting an Angular project
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始一个 Angular 项目
- en: 'We have our tools installed and configured and now we are going to start our
    Angular application. First, we are going to install the Angular CLI, which will
    be responsible for creating and building our application. In your terminal, type
    the following command:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经安装并配置了我们的工具，现在我们将开始我们的 Angular 应用程序。首先，我们将安装 Angular CLI，它将负责创建和构建我们的应用程序。在您的终端中，输入以下命令：
- en: '[PRE5]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'After installing the CLI, use the following command to confirm the installation:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 CLI 后，使用以下命令来确认安装：
- en: '[PRE6]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The following figure should appear in your terminal (the Angular version may
    be newer):'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图应在您的终端中显示（Angular 版本可能更新）：
- en: '![Figure 1.4 – Angular CLI prompt confirming you have correctly installed the
    tool](img/B19562_01_4.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.4 – Angular CLI 提示确认您已正确安装工具](img/B19562_01_4.jpg)'
- en: Figure 1.4 – Angular CLI prompt confirming you have correctly installed the
    tool
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.4 – Angular CLI 提示确认您已正确安装工具
- en: If the `ng` command is not recognized, restart the terminal. This `ng` command
    is the CLI call and will be used in this and other chapters of the book.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `ng` 命令不被识别，请重新启动终端。此 `ng` 命令是 CLI 调用，并将在本章和其他章节中使用。
- en: 'Let’s start our project using the `ng new` command. The Angular CLI will ask
    for some definitions of your project:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用 `ng new` 命令开始我们的项目。Angular CLI 将要求您定义一些项目：
- en: The first is the name of the project; for this example, enter `angular-start`.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一项是项目的名称；对于此示例，输入 `angular-start`。
- en: The second prompt is whether you’d like to configure your project’s routing,
    for which we’ll input `Yes`. This request will tell the CLI to create the base
    files for the route, which is recommended for most applications; an exception
    could be an Angular library you would like to create.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第二个提示是您是否想配置项目的路由，我们将输入 `Yes`。此请求将告诉 CLI 创建路由的基本文件，这对于大多数应用程序是推荐的；一个例外可能是您想要创建的
    Angular 库。
- en: The next prompt will tell you which CSS format your project will use. Angular
    by default supports conventional CSS and the SCSS, Sass, and Less tools. For this
    and other examples in the book, we will use `CSS`.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一个提示将告诉您项目将使用哪种 CSS 格式。Angular 默认支持常规 CSS 以及 SCSS、Sass 和 Less 工具。对于本书中的此和其他示例，我们将使用
    `CSS`。
- en: Confirming the Angular CLI will create the entire initial structure of the project
    and will install the dependencies using the `npm i` command, leaving everything
    ready for the start of development, as in the following example.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认 Angular CLI 将创建项目的整个初始结构，并使用 `npm i` 命令安装依赖项，为开发启动做好准备，如下例所示。
- en: '![Figure 1.5 – Prompt of files generated by angular-cli](img/B19562_01_5.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.5 – 由 angular-cli 生成的文件提示](img/B19562_01_5.jpg)'
- en: Figure 1.5 – Prompt of files generated by angular-cli
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.5 – 由 angular-cli 生成的文件提示
- en: 'To verify that the project was successfully installed, in your operating system’s
    terminal, type the following command:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证项目是否成功安装，在您的操作系统终端中输入以下命令：
- en: '[PRE7]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This command will start the development web server and load the example project
    page, as shown in *Figure 1**.6*:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将启动开发 Web 服务器并加载示例项目页面，如图 *图 1**.6* 所示：
- en: '![Figure 1.6 – Example page generated by angular-cli on project creation](img/B19562_01_6.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![图1.6 – 创建项目时由angular-cli生成的示例页面](img/B19562_01_6.jpg)'
- en: Figure 1.6 – Example page generated by angular-cli on project creation
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.6 – 创建项目时由angular-cli生成的示例页面
- en: 'The `ng new` command has other options that can be used for specific needs
    in your project. They are listed in the official documentation ([https://angular.io/cli/new](https://angular.io/cli/new)),
    and here are some that may be interesting:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '`ng new`命令还有其他选项，可以用于项目中特定的需求。它们列在官方文档（[https://angular.io/cli/new](https://angular.io/cli/new)）中，以下是一些可能有趣的选项：'
- en: '`Parameter ''—package-manager''`: With this parameter, it is possible to choose
    another node package manager such as `https://yarnpkg.com/`).'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`参数 ''—package-manager''`: 使用此参数，可以选择其他node包管理器，例如`https://yarnpkg.com/`）。'
- en: '`Parameter ''--skip-install''`: With this parameter, the CLI does not perform
    the package installation step, which can be useful for creating automation tools
    for your team.'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`参数 ''--skip-install''`: 使用此参数，CLI不会执行包安装步骤，这对于为你的团队创建自动化工具可能很有用。'
- en: '`Parameter ''--strict''`: This parameter is set to `true` by default, but it
    is important to mention it because it configures your project in `strict` mode,
    which configures the TypeScript and Angular mechanisms to improve type and template
    validations. For more details, see [*Chapter 3*](B19562_03.xhtml#_idTextAnchor112),
    *TypeScript Patterns* *for Angular*.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`参数 ''--strict''`: 此参数默认设置为`true`，但重要的是要提及它，因为它将项目配置为`strict`模式，该模式配置TypeScript和Angular机制以改进类型和模板验证。有关更多详细信息，请参阅[*第3章*](B19562_03.xhtml#_idTextAnchor112)，*Angular的TypeScript模式*。'
- en: Project structure
  id: totrans-156
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 项目结构
- en: 'The Angular CLI creates the project in the structure recommended by the Angular
    team with all files configured by default. To deepen our knowledge of the framework,
    we need to know the main files, their functions, and available customizations
    as follows:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: Angular CLI使用Angular团队推荐的结构创建项目，并默认配置所有文件。为了深化我们对框架的了解，我们需要了解主要文件、它们的函数以及可用的自定义化，如下所示：
- en: '`src`: This is the folder where your project will be, including all components,
    modules, and services.'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`src`: 这是你的项目所在的文件夹，包括所有组件、模块和服务。'
- en: '`assets`: Contains the static files you will need in your project, such as
    images and icons. In the build process, by default, it will export the files from
    this folder without any changes to the production build.'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`assets`: 包含你在项目中需要的静态文件，例如图片和图标。在构建过程中，默认情况下，它将从此文件夹导出文件，而不会对生产构建进行任何更改。'
- en: '`index.html`: This is the initial file of your application. This file will
    be used in the build process, and it is recommended not to change it unless there
    is a very specific need. The title information must be changed with an Angular
    feature and not directly in this file.'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`index.html`: 这是应用程序的初始文件。在构建过程中，此文件将被使用，除非有非常具体的需求，否则建议不要修改它。标题信息必须使用Angular功能进行更改，而不是直接在此文件中更改。'
- en: '`main.ts`: This is the first JavaScript file that will be loaded in your application.
    You shouldn’t change it unless your project has a very specific need for it to
    be changed.'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`main.ts`: 这是将在应用程序中加载的第一个JavaScript文件。除非你的项目有非常具体的需求需要更改它，否则你不应该更改它。'
- en: '`styles.css`: This is the file that can contain the global CSS of your application,
    that is, the CSS that can be read by all components since Angular by default isolates
    the CSS of each component. This file is usually modified when your project uses
    a design system such as Material ([https://material.angular.io/](https://material.angular.io/)).'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`styles.css`: 这是一个可以包含应用程序全局CSS的文件，即所有组件都可以读取的CSS，因为Angular默认将每个组件的CSS隔离。当你的项目使用Material（[https://material.angular.io/](https://material.angular.io/)）等设计系统时，通常需要修改此文件。'
- en: '`.editorconfig`: As described in the *VS Code* section of this chapter, this
    file, together with the extension that interprets and configures the IDE, allows
    standardization in your code conventions, such as the use of double or single
    quotes and the use of tabs or indentation spaces.'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.editorconfig`: 如本章的*VS Code*部分所述，此文件以及解释和配置IDE的扩展，允许在代码约定中实现标准化，例如使用双引号或单引号以及使用制表符或缩进空格。'
- en: '`angular.json`: This is the most important configuration file for an Angular
    application. In it, you can customize the way your project is built, and define
    *budgets* for the size of bundles (more details in [*Chapter 12*](B19562_12.xhtml#_idTextAnchor311),
    *Packaging Everything – Best Practices for Deployment*), among other settings.'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`package.json` and `package-lock.json`: These files refer to the dependencies
    of the `npm` packages of your project and also the place to create the `npm` scripts
    that will be used in the creation of the CI/CD pipes of the Angular application
    (more details in [*Chapter 12*](B19562_12.xhtml#_idTextAnchor311), *Packaging
    Everything – Best Practices* *for Deployment)*.'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'As of version 15 of Angular, the CLI hides Karma configuration files and environment
    variables files (`enviroment.ts`) by default with the justification of simplifying
    the project structure. It is still possible to create these files for fine-tuning
    your application build, test, and environment processes (more details in [*Chapter
    8*](B19562_08.xhtml#_idTextAnchor225), *Improving Backend Integrations: the* *Interceptor
    Pattern*).'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: We created our project using the `angular-cli` tool, but this tool can help
    us even more, as we will learn next.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: Using the Angular CLI for your productivity
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We learned how to create a project with all its options, but the Angular CLI
    is far from being just a project creation tool. It is a very important tool for
    the productivity and workflow of an Angular application. All available options
    are described using the following command:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: We will detail some of the most interesting options here, and in the next chapters,
    we will continue to use them, given the practicality of this tool.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: ng add
  id: totrans-172
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This command has the function of adding an Angular library to your project.
    You might be wondering, *Doesn’t npm install do the same thing?* and you’d be
    right. However, when you need to install Angular Material as a library, installing
    the dependency is just the first step.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: Many libraries such as Angular Material itself need the configuration of the
    `angular.json` file and the creation of some other `lib` file, among other tasks.
    The `ng add` command allows the library creator to automate these steps and simplify
    their workflow.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: 'To exemplify this in the project that we created, we will use the following
    command:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Executing the preceding command, the library will make some prompts (in the
    same format as we saw for the `ng new` command) and in the end, it will configure
    our project with the library, as shown in *Figure 1**.7*.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.7 – Installation of Angular Material using angular-cli](img/B19562_01_7.jpg)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
- en: Figure 1.7 – Installation of Angular Material using angular-cli
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: ng update
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the development of our projects, updating the version of something often
    takes more time than adding a new library. The `ng update` command makes this
    task almost trivial, being one of the greatest allies when it comes to updating
    the Angular version of our application.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们项目的开发过程中，更新某个版本的耗时往往比添加一个新库要长。`ng update` 命令使这项任务变得几乎微不足道，在我们更新应用程序的Angular版本时，它是最大的盟友之一。
- en: 'On the Angular update website ([https://update.angular.io/](https://update.angular.io/)),
    the Angular team details how to update a project in old versions. Larger and more
    complex projects may have their quirks (which are usually described on the website),
    but all applications start with the following command (in this case, version 15):'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在Angular更新网站([https://update.angular.io/](https://update.angular.io/))上，Angular团队详细说明了如何更新旧版本的项目。较大的和更复杂的项目可能有它们的怪癖（通常在网站上描述），但所有应用程序都从以下命令开始（在这种情况下，版本15）：
- en: '[PRE10]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The Angular CLI will take care of updating the package and even making possible
    automation-breaking changes; often, only this is enough to completely update your
    application.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: Angular CLI将负责更新包，甚至可能进行破坏自动化的更改；通常，这已经足够完全更新您的应用程序。
- en: This command, like `ng add`, is also available for libraries that have been
    configured by their authors and can benefit from this automation.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令，就像 `ng add` 一样，也适用于由其作者配置过的库，并且可以从这种自动化中受益。
- en: ng serve
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ng serve
- en: This command is used by every Angular developer (it’s the first thing you should
    do after creating a project) and its function is to upload a development web server.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令被每一位Angular开发者使用（这是您创建项目后应该做的第一件事），其功能是上传开发Web服务器。
- en: One of the most interesting and productive features of this command is the hot-reload
    capability; that is, the server restarts every time a project file is updated,
    allowing you to see its modification in real time in the interface.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令最有趣和最有生产力的特性之一是热重载功能；也就是说，每当项目文件更新时，服务器都会重新启动，让您能够实时在界面上看到其修改。
- en: 'A productivity tip for this command is to use the `open` parameter as follows:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此命令的一个生产力提示是使用以下`open`参数：
- en: '[PRE11]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: With this parameter, as soon as Angular loads your application, the CLI will
    open the default browser of your operating system with the application you are
    working on.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此参数，一旦Angular加载您的应用程序，CLI就会打开操作系统默认的浏览器，并显示您正在工作的应用程序。
- en: ng build
  id: totrans-192
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ng build
- en: The `ng build` command is intended to prepare your application bundle to be
    executed by the production web server of your choice.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '`ng build` 命令旨在准备您的应用程序包以便由您选择的生成Web服务器执行。'
- en: It performs a series of optimizations to guarantee the delivery of the smallest
    possible bundle of your application.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 它执行一系列优化以确保交付尽可能小的应用程序包。
- en: This results in a performance gain since with a smaller bundle, your client
    downloads faster, which is important, especially in environments with slow internet.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 这导致了性能提升，因为客户端下载较小的包更快，这在互联网速度慢的环境中尤为重要。
- en: We will discuss this command in more detail in [*Chapter 12*](B19562_12.xhtml#_idTextAnchor311),
    *Packaging Everything – Best Practices* *for Deployment*.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在[*第12章*](B19562_12.xhtml#_idTextAnchor311)中更详细地讨论此命令，*打包一切 – 部署最佳实践*。
- en: ng deploy
  id: totrans-197
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ng deploy
- en: The `ng deploy` command allows you to fully deploy your application to a cloud
    provider such as Microsoft Azure.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '`ng deploy` 命令允许您将应用程序完全部署到云服务提供商，如微软Azure。'
- en: This command works together with the Angular library of the provider you want
    to use, so for it to work, you need to install it.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令与您想要使用的提供商的Angular库协同工作，因此为了使其工作，您需要安装它。
- en: We will discuss this command in more detail in [*Chapter 12*](B19562_12.xhtml#_idTextAnchor311),
    *Packaging Everything – Best Practices* *for Deployment*.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在[*第12章*](B19562_12.xhtml#_idTextAnchor311)中更详细地讨论此命令，*打包一切 – 部署最佳实践*。
- en: ng generate
  id: totrans-201
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ng generate
- en: The `ng generate` command has the function to generate almost all types of Angular
    components that your application can use. This function brings a productivity
    gain in your workflow as it generates all the necessary files.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '`ng generate` 命令具有生成您应用程序可以使用的几乎所有类型的Angular组件的功能。此功能在您的流程中提高了生产力，因为它生成了所有必要的文件。'
- en: 'Let’s generate our `about` page in our example project with the following command:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在示例项目中使用以下命令生成我们的`about`页面：
- en: '[PRE12]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: We can analyze in our project folders that the Angular CLI created the TypeScript,
    HTML, and CSS files necessary for rendering the component.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在我们的项目文件夹中分析，Angular CLI 创建了渲染组件所需的 TypeScript、HTML 和 CSS 文件。
- en: However, it also generated the unit test file for this component and updated
    the module for its use. All these files already have the minimum boilerplate for
    the development of the component.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，它还为此组件生成了单元测试文件，并更新了模块以供其使用。所有这些文件都已经包含了组件开发所需的最小样板代码。
- en: 'In addition to generating practically all standard Angular components, this
    command can be used by external libraries that want to provide this development
    experience, as in the following example of Angular Material:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 除了生成几乎所有标准的 Angular 组件外，此命令还可以被希望提供这种开发体验的外部库使用，如下面的 Angular Material 示例所示：
- en: '[PRE13]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: In almost every chapter of the book, we’ll use this command to generate the
    components we’re going to study and the best practices and patterns for them.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的几乎每一章中，我们都会使用此命令来生成我们将要研究的组件，以及它们的最佳实践和模式。
- en: Summary
  id: totrans-210
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we covered the features and philosophy of Angular and how to
    start a project in the most productive way. We learned which technologies make
    up its ecosystem and how to configure its desktop with the best VS Code extensions
    and settings. Finally, we learned how to start a project with the Angular CLI
    and what other features this powerful tool can provide us with.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了 Angular 的特性和哲学，以及如何以最高效的方式启动一个项目。我们学习了构成其生态系统的技术，以及如何使用最佳的 VS Code
    扩展和设置来配置其桌面环境。最后，我们学习了如何使用 Angular CLI 启动一个项目，以及这个强大工具能为我们提供哪些其他功能。
- en: Now you’ll be able to argue why to use Angular in your team’s project and you’ll
    be able to help it set up a productive work environment. You’ll also be able to
    use the Angular CLI to create and maintain your project.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你将能够争论为什么要在你团队的项目中使用 Angular，你将能够帮助它设置一个高效的工作环境。你还将能够使用 Angular CLI 来创建和维护你的项目。
- en: In the next chapter, we will learn how to organize the components of an Angular
    application.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何组织 Angular 应用程序的组件。
