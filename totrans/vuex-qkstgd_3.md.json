["```js\nmkdir notes-app\ncd notes-app\nnpm init\n```", "```js\nnpm install --save-dev webpack\nnpm install --save-dev webpack-cli\nnpm install --save-dev webpack-dev-server\nnpm install --save-dev html-webpack-plugin\nnpm install --save-dev clean-webpack-plugin\n```", "```js\n// webpack.config.js\nconst path = require('path');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst CleanWebpackPlugin = require('clean-webpack-plugin');\nconst webpack = require('webpack');\n\nconst config = {\n  entry: {\n    app: './src/main.js',\n  },\n  output: {\n    filename: '[name].bundle.js',\n    path: path.resolve(__dirname, 'dist/'),\n  },\n  plugins: [\n    new HtmlWebpackPlugin({ template: 'src/index.html' }),\n    new CleanWebpackPlugin(['dist']),\n    new webpack.DefinePlugin({\n      'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV || 'development'),\n    }),\n  ]\n};\n\nmodule.exports = config;\n```", "```js\nmkdir src\n```", "```js\n<!-- src/index.html -->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Packt: Vuex condensed</title>\n</head>\n<body>\nHello world\n</body>\n</html>\n```", "```js\n// src/main.js\nconsole.log('Hello world');\n```", "```js\nnpx webpack --config webpack.config.js\n```", "```js\n<script type=\"text/javascript\" src=\"img/app.bundle.js\"></script>\n```", "```js\nnpx webpack-dev-server --config webpack.config.js\n```", "```js\n{\n  \"name\": \"notes-app\",\n  \"version\": \"1.0.0\",\n  ...\n  \"scripts\": {\n    \"start\": \"webpack-dev-server --mode development\",\n    \"build\": \"cross-env NODE_ENV=production webpack --mode production\"\n  },\n  ...\n  \"devDependencies\": {\n    \"clean-webpack-plugin\": \"^0.1.17\",\n    \"html-webpack-plugin\": \"^2.30.1\",\n    \"webpack\": \"^3.10.0\",\n    \"webpack-dev-server\": \"^2.11.0\"\n  }\n}\n```", "```js\nconst debug = process.env.NODE_ENV !== 'production';\n```", "```js\nnpm install --save-dev cross-env\n```", "```js\nnpm install --save vue vuex\n```", "```js\nimport Vue from 'vue';\nimport Vuex from 'vuex';\n\nVue.use(Vuex);\nconst store = new Vuex.Store({});\nnew Vue({\n  el: '#app',\n  store,\n  template:'<div>Hello Vue(x) World!</div>'\n});\n```", "```js\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Packt: Vuex condensed</title>\n</head>\n<body>\n<div id=\"app\"></div>\n</body>\n</html>\n```", "```js\nnpm install --save-dev vue-loader\nnpm install --save-dev vue-template-compiler\nnpm install --save-dev vue-style-loader\nnpm install --save-dev css-loader\nnpm install --save-dev file-loader\n```", "```js\n// ...\nconst config = {\n  // ...\n  module: {\n    rules: [\n      {\n        test: /\\.vue$/,\n        loader: 'vue-loader'\n      },\n      {\n        test: /\\.css$/,\n        use: [\n          'vue-style-loader',\n          'css-loader'\n        ]\n      },\n      {\n        test: /\\.(png|jpg|jpeg|gif|svg)$/,\n        loader: 'file-loader',\n        options: {\n          name: '[name].[ext]?[hash]'\n        }\n      }\n    ]\n  },\n  resolve: {\n    alias: {\n      vue$: 'vue/dist/vue.esm.js',\n    },\n  },\n  // ...\n};\n// ...\n```", "```js\n// src/app.vue\n<template>\n  <div class=\"app\">App <span class=\"version\">v{{version}}</span></div>\n</template>\n<script>\n  export default {\n    computed: {\n      version() {\n        return this.$store.state.version;\n      }\n    }\n  };\n</script>\n<style>\n  .app {\n    font-family: \"Times New Roman\", Times, serif;\n    background-image: url(\"./background.jpg\");\n  }\n</style>\n```", "```js\n// src/main.js\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport app from './app.vue';\n\nVue.use(Vuex);\n\nconst store = new Vuex.Store({\n  state: {\n    version: '1.0.0'\n  }\n});\n\nnew Vue({\n  el: '#app',\n  store,\n  template:'<app></app>',\n  components: {app}\n});\n```", "```js\nnpm install --save-dev karma karma-webpack\nnpm install --save-dev karma-chrome-launcher\nnpm install --save-dev jasmine-core karma-jasmine\n```", "```js\n// Using webpack configuration\nvar webpackConfig = require('./webpack.config.js');\ndelete webpackConfig.entry; // No entry for tests\n\nmodule.exports = function(config) {\n  config.set({\n    basePath: '',\n    frameworks: ['jasmine'],\n    files: [\n      'test/**/*.spec.js'\n    ],\n    exclude: [\n    ],\n    preprocessors: {\n      'test/**/*.spec.js': ['webpack']\n    },\n    reporters: ['progress'],\n    port: 9876,\n    colors: true,\n    logLevel: config.LOG_INFO,\n    autoWatch: true,\n    browsers: ['Chrome'],\n    singleRun: false,\n    concurrency: Infinity,\n    webpack: webpackConfig,\n\n    // avoid walls of useless text\n    webpackMiddleware: {\n      noInfo: true\n    }\n  })\n};\n```", "```js\nmkdir test\n```", "```js\n// test/test-setup/dummy.vue\n<template>\n  <div class=\"app\">{{msg}}</div>\n</template>\n<script>\n  export default {\n    data() {\n      return {msg: 'A message'};\n    }\n  };\n</script>\n```", "```js\n// test/test-setup/dummy.vue.spec.js\nimport Vue from 'vue';\nimport Test from './dummy.vue';\n\ndescribe('dummy.vue', function () {\n  it('should have correct message', function () {\n    expect(Test.data().msg).toBe('A message');\n  });\n\n  it('should render correct message', function () {\n    const vm = new Vue({\n      template: '<div><test></test></div>',\n      components: {\n        'test': Test\n      }\n    }).$mount();\n    expect(vm.$el.querySelector('.app').textContent)\n        .toBe('A message');\n  })\n});\n```", "```js\n\"scripts\": {\n    \"test\": \"karma start\",\n    \"start\": \"webpack-dev-server --config webpack.config.js\",\n    \"build\": \"webpack --config webpack.config.js\"\n},\n```", "```js\nChrome ... : Executed 2 of 2 SUCCESS (0.006 secs / 0 secs) \n```"]