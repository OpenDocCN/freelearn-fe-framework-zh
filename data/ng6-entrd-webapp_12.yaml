- en: Google Analytics and Advanced Cloud Ops
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 谷歌分析和高级云运维
- en: You have designed, developed, and deployed a word-class web application; however,
    that is only the beginning of the story of your app. The web is an ever-evolving,
    living, breathing environment that demands attention to continue to succeed as
    a business. In [Chapter 11](ba073d6f-c0a0-4681-aea6-aeedac3cbc69.xhtml), *Highly-Available
    Cloud Infrastructure on AWS*, we went over the basic concepts and costs of ownership
    of a cloud infrastructure. In this chapter, we will dig deeper in truly understanding
    how users actually use our application with Google Analytics. We will then use
    that information to create realistic load tests to simulate actual user behavior
    to understand the true capacity of a single instance of our server. Knowing the
    capacity of a single server, we can fine-tune how our infrastructure scales out
    to reduce waste and discuss the implications of various scaling strategies. Finally,
    we will go over advanced analytics concepts such as custom events to gain more
    granular understanding and tracking of user behavior.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经设计、开发并部署了一个世界级的Web应用程序；然而，这只是您应用程序故事的开始。网络是一个不断发展的、生机勃勃的环境，需要关注才能继续成功地作为一个业务。在[第11章](ba073d6f-c0a0-4681-aea6-aeedac3cbc69.xhtml)中，*AWS上高可用云基础设施*，我们已经介绍了云基础设施的基本概念和所有权成本。在本章中，我们将更深入地了解用户如何实际使用谷歌分析来创建真实的负载测试，以模拟实际用户行为，了解单个服务器实际容量。了解单个服务器的容量，我们可以微调我们的基础设施扩展以减少浪费，并讨论各种扩展策略的影响。最后，我们将介绍高级分析概念，如自定义事件，以获得对用户行为更细粒度的理解和跟踪。
- en: 'In this chapter, you will learn about the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将了解以下主题：
- en: Google Analytics
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谷歌分析
- en: Google Tag Manager
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谷歌标签管理器
- en: Budgeting and Scaling
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预算和扩展
- en: Advanced Load Testing to Predict Capacity
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高级负载测试以预测容量
- en: Custom Analytics Events
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义分析事件
- en: 'Throughout the chapter, you will be setting up these:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在整个章节中，您将设置这些：
- en: A Google Analytics Account
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谷歌分析账户
- en: A Google Tag Manager Account
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谷歌标签管理器账户
- en: An OctoPerf Account
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OctoPerf账户
- en: Collecting Analytics
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 收集分析
- en: Now that our site is up and running, we need to start collecting metrics to
    understand how it is being used. Metrics are key to operating a web application.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的网站已经上线运行，我们需要开始收集指标来了解它的使用情况。指标是操作Web应用程序的关键。
- en: 'Google Analytics has many facets; the main three are as follows:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌分析有许多方面；主要的三个如下：
- en: Acquisition, which measures how visitors arrive at your website
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取，衡量访问者如何到达您的网站
- en: Behavior, which measures how visitors interact with your website
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 行为，衡量访问者如何与您的网站互动
- en: Conversions, which measures how visitors completed various goals on your website
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转化，衡量访问者如何在您的网站上完成各种目标
- en: 'Here''s a look at the Behavior | Overview from my website [TheJavaScriptPromise.com](http://TheJavaScriptPromise.com):'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看我的网站[TheJavaScriptPromise.com](http://TheJavaScriptPromise.com)的行为|概述：
- en: '![](Images/50c99fe0-c01a-4f08-90a9-5ac2b43e72d6.png)Google Analytics Behavior
    Overview'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '![](Images/50c99fe0-c01a-4f08-90a9-5ac2b43e72d6.png)谷歌分析行为概述'
- en: '[TheJavaScriptPromise.com](http://TheJavaScriptPromise.com) is a simple one
    page HTML site, so the metrics are quite simple. Let''s go over the various metrics
    on the screen:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[TheJavaScriptPromise.com](http://TheJavaScriptPromise.com)是一个简单的单页面HTML网站，所以指标非常简单。让我们来看看屏幕上的各种指标：'
- en: Pageviews show the number of visitors
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 页面浏览显示访问者数量
- en: Unique Pageviews show the number of unique visitors
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 独立页面浏览显示独立访问者的数量
- en: Avg. Time on Page shows the amount of time each user spent on the site
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 平均页面停留时间显示每个用户在网站上花费的时间
- en: Bounce Rate shows that users left the site without navigating to a subpage or
    interacting with the site in any manner, such as clicking on a link or button
    with a custom event
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 跳出率显示用户在不浏览子页面或以任何方式与站点进行交互的情况下离开站点，例如单击具有自定义事件的链接或按钮
- en: '% Exit indicates how often users leave the site after viewing a particular
    or set of pages'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '% 退出表示用户在查看特定页面或一组页面后离开站点的频率'
- en: At high-level, in 2017, the site had about 1,090 unique visitors and on an average,
    each visitor spent about 2.5 minutes or 157 seconds on the site. Given that this
    is just a one page site, bounce rate and % exit metrics do not apply in any meaningful
    manner. Later, we will use these numbers to calculate the Cost Per User.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在2017年，该网站大约有1,090名独立访客，平均每位访客在网站上花费约2.5分钟或157秒。鉴于这只是一个单页面站点，跳出率和%退出指标在任何有意义的方式上都不适用。稍后，我们将使用这些数字来计算每用户成本。
- en: 'In addition to page views, Google Analytics can also capture specific events,
    such as clicking on a button that triggers a server request. These events can
    then be viewed on the Events | Overview page, as shown:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 除了页面浏览之外，Google Analytics还可以捕获特定事件，例如单击触发服务器请求的按钮。然后可以在事件|概述页面上查看这些事件，如下所示：
- en: '![](Images/e1e8eabd-a481-4032-bff0-0eb5b2a9b28b.png)Google Analytics Events
    Overview'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '![](Images/e1e8eabd-a481-4032-bff0-0eb5b2a9b28b.png)Google Analytics事件概述'
- en: It is possible to capture metrics on the server side as well, but this will
    give requests-over-time statistics. You will need additional code and state management
    to track the behavior of a particular user, so you can calculate users-over-time
    statistics. By implementing such tracking on the client side with Google Analytics,
    you gain a far more detailed understanding where the user came from, what they
    did, if they succeeded or not and when they left your app without adding unnecessary
    code complexity and infrastructure load to your backend.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在服务器端也可以捕获指标，但这将提供请求随时间变化的统计数据。您将需要额外的代码和状态管理来跟踪特定用户的行为，以便计算用户随时间变化的统计数据。通过在客户端使用Google
    Analytics实施此类跟踪，您可以更详细地了解用户的来源、他们的行为、是否成功以及何时离开您的应用程序，而不会给后端添加不必要的代码复杂性和基础设施负载。
- en: Adding Google Tag Manager to Angular App
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将Google Tag Manager添加到Angular应用程序
- en: Let's start capturing analytics in your Angular app. Google is in the process
    of phasing out the legacy `ga.js` and `analytics.js` products that ships with
    Google Analytics, with its new, more flexible Global Site Tag `gtag.js` that ships
    with Google Tag Manager. This is by no means an end to Google Analytics; instead,
    it's a shift in toward an easier-to-configure and manage analytics tool. Global
    Site Tag can be configured and managed remotely via Google Tag Manager. Tags are
    snippets of JavaScript tracking code that is delivered to the client, and they
    can enable tracking of new metrics and integration with multiple analytics tools
    without having to change already deployed code. You can still continue to use
    Google Analytics to analyze and view your analytics data. Another major advantage
    of Google Tag Manager is that its version controlled, so you can experiment with
    different kinds of tags that are triggered under various kinds of conditions without
    fear of doing any irreversible damage to your analytics configuration.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始在您的Angular应用程序中捕获分析数据。Google正在逐步淘汰随Google Analytics一起提供的传统`ga.js`和`analytics.js`产品，而是使用其新的、更灵活的全局站点标签`gtag.js`，该标签与Google标签管理器一起提供。这绝不是对Google
    Analytics的结束；相反，它是朝着更易于配置和管理的分析工具的转变。全局站点标签可以通过Google标签管理器远程配置和管理。标签是交付给客户端的JavaScript跟踪代码片段，它们可以启用对新指标的跟踪，并与多个分析工具集成，而无需更改已部署的代码。您仍然可以继续使用Google
    Analytics来分析和查看您的分析数据。Google标签管理器的另一个主要优势是它是版本控制的，因此您可以在不害怕对分析配置造成任何不可逆转的损害的情况下尝试不同类型的标签，这些标签在各种条件下被触发。
- en: Set up Google Tag Manager
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置Google标签管理器
- en: 'Let''s start off with setting up a Google Tag Manager account for your application:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从为您的应用程序设置Google标签管理器帐户开始：
- en: Sign in to Google Tag Manager at [GoogleTagManager.com](https://googletagmanager.com)
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到[GoogleTagManager.com](https://googletagmanager.com)的Google标签管理器
- en: 'Add a new account with a Web container, as follows:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下步骤添加一个带有Web容器的新帐户：
- en: '![](Images/a2d3c667-536f-4c2f-863c-62072247bbd9.png)Google Tag Manager'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '![](Images/a2d3c667-536f-4c2f-863c-62072247bbd9.png)Google标签管理器'
- en: 'Paste the generated scripts at or near the top `<head>` and `<body>` sections
    of your `index.html` as instructed:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照指示将生成的脚本粘贴到您的`index.html`的顶部`<head>`和`<body>`部分附近：
- en: '[PRE0]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note that the `<noscript>` tag will only execute if the user has disabled JavaScript
    execution in their browser. This way, we can collect metrics from such users,
    rather than being blind to their presence.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`<noscript>`标签仅在用户在其浏览器中禁用JavaScript执行时才会执行。这样，我们可以收集这些用户的指标，而不是对他们的存在一无所知。
- en: Submit and publish your tag manager container
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提交并发布您的标签管理器容器
- en: 'You should see the initial setup of your tag manager completed, as shown:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该看到您的标签管理器的初始设置已完成，如下所示：
- en: '![](Images/a421aa04-332d-4966-8c6e-d8615847ec3d.png)Published Tag'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '![](Images/a421aa04-332d-4966-8c6e-d8615847ec3d.png)已发布的标签'
- en: Verify that your Angular app runs without any errors.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证您的Angular应用程序是否没有任何错误运行。
- en: Note that if you don't publish your tag manager container, you will see a 404
    error in loading `gtm.js` in the `dev` console or the Network tab.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果您不发布您的标签管理器容器，您将在“dev”控制台或网络选项卡中看到404错误加载`gtm.js`。
- en: Setting up Google Analytics
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置Google Analytics
- en: 'Now, let''s generate a Tracking ID through Google Analytics:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们通过Google Analytics生成一个跟踪ID：
- en: Log in to Google Analytics at [analytics.google.com](https://analytics.google.com)
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到[analytics.google.com](https://analytics.google.com)的Google Analytics
- en: 'Open the Admin console, pointed out as the *gear* icon in the following screenshot:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开管理控制台，如下面截图中指出的*齿轮*图标：
- en: '![](Images/382cd801-dc47-4661-809a-d637a7e4c15c.png)Google Analytics admin
    console'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '![](Images/382cd801-dc47-4661-809a-d637a7e4c15c.png)Google Analytics管理控制台'
- en: Create a new analytics account
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的分析帐户
- en: 'Using the arrows from the image as a guide:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用图像中的箭头作为指南：
- en: Add a new Property `LemonMart`
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个名为`LemonMart`的新属性
- en: Configure the property to your preferences
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据您的偏好配置属性
- en: Click on Tracking Code
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击跟踪代码
- en: Copy the Tracking ID that starts with `UA-xxxxxxxxxx-1`
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制以`UA-xxxxxxxxxx-1`开头的跟踪ID
- en: Ignore the `gtag.js` code provided
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 忽略提供的`gtag.js`代码
- en: Configuring Google Analytics Tag in Tag Manager
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在标签管理器中配置Google Analytics标签
- en: 'Now, let''s connect our Google Analytics ID to Google Tag Manager:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们将我们的Google Analytics ID连接到Google Tag Manager：
- en: At [tagmanager.google.com](https://tagmanager.google.com), open the Workspace
    tab
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[tagmanager.google.com](https://tagmanager.google.com)上，打开工作区选项卡
- en: Click on Add a new tag
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击添加新标签
- en: Name it `Google Analytics`
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其命名为`Google Analytics`
- en: Click on Tag configuration and select Universal Analytics
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击标签配置并选择通用分析
- en: Under Google Analytics settings, add a new variable
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Google Analytics设置下，添加一个新变量
- en: Paste the Tracking ID you copied in the previous section
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在上一节中复制的跟踪ID粘贴
- en: Click on Triggers and add the All pages trigger
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击触发器并添加所有页面触发器
- en: 'Click on Save, as shown on the following screenshot:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击保存，如下截图所示：
- en: '![](Images/d19ac69c-9873-438e-9464-efa05b4ec2b1.png)Creating Google Analytics
    Tag'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: ！[](Images/d19ac69c-9873-438e-9464-efa05b4ec2b1.png)创建Google Analytics标签
- en: 'Submit and publish your changes, and observe the version summary with 1 tag,
    as shown:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提交并发布您的更改，并观察版本摘要，其中显示了1个标签：
- en: '![](Images/5f1211b6-18b0-445a-ae28-a6ef095c88f7.png)Version Summary Showing
    one Tag'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: ！[](Images/5f1211b6-18b0-445a-ae28-a6ef095c88f7.png)显示一个标签的版本摘要
- en: Now refresh your Angular app, where you'll be on the `/home` route
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在刷新您的Angular应用程序，在`/home`路由上
- en: In a private window, open a new instance of your Angular app and navigate to
    the `/manager/home` route
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在私人窗口中，打开您的Angular应用程序的新实例，并导航到`/manager/home`路由
- en: 'At [analytics.google.com](https://analytics.google.com), open the Real-time
    | Overview pane, as shown:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[analytics.google.com](https://analytics.google.com)上，打开实时|概览窗格，如下所示：
- en: '![](Images/2ec54d66-0dd0-4c50-ad8a-c4b415b25713.png)Google Analytics Real-time
    Overview'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: ！[](Images/2ec54d66-0dd0-4c50-ad8a-c4b415b25713.png)Google Analytics实时概览
- en: Note that the two active users are being tracked
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请注意，正在跟踪两个活跃用户
- en: Under Top Active Pages, you should see the pages that the users are on
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在活跃页面顶部，您应该看到用户所在的页面
- en: By leveraging Google Tag Manager and Google Analytics together, we have been
    able to accomplish page tracking without changing any code inside of our Angular
    app.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 通过同时利用Google Tag Manager和Google Analytics，我们能够在不更改Angular应用程序内部任何代码的情况下完成页面跟踪。
- en: '**Search Engine Optimization** (**SEO**) is an important part of Analytics.
    To gain a better understanding of how crawlers perceive your Angular site, use
    the Google Search Console, found at [https://www.google.com/webmasters/tools](https://www.google.com/webmasters/tools),
    to identify optimizations. Further, consider using Angular Universal to render
    certain dynamic content server side, so crawlers can index your dynamic data sources
    and drive more traffic to your site.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**搜索引擎优化**（**SEO**）是分析的重要部分。为了更好地了解爬虫如何感知您的Angular站点，请使用Google搜索控制台，网址为[https://www.google.com/webmasters/tools](https://www.google.com/webmasters/tools)，来识别优化。此外，考虑使用Angular
    Universal来在服务器端呈现某些动态内容，以便爬虫可以索引您的动态数据源并将更多流量带到您的站点。'
- en: Budgeting and scaling
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 预算和扩展
- en: In the AWS Billing section of [Chapter 11](ba073d6f-c0a0-4681-aea6-aeedac3cbc69.xhtml),
    *Highly-Available Cloud Infrastructure on AWS*, we covered the monthly costs of
    operating a web server, ranging from $5/month to $45/month, from a single-server
    instance scenario to a highly-available infrastructure. For most needs, budgeting
    discussions will begin and end with this monthly number. You can execute load
    tests, as suggested in the Advanced Load Testing section, to predict your per
    server user capacity and get a general idea of how many servers you may need.
    In a dynamically scaling cloud environment with dozens of servers running 24/7,
    this is an overly simplistic way to calculate a budget.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第11章](ba073d6f-c0a0-4681-aea6-aeedac3cbc69.xhtml)的AWS计费部分，《在AWS上构建高可用云基础设施》，我们涵盖了运行Web服务器的月度成本，从每月5美元到每月45美元，从单服务器实例方案到高可用基础设施。对于大多数需求，预算讨论将从这个月度数字开始并结束。您可以执行负载测试，如高级负载测试部分建议的那样，来预测每台服务器的用户容量，并大致了解您可能需要多少服务器。在一个动态扩展的云环境中，有数十台服务器全天候运行，这是计算预算的一种过于简单化的方式。
- en: If you operate a web property of any significant scale, things get invariably
    complicated. You will be operating multiple servers on different tech stacks,
    serving different purposes. It can be difficult to gauge or justify how much of
    a budget to spare for seemingly excess capacity or unnecessarily high-performance
    servers. Somehow, you need to be able to communicate the efficiency of your infrastructure
    given the number of users you serve and ensure that your infrastructure is fine-tuned
    so that you don't lose users due to an unresponsive application or overpay because
    you're using more capacity than you need. For this reason, we will take a user-centered
    approach and translate our IT infrastructure costs to a per user cost metric that
    the business and the marketing side of your organization can make sense of.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您经营规模相当大的网络资产，事情变得复杂。您将在不同技术堆栈上运行多个服务器，提供不同的用途。很难判断或证明为看似过剩的容量或不必要的高性能服务器留出多少预算。不知何故，您需要能够沟通您的基础设施的效率，考虑到您服务的用户数量，并确保您的基础设施经过调整，以便您不会因为应用程序无响应或因为使用的容量超出需要而失去用户或支付过多。因此，我们将采取以用户为中心的方法，并将我们的IT基础设施成本转化为业务和您组织的营销部门可以理解的每用户成本指标。
- en: In the next section, we will investigate what it means to calculate the per
    user cost of your infrastructure and how these calculations change when cloud
    scaling comes in to play using one of my websites as an example.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将调查计算基础设施每用户成本的含义，以及当云扩展应用时这些计算如何改变，以我的一个网站为例。
- en: Calculating per user cost
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算每用户成本
- en: 'We will be leveraging behavior metrics from Google Analytics with the goal
    of calculating per user cost over a given period of time:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将利用来自Google Analytics的行为指标，目标是在一定时间内计算每个用户的成本：
- en: '**Per User Cost**![](Images/d999dbd8-28df-41cf-a125-8aa31e280ec7.png)'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**每用户成本**![](Images/d999dbd8-28df-41cf-a125-8aa31e280ec7.png)'
- en: Using the [TheJavaScriptPromise.com](http://TheJavaScriptPromise.com) data from
    earlier, let's plug in the data to the formula to calculate *perUserCost/month*.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 使用之前的[TheJavaScriptPromise.com](http://TheJavaScriptPromise.com)数据，让我们将数据代入公式计算*perUserCost/month*。
- en: 'This website is deployed on an Ubuntu server on DigitalOcean, so the monthly
    infrastructure cost, including weekly backups, is $6 a month. From Google Analytics,
    we know there were 1,090 unique visitors in 2017:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这个网站部署在DigitalOcean的Ubuntu服务器上，所以包括每周备份在内的月度基础设施成本为每月6美元。从Google Analytics中，我们知道2017年有1,090名独立访客：
- en: '![](Images/4d389358-99b2-4e63-a610-c31d6bf4b788.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/4d389358-99b2-4e63-a610-c31d6bf4b788.png)'
- en: In 2017, I have paid 7 cents per user. Money well spent? At $6/month, I don't
    mind it. In 2017, [TheJavaScriptPromise.com](http://thejavascriptpromise.com/)
    was deployed on a traditional server setup, as a static site that doesn't scale
    out or in. These conditions make it very straightforward to use the unique visitor
    metric and find the per user cost. The very same simplicity that allows for an
    easy calculation also leads to a suboptimal infrastructure. If I were to serve
    1,000,000 users on the same infrastructure, my costs would add up to $70,000 a
    year. If I were to earn $100 per every 1,000 user through Google Ads, my site
    would make a $100,000 per year. After taxes, development expenses, and our unreasonable
    hosting expense, the operation would likely lose money.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 2017年，我每个用户支付了7美分。花得值吗？每月6美元，我不介意。在2017年，[TheJavaScriptPromise.com](http://thejavascriptpromise.com/)部署在传统的服务器设置上，作为一个静态站点，不会动态扩展或缩减。这些条件使得使用独立访客指标并找到每个用户成本非常简单。这种简单性不仅使得容易计算，也导致了基础设施的不佳。如果我在相同的基础设施上为100万用户提供服务，我的成本将达到每年7万美元。如果我通过Google广告每1000个用户赚取100美元，我的网站每年将赚取10万美元。税收、开发费用和不合理的托管费用后，该运营很可能会亏损。
- en: If you took advantage of cloud scaling, where instances can scale out or in
    dynamically based on current user demand, the preceding formula becomes useless
    pretty quickly, because you must take provisioning time and target server utilization
    into account. Provisioning time is the amount of time it takes your cloud provider
    to start a new server from scratch. Target server utilization is the maximum usage
    metric of a given server, where a scale-out alert must be sent out so that a new
    server is ready before your current servers max out their capacity. In order to
    calculate these variables, we must execute a series of load tests against our
    servers.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您利用云扩展，其中实例可以根据当前用户需求动态扩展或缩减，那么前面的公式很快就会变得无用，因为您必须考虑到预配时间和目标服务器利用率。预配时间是您的云提供商从头开始启动新服务器所需的时间。目标服务器利用率是给定服务器的最大使用度量标准，当达到扩展警报时，必须发送新服务器准备就绪，以防当前服务器达到最大容量。为了计算这些变量，我们必须对我们的服务器执行一系列负载测试。
- en: Page views are an overly simplistic way to determine user behavior in SPAs such
    as Angular, where page views do not necessarily correlate to a request or vice
    versa. If we execute load tests simply based on page views, we won't get a realistic
    simulation of how your platform may perform under load.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 页面浏览是一种过于简单化的方式来确定Angular等单页应用程序中的用户行为，其中页面浏览不一定与请求相关联。如果我们仅基于页面浏览执行负载测试，我们将无法真实模拟您的平台在负载下的性能。
- en: User behavior, or how users actually use your app, can drastically impact your
    performance forecasts and wildly fluctuate budget numbers. You can use Google
    Analytics custom events to capture complicated sets of actions that result in
    various types of requests served by your platform. Later in this chapter, we will
    explore how you can measure actual use in the *Measuring actual use* section.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 用户行为，或者用户实际使用您的应用程序的方式，可以极大地影响您的性能预测，并且会导致预算数字大幅波动。您可以使用Google Analytics自定义事件来捕获一系列复杂的操作，这些操作导致平台提供各种类型的请求。在本章的后面，我们将探讨如何在*测量实际使用*部分中测量实际使用情况。
- en: Initially, you won't have any of the aforementioned metrics, and any metrics
    you may have will be invalidated any time you make a meaningful change to your
    software or hardware stack. Therefore, it is imperative to execute load tests
    on a regular basis to simulate realistic user loads.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 最初，您将不会拥有任何上述指标，您可能拥有的任何指标都将在您对软件或硬件堆栈进行重大更改时无效。因此，必须定期执行负载测试，以模拟真实的用户负载。
- en: Advanced load testing
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高级负载测试
- en: In order to be able to predict capacity, we need to run load tests. In [Chapter
    11](ba073d6f-c0a0-4681-aea6-aeedac3cbc69.xhtml), *Highly-Available Cloud Infrastructure
    on AWS, *I discussed a simple load testing technique of just sending a bunch of
    web requests to a server. In a relative comparison scenario, this works fine to
    test raw power. However, actual users generate dozens of requests at varying intervals,
    while they navigate your website resulting in a wide-variety of API calls to your
    backend server.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 为了能够预测容量，我们需要运行负载测试。在[第11章](ba073d6f-c0a0-4681-aea6-aeedac3cbc69.xhtml)中，《AWS上高可用云基础设施》，我讨论了一种简单的负载测试技术，即向服务器发送一堆网络请求。在相对比较的情况下，这对于测试原始功率效果很好。然而，实际用户以不同的间隔生成数十个请求，当他们浏览您的网站时，会导致对后端服务器的各种API调用。
- en: 'We must be able to model virtual users and unleash a whole bunch of them on
    our servers to find the breaking point of our server. OctoPerf is an easy-to-use
    service to execute such load tests, and it''s located at [https://octoperf.com](https://octoperf.com).
    OctoPerf offers a free-tier that allows for 50 concurrent users/test over unlimited
    test runs with two load generators:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须能够模拟虚拟用户，并将大量用户释放到我们的服务器上，以找到服务器的瓶颈。 OctoPerf是一个易于使用的服务，可执行此类负载测试，位于[https://octoperf.com](https://octoperf.com)。
    OctoPerf提供了一个免费的套餐，允许50个并发用户/测试在无限次测试运行中使用两个负载生成器：
- en: Create an OctoPerf account
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个OctoPerf账户
- en: 'Login and add a new project for LemonMart, as shown:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录并为LemonMart添加一个新项目，如图所示：
- en: '![](Images/c9f916a9-cbce-42e7-a592-d950c1b0cddf.png)OctoPerf Add Project'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '![](Images/c9f916a9-cbce-42e7-a592-d950c1b0cddf.png)OctoPerf 添加项目'
- en: OctoPerf allows you to create multiple virtual users with different usage characteristics.
    Since it is a URL-based setup, any click-based user action can also be simulated
    by directly calling the application server URL with test parameters.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: OctoPerf允许您创建具有不同使用特征的多个虚拟用户。由于它是基于URL的设置，任何基于点击的用户操作也可以通过直接调用应用程序服务器URL与测试参数来模拟。
- en: 'Create two virtual users: one as a `Manager` who navigates to Manager-based
    pages and second a `POS` user who would only stick to POS functions'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建两个虚拟用户：一个作为“经理”，导航到基于经理的页面，第二个作为“POS”用户，只能使用POS功能
- en: 'Click on Create scenario:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“创建场景”：
- en: '![](Images/e7ba3d65-b1d4-4b86-a4a5-e0ac810e530f.png)POS User Scenario'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '![](Images/e7ba3d65-b1d4-4b86-a4a5-e0ac810e530f.png)POS用户场景'
- en: Name the scenario `Evening Rush`
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将场景命名为“晚高峰”
- en: 'You can add a mixture of Managers and POS Users, as shown:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以添加一些经理和POS用户，如图所示：
- en: '![](Images/94f055b8-086d-4139-953e-c7dc1d6566a6.png)Evening Rush Scenario'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '![](Images/94f055b8-086d-4139-953e-c7dc1d6566a6.png)晚高峰场景'
- en: Click on the Launch 50 VUs button to start the load test
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“启动50个VUs”按钮开始负载测试
- en: 'You can observe the number of users and hits/sec being achieved in real time,
    as shown in the following screenshot:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以实时观察到达到的用户数量和每秒点击数，如下面的屏幕截图所示：
- en: '![](Images/1a83b924-c8f2-4ff8-b161-644afa539427.png)Evening Rush Load Test
    Underway'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '![](Images/1a83b924-c8f2-4ff8-b161-644afa539427.png)晚高峰负载测试进行中'
- en: 'ECS service metrics also give us a high-level idea of real-time utilization,
    as shown in the following screenshot:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: ECS服务指标还给我们提供了实时利用率的高层次概念，如下面的屏幕截图所示：
- en: '![](Images/08c773f1-a8eb-497b-b4b3-779110666916.png)ECS Real-time Metrics'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '![](Images/08c773f1-a8eb-497b-b4b3-779110666916.png)ECS实时指标'
- en: Analyze load test results.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 分析负载测试结果。
- en: 'You can get more accurate results from ECS by clicking on the CPUUtilization
    link from ECS Service Metrics or by navigating to CloudWatch | Metrics section,
    as follows:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过单击ECS服务指标中的CPU利用率链接或导航到CloudWatch |指标部分来从ECS中获得更准确的结果，如下所示：
- en: '![](Images/57c634ba-85f7-49ea-a4be-adff93c320f6.png)AWS CloudWatch Metrics'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '![](Images/57c634ba-85f7-49ea-a4be-adff93c320f6.png)AWS CloudWatch指标'
- en: 'As you can see in the preceding graph, CPU utilization was fairly consistent
    around 1.3%, given a sustained 50 user load over 10 minutes. During this period,
    there were no request errors, as shown in the statistics summary from OctoPerf:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，CPU利用率在持续50个用户负载的10分钟内保持在1.3%左右。在此期间，没有请求错误，如OctoPerf的统计摘要所示：
- en: '![](Images/2030e153-a12e-45b1-acc6-0ae6b8ac7261.png)OctoPerf Statistics Summary'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: ！[](Images/2030e153-a12e-45b1-acc6-0ae6b8ac7261.png)OctoPerf统计摘要
- en: 'Ideally, we would measure maximum users/second until the moment errors were
    being generated. However, given only 50 virtuals users and the information we
    already have, we can predict how many users could be handled at 100% utilization:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 理想情况下，我们会测量每秒最大用户数，直到出现错误。然而，考虑到只有50个虚拟用户和我们已经拥有的信息，我们可以预测在100%利用率下可以处理多少用户：
- en: '![](Images/187cb266-4556-4d6a-8342-024c2f6a8a5a.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: ！[](Images/187cb266-4556-4d6a-8342-024c2f6a8a5a.png)
- en: Our load test results reveal that our infrastructure can handle 3,846 users/second.
    Given this information, we can calculate cost per user in a Scalable Environment
    in the next section. However, performance and reliability go hand in hand. How
    you choose to architect your infrastructure will also provide important information
    of budgeting, because the level of reliability you need will dictate the minimum
    number of instances you must keep around at all times.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的负载测试结果显示，我们的基础设施可以处理每秒3,846个用户。根据这些信息，我们可以在下一节中计算可扩展环境中的每个用户成本。然而，性能和可靠性是相辅相成的。您选择如何设计基础设施也将提供重要的预算信息，因为您需要的可靠性水平将决定您必须始终保留的实例的最低数量。
- en: Reliable Cloud Scaling
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可靠的云扩展
- en: Reliability can be expressed in terms of your organization's Recovery Point
    Objective (RPO) and **Recovery Time Objective** (**RTO**) defined. RPO represents
    how much data you're willing to lose, and RTO represents how fast you can rebuild
    your infrastructure in the event of a failure.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 可靠性可以用您组织的恢复点目标（RPO）和恢复时间目标（RTO）来表达。 RPO代表您愿意丢失多少数据，而RTO代表在发生故障时您可以多快重建基础设施。
- en: Let's suppose that you run an e-commerce site. Around noon every weekday, you
    reach peak sales. Every time a user adds an item to their shopping cart, you store
    the items on a server-side cache so that users can resume their shopping spree
    later at home. In addition, you process hundreds of transactions per minute. Business
    is good, your infrastructure is scale-out beautifully, and everything is going
    smoothly. Meanwhile, a hungry rat or an overly charged lightning cloud decides
    to strike your data center. Initially, a seemingly harmless power unit goes down,
    but it's fine, because nearby power units can pick up the slack. However, this
    is the lunch rush; other websites on the data center are also facing a high traffic
    volume. As a result, several power units overheat and fail. There aren't enough
    power units to pick up the slack, so in quick succession, power units overheat
    one by one and start failing, triggering a cascade of failures that end up taking
    down the entire data center. Meanwhile, some of your users just clicked on add
    to cart, others on the pay button, and some others are just about to arrive on
    your site. If your RPO is one hour, meaning you persisted your shopping cart cache
    every one hour, then you can say goodbye to valuable data and potential sales
    by those night time shoppers. If your RTO is one hour, it will take you up to
    one hour to get your site back up and running again, and you can be assured that
    most of those customers, who just clicked on the buy button or arrived to an unresponsive
    site won't be making a purchase on your site that day.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你经营一家电子商务网站。每个工作日中午左右，你的销售达到峰值。每当用户将商品添加到购物车时，你会将商品存储在服务器端缓存中，以便用户可以在家后继续他们的购物狂欢。此外，你每分钟处理数百笔交易。生意很好，你的基础设施扩展得很好，一切都运行顺利。与此同时，一只饥饿的老鼠或一个过度充电的闪电云决定袭击你的数据中心。最初，一个看似无害的电源单元停机了，但没关系，因为附近的电源单元可以接管工作。然而，这是午餐高峰期；数据中心上的其他网站也面临着高流量。结果，几个电源单元过热并失败。没有足够的电源单元来接管工作，因此，电源单元接连过热并逐个失败，引发了一系列故障，最终导致整个数据中心崩溃。与此同时，你的一些用户刚刚点击了“添加到购物车”，其他用户点击了“支付”按钮，还有一些用户正要到达你的网站。如果你的RPO是一小时，意味着你每小时持久化一次购物车缓存，那么你可能会失去那些夜间购物者的宝贵数据和潜在销售额。如果你的RTO是一小时，那么你需要最多一个小时才能让你的网站重新上线运行，你可以放心，那些刚刚点击购买按钮或到达无响应网站的客户大部分当天都不会在你的网站上购买商品。
- en: A well thought out RPO and RTO is a critical business need, but they must also
    be paired with the right infrastructure that makes it possible to implement your
    objectives in a cost-effective manner. AWS is made up of more than two dozen regions
    around the world, each region containing at least their **Availability Zones**
    (**AZs**). Each AZ is a physically separated infrastructure that is not affected
    by a failure in another AZ.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 深思熟虑的RPO和RTO是一个关键的业务需求，但它们也必须与合适的基础设施配合，以便以一种经济有效的方式实现你的目标。AWS由全球两打以上的地区组成，每个地区至少包含它们的可用区（AZs）。每个AZ都是一个物理上分离的基础设施，不会受到另一个AZ故障的影响。
- en: A highly-available configuration on AWS means that your application is up and
    running on at least two AZs, so if a server instance fails, nay even if the entire
    data center fails, you have another instance already live in a physically separate data
    center that is able to pick up incoming requests seamlessly.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在AWS上的高可用配置意味着你的应用程序至少在两个AZ上运行，因此，如果一个服务器实例失败，甚至整个数据中心失败，你已经在一个物理上分离的数据中心上有另一个实例可以无缝接管传入的请求。
- en: A fault-tolerant architecture means that your application is deployed across
    multiple regions. Even if an entire region comes down due to a natural disaster,
    **Distributed Denial of Service** (**DDoS**) attack, or a bad software update,
    your infrastructure remains standing and able to respond to user request. Your
    data is protected via layers upon layers of security and via staggered back ups
    of back ups.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 容错架构意味着您的应用部署在多个区域。即使整个区域因自然灾害、分布式拒绝服务（DDoS）攻击或糟糕的软件更新而崩溃，您的基础设施仍然可以保持稳定，并能够响应用户请求。通过层层安全和错位备份，您的数据得到了保护。
- en: AWS has great services such as Shield to protect against DDoS attacks targeted
    against your website, Pilot Light service to keep a minimal infrastructure waiting
    dormant in another region that can scale to full capacity if needed, while keeping
    operational costs down, and Glacier service to store large amounts for data for
    long periods of time in an affordable manner.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: AWS拥有出色的服务，如Shield用于保护针对您网站的DDoS攻击，Pilot Light服务可在另一个区域保持最小基础设施处于休眠状态，如果需要，可以扩展到完整容量，同时保持运营成本低廉，以及Glacier服务以经济的方式存储大量数据长时间。
- en: A highly-available configuration will require two instances at a minimum in
    a multi-AZ setup at all times. For a fault-tolerant setup, you need two highly-available
    configuration in at least two regions. Most AWS cloud services such as DynamoDB
    for data-storage or Redis for caching are highly available by default, including serverless
    technologies such as Lambda. Lambda charges on a per use basis and can scale to
    match any need you can throw at it in a cost effective manner. If you can move
    heavy compute tasks to Lambda, you can reduce your server utilization and your
    scaling needs dramatically in the process. When planning your infrastructure,
    you should consider all these variables to set up the right scalable environment
    for your needs.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 高可用配置将始终需要至少两个实例在多个可用区设置中。对于容错设置，您需要至少在两个区域中拥有两个高可用配置。大多数AWS云服务，如用于数据存储的DynamoDB或用于缓存的Redis，默认情况下都是高可用的，包括无服务器技术，如Lambda。Lambda按使用量收费，并且可以以成本有效的方式扩展以满足任何需求。如果您可以将繁重的计算任务转移到Lambda，您可以大大减少服务器利用率和扩展需求。在规划基础设施时，您应考虑所有这些变量，以建立适合您需求的可扩展环境。
- en: Cost per user in a scalable environment
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可扩展环境中的每个用户成本
- en: In a scalable environment, you can't plan on 100% utilization. It takes time
    to provision a new server. A server that is at 100% utilization can't process
    additional incoming requests in a timely manner, which results in dropped or erroneous
    requests from the users' perspective. So the server in question must send a trigger
    well before it reaches 100% utilization so that no requests are dropped. Earlier
    in the chapter, I suggested a 60-80% target utilization before scaling. The exact
    number will highly depend on your specific choice software and hardware stack.
    Given your custom utilization target, we can calculate the number of users your
    infrastructure is expected to serve on average per instance. Using this information,
    you can calculate a more accurate cost per user, which should allow the right-sizing
    of your IT budget, given your specific needs. It is equally as bad to underspend
    as it is to overspend. You may be foregoing growth, security, data, reliability,
    and resilience than it may be acceptable.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在可扩展的环境中，你不能计划100%的利用率。要为新服务器提供服务需要时间。利用率达到100%的服务器无法及时处理额外的请求，这会导致用户视角下的请求丢失或错误。因此，相关服务器必须在达到100%利用率之前发送触发器，以避免请求丢失。在本章的前面，我建议在扩展之前将目标利用率设定为60-80%。确切的数字将高度依赖于您特定的软件和硬件堆栈选择。根据您的自定义利用率目标，我们可以计算出您的基础设施预计平均每个实例需要为多少用户提供服务。利用这些信息，您可以计算出更准确的每用户成本，这应该可以根据您的特定需求来正确规划您的IT预算。低于预算和超出预算一样糟糕。您可能会放弃增长、安全性、数据、可靠性和弹性，这是不可接受的。
- en: In the next section, we will walk through the calculation of an optimal target
    server utilization metric so that you can calculate a more accurate per user cost;
    then, we will explore scaling that can occur during preplanned time frames and
    software deployments.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将详细介绍如何计算最佳目标服务器利用率指标，以便您可以计算更准确的每用户成本；然后，我们将探讨在预定时间框架和软件部署期间可能发生的扩展。
- en: Calculating target server utilization
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算目标服务器利用率。
- en: 'First, calculate your custom server utilization target, which is the point
    where your server is under increasing load and triggers a new server to provision
    with enough time so that the original server does not reach 100% utilization and
    drop requests. Consider this formula:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，计算您的自定义服务器利用率目标，这是您的服务器承受增加负载并触发新服务器提供服务的点，以便原始服务器不会达到100%的利用率并丢失请求。考虑这个公式：
- en: '**Target Utilization**![](Images/744f4ac5-b88d-4050-bc72-5ea63b0da856.png)'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '**目标利用率**![](Images/744f4ac5-b88d-4050-bc72-5ea63b0da856.png)'
- en: 'Let''s demonstrate how the formula works with a concrete example:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一个具体的例子来演示这个公式是如何工作的：
- en: 'Load test your instances to find out user capacity per instance: *Load test
    results:* 3,846 users/second'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对您的实例进行负载测试，以找出每个实例的用户容量：*负载测试结果：* 3,846用户/秒
- en: Requests/sec and users/sec are not equivalents, since a user makes multiple
    requests to complete an action and may execute multiple requests/sec. Advanced
    load testing tools such as OctoPerf are necessary to execute realistic and varied
    workloads and measure user capacity over request capacity.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 每秒请求和每秒用户并不相等，因为用户需要多次请求才能完成一个动作，可能每秒执行多个请求。高级负载测试工具如OctoPerf是必要的，以执行真实和多样化的工作负载，并测量用户容量和请求容量。
- en: 'Measure instance provisioning speed, from creation/cold boot to first fulfilled
    request: *Measured instance provisioning speed:* 60 seconds'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测量实例提供速度，从创建/冷启动到首次满足请求：*测量实例提供速度：* 60秒
- en: In order to measure this speed, you can put the stopwatch away. Depending on
    your exact setup, AWS provides event and application logs in ECS Service Events
    tab, CloudWatch, and CloudTrail to correlate enough information to figure out
    when a new instance was requested and how long it took for the instance to be
    ready to fulfill requests. For example, in the ECS Service Events tab, take the
    target registration event as the beginning time. Once the task has been started,
    click on the task ID to see the creation time. Using the task ID, check the task's
    logs in CloudWatch to see the time the task served its first web request as the
    end time and then calculate the duration.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 为了测量这个速度，你可以放下秒表。根据你的确切设置，AWS在ECS服务事件选项卡、CloudWatch和CloudTrail中提供事件和应用程序日志，以关联足够的信息来确定何时请求了一个新实例以及实例准备好满足请求需要多长时间。例如，在ECS服务事件选项卡中，将目标注册事件作为开始时间。一旦任务开始，点击任务ID查看创建时间。使用任务ID，在CloudWatch中检查任务的日志，以查看任务为第一个网络请求提供服务的时间作为结束时间，然后计算持续时间。
- en: 'Measure 95th-percentile user growth rate, excluding known capacity increases:
    *95th-percentile user growth rate:* 10 users/second'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测量95百分位数用户增长率，排除已知容量增加：*95百分位数用户增长率：*每秒10个用户
- en: If you don't have prior metrics, initially defining user growth rate will be
    an educated guess at best. However, once you start collecting data, you can update
    your assumptions. In addition, it is impossible to operate an infrastructure that
    can respond to any imaginable outlier without dropping a request in a cost-effective
    manner. Given your metrics, a business decision should be consciously made to
    what percentile of outliers should be ignored as an acceptable business risk.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有先前的指标，最初定义用户增长率将是最好的一个合理猜测。然而，一旦开始收集数据，你可以更新你的假设。此外，要以一种成本效益的方式运营一个可以应对任何想象得到的异常值的基础设施是不可能的。根据你的指标，应该有意识地做出一个商业决策，忽略哪个异常值百分位数作为可接受的商业风险。
- en: 'Let''s plug in the numbers to the formula:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们将数字代入公式中：
- en: '![](Images/b7f31ebc-1145-43a1-873b-0a6b6930de62.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/b7f31ebc-1145-43a1-873b-0a6b6930de62.png)'
- en: The custom target utilization rate, rounded down, would be 84%. Setting your
    scale out trigger at 84% will avoid instances from being over provisioned, while
    avoiding dropping users requests.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义目标利用率，向下取整，将是84%。将扩展触发器设置为84%将避免实例过度配置，同时避免丢弃用户请求。
- en: 'With this custom target utilization in mind, let''s update the Per User Cost
    formula with scaling in mind:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个自定义的目标利用率，让我们考虑扩展后更新每用户成本公式：
- en: '**Per User Cost with Scaling**![](Images/abb6593b-cac6-4b06-a8c9-f779bf5bd9a9.png)'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '**带有扩展的每用户成本**！[](Images/abb6593b-cac6-4b06-a8c9-f779bf5bd9a9.png)'
- en: 'So if our infrastructure cost was $100 per month serving 150 users, at a 100%
    utilization, you calculate the Per User Cost to be $0.67/user/month. If you were
    to take scaling in to account, the cost would be as follows:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果我们的基础设施成本是每月100美元，为150个用户提供服务，在100%的利用率下，你可以计算每用户成本为每月$0.67/用户。如果考虑到扩展，成本将如下所示：
- en: '![](Images/79087df7-be63-43ad-994a-e695047def40.png)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/79087df7-be63-43ad-994a-e695047def40.png)'
- en: Scaling without dropping requests would cost 16% more of the original $0.67
    at $0.79 per user per month. However, it is important to keep in mind that your
    infrastructure won't always be so efficient, at lower utilization targets, or
    misconfigured with scaling triggers costs can easily double, triple, or quadruple
    the original cost. The ultimate goal here is to find the sweet spot, so you will
    be paying the right amount per user.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在不丢弃请求的情况下进行扩展将使每用户每月的成本从原始的$0.67增加16%，达到$0.79。然而，重要的是要记住，你的基础设施不会总是如此高效，在较低的利用率目标下，或者在配置错误的情况下，扩展触发器的成本很容易翻倍、翻三倍或者翻四倍。这里的最终目标是找到甜蜜点，这样你就会支付合适的每用户金额。
- en: There's no prescriptive per user cost you should be targeting for. However,
    if you are running a service where you charge users $5 per month after all other
    operational costs and profit margins are accounted for, you're still left over
    with an additional budget *and* your users complaining about poor performance,
    then you're underspending. However, if you're eating into your profits margins,
    or worse breaking even, then you may be overspending or you may need to reconsider
    your business model.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 没有一个固定的每用户成本是您应该瞄准的。然而，如果您运行的服务在考虑了所有其他运营成本和利润率之后向用户收取每月5美元，然后您仍然有额外的预算 *和*
    您的用户抱怨性能不佳，那么您的支出不足。然而，如果您在侵蚀利润率，甚至是亏损，那么您可能是在过度支出，或者您可能需要重新考虑您的商业模式。
- en: There are several other factors that can impact your per user cost such as Blue-Green
    deployments. You can also increase the efficiency of your scaling by leveraging
    pre-scheduled provisioning.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些其他因素可能会影响您的每个用户成本，比如蓝绿部署。您还可以通过利用预先安排的供应来提高扩展的效率。
- en: Pre-scheduled provisioning
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 预先安排的供应
- en: Dynamic scaling out and then back in is what defines cloud computing. However,
    the algorithms currently available still require some planning if you know certain
    days, weeks, or months of a year will require uncharacteristically higher capacity
    of resources. Given a sudden deluge of new traffic, your infrastructure will attempt
    to dynamically scale out, but if the rate of increase in traffic is logarithmic,
    even an optimized server utilization target won't help. Servers will frequently
    reach and operate at 100% utilization, resulting in dropped or erroneous requests.
    To prevent this from happening, you should proactively provision additional capacity
    during such predictable periods of high demand.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 动态扩展然后再收缩是定义云计算的特点。然而，目前可用的算法仍然需要一些规划，如果您知道一年中的某些天、周或月需要非同寻常地更高的资源容量。在新流量突然涌入时，您的基础设施将尝试动态扩展，但如果流量增长的速度是对数的，即使是优化的服务器利用率目标也无济于事。服务器经常会达到并以100%的利用率运行，导致请求被丢弃或出现错误。为了防止这种情况发生，您应该在这些可预测的高需求时期主动提供额外的容量。
- en: Blue-Green deployments
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 蓝绿部署
- en: In [Chapter 11](ba073d6f-c0a0-4681-aea6-aeedac3cbc69.xhtml), *Highly-Available
    Cloud Infrastructure on AWS*, you configured no-downtime Blue-Green deployments.
    Blue-Green deployments are reliable code deployments that ensure continuous up-time
    of your site, while minimizing the risk of bad deployments.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第11章](ba073d6f-c0a0-4681-aea6-aeedac3cbc69.xhtml)中，*AWS上的高可用云基础设施*，您配置了无停机的蓝绿部署。蓝绿部署是可靠的代码部署，可以确保您的网站持续运行，同时最大限度地减少糟糕部署的风险。
- en: Let's presume that you have a highly-available deployment, meaning you have
    two instances active at any given time. During a blue-green deployment, two additional
    instances would be provisioned. Once these additional instances are ready to fulfill
    requests, their health is determined using your predefined health metric.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您有一个高可用的部署，意味着任何时候都有两个实例处于活动状态。在蓝绿部署期间，将会提供两个额外的实例。一旦这些额外的实例准备好满足请求，它们的健康状况将使用您预定义的健康指标来确定。
- en: If your new instances are found to be healthy, it means they're in working order.
    There will be a period of time, like 5 minutes, while connections in the original
    instance are drained and rerouted to the new instances. At this time, the original
    instances are deprovisioned.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的新实例被发现是健康的，这意味着它们是正常工作的。在这段时间内，比如5分钟，原始实例中的连接被排空并重新路由到新实例。此时，原始实例被取消供应。
- en: If the new instances are found to be unhealthy, then these new instances will
    be deprovisioned, resulting in a failed deployment. However, a service will remain
    available without interruption, because the original instance will remain intact
    and keep serving users during the entire process.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 如果发现新实例不健康，那么这些新实例将被取消配置，导致部署失败。然而，服务将保持可用状态，因为原始实例将保持完整，并在整个过程中继续为用户提供服务。
- en: Revising estimates with metrics
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用指标修订估算
- en: Load testing and predicting user growth rates give you an idea of how your system
    may behave in production. Collecting more granular metrics and data is critical
    in revising your estimates and nailing down a more accurate IT budget.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 负载测试和预测用户增长率可以让您了解您的系统在生产中可能的行为。收集更精细的指标和数据对于修订您的估算并确定更准确的IT预算至关重要。
- en: Measuring actual use
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测量实际使用
- en: As we discussed earlier, keeping track of page views alone isn't reflective
    of the amount of requests that a user sends to the server. With Google Tag Manager
    and Google Analytics, you can keep track of more than just page views with ease.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前讨论的那样，仅跟踪页面浏览量并不能反映用户发送给服务器的请求量。使用Google Tag Manager和Google Analytics，您可以轻松跟踪不仅仅是页面浏览量。
- en: 'As of publishing time, here are some of the default events you can configure
    across various categories. This list will grow over time:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 截至发布时间，以下是您可以在各个类别中配置的一些默认事件。此列表将随时间增长：
- en: 'Page View: Used to track whether a user is sticking around as page resources
    load and the page is fully rendered:'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 页面查看：用于跟踪用户在页面资源加载和页面完全呈现时是否停留在页面上：
- en: Page View, fired at first opportunity
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 页面查看，在第一次机会时触发
- en: DOM Ready, when DOM structure is loaded
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DOM准备就绪，当DOM结构加载完成时
- en: Window Loaded, when all elements are finished loading
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 窗口加载完成，当所有元素都加载完成时
- en: 'Click: Used to track user''s click interactions with the page:'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 点击：用于跟踪用户与页面的点击交互：
- en: All Elements
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有元素
- en: Just Links
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只有链接
- en: 'User Engagement: Tracks user behavior:'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户参与度：跟踪用户行为：
- en: Element Visibility, whether elements have been shown
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 元素可见性，元素是否已显示
- en: Form Submission, whether a form was submitted
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表单提交，是否提交了表单
- en: Scroll Depth, how far they scrolled down the page
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 滚动深度，他们在页面上滚动了多远
- en: YouTube Video, if they played an embedded YouTube Video
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: YouTube视频，如果播放了嵌入的YouTube视频
- en: 'Other events track:'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他事件跟踪：
- en: 'Custom Event: Defined by programmer to track a single or multistep event, such
    as a user going through the steps of a checkout process'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义事件：由程序员定义，用于跟踪单个或多步事件，例如用户完成结账流程的步骤
- en: 'History Change: Whether the user navigates back in browser''s history'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 历史更改：用户是否在浏览器历史记录中导航
- en: 'JavaScript Error: Whether JavaScript errors have been generated'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JavaScript错误：是否生成了JavaScript错误
- en: 'Timer: To trigger or delay time-based analytics events'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计时器：触发或延迟基于时间的分析事件
- en: Most of these events don't require any extra coding to implement, so we will
    implement a custom event to demonstrate how you can capture any single or series
    of events you want with custom coding. Capturing workflows with a series of events
    can reveal where you should be focusing your development efforts.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数这些事件不需要额外的编码来实现，因此我们将实现一个自定义事件，以演示如何使用自定义编码捕获任何单个或一系列事件。通过一系列事件捕获工作流程可以揭示您应该将开发工作重点放在哪里。
- en: For more information on Google Tag Manager events, triggers, or tips and tricks,
    I recommend that you check out the blog by Simo Ahava at [www.simoahava.com](http://www.simoahava.com).
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 有关Google Tag Manager事件、触发器或技巧的更多信息，我建议您查看Simo Ahava在[www.simoahava.com](http://www.simoahava.com)的博客。
- en: Creating a custom event
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建自定义事件
- en: 'For this example, we will capture the event for when a customer is successfully
    checked out and a sale is completed. We will implement two events, one for checkout
    initiation and the other for when the transaction has been successfully completed:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，我们将捕获当客户成功结账并完成销售时的事件。我们将实现两个事件，一个用于结账启动，另一个用于交易成功完成时：
- en: Log on to your Google Tag Manager Workspace at [tagmanager.google.com](https://tagmanager.google.com)
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到您的Google标签管理器工作区，网址为[tagmanager.google.com](https://tagmanager.google.com)
- en: 'Under the Triggers menu, click on New, as pointed out:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在触发器菜单下，单击新建，如图所示：
- en: '![](Images/79e158f0-a52a-42df-ba04-03f6ba125296.png)Tag Manager Workspace'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`checkout`函数，在进行服务调用之前调用`checkoutInitiated`
- en: Name your trigger
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 命名您的触发器
- en: Click on the empty trigger card to select the event type
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击空的触发器卡以选择事件类型
- en: Select Custom Event
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择自定义事件
- en: 'Create a custom event named `checkoutCompleted`, as illustrated:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建名为`checkoutCompleted`的自定义事件，如图所示：
- en: '![](Images/d5d5ea90-b0e4-4b63-88c4-14c3ad4e7d54.png)Custom Checkout Event'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们编辑Angular代码来触发事件：
- en: 'By selecting the Some Custom Events option, you can limit or control the collection
    of a particular event, that is, only when on a particular page or a domain such
    as on `lemonmart.com`. In the following screenshot, you can see a custom rule
    that would filter out any checkout event that didn''t happen on `lemonmart.com`
    to weed out development or test data:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 通过选择“一些自定义事件”选项，您可以限制或控制特定事件的收集，即仅当在特定页面或域上时，例如在`lemonmart.com`上。在下面的屏幕截图中，您可以看到一个自定义规则，该规则将过滤掉在`lemonmart.com`上未发生的任何结账事件，以清除开发或测试数据：
- en: '![](Images/5ad1d833-f404-43fe-96de-eb9a78faa954.png)Some Custom Events'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 一些自定义事件
- en: Save your new event
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存您的新事件
- en: Repeat the process for an event named `checkoutInitiated`
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为名为`checkoutInitiated`的事件重复此过程
- en: 'Add two new Google Analytics event tags, as highlighted here:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加两个新的Google Analytics事件标签，如图所示：
- en: '![](Images/3ad79369-3bc4-41c1-bbe6-60cfd5204321.png)New Custom Event Tags'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 新的自定义事件标签
- en: 'Configure the event and attach the relevant trigger you created to it, as shown:'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置事件并将您创建的相关触发器附加到其中，如图所示：
- en: '![](Images/44ae78d9-6d5a-4d56-a169-b88334147094.png)Trigger Setup'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 标签管理器工作区
- en: Submit and publish your workspace
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提交并发布您的工作区
- en: We are now ready to receive custom events in our analytics environment.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在准备在我们的分析环境中接收自定义事件。
- en: Adding custom events in Angular
  id: totrans-201
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Angular中添加自定义事件
- en: 'Now, let''s edit the Angular code to trigger the events:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '可选地，您可以直接在模板中添加`onclick`事件处理程序，例如在结账按钮上添加`onclick="dataLayer.push({''event'':
    ''checkoutInitiated''})"`。这将`checkoutInitiated`事件推送到由`gtm.js`提供的`dataLayer`对象中。'
- en: 'Observe the POS template with a Checkout button:'
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 观察带有结账按钮的POS模板：
- en: '[PRE1]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The circular checkout button is pointed out at the bottom-left corner of the
    following diagram:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 圆形结账按钮位于以下图表的左下角：
- en: '![](Images/3b63b2bf-fe62-4e9c-8092-0edfe7b21c46.png)POS Page with Checkout
    ButtonOptionally, you can add an `onclick` event handler directly in the template,
    like `onclick="dataLayer.push({''event'': ''checkoutInitiated''})"` on the checkout
    button. This pushes the `checkoutInitiated` event to the `dataLayer` object, made
    available by `gtm.js`.'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: POS页面与结账按钮
- en: 'In the POS compoment, declare an interface for `dataLayer` events you intend
    to push:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在POS组件中，声明您打算推送的`dataLayer`事件的接口：
- en: '[PRE2]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Create the `checkout` function to call `checkoutInitiated` before a service
    call is made
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 自定义结账事件
- en: 'Simulate a fake transaction using `setTimeout` and call the `checkoutCompleted`
    event, when the timeout ends:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`setTimeout`模拟一个虚假交易，并在超时结束时调用`checkoutCompleted`事件：
- en: '[PRE3]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In a real implementation, you would only call `checkoutCompleted` if your service
    call succeeds. To not to miss any data during your analytics collection, consider
    covering failure cases as well, such as adding multiple `checkoutFailed` events
    that cover various failure cases.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际实现中，只有在服务调用成功时才会调用`checkoutCompleted`。为了不错过分析收集过程中的任何数据，还要考虑覆盖失败情况，例如添加多个覆盖各种失败情况的`checkoutFailed`事件。
- en: Now, we are ready to see the analytics in action.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们准备看分析结果。
- en: On the POS page, click on the Checkout button
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在POS页面上，点击结账按钮
- en: In Google Analytics, observe the Real-Time | Events tab to see events as they
    occur
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Google Analytics中，观察实时|事件选项卡，以查看事件发生时的事件。
- en: 'After 5-10 minutes, the events will also show up under the Behavior | Events
    tab, as shown:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 5-10分钟后，这些事件也会显示在行为|事件选项卡下，如下所示：
- en: '![](Images/30f98116-4cc6-4087-8990-a5416a5a8975.png)Google Analytics Top Events'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '![](Images/30f98116-4cc6-4087-8990-a5416a5a8975.png)Google Analytics顶级事件'
- en: Using custom events, you can keep track of various nuanced user behavior happening
    on your site. By collecting `checkoutInitiated` and `checkoutCompleted` events,
    you can calculate a conversion rate of how many initiated checkouts are taken
    to completion. In the case of a point-of-sale system, that rate should be very
    high; otherwise, it means you may have systematic issues in place.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 使用自定义事件，您可以跟踪站点上发生的各种微妙的用户行为。通过收集`checkoutInitiated`和`checkoutCompleted`事件，您可以计算有多少启动的结账最终完成的转化率。在销售点系统的情况下，该比率应该非常高；否则，这意味着您可能存在系统性问题。
- en: Advanced Analytics events
  id: totrans-219
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高级分析事件
- en: It is possible to collect additional metadata along with each event, such as
    payment amount or type when checkout is initiated or the `transactionId`, when
    checkout is completed.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个事件中收集额外的元数据是可能的，例如在启动结账时收集付款金额或类型，或在完成结账时收集`transactionId`。
- en: 'To work with these more advanced features, I would recommend that you check
    out `angulartics2`, which can be found at [https://www.npmjs.com/package/angulartics2](https://angulartics.github.io/angulartics2/).
    `angulartics2` is a vendor-agnostic analytics library for Angular that can enable
    unique and granular event tracking needs using popular vendors, such as Google
    Tag Manager, Google Analytics, Adobe, Facebook, Baidu and more, as highlighted
    on the tool''s homepage, shown here:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用这些更高级的功能，我建议您查看`angulartics2`，该工具可以在[https://www.npmjs.com/package/angulartics2](https://angulartics.github.io/angulartics2/)找到。`angulartics2`是一个供应商无关的Angular分析库，可以使用流行的供应商（如Google
    Tag Manager、Google Analytics、Adobe、Facebook、百度等）实现独特和细粒度的事件跟踪需求，如该工具主页上所示：
- en: '![](Images/c80fff80-b31f-4536-90e6-f6388e6cab25.png)Angulartics2'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '![](Images/c80fff80-b31f-4536-90e6-f6388e6cab25.png)Angulartics2'
- en: '`angulartics2` integrates with the Angular router and the UI-Router with the
    ability to implement custom rules and exceptions on route-per-route basis. The
    library makes it easy to implement custom events and enables metadata tracking
    with data binding. Check out the following example:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '`angulartics2`与Angular路由器和UI-Router集成，可以根据每个路由实现自定义规则和异常。该库使实现自定义事件和启用数据绑定的元数据跟踪变得容易。查看以下示例：'
- en: '[PRE4]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: We can keep track of a click event named `DownloadClick`, which would have a
    `category` and a `label` attached to it for rich events tracking within Google
    Analytics.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以跟踪名为`DownloadClick`的点击事件，该事件将附加一个`category`和一个`label`，以便在Google Analytics中进行丰富的事件跟踪。
- en: With advanced analytics under your belt, you can use actual usage data to inform
    how you improve or host your app. This topic concludes a journey that started
    by creating pencil drawn mock ups at the beginning of this book, covering a wide-variety
    of tools, techniques, and technologies a full-stack web developer must be familiar
    with in today's web to succeed. We dove deep into Angular, Angular Material, Docker,
    and automation in general to make you the most productive developer you can be,
    delivering the highest quality web app, while juggling a lot of complexity along
    the way. Good luck out there!
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 通过高级分析，您可以使用实际使用数据来指导您改进或托管您的应用程序。这个主题总结了从本书开始时创建铅笔草图模型的旅程，涵盖了今天的全栈Web开发人员必须熟悉的各种工具、技术和技术。我们深入研究了Angular、Angular
    Material、Docker和自动化，以使您成为最高效的开发人员，交付最高质量的Web应用程序，同时在这一过程中处理了许多复杂性。祝你好运！
- en: Summary
  id: totrans-227
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you have rounded out your knowledge of developing web apps.
    You learned how to work with Google Tag Manager and Google Analytics to capture
    page views of your Angular application. Using high-level metrics, we went over
    how you can calculate the cost of your infrastructure per user. We then investigated the
    nuances of the effect high-availability and scaling can have on your budget. We
    covered load testing complex user workflows to estimate how many users any given
    server can host concurrently. Using this information, we calculated a target server
    utilization to fine-tune your scaling settings.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您已经丰富了开发Web应用程序的知识。您学会了如何使用Google Tag Manager和Google Analytics来捕获您的Angular应用程序的页面浏览量。使用高级指标，我们讨论了如何计算每个用户基础设施的成本。然后，我们调查了高可用性和扩展性对预算的影响的细微差别。我们涵盖了负载测试复杂用户工作流程，以估算任何给定服务器可以同时托管多少用户。利用这些信息，我们计算了目标服务器利用率，以微调您的扩展设置。
- en: All of our pre-release calculations were mostly estimates and educated guesses.
    We went over the kinds of metrics and custom events you can use to measure the
    actual use of your application. When your application goes live and you start
    gathering these metrics, you can update your calculations to gain a better understanding
    of the viability and the affordability of your infrastructure.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 我们所有的预发布计算大多是估计和经过深思熟虑的猜测。我们讨论了您可以使用哪些指标和自定义事件来衡量应用程序的实际使用情况。当您的应用程序上线并开始收集这些指标时，您可以更新您的计算，以更好地了解您基础设施的可行性和负担能力。
- en: Over the course of this book, I've shown that web development is so much more
    than just coding a website. In the first half of the book, we went over a variety
    of topics from process, design, approach, architecture to your development environment,
    the libraries and tools you use, including going over the basics of the Angular
    platform and Angular Material, finally deploying your application on the web using
    Zeit Now.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的过程中，我已经表明，Web开发远不止是编写网站。在本书的前半部分，我们涵盖了从流程、设计、方法、架构到开发环境、您使用的库和工具的各种主题，包括基本的Angular平台和Angular
    Material，最后使用Zeit Now在Web上部署您的应用程序。
- en: In the second half of the book, we followed the Router-first approach to designing,
    architecting, and implementing a large line-of-business application going over
    most major design patterns you may encounter in real life. Along the way, we covered
    unit testing, Docker, Continuous Integration with CircleCI, designing APIs with
    Swagger, gathering analytics using Google Tag Manager, and deploying a highly-available
    application on AWS. As you master these wide variety of skills and techniques,
    you will become a true full-stack web developer capable of delivering small and
    large web apps leveraging Angular.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 在书的下半部分，我们采用了“路由器优先”方法来设计、架构和实现一个大型的业务应用程序，涵盖了你在现实生活中可能遇到的大多数主要设计模式。在这个过程中，我们涵盖了单元测试、Docker、使用CircleCI进行持续集成、使用Swagger设计API、使用Google
    Tag Manager收集分析数据，以及在AWS上部署高可用性应用程序。当你掌握了这些各种技能和技术，你将成为一个真正的全栈web开发人员，能够利用Angular交付小型和大型web应用程序。
