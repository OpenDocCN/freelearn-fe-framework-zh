["```js\nimport React, { useState, useEffect } from \"react\";\nimport fetchPostById from \"./fetchPostById\";\ninterface PostType {\n  id: string;\n  title: string;\n  summary: string;\n}\nconst BlogPost = ({ id }: { id: string }) => {\n  const [post, setPost] = useState<PostType>(EmptyBlogPost);\n  const [isLiked, setIsLiked] = useState(false);\n  useEffect(() => {\n    fetchPostById(id).then((post) => setPost(post));\n  }, [id]);\n  const handleClick = () => {\n    setIsLiked(!isLiked);\n  };\n  return (\n    <div>\n      <h2>{post.title}</h2>\n      <p>{post.summary}</p>\n      <button onClick={handleClick}>\n        {isLiked ? \"Unlike\" : \"Like\"}\n      </button>\n    </div>\n  );\n};\nexport default BlogPost;\n```", "```js\nconst fetchPostById = (id: string) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => resolve({}), 2000);\n  })\n};\n```", "```js\nconst useFetchPost = (id: string): PostType => {\n  const [post, setPost] = useState<PostType>(EmptyBlogPost);\n  useEffect(() => {\n    fetchPostById(id).then((post) => setPost(post));\n  }, [id]);\n  return post;\n};\nconst LikeButton: React.FC = () => {\n  const [isLiked, setIsLiked] = useState(false);\n  const handleClick = () => {\n    setIsLiked(!isLiked);\n  };\n  return <button onClick={handleClick}>\n      {isLiked ? \"Unlike\" : \"Like\"}\n  </button>;\n};\nconst BlogPost = ({ id }: { id: string }) => {\n  const post = useFetchPost(id);\n  return (\n    <div>\n      <h2>{post.title}</h2>\n      <p>{post.summary}</p>\n      <LikeButton />\n    </div>\n  );\n};\n```", "```js\ntype Product = {\n  id: string;\n  name: string;\n  image: string;\n  price: number;\n};\nconst ProductList = ({\n  products,\n  addToCart,\n}: {\n  products: Product[];\n  addToCart: (id: string) => void;\n}) => (\n  <div>\n    <h2>Product List</h2>\n    {products.map((product) => (\n      <div key={product.id} className=\"product\">\n        <img src={product.image} alt={product.name} />\n        <div>\n          <h2>{product.name}</h2>\n          <p>${product.price}</p>\n          <button onClick={() => addToCart(product.id)}>Add to Cart\n           </button>\n        </div>\n      </div>\n    ))}\n  </div>\n);\nexport default ProductList;\n```", "```js\nconst Cart = ({\n  cartItems,\n  removeFromCart,\n}: {\n  cartItems: Product[];\n  removeFromCart: (id: string) => void;\n}) => (\n  <div>\n    <h2>Shopping Cart</h2>\n    {cartItems.map((item) => (\n      <div key={item.id} className=\"product\">\n        <img src={item.image} alt={item.name} />\n        <div>\n          <h2>{item.name}</h2>\n          <p>${item.price}</p>\n          <button onClick={() => removeFromCart(item.id)}>\n            Remove from Cart\n          </button>\n        </div>\n      </div>\n    ))}\n  </div>\n);\n```", "```js\nimport { Product } from \"./types\";\nconst LineItem = ({\n  product,\n  performAction,\n  label,\n}: {\n  product: Product;\n  performAction: (id: string) => void;\n  label: string;\n}) => {\n  const { id, image, name, price } = product;\n  return (\n    <div key={id} className=\"product\">\n      <img src={image} alt={name} />\n      <div>\n        <h2>{name}</h2>\n        <p>${price}</p>\n        <button onClick={() => performAction(id)}>{label}</button>\n      </div>\n    </div>\n  );\n};\nexport default LineItem;\n```", "```js\nconst ProductList = ({\n  products,\n  addToCart,\n}: {\n  products: Product[];\n  addToCart: (id: string) => void;\n}) => (\n  <div>\n    <h2>Product List</h2>\n    {products.map((product) => (\n      <LineItem\n        key={product.id}\n        product={product}\n        performAction={addToCart}\n        label=\"Add to Cart\"\n      />\n    ))}\n  </div>\n);\n```", "```js\nconst Cart = ({\n  cartItems,\n  removeFromCart,\n}: {\n  cartItems: Product[];\n  removeFromCart: (id: string) => void;\n}) => (\n  <div>\n    <h2>Shopping Cart</h2>\n    {cartItems.map((item) => (\n      <LineItem\n        key={item.id}\n        product={item}\n        performAction={removeFromCart}\n        label=\"Remove from Cart\"\n      />\n    ))}\n  </div>\n);\n```", "```js\ntype User = {\n  name: string;\n  avatar: string;\n  friends: string[];\n};\ntype Post = {\n  author: string;\n  summary: string;\n};\ntype UserDashboardProps = {\n  user: User;\n  posts: Post[];\n};\nfunction UserDashboard({ user, posts }: UserDashboardProps) {\n  return (\n    <div>\n      <h1>{user.name}</h1>\n      <img src={user.avatar} alt=\"profile\" />\n      <h2>Friends</h2>\n      <ul>\n        {user.friends.map((friend) => (\n          <li key={friend}>{friend}</li>\n        ))}\n      </ul>\n      <h2>Latest Posts</h2>\n      {posts.map((post) => (\n        <div key={post.author}>\n          <h3>{post.author}</h3>\n          <p>{post.summary}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\nexport default UserDashboard;\n```", "```js\nconst UserProfile = ({ user }: { user: User }) => {\n  return (\n    <>\n      <h1>{user.name}</h1>\n      <img src={user.avatar} alt=\"profile\" />\n    </>\n  );\n};\n```", "```js\nconst FriendList = ({ friends }: { friends: string[] }) => {\n  return (\n    <>\n      <h2>Friends</h2>\n      <ul>\n        {friends.map((friend) => (\n          <li key={friend}>{friend}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n```", "```js\nconst PostList = ({ posts }: { posts: Post[] }) => {\n  return (\n    <>\n      <h2>Latest Posts</h2>\n      {posts.map((post) => (\n        <div key={post.author}>\n          <h3>{post.author}</h3>\n          <p>{post.summary}</p>\n        </div>\n      ))}\n    </>\n  );\n};\n```", "```js\nfunction UserDashboard({ user, posts }: UserDashboardProps) {\n  return (\n    <div>\n      <UserProfile user={user} />\n      <FriendList friends={user.friends} />\n      <PostList posts={posts} />\n    </div>\n  );\n}\n```", "```js\nimport React from \"react\";\ntype PageProps = {\n  headerTitle: string;\n  headerSubtitle: string;\n  sidebarLinks: string[];\n  isLoading: boolean;\n  mainContent: React.ReactNode;\n  onHeaderClick: () => void;\n  onSidebarLinkClick: (link: string) => void;\n};\nfunction Page({\n  headerTitle,\n  headerSubtitle,\n  sidebarLinks,\n  mainContent,\n  isLoading,\n  onHeaderClick,\n  onSidebarLinkClick,\n}: PageProps) {\n  return (\n    <div>\n      <header onClick={onHeaderClick}>\n        <h1>{headerTitle}</h1>\n        <h2>{headerSubtitle}</h2>\n      </header>\n      <aside>\n        <ul>\n          {sidebarLinks.map((link) => (\n            <li key={link} onClick={() => onSidebarLinkClick(link)}>\n              {link}\n            </li>\n          ))}\n        </ul>\n      </aside>\n      {!isLoading && <main>{mainContent}</main>}\n    </div>\n  );\n}\n```", "```js\ntype HeaderProps = {\n  headerTitle: string;\n  headerSubtitle: string;\n  onHeaderClick: () => void;\n};\nconst Header = ({\n  headerTitle,\n  headerSubtitle,\n  onHeaderClick,\n}: HeaderProps) => {\n  return (\n    <header onClick={onHeaderClick}>\n      <h1>{headerTitle}</h1>\n      <h2>{headerSubtitle}</h2>\n    </header>\n  );\n};\n```", "```js\ntype HeaderProps = {\n  title: string;\n  subtitle: string;\n  onClick: () => void;\n};\nconst Header = ({\n  title,\n  subtitle,\n  onClick,\n}: HeaderProps) => {\n  return (\n    <header onClick={onClick}>\n      <h1>{title}</h1>\n      <h2>{subtitle}</h2>\n    </header>\n  );\n};\n```", "```js\ntype SidebarProps = {\n  links: string[];\n  onLinkClick: (link: string) => void;\n};\nconst Sidebar = ({ links, onLinkClick }: SidebarProps) => {\n  return (\n    <aside>\n      <ul>\n        {links.map((link) => (\n          <li key={link} onClick={() => onLinkClick(link)}>\n            {link}\n          </li>\n        ))}\n      </ul>\n    </aside>\n  );\n};\n```", "```js\ntype MainProps = {\n  isLoading: boolean;\n  content: React.ReactNode;\n};\nconst Main = ({ isLoading, content }: MainProps) => {\n  return <>{!isLoading && <main>{content}</main>}</>;\n};\n```", "```js\nfunction Page({\n  headerTitle,\n  headerSubtitle,\n  sidebarLinks,\n  mainContent,\n  isLoading,\n  onHeaderClick,\n  onSidebarLinkClick,\n}: PageProps) {\n  return (\n    <div>\n      <Header\n        title={headerTitle}\n        subtitle={headerSubtitle}\n        onClick={onHeaderClick}\n      />\n      <Sidebar links={sidebarLinks} onLinkClick={onSidebarLinkClick} \n       />\n      <Main isLoading={isLoading} content={mainContent} />\n    </div>\n  );\n}\n```", "```js\ntype PageProps = {\n  header: React.ReactNode;\n  sidebarLinks: string[];\n  isLoading: boolean;\n  mainContent: React.ReactNode;\n  onSidebarLinkClick: (link: string) => void;\n};\nfunction Page({\n  header,\n  sidebarLinks,\n  mainContent,\n  isLoading,\n  onSidebarLinkClick,\n}: PageProps) {\n  return (\n    <div>\n      {header}\n      <Sidebar links={sidebarLinks}\n       onLinkClick={onSidebarLinkClick} />\n      <Main isLoading={isLoading} content={mainContent} />\n    </div>\n  );\n}\n```", "```js\ntype PageProps = {\n  header: React.ReactNode;\n  sidebar: React.ReactNode;\n  main: React.ReactNode;\n};\nfunction Page({ header, sidebar, main }: PageProps) {\n  return (\n    <div>\n      {header}\n      {sidebar}\n      {main}\n    </div>\n  );\n}\n```", "```js\nconst MyPage = () => {\n  return (\n    <Page\n      header={\n        <Header\n          title=\"My application\"\n          subtitle=\"Product page\"\n          onClick={() => console.log(\"toggle header\")}\n        />\n      }\n      sidebar={\n        <Sidebar\n          links={[\"Home\", \"About\", \"Contact\"]}\n          onLinkClick={() => console.log(\"toggle sidebar\")}\n        />\n      }\n      main={<Main isLoading={false}\n            content={<div>The main</div>} />}\n    />\n  );\n};\n```", "```js\nconst MySimplePage = () => {\n  return (\n    <Page\n      header={\n        <h1>A simple header</h1>\n      }\n      sidebar={\n        <aside>\n          <ul>\n            <li>Home</li>\n            <li>About</li>\n          </ul>\n        </aside>\n      }\n      main={<div>The main content</div>}\n    />\n  );\n};\n```"]