- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Welcome to *Full Stack Web Development with Remix*. We live in exciting times
    for web development. Modern web apps are complex, and they operate on intricate
    business logic. As web developers, it's our job to deliver great user experiences,
    using the latest web development advancements and tackling the complexities of
    today's business requirements.
  prefs: []
  type: TYPE_NORMAL
- en: React is the de facto standard for building modern web applications, but it
    draws clear lines where its responsibilities end. It allows you to compose your
    UI from reusable components, but React doesn't cover other key elements of your
    app. This is where React is supplemented by a full stack web framework. Today's
    web frameworks offer abstractions for routing, data fetching and mutations, caching,
    session management, progressive enhancement, optimistic UI, and many other aspects
    crucial for building state-of-the-art web experiences. This is where Remix comes
    into play.
  prefs: []
  type: TYPE_NORMAL
- en: Remix is a full stack web framework for React applications. It is built with
    different deployment targets in mind and utilizes web standards to unlock the
    full potential of the web platform. Remix provides great primitives, conventions,
    and levers to let us build modern applications and great user experiences faster.
    Most importantly, Remix operates on a simple mental model that lets us build complex
    user interfaces with reduced complexity by leveraging the philosophy of progressive
    enhancement. Building pending, optimistic, and real-time user interfaces has never
    been easier. Personally, I have never felt more productive building for the web,
    and I also never had more fun doing so!
  prefs: []
  type: TYPE_NORMAL
- en: This book follows a real-world project that goes beyond what can be found in
    Remix’s documentation, tutorials, and workshops. By the end of this book, you
    will be able to apply and articulate many best practices to work with Remix. You
    will further work with web standards and learn how to unlock the full potential
    of the web platform with Remix. Finally, you will understand the advantages of
    utilizing a web server environment in your application architecture. Let’s dive
    into *Full Stack Web Development with Remix* and learn how Remix can make us more
    productive in building better user experiences faster.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for React developers looking to use a full stack framework to unlock
    the full potential of the web platform. This book will also come in handy to evaluate
    and justify a migration to Remix.
  prefs: []
  type: TYPE_NORMAL
- en: 'This book is for you if you are the following:'
  prefs: []
  type: TYPE_NORMAL
- en: A web developer who wants to utilize web standards to build fast, slick, and
    resilient user experiences.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A React developer who is curious to learn more about full stack web development
    and the benefits of adding a web server environment to the frontend.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A tech lead evaluating a migration from a single-page application to Remix,
    looking to learn more about today's full stack web frameworks.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B17399_01.xhtml#_idTextAnchor013), *The Era of Full Stack Web
    Frameworks*, introduces Remix as a full stack web framework and highlights the
    advantages Remix provides you as a React developer. The chapter further discusses
    Remix’s philosophy and establishes the mental model of primitives, conventions,
    and levers. Finally, the chapter explains how Remix works under the hood.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B17399_02.xhtml#_idTextAnchor030), *Creating a New Remix App*,
    kicks off your Remix development journey. The chapter guides you through creating
    a new Remix application using Remix’s `create-remix` CLI script. The chapter also
    provides an overview of Remix’s file and folder structure and Remix’s two environments
    – the client and the server. Finally, the chapter offers a troubleshooting guide
    for Remix projects.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B17399_03.xhtml#_idTextAnchor043), *Deployment Target, Adapters,
    and Stacks*, offers an overview of Remix’s different deployment targets and discusses
    considerations to select the right target for your application. The chapter further
    details how to switch between adapters and how to use Remix Stacks to use an existing
    application template. Finally, the chapter introduces you to BeeRich, the demo
    application of this book.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B17399_04.xhtml#_idTextAnchor057), *Routing in Remix*, reviews
    Remix’s file-based routing convention. The chapter guides you through creating
    standalone pages, nested routes, parameterized routes, pathless layout routes,
    and other routing concepts. The chapter also discusses page navigations in Remix.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B17399_05.xhtml#_idTextAnchor078), *Fetching and Mutating Data*,
    dives deep into data fetching and mutations with Remix. The chapter documents
    Remix’s request-response life cycle and provides detailed practices to work with
    Remix’s server-side `loader` and `action` functions. The chapter also explains
    Remix’s built-in data revalidation.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B17399_06.xhtml#_idTextAnchor090), *Enhancing the User Experience*,
    formalizes how progressive enhancement works in Remix. The chapter then focuses
    on advanced data fetching and mutation concepts, such as prefetching and handling
    concurrent mutations.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B17399_07.xhtml#_idTextAnchor105), *Error Handling in Remix*,
    provides an overview of handling expected and unexpected errors in Remix to develop
    resilient user experiences.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B17399_08.xhtml#_idTextAnchor119), *Session Management*, guides
    you through implementing a search feature and a login and signup flow in BeeRich.
    The chapter provides a practical deep dive into managing UI and session state,
    using web standards and Remix’s primitives.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B17399_09.xhtml#_idTextAnchor137), *Assets and Metadata Handling*,
    focuses on meta tags and static assets in Remix. The chapter includes practices
    to expose static assets and work with custom fonts. Finally, the chapter discusses
    how to manage images with Remix.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B17399_10.xhtml#_idTextAnchor154), *Working with File Uploads*,
    introduces you to Remix’s file upload helpers. The chapter guides you through
    the implementation of uploading user files in BeeRich and emphasizes limiting
    access to the uploaded files to authorized users only.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 11*](B17399_11.xhtml#_idTextAnchor167), *Optimistic UI*, discusses
    the trade-offs of the optimistic UI. The chapter further lets you work with optimistic
    UI in BeeRich using Remix’s primitives. Finally, the chapter highlights how Remix
    eases the implementation of optimistic UI through its primitives and built-in
    data revalidation.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 12*](B17399_12.xhtml#_idTextAnchor181), *Caching Strategies*, provides
    an overview of different caching strategies to improve the performance of a Remix
    application. First, the chapter reviews different HTTP caching strategies before
    discussing in-memory caching. The chapter offers practical examples using the
    BeeRich demo application.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 13*](B17399_13.xhtml#_idTextAnchor194), *Deferring Loader Data*,
    introduces you to Remix’s concept of deferring loader data. The chapter further
    explains HTML streaming and motivates its usage and use cases to use streaming
    to defer data requests.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 14*](B17399_14.xhtml#_idTextAnchor204), *Real-Time with Remix*, examines
    popular real-time technologies and allows you to implement real-time data updates
    in BeeRich, using a Remix resource route and Server-Sent Events.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 15*](B17399_15.xhtml#_idTextAnchor214), *Advanced Session Management*,
    explores additional session and UI state management use cases. The chapter provides
    an overview of Remix’s cookie helper primitives compared to its session helpers.
    The chapter further guides you through the implementation of pagination in BeeRich.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 16*](B17399_16.xhtml#_idTextAnchor221), *Developing for the Edge*,
    defines the term *edge* in detail and considers the advantages and disadvantages
    of deploying Remix applications to an edge environment.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 17*](B17399_17.xhtml#_idTextAnchor230), *Migration and Upgrade Strategies*,
    wraps up the learning journey of this book and offers an overview of different
    strategies to migrate to Remix. The chapter also explains Remix’s future flags
    and how they can be used to ease major version upgrades.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book guides you through the development of a full stack web application
    with Remix. Each chapter introduces new concepts and includes practical examples
    to gain hands-on experience. You will get the most out of this book if you have
    some experience building web applications with React or a similar frontend framework
    or library. Since this book’s demo application is written in TypeScript, previous
    TypeScript exposure will also be helpful to follow along with the code examples.
  prefs: []
  type: TYPE_NORMAL
- en: 'To follow the hands-on exercises in this book, you will need a computer with
    Node.js and npm installed. We advise using the latest LTS version of Node.js (currently
    v18). You can download Node.js and npm here: [https://nodejs.org/en](https://nodejs.org/en).
    An editor such as VS Code is also recommended.'
  prefs: []
  type: TYPE_NORMAL
- en: Each chapter is accompanied by one or more `README.md` files in the book’s GitHub
    repository. The `README.md` files contain additional guidance and set-up instructions
    for each chapter if necessary.
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code from the book’s GitHub repository (a link
    is available in the next section). Doing so will help you avoid any potential
    errors related to the copying and pasting** **of code.**'
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/Full-Stack-Web-Development-with-Remix](https://github.com/PacktPublishing/Full-Stack-Web-Development-with-Remix).
    If there’s an update to the code, it will be updated in the GitHub repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: “The root of the `routes` folder maps to the `/`-path.”'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see on
    screen. For instance, words in menus or dialog boxes appear in **bold**. Here
    is an example: “Notice that one route is flagged as **index**, while the demo
    route has a **path** property, which matches its filename.”'
  prefs: []
  type: TYPE_NORMAL
- en: Tips or important notes
  prefs: []
  type: TYPE_NORMAL
- en: Appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: If you have questions about any aspect of this book,
    email us at [customercare@packtpub.com](mailto:customercare@packtpub.com) and
    mention the book title in the subject of your message.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    and fill in the form.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at [copyright@packt.com](mailto:copyright@packt.com)
    with a link to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  prefs: []
  type: TYPE_NORMAL
- en: Share Your Thoughts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once you’ve read *Full Stack Web Development with Remix*, we’d love to hear
    your thoughts! Please [click here to go straight to the Amazon review page](https://packt.link/r/1-801-07529-8)
    for this book and share your feedback.
  prefs: []
  type: TYPE_NORMAL
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  prefs: []
  type: TYPE_NORMAL
- en: Download a free PDF copy of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Thanks for purchasing this book!
  prefs: []
  type: TYPE_NORMAL
- en: 'Do you like to read on the go but are unable to carry your print books everywhere?     Is your eBook purchase not compatible with the device of your choice?'
  prefs: []
  type: TYPE_NORMAL
- en: Don’t worry, now with every Packt book you get a DRM-free PDF version of that
    book at no cost.
  prefs: []
  type: TYPE_NORMAL
- en: Read anywhere, any place, on any device. Search, copy, and paste code from your
    favorite technical books directly into your application.
  prefs: []
  type: TYPE_NORMAL
- en: The perks don’t stop there, you can get exclusive access to discounts, newsletters,
    and great free content in your inbox daily
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these simple steps to get the benefits:'
  prefs: []
  type: TYPE_NORMAL
- en: Scan the QR code or visit the link below
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B17399_QR_Free_PDF.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '[https://packt.link/free-ebook/9781801075299](https://dev.packt.link/free-ebook/9781801071109)'
  prefs: []
  type: TYPE_NORMAL
- en: Submit your proof of purchase
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: That’s it! We’ll send your free PDF and other benefits to your email directly
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Part 1 – Getting Started with Remix
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this first part, you will be introduced to Remix. You will get to know Remix’s
    philosophy and understand how Remix works under the hood. You will then create
    your first Remix app and discover how Remix can be deployed to different environments
    and runtimes. Finally, you will kick off your development journey with BeeRich
    – the example application of this book – and learn about Remix’s routing convention.
  prefs: []
  type: TYPE_NORMAL
- en: 'This part has the following chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B17399_01.xhtml#_idTextAnchor013), *The Era of Full Stack Web
    Frameworks*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B17399_02.xhtml#_idTextAnchor030), *Creating a New Remix App*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B17399_03.xhtml#_idTextAnchor043), *Deployment Targets, Adapters,
    and Stacks*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B17399_04.xhtml#_idTextAnchor057), *Routing in Remix*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
