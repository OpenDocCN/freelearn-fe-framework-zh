- en: Chapter 5. Form and Input Animation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第五章。表单和输入动画
- en: '*In this chapter, we will look at examples and concepts of form animation using
    jQuery. We can use almost any animation type for animating form inputs (because
    of quirks and compatibility). However, keep in mind that a lot of animations won''t
    make sense or will confuse our user, so we''ll be steering clear of those. These
    animation types are ones that are too "jarring" to the eye. For example, if we
    change the dimensions of the form inputs, our user might not know what it means.
    For our first examples, we''re going to be sticking with color changes mostly.
    Later in the chapter, we''ll strap on more animation support using jQuery UI to
    really get our forms moving!*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*在本章中，我们将使用 jQuery 来查看表单动画的示例和概念。我们可以使用几乎任何类型的动画来动画表单输入（由于怪癖和兼容性）。然而，请记住，许多动画都没有意义或会使我们的用户感到困惑，因此我们将避开它们。这些动画类型是对眼睛太“刺耳”的。例如，如果我们改变表单输入的尺寸，我们的用户可能不知道这意味着什么。对于我们的第一个示例，我们将主要坚持颜色变化。在本章后面，我们将使用
    jQuery UI 添加更多的动画支持，以真正使我们的表单动起来！*'
- en: In our examples for this chapter, we'll be creating HTML forms so that we can
    get the visual representation of form animation. For these examples, we won't
    be adding a form action because we don't need them to submit properly.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的示例中，我们将创建 HTML 表单，以便我们可以获得表单动画的视觉表示。对于这些示例，我们不会添加表单操作，因为我们不需要它们正确提交。
- en: 'In this chapter we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Animating the form when our user moves their mouse cursor over the form fields
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当我们的用户将鼠标光标移动到表单字段上时，动画表单
- en: Changing the background color of the input fields once our user clicks on one
    of them
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当我们的用户点击其中一个输入字段时，更改输入字段的背景颜色
- en: Animating the form's appearance based on the form validation
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据表单验证动画化表单的外观
- en: 'These are the event handlers we''ll be using in this chapter to get our form
    elements moving:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是我们在本章中将要使用的事件处理程序，以使我们的表单元素移动起来：
- en: '`hover()`'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hover()`'
- en: '`focus()`'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`focus()`'
- en: '`blur()`'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`blur()`'
- en: Using simple form animations
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用简单的表单动画
- en: Form animations can be used for many reasons, most notably when our user interacts
    with our form. More specifically, forms can be used when his or her cursor enters
    or leaves our form elements (text box). Animations are also great for indicating
    form validation errors. These animations will generally have slight color changes
    on the form inputs to give our user a better experience when filling out the form
    and to make the flow easier to follow.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 表单动画可以用于许多原因，最明显的是当我们的用户与我们的表单进行交互时。更具体地说，当他或她的光标进入或离开我们的表单元素（文本框）时，可以使用表单。动画也非常适合指示表单验证错误。这些动画通常会在表单输入上产生轻微的颜色变化，以使我们的用户在填写表单时获得更好的体验，并使流程更容易跟踪。
- en: Note
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: We'll be using jQuery UI again in this chapter to make up for the lack of support
    for color animation in jQuery 2.0\. Refer to [Chapter 3](ch03.html "Chapter 3. Background
    Animation"), *Background Animation*, on where to download the jQuery UI library.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将再次使用 jQuery UI 来弥补 jQuery 2.0 中对颜色动画的支持不足。请参考 [第三章](ch03.html "第三章。背景动画")，*背景动画*，以获取
    jQuery UI 库的下载位置。
- en: Time for action – creating the form
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 创建表单
- en: We will be creating an HTML form using the following steps. After we create
    our form, we'll be adding in our form validation animation.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用以下步骤创建一个 HTML 表单。创建表单后，我们将添加表单验证动画。
- en: Start by creating a new document using our template (from [Chapter 1](ch01.html
    "Chapter 1. Getting Started"), *Getting Started*) called `form-animation.html`
    and save it in our `jquery-animation` folder.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [第一章](ch01.html "第一章。入门")，*入门* 中使用我们的模板创建一个新文档，称为 `form-animation.html`，并将其保存在我们的
    `jquery-animation` 文件夹中。
- en: 'Then we''ll place the following code inside our `<body>` tag:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将以下代码放置在我们的 `<body>` 标签内：
- en: '```js'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: <form id="form1">
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <form id="form1">
- en: <input type="text" placeholder="First Name">
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <input type="text" placeholder="名字">
- en: <input type="text" placeholder="Last Name">
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <input type="text" placeholder="姓">
- en: <input type="text" placeholder="Email Address">
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <input type="text" placeholder="电子邮件地址">
- en: <input type="text" placeholder="Phone Number">
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <input type="text" placeholder="电话号码">
- en: <input type="submit" value="Submit">
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <input type="submit" value="提交">
- en: </form>
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </form>
- en: '```'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'We''ll then need to add the jQuery UI library, following our jQuery library,
    by adding the following code. (See information box mentioned previously on where
    to get the jQuery UI library):'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们需要添加 jQuery UI 库，跟在我们的 jQuery 库后面，通过添加以下代码。（有关获取 jQuery UI 库的详细信息，请参见前面提到的信息框）：
- en: '```js'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: <script src="img/jquery-ui.min.js"></script>
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <script src="img/jquery-ui.min.js"></script>
- en: '```'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'In our anonymous function, add in the following code:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们的匿名函数中，添加以下代码：
- en: '```js'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: $("input").hover(
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("input").hover(
- en: function() {
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: function() {
- en: $(this).addClass("hover", 500);
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: $(this).addClass("hover", 500);
- en: '},'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '},'
- en: function() {
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: function() {
- en: $(this).removeClass("hover", 500);
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: $(this).removeClass("hover", 500);
- en: '}'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: );
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: );
- en: $("input").focus(function() {
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("input").focus(function() {
- en: $(this).addClass("focus", 500);
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $(this).addClass("focus", 500);
- en: '});'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: $("input").blur(function() {
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("input").blur(function() {
- en: $(this).removeClass("focus", 500);
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $(this).removeClass("focus", 500);
- en: '});'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Create a new file called `form-animation.css`, save it under our `jquery-animation`
    folder, and add the following code:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`form-animation.css`的新文件，将其保存在我们的`jquery-animation`文件夹下，并添加以下代码：
- en: '```js'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: form {
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: form {
- en: float:left;
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: float:left;
- en: margin:5px;
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: margin:5px;
- en: '}'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: input {
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: input {
- en: display:block;
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: display:block;
- en: width:200px;
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: width:200px;
- en: padding:10px;
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: padding:10px;
- en: border-radius:3px;
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: border-radius:3px;
- en: background:#F5F5F5;
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: background:#F5F5F5;
- en: 'border:1px solid #D5D5D5;'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'border:1px solid #D5D5D5;'
- en: '}'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: input[type=submit] {
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: input[type=submit] {
- en: width:auto;
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: width:auto;
- en: border:0;
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: border:0;
- en: color:#FFF;
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: color:#FFF;
- en: text-transform:uppercase;
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: text-transform:uppercase;
- en: '}'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: input:focus {outline:0;}
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: input:focus {outline:0;}
- en: '#form1 input[type=submit] {'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#form1 input[type=submit] {'
- en: background:#FF6B6B;
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: background:#FF6B6B;
- en: 'border:1px solid #FF3A3A;'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'border:1px solid #FF3A3A;'
- en: '}'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: Note
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Attribute selectors (`input[type=submit]`) are a little quirky in Legacy versions
    of Internet Explorer. Make sure your selectors are supported (or polyfill them)
    before using them.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 属性选择器（`input[type=submit]`）在旧版本的Internet Explorer中有一些小问题。在使用之前，请确保您的选择器受支持（或进行多重填充）。
- en: 'Here''s a great list of HTML5 cross-browser polyfills: [https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-browser-Polyfills](https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-browser-Polyfills).'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个HTML5跨浏览器填充的很好的列表:[https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-browser-Polyfills](https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-browser-Polyfills)。
- en: 'At this point, our form should look like the following screenshot:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 到此为止，我们的表单应该看起来像下面的截图：
- en: '![Time for action – creating the form](img/9642OS_05_01.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![行动时间-创建表单](img/9642OS_05_01.jpg)'
- en: '*What just happened?*'
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚刚发生了什么?*'
- en: The first section of code we added in is the HTML skeleton structure we'll use
    for the code examples in this chapter. We used an ID on the form for general targeting
    purposes. We'll change this ID later in the chapter once we add another form.
    Obviously, these forms don't have an action as we don't need them to submit in
    order to see our animations.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们添加的第一部分代码是这一章中我们将用于代码示例的HTML骨架结构。我们在表单上使用了一个ID进行一般的定位。一旦我们添加另一个表单，我们将在本章后面更改这个ID。显然，这些表单没有动作，因为我们不需要它们提交以查看我们的动画。
- en: Secondly, we added in the jQuery UI library to support color animation and give
    us duration options for `addClass()` and `removeClass()`, and to add color animation
    as we did in the previous chapters.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，我们添加了jQuery UI库，以支持颜色动画，并为`addClass()`和`removeClass()`添加时长选项，以及在前几章中添加颜色动画。
- en: The jQuery code we added next are the handlers we need for animating the styles
    on our form by adding and removing CSS classes to our input elements. The `hover()`
    handler has a `mouseenter` and `mouseleave` event. This is helpful in keeping
    our code together in the same function. The jQuery equivalent to `onFocus` and
    `onBlur` in JavaScript is `focus()` and `blur()`. Unlike `hover()`, these handlers
    have to be separated.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们接下来添加的jQuery代码是我们在表单上需要用来通过向输入元素添加和删除CSS类来实现样式动画的处理程序。`hover()`处理程序有`mouseenter`和`mouseleave`事件。这有助于保持我们的代码在同一个函数中。JavaScript中`onFocus`和`onBlur`的jQuery等效物分别是`focus()`和`blur()`。与`hover()`不同，这些处理程序必须分开。
- en: Time for action – adding our animation styles to the form
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间-将我们的动画样式添加到表单
- en: We've added all of the code we needed for our forms; now, let's add some styles
    to our form to get the animation styles working.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经添加了所有我们需要的表单代码；现在，让我们添加一些样式到我们的表单，使动画样式生效。
- en: 'Add this code near the bottom of the stylesheet we created named `form-animation.css`
    between the styles for `input:focus` and `#form1 input[type=submit]`:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们创建的名为`form-animation.css`的样式表的底部附近添加此代码，它位于`input:focus`和`#form1 input[type=submit]`的样式之间：
- en: '```js'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: '#form1 input.hover {border:1px solid #FF7F7F;}#form1 input.focus {'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#form1 input.hover {border:1px solid #FF7F7F;}#form1 input.focus {'
- en: background:#FFD8D8;
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: background:#FFD8D8;
- en: 'border:1px solid #FF7F7F;'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'border:1px solid #FF7F7F;'
- en: '}'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: '*What just happened?*'
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚刚发生了什么?*'
- en: Now, let's preview the form with our newly added styles and take it for a spin.
    You'll notice that when you hover over each of the text inputs, that a red border
    slowly fades in and slowly fades out when we move our mouse cursor off of the
    text input. Clicking on the text inputs will now fade the background color to
    red as well. When we click away from the focused input, the red background color
    then slowly fades back to its original color.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们预览一下带有新添加样式的表单，并进行测试。您会注意到当您悬停在每个文本输入上时，红色边框会缓慢淡入，并且当我们将鼠标光标移出文本输入时，红色边框会缓慢淡出。点击文本输入现在会使背景颜色渐变为红色。当我们点击离开焦点输入时，红色背景颜色会慢慢恢复到其原始颜色。
- en: Tip
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: These animations can also be achieved using CSS3 transitions.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这些动画也可以使用 CSS3 过渡实现。
- en: The order of the CSS styles we added is very important. The first state is the
    `hover` state, so these styles go first. We want the focus class to override the
    `hover` state while it's in transition between animations, so it goes under the
    hover styles.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我们添加的 CSS 样式的顺序非常重要。第一个状态是 `hover` 状态，因此这些样式排在最前面。我们希望焦点类在动画之间的过渡期间覆盖 `hover`
    状态，因此它在 `hover` 样式下面。
- en: Lastly, the submit button's styles go on the last line because we don't want
    the styles to change when you hover over it. If you aren't familiar with this
    method of ordering styles and why it's important, read up on CSS specificity.
    Swapping the order of the styles we just added will illustrate why the order is
    important.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，提交按钮的样式放在最后一行，因为我们不希望在悬停在其上时样式发生变化。如果您对样式排序方法以及为什么重要不熟悉，请阅读 CSS 特异性。交换我们刚刚添加的样式的顺序将说明为什么顺序很重要。
- en: Form validation animations
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 表单验证动画
- en: Validating our user's form submission is a great way to ensure we get back the
    correct information from our users. To enhance the usability of our form, we're
    going to cover a few animation methods that deal with form validation. We're going
    to start with basic form validation and build from there.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 验证用户表单提交是确保我们从用户那里获得正确信息的好方法。为了增强表单的可用性，我们将介绍一些处理表单验证的动画方法。我们将从基本的表单验证开始，并从那里构建。
- en: Time for action – basic dialog form validation
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 基本对话框表单验证
- en: We're going to create form validation through the use of an alert to tell the
    user what's wrong with the form's submission.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过使用警报来创建表单验证，告诉用户表单提交出了什么问题。
- en: 'First off, we''ll need to place the following code inside our anonymous function
    after our previously added code:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要将以下代码放在我们先前添加的代码之后的匿名函数中：
- en: '```js'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: $("#form1 input[type=submit]").click(function(e) {
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("#form1 input[type=submit]").click(function(e) {
- en: e.preventDefault();
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: e.preventDefault();
- en: var msg_error = "";
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: var msg_error = "";
- en: $("#form1 input[type=text]").each(function() {
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("#form1 input[type=text]").each(function() {
- en: if ($(this).val() == "") {
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: if ($(this).val() == "") {
- en: msg_error += $(this).attr("placeholder") +
  id: totrans-110
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: msg_error += $(this).attr("placeholder") +
- en: '"can''t be left blank.\n";'
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"不能为空。\n";'
- en: '}'
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '});'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: if (msg_error) {
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: if (msg_error) {
- en: alert(msg_error);
  id: totrans-115
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: alert(msg_error);
- en: '} else {'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '} else {'
- en: alert("Form submitted successfully!");
  id: totrans-117
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: alert("表单提交成功！");
- en: '}'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '});'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: '*What just happened?*'
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We used the `click()` handler on our submit button to trigger our form validation
    checking. For the sake of this example, we used `preventDefault()` so that when
    we click on our submit button, the URL hash doesn't change. Make sure to remove
    this line when you launch this code into the wilds of the Internet.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在提交按钮上使用了 `click()` 处理程序来触发表单验证检查。为了本示例的缘故，我们使用了 `preventDefault()`，这样当我们点击提交按钮时，URL
    散列不会更改。确保在将此代码发布到互联网的野外时删除此行。
- en: The `each()` method is used to target all of the form inputs in our form. An
    if statement is used to narrow it down to all inputs (by using `$(this)` since
    we're already in the `each()` method), whose value is blank. Each time our `if`
    statement returns true, we're going to add to the variable `msg_error`. We used
    the blank input's placeholder value we set previously as the first part of our
    error message. We added on `can't be left blank` for the rest of the validation
    error message and end it with a new line (`\n`), so that all of the error messages
    aren't on the same line in the dialog window.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '`each()` 方法用于定位表单中的所有输入项。使用 if 语句将其缩小到所有值为空的输入项（通过使用 `$(this)`，因为我们已经在 `each()`
    方法中）。每当我们的 `if` 语句返回 true 时，我们将添加到变量 `msg_error`。我们使用之前设置的空输入的占位符值作为错误消息的第一部分。我们添加了
    `can''t be left blank` 作为验证错误消息的其余部分，并以新行（`\n`）结束，以使所有错误消息不在对话框窗口的同一行上。'
- en: Lastly, we need to make sure if there is even an error message to display, so
    we check if our `msg_error` variable returns `true`. If it is, we'll use `alert()`
    with our variable `msg_error` inside to throw the dialog window. Otherwise, we'll
    use `alert()` to let the user know the form was successfully submitted.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们需要确保是否有错误消息要显示，所以我们检查我们的`msg_error`变量返回`true`。如果是，我们将使用`alert()`内的变量`msg_error`引发对话窗口。否则，我们将使用`alert()`告知用户表单已成功提交。
- en: Have a go hero – extending our form validation
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 尝试一下英雄 - 扩展我们的表单验证
- en: 'For this example, we used very basic form validation to make sure that none
    of our input fields were left blank. Have a go at extending the script to check
    different types of values. Some examples of these validation types are:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们使用了非常基本的表单验证，以确保我们的输入字段都没有留空。尝试扩展脚本以检查不同类型的值。其中一些验证类型的例子是：
- en: Contains only numbers
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅包含数字
- en: Contains only letters
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅包含字母
- en: Contains a certain amount of characters
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含一定数量的字符
- en: 'Contains only letters and is within a certain range (example: 1-100)'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅包含字母并在一定范围内（例如：1-100）
- en: Date is in the future
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日期在未来
- en: Time for action – animating form validation errors
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 动画展示表单验证错误
- en: Now, instead of giving our users a dialog box of all of the validation errors,
    we're going to visually point out the form field errors that need to be fixed.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们不再给用户一个包含所有验证错误的对话框，而是会直观地指出需要修复的表单字段错误。
- en: 'We''ll start by adding a new form to our page. Add the following code right
    after our first `<form>` (new code is highlighted):'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将通过在我们的页面上添加一个新的表单来开始。在我们第一个`<form>`之后添加以下代码（新代码已突出显示）：
- en: '```js'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: <form id="form2">
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <form id="form2">
- en: <input type="text" placeholder="First Name">
  id: totrans-137
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <input type="text" placeholder="名">
- en: <input type="text" placeholder="Last Name">
  id: totrans-138
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <input type="text" placeholder="姓">
- en: <input type="text" placeholder="Email Address">
  id: totrans-139
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <input type="text" placeholder="电子邮箱地址">
- en: <input type="text" placeholder="Phone Number">
  id: totrans-140
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <input type="text" placeholder="电话号码">
- en: <input type="submit" value="Submit">
  id: totrans-141
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <input type="submit" value="提交">
- en: </form>
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </form>
- en: '```'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Next, we''ll add in our new form styles by placing the following code at the
    bottom of our stylesheet:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将通过将以下代码放置在样式表的底部来添加新的表单样式：
- en: '```js'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: '#form2 input.hover {border:1px solid #7FA1D1;}'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#form2 input.hover {border:1px solid #7FA1D1;}'
- en: '#form2 input.focus {'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#form2 input.focus {'
- en: background:#E6F0FF;
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: background:#E6F0FF;
- en: 'border:1px solid #7FA1D1;'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'border:1px solid #7FA1D1;'
- en: '}'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '#form2 input[type=submit] {'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#form2 input[type=submit] {'
- en: background:#8FACD7;
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: background:#8FACD7;
- en: 'border:1px solid #638CC7;'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'border:1px solid #638CC7;'
- en: '}'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '#form2 input.error {border:1px dashed #F00;}'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#form2 input.error {border:1px dashed #F00;}'
- en: '```'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: 'Let''s then add in the code that''ll be used to check our form for proper validation:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，让我们加入检查表单的代码：
- en: '```js'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```js'
- en: $("#form2 input[type=submit]").click(function(e) {
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("#form2 input[type=submit]").click(function(e) {
- en: e.preventDefault();
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: e.preventDefault();
- en: $("#form2 input[type=text]").each(function() {
  id: totrans-161
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: $("#form2 input[type=text]").each(function() {
- en: if ($(this).val() == "") {
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: if ($(this).val() == "") {
- en: $(this).addClass("error");
  id: totrans-163
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: $(this).addClass("error");
- en: '} else {'
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '} else {'
- en: $(this).removeClass("error");
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: $(this).removeClass("error");
- en: '}'
  id: totrans-166
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '});'
  id: totrans-167
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '});'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '});'
- en: '```'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '```'
- en: '*What just happened?*'
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚发生了什么？*'
- en: We used the same code as the previous example, but instead of triggering a dialog
    box with all of the input validation errors, we changed the border color to a
    dashed red border for each of the text inputs that require some attention before
    they can be passed through the form. Our old friends `addClass()` and `removeClass()`
    were used to style the inputs that had errors by adding or removing the class
    `"error"`.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用与上一个示例相同的代码，但不再触发具有所有输入验证错误的对话框，而是为每个需要在表单中通过之前需要注意的文本输入更改了虚线红色边框。我们使用了我们的老朋友`addClass()`和`removeClass()`来通过添加或删除类`"error"`来为具有错误的输入添加样式。
- en: Have a go hero – putting it all together
  id: totrans-172
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 尝试一下英雄 - 把所有东西放在一起
- en: 'Now have a go at putting together all of the form validation animation types
    we just learned. Also, try extending the styles a bit more. Here are some ideas
    for extending the styles and animations:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，尝试将我们刚学到的所有表单验证动画类型组合在一起。还要尝试更多地扩展样式。以下是扩展样式和动画的一些想法：
- en: Display an error message on the side of the form field as to what the validation
    error is.
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在表单字段的侧面显示一个错误消息，说明验证错误是什么。
- en: Display a background image inside the form field to signify a problem with the
    submission.
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在表单字段内显示背景图像，表示提交存在问题。
- en: Automatically set the cursor focus to the first form field that has a validation
    error.
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动将光标焦点设置到第一个具有验证错误的表单字段。
- en: If your form has labels (as opposed to placeholders), change the color of the
    respective label.
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您的表单有标签（而不是占位符），请更改相应标签的颜色。
- en: Make the form fields that have validation errors pulsate to continuously signify
    an error (using border colors and/or background colors).
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使具有验证错误的表单字段脉动，以持续表示错误（使用边框颜色和/或背景颜色）。
- en: 'Try playing with some jQuery UI animation effects on your own and come up with
    some swanky animations. We''ll learn more about all of the great things jQuery
    UI can do in [Chapter 6](ch06.html "Chapter 6. Extended Animations with jQuery
    UI"), *Extending Animations with jQuery UI*, but here''s one jQuery UI animation
    to get your feet wet:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试自己玩一些jQuery UI动画效果，并想出一些时髦的动画。我们将在[第六章](ch06.html "第六章。使用jQuery UI扩展动画")中了解更多关于jQuery
    UI的优秀功能，但这里有一个jQuery UI动画让您开个头：
- en: '```js'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '```js'
- en: $("form").effect("bounce", { direction:"left", easing:"linear" }, 500);
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: $("form").effect("bounce", { direction:"left", easing:"linear" }, 500);
- en: '```'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Pop quiz – form animation and jQuery UI
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 快速测验 - 表单动画和jQuery UI
- en: Q1\. When is it acceptable to use form animation?
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: Q1\. 何时可以使用表单动画？
- en: When we want to direct our user's attention to a specific area of the form
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们想引导用户注意表单的特定区域时
- en: When our user interacts with our form
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当用户与我们的表单交互时
- en: To enhance the user's experience of our form
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以增强用户对我们表单的体验
- en: All of the above
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以上所有
- en: Q2\. Why did we add in jQuery UI in our examples in this chapter?
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: Q2\. 为什么我们在本章的示例中添加了jQuery UI？
- en: To give us the ability to use animation effects not native to jQuery
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给予我们使用非jQuery原生动画效果的能力
- en: To add the `duration` option to `addClass()` and `removeClass()` and give us
    the ability to animate color
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要向`addClass()`和 `removeClass()` 添加`duration`选项，并给我们以动画颜色的能力
- en: To allow us to use smooth scrolling options for `scrollTop()`
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 允许我们使用`scrollTop()`的平滑滚动选项
- en: To make `preventDefault()` work properly for our examples
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了让`preventDefault()`在我们的示例中正常工作
- en: Summary
  id: totrans-194
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter we learned how to visually change the form's appearance based
    on the interaction with the form. To take this a step further, you can create
    custom animations using other CSS styles, altering the element using jQuery or
    by using jQuery UI effects. Just remember — don't make the animations too sudden
    or abrupt. Form animations are generally used to help a user through the flow
    of filling out the form. Make sure to walk through each form step and animation
    as if you are a user who is filling out the form for the very first time.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何根据与表单交互的情况来直观改变表单的外观。为了更进一步，您可以使用其他CSS样式创建自定义动画，通过jQuery改变元素或使用jQuery
    UI效果。只需记住 - 不要使动画太突然或突然。表单动画通常用于帮助用户填写表单的流程。确保逐步走过每个表单步骤和动画，就像您是第一次填写该表单的用户一样。
- en: In the next chapter, we're going to be looking at the great animation effects
    that can be added by using jQuery UI on top of the jQuery library. jQuery UI is
    great because not only does it add new animation effects, but it adds in additional
    options for native jQuery methods.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将研究使用jQuery UI在jQuery库之上添加的出色动画效果。jQuery UI很棒，因为它不仅添加了新的动画效果，还为原生jQuery方法添加了额外选项。
