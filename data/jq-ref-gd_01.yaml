- en: Chapter 1. Anatomy of a jQuery Script
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 1 章. jQuery 脚本的结构
- en: He's got a brand new start
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 他有一个崭新的开始
- en: ''
  id: totrans-2
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Now he's a happy guy
  id: totrans-3
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 现在他是一个快乐的人
- en: ''
  id: totrans-4
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: —Devo,
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: —Devo，
- en: ''
  id: totrans-6
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '"Happy Guy"'
  id: totrans-7
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '"快乐的人"'
- en: A typical jQuery script uses a wide assortment of the methods that the library
    offers. Selectors, DOM manipulation, event handling, and so forth come into play
    as required by the task at hand. In order to make the best use of jQuery, we need
    to keep in mind the wide range of capabilities it provides.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 典型的 jQuery 脚本使用库提供的各种方法。选择器，DOM 操作，事件处理等根据手头任务的需要而使用。为了最大程度地利用 jQuery，我们需要牢记它提供的广泛功能范围。
- en: This book will itemize every method and function found in the jQuery library.
    Since there are many methods and functions to sort through, it will be useful
    to know what the basic categories of methods are, and how they come into play
    within a jQuery script. Here we will see a fully functioning script, and examine
    how the different aspects of jQuery are utilized in each part of the script.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将列举 jQuery 库中的每种方法和函数。由于有许多方法和函数需要整理，因此了解方法的基本类别以及它们在 jQuery 脚本中的作用方式将非常有用。在这里，我们将看到一个完全可用的脚本，并查看
    jQuery 的不同方面在脚本的每个部分中如何被利用。
- en: A Dynamic Table of Contents
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个动态目录
- en: As an example of jQuery in action, we'll build a small script that will dynamically
    extract the headings from an HTML document and assemble them into a table of contents
    for that page.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 作为 jQuery 实践的例子，我们将构建一个小脚本，动态提取 HTML 文档中的标题，并将它们组装成该页面的目录。
- en: 'Our table of contents will be nestled on the top right corner of the page:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的目录将位于页面的右上角：
- en: '![A Dynamic Table of Contents](img/3810_01_01.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![一个动态目录](img/3810_01_01.jpg)'
- en: 'We''ll have it collapsed initially as shown above, but a click will expand
    it to full height:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将其最初折叠如上所示，但点击将其展开至全高度：
- en: '![A Dynamic Table of Contents](img/3810_01_02.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![一个动态目录](img/3810_01_02.jpg)'
- en: 'At the same time, we''ll add a feature to the main body text. The introduction
    of the text on the page will not be initially loaded, but when the user clicks
    on the word **Introduction**, the introductory text will be inserted in place
    from another file:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，我们将为主体文本添加一个功能。页面上文本的介绍不会最初加载，但当用户点击**介绍**一词时，将从另一个文件中插入介绍文本：
- en: '![A Dynamic Table of Contents](img/3810_01_03.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![一个动态目录](img/3810_01_03.jpg)'
- en: Before we reveal the script that performs these tasks, we should walk through
    the environment in which the script resides.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们揭示执行这些任务的脚本之前，我们应该先了解脚本所在的环境。
- en: Obtaining jQuery
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 获取 jQuery
- en: The official jQuery website ([http://jquery.com/](http://jquery.com/)) is always
    the most up-to-date resource for code and news related to the library. To get
    started, we need a copy of jQuery, which can be downloaded right from the home
    page of the site. Several versions of jQuery may be available at any given moment;
    the latest uncompressed version will be most appropriate for us.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 官方的 jQuery 网站 ([http://jquery.com/](http://jquery.com/)) 总是与该库相关的代码和新闻的最新资源。要开始，我们需要一份
    jQuery 的副本，可以直接从网站的主页下载。在任何时候可能有几个版本的 jQuery 可用；最新的未压缩版本最适合我们。
- en: No installation is required for jQuery. To use jQuery, we just need to place
    it on our site in a public location. Since JavaScript is an interpreted language,
    there is no compilation or build phase to worry about. Whenever we need a page
    to have jQuery available, we will simply refer to the file's location from the
    HTML document.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery 不需要安装。要使用 jQuery，我们只需将其放置在网站的公共位置即可。由于 JavaScript 是一种解释性语言，所以不需要担心编译或构建阶段。每当我们需要一个页面具有
    jQuery 时，我们只需在 HTML 文档中引用文件的位置即可。
- en: Setting Up the HTML Document
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 HTML 文档
- en: 'There are three sections to most examples of jQuery usage— the HTML document
    itself, CSS files to style it, and JavaScript files to act on it. For this example,
    we''ll use a page containing the text of a book:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数 jQuery 使用示例分为三个部分— HTML 文档本身，用于样式的 CSS 文件，以及用于对其进行操作的 JavaScript 文件。在本例中，我们将使用包含书籍文本的页面：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The actual layout of files on the server does not matter. References from one
    file to another just need to be adjusted to match the organization we choose.
    In most examples in this book, we will use relative paths to reference files (`../images/foo.png`)
    rather than absolute paths (`/images/foo.png`). This will allow the code to run
    locally without the need for a web server.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器上文件的实际布局并不重要。从一个文件到另一个文件的引用只需要调整以匹配我们选择的组织结构即可。在本书的大多数示例中，我们将使用相对路径来引用文件（`../images/foo.png`），而不是绝对路径（`/images/foo.png`）。这样可以使代码在本地运行而无需web服务器。
- en: 'The stylesheet is loaded immediately after the standard `<head>` elements.
    Here are the portions of the stylesheet that affect our dynamic elements:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 样式表立即在标准的`<head>`元素之后加载。以下是影响我们动态元素的样式表部分：
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: After the stylesheet is referenced, the JavaScript files are included. It is
    important that the script tag for the jQuery library be placed *before* the tag
    for our custom scripts; otherwise, the jQuery framework will not be available
    when our code attempts to reference it.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 样式表被引用后，JavaScript文件被包含。重要的是，jQuery库的脚本标签必须在我们自定义脚本的标签之前放置*之前*；否则，当我们的代码尝试引用它时，jQuery框架将不可用。
- en: Writing the jQuery Code
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编写jQuery代码
- en: 'Our custom code will go in the second, currently empty, JavaScript file which
    we included from the HTML using `<script src="img/dolittle.js" type="text/javascript"></script>`.
    Despite how much it accomplishes, the script is fairly short:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的自定义代码将放在第二个当前为空的JavaScript文件中，我们将其包含在HTML中使用 `<script src="img/dolittle.js"
    type="text/javascript"></script>`。尽管它能够完成很多工作，但脚本相当简短：
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We now have a dynamic table of contents that brings users to the relevant portion
    of the text, and an introduction that is loaded on demand.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了一个动态的目录，可以将用户带到文本的相关部分，并且可以按需加载介绍部分。
- en: Script Dissection
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 脚本解剖
- en: This script has been chosen specifically because it illustrates the widespread
    capabilities of the jQuery library. Now that we've seen the code as a whole, we
    can identify the categories of methods used therein.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 选择此脚本是因为它展示了jQuery库的广泛功能。现在我们已经将代码作为一个整体看过了，我们可以确定其中使用的方法类别。
- en: Note
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'We will not discuss the operation of this script in much detail here, but a
    similar script is presented as a tutorial on the Learning jQuery web log: [http://www.learningjquery.com/2007/06/
    automatic-page-contents](http://www.learningjquery.com/2007/06/).'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不会在这里详细讨论此脚本的操作，但是类似的脚本作为Learning jQuery网志上的教程呈现：[http://www.learningjquery.com/2007/06/
    automatic-page-contents](http://www.learningjquery.com/2007/06/)。
- en: Selector Expressions
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择器表达式
- en: 'Before we can act on an HTML document, we need to locate the relevant portions.
    In our script, we sometimes use a simple approach to finding an element:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们可以对HTML文档进行操作之前，我们需要找到相关部分。在我们的脚本中，有时我们会使用一种简单的方法来查找元素：
- en: '[PRE3]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This expression creates a new jQuery object that references the element with
    the ID `introduction`. On the other hand, sometimes we require a more intricate
    selector:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 此表达式创建一个新的jQuery对象，该对象引用具有`introduction` ID的元素。另一方面，有时我们需要一个更复杂的选择器：
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Here we produce a jQuery object potentially referring to many elements. Elements
    are included if they are anchor tags, but only if they are descendants of `<h2>`
    elements that are themselves children of an element with the ID `introduction`.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们产生了一个可能引用许多元素的jQuery对象。如果它们是锚点标签，则包括这些元素，但仅在它们是`introduction` ID元素的子元素的`<h2>`元素的后代时。
- en: These **selector expressions** can be as simple or complex as we need. [Chapter
    2](ch02.html "Chapter 2. Selector Expressions") will enumerate all of the selectors
    available to us and how they can be combined.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这些**选择器表达式**可以简单也可以复杂，取决于我们的需要。[第二章](ch02.html "第二章。选择器表达式") 将列举我们可用的所有选择器以及它们如何组合使用。
- en: DOM Traversal Methods
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DOM遍历方法
- en: 'Sometimes we have a jQuery object that already references a set of DOM elements,
    but we need to perform an action on a different, related set of elements. In these
    cases, **DOM traversal** methods are useful. We can see this in part of our script:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 有时我们有一个jQuery对象，它已经引用了一组DOM元素，但我们需要对一个不同的相关元素执行操作。在这些情况下，**DOM遍历**方法很有用。我们可以在我们的脚本的一部分中看到这一点：
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Because of the context of this piece of code, the keyword `this` refers to a
    jQuery object (it often refers instead to a DOM element). In our case, this jQuery
    object is in turn pointing to the `<h3>` heading of the table of contents. The
    `.toggleClass` method call manipulates this heading element. The subsequent `.next()`
    operation changes the element we are working with, though, so that the following
    `.slideToggle` method call acts on the `<div>` containing the table of contents
    rather than its header. The methods that allow us to freely move about the DOM
    tree like this are listed in [Chapter 3](ch03.html "Chapter 3. DOM Traversal Methods").
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 由于代码片段的上下文，关键字`this`指的是一个 jQuery 对象（通常指的是 DOM 元素）。在我们的情况下，这个 jQuery 对象又指向目录的`<h3>`标题。`.toggleClass`方法调用操纵了这个标题元素。随后的`.next()`操作改变了我们正在处理的元素，因此接下来的`.slideToggle`方法调用作用于包含目录的`<div>`而不是其标题。允许我们自由移动
    DOM 树的方法在[第3章](ch03.html "第3章。DOM 遍历方法")中列出。
- en: DOM Manipulation Methods
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DOM 操作方法
- en: 'Finding elements is not enough; we want to be able to change them as well.
    Such changes can be as straightforward as changing a single attribute:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 找到元素还不够；我们还希望能够修改它们。这些变化可以像更改单个属性一样简单：
- en: '[PRE6]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Here we modify the ID of the matched element on the fly.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们即时修改了匹配元素的 ID。
- en: 'Sometimes the changes are further-reaching, on the other hand:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，这些变化影响更深远：
- en: '[PRE7]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This part of the script illustrates that the **DOM manipulation** methods can
    not only alter elements in place, but also remove, shuffle, and insert them. These
    lines add a new heading at the beginning of `<div id="page-contents">`, insert
    another `<div>` container at the end of it, and place the whole thing at the beginning
    of the document body. [Chapter 4](ch04.html "Chapter 4. DOM Manipulation Methods")
    will detail these and many more ways to modify the DOM tree.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本的这一部分说明了**DOM 操作**方法不仅可以就地更改元素，还可以删除、重排和插入它们。这些代码在`<div id="page-contents">`的开头添加了一个新的标题，将另一个`<div>`容器插入到其末尾，并将整个内容放在文档主体的开头。[第4章](ch04.html
    "第4章。DOM 操作方法")将详细介绍这些以及修改 DOM 树的许多其他方法。
- en: Event Methods
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 事件方法
- en: 'Even when we can modify the page at will, our pages will sit in place, unresponsive.
    We need **event methods** to react to user input, making our changes at the appropriate
    time:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 即使我们可以随意修改页面，我们的页面仍然会静止不动，不响应。我们需要**事件方法**来对用户输入做出反应，以在适当的时候进行更改：
- en: '[PRE8]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: In this snippet we register a handler that will execute each time the selected
    anchor tag is clicked. The click event is one of the most common ones observed,
    but there are many others; the jQuery methods that interact with them are discussed
    in [Chapter 5](ch05.html "Chapter 5. Event Methods").
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个片段中，我们注册了一个处理程序，每次选择的锚点标签被点击时都会执行。点击事件是最常见的事件之一，但还有许多其他事件；与它们交互的 jQuery 方法在[第5章](ch05.html
    "第5章。事件方法")中讨论。
- en: '[Chapter 5](ch05.html "Chapter 5. Event Methods") also discusses a very special
    event method, `.ready`:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '[第5章](ch05.html "第5章。事件方法")还讨论了一个非常特殊的事件方法`.ready`：'
- en: '[PRE9]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This method allows us to register behavior that will occur immediately when
    the structure of the DOM is available to our code—even before the images have
    loaded.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这个方法允许我们注册行为，当 DOM 结构可用于我们的代码时立即发生——甚至在图片加载之前。
- en: Effect Methods
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 效果方法
- en: 'The event methods allow us to react to user input; the **effect methods** let
    us do this with style. Instead of immediately hiding and showing elements, we
    can do so with an animation:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 事件方法使我们能够对用户输入做出反应；**效果方法**让我们以一种有型的方式做到这一点。我们可以通过动画来隐藏和显示元素，而不是立即执行：
- en: '[PRE10]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This method performs a fast sliding transition on the element, alternately hiding
    and showing it with each invocation. The built-in effect methods are listed in
    [Chapter 6](ch06.html "Chapter 6. Effect Methods"), as is the way to create new
    ones.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这个方法在元素上执行快速的滑动过渡，每次调用时交替隐藏和显示它。内置效果方法在[第6章](ch06.html "第6章。效果方法")中列出，创建新效果方法的方法也在其中。
- en: AJAX Methods
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AJAX 方法
- en: 'Many modern websites employ techniques to load content when requested without
    a page refresh; jQuery allows us to accomplish this with ease. The **AJAX Methods**
    initiate these content requests and allow us to monitor their progress:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 许多现代网站采用技术在请求时加载内容，而不需要刷新页面；jQuery 可以轻松实现这一点。**AJAX 方法**启动这些内容请求，并允许我们监视其进度：
- en: '[PRE11]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Here the `.load` method allows us to get another HTML document from the server
    and insert it in the current document, all with one line of code. This and more
    sophisticated mechanisms of retrieving information from the server are listed
    in [Chapter 7](ch07.html "Chapter 7. AJAX Methods").
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的`.load`方法允许我们从服务器获取另一个HTML文档，并将其插入到当前文档中，所有这些都可以通过一行代码完成。从服务器检索信息的更复杂机制以及其他信息列在[第7章](ch07.html
    "第7章。AJAX方法")中。
- en: Miscellaneous Methods
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他方法
- en: Some methods are harder to classify than others. The jQuery library incorporates
    several **miscellaneous methods** that serve as shorthand for common JavaScript
    idioms.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 有些方法比其他方法更难分类。jQuery库包含几种作为常见JavaScript习语的简写的**其他方法**。
- en: 'Even basic tasks like iteration are simplified by jQuery:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 即使是基本的迭代任务，通过jQuery也可以简化：
- en: '[PRE12]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The `.each` method seen here steps through the matched elements in turn, performing
    the enclosed code on all of matched elements. In this case, the method helps us
    to collect all of the headings on the page so that we can assemble a complete
    table of contents. More helper functions such as this can be found in [Chapter
    8](ch08.html "Chapter 8. Miscellaneous Methods").
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里看到的`.each`方法逐个遍历匹配的元素，对所有匹配的元素执行封闭的代码。在本例中，该方法帮助我们收集页面中的所有标题，以便我们可以编写完整的目录。类似的帮助函数可以在[第8章](ch08.html
    "第8章。其他方法")中找到。
- en: Plug-In API
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 插件API
- en: 'We need not confine ourselves to built-in functionality either. The **plug-in
    API** that is part of jQuery allows us to augment the capabilities already present
    with new ones that suit our needs. Even in the small script we''ve written here,
    we''ve found the use for a plug‑in:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不需要限制自己在内置功能中。jQuery中的**插件API**允许我们扩展已存在的功能，增加符合我们需求的新功能。即使在我们编写的小脚本中，我们也发现了插件的用处：
- en: '[PRE13]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'This code defines a new `.toggleNext` jQuery method that slides the following
    element open and shut. We can now call our new method later when needed:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码定义了一个新的`.toggleNext` jQuery方法，可以展开或关闭后续元素。我们可以在需要时随时调用我们的新方法：
- en: '[PRE14]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Whenever code could be reused outside the current script, it might do well as
    a plug‑in. [Chapter 9](ch09.html "Chapter 9. Plug-In API") will cover the plug-in
    API used to build these extensions.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 每当代码可以在当前脚本之外重复使用时，将其作为插件会更好。[第9章](ch09.html "第9章。插件API")将介绍用于构建这些扩展的插件API。
- en: Summary
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We've now seen a complete, functional jQuery-powered script. This example, though
    small, brings a significant amount of interactivity and usability to the page.
    The script has illustrated the major types of tools offered by jQuery, as well.
    We've observed how the script finds items in the DOM and changes them as necessary.
    We've witnessed response to user action, and animation to give feedback to the
    user after the action. We've even seen how to pull information from the server
    without a page refresh, and how to teach jQuery brand new tricks in the form of
    plug-ins.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经看到了一个完整的、功能的jQuery脚本。尽管这个示例很小，但它为页面带来了相当多的交互性和可用性。这个脚本展示了jQuery提供的主要工具类型。我们观察了脚本如何在DOM中查找项目并根据需要更改它们。我们见证了对用户操作的响应以及为用户在操作后提供反馈的动画。我们甚至看到了如何在不刷新页面的情况下从服务器获取信息，以及如何教会jQuery通过插件学习全新的技巧。
- en: We'll be stepping through each function, method, and selector expression in
    the jQuery library now, chapter by chapter. In illustrating many of them, a customized
    logging function will aid our examples. This `.log` method prints text to the
    screen in a useful context; we'll dissect it as an example of a plug-in at the
    end of [Chapter 9](ch09.html "Chapter 9. Plug-In API").
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将逐章逐节地讲解jQuery库中的每个函数、方法和选择器表达式。在许多情况下，一个自定义日志函数将有助于我们的示例。这个`.log`方法将文本打印到屏幕上，以便我们理解；在[第9章](ch09.html
    "第9章。插件API")的最后，我们将解析它作为插件的示例。
- en: Each method will be introduced with a summary of its syntax and a list of its
    parameters and return value. Then we will offer a discussion, which will provide
    examples where applicable. For further reading about any method, consult the online
    resources listed in [Appendix A](apa.html "Appendix A. Online Resources").
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 每个方法都将以其语法摘要、参数列表和返回值列表的总结介绍。然后我们将提供讨论，提供适用的示例。有关任何方法的更多信息，请参考[附录A](apa.html
    "附录A。在线资源")中列出的在线资源。
