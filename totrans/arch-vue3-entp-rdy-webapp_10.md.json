["```js\nnpm install -D vitest happy-dom @testing-library/vue\n```", "```js\nimport { defineConfig } from 'vite';\nimport vue from '@vitejs/plugin-vue';\n// https://vitejs.dev/config/\nexport default defineConfig({\n plugins: [vue()],\n test: {\n   environment: 'happy-dom',\n   globals: true,\n },\n});\n```", "```js\nimport { render } from '@testing-library/vue';\nimport Button from '../../components/atoms/Button.vue';\ntest('mounted a button with custom label', async () => {\n // The render method returns a collection of utilities to\n // query your component.\n const { getByText } = render(Button, {\n   props: {\n     label: 'Test',\n   },\n });\n // getByText returns the first matching node for the\n // provided text, and  if button is rendered with Label from\n // props\n const button = getByText('Test');\n});\n```", "```js\n```", "```js\n```", "```js\n    import { fireEvent, render } from \"@testing-library/vue\";\n    import { describe, expect, it } from \"vitest\";\n    import HomeOverview from \"../../components/templates/HomeOverview.vue\";\n    describe(\"HomeOverview.vue\", () => {\n     it(\"renders component\", async () => {\n       const { getByText } = render(HomeOverview);\n       getByText(\"Home\");\n     });\n     it(\"creates pin on button click\", async () => {\n       const { getByTestId, emitted } =\n         render(HomeOverview);\n          await fireEvent.click(getByTestId(\"create\"));\n          // Fireevent is from \"@testing-library/vue\" for\n          // calling different events such as click\n       expect(emitted()).toHaveProperty(\"click\");\n     });\n     it(\"dismisses notification\", async () => {\n       const { getByTestId, emitted } =\n         render(HomeOverview);\n       await fireEvent.click(getByTestId(\"dismissed\"));\n       expect(emitted()).toHaveProperty(\"click\");\n     });\n     it(\"displays first 14 pins\", async () => {\n       const { getAllByText } = render(HomeOverview);\n       const card = getAllByText(\"Quick save and organize\n                                  later\");\n       expect(card.length).toBe(14);\n     });\n     it(\"renders Search component\", async () => {\n       const { getByTestId } = render(HomeOverview);\n       getByTestId(\"search\");\n     });\n    });\n    ```", "```js\n    it(\"renders component\", async () => {\n       const { getByText } = render(HomeOverview);\n       getByText(\"Home\");\n     });\n    ```", "```js\n     it(\"creates pin on button click\", async () => {\n       const { getByTestId, emitted } =\n         render(HomeOverview);\n       await fireEvent.click(getByTestId(\"create\"));\n       expect(emitted()).toHaveProperty(\"click\");\n     });\n    ```", "```js\n    it(\"dismisses notification\", async () => {\n       const { getByTestId, emitted } =\n         render(HomeOverview);\n       await fireEvent.click(getByTestId(\"dismissed\"));\n       expect(emitted()).toHaveProperty(\"click\");\n     });\n    ```", "```js\n    it(\"displays first 14 pins\", async () => {\n       const { getAllByText } = render(HomeOverview);\n       const card = getAllByText(\"Quick save and organize\n                                  later\");\n       expect(card.length).toBe(14);\n     });\n    ```", "```js\n    it(\"renders Search component\", async () => {\n       const { getByTestId } = render(HomeOverview);\n       getByTestId(\"search\");\n     });\n    ```", "```js\n    ```", "```js\n    ```"]