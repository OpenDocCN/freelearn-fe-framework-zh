- en: Chapter 9. Creating Slideshows
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 9 章。创建幻灯片
- en: Traditionally created in Flash, slideshows are a great way to show off photos,
    products, illustrations, portfolios, and more. Hands-down, creating slideshows
    is one of the most common tasks for jQuery developers. In this chapter we'll take
    a look at how to create a simple slideshow from scratch, and then we'll explore
    three powerful plugins that create gorgeous, dynamic, and full-featured slideshows.
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 幻灯片通常是在 Flash 中创建的，是展示照片、产品、插图、作品集等的绝佳方式。创建幻灯片是 jQuery 开发人员最常见的任务之一。在本章中，我们将看看如何从头开始创建一个简单的幻灯片，然后探讨三个创建华丽、动态且功能齐全的幻灯片的强大插件。
- en: 'In this chapter, we''ll cover the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下内容：
- en: How to plan a slideshow
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何规划幻灯片
- en: How to write a simple crossfading slideshow from scratch
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何从头开始编写一个简单的淡入淡出幻灯片
- en: How to use the CrossSlide plugin to create a panning and zooming slideshow
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用 CrossSlide 插件创建平移和缩放幻灯片
- en: How to use the Nivo Slider plugin to create a slideshow with fun transition
    effects
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用 Nivo Slider 插件创建具有有趣过渡效果的幻灯片
- en: How to use the Galleriffic plugin to create a thumbnail slideshow
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用 Galleriffic 插件创建缩略图幻灯片
- en: Planning a slideshow
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 规划幻灯片
- en: 'There are a few things to consider when you''re preparing to build a jQuery
    slideshow. They are as follows:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在准备构建 jQuery 幻灯片时，有几个要考虑的事项。它们如下：
- en: First, you have to decide what will be the experience for users who have JavaScript
    disabled. The priority of the various pieces of content in the slideshow should
    be your guide. If the slideshow is simply featuring bits of content available
    elsewhere on the site, then it should be sufficient to simply show one photo or
    slide. If the slideshow is the only way to access the content, then you'll have
    to be sure to make that content available for users without JavaScript enabled.
    We'll take a look at both strategies in the various examples in this chapter.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，您必须决定对于禁用 JavaScript 的用户来说，体验会是什么样的。幻灯片中各个内容片段的优先级应该成为您的指南。如果幻灯片只是展示网站其他地方可用的内容片段，那么只需展示一张照片或幻灯片就足够了。如果幻灯片是访问内容的唯一方式，那么您必须确保将内容提供给未启用
    JavaScript 的用户。在本章的各个示例中，我们将看看这两种策略。
- en: Second, you have to determine if all items in your slideshow will be of the
    same size or of different sizes. For obvious reasons, it's easiest to handle items
    that are all the same size and aspect ratio, but sometimes, it's impractical or
    impossible to identically size all items. I'll cover which slideshows are ideal
    for same-sized content and which are ideal for variable-sized content as we go
    along.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其次，您必须确定幻灯片中的所有项目是否大小相同还是大小不同。出于显而易见的原因，处理所有大小和宽高比相同的项目是最容易的，但有时对所有项目设置相同大小是不切实际或不可能的。随着我们的讨论，我将介绍哪些幻灯片适合相同大小的内容，哪些适合不同大小的内容。
- en: Next, you need to consider if your site visitors need to have any kind of control
    over the slideshow. Sometimes, it's handy to simply have your images on automatic
    rotation. Other times, it's helpful to allow site visitors to pause the slideshow,
    or manually move forward and backward through the slides. I'll tell you how much
    control each of these slideshow approaches offers your site visitors.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接下来，您需要考虑您的网站访问者是否需要对幻灯片有任何控制。有时，只需让您的图像自动轮换很方便。其他时候，允许网站访问者暂停幻灯片，或手动向前和向后移动幻灯片会很有帮助。我会告诉您每种幻灯片方法为您的网站访问者提供了多少控制。
- en: Simple crossfade slideshow
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简单淡入淡出幻灯片
- en: In this section, you'll learn how to build a simple crossfade slideshow. This
    type of slideshow is ideal for identically-sized images and can be displayed as
    a single image when JavaScript is disabled. Finally, this type of slideshow offers
    no control over the slideshow to your site visitors. They cannot pause the slideshow
    or manually move through the slides.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将学习如何构建一个简单的淡入淡出幻灯片。这种类型的幻灯片非常适合相同大小的图像，并且在禁用 JavaScript 时可以显示为单个图像。最后，这种类型的幻灯片不向您的网站访问者提供任何对幻灯片的控制。他们无法暂停幻灯片或手动浏览幻灯片。
- en: Time for action — creating a simple crossfade slideshow
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 —— 创建一个简单的淡入淡出幻灯片
- en: 'Follow these steps to create a simple crossfading slideshow:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤创建一个简单的淡入淡出幻灯片：
- en: 'We''ll get started by creating a basic HTML document and associated files and
    folders just like we did in [Chapter 1](ch01.html "Chapter 1. Designer, Meet jQuery"),
    *Designer, Meet jQuery*. In the body of the HTML document, include a list of images.
    Each list item will contain an image, which can optionally be wrapped in a link.
    Here''s a sample of my image list:'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将开始创建一个基本的 HTML 文档以及与之关联的文件和文件夹，就像我们在[第一章](ch01.html "第 1 章. 设计师，见 jQuery")*设计师，见
    jQuery*中所做的那样。在 HTML 文档的正文中，包括一系列图片。每个列表项将包含一张图片，可选择包装在链接中。以下是我的图片列表的示例：
- en: '[PRE0]'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Next, we''ll write a few lines of CSS to style the slideshow. A slideshow shows
    just one image at a time and the easiest way to show only one image is to stack
    the images up on top of one another. If the site visitor has JavaScript disabled,
    they''ll just see the last slide in the list:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将编写几行 CSS 来为幻灯片添加样式。幻灯片一次只显示一张图片，显示一张图片的最简单方法是将图片堆叠在一起。如果网站访问者禁用了 JavaScript，他们将只看到列表中的最后一张幻灯片：
- en: '[PRE1]'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If you view the page in a browser, you'll see that the last item in the slideshow
    is visible, but none of the other items are—they are all stacked beneath the last
    item. This is what our experience will be for site visitors with JavaScript disabled.
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您在浏览器中查看页面，您将看到幻灯片中的最后一项可见，但其他项都不可见—它们都叠放在最后一项下面。这就是禁用 JavaScript 的网站访问者的体验。
- en: Next, open up `scripts.js` and we'll get started writing our JavaScript code.
    This script will be a little bit different than scripts that we've set up before.
    Instead of something happening just once when the document loads or when a site
    visitor clicks a link, we actually want to set up a function that will happen
    on a timed interval. For example, if we want each slide of our slideshow to be
    visible for three seconds, we'll have to set up a function to switch slides, that
    gets called every three seconds.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，打开 `scripts.js`，我们将开始编写我们的 JavaScript 代码。这个脚本将与我们以前设置的脚本有些不同。我们不再是在文档加载或网站访问者点击链接时发生一次性事件，而是实际上要设置一个在定时间隔上发生的函数。例如，如果我们希望幻灯片的每一张幻灯片可见三秒钟，我们将必须设置一个每三秒钟调用一次的切换幻灯片的函数。
- en: We've already got our slides stacked up on top of one another on the page with
    the last item on top. Think about how you handle a stack of photographs. You view
    the photograph on top, and then move it to the bottom of the stack to view the
    second photo. Then you move the second photo to the bottom to view the third photo
    and so on. We're going to apply the same principle to our slideshow.
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们已经在页面上将幻灯片叠放在一起，并且最后一项在顶部。想想你如何处理一叠照片。您查看顶部的照片，然后将其移至堆栈底部以查看第二张照片。然后，您将第二张照片移至底部以查看第三张照片，依此类推。我们将同样的原理应用于我们的幻灯片。
- en: Inside `scripts.js`, create a function called `slideshow`. This is the function
    that we'll call every three seconds when we want to switch photos.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 `scripts.js` 中，创建一个名为 `slideshow` 的函数。这是我们在想要切换照片时每三秒调用的函数。
- en: '[PRE2]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The first thing we need to do inside our function is select the first photo
    in the stack.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们的函数内部，我们需要做的第一件事是选择堆栈中的第一张照片。
- en: '[PRE3]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Now we've got the first photo in the stack, we just need to move it to the bottom
    of the stack to make the next photo visible. We can do that by using jQuery's
    `appendTo()` method. This will remove the first photo from the beginning of the
    list and append it to the end of the list.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经有了堆叠中的第一张照片，我们只需要将它移到堆栈底部以使下一张照片可见。我们可以使用 jQuery 的 `appendTo()` 方法来实现。这将从列表开头删除第一张照片，并将其追加到列表末尾。
- en: '[PRE4]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Our photo-flipping function is ready. Now all we have to do is some initial
    setup as soon as our page loads. Then we'll set up a call to our photo-flipping
    function every three seconds. We'll call the `ready()` method on the document.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们的翻转照片的函数已经准备好了。现在我们只需要在页面加载时进行一些初始设置。然后，我们将每三秒设置一次调用我们的翻转照片的函数。我们将在文档上调用 `ready()`
    方法。
- en: '[PRE5]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: As soon as our document is ready, we want to prepare our slideshow. We'll start
    by selecting all the photos in the slideshow.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦我们的文档准备就绪，我们就要准备我们的幻灯片。我们将从选择幻灯片中的所有照片开始。
- en: '[PRE6]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Next, we want to hide all the photos in the slideshow.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们要隐藏幻灯片中的所有照片。
- en: '[PRE7]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Then, we'll filter that list of photos to get just the first one.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将过滤照片列表，只获取第一张。
- en: '[PRE8]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: And finally, we'll make that first photo visible. All other photos will remain
    hidden.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们将使第一张照片可见。所有其他照片将保持隐藏。
- en: '[PRE9]'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'At this point, if you refresh the page in the browser, you''ll see that the
    last slide visible without JavaScript enabled is now hidden and the first slide
    in the list is now visible instead. Now, all that''s left to do is to call our
    photo-flipping function every three seconds. To do this, we''ll use a JavaScript
    method called `setInterval()`. This allows us to call a function at a regular
    interval. We pass two values to `setInterval:` the name of the function to be
    called and the number of milliseconds that should elapse between calls to the
    function. For example, to call my slideshow function every three seconds (or 3000
    milliseconds), I''d write:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 刷新浏览器页面后，你会发现，如果没有启用 JavaScript，最后一个可见的幻灯片现在被隐藏了，而列表中的第一个幻灯片现在可见了。现在，剩下的事情就是每三秒调用我们的翻页函数。为此，我们将使用一个名为`setInterval()`的
    JavaScript 方法。这允许我们以固定的时间间隔调用一个函数。我们向`setInterval`传递两个值：要调用的函数的名称以及应该在函数调用之间经过的毫秒数。例如，要每三秒（或
    3000 毫秒）调用我的幻灯片函数，我会这样写：
- en: '[PRE10]'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Now, we''re calling our photo-flipping function every three seconds, so you''d
    expect that if you refresh the page in the browser then you''d see the photos
    changing every three seconds, but that doesn''t appear to be the case. Reviewing
    the code, it''s easy to see what''s gone wrong — even though the actual order
    of the stack of photos is changing every three seconds, all the photos except
    the first one are invisible. Whether the first photo is on top or not, it''s the
    only photo visible, so it appears that our slideshow isn''t changing. We''ll have
    to go back to our `slideshow` function and modify it to make the current photo
    invisible and make the next photo in the stack visible. Since we want the photos
    to switch with a nice, slow crossfading effect, we''ll call the `fadeOut()` method
    to fade the first photo to transparent, and we''ll pass `slow` to that method
    to ensure it takes its time:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们每隔三秒调用一次我们的翻页函数，所以你期望如果你在浏览器中刷新页面，你会看到照片每三秒变化一次，但事实并非如此。回顾代码，很容易看出出了什么问题——尽管照片堆栈的实际顺序每三秒都在改变，但除了第一张照片之外，所有的照片都是不可见的。无论第一张照片是否在顶部，它都是唯一可见的照片，因此我们的幻灯片似乎没有变化。我们将不得不回到我们的`slideshow`函数，并修改它使当前照片不可见，并使堆栈中的下一张照片可见。由于我们希望照片以一个漂亮、缓慢的交叉淡入淡出效果切换，我们将调用`fadeOut()`方法将第一张照片淡出为透明，并且我们将向该方法传递`slow`以确保它花费足够的时间：
- en: '[PRE11]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now, we need to move to the next photo in the list which is currently invisible
    and make it opaque. We''re going to use the `next()` method to get the next item
    in the list and then call the `fadeIn()` method to make it appear. Once again,
    since we want a slow effect, we''ll pass `slow` to the `fadeIn()` method:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要移动到列表中当前不可见的下一张照片，并使其不透明。我们将使用`next()`方法获取列表中的下一项，然后调用`fadeIn()`方法使其出现。再次，由于我们想要一个缓慢的效果，我们将`slow`传递给`fadeIn()`方法：
- en: '[PRE12]'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Finally, we''ve gotten ourselves into a little bit of trouble with our chaining
    of jQuery methods. We started with the first photo in the stack, faded it out,
    then moved to the second photo in the stack, and faded it in. However, when we
    call the `appendTo()` method, we''re appending the second photo in the stack to
    the end — we''re moving the second photo in the stack to the bottom instead of
    the first one. Luckily, jQuery provides a method for us to return to our original
    selection — the `end()` method. We can call the `end()` method after fading in
    the second photo to make sure that it''s the first photo that''s getting appended
    to the bottom of the photo stack:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们的 jQuery 方法链有点麻烦。我们从堆栈中的第一张照片开始，淡出它，然后移到堆栈中的第二张照片，并淡入。然而，当我们调用`appendTo()`方法时，我们将第二张照片添加到末尾——我们将第二张照片移动到底部而不是第一张照片。幸运的是，jQuery
    为我们提供了一个方法来返回到我们的原始选择——`end()`方法。我们可以在淡入第二张照片后调用`end()`方法，以确保将第一张照片附加到照片堆栈的底部：
- en: '[PRE13]'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: What just happened?
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚才发生了什么？
- en: If you refresh the page in the browser, you'll see that you've got a nice crossfading
    slideshow. As one photo fades out, the next photo fades in, smoothly transitioning
    between each photo. Since we're constantly moving the top photo in the stack to
    the bottom, we'll never reach the end of the slideshow, just as you can continuously
    flip through a stack of photos.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在浏览器中刷新页面，你会看到一个漂亮的交叉淡入淡出的幻灯片。当一张照片淡出时，下一张照片就会淡入，平滑地在每张照片之间过渡。由于我们不断地将堆栈中的顶部照片移到底部，我们永远不会到达幻灯片的结尾，就像你可以不断地翻阅一叠照片一样。
- en: We set up a slideshow function that selected the first photo in the stack, faded
    it out, and moved it to the bottom of the stack. Simultaneously, we're finding
    the second photo in the stack and fading it in. We used the power of jQuery chaining
    to accomplish all of that in one line of code.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们设置了一个幻灯片功能，选择了堆栈中的第一张照片，淡出它，并将它移动到堆栈的底部。同时，我们正在找到堆栈中的第二张照片并将其淡入。我们使用了 jQuery
    链接的强大功能，只需一行代码就可以完成所有操作。
- en: We set up an interval of three seconds and called our photo-flipping function
    at the end of each three second interval.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们设置了三秒的间隔，并在每个三秒的间隔结束时调用我们的照片翻转函数。
- en: Finally, we did a bit of set-up work as soon as the document is loaded — hiding
    all the photos and then making the first one visible. This will ensure that the
    photos are always displayed in order in our slideshow.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们在文档加载后做了一些设置工作 —— 隐藏所有照片，然后使第一张照片可见。这将确保照片始终按顺序显示在我们的幻灯片中。
- en: Next up, let's take a look at another plugin with some fancy transition effects.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看另一个具有一些花哨过渡效果的插件。
- en: Nivo Slider
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Nivo Slider
- en: In this section, we'll take a look at how to put the Nivo Slider plugin from
    Dev 7 Studios to good use. Nivo Slider provides for some eye-popping transition
    effects between photos and offers lots of configuration options. Nivo Slider is
    ideal for photos that are all identically-sized and it's easy to display a single
    photo in place of the slideshow for users with JavaScript disabled. Site visitors
    have the ability to manually advance forward and backward through the slideshow
    and the slideshow pauses when the mouse is moved over it.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看看如何充分利用来自 Dev 7 Studios 的 Nivo Slider 插件。Nivo Slider 提供了一些引人注目的照片之间的过渡效果，并提供了许多配置选项。Nivo
    Slider 非常适合尺寸完全相同的照片，并且很容易在 JavaScript 禁用的情况下显示单张照片以代替幻灯片。站点访问者可以手动向前和向后浏览幻灯片，并且当鼠标移动到幻灯片上时，幻灯片会暂停。
- en: Nivo Slider is a little different than most of the plugins we'll take a look
    at in this book. The plugin itself is open-source under the MIT license ( [http://nivo.dev7studios.com/license/](http://nivo.dev7studios.com/license/))
    and is free to download and use. There are also paid versions of the plugin available
    for WordPress users that include support, automatic updates, and permission to
    include the plugin with premium WordPress themes. The slideshow we create in this
    section is using the free, open-source version of the plugin.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Nivo Slider 与本书中大多数我们将介绍的插件有些不同。该插件本身是根据 MIT 许可证开源的（[http://nivo.dev7studios.com/license/](http://nivo.dev7studios.com/license/)），可以免费下载和使用。此外，还有付费版本的插件供
    WordPress 用户使用，包括支持、自动更新和在高级 WordPress 主题中包含插件的权限。我们在本节中创建的幻灯片使用的是该插件的免费开源版本。
- en: Time for action — creating a Nivo Slider slideshow
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 采取行动的时间 —— 创建 Nivo Slider 幻灯片
- en: 'Follow these steps to create an image slideshow with fancy transitions:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤创建具有花哨过渡效果的图像幻灯片：
- en: We'll get started by setting up a basic HTML file and associated files and folders
    just like we did in [Chapter 1](ch01.html "Chapter 1. Designer, Meet jQuery"),
    *Designer, Meet jQuery*. In the body of the HTML document, Nivo Slider simply
    requires a set of images inside a container`<div>`.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将通过设置一个基本的 HTML 文件和相关文件和文件夹来开始，就像我们在[第一章](ch01.html "Chapter 1. Designer,
    Meet jQuery") *设计师，遇见 jQuery* 中所做的那样。在 HTML 文档的正文中，Nivo Slider 只需要一个容器`<div>`内的一组图像。
- en: We can optionally wrap each image in a link if we want each slide of our slideshow
    to link off to another page or web location, but it's not required. Nivo will
    work fine with unlinked images as well. The `title` attribute of the `<img>` tag
    is used to display captions for the slideshow.
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我们希望幻灯片的每个幻灯片链接到另一个页面或网络位置，我们可以选择将每个图像包装在链接中，但这并不是必需的。Nivo 也可以正常使用未链接的图像。`<img>`
    标签的 `title` 属性用于显示幻灯片的标题。
- en: '[PRE14]'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Next, we''ll add some CSS that will stack up the images on top of one another
    and set a fixed width and height for our slideshow:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将添加一些 CSS，将图像堆叠在一起，并为我们的幻灯片设置固定的宽度和高度：
- en: '[PRE15]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Now, head over to [http://nivo.dev7studios.com/pricing/](http://nivo.dev7studios.com/pricing/)
    to download the Nivo Slider plugin. You'll find the **Download** link in the left
    box that's labeled **jQuery plugin**.![Time for action — creating a Nivo Slider
    slideshow](img/6709OS_09_img2.jpg)
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，前往[http://nivo.dev7studios.com/pricing/](http://nivo.dev7studios.com/pricing/)下载
    Nivo Slider 插件。在标记为**jQuery plugin**的左框中，你会找到**Download**链接。![采取行动的时间 —— 创建 Nivo
    Slider 幻灯片](img/6709OS_09_img2.jpg)
- en: Click the **Download** link and save the zip file to your computer.
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 点击**Download**链接，将 zip 文件保存到您的计算机上。
- en: Unzip the folder and take a look inside.![Time for action — creating a Nivo
    Slider slideshow](img/6709OS_09_img3.jpg)
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解压文件夹并查看其内容。![执行操作的时间 — 创建 Nivo Slider 幻灯片播放](img/6709OS_09_img3.jpg)
- en: 'There''s a **demo** folder that contains a sample HTML file along with images,
    scripts, and styles. There are two versions of the plugin—the source version and
    a packed and minified version. There''s a copy of the license, which is shorter
    and simpler than you might expect, so feel free to take a look at it. There''s
    a CSS file, and then there''s a **themes** folder that contains three other folders:
    **default, orman**, and **pascal**. These are three sample themes included with
    the plugin. You choose one of these sample themes, create your own, or modify
    one of the sample themes to suit your tastes.'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有一个包含示例 HTML 文件以及图像、脚本和样式的**演示**文件夹。插件有两个版本 —— 源版本和打包压缩版本。还有一个许可证的副本，比你期望的要短和简单，所以请随意查看。有一个
    CSS 文件，然后有一个包含三个其他文件夹的**主题**文件夹：**default, orman** 和 **pascal**。这是插件附带的三个示例主题。你可以选择其中一个示例主题，创建你自己的主题，或者修改其中一个示例主题以适应你的口味。
- en: Let's get the necessary files copied over and ready to use. First, copy `nivo-slider.css`
    to your own `styles` folder. Select one of the themes and copy the entire folder
    to your own `styles` folder as well. Then copy `jquery.nivo.slider.pack.js` to
    your own `scripts` folder alongside jQuery. Your setup should look like the following
    image:![Time for action — creating a Nivo Slider slideshow](img/6709OS_09_img4.jpg)
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们将必要的文件复制并准备好使用。首先，将`nivo-slider.css`复制到你自己的`styles`文件夹中。选择一个主题并将整个文件夹复制到你自己的`styles`文件夹中。然后将`jquery.nivo.slider.pack.js`复制到你自己的`scripts`文件夹中，与
    jQuery 放在一起。你的设置应该像下面的图片一样：![执行操作的时间 — 创建 Nivo Slider 幻灯片播放](img/6709OS_09_img4.jpg)
- en: 'Next, we''ll get our HTML file set up to use Nivo Slider. In the`<head>` section
    of the document, include the `nivo-slider.css` file along with the `CSS` file
    for the theme you''ve selected, before your `styles.css` file:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将设置我们的 HTML 文件以使用 Nivo Slider。在文档的`<head>`部分，包含选定主题的`nivo-slider.css`文件以及你的`styles.css`文件之前：
- en: '[PRE16]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'At the bottom of the HTML document, just below the closing`</body>` tag, insert
    the`<script>` tag to include the Nivo Slider plugin, between jQuery and your `scripts.js`
    file:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 HTML 文档底部，紧挨着闭合的`</body>`标签下方，插入`<script>`标签以引入 Nivo Slider 插件，位置在 jQuery
    和你的`scripts.js`文件之间：
- en: '[PRE17]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Open `scripts.js` and call the `ready()` method on the document so that our
    slideshow will start as soon as the page is loaded in the browser window:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`scripts.js`并在文档上调用`ready()`方法，这样我们的幻灯片将在页面在浏览器窗口加载时立即开始：
- en: '[PRE18]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Next, we''ll select the container element for our slideshow:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将选择幻灯片放置的容器元素：
- en: '[PRE19]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'And finally, we''ll call the `nivoSlider()` method:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们将调用`nivoSlider()`方法：
- en: '[PRE20]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Now if you view the page in the browser, you'll see our slideshow has been created.
    The default setting for the transition effect is to use a random different effect
    for each transition, so if you watch for a few minutes, you'll get a good idea
    of the different types of transition effects Nivo Slider includes.
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，如果你在浏览器中查看页面，你会看到我们的幻灯片已经创建了。过渡效果的默认设置是对每个过渡使用不同的随机效果，所以如果你观看一段时间，你会对 Nivo
    Slider 包含的不同类型的过渡效果有一个很好的了解。
- en: You'll also notice that the value we've included as the `title` attribute for
    each image is being displayed as the caption for each image.
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你还会注意到我们作为每个图像的`title`属性包含的值被显示为每个图像的标题。
- en: Now let's take advantage of some of the customization options available with
    the Nivo Slider plugin. The documentation for our options is available at [http://nivo.dev7studios.com/support/jquery-plugin-usage/](http://nivo.dev7studios.com/support/jquery-plugin-usage/)
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们利用 Nivo Slider 插件提供的一些自定义选项。我们选项的文档可以在[http://nivo.dev7studios.com/support/jquery-plugin-usage/](http://nivo.dev7studios.com/support/jquery-plugin-usage/)找到。
- en: 'You''ll find a list of the available transitions at the bottom of the documentation
    page. My personal favorite transition is called boxRain. Let''s set that up to
    be the only transition effect used. We''ll customize the Nivo Slider plugin by
    passing a set of key/value pairs to the `nivoSlider()` method inside a set of
    curly brackets:'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在文档页面底部，你会找到可用过渡效果的列表。我个人最喜欢的过渡效果叫做 boxRain。让我们设置它成为唯一使用的过渡效果。我们将通过在一对花括号内传递一组键/值对给`nivoSlider()`方法来自定义
    Nivo Slider 插件：
- en: '[PRE21]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'We can specify the number of rows and columns the box animation should include.
    By default, there are eight columns and four rows, but let''s increase that so
    that the `boxRain` transition uses more (smaller) boxes:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以指定盒子动画应包含的行数和列数。 默认情况下，有八列和四行，但让我们增加一下，以便 `boxRain` 过渡使用更多（更小的）盒子：
- en: '[PRE22]'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'We can also customize the animation speed and the amount of time each slide
    is shown:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还可以自定义动画速度和每张幻灯片显示的时间：
- en: '[PRE23]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: I've set the `animSpeed` to 800 milliseconds so that the `boxRain` transition
    effect will take 800 milliseconds to complete. I've also set the `pauseTime` to
    4000, so that each image in the slideshow is visible for 4000 milliseconds or
    four seconds.
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我将 `animSpeed` 设置为 800 毫秒，以便 `boxRain` 过渡效果需要 800 毫秒才能完成。 我还将 `pauseTime` 设置为
    4000，因此幻灯片中的每个图像都可见 4000 毫秒或四秒。
- en: What just happened?
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚才发生了什么事？
- en: We set up the Nivo Slider plugin to showcase a slideshow with impressive transition
    effects. We learned how to set up the HTML document appropriately, how to call
    the `nivoSlider()` method and how to customize some of the slideshow settings.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我们设置了 Nivo Slider 插件，展示了具有令人印象深刻的过渡效果的幻灯片。 我们学会了如何适当设置 HTML 文档，如何调用 `nivoSlider()`
    方法以及如何自定义一些幻灯片设置。
- en: Have a go hero — customize the slideshow
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 尝试一下吧——自定义幻灯片
- en: In addition to the customization options we used, there are several other configuration
    options available for the slideshow including the ability to show or hide next/previous
    buttons, choices for setting up the pagination display or whether or not to show
    it at all, and lots of callback functions for writing custom functionality for
    the slideshow. On top of all that, you can completely customize the CSS and images
    used to create the slideshow so that it looks any way you'd like.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 除了我们使用的自定义选项之外，幻灯片还提供了几种其他配置选项，包括显示或隐藏上/下一页按钮的能力，设置分页显示或是否显示以及用于编写幻灯片的自定义功能的大量回调函数。
    除此之外，您还可以完全自定义用于创建幻灯片的 CSS 和图像，使其看起来任何你想要的样子。
- en: Try your hand at customizing a slideshow to match any design you'd like and
    experiment with the other customization options the Nivo Slider makes available.
    Create a custom slideshow of your own design.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试着自定义一个幻灯片，以匹配任何你想要的设计，并尝试使用 Nivo Slider 提供的其他自定义选项。 创建自己设计的自定义幻灯片。
- en: Next up, we'll take a look at creating a thumbnail photo gallery.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将看看如何创建缩略图照片画廊。
- en: Galleriffic slideshow
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Galleriffic 幻灯片
- en: The Galleriffic slideshow by Trent Foley allows you to turn a list of links
    to full-size photos into a photo slideshow. The approach is a bit different than
    the other galleries we've seen so far, where the focus has been on inserting the
    full-size photos in the document and then animating them into a slideshow. Galleriffic
    instead takes a list of links to the full-size photos and turns that into a slideshow.
    The links remain on the page as one way to navigate through the slideshow.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Trent Foley 的 Galleriffic 幻灯片允许您将完整尺寸照片的链接列表转换为照片幻灯片。 这种方法与我们迄今为止看到的其他画廊有些不同，那里的重点是将完整尺寸的照片插入文档，然后将它们动画成幻灯片。
    相反，Galleriffic 将一个完整尺寸照片的链接列表转换为幻灯片。 这些链接作为浏览幻灯片的一种方式保留在页面上。
- en: The Galleriffic slideshow can be used with a set of photos that vary somewhat
    in size and aspect ratio, but if the difference between different photos is too
    great, getting the CSS set up to handle the slideshow gracefully will be quite
    a challenge. The Galleriffic slideshow makes it easy for your site visitor to
    manually navigate to any photo in the slideshow and also provides next, previous,
    and a play/pause button for the slideshow. For site visitors with JavaScript disabled,
    a list of links will be provided that will link them to the full-size versions
    of the photos.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: Galleriffic 幻灯片可以与大小和纵横比略有不同的照片集合一起使用，但如果不同照片之间的差异太大，那么设置 CSS 来优雅地处理幻灯片将是一个挑战。
    Galleriffic 幻灯片使您的站点访问者可以手动导航到幻灯片中的任何照片，并为幻灯片提供了下一张、上一张和播放/暂停按钮。 对于禁用 JavaScript
    的站点访问者，将提供一系列链接，这些链接将链接到照片的全尺寸版本。
- en: We're also going to explore a simple technique that you can use to apply different
    CSS to the page depending on whether or not JavaScript is enabled. This technique
    can be applied in a variety of circumstances to give you a bit more control over
    how your content is presented for site visitors when they have JavaScript disabled.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将探讨一种简单的技术，您可以根据 JavaScript 是否启用来应用不同的 CSS 到页面上。当访问者在没有启用 JavaScript 的情况下访问您的网站时，这种技术可以应用在各种情况下，为您提供对内容呈现方式的更多控制。
- en: Time for action — creating a Galleriffic slideshow
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间——创建一个 Galleriffic 幻灯片秀
- en: 'Follow these steps to create a slideshow using the Galleriffic plugin:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤使用 Galleriffic 插件创建幻灯片秀：
- en: First up, we're going to make some extra effort to plan out how the slideshow
    will appear for site visitors with and without JavaScript enabled. If the site
    visitor doesn't have JavaScript, we'll present them with a grid of thumbnails
    with captions beneath. Clicking on a thumbnail will show them the full-size version
    of the photo.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们将额外努力规划幻灯片秀将如何在启用和未启用 JavaScript 的网站访问者中出现。如果网站访问者没有 JavaScript，我们将向他们展示一个缩略图网格，并在下方显示标题。单击缩略图将向他们显示照片的全尺寸版本。
- en: 'The page will look like the following screenshot:'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 页面将看起来像以下屏幕截图：
- en: '![Time for action — creating a Galleriffic slideshow](img/6709OS_09_img5.jpg)'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间——创建一个 Galleriffic 幻灯片秀](img/6709OS_09_img5.jpg)'
- en: 'For users with JavaScript, though, I want to show a smaller grid of thumbnails
    beside a main slideshow area like in the following screenshot:'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于使用 JavaScript 的用户，我想在主幻灯片区域旁边显示一个较小的缩略图网格，如下面的屏幕截图所示：
- en: '![Time for action — creating a Galleriffic slideshow](img/6709OS_09_img6.jpg)'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间——创建一个 Galleriffic 幻灯片秀](img/6709OS_09_img6.jpg)'
- en: The captions aren't important in the case of thumbnails because they'll be displayed
    below the slideshow rather than below the photos.
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 缩略图的情况下，标题不重要，因为它们将显示在幻灯片秀下方，而不是图片下方。
- en: Keeping in mind how we want the page to appear, we'll get started by setting
    up an HTML file and associated files and folders, just like we did in [Chapter
    1](ch01.html "Chapter 1. Designer, Meet jQuery"), *Designer, Meet jQuery*. Create
    a set of 100x100 thumbnails for each photo and store them in a `thumbs` folder
    inside your `images` folder. We'll use these thumbnails to create a list of links
    to the full-size photos in the body of the HTML document.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在考虑我们希望页面的外观时，我们将开始设置一个 HTML 文件和相关文件和文件夹，就像我们在[第1章](ch01.html "第1章。设计师，遇见 jQuery")中所做的那样，*设计师，遇见
    jQuery*。为每张照片创建一个 100x100 的缩略图，并将它们存储在您的`images`文件夹内的一个`thumbs`文件夹中。我们将使用这些缩略图在
    HTML 文档的正文中创建一个到全尺寸照片的链接列表。
- en: '[PRE24]'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Note
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: We've included a `title` attribute on each link to ensure a tooltip will show
    when the mouse hovers over each thumbnail with this brief photo description. I've
    also included an `alt` attribute on each image tag so that site visitors unable
    to see the images for any reason will still have access to this description of
    the image.
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们在每个链接上都包含了一个`title`属性，以确保当鼠标悬停在每个缩略图上时会显示一个工具提示，其中包含此照片的简短描述。我还在每个图像标签上包含了一个`alt`属性，以便无法看到图像的任何原因的网站访问者仍然可以访问该图像的描述。
- en: Also inside each`<li>`, I've included a`<div>` with a class of `caption` that
    contains the caption that will appear beneath the thumbnails or beneath the photos
    in the slideshow.
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在每个`<li>`内部，我还包括了一个`<div>`，带有类名为`caption`，其中包含将显示在缩略图下方或幻灯片秀中图片下方的标题。
- en: This is enough HTML to get the non-JavaScript version of the slideshow set up,
    but the Galleriffic plugin requires a few more elements on the page.
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是足够为非 JavaScript 版本的幻灯片秀设置 HTML 的，但是 Galleriffic 插件需要页面上更多的元素。
- en: 'We need to wrap our list of images in a`<div>` with an `id` of `thumbs` like
    the following:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要像以下这样，用一个带有`id`为`thumbs`的`<div>`来包裹我们的图片列表：
- en: '[PRE25]'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: We also need to add some empty elements to the page that will hold our slideshow,
    slideshow caption, and slideshow controls.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还需要在页面中添加一些空元素，用来容纳我们的幻灯片秀、幻灯片说明和幻灯片控件。
- en: '[PRE26]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The exact position of these elements on the page is up to you—you can create
    whatever layout you'd like and put the various parts of the slideshow on the page
    wherever you'd like. For usability purposes, of course, the elements should all
    be relatively close together.
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些元素在页面上的确切位置由您决定——您可以创建任何您喜欢的布局，并将幻灯片秀的各个部分放在您喜欢的页面上的任何位置。出于可用性考虑，当然，这些元素应该相对靠近一起。
- en: Note that aside from the thumbs `div` that contains our list of thumbnails,
    the other elements we've added to the page are empty. These elements will only
    be used if the site visitor has JavaScript enabled, and all the content inside
    them will be automatically generated by the Galleriffic plugin. This makes them
    invisible unless they're being used.
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，除了包含缩略图列表的 thumbs `div`外，我们添加到页面的其他元素都是空的。这些元素只会在访问者启用 JavaScript 时使用，并且它们内部的所有内容都将由
    Galleriffic 插件自动生成。这将使它们在不使用时保持不可见。
- en: Now, open your HTML file and find the opening`<body>` tag. Add a `class` of
    `jsOff`.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，打开你的 HTML 文件，找到开头的`<body>`标签，添加一个`class`为`jsOff`。
- en: '[PRE27]'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Next, we''ll set up the CSS styles for the thumbnails. Open your `styles.css`
    file and add these styles:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将为缩略图设置 CSS 样式。打开你的`styles.css`文件并添加这些样式：
- en: '[PRE28]'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: The CSS has two sections here. The selectors that simply start with .thumbs
    will apply to the thumbnails whether or not the site visitor has JavaScript enabled.
    The selectors that start with `.jsOff` will only apply to site visitors who do
    not have JavaScript enabled. This CSS creates the grid of thumbnails with captions
    beneath them.
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: CSS 在这里有两个部分。以`.thumbs`开头的选择器将应用于缩略图，无论访问者是否启用 JavaScript。以`.jsOff`开头的选择器将仅应用于没有启用
    JavaScript 的访问者。这段 CSS 会创建带有标题的缩略图网格。
- en: We've also selected the parent container for the slideshow and set it to not
    display at all for site visitors without JavaScript. Since it's a set of empty
    `<div>s` they shouldn't take up any space on the page anyway, but this is some
    extra insurance that these extra elements won't cause any problems for site visitors
    without JavaScript.
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们还选择了幻灯片放映的父容器，并设置为对于没有 JavaScript 的访问者根本不显示。由于这是一组空的`<div>`，它们不应该占用页面上的任何空间，但这是为了确保这些额外的元素不会对没有
    JavaScript 的访问者造成任何问题的额外保证。
- en: The non-JavaScript version of the page is complete.
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该页面的非 JavaScript 版本已经完成。
- en: 'Next, we''ll set up the page for users who do have JavaScript enabled. We''ll
    get started by opening up the `scripts.js` file and inserting our document ready
    statement:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将为启用 JavaScript 的用户设置页面。我们将开始打开`scripts.js`文件并插入我们的文档就续语句：
- en: '[PRE29]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Next, we'll write a bit of code to remove that `jsOff` class from the body and
    replace it with a `jsOn` class.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将编写一些代码，将`jsOff`类从`body`中删除并替换为`jsOn`类。
- en: '[PRE30]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: If a site visitor has JavaScript, the `jsOff` class will be removed from the
    body and replaced by a `jsOn` class.
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果站点访问者启用了 JavaScript，`jsOff`类将从`body`中移除，替换为`jsOn`类。
- en: 'Now, we can write some CSS to apply to the list of thumbnails for site visitors
    who do have JavaScript. Open your `styles.css` file and add these styles:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以编写一些 CSS，应用于对于已启用 JavaScript 的站点访问者的缩略图列表。打开你的`styles.css`文件并添加这些样式：
- en: '[PRE31]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: This CSS will only apply to site visitors with JavaScript enabled, since the
    `jsOn` class can only be applied to the `<body>` if JavaScript is available to
    do the work.
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个 CSS 只会应用于启用 JavaScript 的访问者，因为只有在 JavaScript 可用来工作时，`jsOn`类才能应用于`<body>`。
- en: 'Now, we''ll write some styles for the bits that make up the slideshow the controls,
    the caption, and the slideshow area itself:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将编写一些样式来控制幻灯片的各个部分，包括控件、标题和幻灯片区域本身：
- en: '[PRE32]'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: I've created a small sprite that contains images for **play, pause, previous**,
    and **next** that I'm applying to these controls.
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我已经创建了一个小精灵，其中包含**播放、暂停、上一个**和**下一个**的图像，我将应用到这些控件上。
- en: Now that we're all set up to create an awesome slideshow, we just need our plugin
    code. Head over to [http://www.twospy.com/galleriffic/](http://www.twospy.com/galleriffic/)
    where you'll find the documentation and downloads for the Galleriffic plugin.
    You'll have to scroll down the page nearly to the bottom to find the **Download**
    section.![Time for action — creating a Galleriffic slideshow](img/6709OS_09_img7.jpg)
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，既然我们已经准备好创建一个令人惊叹的幻灯片放映，我们只需要我们的插件代码。前往 [http://www.twospy.com/galleriffic/](http://www.twospy.com/galleriffic/)，在那里你会找到
    Galleriffic 插件的文档和下载。你需要向下滚动页面几乎到底部才能找到**下载**部分。![行动时间 — 创建 Galleriffic 幻灯片](img/6709OS_09_img7.jpg)
- en: You'll notice that you have two options for the download—you can get a ZIP file
    that includes some examples or just the plugin code by itself. Since we already
    know what we want the slideshow to look like, we'll grab just the plugin code.
    Clicking the link will open up the code itself in the browser window. Right click
    or select **File | Save As** from the browser's menu to save the file to your
    own `scripts` folder.
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您会注意到下载有两个选项——您可以获取包含一些示例的 ZIP 文件，也可以仅获取插件代码本身。由于我们已经知道我们想要的幻灯片样式，我们将仅获取插件代码。单击链接将在浏览器窗口中打开代码本身。右键单击或从浏览器菜单中选择
    **文件 | 另存为** 将文件保存到您自己的 `scripts` 文件夹中。
- en: 'Now that we''ve got the plugin, we want to include it in our HTML page. Go
    down to the bottom of the your HTML page and insert the Galleriffic plugin between
    jQuery and your `scripts.js` file:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经获得了插件，我们想将它包含在我们的 HTML 页面中。转到您 HTML 页面的底部，并将 Galleriffic 插件插入在 jQuery
    和您的 `scripts.js` 文件之间：
- en: '[PRE33]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Next, we''ll open `scripts.js` and select the container that''s wrapped around
    our list of thumbnails and call the `galleriffic()` method just after our line
    of code that changes the class on the body:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将打开 `scripts.js` 并选择包装我们的缩略图列表的容器，并在我们改变 body 类的代码行后调用 `galleriffic()`
    方法：
- en: '[PRE34]'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: But if you view the page in the browser, you'll see that the slideshow isn't
    working. This is because the Galleriffic plugin requires a bit of configuration
    to run. We're going to pass a set of key/value pairs inside curly brackets to
    the `galleriffic()` method so that our slideshow will run. We basically have to
    tell the plugin where to show our slideshow, controls, and caption.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 但是，如果您在浏览器中查看页面，您会发现幻灯片不起作用。这是因为 Galleriffic 插件需要一些配置才能运行。我们将在花括号内传递一组键/值对给
    `galleriffic()` 方法，以便我们的幻灯片运行。我们基本上必须告诉插件在哪里显示我们的幻灯片、控件和标题。
- en: '[PRE35]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: The `<div>` with the `id` of `slideshow` is where we're going to show the fullsize
    images. Controls will be shown in the `div` with the `id` of controls. `<div id="caption">`
    will display the caption and the `div` we created with the `id` of `loading` will
    display a loading animation while the slideshow initializes. I've also set `autoStart`
    to `true` so that the slideshow will start playing automatically.
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 具有 `id` 为 `slideshow` 的 `<div>` 是我们将显示全尺寸图像的位置。控件将显示在具有 `id` 为 controls 的 `div`
    中。 `<div id="caption">` 将显示标题，而我们创建的具有 `id` 为 `loading` 的 `div` 将在幻灯片初始化时显示加载动画。我还将
    `autoStart` 设置为 `true`，这样幻灯片就会自动播放。
- en: Now if you refresh the page in the browser, you'll see the slideshow in action.
    **Next** and **previous** buttons allow you to flip through and a **play/pause**
    button gives you control over the slideshow.
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，如果您在浏览器中刷新页面，您将看到幻灯片正在运行。**下一页** 和 **上一页** 按钮允许您翻转，并且 **播放/暂停** 按钮使您可以控制幻灯片。
- en: What just happened?
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发生了什么？
- en: We set up our page with a display of image thumbnails optimized for site visitors
    with JavaScript disabled. Then we used a line of JavaScript to change the body
    class so that we could apply different styles for site visitors who had JavaScript
    enabled. We set up CSS to display our slideshow and called the `galleriffic()`
    method to animate the slideshow. Site visitors can manually move back and forward
    through the photos, can click a thumbnail to load the corresponding full-size
    photo into the slideshow area, and can pause the slideshow at any point.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 我们设置了我们的页面以显示为禁用 JavaScript 的站点访客优化的图像缩略图。然后，我们使用了一行 JavaScript 代码来更改 body 类，以便我们可以为启用
    JavaScript 的站点访客应用不同的样式。我们设置了 CSS 来显示我们的幻灯片，并调用了 `galleriffic()` 方法来动画显示幻灯片。站点访客可以手动在照片之间前后移动，可以单击缩略图将相应的全尺寸照片加载到幻灯片区域，并可以在任何时候暂停幻灯片。
- en: The CrossSlide plugin
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CrossSlide 插件
- en: The CrossSlide plugin, by Tobia Conforto, makes it possible to not just fade
    images in and out, but to also animate panning and zooming. This plugin is ideal
    if you have a variety of different image sizes. For best results, the only requirement
    is that all images are at least as large as the slideshow viewing area. Images
    larger than the slideshow viewing area will be cropped. For example, if the slideshow
    is 600 pixels wide by 400 pixels tall, then all images used in the slideshow should
    be at least 600 pixels wide and 400 pixels tall.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: CrossSlide 插件，由 Tobia Conforto 制作，使得不仅可以淡入淡出图像，还可以动画平移和缩放图像成为可能。如果您有各种不同尺寸的图像，则此插件非常理想。为了获得最佳效果，唯一的要求是所有图像至少与幻灯片查看区域一样大。大于幻灯片查看区域的图像将被裁剪。例如，如果幻灯片宽度为
    600 像素，高度为 400 像素，那么幻灯片中使用的所有图像的宽度和高度都应至少为 600 像素和 400 像素。
- en: With JavaScript disabled, the CrossSlide plugin displays whatever content you've
    placed into the slideshow as a placeholder. This could be a single image, or it
    could be an image accompanied by text, or any other sort of HTML content you'd
    like. The plugin will then remove this placeholder content when the page loads
    and replace it with the slideshow.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 当 JavaScript 被禁用时，CrossSlide 插件将显示你放入幻灯片的任何内容作为占位符。这可以是一个单独的图像，或者是一个图像加上文本，或者任何你想要的其他类型的
    HTML 内容。页面加载时，插件将删除此占位符内容，并用幻灯片替换它。
- en: It is possible to provide buttons that allow site visitors to stop and restart
    the slideshow. However, site visitors cannot manually advance through the various
    slides.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 可以提供按钮，让网站访问者停止和重新启动幻灯片播放。但是，访问者不能手动切换到各个幻灯片。
- en: Before we dive in, I do want to give a fair warning that you'll find the CrossSlide
    plugin a bit less designer-friendly than some of the other plugins we've seen.
    A panning and zooming slideshow is a complex task, and the plugin can only do
    so much to take that complexity out of your hands. That said, I'm sure if you
    take your time and exercise a little patience, you'll be able to get it figured
    out.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入了解之前，我想提醒一下，与我们之前见过的一些插件相比，你会发现 CrossSlide 插件的设计不太友好。一个平移和缩放幻灯片是一个复杂的任务，而该插件只能做到让这种复杂性减轻一些。话虽如此，我相信如果你花点时间并稍微耐心一些，你就能搞清楚。
- en: Time for action — building a CrossSlide slideshow
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 —— 构建 CrossSlide 幻灯片
- en: 'Follow these steps to set up a CrossSlide slideshow:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤设置 CrossSlide 幻灯片：
- en: To get started, we'll set up a simple HTML document and associated files and
    folders just like we did in [Chapter 1](ch01.html "Chapter 1. Designer, Meet jQuery"),
    *Designer, Meet jQuery*. The body of the HTML document will contain a container
    for your slideshow. Inside the container, place any content you'd like to display
    for users with JavaScript disabled.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要开始，我们将设置一个简单的 HTML 文档和关联的文件和文件夹，就像我们在[第 1 章](ch01.html "第 1 章。设计师，见 jQuery")中所做的那样，*设计师，见
    jQuery*。HTML 文档的主体将包含幻灯片的容器。在容器内，放置任何您希望为禁用 JavaScript 的用户显示的内容。
- en: '[PRE36]'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: I'm going to simply show the first photo from the slideshow for users with JavaScript
    disabled. I've given my container `<div>` an `id` of `slideshow.`
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我将简单地为禁用 JavaScript 的用户显示幻灯片中的第一张照片。我给我的容器 `<div>` 加上了 `id` 为 `slideshow`。
- en: 'Open `styles.css` and add some CSS to define the width and height of the slideshow:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `styles.css` 并添加一些 CSS 来定义幻灯片的宽度和高度：
- en: '[PRE37]'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Next, head over to [http://tobia.github.com/CrossSlide/](http://tobia.github.com/CrossSlide/)
    to get the downloads and documentation for the CrossSlide plugin.![Time for action
    — building a CrossSlide slideshow](img/6709OS_09_img1.jpg)
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，前往 [http://tobia.github.com/CrossSlide/](http://tobia.github.com/CrossSlide/)
    获取 CrossSlide 插件的下载和文档。![行动时间 —— 构建 CrossSlide 幻灯片](img/6709OS_09_img1.jpg)
- en: You'll find the **Download minified** link near the top of the page. The rest
    of the page shows several examples of the CrossSlide plugin in action. Take a
    look through the examples. You'll see that it can do everything from a simple
    crossfade slideshow similar to what we built in the first section of this chapter
    to a fully animated panning and zooming slideshow.
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你会在页面顶部附近找到**下载缩小版**链接。页面的其余部分展示了 CrossSlide 插件在几个示例中的应用。浏览一下这些示例。你会发现它可以做从与本章第一节中构建的简单交叉淡入淡出幻灯片类似的事情，到完全动态的平移和缩放幻灯片的所有事情。
- en: 'Now that you''ve had a look at some of the types of slideshows you can create
    with the CrossSlide plugin, here are a few things to keep in mind:'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在你已经看了一些你可以使用 CrossSlide 插件创建的幻灯片类型，接下来有几件事情需要记住：
- en: First, because of the rendering limitations of some browsers (namely, Internet
    Explorer), zooming in and out on photos can affect the quality of the photo display.
    The plugin's author recommends keeping the zoom factor at or below 1 to minimize
    this effect.
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，由于某些浏览器（即，Internet Explorer）的渲染限制，对照片进行缩放可能会影响照片显示的质量。插件的作者建议将缩放因子保持在 1 或以下，以最小化此效果。
- en: Second, because browsers are limited to rendering full pixels, the panning and
    zooming animation effects might be a bit less smooth than you'd like, particularly
    for diagonal animations. You can minimize the 1-pixel jumping effect by minimizing
    or avoiding diagonal animation or by choosing a relatively high speed for the
    animations, which helps them appear smoother.
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二，因为浏览器限制为呈现完整像素，所以平移和缩放动画效果可能不太流畅，特别是对于对角线动画。您可以通过减少或避免对角线动画或选择相对较高的动画速度来减少
    1 像素跳跃效果，从而使它们看起来更流畅。
- en: Finally, the animations can be a bit CPU-intensive, particularly when using
    the panning, zooming, and crossfading animations simultaneously, as we'll do in
    this example. It's nothing that should trip up most newer computers, but depending
    on your site's audience, you might want to avoid using all possible animation
    effects at once. At the end of this tutorial, I'll show you how to avoid the most
    CPU-intensive part of the slideshow if it's causing problems on your own or your
    site visitor's computers.
  id: totrans-166
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，动画可能会占用一些CPU资源，特别是当同时使用了平移、缩放和交叉淡化动画，就像我们在这个例子中所做的那样。这并不会使大多数新电脑遇到问题，但是根据你的网站受众，你可能希望避免同时使用所有可能的动画效果。在本教程的结尾，我将向你展示如何避免幻灯片最消耗CPU资源的部分，如果它在你自己或你的网站访问者的电脑上造成了问题的话。
- en: When you click the **Download minified** link, the plugin script itself will
    open in a browser window, just as jQuery itself does. Just right-click on the
    page or select **File | Save Page As** from the browser's menu bar to save the
    file to your own computer. Keep the file name, `jquery.cross-slide.min.js` and
    save the file in your `scripts` folder.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你点击**下载压缩版**链接时，插件脚本本身将在浏览器窗口中打开，就像jQuery本身一样。只需右键单击页面或从浏览器的菜单栏选择**文件 | 另存为**，将文件保存到你自己的计算机上。保留文件名`jquery.cross-slide.min.js`，并将文件保存在你的`scripts`文件夹中。
- en: Next, we just have to include the CrossSlide plugin file at the bottom of our
    HTML page, between jQuery and `scripts.js:`
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们只需要在我们的HTML页面底部包含CrossSlide插件文件，放在jQuery和`scripts.js`之间：
- en: '[PRE38]'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Next, open your `scripts.js` file and we''ll get started with the CrossSlide
    plugin by selecting our slideshow container and calling the `crossSlide()` method:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，打开你的`scripts.js`文件，我们将通过选择我们的幻灯片容器并调用`crossSlide()`方法来开始使用CrossSlide插件：
- en: '[PRE39]'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Recall that a variable is just a container for something. In this case, we've
    selected the slideshow container and placed it in a variable called `slideshow`.
    We've done this because we're going to reference the container several times in
    our script. By saving the slideshow container in a variable, we're preventing
    jQuery from having to query the DOM looking for the slideshow container each time
    we want to refer to it, making our code more efficient.
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请记住，变量只是某物的容器。在这种情况下，我们选择了幻灯片容器并将其放在一个名为`slideshow`的变量中。我们这样做是因为我们将在脚本中多次引用这个容器。通过将幻灯片容器保存在一个变量中，我们可以防止jQuery每次想要引用它时都需要查询DOM，使我们的代码更加高效。
- en: 'At this point, if you load the page in a browser, you''ll see that calling
    the `crossSlide()` method appears to have had no effect on our page. You''ll still
    see the placeholder content inside our slideshow container and there''s no slideshow
    happening. That''s because we have to pass not only settings to the `crossSlide()`
    method, but also the list of photos we''d like to show in our slideshow. Inside
    the `crossSlide()` method''s parentheses, insert a pair of curly brackets and
    we''ll pass in a key/value pair to configure the length of time the fade between
    photos will take in seconds:'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此时，如果在浏览器中加载页面，你会发现调用`crossSlide()`方法似乎对我们的页面没有产生任何效果。你仍然会在我们的幻灯片容器内看到占位内容，而且没有幻灯片播放。这是因为我们不仅需要向`crossSlide()`方法传递设置，还需要传递我们想在幻灯片中显示的照片列表。在`crossSlide()`方法的括号内，插入一对花括号，我们将传递一个键值对来配置图片之间淡入淡出的时间长度，单位为秒：
- en: '[PRE40]'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Note
  id: totrans-175
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that we're expressing the length of time in seconds, not milliseconds.
    The CrossSlide plugin is set up to expect seconds as units of time rather than
    the milliseconds that we usually find in JavaScript.
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，我们使用的时间长度单位是秒，而不是毫秒。CrossSlide插件设置为期望秒作为时间单位，而不是我们通常在JavaScript中找到的毫秒。
- en: 'Next, after our configuration settings, we want to pass an array of photos
    to the `crossSlide()` method. An array is wrapped in square brackets:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在我们的配置设置之后，我们想要将一组照片传递给`crossSlide()`方法。一个数组被放在方括号中：
- en: '[PRE41]'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Each photo will have its own set of key/value pairs describing the URL of the
    image, the caption, and so on. Each photo will be wrapped in its own set of curly
    brackets. We''ll get started with the URL of the photo which is described in the
    `src` key:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每张照片都将有自己的一组描述图片URL、标题等的键值对。每张照片都将包含在自己的一组花括号中。我们将从图片的URL开始，该URL由`src`键描述：
- en: '[PRE42]'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Next, we''ll add the caption for the photo as another key/value pair:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将另一个键值对作为照片的标题：
- en: '[PRE43]'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Now, we have to add two key/value pairs to describe the starting and ending
    points of the panning and zooming animation. Let''s say we want to pan across
    this photo from the top left to the bottom right while zooming in. Here are the
    values we''ll pass the `from` and `to` keys:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要添加两个键/值对来描述平移和缩放动画的起点和终点。假设我们要从左上角平移到右下角，同时放大这张照片。这里是我们将传递给 `from` 和
    `to` 键的值：
- en: '[PRE44]'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Finally, we want to specify how long the animation should take in seconds.
    I''ll show this photo animation for four seconds:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们要指定动画持续的时间，以秒为单位。我将展示这张照片动画四秒钟：
- en: '[PRE45]'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'That''s one photo for our slideshow. To add more, simply add another set of
    key/value pairs inside curly brackets. Don''t forget to separate each photo from
    the previous photo with a comma. Remember not to put a comma after the last photo
    in the list. Here''s my example with three more photos added:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是我们幻灯片的一张照片。要添加更多照片，只需在花括号内添加另一组键/值对。不要忘记用逗号将每张照片与前一张照片分隔开。请记住不要在列表中的最后一张照片后面放逗号。这是我添加了另外三张照片的示例：
- en: '[PRE46]'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Note
  id: totrans-189
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that I can choose how long each photo displays — allowing a particularly
    stunning photo to linger on the page longer if I choose, or moving a smaller or
    less interesting photo off the page more quickly.
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，我可以选择每张照片显示的时间长度——如果我愿意，可以让一张特别惊艳的照片在页面上停留更长时间，或者更快地将较小或不太有趣的照片移出页面。
- en: Now if you refresh the page in the browser, you'll see a panning and zooming
    slideshow of your photos. We're getting closer!
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，如果您在浏览器中刷新页面，您将看到您的照片的平移和缩放幻灯片放映。我们离成功越来越近了！
- en: 'Next, we''ll use that caption value we passed into the `crossSlide()` method
    for each photo to create a caption. First, I''m going to go back to my HTML markup
    and add a container for the caption. You can style this with CSS however you''d
    like:'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将使用我们传递给 `crossSlide()` 方法的标题值为每张照片创建标题。首先，我要回到我的 HTML 标记并添加一个容器用于标题。您可以使用
    CSS 自定义此容器的样式：
- en: '[PRE47]'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Keep in mind that the container for your caption has to appear outside of the
    slideshow container. If you place it inside, it will be removed when the CrossSlide
    plugin replaces the slideshow container's content with the slideshow.
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请记住，您的标题容器必须出现在幻灯片放映容器的外部。如果您将其放在内部，当 CrossSlide 插件用幻灯片放映替换幻灯片放映容器的内容时，它将被移除。
- en: Now, we've got a place to display our caption, so we just need a way to put
    our captions into that container. The `crossSlide()` method will accept a callback
    method along with our settings and array of images. This callback function will
    be called each time an image starts to crossfade into the next image, and it is
    called again when the fade is complete.
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，我们有了一个显示标题的地方，所以我们只需要一种方法将我们的标题放入该容器中。`crossSlide()` 方法将接受一个回调方法以及我们的设置和图像数组。每次图像开始淡出到下一张图像时，都会调用此回调函数，并在淡出完成后再次调用。
- en: '[PRE48]'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Our callback function is passed four possible values: the index of the current
    image, the current image itself, the index of the previous image, and the previous
    image itself. The index of the image is simply its place in the slideshow by number.
    JavaScript, like other programming languages, starts counting at 0 instead of
    1\. So the index of the first image in the slideshow is 0, the second image''s
    index is 1, and so on.'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们的回调函数传递了四个可能的值：当前图像的索引，当前图像本身，前一图像的索引和前一图像本身。图像的索引只是它在幻灯片中按编号的位置。JavaScript，像其他编程语言一样，从0开始计数而不是1。因此，幻灯片中第一张图像的索引是0，第二张图像的索引是1，依此类推。
- en: 'Remember I said the callback function is called once when the crossfade starts
    and once again after the crossfade is finished? If the crossfade is starting,
    the callback function will get all four values—the index of and the current image,
    and the index of and the previous image. If the crossfade is finished, we''ll
    only get two values: the index of the current image and the current image itself.'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 记得我说过回调函数在交叉淡入淡出开始时调用一次，然后在交叉淡入淡出完成后再次调用吗？如果交叉淡入淡出正在开始，回调函数将获取所有四个值——当前图像的索引和当前图像，以及前一图像的索引和前一图像。如果交叉淡入淡出已经完成，我们将只得到两个值：当前图像的索引和当前图像本身。
- en: 'We''ll check to see if the crossfade is starting or finishing. If the crossfade
    is finished, then we''ll want to show the caption for the new photo. If the crossfade
    is just starting, then we''ll hide the caption for what will very soon be the
    previous image:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将检查交叉淡入淡出是开始还是结束。如果交叉淡入淡出已经结束，那么我们将想要显示新照片的标题。如果交叉淡入淡出刚刚开始，那么我们将隐藏很快就会成为上一张图片的标题：
- en: '[PRE49]'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: If the crossfade is finished, then `indexOut` will be `undefined`, since there
    won't be a value for that variable passed to the callback function. It's easy
    to check if that value is undefined to figure out if the crossfade animation is
    starting or finishing. Then, we use jQuery's `text()` method to set the text of
    the caption to the `alt` value we included with each image and fade the caption
    in. If the crossfade animation is just starting on the other hand, we'll just
    fade the caption out.
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果交叉淡入淡出完成，那么`indexOut`将是`undefined`，因为不会有一个变量的值传递给回调函数。很容易检查该值是否未定义，以判断交叉淡入淡出动画是开始还是结束。然后，我们使用
    jQuery 的`text()`方法将标题的文本设置为我们在每张图片中包含的`alt`值，并将标题渐入。另一方面，如果交叉淡入淡出动画刚开始，我们将只是将标题渐出。
- en: Now if you refresh the page in the browser, you'll see that the caption fades
    in with each photo and fades out as the crossfade is starting. It's a nice smooth
    transition from one caption to the next.
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，如果你在浏览器中刷新页面，你会看到每张照片的标题渐隐渐现，随着交叉淡入淡出的开始。这是从一个标题平滑过渡到下一个的美好过渡。
- en: This last step is optional. If you find that the CrossSlide plugin with all
    animations running at once, as we've set up in this example, is too CPU-intensive
    for your computer or the computers of your site visitors, there's a simple configuration
    option that will allow you to skip the most CPU-intensive part of the slideshow
    — namely, when two photos are crossfading while panning and zooming. All you have
    to do is pass another key/value pair to the configuration options setting `variant`
    to `true:`
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这最后一步是可选的。如果你发现 CrossSlide 插件在我们在这个例子中设置的所有动画同时运行时，对你的计算机或你网站访问者的计算机的 CPU 负荷太大，有一个简单的配置选项可以让你跳过幻灯片最消耗
    CPU 的部分 —— 即，当两张照片在平移和缩放时交叉淡入淡出。你只需将另一个键值对传递给配置选项，将`variant`设置为`true:`
- en: '[PRE50]'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: This will change your slideshow so that each photo will complete panning and
    zooming before starting the crossfade to the next photo.
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将改变你的幻灯片，使每张照片在开始交叉淡入淡出到下一张照片之前完成平移和缩放。
- en: What just happened?
  id: totrans-206
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚刚发生了什么？
- en: Don't be worried if your head is spinning — the CrossSlide plugin is by far
    the most developer-y plugin we've used yet. Although this plugin isn't super designer-friendly,
    I hope you can see that even this type of plugin is within your reach if you have
    a little patience and are willing to experiment a bit. Carefully studying the
    code for examples will take you pretty far.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的头有点晕，不用担心 —— CrossSlide 插件绝对是我们迄今为止使用过的最专业的插件。虽然这个插件不是特别友好于设计师，但我希望你能看到，即使是这种类型的插件也在你的掌握范围内，只要你有点耐心并愿意多尝试一些。仔细研究代码示例将会让你有所收获。
- en: We set up a container which held our static content for users with JavaScript
    disabled. Then we set up the CrossSlide plugin to replace that content with a
    dynamic panning and zooming slideshow for the users with JavaScript enabled. We
    set the length of the crossfade to 1 second, and then passed in our array of images,
    including the URL, caption, animation starting point, animation ending point,
    and duration for each image. Finally, we took advantage of the callback function
    provided by the CrossSlide plugin to fade in each photo's caption and fade it
    back out when the photo itself starts to fade out. We also took a look at how
    to make the slideshow a bit less CPU-intensive for those situations where it might
    cause problems.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 我们设置了一个容器，用于保存我们的静态内容，以供 JavaScript 禁用的用户使用。然后，我们设置了 CrossSlide 插件，将该内容替换为动态的平移和缩放幻灯片，供启用
    JavaScript 的用户使用。我们将交叉淡入淡出的时间设置为 1 秒，然后传入了我们的图片数组，包括 URL、标题、动画起点、动画终点和每张图片的持续时间。最后，我们利用了
    CrossSlide 插件提供的回调函数，让每张照片的标题渐入，并在照片本身开始淡出时将其渐出。我们还看了如何使幻灯片在可能引起问题的情况下更少地消耗 CPU。
- en: Summary
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概要
- en: We took a look at four different approaches to building photo slideshows with
    jQuery. We started off with a simple crossfading slideshow that we built from
    scratch without a plugin. We explored fancy transition effects with the Nivo Slider
    plugin. Then we learned how to set up a thumbnail slideshow using the Galleriffic
    plugin. And finally, we took a look at building a panning and zooming slideshow
    with the CrossSlide plugin.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看了四种不同的用 jQuery 构建图片幻灯片的方法。我们从零开始建立了一个简单的交叉淡入淡出的幻灯片，没有使用插件。我们使用 Nivo Slider
    插件探索了花式的过渡效果。然后我们学习了如何使用 Galleriffic 插件设置缩略图幻灯片。最后，我们看了如何使用 CrossSlide 插件构建一个平移和缩放的幻灯片。
- en: Next up, we'll take a look at building sliders and carousels for all types of
    content on your site.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将看看如何为您网站上的各种内容构建滑块和走马灯。
