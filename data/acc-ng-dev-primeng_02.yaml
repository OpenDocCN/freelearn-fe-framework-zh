- en: '*Chapter 6*: Using Angular Components'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第 6 章*：使用 Angular 组件'
- en: In the previous chapter, we introduced the Angular Academy application and briefly
    scratched its surface by demonstrating how we can use CSS Custom Properties to
    control theme properties and CSS Grid layouts. In this chapter, we will dig into
    the details of how to implement the application using the new Angular components
    that we introduced in [*Chapter 4*](B16295_04_ePub_RK.xhtml#_idTextAnchor055),
    *Exploring Angular Components Features*.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们介绍了 Angular Academy 应用程序，并通过演示如何使用 CSS 自定义属性来控制主题属性和 CSS 网格布局，简要地触及了其表面。在本章中，我们将深入探讨如何使用我们在[*第
    4 章*](B16295_04_ePub_RK.xhtml#_idTextAnchor055)，*探索 Angular 组件功能*中介绍的新 Angular
    组件来实现应用程序。
- en: Note that we will be covering a lot of ground in this chapter, so I recommend
    that you revisit *Chapter 4*, *Exploring Angular Components Features*, if you
    want to learn about Angular components or if you need a refresher. This chapter
    will be about using the new official Angular components and how to wire them together
    in our Angular Academy example application.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，在本章中我们将涉及很多内容，所以我建议如果您想了解 Angular 组件或需要复习，请重新阅读*第 4 章*，*探索 Angular 组件功能*。本章将介绍如何使用新的官方
    Angular 组件，以及如何在我们的 Angular Academy 示例应用程序中将它们连接起来。
- en: 'More specifically, we will be covering the following topics in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 更具体地说，在本章中，我们将涵盖以下主题：
- en: Understanding the Angular Academy application
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解 Angular Academy 应用程序
- en: Showing course videos using the Angular YouTube Player
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Angular YouTube Player 显示课程视频
- en: Using the new Clipboard service
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用新的 Clipboard 服务
- en: Finding your school using the Angular Google Maps components
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Angular Google Maps 组件查找您的学校
- en: If you are like us, then you are probably eager to dive into the details on
    how to use the new official Angular components, but let's step back and reflect
    on the Angular Academy application so that we can understand what we are going
    to build.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您和我们一样，那么您可能急于深入了解如何使用新的官方 Angular 组件，但让我们退一步，反思 Angular Academy 应用程序，以便我们了解我们将要构建的内容。
- en: By starting from the ground up in this way, we hope that you get a more concrete
    understanding of how to use the new components by seeing how to wire them together
    using services and navigation.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种方式从头开始，我们希望您能够通过看到如何使用服务和导航将它们连接起来，从而对如何使用新组件有一个更具体的理解。
- en: Understanding the Angular Academy application
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 Angular Academy 应用程序
- en: The first thing you should think about when using components is **what** you
    want the user to be able to accomplish by using the component, as well as what
    data that use case requires, before digging into the details about the component
    you are going to use.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用组件时，您首先应该考虑的是**用户通过使用组件能够完成什么**，以及在使用案例中需要哪些数据，然后再深入了解您将要使用的组件的细节。
- en: Our primary use case for the Angular Academy application. is to allow tailor-made
    lists of video courses, which will provide the user with a custom list of videos
    and location information for the video's content. To accomplish this, we will
    use the Angular YouTube Player to display videos and select schools via Angular
    Google Maps (for the **how**). It will be the school that creates the course,
    and the course will contain one or more videos that the user will watch.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们对 Angular Academy 应用的主要用途是允许定制视频课程列表，这将向用户提供一个定制的视频列表和视频内容的地理位置信息。为了实现这一点，我们将使用
    Angular YouTube Player 来显示视频，并通过 Angular Google Maps（用于**如何实现**）选择学校。课程将由学校创建，课程将包含用户将观看的一个或多个视频。
- en: With the use case in place, we can now give some thought to **what** data we
    will be using, before describing **how** we are going to display or use the data.
    This will make it easier to separate data retrieval and storage from the actual
    usage of the different components. So, let's establish a data model before we
    use the new Angular components.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在确定用例之后，我们现在可以思考一下我们将使用哪些数据，在描述我们将如何显示或使用数据之前。这将使数据检索和存储与不同组件的实际使用更容易分离。因此，在我们使用新的
    Angular 组件之前，让我们先建立一个数据模型。
- en: Establishing a data model
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 建立数据模型
- en: We have many ways to describe data models, but for the sake of brevity, we will
    limit ourselves to simple TypeScript interfaces to describe the models and use
    Angular services to communicate with the backend.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有多种描述数据模型的方式，但为了简洁起见，我们将限制自己使用简单的 TypeScript 接口来描述模型，并使用 Angular 服务与后端进行通信。
- en: 'The models that we will be using to support our use case are as follows:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用以下模型来支持我们的用例：
- en: School
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学校
- en: Course
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 课程
- en: Video
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 视频
- en: 'The list of videos you saw in the previous chapter is related to a Course that
    has been produced by a School. We’ll start by giving a Course a title, an optional
    description, and a list of videos for the user to watch:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 你在前一章中看到的视频列表与一个由学校制作的课程相关。我们将首先给课程一个标题，一个可选的描述，以及一个用户可以观看的视频列表：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The basic information we need for each video is where to access it on YouTube,
    the date it was uploaded, the author who produced it, and an optional description
    of what it is about:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要的每个视频的基本信息包括在哪里可以访问YouTube上的视频，上传日期，制作它的作者，以及一个可选的关于它的描述：
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We will attach a name and the latitude and longitude for each school so that
    we can find them on a map:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将为每个学校附加一个名称以及纬度和经度，这样我们就可以在地图上找到它们：
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Additionally, we will describe the courses being offered by the school in the
    `courses` array. Note that the description in the `courses` array will be using
    the Course model as part of the School model. The shared use of the Course interface
    will allow logic to be reused between the Schools and Course components.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们将在`courses`数组中描述学校提供的课程。请注意，`courses`数组中的描述将使用Course模型作为School模型的一部分。Course接口的共享使用将允许在Schools和Course组件之间重用逻辑。
- en: Dividing the application into components
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将应用程序分解为组件
- en: 'Now, we will divide the app into the following three main modules. These will
    be displayed separately on the screen:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将应用程序分为以下三个主要模块。这些模块将在屏幕上分别显示：
- en: Course
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 课程
- en: Theme
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主题
- en: Schools
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学校
- en: The Course component will use the layout grid that we introduced in [*Chapter
    5*](B16295_05_ePub_RK.xhtml#_idTextAnchor075), *Using CSS Custom Properties,*
    as well as a Video component that will display YouTube videos via the Angular
    YouTube Player module.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Course组件将使用我们在[第5章](B16295_05_ePub_RK.xhtml#_idTextAnchor075)，“使用CSS自定义属性”中引入的布局网格，以及一个视频组件，该组件将通过Angular
    YouTube Player模块显示YouTube视频。
- en: The theme component should also seem familiar to you from [*Chapter 5*](B16295_05_ePub_RK.xhtml#_idTextAnchor075),
    *Using CSS Custom Properties,* where we used it to control the theme settings
    using CSS properties. The theme settings should influence the graphical display
    of the Schools and Course components.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 主题组件也应该让你想起[第5章](B16295_05_ePub_RK.xhtml#_idTextAnchor075)，“使用CSS自定义属性”，在那里我们使用它来通过CSS属性控制主题设置。主题设置应该影响Schools和Course组件的图形显示。
- en: The Schools component will let you find your school via the Angular Google Maps
    component and let you select a course to follow from the chosen school (and redirect
    you to the Course component).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: Schools组件将允许你通过Angular Google Maps组件找到你的学校，并允许你从所选学校选择一个课程来跟随（并将你重定向到Course组件）。
- en: 'Each of the components will be mapped for navigation in `app.module.ts`, like
    this:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 每个组件都将映射到`app.module.ts`中的导航，如下所示：
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note that the Course component will require a parameter for which course to
    display. For simplicity, we will just assume that the user is already logged in,
    has chosen to follow the course with an ID of `1`, and then display this as the
    default route. A later implementation could add a login page and a user model,
    which could redirect the user to the chosen course upon startup (the chosen course
    could, for example, be stored on the user model). We will revisit this in [*Chapter
    8*](B16295_08_ePub_RK.xhtml#_idTextAnchor094), *Additional Provider Scopes*.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，Course组件将需要一个参数来指定要显示的课程。为了简单起见，我们假设用户已经登录，选择了ID为`1`的课程，并将其显示为默认路由。稍后的实现可以添加登录页面和用户模型，这样可以在启动时将用户重定向到所选课程（所选课程可以存储在用户模型中）。我们将在[第8章](B16295_08_ePub_RK.xhtml#_idTextAnchor094)，“附加提供者作用域”中重新讨论这个问题。
- en: Now that we have divided the application into components, it is time to start
    thinking about how to include dependencies for these modules.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经将应用程序分解为组件，是时候开始考虑如何为这些模块包含依赖项了。
- en: Including dependencies using modules
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用模块包含依赖项
- en: 'We will start by specifying the application as a module that imports the Course,
    Schools, and Theme modules:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先将应用程序指定为一个模块，该模块导入Course、Schools和Theme模块：
- en: '[PRE4]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The Course module will include the Video module:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 课程模块将包括视频模块：
- en: '[PRE5]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The Video module will include the `YouTubePlayerModule` and `ClipboardModule`
    dependencies:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Video模块将包括`YouTubePlayerModule`和`ClipboardModule`依赖项：
- en: '[PRE6]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Finally, the Schools module will include `GoogleMapsModule`:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，Schools模块将包括`GoogleMapsModule`：
- en: '[PRE7]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Did you notice that we only included the specific dependencies where they are
    needed? This way of structuring applications can help you have a clearer overview
    of the dependencies in the application.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 你注意到我们只包括了所需的特定依赖项吗？这种构建应用程序的方式可以帮助您更清晰地了解应用程序中的依赖关系。
- en: Retrieving data using services
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用服务检索数据
- en: 'Now that we have specified the example data model and divided the application
    into modules, it is time to specify how we will access data from the components.
    We will use the following Angular services for this:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经指定了示例数据模型并将应用程序划分为模块，是时候指定我们将如何从组件中访问数据了。我们将使用以下Angular服务来完成这项工作：
- en: '`CourseService`'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CourseService`'
- en: '`SchoolsService`'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SchoolsService`'
- en: Each of the services will be set up to fetch data asynchronously. The main difference
    here will be that `CourseService` will retrieve one Course at a time, while `SchoolsService`
    will retrieve several Schools at a time.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 每个服务都将被设置为异步获取数据。这里的主要区别是`CourseService`将一次检索一个课程，而`SchoolsService`将一次检索多个学校。
- en: 'The `CourseService` will have a `getCourse` call available to retrieve a single
    course:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '`CourseService`将有一个`getCourse`调用，用于检索单个课程：'
- en: '[PRE8]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The Course model will contain the list of videos for the course to display.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 课程模型将包含要显示的课程视频列表。
- en: Important Note
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: We are using mock data here, but this approach should illustrate how you can
    implement asynchronous data retrieval from the server via the `Course` component.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们使用模拟数据，但这种方法应该可以说明您如何通过`Course`组件从服务器实现异步数据检索。
- en: 'Similarly, we will introduce `SchoolsService`, which will retrieve the list
    of schools providing courses:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们将介绍`SchoolsService`，它将检索提供课程的学校列表：
- en: '[PRE9]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Here, we will return several schools via the `getSchools` call. The idea is
    that each of the returned schools should provide links to one or several courses
    that can be retrieved via `CourseService`. We will illustrate this by providing
    a link to the courses that the school is offering in the Schools component.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将通过`getSchools`调用返回几个学校。我们的想法是，每个返回的学校都应该提供链接到一或多个可以通过`CourseService`检索的课程。我们将通过在“学校”组件中提供学校提供的课程链接来展示这一点。
- en: Wiring up navigation
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 连接导航
- en: For simplicity, we will assume that the user has signed up for a school so that
    we can direct the user to a course in the chosen school. Here, the default link
    will display videos from the course in the chosen school via the default route
    on startup.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简单起见，我们假设用户已经注册了学校，这样我们就可以将用户引导到所选学校中的课程。在这里，默认链接将在启动时通过默认路由显示所选学校中的课程视频。
- en: 'We will start by setting up the links for the Material Side Navigation container
    in the Navigation component on the left side of the screen, as follows:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先设置屏幕左侧导航组件中Material侧边导航容器的链接，如下所示：
- en: '[PRE10]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Here, you can see that the default route, `/`, will have a title of **Watch
    courses** This will be mapped to the Courses component in the route description.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您可以看到默认路由`/`将有一个标题为**观看课程**。这将在路由描述中映射到课程组件。
- en: Having established the navigation and the data model and having split the app
    into modules, we can start describing how to use the Angular components in the
    Angular Academy app. We will start by describing how to use the Angular YouTube
    Player to show the course videos.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在建立了导航和数据模型，并将应用程序划分为模块之后，我们可以开始描述如何在Angular Academy应用程序中使用Angular组件。我们将首先描述如何使用Angular
    YouTube Player来显示课程视频。
- en: Showing course videos using the Angular YouTube Player
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Angular YouTube Player显示课程视频
- en: 'In this section, we''ll create a separate video component to display videos
    that are attached to a course. For simplicity, we''ll accept the information as
    `@Input` inside the Video component, like so:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将创建一个单独的视频组件来显示与课程相关联的视频。为了简单起见，我们将在视频组件内部接受`@Input`信息，如下所示：
- en: '[PRE11]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'This code should be familiar to you from the introduction in [*Chapter 4*](B16295_04_ePub_RK.xhtml#_idTextAnchor055),
    *Exploring Angular Components Features,* where we introduced how to use it. We
    can now write the template for the Video component to display the YouTube videos,
    like this:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码应该与您在[*第4章*](B16295_04_ePub_RK.xhtml#_idTextAnchor055)，“探索Angular组件功能”的介绍中很熟悉，在那里我们介绍了如何使用它。现在我们可以编写视频组件的模板来显示YouTube视频，如下所示：
- en: '[PRE12]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Do you remember how we used the custom `videoSize` CSS property in the previous
    chapter to tweak the grid column's size? This effort is paying off – we just need
    to refer to the `video` class here (with no direct reference to dynamic sizing
    at all). The reference to the `tile` class lets us manipulate the tile color settings
    using the theme component.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 您还记得我们如何在上一章中使用自定义的 `videoSize` CSS 属性来调整网格列的大小吗？这项努力正在得到回报 – 我们在这里只需要引用 `video`
    类（根本不直接引用动态大小）。对 `tile` 类的引用使我们能够使用主题组件来操作瓦片颜色设置。
- en: Did you also notice how we introduced the `cdkCopyToClipboard` feature here?
    This feature can be handy in desktop applications when you want to extract data
    from the running application to the clipboard.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 您也注意到我们在这里如何引入 `cdkCopyToClipboard` 功能了吗？当您想在桌面应用程序中从运行的应用程序中提取数据到剪贴板时，这个功能可能会很有用。
- en: 'Having established the Video component, we can now use it from the Course component,
    like this:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在建立了 Video 组件之后，我们现在可以从 Course 组件中使用它，如下所示：
- en: '[PRE13]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Note the usage of the `async` pipe operator on `course$`. Here, we are waiting
    for the data to be retrieved so that we can start rendering the video using the
    Video component.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 注意在 `course$` 上使用 `async` 管道操作符。在这里，我们正在等待数据被检索，以便我们可以开始使用 Video 组件渲染视频。
- en: Now that we have covered how to display course videos using the Angular YouTube
    Player, we will learn how to find a school using the Angular Google Maps component
    and show how the navigation from the School component to the Course component
    works.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经介绍了如何使用 Angular YouTube Player 显示课程视频，我们将学习如何使用 Angular Google Maps 组件查找学校，并展示从
    School 组件到 Course 组件的导航工作方式。
- en: Finding your school using the Angular Google Maps component
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Angular Google Maps 组件查找您的学校
- en: The Schools component will allow you to find a school via Google Maps by clicking
    a marker where the school has been placed. This will open the **MapInfo** window,
    where you can click on the course that you can watch from school. Clicking on
    this course will lead you to the course overview you saw in the previous chapter.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: Schools 组件将允许您通过点击学校放置的标记在 Google Maps 中查找学校。这将打开 **MapInfo** 窗口，您可以在其中点击可以观看的学校课程。点击此课程将带您到之前章节中看到的课程概述。
- en: You can find the Schools component in the Angular Academy application by clicking
    the **Find school** menu entry. This should render the Schools component, where
    you will see the example **Angular Advanced** school.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过点击 Angular Academy 应用程序中的 **查找学校** 菜单条目来找到 Schools 组件。这将渲染 Schools 组件，您将看到示例
    **Angular Advanced** 学校。
- en: 'When you open the Schools component in the Angular Academy application, it
    should open with a red default Google Maps marker. If you click it, then your
    display should look like this:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 当您在 Angular Academy 应用程序中打开 Schools 组件时，它应该以红色默认 Google Maps 标记打开。如果您点击它，那么您的显示应该看起来像这样：
- en: '![Figure 6.1 – Opening the red Google Maps marker'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 6.1 – 打开红色 Google Maps 标记'
- en: '](img/Figure_6.1_B16295.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.1_B16295.jpg)'
- en: Figure 6.1 – Opening the red Google Maps marker
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.1 – 打开红色 Google Maps 标记
- en: If you click the **Angular Advanced** link in the map information window, you
    will be transferred to the course component with the ID for the **Angular Advanced**
    course as a parameter.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在地图信息窗口中点击 **Angular Advanced** 链接，您将被转移到具有 **Angular Advanced** 课程 ID 的课程组件。
- en: 'We expect the incoming course data on the map info window of the Schools component
    to come from the Schools service as an asynchronous call, as illustrated here:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们期望 Schools 组件地图信息窗口中传入的课程数据来自 Schools 服务，作为一个异步调用，如图所示：
- en: '[PRE14]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Here, you can see how we opened `MapInfoWindow` when clicking on the map anchor
    point in the `openInfo` call.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您可以看到我们如何在 `openInfo` 调用中点击地图锚点时打开 `MapInfoWindow`。
- en: 'We will register the `openInfo` call on the `mapClick` function of the Angular
    Google Maps component, and make it open a **MapInfo** window that displays a link
    to the courses being offered by the school:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在 Angular Google Maps 组件的 `mapClick` 函数上注册 `openInfo` 调用，并使其打开一个显示学校提供的课程链接的
    **MapInfo** 窗口：
- en: '[PRE15]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Note the usage of the async pipe on the `schools$` observable. This will make
    the school data available in the `schools` variable. Combined with `NgIf` on `<ng-container>`,
    you can stop data from being rendered until data is available.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 注意在 `schools$` 可观察对象上使用异步管道。这将使学校数据在 `schools` 变量中可用。结合 `<ng-container>` 上的
    `NgIf`，您可以在数据可用之前停止渲染数据。
- en: If you have not tried it yet, I recommend that you try clicking your way through
    **Find your school** and clicking the **Angular Advanced** course to find your
    way back to the Course listing.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您还没有尝试过，我建议您尝试通过点击**查找您的学校**并点击**Angular高级**课程来找到课程列表。
- en: Did you notice how the Course listing was opened using the course ID that was
    retrieved from the course array in the School data model? In our example application,
    we have registered the `course/:id` route to open the course component with the
    `id` parameter. For now, we will just assume that the user only has a single course
    available and that this course is chosen upon startup. This simple example has
    helped illustrate how the basic flow of the Angular Academy is intended to be.
    In a more realistic scenario, we would allow for the user to log in and have chosen
    courses stored in a session. We will revisit this in [*Chapter 8*](B16295_08_ePub_RK.xhtml#_idTextAnchor094),
    *Additional Provider Scopes*, where we will introduce user login.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 您是否注意到课程列表是通过从学校数据模型中检索到的课程ID来打开的？在我们的示例应用程序中，我们已经注册了`course/:id`路由来通过`id`参数打开课程组件。目前，我们假设用户只有一个课程可用，并且该课程在启动时被选中。这个简单的例子有助于说明Angular
    Academy的基本流程是如何设计的。在更现实的场景中，我们会允许用户登录，并将选中的课程存储在会话中。我们将在[*第8章*](B16295_08_ePub_RK.xhtml#_idTextAnchor094)，*附加提供者作用域*中重新讨论这个问题，我们将介绍用户登录。
- en: Summary
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we gave you a basic overview of how to use the new Angular
    components by giving you a concrete example with the Angular Academy application.
    The example included a description of how to retrieve data using services and
    how to structure the inclusion of dependencies via Angular modules. In the next
    chapter, we will describe how to use a test-as-a-user approach using Angular Component
    Harnesses.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们通过提供一个具体的Angular Academy应用程序的例子，向您介绍了如何使用新的Angular组件。该例子包括如何使用服务检索数据以及如何通过Angular模块结构化依赖项的包含。在下一章中，我们将描述如何使用Angular组件
    Harnesses的测试作为用户的方法。
