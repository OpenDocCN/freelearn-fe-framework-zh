["```js\nng g class flight\n```", "```js\nexport class Flight {\n  constructor(\n    public fullName: string,\n    public from: string,\n    public to: string,\n    public type: string,\n    public adults: number,\n    public departure: Date,\n    public children?: number,\n    public infants?: number,\n    public arrival?: Date,\n  ) {}\n}\n```", "```js\n<div class=\"container\">\n  <h3 class=\"text-center\">Book a Flight</h3>\n  <div class=\"col-md-offset-3 col-md-6\">\n    <!-- TODO: Form here -->\n  </div>\n</div>\n```", "```js\nng  g component flight-form\n```", "```js\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { FlightFormComponent } from './flight-form/flight-form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    // Component added after\n    // being generated\n    FlightFormComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n```", "```js\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n// Import the form module\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { FlightFormComponent } from './flight-form/flight-form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FlightFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    // Add the form module \n    // to imports array\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n```", "```js\n<!-- ./app/flight-form/flight-form.component.html -->\n<form>\n  <div class=\"form-group\">\n    <label for=\"fullName\">Full Name</label>\n    <input \n      type=\"text\" \n      class=\"form-control\" \n      [(ngModel)]=\"flightModel.fullName\"\n      name=\"fullName\"\n    >\n  </div>\n</form>\n```", "```js\n// ./app/flight-form/flight-form.component.ts\n\nimport { Component, OnInit } from '@angular/core';\nimport { Flight } from '../flight';\n\n@Component({\n  selector: 'app-flight-form',\n  templateUrl: './flight-form.component.html',\n  styleUrls: ['./flight-form.component.css']\n})\nexport class FlightFormComponent implements OnInit {\n  flightModel: Flight;\n  constructor() {\n    this.flightModel = new Flight('', '', '', '', 0, '', 0, 0, '');\n  }\n\n  ngOnInit() {}\n}\n```", "```js\n<div class=\"container\">\n  <h3 class=\"text-center\">Book a Flight</h3>\n  <div class=\"col-md-offset-3 col-md-6\">\n    <app-flight-form></app-flight-form>\n  </div>\n</div>\n```", "```js\n<form>\n  <div class=\"form-group\">\n    <label for=\"fullName\">Full Name</label>\n    <input \n      type=\"text\" \n      class=\"form-control\" \n      [(ngModel)]=\"flightModel.fullName\"\n      name=\"fullName\"\n    >\n    {{flightModel.fullName}}\n  </div>\n</form>\n```", "```js\nexport class FlightFormComponent implements OnInit {\n  flightModel: Flight;\n  // Array of cities\n  cities:Array<string> = [\n    'Lagos',\n    'Mumbai',\n    'New York',\n    'London',\n    'Nairobi'\n  ];\n  constructor() {\n    this.flightModel = new Flight('', '', '', '', 0, '', 0, 0, '');\n  }\n}\n```", "```js\n<div class=\"row\">\n    <div class=\"col-md-6\">\n      <label for=\"from\">From</label>\n      <select type=\"text\" id=\"from\" class=\"form-control\" [(ngModel)]=\"flightModel.from\" name=\"from\">\n        <option *ngFor=\"let city of cities\" value=\"{{city}}\">{{city}}</option>\n      </select>\n    </div>\n    <div class=\"col-md-6\">\n      <label for=\"to\">To</label>\n      <select type=\"text\" id=\"to\" class=\"form-control\" [(ngModel)]=\"flightModel.to\" name=\"to\">\n        <option *ngFor=\"let city of cities\" value=\"{{city}}\">{{city}}</option>\n      </select>\n    </div>\n  </div>\n```", "```js\n<div class=\"row\" style=\"margin-top: 15px\">\n    <div class=\"col-md-5\">\n      <label for=\"\" style=\"display: block\">Trip Type</label>\n      <label class=\"radio-inline\">\n        <input type=\"radio\" name=\"type\" [(ngModel)]=\"flightModel.type\" value=\"One Way\"> One way\n      </label>\n      <label class=\"radio-inline\">\n        <input type=\"radio\" name=\"type\" [(ngModel)]=\"flightModel.type\" value=\"Return\"> Return\n      </label>\n    </div>\n    <div class=\"col-md-4\">\n      <label for=\"departure\">Departure</label>\n      <input type=\"date\" id=\"departure\" class=\"form-control\" [(ngModel)]=\"flightModel.departure\" name=\"departure\">\n    </div>\n    <div class=\"col-md-3\">\n      <label for=\"arrival\">Arrival</label>\n      <input type=\"date\" id=\"arrival\" class=\"form-control\" [(ngModel)]=\"flightModel.arrival\" name=\"arrival\">\n    </div>\n  </div>\n```", "```js\n<div class=\"row\" style=\"margin-top: 15px\">\n    <div class=\"col-md-4\">\n      <label for=\"adults\">Adults</label>\n      <input type=\"number\" id=\"adults\" class=\"form-control\" [(ngModel)]=\"flightModel.adults\" name=\"adults\">\n    </div>\n    <div class=\"col-md-4\">\n      <label for=\"children\">Children</label>\n      <input type=\"number\" id=\"children\" class=\"form-control\" [(ngModel)]=\"flightModel.children\" name=\"children\">\n    </div>\n    <div class=\"col-md-4\">\n      <label for=\"infants\">Infants</label>\n      <input type=\"number\" id=\"infants\" class=\"form-control\" [(ngModel)]=\"flightModel.infants\" name=\"infants\">\n    </div>\n  </div>\n```", "```js\n<div class=\"form-group\">\n    <label for=\"fullName\">Full Name</label>\n    <input \n      type=\"text\" \n      id=\"fullName\" \n      class=\"form-control\" \n      [(ngModel)]=\"flightModel.fullName\" \n      name=\"fullName\"\n\n      #name=\"ngModel\"\n      required\n      minlength=\"6\">\n  </div>\n```", "```js\n<div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"text-danger\">\n      <div *ngIf=\"name.errors.required\">\n        Name is required.\n      </div>\n      <div *ngIf=\"name.errors.minlength\">\n        Name must be at least 6 characters long.\n      </div>\n    </div>\n```", "```js\n<form #flightForm=\"ngForm\">\n  <div class=\"form-group\" style=\"margin-top: 15px\">\n    <button class=\"btn btn-primary btn-block\" [disabled]=\"!flightForm.form.valid\">\n      Submit\n    </button>\n  </div>\n</form>\n```", "```js\n<form #flightForm=\"ngForm\" (ngSubmit)=\"handleSubmit()\">\n    ...\n</form>\n```", "```js\nexport class FlightFormComponent implements OnInit {\n  flightModel: Flight;\n  cities:Array<string> = [\n    ...\n  ];\n  constructor() {\n    this.flightModel = new Flight('', '', '', '', 0, '', 0, 0, '');\n  }\n\n  // Handle for submission\n  handleSubmit() {\n    console.log(this.flightModel);\n  }\n}\n```", "```js\n<div class=\"container\">\n  <div class=\"row\">\n    <h3 class=\"text-center\">\n      {{counter}}\n    </h3>\n    <div class=\"buttons\">\n      <div class=\"btn btn-primary\">\n        Increment\n      </div>\n      <div class=\"btn btn-danger\">\n        Decrement\n      </div>\n    </div>\n  </div>\n</div>\n```", "```js\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  counter = 0;\n}\n```", "```js\nexport class AppComponent {\n  counter = 0;\n  increment() {\n    this.counter++\n  }\n}\n```", "```js\n<div class=\"btn btn-primary\" (click)=\"increment()\">\n   Increment\n</div>\n```", "```js\n<div class=\"btn btn-danger\" (dblclick)=\"decrement()\">\n  Decrement\n</div>\n```", "```js\ndecrement() {\n  this.counter <= 0 ? (this.counter = 0) : this.counter--;\n}\n```", "```js\n<div class=\"container\" (keypress)=\"showKey($event)\" tabindex=\"1\">\n  ...\n  <div class=\"key-bg\" *ngIf=\"keyPressed\">\n    <h1>{{key}}</h1>\n  </div>\n<div>\n```", "```js\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  keyPressed = false;\n  key = '';\n  // ....\n  showKey($event) {\n    this.keyPressed = true;\n    this.key = $event.key.toUpperCase();\n    setTimeout(() => {\n      this.keyPressed = false;\n    }, 500)\n  }\n}\n```"]