- en: '*Chapter 8*: Web Analytics and Performance Monitoring'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will investigate ways in which we can monitor the behavior
    of our application and the users who visit it. We will learn how page analytics
    can be a valuable tool in helping create better user experiences. We will learn
    how to use two different tools to gather these page insights, depending on what
    we require. We will learn what is required of us legally when using these tools.
    We will also implement plugins that allow us to debug errors that our users encounter
    when using our site.
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this chapter, you should feel confident that you can gather different
    types of analytics and use them to inform yourself (or the site owner) about how
    code changes have affected the user experience.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Introducing website analytics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implementing page analytics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Monitoring the performance of your site
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To complete this chapter, you will need to have completed [*Chapter 7*](B15983_07_ePub_RK.xhtml#_idTextAnchor105),
    *Testing and Auditing Your Site*.
  prefs: []
  type: TYPE_NORMAL
- en: The code for this chapter can be found at [https://github.com/PacktPublishing/Elevating-React-Web-Development-with-Gatsby-4/tree/main/Chapter08](https://github.com/PacktPublishing/Elevating-React-Web-Development-with-Gatsby-4/tree/main/Chapter08).
  prefs: []
  type: TYPE_NORMAL
- en: Introducing website analytics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Website analytics is the act of collecting, aggregating, analyzing, and reporting
    a website''s data. Let''s break website analytics down into two categories:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Page analytics**: Analytics we gather about how users interact with our website.
    This could be page views, click rates, or bounce rates, for example.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Performance Monitoring**: Analytics we gather on how our code performs for
    our users. This is primarily used for logging errors in our JavaScript that our
    users encounter.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Regardless of the category, they all work in a similar way. First, an inserted
    `script` tag loads a small amount of JavaScript into the page. This code is run
    in the web browser of anyone visiting the site. In most cases, the code drops
    a small text file with small pieces of data known as cookies onto the users' browsers.
    This data is used to identify the user session. This is sent back to the analytics
    tool, along with request information, to identify the user and the event that
    is being tracked.
  prefs: []
  type: TYPE_NORMAL
- en: You've collected all this data – now what? By looking at aggregated users' data,
    we can gain insights into how our users are behaving. This information is the
    most powerful ally you can have when you're trying to improve your user experience.
    You can use these reports to identify trends in the kind of content your users
    like or pages where users most often leave your application, for example.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let's take a moment to talk about privacy concerns when gathering user
    data.
  prefs: []
  type: TYPE_NORMAL
- en: Privacy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Regardless of what data you intend on collecting, it is always important to
    consider the privacy of your users. A published and publicly accessible privacy
    policy is a legal requirement if you intend to store, transfer, or handle a user's
    personal information. It is also the case that the popular analytics providers,
    including *Google Analytics*, specify in their terms of service that if you are
    using their service, you must publish a privacy policy. If you do not, you are
    in breach of your contract with them and are using the tool illegally.
  prefs: []
  type: TYPE_NORMAL
- en: In addition to a privacy policy, it is also a good idea to have a cookies policy,
    if your website has visitors from Europe. As of 2018, the European Union state
    that you are required to get "clear, informed consent" from your users to use
    cookies. This normally takes the form of a banner that you display to users on
    their first visit to your site.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we understand what website analytics is, let's turn our attention to
    how we can implement the first type of them – page analytics.
  prefs: []
  type: TYPE_NORMAL
- en: Implementing page analytics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There is a multitude of tools you can use to perform page analytics. In this
    book, we are going to look at the following two:'
  prefs: []
  type: TYPE_NORMAL
- en: Google Analytics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fathom Analytics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Google Analytics** is the world''s leader in page analytics. More than half
    of all websites on the web use this tool. One of the reasons for its popularity
    is its age as it has been around since 2005\. When it was launched, there wasn''t
    much competition in the analytics space. Another reason for its popularity is
    that it''s free. It''s important to remember that if you are using a free tool
    or site, it is often the case that your data is the product. If you are concerned
    about your privacy and that of your site visitors, then perhaps Fathom Analytics
    is a better choice.'
  prefs: []
  type: TYPE_NORMAL
- en: Unlike Google, **Fathom Analytics** does not track personal data. For example,
    when a page view is logged, it only tells you it was visited, but not by who specifically.
    Fathom's script is cookie-free, which means that you do not need a cookie policy
    or cookie consent banner. As Fathom is determined to collect as little personal
    information as possible, your privacy policy can also be considerably shorter.
  prefs: []
  type: TYPE_NORMAL
- en: Important Note
  prefs: []
  type: TYPE_NORMAL
- en: Only implement one of the page analytics tools mentioned in this section. Having
    multiple scripts that accomplish the same thing is only going to make your page
    heavier.
  prefs: []
  type: TYPE_NORMAL
- en: We will discuss how to implement both page analytics tools in the following
    sections. Let's start with Google Analytics.
  prefs: []
  type: TYPE_NORMAL
- en: Adding Google Analytics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To start tracking data within our Gatsby site, we will need to obtain a measurement
    ID from Google Analytics. Let''s do this by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to [https://analytics.google.com/analytics/web/?authuser=0#/provision/create](https://analytics.google.com/analytics/web/?authuser=0#/provision/create)
    from your browser.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Give your account an **Account name** and enter your **Account Data Sharing
    Settings** preferences:![Figure 8.1 – Google Analytics account setup
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_8.01_B15983.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 8.1 – Google Analytics account setup
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The name is specific to a project, so call it something relevant. Pay attention
    to the data sharing options – only ever share with Google what you're comfortable
    sharing.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Set up a property by entering a **Property name**, **Reporting time zone** (region),
    and **Currency**:![Figure 8.2 – Google Analytics property setup
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_8.02_B15983.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 8.2 – Google Analytics property setup
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This property is specific to your website or app. In our case, this will be
    used to reference analytics from our Gatsby site, so a name such as **personal-website**
    or **my-website** would be appropriate.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Fill out the business information that Google requires and submit the form.
    You will then be presented with the following screen:![Figure 8.3 – Google Analytics
    dashboard
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_8.03_B15983.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 8.3 – Google Analytics dashboard
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This is your first look at the Google Analytics dashboard. Before we can start
    leveraging its power, we will need to set up our first data stream.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Select **Web** under the **Choose a platform** heading. This will open the following
    screen:![Figure 8.4 – Google Analytics web stream setup
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_8.04_B15983.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 8.4 – Google Analytics web stream setup
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Enter your website address under **URL** and **name** your web stream. Finally,
    submit the form by clicking **Create stream**. This will bring up the details
    of our newly created stream.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Make a note of the stream's measurement ID.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now that we have obtained the measurement ID, let''s turn our attention to
    our Gatsby site repository and use it to start gathering site statistics:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Install the necessary dependencies:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Include the `gatsby-plugin-google-gtag` plugin in your `gatsby-config.js` file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'By including this plugin in your configuration, Gatsby will append the required
    Google Analytics script to the body of your application. The plugin comes with
    plenty of options, all of which can be found here: [https://www.npmjs.com/package/gatsby-plugin-google-gtag](https://www.npmjs.com/package/gatsby-plugin-google-gtag).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: It's important to draw attention to the `anonymize_ip` gtag configuration option.
    Anonymizing the IP is a legal requirement in some countries, such as Germany.
    Without any additional configuration, the plugin will automatically send a page
    view event whenever your site's route changes.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This is a great start, but you will most likely also want to track other events
    on your site. Let's look at how we can track custom events and outbound links.
  prefs: []
  type: TYPE_NORMAL
- en: Custom events
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: There are plenty more ways to track user engagement than just page views. Websites
    today are becoming more and more interactive, so being able to track interaction
    can be very useful. We can achieve this within Google Analytics by using custom
    events. Let's look at an example of using a button click.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s assume we have a simple button component:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'To track a click of this button, we can utilize the `gtag` function, which
    is exposed in the window via the plugin:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: In the previous code block, you can see that within `onClick`, we call a `track`
    function. This function calls the `window.gtag` function conditionally, if `window`
    is defined. We need to perform this check as the function does not work when it's
    rendered on the server side.
  prefs: []
  type: TYPE_NORMAL
- en: Important Note
  prefs: []
  type: TYPE_NORMAL
- en: This plugin is for production use only. This means that any events that take
    place while you are working on the project in development will not be tracked.
    To test that the plugin is working correctly, you will need to build and serve
    the site.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we understand how custom events work, let's look at how we can track
    people leaving our site via outbound links.
  prefs: []
  type: TYPE_NORMAL
- en: Outbound links
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'It can be useful to understand where and when users navigate away from your
    site. Perhaps you reference another developer''s site within a blog post and users
    leave to visit that site? To track this kind of outbound traffic, the `gatsby-plugin-google-gtag`
    plugin contains a ready-made component – `OutboundLink`. Let''s see how we can
    use it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: As you should be able to see in this example, we can use the `OutboundLink`
    component as a direct drop-in replacement for an `a` tag. As its name suggests,
    you should only use this component for outbound links. If the link is internal,
    you should be using Gatsby's `Link` component.
  prefs: []
  type: TYPE_NORMAL
- en: Google Analytics is a great way to track your site's page analytics, but there
    is also a multitude of other tools you can use for this purpose. Let's look at
    an alternative – Fathom Analytics.
  prefs: []
  type: TYPE_NORMAL
- en: Using Fathom Analytics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Fathom Analytics is marketed as a privacy-focused alternative to Google. Google
    Analytics collects an abundance of data when users browse your site, but Fathom
    suggests that the information that is acquired is too much. Fathom collects only
    what they need to create their one-page stats dashboard. Unlike Google, Fathom
    is not free and starts at $14 per month. To start tracking data within our Gatsby
    site, we will need to obtain a site ID from Fathom Analytics. Let''s do this now
    by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to [https://usefathom.com](https://usefathom.com) from your browser
    and create an account. You will need to sign up with a credit card, but you will
    receive a 7-day free trial.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Upon account creation, you should be prompted to create a new site:![Figure
    8.5 – Fathom dashboard
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_8.05_B15983.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 8.5 – Fathom dashboard
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Give your site an appropriate name. A name such as **personal-website** would
    be appropriate. Click **Create site**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Upon submission, you will be presented with your **Site ID** and embeddable
    code for a multitude of frameworks, including Gatsby:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.6 – Fathom embed code'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_8.06_B15983.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8.6 – Fathom embed code
  prefs: []
  type: TYPE_NORMAL
- en: I suggest that you *do not* follow the instructions they provide you with for
    Gatsby. Why? Because their instructions suggest modifying the component that Gatsby
    uses to server render `head` and other parts of the HTML outside of Gatsby. There
    is no guarantee that Gatsby will keep this file consistent between versions, so
    meddling with it might make upgrading it difficult later down the line. Instead,
    simply make a note of your **Site ID**. Then, minimize your browser.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now that we have retrieved our **Site ID**, let''s turn our attention to our
    Gatsby site repository and start populating that Fathom dashboard with statistics:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Install the necessary dependencies:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Include the `gatsby-plugin-fathom` plugin in your `gatsby-config.js` file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Replace `FATHOM_SITE_ID` with the **Site ID** property that you retrieved via
    Fathom's website.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Build and serve your Gatsby site. `gatsby-plugin-fathom` is production-only,
    so we need to create and serve a production build to validate that it is working.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once your site has loaded, navigate to it. Once it has been rendered, return
    to Fathom and click **Verify site code**. It should inform you that fathom is
    all hooked up!
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, let's investigate how we can track more than page views.
  prefs: []
  type: TYPE_NORMAL
- en: Custom events (goals)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Like Google Analytics, Fathom also allow you to track custom events. Fathom
    refers to these events as "goals." To learn how we can track a goal, let's look
    at an example of using a button click.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we need to create an event via Fathom:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to your Fathom analytics dashboard. Under the **Events** section, click
    **Add event**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Give your event a name and click **Create event**. Note your event code.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now that we have an event code, let''s use it! Let''s assume we have a simple
    button component:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'To track a click of this button, we can utilize the `useGoal` function, which
    is exposed via the plugin:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: The `useGoal` hook exposes a function with a single argument, which is the value
    of your goal. Perhaps this is the purchase button, and you would like to log your
    revenue on your dashboard. If your goal has no value, set this parameter to `0`.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we understand how to track page analytics, let's look at how we can
    monitor our application for errors in production through application monitoring.
  prefs: []
  type: TYPE_NORMAL
- en: Monitoring the performance of your site
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the hardest things to debug is user errors in production that you cannot
    seem to replicate on your machine. Without logs, this can be an impossible task.
    Luckily, some tools are dedicated to monitoring errors within your application
    and alert you when things do go wrong. One of the most popular tools out there
    for this purpose is Sentry.io.
  prefs: []
  type: TYPE_NORMAL
- en: Using Sentry.io analytics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Sentry.io is a full-stack error tracking system that supports a variety of
    desktop, browser, and server applications – including GatsbyJS! Sentry works by
    integrating with our site''s logging infrastructure directly. Let''s learn how
    we can implement Sentry so that we can monitor it for production errors:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to [https://sentry.io/signup/](https://sentry.io/signup/) from your
    browser and create an account.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once you've logged in, create a new project by navigating to **Projects** and
    clicking **Create Project**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Fill in the new project user interface, like so:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.7 – Sentry initialization'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_8.07_B15983.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8.7 – Sentry initialization
  prefs: []
  type: TYPE_NORMAL
- en: Choose Gatsby as your platform. As your site is presumably going to be small
    at launch, I would suggest setting your default alert settings to **Alert me on
    every new issue**. Finally, give your project a name. Then, click **Create Project**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Sentry, then, gives you a great step-by-step guide on how to set up Sentry
    within your Gatsby project. Let''s reiterate these steps here:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Install the necessary dependencies:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Include the `@sentry/gatsby` plugin in your `gatsby-config.js` file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`sampleRate` is the rate of error events that are sent. Sentry suggests `0.7`
    as the default value, which means that 70% of error events will be sent.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'A complete list of plugin options can be found here: [https://docs.sentry.io/platforms/javascript/guides/gatsby/configuration/options/](https://docs.sentry.io/platforms/javascript/guides/gatsby/configuration/options/).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: These few lines of code are all that is needed to have Sentry start tracking
    errors and the performance of your site in production. You can rest easy knowing
    that if your site visitors encounter errors, you will know about them instantly.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we learned about website analytics and how useful they can
    be to make our application perform at its best. We learned about the different
    types of data we can collect and the regulations we should follow when collecting
    a user's data. We implemented page analytics in two different ways – one by providing
    you with an abundance of data and the other by taking a more privacy-focused stance.
    Finally, we also implemented application monitoring using Sentry.io. You should
    now feel confident collecting website analytics.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will finally bring together everything we have learned
    in the last eight chapters and deploy our website.
  prefs: []
  type: TYPE_NORMAL
