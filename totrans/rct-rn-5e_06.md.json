["```js\n<section>\n      <header>\n        <h1>Articles</h1>\n        <input placeholder=\"Title\" value={title} onChange={onChangeTitle} />\n        <input\n          placeholder=\"Summary\"\n          value={summary}\n          onChange={onChangeSummary}\n        />\n        <button onClick={onClickAdd}>Add</button>\n      </header>\n      <article>\n        <ul>\n          {articles.map((i) => (\n            <li key={i.id}>\n              <a\n                href={'#${i.id}'}\n                title=\"Toggle Summary\"\n                onClick={() => onClickToggle(i.id)}\n              >\n                {i.title}\n              </a>\n              &nbsp;\n              <button\n                href={'#${i.id}'}\n                title=\"Remove\"\n                onClick={() => onClickRemove(i.id)}\n              >\n                &#10007;\n              </button>\n              <p style={{ display: i.display }}>{i.summary}</p>\n            </li>\n          ))}\n        </ul>\n      </article>\n    </section> \n```", "```js\n const [articles, setArticles] = React.useState([\n    {\n      id: id.next(),\n      title: \"Article 1\",\n      summary: \"Article 1 Summary\",\n      display: \"none\",\n    },\n    {\n      id: id.next(),\n      title: \"Article 2\",\n      summary: \"Article 2 Summary\",\n      display: \"none\",\n    },\n  ]);\n  const [title, setTitle] = React.useState(\"\");\n  const [summary, setSummary] = React.useState(\"\"); \n```", "```js\nconst id = (function* () {\n  let i = 1;\n  while (true) {\n    yield i;\n    i += 1;\n  }\n})(); \n```", "```js\n const onChangeTitle = useCallback((e) => {\n    setTitle(e.target.value);\n  }, []);\n  const onChangeSummary = useCallback((e) => {\n    setSummary(e.target.value);\n  }, []); \n```", "```js\n const onClickAdd = useCallback(() => {\n    setArticles((state) => [\n      ...state,\n      {\n        id: id.next(),\n        title: title,\n        summary: summary,\n        display: \"none\",\n      },\n    ]);\n    setTitle(\"\");\n    setSummary(\"\");\n  }, [summary, title]); \n```", "```js\n const onClickRemove = useCallback((id) => {\n    setArticles((state) => \n      state.filter((article) => article.id !== id)\n    );\n  }, []); \n```", "```js\n const onClickToggle = useCallback((id) => {\n    setArticles((state) => {\n      const articles = [...state];\n      const index = articles.findIndex((article) => article.id === id);\n      articles[index] = {\n        ...articles[index],\n        display: articles[index].display ? \"\" : \"none\",\n      };\n      return articles;\n    });\n  }, []); \n```", "```js\n<header>\n  <h1>Articles</h1>\n  <input \n    placeholder=\"Title\" \n    value={title} \n    onChange={onChangeTitle} />\n  <input \n    placeholder=\"Summary\" \n    value={summary} \n    onChange={onChangeSummary} />\n  <button onClick={onClickAdd}>Add</button>\n</header>; \n```", "```js\n<ul>\n  {articles.map((i) => (\n    <li key={i.id}>\n      <a\n        href={`#${i.id}`}\n        title=\"Toggle Summary\"\n        onClick={() => onClickToggle(i.id)}\n      >\n        {i.title}\n      </a>\n      &nbsp;\n      <button\n        href={'#${i.id}'}\n        title=\"Remove\"\n        onClick={() => onClickRemove(i.id)}\n      >\n        &#10007;\n      </button>\n      <p style={{ display: i.display }}>{i.summary}</p>\n    </li>\n  ))}\n</ul> \n```", "```js\nfunction ArticleList({ articles, onClickToggle, onClickRemove }) {\n  return (\n    <ul>\n      {articles.map((i) => (\n        <li key={i.id}>\n          <a\n            href={'#${i.id}'}\n            title=\"Toggle Summary\"\n            onClick={() => onClickToggle(i.id)}\n          >\n            {i.title}\n          </a>\n          &nbsp;\n          <button\n            href={'#${i.id}'}\n            title=\"Remove\"\n            onClick={() => onClickRemove(i.id)}\n          >\n            &#10007;\n          </button>\n          <p style={{ display: i.display }}>{i.summary}</p>\n        </li>\n      ))}\n    </ul>\n  );\n} \n```", "```js\n <section>\n      <header>\n        <h1>Articles</h1>\n        <input placeholder=\"Title\" value={title} onChange={onChangeTitle} />\n        <input\n          placeholder=\"Summary\"\n          value={summary}\n          onChange={onChangeSummary}\n        />\n        <button onClick={onClickAdd}>Add</button>\n      </header>\n      <ArticleList\n        articles={articles}\n        onClickRemove={onClickRemove}\n        onClickToggle={onClickToggle}\n      />\n    </section> \n```", "```js\nfunction ArticleItem({ article, onClickRemove }) {\n  const [isOpened, setIsOpened] = React.useState(article.display !== \"none\");\n  const onClickToggle = React.useCallback(() => {\n    setIsOpened((state) => !state);\n  }, []);\n  return (\n    <li>\n      <a href={'#${article.id}'} title=\"Toggle Summary\" onClick={onClickToggle}>\n        {article.title}\n      </a>\n      &nbsp;\n      <button\n        href={'#${article.id}'}\n        title=\"Remove\"\n        onClick={() => onClickRemove(article.id)}\n      >\n        &#10007;\n      </button>\n      <p style={{ display: isOpened ? \"block\" : \"none\" }}>{article.summary}</p>\n    </li>\n  );\n} \n```", "```js\nfunction ArticleList({ articles, onClickRemove }) {\n  return (\n    <ul>\n      {articles.map((article) => (\n        <ArticleItem\n          key={article.id.value}\n          article={article}\n          onClickRemove={onClickRemove}\n        />\n      ))}\n    </ul>\n  );\n} \n```", "```js\nfunction AddArticle({\n  name,\n  title,\n  summary,\n  onChangeTitle,\n  onChangeSummary,\n  onClickAdd,\n}) {\n  return (\n    <section>\n      <h1>{name}</h1>\n      <input placeholder=\"Title\" value={title} onChange={onChangeTitle} />\n      <input placeholder=\"Summary\" value={summary} onChange={onChangeSummary} />\n      <button onClick={onClickAdd}>Add</button>\n    </section>\n  );\n} \n```", "```js\n<section>\n  <AddArticle\n    name=\"Articles\"\n    title={title}\n    summary={summary}\n    onChangeTitle={onChangeTitle}\n    onChangeSummary={onChangeSummary}\n    onClickAdd={onClickAdd}\n  />\n  <ArticleList articles={articles} onClickRemove={onClickRemove} />\n</section> \n```", "```js\n <section>\n      {addArticle({\n        title,\n        summary,\n        onChangeTitle,\n        onChangeSummary,\n        onClickAdd,\n      })}\n      {articleList({ articles, onClickRemove })}\n    </section> \n```", "```js\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <MyFeature\n    addArticle={({\n      title,\n      summary,\n      onChangeTitle,\n      onChangeSummary,\n      onClickAdd,\n    }) => (\n      <AddArticle\n        name=\"Articles\"\n        title={title}\n        summary={summary}\n        onChangeTitle={onChangeTitle}\n        onChangeSummary={onChangeSummary}\n        onClickAdd={onClickAdd}\n      />\n    )}\n    articleList={({ articles, onClickRemove }) => (\n      <ArticleList articles={articles} onClickRemove={onClickRemove} />\n    )}\n  />\n); \n```"]