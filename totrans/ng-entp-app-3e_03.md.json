["```js\nimport { html, reactive } from '@arrow-js/core'\nconst data = reactive({\n  items: [\n    { id: 17, task: 'Check email' },\n    { id: 21, task: 'Get groceries' },\n    { id: 44, task: 'Make dinner' },\n  ]\n})\nfunction addItem(e) {\n  e.preventDefault()\n  const input = document.getElementById('new-item')\n  data.items.push({\n    id: Math.random(),\n    task: input.value,\n  })\n  input.value = ''\n}\nhtml`\n<ul>\n  ${() => data.items.map(\n      item => html`<li>${item.task}</li>`.key(item.id)\n    )}\n</ul>\n<form @submit=\"${addItem}\">\n  <input type=\"text\" id=\"new-item\">\n  <button>Add</button>\n</form>` \n```", "```js\n$ npm create qwik@latest \n```", "```js\n$ npm create @angular -- --ssr \n```", "```js\n$ npx @angular/cli new app_name --ssr \n```", "```js\n$ npx ng add @angular/ssr \n```", "```js\nimport {provideClientHydration} from '@angular/platform-browser';\n// ...\n@NgModule({\n  // ...\n**providers****: [** **provideClientHydration****() ],** **// add this line**\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n  // ...\n} \n```", "```js\n$ npx ng generate app-shell \n```", "```js\n$ npx ng add @angular/pwa â€“project <project-name> \n```", "```js\n$ npx create-nx-workspace@latest \n```", "```js\n$ npx nx@latest init \n```"]