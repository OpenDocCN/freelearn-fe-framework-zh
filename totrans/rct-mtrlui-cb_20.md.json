["```js\nimport React, { useState } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n card: {\n    width: 135,\n    height: 135,\n    textAlign: 'center'\n  },\n  cardActions: {\n    justifyContent: 'center'\n  }\n});\n\nconst BasicComponentStyles = withStyles(styles)(({ classes }) => {\n  const [count, setCount] = useState(0);\n\n  const onIncrement = () => {\n    setCount(count + 1);\n  };\n\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography variant=\"h2\">{count}</Typography>\n      </CardContent>\n      <CardActions className={classes.cardActions}>\n        <Button size=\"small\" onClick={onIncrement}>\n          Increment\n        </Button>\n      </CardActions>\n    </Card>\n  );\n});\n\nexport default BasicComponentStyles;\n```", "```js\nconst styles = theme => ({\n  card: {\n    width: 135,\n    height: 135,\n    textAlign: 'center'\n  },\n  cardActions: {\n    justifyContent: 'center'\n  }\n});\n```", "```js\n.card {\n  width: 135\n  height: 135\n  text-align: center\n}\n\n.cardActions {\n  justify-content: center\n}\n```", "```js\n<Card className=\"card\" />\n```", "```js\nimport React, { useState } from 'react';\n\nimport { makeStyles } from '@material-ui/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    width: 135,\n    height: 135,\n    textAlign: 'center'\n  },\n  cardActions: {\n    justifyContent: 'center'\n  }\n}));\n\nexport default function BasicComponentStyles() {\n  const classes = useStyles();\n  const [count, setCount] = useState(0);\n\n  const onIncrement = () => {\n    setCount(count + 1);\n  };\n\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography variant=\"h2\">{count}</Typography>\n      </CardContent>\n      <CardActions className={classes.cardActions}>\n        <Button size=\"small\" onClick={onIncrement}>\n          Increment\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n```", "```js\nimport React, { Fragment } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  root: {\n    margin: theme.spacing(2)\n  },\n  contained: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  },\n  containedPrimary: {\n    paddingLeft: theme.spacing(4),\n    paddingRight: theme.spacing(4)\n  }\n});\n\nconst ScopedComponentStyles = withStyles(styles)(\n  ({ classes: { root, contained, containedPrimary } }) => (\n    <Fragment>\n      <Button classes={{ root }}>My Default Button</Button>\n      <Button classes={{ root, contained }} variant=\"contained\">\n        My Contained Button\n      </Button>\n      <Button\n        classes={{ root, contained, containedPrimary }}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        My Contained Primary Button\n      </Button>\n    </Fragment>\n  )\n);\n\nexport default ScopedComponentStyles;\n```", "```js\nimport React, { Fragment } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  root: {\n    margin: theme.spacing(2)\n  },\n  contained: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  },\n  containedPrimary: {\n    paddingLeft: theme.spacing(4),\n    paddingRight: theme.spacing(4)\n  }\n});\n\nconst ScopedComponentStyles = withStyles(styles)(({ classes }) => (\n  <Fragment>\n    <Button classes={classes}>My Default Button</Button>\n    <Button classes={classes} variant=\"contained\">\n      My Contained Button\n    </Button>\n    <Button classes={classes} variant=\"contained\" color=\"primary\">\n      My Contained Primary Button\n    </Button>\n  </Fragment>\n));\n\nexport default ScopedComponentStyles;\n```", "```js\nimport React, { Fragment } from 'react';\nimport { JssProvider, jss } from 'react-jss';\n\nimport {\n  withStyles,\n  createGenerateClassName\n} from '@material-ui/styles';\nimport {\n  createMuiTheme,\n  MuiThemeProvider\n} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  root: {\n    margin: theme.spacing(2)\n  },\n  contained: {\n    extend: 'root',\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  },\n  containedPrimary: {\n    extend: 'contained',\n    paddingLeft: theme.spacing(4),\n    paddingRight: theme.spacing(4)\n  }\n});\n\nconst App = ({ children }) => (\n  <JssProvider\n    jss={jss}\n    generateClassName={createGenerateClassName()}\n  >\n    <MuiThemeProvider theme={createMuiTheme()}>\n      {children}\n    </MuiThemeProvider>\n  </JssProvider>\n);\n\nconst Buttons = withStyles(styles)(({ classes }) => (\n  <Fragment>\n    <Button className={classes.root}>My Default Button</Button>\n    <Button className={classes.contained} variant=\"contained\">\n      My Contained Button\n    </Button>\n    <Button\n      className={classes.containedPrimary}\n      variant=\"contained\"\n      color=\"primary\"\n    >\n      My Contained Primary Button\n    </Button>\n  </Fragment>\n));\n\nconst ExtendingComponentStyles = () => (\n  <App>\n    <Buttons />\n  </App>\n);\n\nexport default ExtendingComponentStyles;\n```", "```js\nconst App = ({ children }) => (\n  <JssProvider\n    jss={jss}\n    generateClassName={createGenerateClassName()}\n  >\n    <MuiThemeProvider theme={createMuiTheme()}>\n      {children}\n    </MuiThemeProvider>\n  </JssProvider>\n);\n```", "```js\nconst styles = theme => ({\n  root: {\n    margin: theme.spacing(2)\n  },\n  contained: {\n    extend: 'root',\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  },\n  containedPrimary: {\n    extend: 'contained',\n    paddingLeft: theme.spacing(4),\n    paddingRight: theme.spacing(4)\n  }\n});\n```", "```js\n.Component-root-1 {\n  margin: 16px;\n}\n```", "```js\n.Component-contained-2 {\n  margin: 16px;\n  padding-top: 16px;\n  padding-bottom: 16px;\n}\n```", "```js\n.Component-containedPrimary-3 {\n  margin: 16px;\n  padding-top: 16px;\n  padding-left: 32px;\n  padding-right: 32px;\n  padding-bottom: 16px;\n}\n```", "```js\nimport React, { Fragment } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  root: {\n    margin: theme.spacing(2)\n  },\n  contained: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  },\n  containedPrimary: {\n    paddingLeft: theme.spacing(4),\n    paddingRight: theme.spacing(4)\n  }\n});\n\nconst ScopedComponentStyles = withStyles(styles)(({ classes }) => (\n  <Fragment>\n    <Button classes={classes}>My Default Button</Button>\n    <Button classes={classes} variant=\"contained\">\n      My Contained Button\n    </Button>\n    <Button classes={classes} variant=\"contained\" color=\"primary\">\n      My Contained Primary Button\n    </Button>\n  </Fragment>\n));\n\nexport default ScopedComponentStyles;\n```", "```js\nimport React from 'react';\n\nimport {\n  createMuiTheme,\n  MuiThemeProvider\n} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst defaultTheme = createMuiTheme();\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiButton: {\n      root: {\n        margin: 16\n      },\n      contained: {\n        paddingTop: defaultTheme.spacing(2),\n        paddingBottom: defaultTheme.spacing(2)\n      },\n      containedPrimary: {\n        paddingLeft: defaultTheme.spacing(4),\n        paddingRight: defaultTheme.spacing(4)\n      }\n    }\n  }\n});\n\nconst MovingStylesToThemes = ({ classes }) => (\n  <MuiThemeProvider theme={theme}>\n    <Button>My Default Button</Button>\n    <Button variant=\"contained\">My Contained Button</Button>\n    <Button variant=\"contained\" color=\"primary\">\n      My Contained Primary Button\n    </Button>\n  </MuiThemeProvider>\n);\n\nexport default MovingStylesToThemes;\n```", "```js\noverrides: {\n  MuiButton: {\n    root: {\n      margin: 16\n    },\n    contained: {\n      paddingTop: defaultTheme.spacing(2),\n      paddingBottom: defaultTheme.spacing(2)\n    },\n    containedPrimary: {\n      paddingLeft: defaultTheme.spacing(4),\n      paddingRight: defaultTheme.spacing(4)\n    }\n  }\n}\n```", "```js\nimport React, { Fragment } from 'react';\n\nimport { styled } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nimport styles from './OtherStylingOptions.module.css';\n\nconst MyStyledButton = styled(Button)({\n  margin: 16,\n  paddingTop: 16,\n  paddingBottom: 16\n});\n\nconst OtherStylingOptions = () => (\n  <Fragment>\n    <Button style={{ margin: 16 }}>My Default Button</Button>\n    <MyStyledButton variant=\"contained\">\n      My Contained Button\n    </MyStyledButton>\n    <Button\n      className={styles.primaryContained}\n      variant=\"contained\"\n      color=\"primary\"\n    >\n      My Contained Primary Button\n    </Button>\n  </Fragment>\n);\n\nexport default OtherStylingOptions;\n```", "```js\nbutton.primaryContained {\n  margin: 16px;\n  padding: 16px 32px;\n}\n```"]