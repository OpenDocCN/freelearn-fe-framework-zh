["```js\n    <template>\n        <div>{{errorMessage}}</div>\n    </template>\n    <script>\n        export default {\n            data() {\n                return {\n                    items: []\n                }\n            },\n            computed: {\n                total() {\n                    return this.items.length\n                },\n                errorMessage() {\n                    if (this.total < 1) {\n                        return 'The total must be more than zero'\n                    } else {\n                        return ''\n                    }\n                }\n            }\n        }\n    </script>\n    ```", "```js\n    The total must be more than zero\n    ```", "```js\n    <template>\n        <div>{{ formalName }}</div>\n    </template>\n    <script>\n        export default {\n            data() {\n                return {\n                    title: 'Mr.',\n                    surname: 'Smith'\n                }\n            },\n            computed: {\n                formalName() {\n                    return this.title + ' ' + this.surname\n                }\n            }\n        }\n    </script>\n    ```", "```js\n    Mr. Smith\n    ```", "```js\n    <template>\n        <div>\n            <p>{{ fullName }}</p>\n            <p>{{ totalPosts }}</p>\n            <p>{{ featuredPosts }}</p>\n        </div>\n    </template>\n    <script>\n        export default {\n            data() {\n                return {\n                    post: {\n                        fields: {\n                            author: {\n                                firstName: 'John',\n                                lastName: 'Doe'\n                            },\n                            entries: [{\n                                    title: \"Entry 1\",\n                                    content: \"Entry 1's content\",\n                                    featured: true\n                                },\n                                {\n                                    title: \"Entry 2\",\n                                    content: \"Entry 2's content\",\n                                    featured: false\n                                }\n                           ]\n                        }\n                    }\n                }\n            },\n            computed: {\n                fullName() {\n                    // Return string\n                    return this.post.fields.author.firstName + ' ' +                  this.post.fields.author.lastName\n                },\n                totalPosts() {\n                    // Return number\n                    return this.post.fields.entries.length\n                },\n                featuredPosts() {\n                    // Return string\n                    return this.post.fields.entries.filter(entry => {\n                        // If featured is true, return the entry title\n                        if (entry.featured) {\n                            return entry\n                        }\n                    })\n                }\n            }\n        }\n    </script>\n    ```", "```js\n    > cd Exercise2.01/\n    > code .\n    > yarn\n    > yarn serve\n    ```", "```js\n    <input v-model=\"firstName\" placeholder=\"First name\" />\n    ```", "```js\n    <input v-model=\"lastName\" placeholder=\"Last name\" />\n    ```", "```js\n    data() {\n        return {\n          firstName: '',\n          lastName: '',\n        }\n      },\n    ```", "```js\n    computed: {\n        fullName() {\n          return `${this.firstName} ${this.lastName}`\n        },\n      },\n    ```", "```js\n    <h3 class=\"output\">{{ fullName }}</h3>\n    ```", "```js\ndata() {\n  return {\n    count: 0\n  }\n},\ncomputed: {\n    myComputedDataProp: {\n      // getter\n      get() {\n        return this.count + 1\n      },\n      // setter\n      set(val) {\n        this.count = val - 1\n        this.callAnotherApi(this.count)\n      },\n    },\n  },\n}\n```", "```js\n  get() {\n    return this.count + 1\n  },\n```", "```js\n  set(val) {\n    this.count = val - 1\n    this.callAnotherApi(this.count)\n  },\n```", "```js\n    > cd Exercise2.02/\n    > code .\n    > yarn\n    > yarn serve\n    ```", "```js\n    <template>\n      <div class=\"container\">\n        <input type=\"number\" v-model=\"incrementOne\" />\n        <h3>Get input: {{ incrementOne }}</h3>\n      </div>\n    </template>\n    <script>\n    export default {\n      data() {\n        return {\n          count: -1,\n        }\n      },\n      computed: {\n        incrementOne: {\n          // getter\n          get() {\n            return this.count + 1\n          },\n          // setter\n          set(val) {\n            this.count = val - 1\n          },\n        },\n      },\n    }\n    </script>\n    ```", "```js\n    <template>\n      <div class=\"container\">\n        <input type=\"number\" v-model=\"incrementOne\" />\n        <h3>Get input: {{ incrementOne }}</h3>\n        <h5>Set division: {{ divideByTwo }}</h5>\n      </div>\n    </template>\n    <script>\n    export default {\n      data() {\n        return {\n          count: -1,\n          divideByTwo: 0,\n        }\n      },\n    ...\n    </script>\n    ...\n    ```", "```js\n          set(val) {\n            this.count = val - 1\n            this.divideByTwo = val / 2\n          },\n    ```", "```js\nwatch: {\n    myDataProperty: {\n        handler: function(newVal, oldVal) {\n          console.log('myDataProperty changed:', newVal, oldVal)\n        },\n        immediate: true,\n        deep: true\n    },\n}\n```", "```js\n    > cd Exercise2.03/\n    > code .\n    > yarn\n    > yarn serve\n    ```", "```js\n    <template>\n      <div class=\"container\">\n        <h1>Shop Watcher</h1>\n        <div>\n          Black Friday sale\n          <strike>Was {{ oldDiscount }}%</strike>\n          <strong> Now {{ discount }}% OFF</strong>\n        </div>\n      </div>\n    </template>\n    <script>\n    export default {\n      data() {\n        return {\n          oldDiscount: 0,\n          discount: 5,\n        }\n      },\n    }\n    </script>\n    <style lang=\"scss\" scoped>\n    .container {\n      margin: 0 auto;\n      padding: 30px;\n      max-width: 600px;\n      font-family: 'Avenir', Helvetica, sans-serif;\n      margin: 0;\n    }\n    a {\n      display: inline-block;\n      background: rgb(235, 50, 50);\n      border-radius: 10px;\n      font-size: 14px;\n      color: white;\n      padding: 10px 20px;\n      text-decoration: none;\n    }\n    </style>\n    ```", "```js\n      watch: {\n        discount(newValue, oldValue) {\n          this.oldDiscount = oldValue\n        },\n      },\n    ```", "```js\n      methods: {\n        updateDiscount() {\n          this.discount = this.discount + 5\n        },\n      },\n    ```", "```js\n        <br />\n        <a href=\"#\" @click=\"updateDiscount\">Increase Discount!</a>\n    ```", "```js\ndata() {\n  return {\n      organization: {\n        name: 'ABC',\n        employees: [\n            'Jack', 'Jill'\n        ]\n      }\n  }\n},\nwatch: {\n    organization: {\n      handler: function(v) {\n        this.sendIntercomData()\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n```", "```js\ndata() {\n  return {\n      organization: {\n        name: 'ABC',\n        employees: [\n            'Jack', 'Jill'\n        ]\n      }\n  }\n},\nwatch: {\n    'organization.name': {\n      handler: function(v) {\n        this.sendIntercomData()\n      },\n      immediate: true,\n    },\n  },\n```", "```js\n    > cd Exercise2.04/\n    > code .\n    > yarn\n    > yarn serve\n    ```", "```js\n    <template>\n      <div class=\"container\">\n        <h1>Deep Watcher</h1>\n        <div>\n            <h4>{{ product.label }}</h4>\n            <h5>${{ product.price }} (${{ discount }} Off)</h5>\n        </div>\n      </div>\n    </template>\n    <script>\n    export default {\n      data() {\n        return {\n          discount: 0,\n          product: {\n            price: 25,\n            label: 'Blue juice',\n          },\n        }\n      },\n    }\n    </script>\n    <style lang=\"scss\" scoped>\n    .container {\n      margin: 0 auto;\n      padding: 30px;\n      max-width: 600px;\n      font-family: 'Avenir', Helvetica, sans-serif;\n      margin: 0;\n    }\n    a {\n      display: inline-block;\n      background: rgb(235, 50, 50);\n      border-radius: 10px;\n      font-size: 14px;\n      color: white;\n      padding: 10px 20px;\n      text-decoration: none;\n    }\n    </style>\n    ```", "```js\n    <template>\n    ...\n        <a href=\"#\" @click=\"updatePrice\">Reduce Price!</a>\n    ...\n    </template>\n    <script>\n    ...\n      methods: {\n        updatePrice() {\n          if (this.product.price < 1) return\n          this.product.price--\n        },\n      },\n    ...\n    </script>\n    ```", "```js\n      watch: {\n        'product.price'() {\n          this.discount++\n        },\n      },\n    ```", "```js\n<template>\n    <button @click=\"getDate\">Click me</button>\n</template>\n<script>\nexport default {\n    methods: {\n        getDate() {\n            alert(date.now())\n        }\n    }\n}\n</script>\n```", "```js\n<template>\n      <div>{{ animals }}</div>\n</template>\n<script>\nexport default {\n    data() {\n        return {\n            animalList: ['dog', 'cat']\n        }\n    },\n    computed: {\n          animals() {\n              return this.animalList.slice(1)\n          }\n    }\n}\n</script>\n```", "```js\n<template>\n    <div>\n        <p id=\"not-optimal\">{{ authors[0].bio.name }}</p>\n        <p id=\"optimal\">{{ authorName }}</p>\n    </div>\n</template>\n<script>\nexport default {\n    data() {\n       return {\n           authors: [\n              {\n                 bio: {\n                    name: 'John',\n                    title: 'Dr.',\n                 }\n              }\n           ]\n       }\n    },\n    computed: {\n         authorName () {\n              return this.authors ? this.authors[0].bio.name :                 'No Name'\n         }\n    }\n}\n</script>\n```", "```js\n<template>\n    <div>\n        <button @click=\"getNewName()\">Click to generate name           </button>\n        <p v-if=\"author\">{{ author }}</p>\n    </div>\n</template>\n<script>\n    export default {\n        data() {\n            return {\n                data: {},\n                author: '',\n            }\n        },\n        watch: {\n            data: function(newVal, oldVal) {\n                this.author = newVal.first\n                alert(`Name changed from ${oldVal.first} to                   ${newVal.first}`)\n            }\n        },\n        methods: {\n            async getNewName() {\n                await fetch('https://randomuser.me/api/').                  then(response => response.json()).then(data => {\n                    this.data = data.results[0].name\n                })\n            },\n        },\n    }\n</script> \n```", "```js\n    > cd Exercise2.05/\n    > code .\n    > yarn\n    > yarn serve\n    ```", "```js\n    <script>\n    export default {\n      data() {\n        return {\n          // Shared\n          frameworkList: [\n            'Vue',\n            'React',\n            'Backbone',\n            'Ember',\n            'Knockout',\n            'jQuery',\n            'Angular',\n          ],\n          // Method\n          input: '',\n          methodFilterList: [],\n        }\n      },\n    }\n    </script>\n    ```", "```js\n    <template>\n      <div class=\"container\">\n        <h1>Methods vs watchers vs computed props</h1>\n        <div class=\"col\">\n          <input\n            type=\"text\"\n            placeholder=\"Search with method\"\n            v-model=\"input\"\n            @keyup=\"searchMethod\"\n          />\n          <ul>\n            <li v-for=\"(item, i) in methodFilterList\" :key=\"i\">          {{ item }}</li>\n          </ul>\n        </div>\n      </div>\n    </template>\n    <script>\n    export default {\n      data() {\n        return {\n          // Shared\n          frameworkList: [\n            'Vue',\n            'React',\n            'Backbone',\n            'Ember',\n            'Knockout',\n            'jQuery',\n            'Angular',\n          ],\n          // Method\n          input: '',\n          methodFilterList: [],\n        }\n      },\n      methods: {\n        searchMethod(e) {\n         console.log(e)\n        },\n      },\n    }\n    </script>\n    <style lang=\"scss\" scoped>\n    .container {\n      margin: 0 auto;\n      padding: 30px;\n      max-width: 600px;  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n    }\n    .col {\n      width: 33%;\n      height: 100%;\n      float: left;\n    }\n    input {\n      padding: 10px 6px;\n      margin: 20px 10px 10px 0;\n    }\n    </style>\n    ```", "```js\n    <script>\n    export default {\n      ...\n      created() {\n        this.searchMethod()\n      },\n      methods: {\n        searchMethod() {\n          this.methodFilterList = this.frameworkList.filter(item =>\n            item.toLowerCase().includes(this.input.toLowerCase())\n          )\n        },\n      },\n    }\n    </script>\n    ```", "```js\n    <template>\n      <div class=\"container\">\n\n       ...\n        <div class=\"col\">\n          <input type=\"text\" placeholder=\"Search with computed\"         v-model=\"input2\" />\n          <ul>\n            <li v-for=\"(item, i) in computedList\" :key=\"i\">          {{ item }}</li>\n          </ul>\n        </div>\n       ...\n      </div>\n    </template>\n    <script>\n    export default {\n      data() {\n        return {\n           ...\n          // Computed\n          input2: '',\n          ...\n\n        }\n      },\n    ...\n      computed: {\n        computedList() {\n          return this.frameworkList.filter(item => {\n            return item.toLowerCase().includes(this.input2\\.          toLowerCase())\n          })\n        },\n      },\n    ...\n    }\n    </script>\n    ```", "```js\n    <template>\n      <div class=\"container\">\n        …\n        <div class=\"col\">\n          <input type=\"text\" placeholder=\"Search with watcher\"         v-model=\"input3\" />\n          <ul>\n            <li v-for=\"(item, i) in watchFilterList\" :key=\"i\">          {{ item }}</li>\n          </ul>\n        </div>\n      </div>\n    </template>\n    <script>\n    export default {\n      data() {\n        return {\n          ...\n          // Watcher\n          input3: '',\n          watchFilterList: [],\n        }\n      },\n     ...\n    </script>\n    ```", "```js\n    <script>\n    export default {\n    ...\n      watch: {\n        input3: {\n          handler() {\n            this.watchFilterList = this.frameworkList.filter(item =>\n              item.toLowerCase().includes(this.input3.toLowerCase())\n            )\n          },\n          immediate: true,\n        },\n      },\n    ...\n    }\n    </script>\n    ```", "```js\n    > cd Exercise2.06/\n    > code .\n    > yarn\n    > yarn add axios\n    > yarn serve\n    ```", "```js\n    <template>\n      <div class=\"container\">\n        <h1>Async fetch</h1>\n        <button @click=\"getApi()\">Learn something profound</button>\n      </div>\n    </template>\n    <script>\n    import axios from 'axios'\n    export default {\n      methods: {\n        async getApi() {\n          return   axios.get('https://api.adviceslip.com/advice').        then((response) => {\n            console.log(response)\n          })\n        },\n      },\n    }\n    </script>\n\n    <style lang=\"scss\" scoped>\n    .container {\n      margin: 0 auto;\n      padding: 30px;\n      max-width: 600px;\n      font-family: 'Avenir', Helvetica, Arial, sans-serif;\n    }\n    blockquote {\n      position: relative;\n      width: 100%;\n      margin: 50px auto;\n      padding: 1.2em 30px 1.2em 30px;\n      background: #ededed;\n      border-left: 8px solid #78c0a8;\n      font-size: 24px;\n      color: #555555;\n      line-height: 1.6;\n    }\n    </style>\n    ```", "```js\n    export default {\n      data() {\n        return {\n          axiosResponse: {},\n        }\n      },\n      methods: {\n        async getApi() {\n          return axios.get('https://api.adviceslip.com/advice').        then(response => {\n            this.axiosResponse = response.data\n          })\n        },\n      },\n    }\n    ```", "```js\n    <template>\n      <div class=\"container\">\n        <h1>Async fetch</h1>\n        <button @click=\"getApi()\">Learn something profound</button>\n        <blockquote v-if=\"quote\">{{ quote }}</blockquote>\n      </div>\n    </template>\n    <script>\n    import axios from 'axios'\n    export default {\n      data() {\n        return {\n          axiosResponse: {},\n        }\n      },\n      computed: {\n        quote() {\n          return this.axiosResponse && this.axiosResponse.slip\n            ? this.axiosResponse.slip.advice\n            : null\n        },\n      },\n      methods: {\n        async getApi() {\n          return axios.get('https://api.adviceslip.com/advice').        then(response => {\n            this.axiosResponse = response.data\n          })\n        },\n      },\n    }\n    </script>\n    ```", "```js\n    <template>\n      <div class=\"container\">\n        <h1>Async fetch</h1>\n        <button @click=\"getApi()\">{{\n          loading ? 'Loading...' : 'Learn something profound'\n        }}</button>\n        <blockquote v-if=\"quote\">{{ quote }}</blockquote>\n      </div>\n    </template>\n    <script>\n    import axios from 'axios'\n    export default {\n      data() {\n        return {\n          loading: false,\n          axiosResponse: {},\n        }\n      },\n      computed: {\n        quote() {\n          return this.axiosResponse && this.axiosResponse.slip\n            ? this.axiosResponse.slip.advice\n            : null\n        },\n      },\n      methods: {\n        async getApi() {\n          this.loading = true\n          return axios.get('https://api.adviceslip.com/advice').        then(response => {\n            this.axiosResponse = response.data\n\n            setTimeout(() => {\n              this.loading = false\n            }, 4000);\n          })\n        },\n      },\n    }\n    </script>\n    ```"]