["```js\nng g s SharedData\n```", "```js\n    private selectedRecipeSubject = new BehaviorSubject<Recipe | undefined>(undefined);\n    ```", "```js\n    selectedRecipe$ = this.selectedRecipeSubject.asObservable();\n    ```", "```js\n    updateSelectedRecipe(recipe: Recipe) {\n      this.selectedRecipeSubject.next(recipe);\n    }\n    ```", "```js\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Recipe } from '../model/recipe.model';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedDataService {\n  private selectedRecipeSubject = new\n    BehaviorSubject<Recipe | undefined>(undefined);\n  selectedRecipe$ =\n    this.selectedRecipeSubject.asObservable();\n  updateSelectedRecipe(recipe: Recipe) {\n    this.selectedRecipeSubject.next(recipe);\n  }\n}\n```", "```js\n@if (filteredRecipes$ | async; as recipes) {\n<div class=\"card\">\n    <p-dataView #dv [value]=\"recipes\" [paginator]=\"true\"\n    [rows]=\"9\" filterBy=\"name\" layout=\"grid\">\n        <ng-template let-recipes pTemplate=\"gridItem\">\n            <div class=\"grid grid-nogutter\">\n                @for (recipe of recipes; track recipe) {\n                <div class=\"col-12\" style=\"cursor:\n                    pointer;\" (click)=\"editRecipe(recipe)\"\n                        class=\"recipe-grid-item card\">\n// extra code here\n</div>\n} @empty {\n<div>There are no recipes</div>\n}\n            </div>\n        </ng-template>\n    </p-dataView>\n</div>\n} @else {\n<div>There are no recipes</div>\n}\n```", "```js\neditRecipe(recipe: Recipe) {\n  this.sharedService.updateSelectedRecipe(recipe);\n  this.router.navigate(['/recipes/details']);\n}\n```", "```js\n    import { SharedDataService } from '../core/services/shared-data.service';\n    export class RecipesListComponent implements OnInit {\n      constructor(private sharedService:\n      SharedDataService) {}\n    }\n    ```", "```js\n    import { RecipeDetailsComponent } from\n    './recipe-details/recipe-details.component';\n    const routes: Routes = [\n      { path: 'recipes/details',\n      component: RecipeDetailsComponent},\n    ];\n    ```", "```js\nimport { SharedDataService } from '../core/services/shared-data.service';\nexport class RecipeDetailsComponent {\n  constructor(private sharedService: SharedDataService) { }\n  selectedRecipe$ = this.sharedService.selectedRecipe$;\n}\n```", "```js\n@if (selectedRecipe$|async;as recipe) {\n<div>\n    <span> {{recipe.title}} </span>\n    <span> {{recipe.steps}} </span>\n    <span> {{recipe.ingredients}} </span>\n</div>\n}\n```", "```js\n@if(selectedRecipe$|async; as recipe) {\n    <div>\n        <span> {{recipe.title}} </span>\n    </div>\n}\n```", "```js\n@defer {\n  <delayed-component />\n}\n```", "```js\n@defer(on viewport) {\n  <delayed-component />\n}\n```", "```js\n@defer(on viewport) {\n    <delayed-component />\n}\n@placeholder {\n    <div>Placeholder text here</div>\n}\n```", "```js\n@defer (on hover) {\n    <img class=\"recipe-image\" [src]=\"'assets/recipes/'+\n    recipe.imageUrl\" [alt]=\"recipe.title\" />\n}\n@placeholder {\n    <div>Hover to load the image</div>\n}\n```"]