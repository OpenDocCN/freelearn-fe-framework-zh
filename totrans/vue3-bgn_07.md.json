["```js\nGit switch CH07.\n```", "```js\nconst posts = reactive([]);\n```", "```js\nconst fetchPosts = () => {\n  const baseUrl = \"https://dummyapi.io/data/v1\";\n  fetch(`${baseUrl}/post?limit=5`, {\n    \"headers\": {\n      \"app-id\": \"1234567890\"\n    }\n  })\n    .then( response => response.json())\n    .then( result => {\n      posts.push(...result.data);\n    })\n}\n```", "```js\nconst posts = reactive([]);\nconst fetchPosts = () => {\n   ...\n}\nfetchPosts();\n```", "```js\n<SocialPost\n  v-for=\"(post, index) in posts\"\n  :username=\"post.owner.firstName\"\n  :id=\"post.id\"\n  :avatarSrc=\"post.image\"\n  :post=\"post.text\"\n  :likes=\"post.likes\"\n  :key=\"post.id\"\n  @delete=\"onDelete(index)\"\n></SocialPost>\n```", "```js\n    <div class=\"name\">{{ username }}</div>\n    ```", "```js\n    <div class=\"userId\">{{ userId }}</div>\n    ```", "```js\n    <IconDelete @click=\"onDeleteClick\" />\n    ```", "```js\n    const props = defineProps({\n    ```", "```js\n      username: String,\n    ```", "```js\n      userId: Number,\n    ```", "```js\n      avatarSrc: String,\n    ```", "```js\n      post: String,\n    ```", "```js\n      likes: Number,\n    ```", "```js\n      comments: Array,\n    ```", "```js\n      retweets: Number\n    ```", "```js\n    });\n    ```", "```js\n    <div class=\"interactions\">\n    ```", "```js\n      <IconHeart />\n    ```", "```js\n      {{ interactions }}\n    ```", "```js\n      <IconCommunity />\n    ```", "```js\n      {{ commentsNumber }}\n    ```", "```js\n      {{ likes }}\n    ```", "```js\n    const commentsNumber = computed( () => {\n    ```", "```js\n      return props.comments.length;\n    ```", "```js\n    });\n    ```", "```js\n    const interactions = computed( ()=> {\n    ```", "```js\n      const comments = props.comments.length;\n    ```", "```js\n      console.log(comments, props.likes, props.retweets);\n    ```", "```js\n      return comments + props.likes + props.retweets;\n    ```", "```js\n    Show comment button:\n\n    ```", "```js\n\n    ```", "```js\n\n    ```", "```js\n\n    ```", "```js\n\n    ```", "```js\n\n    ```", "```js\n\n    ```", "```js\n\n    ```", "```js\n<SocialPostComments\n  v-if=\"showComments\"\n:comments=\"comments\"\n  :post-id=\"id\"\n  @delete=\"onDeleted\"\n/>\n```", "```js\n<script setup >\n  import IconDeleteVue from '../icons/IconDelete.vue';\n  const props = defineProps({\n    comments: Array,\n    postId: String\n  })\n</script>\n```", "```js\n    import { reactive } from 'vue';\n    ```", "```js\n    const props = defineProps({\n    ```", "```js\n      postId: String\n    ```", "```js\n    });\n    ```", "```js\n    const comments = reactive([]);\n    ```", "```js\n    const fetchComments = (postId) => {  }\n    ```", "```js\n    const fetchComments = (postId) => {\n    ```", "```js\n      const baseUrl = \"https://dummyapi.io/data/v1\";\n    ```", "```js\n      fetch(`${baseUrl}/post/${postId}/comment?limit=5`,\n    ```", "```js\n      {\n    ```", "```js\n        \"headers\": {\n    ```", "```js\n          \"app-id\": \"1234567890\"\n    ```", "```js\n        }\n    ```", "```js\n      });\n    ```", "```js\n    }\n    ```", "```js\n    fetch(...)\n    ```", "```js\n      .then( response => response.json())\n    ```", "```js\n      .then( result => {\n    ```", "```js\n        Object.assign(comments, result.data);\n    ```", "```js\n    })\n    ```", "```js\n    const fetchComments = (postId) => {\n    ```", "```js\n      ...\n    ```", "```js\n    };\n    ```", "```js\n    fetchComments(props.postId);\n    ```", "```js\n<template v-if=\"comments.length === 0\"></template>\n<template v-else></template>\n```", "```js\n<template v-if=\"comments.length === 0\">\n  There are no comments for this post!\n</template>\n<template v-else>\n  <p>Comments:</p>\n  <div v-for=\"{owner, message} in comments\" class=\"comment\">\n    <p>{{ owner.firstName }}: <strong>{{ message }}</strong></p>\n  </div>\n</template>\n```", "```js\nconst fetchPosts = (page) => {\n  const baseUrl = \"https://dummyapi.io/data/v1\";\n  fetch(`${baseUrl}/post?limit=5&page=${page}`, {\n    \"headers\": {\n      \"app-id\": \"1234567890\"\n    }\n  })\n    .then( response => response.json())\n    .then( result => {\n      posts.push(...result.data);\n    })\n}\n```", "```js\nimport { reactive, ref} from 'vue';\n```", "```js\nconst page = ref(0);\n```", "```js\nfetchPosts(page.value);\n```", "```js\n<script setup>\nimport { reactive, ref, watch } from 'vue';\nimport SocialPost from '../molecules/SocialPost.vue'\nwatch(\n  posts,\n  (newValue, old) => {\n    if( newValue.length < 4 ) {\n      page.value++;\n      fetchPosts(page.value);\n    }\n  }\n)\n```", "```js\n<script setup >\nimport { reactive } from 'vue';\nconst props = defineProps({\n  postId: String\n});\nconst comments = reactive([]);\nconst fetchComments = (postId) => {\n  const baseUrl = \"https://dummyapi.io/data/v1\";\n  return fetch(`${baseUrl}/post/${postId}/comment?limit=5`,\n  {\n    \"headers\": {\n      \"app-id\": \"1234567890\"\n    }\n  })\n    .then( response => response.json())\n    .then( result => {\n      Object.assign(comments, result.data);\n    })\n};\nawait fetchComments(props.postId);\n</script>\n```", "```js\n...\n<div class=\"post\" v-text=\"post\"></div>\n<Suspense v-if=\"showComments\" >\n  <SocialPostComments\n    v-if=\"showComments\"\n    :post-id=\"id\"\n    @delete=\"onDeleted\"\n  />\n</Suspense>\n<div class=\"interactions\">\n...\n```", "```js\n<Suspense v-if=\"showComments\" >\n  <SocialPostComments\n    :post-id=\"id\"\n    @delete=\"onDeleted\"\n  />\n  <template #fallback>\n    fetching comments...\n  </template>\n</Suspense>\n```"]