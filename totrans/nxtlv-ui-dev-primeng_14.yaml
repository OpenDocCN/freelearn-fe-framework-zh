- en: '14'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '14'
- en: Building a Responsive Web Application
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建响应式Web应用程序
- en: In this chapter, you will apply your existing knowledge by building a responsive
    web application using Angular and PrimeNG components. The focus will be on creating
    an application that adapts seamlessly to different screen sizes and devices. By
    the end of this chapter, you will have a solid understanding of how to design
    and develop responsive web applications using Angular and PrimeNG.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将通过使用Angular和PrimeNG组件构建响应式Web应用程序来应用您现有的知识。重点将放在创建能够无缝适应不同屏幕尺寸和设备的应用程序上。在本章结束时，您将深入了解如何使用Angular和PrimeNG设计和开发响应式Web应用程序。
- en: The goal of this chapter is to provide you with the knowledge and skills necessary
    to build responsive web applications. You will observe how to create a project
    structure that implements responsive layouts that adapt to different screen sizes
    and leverage PrimeNG and PrimeFlex to enhance the user experience. Additionally,
    you will gain insights into deploying the application, ensuring that it reaches
    a wide audience.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的目标是为您提供构建响应式Web应用程序所需的知识和技能。您将了解如何创建一个项目结构，该结构实现响应式布局，能够适应不同的屏幕尺寸，并利用PrimeNG和PrimeFlex来提升用户体验。此外，您还将深入了解如何部署应用程序，确保它能够触及广泛的受众。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Introduction to building a responsive web application
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 响应式Web应用程序构建简介
- en: Introducing our responsive web application project
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍我们的响应式Web应用程序项目
- en: Creating the layout of the website
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建网站的布局
- en: Starting to develop the website
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开始开发网站
- en: Deploying the responsive web application
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署响应式Web应用程序
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'This chapter contains code examples for an Angular application. You can find
    the related source code in the `chapter-14` folder of the following GitHub repository:
    [https://github.com/PacktPublishing/Next-Level-UI-Development-with-PrimeNG/tree/main/apps/chapter-14](https://github.com/PacktPublishing/Next-Level-UI-Development-with-PrimeNG/tree/main/apps/chapter-14).'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本章包含Angular应用程序的代码示例。您可以在以下GitHub仓库的`chapter-14`文件夹中找到相关源代码：[https://github.com/PacktPublishing/Next-Level-UI-Development-with-PrimeNG/tree/main/apps/chapter-14](https://github.com/PacktPublishing/Next-Level-UI-Development-with-PrimeNG/tree/main/apps/chapter-14)。
- en: Introduction to building a responsive web application
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 响应式Web应用程序构建简介
- en: Responsive web applications have become a necessity in today’s digital landscape.
    With users accessing websites and applications on various devices, it is crucial
    for you to create experiences that seamlessly adapt to different screen sizes
    and orientations. In this section, we will provide an overview of responsive web
    applications and explore why they are essential in delivering a satisfying user
    experience.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 响应式Web应用程序已成为当今数字景观的必需品。随着用户在多种设备上访问网站和应用，您创建能够无缝适应不同屏幕尺寸和方向的体验至关重要。在本节中，我们将概述响应式Web应用程序，并探讨为什么它们对于提供满意的用户体验至关重要。
- en: Why responsive web applications matter
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么响应式Web应用程序很重要
- en: 'In the past, websites were primarily designed for desktop computers with fixed
    screen sizes. However, with the rapid proliferation of smartphones, tablets, and
    other mobile devices, the landscape of web browsing has dramatically changed.
    Users now expect websites and applications to be accessible across a wide range
    of devices, from large desktop monitors to small smartphone screens. Here is an
    example of a broken website on mobile:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去，网站主要是为具有固定屏幕尺寸的台式电脑设计的。然而，随着智能手机、平板电脑和其他移动设备的快速普及，网络浏览的格局发生了巨大变化。用户现在期望网站和应用能够在各种设备上访问，从大桌面显示器到小智能手机屏幕。以下是一个在移动设备上布局损坏的网站示例：
- en: '![Figure 14.1 – Example of broken layout on mobile](img/B18805_14_01.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![图14.1 – 移动设备上布局损坏的示例](img/B18805_14_01.jpg)'
- en: Figure 14.1 – Example of broken layout on mobile
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.1 – 移动设备上布局损坏的示例
- en: Based on the figure, it is evident that while the website functions properly
    on larger screens, the layout is broken on smaller devices, rendering the **Get
    Started** button unresponsive and hindering user interaction.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 根据图示，很明显，尽管该网站在较大屏幕上运行正常，但在较小设备上布局损坏，导致**开始**按钮无响应，阻碍了用户交互。
- en: Responsive web applications are designed to address this problem by dynamically
    adapting the layout and content based on the user’s device and screen size. With
    a responsive design, you can ensure that the applications are usable and visually
    appealing across different devices, improving user engagement and satisfaction.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 响应式网页应用通过根据用户的设备和屏幕尺寸动态调整布局和内容来解决这个问题。采用响应式设计，你可以确保应用在不同设备上都具有可用性和视觉吸引力，从而提高用户参与度和满意度。
- en: The benefits of responsive web applications
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 响应式网页应用的优势
- en: 'From improved user experience to increased SEO rankings, responsive web applications
    offer numerous advantages that can greatly enhance your development efforts. Let’s
    review these benefits and understand their impact:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 从提升用户体验到提高SEO排名，响应式网页应用提供了许多优势，这些优势可以极大地增强你的开发工作。让我们回顾这些好处并了解它们的影响：
- en: '**Improved user experience**: One of the primary benefits of responsive web
    applications is providing a consistent and optimized user experience across devices.
    By adapting the layout, content, and functionality to different screen sizes,
    users can easily navigate and interact with the application, regardless of the
    device they are using. This seamless experience enhances user satisfaction and
    encourages them to engage with the application for longer periods.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**提升用户体验**：响应式网页应用的主要好处之一是提供跨设备的一致和优化的用户体验。通过调整布局、内容和功能以适应不同的屏幕尺寸，用户可以轻松导航并与应用程序进行交互，无论他们使用的是哪种设备。这种无缝体验增强了用户满意度，并鼓励他们更长时间地与应用程序互动。'
- en: '**Increased reach and accessibility**: Responsive web applications have a broader
    reach as they cater to users on multiple devices. By delivering a consistent experience
    across different platforms, you can ensure that the applications are accessible
    to a larger audience. This accessibility is particularly crucial for businesses
    targeting mobile users, as mobile devices have become the primary means of accessing
    the internet for many people worldwide.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**扩大覆盖范围和可访问性**：响应式网页应用具有更广泛的覆盖范围，因为它们服务于多个设备上的用户。通过在不同平台上提供一致的经验，你可以确保应用对更广泛的受众是可访问的。这种可访问性对于面向移动用户的业务尤为重要，因为移动设备已成为全球许多人访问互联网的主要手段。'
- en: '**Search engine optimization (SEO) benefits**: Search engines, such as Google,
    prioritize mobile-friendly websites in the search results. Responsive web applications
    that provide a seamless user experience across devices are more likely to rank
    higher in **search engine results pages** (**SERPs**). By incorporating responsive
    design principles, you can improve the application’s visibility and attract more
    organic traffic.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**搜索引擎优化（SEO）优势**：搜索引擎，如谷歌，在搜索结果中优先考虑移动友好型网站。提供跨设备无缝用户体验的响应式网页应用更有可能排在**搜索引擎结果页面（SERPs）**中更高的位置。通过采用响应式设计原则，你可以提高应用的可见性并吸引更多有机流量。'
- en: Key principles of responsive web design
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 响应式网页设计的核心原则
- en: 'Responsive web design follows several key principles to ensure effective adaptation
    to different screen sizes and devices. Let’s see these principles:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 响应式网页设计遵循几个关键原则以确保对不同屏幕尺寸和设备的有效适应。让我们看看这些原则：
- en: '*Fluid grids*: Fluid grids are the foundation of responsive web design. Instead
    of using fixed pixel-based layouts, you can use proportional units, such as percentages,
    to define the width and height of elements. This allows content to flexibly adjust
    and fill the available screen space, creating a fluid and adaptable layout.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*流体网格*：流体网格是响应式网页设计的基础。而不是使用基于像素的固定布局，你可以使用比例单位，如百分比，来定义元素的宽度和高度。这允许内容灵活调整并填充可用的屏幕空间，创建一个流畅且可适应的布局。'
- en: '*Flexible images and media*: Images and media play a crucial role in web applications.
    To ensure they adapt to different screen sizes, you can utilize CSS techniques
    such as `max-width: 100%` to make images and media elements scale proportionally
    within the containers. This prevents images from overflowing or being too small
    on smaller screens.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*灵活的图片和媒体*：图片和媒体在网页应用中扮演着至关重要的角色。为了确保它们适应不同的屏幕尺寸，你可以利用CSS技术，如`max-width: 100%`，使图片和媒体元素在容器内按比例缩放。这防止了图片在较小屏幕上溢出或太小。'
- en: '*Media queries*: Media queries enable you to apply specific CSS rules based
    on the characteristics of the user’s device, such as screen size, resolution,
    and orientation. By defining breakpoints at certain screen widths, you can modify
    the layout, typography, and other elements to optimize the application’s appearance
    on different devices.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*媒体查询*：媒体查询允许您根据用户设备的特征应用特定的CSS规则，例如屏幕大小、分辨率和方向。通过在特定的屏幕宽度上定义断点，您可以修改布局、字体排印和其他元素，以优化应用程序在不同设备上的外观。'
- en: '*Mobile-first approach*: The mobile-first approach is a design philosophy that
    prioritizes designing for mobile devices first, then progressively enhancing the
    application for larger screens. By starting with a minimalistic and focused design
    for smaller screens, you can ensure that the core functionality and content are
    accessible to all users. As the screen size increases, additional features and
    layout enhancements can be introduced.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*移动优先方法*：移动优先方法是一种设计理念，它优先考虑为移动设备设计，然后逐步增强应用程序以适应更大的屏幕。通过为较小的屏幕开始一个简约和专注的设计，您可以确保核心功能和内容对所有用户都是可访问的。随着屏幕尺寸的增加，可以引入额外的功能和布局改进。'
- en: Now that you’ve gained insights into building a responsive web application,
    let’s delve into the specifics of our project. Understanding the fundamentals
    sets the stage for creating an efficient project structure and crafting a visually
    appealing and user-friendly website.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经了解了构建响应式Web应用程序的要点，让我们深入了解我们的项目具体细节。理解基础为创建高效的项目结构和制作一个视觉吸引人且用户友好的网站奠定了基础。
- en: Introducing our responsive web application project
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍我们的响应式Web应用程序项目
- en: 'Our project focuses on creating a responsive landing page that effectively
    showcases a **Software as a Service** (**SAAS**) product. The landing page consists
    of several key sections, including the header, hero, features, testimonials, pricing,
    and footer. Each section is strategically designed to engage visitors and drive
    conversions, whether by turning them into customers or capturing them as valuable
    leads. Let’s have a look at the following sketch:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的项目专注于创建一个响应式着陆页，有效地展示**软件即服务**（**SAAS**）产品。着陆页包括几个关键部分，包括页眉、英雄、功能、客户评价、定价和页脚。每个部分都是战略性地设计的，旨在吸引访客并推动转化，无论是将他们转变为客户还是将他们作为有价值的潜在客户。
- en: '![Figure 14.2 – Project initial sketch](img/B18805_14_02.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图14.2 – 项目初始草图](img/B18805_14_02.jpg)'
- en: Figure 14.2 – Project initial sketch
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.2 – 项目初始草图
- en: 'Based on the sketch, let’s examine the purpose of each section:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 根据草图，让我们检查每个部分的目的：
- en: '**Header**: The gateway to our application, the header, will feature a clean
    and intuitive navigation menu, ensuring users can effortlessly explore the various
    facets of our landing page.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**页眉**：我们的应用程序的入口，页眉将展示一个干净直观的导航菜单，确保用户可以轻松探索着陆页的各个部分。'
- en: '**Hero**: Our hero section will be a visual delight, instantly grabbing attention
    with compelling imagery and a succinct message that communicates the essence of
    our product or service. Moreover, with a strategically placed and persuasive call-to-action
    button, we will encourage visitors to take the next step, such as signing up,
    requesting a demo, or exploring our offerings further.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**英雄部分**：我们的英雄部分将是一个视觉盛宴，通过引人入胜的图像和简洁的信息立即吸引注意力，传达我们产品或服务的精髓。此外，通过放置战略性的、有说服力的行动号召按钮，我们将鼓励访客采取下一步行动，例如注册、请求演示或进一步探索我们的产品。'
- en: '**Features**: Here, users will delve into the core features that make our offering
    stand out. Each feature will be elegantly presented, accompanied by captivating
    visuals and concise descriptions.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**功能**：在这里，用户将深入了解使我们的产品脱颖而出的核心功能。每个功能都将优雅地呈现，配有吸引人的视觉元素和简洁的描述。'
- en: '**Testimonials**: Building trust is paramount, and the testimonials section
    will serve as a testament to the positive experiences of our users. Genuine quotes
    and perhaps even images will add a personal touch.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户评价**：建立信任至关重要，客户评价部分将作为我们用户积极体验的见证。真实的引言甚至可能还有图片，将增添个人化的触感。'
- en: '**Pricing**: For users ready to take the next step, the pricing section will
    provide transparent details about our offerings. We’ll strive for clarity and
    simplicity, making it easy for users to choose the plan that suits them.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**定价**：对于准备迈出下一步的用户，定价部分将提供关于我们产品或服务的透明细节。我们将努力追求清晰和简洁，使用户能够轻松选择适合他们的计划。'
- en: '**Footer**: Closing the narrative, the footer will house essential links, contact
    information, and perhaps a call-to-action button, ensuring users can seamlessly
    navigate to other parts of our site.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**页脚**：在故事的结尾，页脚将包含必要的链接、联系方式，也许还有一个行动按钮，确保用户可以无缝地导航到我们网站的其它部分。'
- en: 'Here is a sneak peek of our final product:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们最终产品的预览：
- en: '![Figure 14.3 – Finalized project](img/B18805_14_03.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![图14.3 – 最终项目](img/B18805_14_03.jpg)'
- en: Figure 14.3 – Finalized project
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.3 – 最终项目
- en: This is the completed product that we’re going to build in this chapter. For
    a better understanding of the code, please check out our GitHub repository for
    this chapter. Please note that we will mainly focus on the UI, which means these
    features such as `Login`, `Register`, or `Purchase` will not be implemented.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这是本章将要构建的最终产品。为了更好地理解代码，请查看我们GitHub仓库中的本章内容。请注意，我们将主要关注UI，这意味着像`登录`、`注册`或`购买`这样的功能将不会实现。
- en: With a clear project overview in mind, we’re ready to transition into the exciting
    phase of creating the foundational layout for our website.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在心中有了清晰的项目概述后，我们准备好过渡到创建我们网站基础布局的激动人心阶段。
- en: Creating the layout of the website
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建网站的布局
- en: 'Once we have the initial idea for our website, it becomes relatively straightforward
    to transform those sections into Angular components. Let’s have a look at the
    following transformation:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们有了我们网站的初步想法，将这些部分转换为Angular组件就相对简单了。让我们看看以下转换：
- en: '![Figure 14.4 – Breaking down sections into Angular components](img/B18805_14_04.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![图14.4 – 将部分拆分为Angular组件](img/B18805_14_04.jpg)'
- en: Figure 14.4 – Breaking down sections into Angular components
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.4 – 将部分拆分为Angular组件
- en: 'As depicted in the figure, each section is distinct and can be readily mapped
    to an Angular component. For instance, the `header` section can be assigned to
    `header.component.ts`. By following this approach, we can establish the following
    code structure as an illustrative example:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如图中所示，每个部分都是独特的，可以轻松地映射到一个Angular组件。例如，`header`部分可以分配给`header.component.ts`。通过遵循这种方法，我们可以建立以下代码结构作为示例：
- en: '[PRE0]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Each selector represents the corresponding section in our sketch or design.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 每个选择器代表我们在草图或设计中的相应部分。
- en: 'It’s pretty simple to get started to create those components by running the
    following command:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 通过运行以下命令开始创建这些组件非常简单：
- en: '[PRE1]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The command will generate a standalone `Header` component with inline styles
    and an inline template. If you prefer to generate separate files for `header.component.html`
    and `header.component.scss`, you can omit the `--inline-template` and `--inline-style`
    options. Once the `Header` component is generated, you can proceed to generate
    additional components such as `Hero`, `Features`, and more.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令将生成一个具有内联样式和内联模板的独立`Header`组件。如果您希望为`header.component.html`和`header.component.scss`生成单独的文件，可以省略`--inline-template`和`--inline-style`选项。一旦生成了`Header`组件，您就可以继续生成其他组件，如`Hero`、`Features`等。
- en: Now that we have established the essential layout of our website, it’s time
    to delve into the hands-on development process. We’ll be translating the design
    into code, bringing life to each section.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经建立了我们网站的必要布局，是时候深入实际开发过程了。我们将把设计转化为代码，为每个部分注入生命。
- en: Starting to develop the website
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始开发网站
- en: So far, we’ve laid out the blueprint for our responsive web application. Now,
    let’s dive into the implementation details of each section. Remember, our goal
    is to create a seamless and visually appealing experience using Angular, PrimeFlex,
    PrimeIcons, and PrimeNG components.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经为我们的响应式Web应用程序制定了蓝图。现在，让我们深入了解每个部分的实现细节。记住，我们的目标是使用Angular、PrimeFlex、PrimeIcons和PrimeNG组件创建一个无缝且视觉上吸引人的体验。
- en: Prerequisites
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 前置条件
- en: 'Before getting started, make sure that you have everything configured in your
    project such as `primeng`, `primeflex`, and `primeicons`. If not, you can run
    the following command:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，请确保您已经在项目中配置了一切，例如`primeng`、`primeflex`和`primeicons`。如果没有，您可以运行以下命令：
- en: '[PRE2]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'After that, check that your styling and theming are updated. Here is an example
    of a `styles.scss` file:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，检查您的样式和主题是否已更新。以下是一个`styles.scss`文件的示例：
- en: '[PRE3]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The provided code imports style files from different libraries. By importing
    these files, you are incorporating the styles, class utilities, themes, and icons
    provided by `primeflex`, `primeng`, and `primeicons` into your application, enabling
    you to utilize their features and visual styles.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 提供的代码从不同的库中导入样式文件。通过导入这些文件，您将 `primeflex`、`primeng` 和 `primeicons` 提供的样式、类工具、主题和图标纳入您的应用程序中，使您能够利用它们的功能和视觉样式。
- en: Header with navigation
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 带有导航的页眉
- en: 'The header section plays a vital role in providing users with easy navigation
    and a seamless user experience. To implement the header, we’ll start by creating
    the HTML structure and applying CSS class utilities. Here’s an example of how
    you can structure the header:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 页眉部分在为用户提供便捷的导航和无缝的用户体验方面发挥着至关重要的作用。为了实现页眉，我们将首先创建 HTML 结构并应用 CSS 类工具。以下是如何构建页眉的示例：
- en: '[PRE4]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Let’s break down the code:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解代码：
- en: '`<ul ...>...</ul>`: We’ve used a `<ul>` element to create an unordered list
    of navigation items. Each item is represented by an `<li>` element, and the corresponding
    links are wrapped in `<a>` tags. Here is the result of the navigation on desktop:'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<ul ...>...</ul>`：我们使用 `<ul>` 元素创建了一个导航项的无序列表。每个项由一个 `<li>` 元素表示，相应的链接被 `<a>`
    标签包裹。以下是桌面上的导航结果：'
- en: '![Figure 14.5 – Navigation layout on desktop](img/B18805_14_05.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.5 – 桌面上的导航布局](img/B18805_14_05.jpg)'
- en: Figure 14.5 – Navigation layout on desktop
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.5 – 桌面上的导航布局
- en: '`<a class="... lg:hidden" pStyleClass="@next" ...>`: This is the line of code
    that makes the navigation responsive on smaller devices. Let’s break it down further:'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<a class="... lg:hidden" pStyleClass="@next" ...>`：这是使导航在小设备上响应式的代码行。让我们进一步分解它：'
- en: '`lg:hidden`: This utilizes `primeflex` utilities, which will hide the hamburger
    menu on larger screens.'
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lg:hidden`：这利用了 `primeflex` 工具，将在大屏幕上隐藏汉堡菜单。'
- en: '`pStyleClass="@next"`: This `StyleClass` feature targets the next element,
    which is the `nav` element. In this case, when clicking on the hamburger menu
    on mobile devices, it will show or hide the navigation menu.'
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pStyleClass="@next"`：这个 `StyleClass` 功能针对下一个元素，即 `nav` 元素。在这种情况下，当在移动设备上点击汉堡菜单时，它将显示或隐藏导航菜单。'
- en: '`<nav class="hidden lg:flex ...>`: This represents a navigation menu that is
    hidden on small screens (`hidden`) and becomes visible on larger screens (`lg:flex`).'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<nav class="hidden lg:flex ...>`：这代表一个在小型屏幕上隐藏（`hidden`）并在大屏幕上可见（`lg:flex`）的导航菜单。'
- en: 'Here is the navigation on mobile devices:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这是移动设备上的导航：
- en: '![Figure 14.6 – Navigation on mobile devices](img/B18805_14_06.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.6 – 移动设备上的导航](img/B18805_14_06.jpg)'
- en: Figure 14.6 – Navigation on mobile devices
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.6 – 移动设备上的导航
- en: In the figure, it is noticeable that instead of displaying the complete navigation
    menu, only a hamburger icon is shown to toggle the visibility of the navigation
    menu, which will save space and provide a clean user interface.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在图中，可以明显看出，不是显示完整的导航菜单，而是只显示一个汉堡图标来切换导航菜单的可见性，这样可以节省空间并提供一个干净的用户界面。
- en: Hero section
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 英雄部分
- en: 'The hero section is a visually prominent section that immediately captures
    the attention of visitors, often including a compelling headline, a concise subheading,
    and a visually appealing image or video. The hero section aims to create a strong
    first impression and effectively communicate the value proposition of the product
    or service. Here is the simplified code for our hero section:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 英雄部分是一个视觉上突出的部分，可以立即吸引访客的注意力，通常包括一个引人注目的标题、一个简洁的副标题，以及一个视觉上吸引人的图像或视频。英雄部分旨在创造一个强烈的第一个印象，并有效地传达产品或服务的价值主张。以下是我们的英雄部分的简化代码：
- en: '[PRE5]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Overall, this code snippet represents a hero section with a heading, description,
    and a call-to-action PrimeNG button. It also includes an image that is displayed
    on medium-sized (`md:flex`) and larger screens, while hidden on smaller screens
    (`hidden`).
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，这段代码片段代表了一个带有标题、描述和 PrimeNG 调用到行动按钮的英雄部分。它还包括一个在中等尺寸（`md:flex`）和大屏幕上显示的图像，而在小型屏幕上隐藏（`hidden`）。
- en: Note
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'The following screen size breakpoints are used in PrimeFlex:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: PrimeFlex 中使用了以下屏幕尺寸断点：
- en: '- `sm`: Small screens (576 px and above)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '- `sm`：小型屏幕（576 像素及以上）'
- en: '- `md`: Medium screens (768 px and above)'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '- `md`：中等屏幕（768 像素及以上）'
- en: '- `lg`: Large screens (992 px and above)'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '- `lg`：大型屏幕（992 像素及以上）'
- en: '- `xl`: Extra-large screens (1,200 px and above)'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '- `xl`：超大屏幕（1,200 像素及以上）'
- en: 'Let’s have a look at the result:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看结果：
- en: '![Figure 14.7 – Hero section (credit to Adobe Stock)](img/B18805_14_07.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.7 – 英雄部分（感谢 Adobe Stock）](img/B18805_14_07.jpg)'
- en: Figure 14.7 – Hero section (credit to Adobe Stock)
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.7 – 英雄部分（版权所有Adobe Stock）
- en: Features section
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 特性部分
- en: 'The features section highlights the key features or benefits of the product
    or service being promoted, aiming to showcase the unique selling points of the
    product or service and convince visitors of its value. It typically includes a
    set of visually appealing icons or images, accompanied by a brief description
    of each feature. Let’s have a look at the simplified code for our features section:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 特性部分突出了推广的产品或服务的核心特性或好处，旨在展示产品或服务的独特卖点并说服访客其价值。它通常包括一组视觉上吸引人的图标或图像，并附有每个特性的简要描述。让我们看看我们特性部分的简化代码：
- en: '[PRE6]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The provided code represents an HTML structure for a section that showcases
    a set of features. It also includes an Angular directive (`*ngFor`) to dynamically
    generate feature elements based on an array of `feature` objects. Let’s break
    it down:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 提供的代码代表了一个展示一组特性的HTML结构。它还包括一个Angular指令（`*ngFor`），用于根据`feature`对象数组动态生成特性元素。让我们将其分解：
- en: '`<section id="features">`: This line defines a `<section>` element with an
    `id` attribute set to `"features"`.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<section id="features">`: 这行代码定义了一个具有`id`属性且设置为`"features"`的`<section>`元素。'
- en: '`<div class="grid justify-content-center">`: This code creates a grid-like
    layout and centers the content horizontally within the grid.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<div class="grid justify-content-center">`: 这段代码创建了一个类似网格的布局，并在网格内水平居中内容。'
- en: '`<div class="col-12 md:col-12 lg:col-4" *ngFor="let feature of features">`:
    These classes define the column layout for different screen sizes, which will
    display three columns on larger screens (`lg:col-4`) and one column on medium
    and small screens (`col-12`). The `*ngFor` directive is used to iterate over the
    `features` array, rendering multiple instances of `feature`.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<div class="col-12 md:col-12 lg:col-4" *ngFor="let feature of features">`:
    这些类定义了不同屏幕尺寸的列布局，在大屏幕上显示三列（`lg:col-4`），在中等和小屏幕上显示一列（`col-12`）。`*ngFor`指令用于遍历`features`数组，渲染多个`feature`实例。'
- en: '`features = [...]`: This `features` array contains multiple `feature` objects.
    Each `feature` object represents an individual feature and includes properties
    such as `heading`, `content`, `icon`, and `bg`, which will be shown in the template.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`features = [...]`: 这个`features`数组包含多个`feature`对象。每个`feature`对象代表一个单独的特征，并包括如`heading`、`content`、`icon`和`bg`等属性，这些属性将在模板中显示。'
- en: Note
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The 12-grid system is a widely used framework in web design and layout. It divides
    the screen into 12 equal columns, providing a flexible and responsive grid structure.
    This system allows designers and developers to easily create responsive designs
    by allocating and aligning elements across the grid. We discussed this, along
    with PrimeFlex, in [*Chapter 6*](B18805_06.xhtml#_idTextAnchor117).
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 12网格系统是网页设计和布局中广泛使用的框架。它将屏幕划分为12个相等的列，提供了一个灵活且响应式的网格结构。这个系统允许设计师和开发者通过在网格中分配和排列元素来轻松创建响应式设计。我们讨论了这一点，以及PrimeFlex，在[*第6章*](B18805_06.xhtml#_idTextAnchor117)。
- en: 'Here is the result:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是结果：
- en: '![Figure 14.8 – Features section](img/B18805_14_08.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![图14.8 – 特性部分](img/B18805_14_08.jpg)'
- en: Figure 14.8 – Features section
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.8 – 特性部分
- en: Testimonials section
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 推荐部分
- en: 'The testimonials section provides social proof by showcasing positive feedback
    or reviews from satisfied customers. It includes testimonials in the form of quotes,
    customer names, and possibly their profile pictures. This section aims to build
    trust and credibility, reassuring potential customers that they are making the
    right choice. Here is the simplified code of our testimonials section:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐部分通过展示满意的客户的积极反馈或评论来提供社会证据。它包括以引言、客户姓名和可能还有他们的个人照片形式的推荐。本部分旨在建立信任和信誉，向潜在客户保证他们做出了正确的选择。以下是我们的推荐部分的简化代码：
- en: '[PRE7]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The provided code represents a structure for a testimonial section that utilizes
    the PrimeNG `Carousel` component. Let’s break it down:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 提供的代码代表了一个利用PrimeNG `Carousel`组件的推荐部分结构。让我们将其分解：
- en: '`<p-carousel ...>`: This code will create a carousel and it accepts several
    input properties:'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<p-carousel ...>`: 这段代码将创建一个轮播图，并接受多个输入属性：'
- en: '`[value]` is set to the `testimonials` array, which provides the data for the
    testimonials displayed in the carousel'
  id: totrans-113
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[value]`设置为`testimonials`数组，它提供了在轮播图中显示的推荐内容的数据。'
- en: '`[numVisible]` is set to `1`, indicating that only one testimonial item should
    be visible at a time'
  id: totrans-114
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[numVisible]`设置为`1`，表示每次只应显示一个推荐项目。'
- en: '`[numScroll]` is set to `1`, indicating that the carousel should scroll one
    testimonial item at a time'
  id: totrans-115
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[numScroll]`设置为`1`，表示轮播图应每次滚动一个简介项目。'
- en: '`[circular]` is set to `true`, indicating that the carousel should wrap around
    and start from the beginning after reaching the end'
  id: totrans-116
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[circular]`设置为`true`，表示轮播图应循环并从开始处重新开始，当达到末尾时。'
- en: '`[autoplayInterval]` is set to `3000`, indicating that the carousel should
    automatically transition to the next testimonial every 3 seconds'
  id: totrans-117
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[autoplayInterval]`设置为`3000`，表示轮播图应每3秒自动过渡到下一个简介。'
- en: '`<ng-template let-testimonial pTemplate="item">`: This code will set the value
    of each `testimonial` object to the `testimonial` variable and will be used to
    render the testimonial detail inside the item template.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<ng-template let-testimonial pTemplate="item">`：这段代码将每个`testimonial`对象的值设置为`testimonial`变量，并将用于在项目模板内渲染简介详情。'
- en: '`testimonials = [...]`: This array contains multiple testimonial objects. Each
    testimonial object represents an individual testimonial and includes properties
    such as `name`, `title`, `content`, and `company`.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`testimonials = [...]`：这个数组包含多个简介对象。每个简介对象代表一个单独的简介，并包括如`name`、`title`、`content`和`company`等属性。'
- en: 'Here is the result:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是结果：
- en: '![Figure 14.9 – Testimonials section](img/B18805_14_09.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![图14.9 – 简介部分](img/B18805_14_09.jpg)'
- en: Figure 14.9 – Testimonials section
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.9 – 简介部分
- en: Pricing section
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 价格部分
- en: 'The pricing section presents the different pricing options or packages available
    for the product or service. It typically includes a comparison table, outlining
    the features and pricing details of each package. The pricing section aims to
    help potential customers make an informed decision and choose the package that
    best suits their needs. Here is our simplified code for the pricing table:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 价格部分展示了产品或服务可用的不同定价选项或套餐。它通常包括一个比较表格，概述了每个套餐的功能和定价细节。价格部分的目的是帮助潜在客户做出明智的决定，并选择最适合他们需求的套餐。以下是我们的简化版定价表格代码：
- en: '[PRE8]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The provided code represents a pricing section that displays different plans
    using a grid layout. Let’s break it down:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 提供的代码代表一个使用网格布局显示不同套餐的价格部分。让我们来分解它：
- en: '`<div class="grid">`: This will create a grid-like layout for our `pricing`
    section.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<div class="grid">`：这将为我们创建一个类似网格的布局。'
- en: '`<div class="col-12 lg:col-4" *ngFor="let plan of plans">`: These classes define
    the column layout for different screen sizes, which will show one plan on small
    and medium screens and three pricing plans on larger screens. The `*ngFor` directive
    is used to iterate over the `plans` array, rendering our pricing table to the
    DOM.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<div class="col-12 lg:col-4" *ngFor="let plan of plans">`：这些类定义了不同屏幕尺寸的列布局，在小屏幕和中屏幕上显示一个套餐，在大屏幕上显示三个定价套餐。`*ngFor`指令用于遍历`plans`数组，将我们的定价表格渲染到DOM中。'
- en: '`<li ... *ngFor="let feature of plan.features">`: This will loop the features
    in the plan and render each feature to the list under the unordered list.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<li ... *ngFor="let feature of plan.features">`：这将遍历套餐中的功能，并将每个功能渲染到无序列表下。'
- en: '`plans = [...]`: This code represents the `plans` array that contains multiple
    `plan` objects. Each `plan` object represents an individual plan and includes
    properties such as `name`, `price`, `features`, and the call-to-action button.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`plans = [...]`：这段代码代表包含多个`plan`对象的`plans`数组。每个`plan`对象代表一个单独的套餐，并包括如`name`、`price`、`features`和行动号召按钮等属性。'
- en: 'Let’s have a look at our pricing section:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看我们的价格部分：
- en: '![Figure 14.10 – Pricing section](img/B18805_14_10.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![图14.10 – 价格部分](img/B18805_14_10.jpg)'
- en: Figure 14.10 – Pricing section
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.10 – 价格部分
- en: Footer section
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 页脚部分
- en: 'The footer section is the bottommost part of the landing page, usually containing
    additional navigation links, contact information, and copyright notices. It serves
    as a navigational aid, allowing users to access important links or contact the
    company for further inquiries. Here is the simplified code for our footer section:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 页脚部分是着陆页的最低部分，通常包含额外的导航链接、联系信息和版权声明。它作为导航辅助工具，使用户能够访问重要链接或联系公司进行进一步咨询。以下是我们的页脚部分的简化代码：
- en: '[PRE9]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The provided code represents a footer section. Let’s break it down:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 提供的代码代表页脚部分。让我们来分解它：
- en: '`<div class="grid justify-content-between">`: This line creates a grid-like
    layout with items aligned between the start and end of the container.'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<div class="grid justify-content-between">`：这一行创建了一个具有项目在容器起始和结束之间对齐的类似网格的布局。'
- en: '`<div class="col-12 md:col-2">`: This line defines the column layout for different
    screen sizes for the logo. In this case, it specifies that the column should occupy
    the entire width for small screens (`col-12`) and 2 columns out of 12 for medium-sized
    screens (`md:col-2`).'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<div class="col-12 md:col-2">`: 这行代码定义了不同屏幕尺寸下标志的列布局。在这种情况下，它指定列应占据小屏幕的全宽（`col-12`），以及中等屏幕的12列中的2列（`md:col-2`）。'
- en: '`<div class="col-12 md:col-10 lg:col-7">`: This line defines the column layout
    for different screen sizes for the navigation. In this case, it specifies that
    the column should occupy the entire width for small screens (`col-12`), 10 columns
    out of 12 for medium-sized screens (`md:col-10`), and 7 columns out of 12 for
    large screens (`lg:col-7`). Let’s also look into the navigation detail of the
    footer:'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<div class="col-12 md:col-10 lg:col-7">`: 这行代码定义了不同屏幕尺寸下导航的列布局。在这种情况下，它指定列应占据小屏幕的全宽（`col-12`），中等屏幕的12列中的10列（`md:col-10`），以及大屏幕的12列中的7列（`lg:col-7`）。让我们也看看页脚的导航细节：'
- en: '`<div class="grid text-center md:text-left">`: This code creates a grid-like
    layout with text alignment centered for small screens (`text-center`) and left-aligned
    for medium-sized screens (`md:text-left`).'
  id: totrans-141
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<div class="grid text-center md:text-left">`: 这段代码创建了一个具有文本居中对齐的网格布局，适用于小屏幕（`text-center`），而对于中等屏幕则左对齐（`md:text-left`）。'
- en: '`<div class="col-12 md:col-4">`: This line defines the layout for each navigation
    section. In small screens (`col-12`), the navigation will be full width; however,
    on medium to large-sized screens, the navigation will be divided into three sections
    (`md:col-4`).'
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<div class="col-12 md:col-4">`: 这行代码定义了每个导航部分的布局。在小屏幕（`col-12`）上，导航将占据全宽；然而，在中等或大屏幕上，导航将分为三个部分（`md:col-4`）。'
- en: 'Let’s have a look at the result:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看结果：
- en: '![Figure 14.11 – Footer section](img/B18805_14_11.jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![图14.11 – 页脚部分](img/B18805_14_11.jpg)'
- en: Figure 14.11 – Footer section
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.11 – 页脚部分
- en: 'As we conclude the development phase, our responsive web application is now
    ready for its live deployment. Let’s embark on the final step of our journey:
    the production deployment process.'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 随着开发阶段的结束，我们的响应式Web应用程序现在已准备好进行实时部署。让我们开始我们旅程的最后一步：生产部署过程。
- en: Deploying the responsive web application
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署响应式Web应用程序
- en: Congratulations! You’ve successfully built a responsive web application using
    Angular, PrimeFlex, PrimeIcons, and PrimeNG components. Now, it’s time to share
    your creation with the world. Deploying a web application involves several crucial
    steps, from preparing the project for production to choosing the right deployment
    platform. Let’s explore each of these aspects to ensure a smooth deployment process.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您已成功使用Angular、PrimeFlex、PrimeIcons和PrimeNG组件构建了一个响应式Web应用程序。现在，是时候将您的作品与世界分享了。部署Web应用程序涉及几个关键步骤，从为生产准备项目到选择正确的部署平台。让我们探讨这些方面，以确保部署过程顺利。
- en: Getting the project ready for production
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备项目以投入生产
- en: 'Before deploying your web application, it’s essential to ensure that everything
    is optimized and ready for production. Here are a few key steps to follow:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在部署您的Web应用程序之前，确保一切已优化并准备好投入生产至关重要。以下是需要遵循的几个关键步骤：
- en: '*Optimize assets*: Make sure to optimize your images to reduce their file size
    and improve loading times. You can use tools such as image compressors to achieve
    this. Here is an example of how to serve different images in different screen
    sizes:'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*优化资源*：确保优化您的图片以减小其文件大小并提高加载时间。您可以使用图像压缩工具来实现这一点。以下是如何在不同屏幕尺寸下提供不同图片的示例：'
- en: '[PRE10]'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: In the code, the `<picture>` element is used to define a container for multiple
    image sources. Inside the `<picture>` element, the `<source>` elements are used
    to specify different image sources based on the media query conditions. For example,
    the `image-small.jpg` image source will be served when the screen width is at
    a maximum of 576 pixels.
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在代码中，使用`<picture>`元素来定义多个图像源的容器。在`<picture>`元素内部，使用`<source>`元素根据媒体查询条件指定不同的图像源。例如，当屏幕宽度最大为576像素时，将提供`image-small.jpg`图像源。
- en: '*Configure environment variables*: If your application relies on environment
    variables, ensure that they are properly configured for the production environment.
    This may include API keys, database connection strings, or other sensitive information.'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*配置环境变量*：如果您的应用程序依赖于环境变量，请确保它们已为生产环境正确配置。这可能包括API密钥、数据库连接字符串或其他敏感信息。'
- en: '*Set up error logging*: Implement error logging to capture and track any runtime
    errors that may occur in the production environment. Tools such as Sentry or Rollbar
    can help you track and diagnose issues effectively.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*设置错误日志*: 实现错误日志来捕获和跟踪生产环境中可能发生的任何运行时错误。Sentry 或 Rollbar 等工具可以帮助你有效地跟踪和诊断问题。'
- en: By following these steps, you can ensure that your web application is optimized
    and ready for deployment.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 通过遵循这些步骤，你可以确保你的 Web 应用程序已优化并准备好部署。
- en: 'After that, you can run the following command to build your application:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，你可以运行以下命令来构建你的应用程序：
- en: '[PRE11]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: You can see that after running the build, we created 3 chunk files with a total
    time of 11.871 seconds.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到，在运行构建后，我们创建了 3 个块文件，总耗时为 11.871 秒。
- en: 'If you are using Angular 17, your compiled files are likely under `dist/chapter-14/browser`,
    like so:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是 Angular 17，你的编译文件可能位于 `dist/chapter-14/browser`，如下所示：
- en: '![Figure 14.12 – Compiled project folder](img/B18805_14_12.jpg)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.12 – 编译后的项目文件夹](img/B18805_14_12.jpg)'
- en: Figure 14.12 – Compiled project folder
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.12 – 编译后的项目文件夹
- en: For an Angular version less than 17, it will be under `dist/chapter-14`.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 对于小于 17 版本的 Angular，它将位于 `dist/chapter-14`。
- en: Different options for deployment
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 部署的不同选项
- en: 'Once your project is production-ready, the next step is to choose a deployment
    platform. Several platforms offer seamless deployment for Angular applications.
    Let’s explore a few popular options:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你的项目准备就绪，下一步就是选择一个部署平台。几个平台为 Angular 应用程序提供无缝部署。让我们探索一些流行的选项：
- en: '*Firebase Hosting*: Firebase Hosting ([https://firebase.google.com/docs/hosting](https://firebase.google.com/docs/hosting))
    provides a fast and secure way to host your web application. It supports continuous
    deployment, SSL, and custom domains. Here is how we start to initialize and deploy
    the project to Firebase:'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Firebase Hosting*: Firebase Hosting ([https://firebase.google.com/docs/hosting](https://firebase.google.com/docs/hosting))
    提供了一种快速且安全的方式来托管你的 Web 应用程序。它支持持续部署、SSL 和自定义域名。以下是初始化和部署项目到 Firebase 的示例：'
- en: '[PRE12]'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '*Vercel*: Vercel ([https://vercel.com](https://vercel.com)) offers a zero-configuration
    platform for deploying frontend applications. It integrates with your version
    control system for automatic deployments. Here is how we deploy the project using
    the Vercel CLI:'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Vercel*: Vercel ([https://vercel.com](https://vercel.com)) 提供了一个零配置的平台，用于部署前端应用程序。它与你的版本控制系统集成，实现自动部署。以下是使用
    Vercel CLI 部署项目的示例：'
- en: '[PRE13]'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '*Netlify*: Netlify ([https://www.netlify.com](https://www.netlify.com)) is
    a powerful platform that automates your build and deployment pipeline. It supports
    continuous integration and deploys directly from your Git repository. Here is
    an example of deploying to Netlify from your local machine:'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Netlify*: Netlify ([https://www.netlify.com](https://www.netlify.com)) 是一个强大的平台，它可以自动化你的构建和部署流程。它支持持续集成，并可直接从你的
    Git 仓库进行部署。以下是从本地机器部署到 Netlify 的一个示例：'
- en: '[PRE14]'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '*GitHub Pages*: If your code is hosted on GitHub, GitHub Pages is a straightforward
    option. It automatically deploys your app when you push changes to the `gh-pages`
    branch. You can learn more at [https://docs.github.com/en/pages/getting-started-with-github-pages](https://docs.github.com/en/pages/getting-started-with-github-pages).'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*GitHub Pages*: 如果你的代码托管在 GitHub 上，GitHub Pages 是一个简单直接的选择。当你向 `gh-pages` 分支推送更改时，它会自动部署你的应用程序。你可以在
    [https://docs.github.com/en/pages/getting-started-with-github-pages](https://docs.github.com/en/pages/getting-started-with-github-pages)
    上了解更多信息。'
- en: These are suggested hosting sites where you can deploy your Angular application,
    but you are free to deploy it anywhere you prefer. If you have your own hosting
    provider, simply upload the contents of the compiled files to your hosting provider,
    and it will serve your site seamlessly.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是建议的托管站点，你可以在这里部署你的 Angular 应用程序，但你也可以自由选择其他任何你喜欢的位置。如果你有自己的托管提供商，只需将编译文件的
    内容上传到你的托管提供商，它将无缝地为你提供服务。
- en: Final notes after deployment
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 部署后的注意事项
- en: 'Congratulations, your web application is live! Before celebrating, consider
    these final notes:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜，你的 Web 应用程序已上线！在庆祝之前，请考虑以下注意事项：
- en: '*Monitor performance*: Regularly monitor your application’s performance using
    tools such as Google Lighthouse or WebPageTest. Address any issues that may impact
    user experience.'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*监控性能*: 定期使用 Google Lighthouse 或 WebPageTest 等工具监控你的应用程序性能。解决可能影响用户体验的任何问题。'
- en: '*Security considerations*: Ensure that your deployed application follows best
    practices for web security. Use HTTPS, keep dependencies updated, and implement
    secure authentication mechanisms if applicable.'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*安全考虑*：确保您的部署应用程序遵循 Web 安全的最佳实践。使用 HTTPS，保持依赖项更新，并在适用的情况下实施安全的身份验证机制。'
- en: '*User feedback*: Encourage users to provide feedback on your application. Monitor
    user reviews, comments, and error reports to continuously improve the user experience.'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*用户反馈*：鼓励用户对您的应用程序提供反馈。监控用户评价、评论和错误报告，以持续改进用户体验。'
- en: '*Documentation*: Update your project’s documentation to reflect any changes
    made during deployment. Include information on how others can contribute or report
    issues.'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*文档更新*：更新您项目的文档以反映部署期间所做的任何更改。包括有关他人如何贡献或报告问题的信息。'
- en: '*Stay updated*: Keep an eye on updates to Angular, PrimeNG, and any third-party
    libraries you’re using. Regularly update your dependencies to benefit from new
    features and security patches.'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*保持更新*：关注 Angular、PrimeNG 以及您使用的任何第三方库的更新。定期更新您的依赖项，以从新功能和安全补丁中受益。'
- en: In conclusion, deploying a web application involves careful preparation and
    the selection of an appropriate platform. By following best practices and choosing
    a reliable deployment option, you can ensure that your responsive web application
    reaches its audience seamlessly.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，部署 Web 应用程序涉及仔细的准备和选择合适的平台。通过遵循最佳实践和选择可靠的部署选项，您可以确保您的响应式 Web 应用程序无缝地达到其受众。
- en: Summary
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Congratulations on completing the journey of building a responsive web application
    with Angular and PrimeNG components! In this final chapter, you’ve acquired essential
    insights into creating an efficient project structure, implementing responsive
    layouts, integrating various PrimeNG elements, and deploying your application
    to share it with the world.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜您使用 Angular 和 PrimeNG 组件完成响应式 Web 应用程序的构建之旅！在本章的最后一部分，您已经获得了创建高效项目结构、实现响应式布局、集成各种
    PrimeNG 元素以及将应用程序部署到与全世界分享的必要见解。
- en: Throughout the chapter, we’ve learned that building responsive web applications
    is crucial in today’s digital landscape. Users access applications from various
    devices and responsiveness ensures a consistent and enjoyable user experience
    across desktops, tablets, and mobile devices. The knowledge gained in this chapter
    empowers you to create applications that adapt to different screen sizes, providing
    accessibility to a broader audience.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们了解到在当今的数字景观中，构建响应式 Web 应用程序至关重要。用户从各种设备访问应用程序，响应性确保了桌面、平板电脑和移动设备上的一致且愉悦的用户体验。本章中获得的知识使您能够创建适应不同屏幕尺寸的应用程序，为更广泛的受众提供可访问性。
- en: As you move forward, the journey offers opportunities for growth and exploration.
    Continuously enhance your application, stay updated on Angular and PrimeNG releases,
    and explore advanced topics such as PWAs and server-side rendering. Consider contributing
    to the open source community and expanding your skills into related technologies.
    Embrace the path of continuous learning and innovation in web development.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 随着您继续前进，这段旅程提供了成长和探索的机会。持续提升您的应用程序，关注 Angular 和 PrimeNG 的发布，并探索高级主题，如 PWA 和服务器端渲染。考虑为开源社区做出贡献，并将您的技能扩展到相关技术。拥抱在
    Web 开发中持续学习和创新的路径。
- en: In conclusion, building a responsive web application is a rewarding endeavor
    that opens doors to a myriad of possibilities. Whether you’re creating projects
    for clients, users, or personal satisfaction, the knowledge gained in this book
    equips you with the tools to deliver exceptional user experiences. As you move
    forward, embrace the journey of continuous learning and innovation in the dynamic
    field of web development. Happy coding!
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，构建响应式 Web 应用程序是一项有益的尝试，它打开了众多可能性的大门。无论您是为客户、用户还是为了个人满足感创建项目，本书中获得的知识都为您提供了提供卓越用户体验的工具。随着您继续前进，拥抱在动态的
    Web 开发领域中持续学习和创新的旅程。祝您编码愉快！
