["```js\nversion: '3'\nservices:\n  web:\n    build: .\n    ports:\n     - \"5000:5000\"\n  redis:\n    image: \"redis:alpine\"\n```", "```js\nversion: '3'\nCOMPOSE_PROJECT_NAME: \"myapp\"\nservices:\n  web:\n    build: .\n    ports:\n     - \"5000:5000\"\n  redis:\n    image: \"redis:alpine\"\n```", "```js\napiVersion: v1\nkind: Service\nmetadata:\n name: nginxsvc\n labels:\n app: nginx\nspec:\n type: NodePort\n ports:\n - port: 80\n protocol: TCP\n name: http\n - port: 443\n protocol: TCP\n name: https\n selector:\n app: nginx\n```", "```js\nversion: '2'\n```", "```js\nservices:\n    gateway-app:\n        image: 'gateway'\n        environment: \n            - SPRING_PROFILES_ACTIVE=prod,swagger\n            - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://admin:$${jhipster.registry.password}@jhipster-registry:8761/eureka\n            - SPRING_CLOUD_CONFIG_URI=http://admin:$${jhipster.registry.password}@jhipster-registry:8761/config\n            - SPRING_DATASOURCE_URL=jdbc:mysql://gateway-mysql:3306/gateway?.....\n            - JHIPSTER_SLEEP=30\n        ports:\n            8080:8080\n```", "```js\n   gateway-mysql:\n        extends:\n            file: mysql.yml\n            service: gateway-mysql.yml\n```", "```js\nversion: '2'\nservices:\n    gateway-mysql: \n        image: mysql:5.7.20 \n        # volumes: \n        # - ~/volumes/jhipster/gateway/mysql/:/var/lib/mysql/ \n        environment: \n            - MYSQL_USER=root \n            - MYSQL_ALLOW_EMPTY_PASSWORD=yes \n            - MYSQL_DATABASE=gateway \n        ports: \n            - 3306:3306 \n        command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8 --explicit_defaults_for_timestamp\n```", "```js\n    jhipster-registry:\n        extends:\n            file: jhipster-registry.yml\n            service: jhipster-registry\n        environment:\n            - SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCH_LOCATIONS=file:./central-config/docker-config/\n\n```", "```js\nversion: '2'\nservices:\n    jhipster-registry:\n        image: jhipster/jhipster-registry:v3.2.3\n    volumes:\n        - ./central-server-config:/central-config\n    # When run with the \"dev\" Spring profile, the JHipster Registry will\n    # read the config from the local filesystem (central-server-config directory)\n    # When run with the \"prod\" Spring profile, it will read the configuration from a Git             repository\n        # See http://www.jhipster.tech/microservices-architecture/#registry_app_configuration\n    environment:\n        - SPRING_PROFILES_ACTIVE=dev\n        - SECURITY_USER_PASSWORD=admin\n        - JHIPSTER_REGISTRY_PASSWORD=admin\n        - SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCH_LOCATIONS=file:./central-config/localhost-config/\n        # - GIT_URI=https://github.com/jhipster/jhipster-registry/\n        # - GIT_SEARCH_PATHS=central-config\n    ports:\n        - 8761:8761\n```", "```js\n# Common configuration shared between all applications\nconfigserver:\n    name: Docker JHipster Registry\n    status: Connected to the JHipster Registry running in Docker\njhipster:\n    security:\n        authentication:\n            jwt:\n                secret: my-secret-token-to-change-in-production\neureka:\n    client:\n        service-url:\n            defaultZone: http://admin:${jhipster.registry.password}@localhost:8761/eureka/\n```", "```js\nversion: '2'\nservices:\n    gateway-sonar:\n        image: sonarqube:6.5-alpine\n        ports:\n            - 9000:9000\n            - 9092:9092\n```", "```js\n> cd gateway\n```", "```js\n> ./gradlew bootRepackage -Pprod buildDocker\n```", "```js\n> docker-compose -f src/main/docker/app.yml up -d\n```", "```js\n> ./gradlew bootRepackage -Pprod buildDocker\n```", "```js\n> docker-compose -f <filename> -d\n```", "```js\n> docker ps -a\n```", "```js\n> mkdir docker-compose && cd docker-compose\n```", "```js\n jhipster docker-compose \n```", "```js\n> docker-compose up -d\n```", "```js\n> git clone https://github.com/jhipster/jhipster-console\n```", "```js\nmetrics: # DropWizard Metrics configuration, used by MetricsConfiguration    \n    ...\n    logs: # Reports Dropwizard metrics in the logs\n        enabled: true\n        report-frequency: 60 # in seconds\nlogging:\n    logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration\n        enabled: true\n        host: localhost\n        port: 5000\n        queue-size: 512\n```", "```js\n> cd jhipster-console\n> docker-compose up -d\n```", "```js\n> docker-compose scale <app-name>=<scale to>\n\n```", "```js\n> docker-compose scale invoice-app=2\n```"]