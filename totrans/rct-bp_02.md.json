["```js\n\"devDependencies\": {\n  \"babel-preset-es2015\": \"6.9.0\",\n  \"babel-preset-react\": \"6.11.1\",\n  \"babelify\": \"7.3.0\",\n  \"browser-sync\": \"2.13.0\",\n  \"browserify\": \"13.0.1\",\n  \"browserify-middleware\": \"7.0.0\",\n  \"history\": \"3.0.0\",\n  \"jsxstyle\": \"0.0.18\",\n  \"lodash\": \"4.13.1\",\n  \"react\": \"15.1.0\",\n  \"react-bootstrap\": \"0.29.5\",\n  \"react-dom\": \"15.1.0\",\n  \"react-router\": \"2.5.2\",\n  \"react-router-bootstrap\": \"0.23.0\",\n  \"reactify\": \"1.1.1\",\n  \"reflux\": \"0.4.1\",\n  \"serve-favicon\": \"2.3.0\",\n  \"superagent\": \"2.1.0\",\n  \"uglifyjs\": \"2.4.10\",\n  \"watchify\": \"3.7.0\"\n}\n```", "```js\n<link rel=\"stylesheet\" type=\"text/css\" href=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap-glyphicons.css\" />\n\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css\" />\n```", "```js\n<!--[if lt IE 9]>\n  <script>\n    (function() {\n      var ef = function(){};\n      window.console = window.console || {log:ef,warn:ef,error:ef,dir:ef};\n    }());\n  </script>\n  <script src=\"img/html5shiv.min.js\"></script>\n  <script src=\"img/html5shiv-printshiv.min.js\"></script>\n  <script src=\"img/jquery.min.js\"></script>\n  <script src=\"img/es5-shim.js\"></script>\n  <script src=\"img/es5-sham.js\"></script>\n<![endif]-->\n```", "```js\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n```", "```js\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n```", "```js\nbody {\n  background:#eee;\n  padding:62px 0 0 0;\n}\n.row {\n  padding:0 0 20px 0;\n}\n.summary {\n  border-bottom: 3px double black;\n}\n```", "```js\n\"use strict\";\n\nimport React from \"react\";\nimport Router from \"react-router\";\nimport Routes from \"./routes.jsx\";\nimport { render } from \"react-dom\";\n\nrender (\n  Routes,\n  document.getElementById('container')\n);\n```", "```js\n\"use strict\";\n\nimport React from \"react\";\nimport Layout from './layout.jsx';\nimport { Router, Route, browserHistory } from 'react-router'\n\nconst Routes = (\n  <Router history={browserHistory}>\n  <Route handler={Layout} path=\"/\">\n  </Route>\n  </Router>\n);\n\nmodule.exports = Routes;\n```", "```js\n\"use strict\";\n\nimport React from \"react\";\n\nconst Layout = React.createClass ({\n  render() {\n    return (\n      <div>\n        { React.cloneElement(\n          this.props.children,\n          this.state\n        ) }\n      </div>\n    );\n  }\n});\n```", "```js\nimport Menu from \"./components/menu.jsx\";\nimport Footer from \"./components/footer\";\n```", "```js\nrender() {\n  return (\n    <div>\n      <Menu />\n\n        { React.cloneElement (\n          this.props.children,\n          this.state\n        ) }\n\n      <Footer />\n\n    </div>\n  );\n}\n```", "```js\n\"use strict\";\nimport React from \"react\";\nimport { Nav, NavItem, Navbar, Button };\nimport { Link } from 'react-router';\nimport { LinkContainer } from \"react-router-bootstrap\";\n```", "```js\nconst Menu = React.createClass ({\n  render() {\n    return (\n      <Navbar inverse fixedTop>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <Link to=\"/\">My webshop</Link>\n          </Navbar.Brand>\n          <Navbar.Toggle />\n        </Navbar.Header>\n```", "```js\nbrand={<span class=\"logo\"><img src=\"img/\" height=\"30\" width=\"100\" alt=\"My webshop\" /></span>}.\n```", "```js\n        <Navbar.Collapse>\n          <Nav>\n            <LinkContainer  eventKey={1} to=\"/company\">\n              <Button bsStyle=\"link\">\n                About\n              </Button>\n            </LinkContainer>\n\n            <LinkContainer  eventKey={2} to=\"/products\">\n              <Button bsStyle=\"link\">\n                Products\n              </Button>\n            </LinkContainer>\n          </Nav>\n\n          <Nav pullRight>\n            <LinkContainer to=\"/checkout\">\n              <Button bsStyle=\"link\">\n                Your cart: {this.props.cart.length} items\n              </Button>\n            </LinkContainer>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n```", "```js\n    );\n  }\n});\nmodule.exports = Menu;\n```", "```js\n\"use strict\";\nimport React from \"react\";\n\nconst Footer = React.createClass({\n  render() {\n    return (\n      <footer className=\"footer text-center\">\n        <div className=\"container\">\n          <p className=\"text-muted\">Copyright 2015 Your Webshop.\n            All rights reserved.\n          </p>\n        </div>\n      </footer>\n    );\n  }\n\n});\nmodule.exports = Footer;\n```", "```js\n    \"use strict\";\n    import React from \"react\";\n\n    const Products = React.createClass ({\n      render() {\n        return (\n          <div />\n        );\n      }\n    });\n    module.exports = Products;\n    ```", "```js\n    \"use strict\";\n    import React from \"react\";\n    import { Grid, Row, Col, Panel } from \"react-bootstrap\";\n\n    const Company = React.createClass ({\n      render() {\n        return (\n          <Grid>\n            <Row>\n              <Col xs={12}>\n                <Panel>\n                  <h1>The company</h1>\n\n                  <p>Contact information</p>\n                  <p>Phone number</p>\n                  <p>History of our company</p>\n\n                </Panel>\n              </Col>\n            </Row>\n          </Grid>\n        );\n      }\n\n    });\n    module.exports = Company;\n    ```", "```js\n    \"use strict\";\n    import React from \"react\";\n\n    const Products = React.createClass ({\n      render() {\n        return (\n          <div />\n        );\n      }\n    });\n    module.exports = Checkout;\n    ```", "```js\n    \"use strict\";\n    import React from \"react\";\n\n    const Receipt = React.createClass ({\n      render() {\n        return (\n          <div />\n        );\n      }\n    });\n    module.exports = Receipt;\n    ```", "```js\n    \"use strict\";\n    import React from \"react\";\n\n    const Item = React.createClass ({\n      render() {\n        return (\n          <div />\n        );\n      }\n    });\n    module.exports = Item;\n    ```", "```js\n    \"use strict\";\n    import React from \"react\";\n    import { Grid, Row, Col, Jumbotron } from \"react-bootstrap\";\n    import { LinkContainer } from \"react-router-botstrap\";\n    import { Link } from 'react-router';\n\n    const Home = React.createClass ({\n      render() {\n        return (\n          <Grid>\n            <Row>\n              <Col xs={12}>\n                <Jumbotron>\n                  <h1>My webshop!</h1>\n\n                  <p>\n                    Welcome to my webshop.\n                    This is a simple information\n                    unit where you can showcase\n                    your best products or\n                    tell a little about your webshop.\n                  </p>\n\n                  <p>\n                    <LinkContainer to=\"/products\">\n                      <Button bsStyle=\"primary\"\n                        to=\"/products\">View products</Button>\n                    </LinkContainer>\n                  </p>\n                </Jumbotron>\n              </Col>\n            </Row>\n          </Grid>\n        );\n      }\n\n    });\n    module.exports = Home;\n    ```", "```js\nimport Products from \"./pages/products.jsx\";\nimport Home from \"./pages/home.jsx\";\nimport Company from \"./pages/company.jsx\";\nimport Item from \"./pages/item.jsx\";\nimport Checkout from \"./pages/checkout.jsx\";\nimport Receipt from \"./pages/receipt.jsx\";\n```", "```js\n<Route handler={Layout}>\n  <Route name=\"home\"\n    path=\"/\"\n    handler={Home} />\n  <Route name=\"company\"\n    path=\"company\"\n    handler={Company} />\n  <Route name=\"products\"\n    path=\"products\"\n    handler={Products} />\n  <Route name=\"item\"\n    path=\"item/:id\"\n    handler={Item} />\n  <Route name=\"checkout\"\n    path=\"checkout\"\n    handler={Checkout} />\n  <Route name=\"receipt\"\n    path=\"receipt\"\n    handler={Receipt} />\n</Route>\n```", "```js\n{\n  \"products\": {\n    \"main_offering\": [\n      {\n        \"World's best novel\": {\n          \"SKU\": \"NOV\",\n          \"price\": \"$21.90\",\n          \"savings\": \"24% off\",\n          \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n          \"image\": \"http://placehold.it/{size}&text=The Novel\"\n        }\n      }\n    ],\n    \"sale_offerings\": [\n      {\n        \"Fantasy book\": {\n          \"SKU\": \"FAN\",\n          \"price\": \"$6.99\",\n          \"savings\": \"80% off\",\n          \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n          \"image\": \"http://placehold.it/{size}&text=Fantasy\"\n        }\n      },\n      {\n        \"Mystery book\": {\n          \"SKU\": \"MYS\",\n          \"price\": \"$8.99\",\n          \"savings\": \"34% off\",\n          \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n          \"image\": \"http://placehold.it/{size}&text=Mystery\"\n        }\n      },\n      {\n        \"Adventure book\": {\n          \"SKU\": \"ADV\",\n          \"price\": \"$7.99\",\n          \"savings\": \"62% off\",\n          \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n          \"image\": \"http://placehold.it/{size}&text=Adventure\"\n        }\n      },\n      {\n        \"Science fiction book\": {\n          \"SKU\": \"SCI\",\n          \"price\": \"$5.99\",\n          \"savings\": \"32% off\",\n          \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n          \"image\": \"http://placehold.it/{size}&text=Sci-Fi\"\n        }\n      },\n      {\n        \"Childrens book\": {\n          \"SKU\": \"CHI\",\n          \"price\": \"$7.99\",\n          \"savings\": \"12% off\",\n          \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n          \"image\": \"http://placehold.it/{size}&text=Childrens\"\n        }\n      },\n      {\n        \"Economics book\": {\n          \"SKU\": \"ECO\",\n          \"price\": \"$25.99\",\n          \"savings\": \"7% off\",\n          \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n          \"image\": \"http://placehold.it/{size}&text=Economics\"\n        }\n      }\n    ]\n  }\n}\n```", "```js\n// json\napp.get('*.json', function (req, res) {\n  res.sendFile(__dirname+\"/public/\"+req.path);\n});\n```", "```js\n\"use strict\";\n\nimport Reflux from 'reflux';\n\nconst Actions = {\n  FetchProducts: Reflux.createAction(\"FetchProducts\")\n};\n\nmodule.exports = Actions;\n```", "```js\n\"use strict\";\nimport Reflux from 'reflux';\nimport Request from 'superagent';\nimport Actions from './actions/products';\n```", "```js\nconst ProductStore = Reflux.createStore ({\n\n  init() {\n    this.listenTo(Actions.FetchProducts, this.onFetchProducts);\n```", "```js\n  },\n  onFetchProducts() {\n    Request\n      .get('/products.json')\n      .end((err, res)=> {\n        this.trigger(JSON.parse(res.text));\n      });\n  }\n```", "```js\n});\n\nmodule.exports = ProductStore;\n```", "```js\nimport Actions from \"./actions/products\"\nimport ProductStore from \"./stores/products\"\n```", "```js\nmixins:[\n  Reflux.listenTo(ProductStore, 'onFetchProducts')\n],\ncomponentDidMount() {\n  Actions.FetchProducts();\n},\nonFetchProducts(data){\n  this.setState({products: data.products});\n},\n```", "```js\n\"use strict\";\nimport React from \"react\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router\";\n\nconst Products = React.createClass ({\n  propTypes: {\n    products: React.PropTypes.object\n  },\n  getDefaultProps() {\n    return {\n      products: {\n        main_offering: [],\n        sale_offerings: []\n      }\n    }\n  },\n  render() {\n    return (\n      <Grid>\n        <Offerings productData={this.props.products.main_offering}\n        type={\"main\"} maxProducts={1}/>\n        <Offerings productData={this.props.products.sale_offerings}\n        type={\"ribbon\"} maxProducts={3}/>\n      </Grid>\n    );\n  }\n});\n```", "```js\nconst Offerings = React.createClass ({\n  propTypes: {\n    type: React.PropTypes.oneOf(['main', 'ribbon']),\n    maxProducts: React.PropTypes.number,\n    productData: React.propTypes.array\n  },\n  getDefaultProps() {\n    return {\n      type: \"main\",\n      maxProducts: 3\n    }\n  },\n  render() {\n    let productData = this.props.productData.filter((data, idx)=> {\n      return idx < this.props.maxProducts;\n    });\n    let data = productData.map((data, idx)=> {\n      if(this.props.type === \"main\") {\n        return <MainOffering\n          {...this.props} key={idx}\n          productData={data}/>\n      }\n      else if(this.props.type === \"main\") {\n        return <RibbonOffering\n          {...this.props} key={idx}\n          productData={data}/>\n      }\n    });\n    return <Row>{data}</Row>;\n  }\n});\n```", "```js\nconst MainOffering = React.createClass ({\n  propTypes: {\n    productData: React.PropTypes.object\n  },\n  render() {\n    const title = Object.keys(this.props.productData);\n    if(this.props.productData[title]){\n      (<Col xs={12}>\n        <Col md={3} sm={4} xs={12}>\n          <p>\n            <img src={this.props.productData[title].\n            image.replace(\"{size}\",\"200x150\")}/>\n          </p>\n        </Col>\n        <Col md={9} sm={8} xs={12}>\n          <Link to={\"/item/\"+this.props.productData[title].SKU}>\n            <h4>{title}</h4>\n          </Link>\n\n          <p>\n            {this.props.productData[title].description}\n          </p>\n\n          <p>\n            {this.props.productData[title].price}\n            {\" \"}\n            ({this.props.productData[title].savings})\n          </p>\n\n          <p>\n            <Button bsSize=\"large\">Add to cart</Button>\n          </p>\n        </Col>\n      </Col>\n    )} else {\n      return null;\n    }\n  }\n});\n```", "```js\nconst RibbonOffering = React.createClass ({\n  propTypes: {\n    productData: React.PropTypes.object\n  },\n  render() {\n    const title = Object.keys(this.props.productData);\n    if(this.props.productData) {\n      return (<Col md={4} sm={4} xs={12}>\n        <Col xs={12}>\n          <p>\n            <img src={this.props.productData[title].image.\n            replace(\"{size}\",\"200x80\")}/>\n          </p>\n        </Col>\n        <Col xs={12}>\n          <Link to={\"/item/\"+this.props.productData[title].SKU}>\n            <h4>{title}</h4>\n          </Link>\n\n          <p>\n            {this.props.productData[title].description}\n          </p>\n\n          <p>\n            {this.props.productData[title].price} \n            {\" \"}\n            ({this.props.productData[title].savings})\n          </p>\n\n          <p>\n            <Button bsSize=\"large\">Add to cart</Button>\n          </p>\n        </Col>\n      </Col>)\n    }\n    else {\n      return null;\n    }\n  }\n});\n```", "```js\nmodule.exports = Products;\n```", "```js\n\"use strict\";\nimport React from \"react\";\nimport Reflux from \"reflux\";\nimport { Router, State } from \"react-router\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nimport CartActions from \"../actions/cart\";\n\nconst Item = React.createClass ({\n  mixins: [\n    Router.State\n  ],\n  render() {\n    if (!this.props.products) return null;\n\n    // Find the requested product in our product list\n    let products = this.props.products.main_offering.concat(this.props.products.sale_offerings);\n    let data = products.filter((item)=> {\n      return item[Object.keys(item)].SKU ===\n        this.props.routeParams.id;\n    });\n```", "```js\n    if(!data.length){\n      return (<Grid>\n      <Row>\n        <Col xs={12}>\n          <h1>Product missing</h1>\n          <p>\n            I'm sorry, but the product could not be found.\n          </p>\n        </Col>\n      </Row>\n    </Grid>)} else {\n      return (<Grid>\n        <Row>\n          <Col xs={12}>\n            <ProductInfo productData={data[0]}/>\n          </Col>\n        </Row>\n      </Grid>\n    )};\n  }\n});\n```", "```js\nconst ProductInfo = React.createClass ({\n  propTypes: {\n    productData: React.PropTypes.object\n  },\n  render() {\n    const title = Object.keys(this.props.productData);\n    if(this.props.productData[title]){\n      (<Col xs={12}>\n        <Col md={3} sm={4} xs={12}>\n          <p>\n            <img src={this.props.productData[title].\n            image.replace(\"{size}\",\"200x150\")}/>\n          </p>\n        </Col>\n        <Col md={9} sm={8} xs={12}>\n          <h4>{title}</h4>\n          <p>\n            {this.props.productData[title].description}\n          </p>\n\n          <p>\n            {this.props.productData[title].price}\n            {\" \"}\n            ({this.props.productData[title].savings})\n          </p>\n\n          <p>\n            <Button bsSize=\"large\"\n              onClick={CartActions.AddToCart.\n              bind(null, this.props.productData)}>\n              Add to cart\n            </Button>\n          </p>\n        </Col>\n      </Col>\n    )}\n    else {\n      return null;\n    }\n  }\n});\nmodule.exports = Item;\n```", "```js\n\"use strict\";\n\nimport Reflux from \"reflux\";\n\nconst Cart = {\n  AddToCart: Reflux.createAction(\"AddToCart\"),\n  RemoveFromCart: Reflux.createAction(\"RemoveFromCart\"),\n  ClearCart: Reflux.createAction(\"ClearCart\")\n};\n\nmodule.exports = Cart;\n```", "```js\n\"use strict\";\nimport Reflux from \"reflux\";\nimport CartActions from \"../actions/cart\";\nlet _cart = {cart: []};\n```", "```js\nconst CartStore = Reflux.createStore ({\n\n  init() {\n    this.listenTo(CartActions.AddToCart, this.onAddToCart);\n    this.listenTo(CartActions.RemoveFromCart, this.onRemoveFromCart);\n    this.listenTo(CartActions.ClearCart, this.onClearCart);\n  },\n```", "```js\n  onAddToCart(item){\n    _cart.cart.push(item);\n    this.emit();\n  },\n```", "```js\n  onRemoveFromCart(item) {\n    _cart.cart = _cart.cart.filter((cartItem)=> {\n      return item !== cartItem\n    });\n    this.emit();\n  },\n```", "```js\n  onClearCart() {\n    _cart.cart = [];\n    this.emit();\n  },\n```", "```js\n  emit() {\n    this.trigger(_cart);\n  }\n```", "```js\n});\n\nmodule.exports = CartStore;\n```", "```js\n<NavItemLink\n  to=\"/checkout\">\n  Your cart: {this.props.cart.length} items\n</NavItemLink>\n```", "```js\n  getDefaultProps() {\n    return {\n      cart: []\n    }\n  },\n```", "```js\nimport CartStore from \"./stores/cart\"\n```", "```js\n  mixins: [\n    Reflux.listenTo(ProductStore, 'onFetchProducts'),\n    Reflux.listenTo(CartStore, 'onCartUpdated')\n  ],\n  onCartUpdated(data){\n    this.setState({cart: data.cart});\n  },\n```", "```js\n<Menu {...this.state} />\n```", "```js\n<Button bsSize=\"large\"\n  onClick={CartActions.AddToCart.bind(null,\n  this.props.productData)}>\n  Add to cart\n</Button>\n```", "```js\nimport CartActions from \"../actions/cart\";\n```", "```js\n\"use strict\";\n\nimport Reflux from \"reflux\";\n\nconst Actions = {\n  SaveAddress: Reflux.createAction(\"SaveAddress\")\n};\n\nmodule.exports = Actions;\n```", "```js\n\"use strict\";\nimport Reflux from \"reflux\";\nimport CustomerActions from \"../actions/customer\";\nlet _customer = {customer: [], validAddress: false};\n```", "```js\nconst CustomerStore = Reflux.createStore({\n\n  init() {\n    this.listenTo(CustomerActions.SaveAddress, this.onSaveAddress);\n  },\n\n  onSaveAddress(address) {\n    _customer = address;\n    this.emit();\n  },\n\n  emit() {\n    this.trigger(_customer);\n  }\n});\n\nmodule.exports = CustomerStore;\n```", "```js\n\"use strict\";\nimport React from \"react\";\nimport { Grid, Button, Table, Well } from \"react-bootstrap\";\nimport CartActions from \"../actions/cart\";\nimport CustomerData from \"../components/customerdata\";\n```", "```js\nconst Checkout = React.createClass ({\n  propTypes: {\n    cart: React.PropTypes.array,\n    customer: React.PropTypes.object\n  },\n  getDefaultProps() {\n    return {\n      cart: [],\n      customer: {\n        address: {},\n        validAddress: false\n      }\n    }\n  },\n```", "```js\n  render() {\n    let CheckoutEnabled = (this.props.customer.validAddress && this.props.cart.length > 0);\n    return (\n      <Grid>\n        <Well bsSize=\"small\">\n          <p>Please confirm your order and checkout your cart</p>\n        </Well>\n\n        <Cart {...this.props} />\n\n        <CustomerData {...this.props} />\n\n        <Button disabled={!CheckoutEnabled}\n          bsStyle={CheckoutEnabled ? \n          \"success\" : \"default\"}>\n          Proceed to checkout\n        </Button>\n\n      </Grid>\n    );\n  }\n});\n```", "```js\nconst Cart = React.createClass ({\n  propTypes: {\n    cart: React.PropTypes.array\n  },\n  render() {\n    let total = 0;\n    this.props.cart.forEach((data)=> {\n      total += parseFloat(data[Object.keys(data)].\n        price.replace(\"$\", \"\"));\n    });\n\n    let tableData = this.props.cart.map((data, idx)=> {\n      return <CartElement productData={data} key={idx}/>\n    });\n\n    if (!tableData.length) {\n      tableData = (<tr>\n        <td colSpan=\"3\">Your cart is empty</td>\n      </tr>);\n    }\n    return <Table striped condensed>\n      <thead>\n        <tr>\n          <th width=\"40%\">Name</th>\n          <th width=\"30%\">Price</th>\n          <th width=\"30%\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        {tableData}\n        <tr className=\"summary\" border>\n        <td><strong>Order total:</strong></td>\n        <td><strong>${total}</strong></td>\n        <td>\n          {tableData.length ?\n            <Button bsSize=\"xsmall\" bsStyle=\"danger\"\n              onClick={CartActions.ClearCart}>\n              Clear Cart\n            </Button> : null}\n        </td>\n        </tr>\n      </tbody>\n    </Table>;\n  }\n});\n```", "```js\nconst CartElement = React.createClass ({\n  render() {\n    const title = Object.keys(this.props.productData);\n    if(title) {\n      (<tr>\n        <td>{title}</td>\n        <td>{this.props.productData[title].price}</td>\n        <td>\n          <Button bsSize=\"xsmall\" bsStyle=\"danger\"\n            onClick={CartActions.RemoveFromCart.bind\n            (null, this.props.productData)}>\n            Remove\n          </Button>\n        </td>\n      </tr>\n      )\n    }\n    else {\n      return null\n    }\n  }\n}\n);\n\nmodule.exports = Checkout;\n```", "```js\n\"use strict\";\nimport React from \"react\";\nimport { FormGroup, FormControl, InputGroup, Button }\n  from \"react-bootstrap\";\n  import CustomerActions from \"../actions/customer\";\n  import clone from 'lodash/clone';\n\nconst CustomerData = React.createClass ({\n  getDefaultProps() {\n    return {\n      customer: {\n        address: {},\n        validAddress: false\n      }\n    }\n  },\n  getInitialState() {\n    return {\n      customer:{\n        name: this.props.customer.address.name ? \n          this.props.customer.address.name : \"\",\n        address: this.props.customer.address.address ? \n          this.props.customer.address.address : \"\",\n        zipCode: this.props.customer.address.zipCode ? \n          this.props.customer.address.zipCode : \"\",\n        city: this.props.customer.address.city ? \n          this.props.customer.address.city : \"\"\n      },\n      validAddress: this.props.customer.validAddress ?\n        this.props.customer.validAddress : false\n    };\n  },\n```", "```js\n  validationStateName() {\n    if (this.state.customer.name.length > 5)\n      return \"success\";\n    else if (this.state.customer.name.length > 2)\n      return \"warning\";\n    else \n      return \"error\";\n  },\n\n  handleChangeName(event) {\n    let customer = clone(this.state.customer);\n    customer.name = event.target.form[0].value;\n    this.setState({\n      customer,\n      validAddress: this.checkAllValidations()\n    });\n    CustomerActions.SaveAddress(this.state);\n  },\n```", "```js\n  validationStateAddress() {\n    if (this.state.customer.address.length > 5)\n      return \"success\";\n    else if (this.state.customer.address.length > 2)\n      return \"warning\";\n    else \n      return \"error\";\n  },\n\n  handleChangeAddress(event) {\n    let customer = clone(this.state.customer);\n    customer.address =\n      event.target.form[1].value;\n    this.setState({\n      customer,\n      validAddress: this.checkAllValidations()\n    });\n    CustomerActions.SaveAddress(this.state);\n  },\n\n  validationStateZipCode() {\n    if (this.state.customer.zipCode.length > 5)\n      return \"success\";\n    else if (this.state.customer.zipCode.length > 2)\n      return \"warning\";\n    else \n      return \"error\";\n  },\n\n  handleChangeZipCode(event) {\n    let customer = clone(this.state.customer);\n    customer.zipCode =\n      event.target.form[2].value;\n    this.setState({\n      customer,\n      validAddress: this.checkAllValidations()\n    });\n    CustomerActions.SaveAddress(this.state);\n  },\n\n  validationStateCity() {\n    if (this.state.customer.city.length > 5)\n      return \"success\";\n    else if (this.state.customer.city.length > 2)\n      return \"warning\";\n    else \n      return \"error\";\n  },\n\n  handleChangeCity(event) {\n    let customer = clone(this.state.customer);\n    customer.city =\n      event.target.form[3].value;\n    this.setState({\n      customer,\n      validAddress: this.checkAllValidations()\n    });\n    CustomerActions.SaveAddress(this.state);\n  },\n\n  checkAllValidations() {\n    return (\"success\" == this.validationStateName() &&\n    \"success\" == this.validationStateAddress() &&\n    \"success\" == this.validationStateZipCode() &&\n    \"success\" == this.validationStateCity());\n  },\n```", "```js\n  render() {\n    return (\n      <div>\n        <form>\n          <FormGroup>\n            <FormControl\n              type=\"text\"\n              value={ this.state.customer.address.name }\n              placeholder=\"Enter your name\"\n              label=\"Name\"\n              bsStyle={ this.validationStateName() }\n              hasFeedback\n              onChange={ this.handleChangeName }\n            />\n          </FormGroup>\n```", "```js\n        <FormGroup>\n            <FormControl\n              type=\"text\"\n              value={ this.state.customer.address }\n              placeholder=\"Enter your street address\"\n              label=\"Street \"\n              bsStyle={ this.validationStateAddress() }\n              hasFeedback\n              onChange={ this.handleChangeAddress } />\n          </FormGroup>\n\n          <FormGroup>\n            <FormControl\n              type=\"text\"\n              value={ this.state.customer.zipCode }\n              placeholder=\"Enter your zip code\"\n              label=\"Zip Code\"\n              bsStyle={ this.validationStateZipCode() }\n              hasFeedback\n            onChange={ this.handleChangeZipCode } />\n\n          </FormGroup>\n          <FormGroup>\n\n            <FormControl\n              type=\"text\"\n              value={ this.state.customer.city }\n              placeholder=\"Enter your city\"\n              label=\"City\"\n              bsStyle={this.validationStateCity()}\n              hasFeedback\n            onChange={this.handleChangeCity}/>\n\n          </FormGroup>\n        </form>\n      </div>\n    );\n  }\n\n});\nmodule.exports = CustomerData;\n```", "```js\nimport CustomerStore from \"./stores/customer\" \n```", "```js\nReflux.listenTo(CustomerStore, 'onCustomerUpdated')\n```", "```js\nimport { LinkContainer } from \"react-router-bootstrap\";\n```", "```js\n<LinkContainer to=\"/receipt\">\n  <Button\n    disabled={!CheckoutEnabled}\n    bsStyle= {\n      CheckoutEnabled ? \"success\" : \"default\"\n    }>\n    Proceed to checkout\n  </Button>\n</LinkContainer>\n```", "```js\n\"use strict\";\nimport React from \"react\";\nimport { Grid, Row, Col, Panel, Table } from \"react-bootstrap\";\nimport Router from \"react-router\";\nimport CartActions from \"../actions/cart\"\nconst Receipt = React.createClass ({\n  mixins: [\n    Router.Navigation\n  ],\n  componentDidMount() {\n    if(!this.props.cart.length) {\n      this.props.history.pushState('/');\n    }\n  },\n```", "```js\n  propTypes: {\n    cart: React.PropTypes.array,\n    customer: React.PropTypes.object\n  },\n  getDefaultProps() {\n    return {\n      cart: [],\n      customer: {\n        address: {},\n        validAddress: false\n      }\n    }\n  },\n  componentWillUnmount() {\n    CartActions.ClearCart();\n  },\n  render() {\n    let total = 0;\n    this.props.cart.forEach((data)=> {\n      total += parseFloat(data[Object.keys(data)].\n        price.replace(\"$\", \"\"));\n    });\n    let orderData = this.props.cart.map((data, idx)=> {\n      return <OrderElement productData={data} key={idx}/>\n    });\n\n    return (\n      <Grid>\n        <Row>\n          <Col xs={12}>\n            <h3 className=\"text-center\">\n               Invoice for your purchase</h3>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} md={12} pullLeft>\n            <Panel header={\"Billing details\"}>\n              {this.props.customer.address.name}<br/>\n              {this.props.customer.address.address}<br/>\n              {this.props.customer.address.zipCode}<br/>\n              {this.props.customer.address.city}\n            </Panel>\n          </Col>\n          <Col xs={12} md={12}>\n            <Panel header={\"Order summary\"}>\n              <Table>\n                <thead>\n                  <th>Item Name</th>\n                  <th>Item Price</th>\n                </thead>\n                {orderData}\n                <tr>\n                  <td><strong>Total</strong></td>\n                  <td>${total}</td>\n                </tr>\n              </Table>\n            </Panel>\n          </Col>\n        </Row>\n      </Grid >\n    );\n  }\n});\n```", "```js\nconst OrderElement = React.createClass ({\n  render() {\n    const title = Object.keys(this.props.productData);\n    if(title) {\n      (<tr>\n        <td>{title}</td>\n        <td>{this.props.productData[title].price}</td>\n      </tr>\n      )\n    }\n    else {\n      return null;\n      }\n    }\n  }\n);\n\nmodule.exports = Receipt;\n```"]