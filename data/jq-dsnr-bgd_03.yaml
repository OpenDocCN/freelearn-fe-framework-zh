- en: Chapter 3. Making a Better FAQ Page
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 3 章。打造更好的常见问题解答页面
- en: The Frequently Asked Questions page has been a mainstay of all types of websites
    since the dawn of the Web. It's used as a marketing page, as an attempt to reduce
    the number of calls or e-mails to a customer service department, and as a helpful
    tool for site visitors to learn more about the company or organization they're
    dealing with or the products or services they're interested in purchasing.
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 自互联网诞生以来，常见问题解答页面一直是各种类型的网站的主要页面。它被用作营销页面，试图减少对客户服务部门的电话或电子邮件数量，并且作为站点访问者了解与之交易的公司或组织，或者他们感兴趣购买的产品或服务的有用工具。
- en: Though we'll be building an FAQ page for this example, this expand and collapse
    technique will be useful in many different situations — a list of events with
    event details, a listing of staff or members with bios, a list of products with
    details — any situation where a listing of items should be quick and easy for
    site visitors to scan, but where more information should be readily and easily
    available upon demand when they find the thing they're looking for.
  id: totrans-2
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 虽然我们将为此示例构建一个常见问题解答页面，但此展开和折叠技术在许多不同情况下都很有用 — 事件列表与事件详情、员工或成员列表与简介、产品列表与详情 —
    任何情况下都应该使站点访问者能够快速浏览项目列表，但在他们找到所需内容时应该能够立即轻松地根据需求获取更多信息。
- en: 'In this chapter, we''ll learn:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习：
- en: How to traverse an HTML document with jQuery
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用 jQuery 遍历 HTML 文档
- en: How to show and hide elements
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何显示和隐藏元素
- en: How to use simple jQuery animations
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用简单的 jQuery 动画
- en: How to easily toggle a class name for an element
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何轻松切换元素的类名
- en: FAQ page markup
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 常见问题解答页面标记
- en: We'll get started by taking some extra care and attention with the way we mark
    up our FAQ list. As with most things dealing with web development, there's no
    one right way of doing anything, so don't take this approach as the only correct
    one. Any markup that makes sense semantically and makes it easy to enhance your
    list with CSS and JavaScript is perfectly acceptable.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从特别关注我们如何标记常见问题解答列表开始。与大多数涉及 Web 开发的事情一样，没有一种正确的方法，所以不要将这种方法视为唯一正确的方法。任何语义上合理且便于使用
    CSS 和 JavaScript 增强列表的标记都是完全可以接受的。
- en: Time for action — setting up the HTML
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 — 设置 HTML
- en: 'We''ll get started with our sample HTML file and associated files and folders,
    like we set up in [Chapter 1](ch01.html "Chapter 1. Designer, Meet jQuery"), *Designer,
    Meet jQuery*. In this case, our HTML is going to be a definition list with the
    questions inside the`<dt>` tags and the answers wrapped in`<dd>` tags. By default,
    most browsers will indent the`<dd>` tags which means the questions hang into the
    left margin, making them easy to scan. Inside the`<body>` of your HTML document,
    add a heading and a definition list as follows:'
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将从我们的示例 HTML 文件和关联的文件和文件夹开始，就像我们在[第 1 章](ch01.html "第 1 章。设计师，遇见 jQuery")中设置的那样，*设计师，遇见
    jQuery*。在这种情况下，我们的 HTML 将是一个包含在`<dt>`标签中的问题的定义列表，而答案则包含在`<dd>`标签中。默认情况下，大多数浏览器会缩进`<dd>`标签，这意味着问题会悬挂在左边距中，使其易于浏览。在
    HTML 文档的`<body>`内，按如下方式添加标题和定义列表：
- en: '[PRE0]'
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You can adjust the style of the page however you would like by adding in some
    CSS. Here's how I've styled mine:![Time for action — setting up the HTML](img/6709OS_03_img1.jpg)
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以通过添加一些 CSS 来调整页面的样式。以下是我的样式设置方式：![行动时间 — 设置 HTML](img/6709OS_03_img1.jpg)
- en: For users with JavaScript disabled, this page works fine as is. The questions
    hang into the left margin and are bolder and darker than the rest of the text
    on the page, making them easy to scan.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 对于禁用 JavaScript 的用户，该页面可以正常工作。问题会悬挂在左边距中，比页面上的其他文本更加粗体和深色，使其易于浏览。
- en: What just happened?
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚刚发生了什么？
- en: We set up a basic definition list to hold our questions and answers. The default
    style of the definition list lends itself nicely to making the list of questions
    scannable for site visitors without JavaScript. We can enhance that further with
    our own custom CSS to make the style of our list match our site.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们设置了一个基本的定义列表来保存我们的问题和答案。默认样式的定义列表很好地使得问题列表对于没有 JavaScript 的站点访问者易于浏览。我们可以进一步通过自定义
    CSS 来增强我们的样式以使列表的风格与我们的站点匹配。
- en: Time for action — moving around an HTML document
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 — 在 HTML 文档中移动
- en: We're going to keep working with the files we set up in the previous section.
    Open up the `scripts.js` file that's inside your `scripts` folder. After the document
    ready statement, write a new empty function called `dynamicFaq:`
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将继续使用前一节设置的文件进行工作。打开位于您的`scripts`文件夹内的`scripts.js`文件。在文档就绪语句之后，编写一个名为`dynamicFaq`的新空函数：
- en: '[PRE1]'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Let's think through how we would like this page to behave. We would like to
    have all the answers to our questions hidden when the page is loaded, then when
    a user finds the question they're looking for, we would like to show the associated
    answer when they click the question.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们思考一下我们希望此页面的行为。我们希望在页面加载时将所有问题的答案隐藏，然后当用户找到他们正在寻找的问题时，当他们点击问题时，我们希望显示相关答案。
- en: 'That means the first thing we''ll need to do is hide all the answers when the
    page loads. That''s as simple as selecting all of our `<dd>` elements and hiding
    them. Inside your `dynamicFaq` function, add a line of code to hide the `<dd>`
    elements:'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这意味着当页面加载时，我们首先需要隐藏所有答案。这只是简单地选择所有我们的`<dd>`元素并隐藏它们。在您的`dynamicFaq`函数内，添加一行代码以隐藏`<dd>`元素：
- en: '[PRE2]'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![Time for action — moving around an HTML document](img/6709OS_03_img2.jpg)'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 - 在 HTML 文档中移动](img/6709OS_03_img2.jpg)'
- en: Note
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You might be wondering why we didn't use CSS to set the display of the`<dd>`
    tags to `none`. That would have hidden our answers, but it would have hidden our
    answers for everyone — site visitors without JavaScript enabled wouldn't have
    been able to access the answers, the most important part of our page!
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可能想知道为什么我们没有使用 CSS 将`<dd>`标签的显示设置为`none`。那样会隐藏我们的答案，但会使所有人都无法访问我们的答案 - 没有启用
    JavaScript 的网站访问者将无法访问页面的最重要部分 - 答案！
- en: It would also stop most search engines from indexing the content inside of our
    answers, which could be helpful for people trying to find the answers to their
    questions in a search engine. By using JavaScript to hide the answers, we can
    be sure the answers will be available unless the user has JavaScript enabled and
    is capable of showing them again.
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这也会阻止大多数搜索引擎索引我们答案内的内容，这对于试图在搜索引擎中找到答案的人可能是有帮助的。通过使用 JavaScript 隐藏答案，我们可以确保答案将可用，除非用户启用了
    JavaScript 并且能够再次显示它们。
- en: 'Now, we need to show the answer when the site visitor clicks on a question.
    To do that, we need to tell jQuery to do something whenever someone clicks on
    one of the questions or`<dt>` tags. Inside the `dynamicFaq` function, add a line
    of code to bind a click function to the`<dt>` tags:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，当网站访问者点击问题时，我们需要显示答案。为此，我们需要告诉 jQuery 在有人点击其中一个问题或`<dt>`标签时做些什么。在`dynamicFaq`函数内，添加一行代码以将点击函数绑定到`<dt>`标签：
- en: '[PRE3]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'When the site visitor clicks on a question, we want to get the answer to that
    question and show it because our FAQ list is set up similar to the following code:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当网站访问者点击问题时，我们希望获取该问题的答案并显示出来，因为我们的常见问题列表设置与以下代码类似：
- en: '[PRE4]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '...we know that the answer is the next node or element in the DOM after our
    question. We''ll start from the question. When a site visitor clicks a question,
    we can get the current question by using jQuery''s `$(this)` selector. The user
    has just clicked on a question, and we say `$(this)` to mean the question they
    just clicked on. Inside that new `click` function, add `$(this)` so we can refer
    to the clicked question:'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: …我们知道答案是我们问题后的 DOM 中的下一个节点或元素。我们将从问题开始。当网站访问者点击问题时，我们可以使用 jQuery 的`$(this)`选择器获取当前问题。用户刚刚点击了一个问题，我们使用`$(this)`来表示他们刚刚点击的问题。在该新的`click`函数中，添加`$(this)`以便我们可以引用点击的问题：
- en: '[PRE5]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Now that we have the question that was just clicked, we need to get the next
    thing or the answer to that question so that we can show it. This is called **traversing
    the DOM** in JavaScript speak. It just means that we're moving to a different
    part of the document.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经有了刚刚点击的问题，我们需要获取下一个内容或该问题的答案，以便我们可以显示它。这在 JavaScript 中称为**DOM 遍历**。这只是意味着我们正在移动到文档的另一部分。
- en: 'jQuery gives us the `next()` method for moving to the next node in the DOM.
    We''ll select our answer by doing as follows:'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: jQuery 为我们提供了`next()`方法来移动到 DOM 中的下一个节点。我们将通过以下方式选择我们的答案：
- en: '[PRE6]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Now we''ve moved from the question to the answer. Now all that''s left to do
    is show the answer:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经从问题移动到答案。现在剩下的就是显示答案：
- en: '[PRE7]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Don''t forget that our `dynamicFaq` function won''t do anything until we call
    it. Call the `dynamicFaq` function inside your document ready statement:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 别忘了，我们的`dynamicFaq`函数在我们调用它之前什么都不会做。在您的文档就绪语句中调用`dynamicFaq`函数：
- en: '[PRE8]'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Now, if we load the page in the browser, you can see that all of our answers
    are hidden until we click on the question. This is nice and useful, but it would
    be even nicer if the site visitor could hide the answer again when they''re done
    reading it to get it out of their way. Luckily, this is such a common task, jQuery
    makes this very easy for us. All we have to do is replace our call to the `.show()`
    method with a call to the `.toggle()` method as follows:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果我们在浏览器中加载页面，您会发现在单击问题之前，我们所有的答案都是隐藏的。这很好也很有用，但是如果网站访问者完成阅读后可以再次隐藏答案以摆脱它，那将更好。幸运的是，这是一个常见任务，jQuery
    为我们提供了很大的帮助。我们所要做的就是将我们的 `.show()` 方法替换为 `.toggle()` 方法，如下所示：
- en: '[PRE9]'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Now when you refresh the page in the browser, you'll see that clicking the question
    once shows the answer and clicking the question a second time hides the answer
    again.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当您在浏览器中刷新页面时，您会发现单击问题会显示答案，再次单击问题会再次隐藏答案。
- en: What just happened?
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚刚发生了什么？
- en: Toggling the display of elements on a page is a common JavaScript task, so jQuery
    already has built-in methods for handling it and making it simple and straightforward
    to get this up and running on our page. That was pretty easy; just a few lines
    of code.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在页面上切换元素的显示是一个常见的 JavaScript 任务，所以 jQuery 已经内置了处理它的方法，并且使得在我们的页面上实现这个功能变得简单明了。这相当容易；只需几行代码。
- en: Sprucing up our FAQ page
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 点缀我们的常见问题解答页面
- en: That was so easy, in fact we have plenty of time left over for enhancing our
    FAQ page to make it even better. This is where the power of jQuery becomes apparent
    — you can not only create a show/hide FAQ page, but you can make it a fancy one
    and still meet your deadline. How's that for impressing a client or your boss?
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，这么简单，我们还有大量时间来增强我们的常见问题解答页面，使其变得更好。这就是 jQuery 的威力所在 — 您不仅可以创建一个显示/隐藏的常见问题解答页面，而且还可以使其变得花哨，并且仍然能够按时完成任务。这对于给客户或老板留下深刻印象来说如何？
- en: Time for action — making it fancy
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 — 让它变得花哨
- en: 'Let''s start with a little CSS to change the cursor to a pointer and add a
    little hover effect to our questions to make it obvious to site visitors that
    the questions are clickable. Open up the `styles.css` file that''s inside the
    styles folder and add this bit of CSS:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们从一点 CSS 开始，将鼠标光标更改为指针，并向我们的问题添加一点悬停效果，以便向网站访问者明确表明问题是可点击的。打开位于样式文件夹中的 `styles.css`
    文件，并添加以下 CSS 代码：
- en: '[PRE10]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: That definitely helps to communicate to the site visitor that the questions
    are clickable.
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这绝对有助于向网站访问者传达问题是可点击的信息。
- en: '![Time for action — making it fancy](img/6709OS_03_img3.jpg)'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 — 让它变得花哨](img/6709OS_03_img3.jpg)'
- en: When we click a question to see the answer, the change isn't communicated to
    the site visitor very well — the jump in the page is a little disconcerting and
    it takes a moment to realize what just happened. It would be nicer and easier
    to understand if the question were to slide into view; the site visitor could
    literally see the question appearing and would understand immediately what change
    just happened on the screen.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们单击问题查看答案时，页面上的变化没有很好地传达给网站访问者 — 页面上的跳转有点让人不安，需要一会儿才能意识到刚刚发生了什么。如果问题能够平滑地显示出来，那将更加舒适和易于理解；网站访问者可以看到问题的出现，立即理解屏幕上刚刚发生的变化。
- en: jQuery makes it easy for us. We just have to replace our call to the `.toggle()`
    method with a call to the `.slideToggle()` method.
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: jQuery 为我们提供了便利。我们只需将我们的 `.toggle()` 方法替换为 `.slideToggle()` 方法。
- en: '[PRE11]'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Now if you view the page in your browser, you can see that the questions slide
    smoothly into and out of view when the question is clicked. It's easy to understand
    what's happening when the page changes, and the animation is a nice touch.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果您在浏览器中查看页面，您会发现点击问题时，问题会平滑地显示和隐藏。当页面发生变化时，很容易理解发生了什么，并且动画效果很不错。
- en: What just happened?
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚刚发生了什么？
- en: We replaced our `toggle()` method with the `slideToggle()` method to animate
    the showing and hiding of the answers. This makes it easier for the site visitor
    to understand the change that's taking place on the page. We also added some CSS
    to make the questions appear to be clickable to communicate the abilities of our
    page to our site visitors.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们用 `slideToggle()` 方法替换了我们的 `toggle()` 方法来动画显示和隐藏答案。这使得网站访问者更容易理解页面上发生的变化。我们还添加了一些
    CSS，使问题看起来像是可点击的，以向我们的网站访问者传达我们页面的能力。
- en: We're almost there!
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们快要完成了！
- en: jQuery made animating that show and hide so easy that we've still got time left
    over to enhance our FAQ page even more. It would be nice to add some sort of indicator
    to our questions to show that they're collapsed and can be expanded, and to add
    some sort of special style to our questions once they're opened to show that they
    can be collapsed again.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery使得动画的显示和隐藏变得如此容易，以至于我们仍然有时间进一步增强我们的FAQ页面。添加一些指示器来显示我们的问题已经折叠并且可以展开，以及一旦它们被打开就添加一些特殊的样式以显示它们可以再次折叠，这将是很好的。
- en: Time for action — adding some final touches
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间——添加一些最后的修饰
- en: 'Let''s start with some simple CSS to add a small arrow icon to the left side
    of our questions. Head back into `style.css` and modify the styles a bit to add
    an arrow icon or an icon of your choosing. You can place the icon you choose inside
    your `images` folder:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们从一些简单的CSS开始，向我们的问题的左侧添加一个小箭头图标。返回`style.css`并稍微修改样式以添加一个箭头图标或您选择的图标。您可以将所选图标放在`images`文件夹中：
- en: '[PRE12]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: I'm using an image sprite for the arrows. As I'm changing the color of my questions
    from blue to green when the mouse hovers over the questions, I've included both
    the blue and green arrows in my sprite and am using a bit of CSS to show the green
    arrow when the text turns green. That means only one image has to download and
    there's no delay in downloading a new image to show when the mouse hovers over
    my question. If you're unfamiliar with the CSS image sprite technique, I recommend
    taking a look at *Chris Coyier's* article explaining it at [http://css-tricks.com/css-sprites/.](http://css-tricks.com/css-sprites/.
    )
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我正在使用图像精灵来显示箭头。当鼠标悬停在问题上时，我将我的问题从蓝色更改为绿色，因此我在精灵中包含了蓝色和绿色的箭头，并且在文本变为绿色时使用了一些CSS来显示绿色箭头。这意味着只需下载一个图像，无需在鼠标悬停在我的问题上时下载新图像来显示。如果您对CSS图像精灵技术不熟悉，我建议您查看*Chris
    Coyier*在[http://css-tricks.com/css-sprites/.](http://css-tricks.com/css-sprites/.
    )上解释它的文章。
- en: 'Now, we want to change the arrow to a different orientation when the question
    is opened. All we have to do is use a new CSS class for the open state of our
    questions and code the off and on states so the new arrow shape changes color
    as well. Again, I''ve included these arrow images in the same sprite, so the only
    thing I have to change is the background position:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，当问题打开时，我们想要将箭头改为不同的方向。我们所要做的就是为我们的问题的打开状态使用一个新的CSS类，并编写关闭和打开状态的代码，以便新的箭头形状也会改变颜色。同样，我已经将这些箭头图像包含在同一个精灵中，所以我唯一需要改变的就是背景位置：
- en: '[PRE13]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Note
  id: totrans-66
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Just make sure to add these new classes *after* the other CSS we're using to
    style our`<dt>` tags. That will ensure that the CSS cascades the way we intended.
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请确保在我们用来为`<dt>`标签添加样式的其他CSS之后添加这些新类。这样可以确保CSS按照我们的意图级联。
- en: So we have our CSS to show our questions are open, but how do we actually get
    to use it? We'll use jQuery to add the class to our question when it is opened,
    and to remove the class when it's closed.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所以我们有了CSS来显示我们的问题是打开的，但是我们如何实际使用它呢？我们将使用jQuery在问题打开时向我们的问题添加类，并在关闭时删除类。
- en: 'jQuery provides some nice methods for working with CSS classes. `addClass()`
    will add a class to a jQuery object and `removeClass()` will remove a class. However,
    we want to toggle our class just like we''re toggling the show and hide of our
    questions. jQuery''s got us covered for that too. We want the class to change
    when we click on the question, so we''ll add a line of code inside our `dynamicFaq`
    function that we''re calling each time a `<dt>` is clicked:'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: jQuery提供了一些很好的方法来处理CSS类。`addClass()`会将一个类添加到jQuery对象中，而`removeClass()`会删除一个类。但是，我们想要像切换问题的显示和隐藏一样切换我们的类。jQuery也为此提供了支持。当我们点击问题时，我们希望类发生变化，因此我们将在我们每次点击`<dt>`时调用的`dynamicFaq`函数中添加一行代码：
- en: '[PRE14]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Now when you view the page, you'll see your open styles being applied to the
    `<dt>` tags when they're open and removed again when they're closed. But we can
    actually crunch our code to be a little bit smaller.
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在当您查看页面时，您将看到在`<dt>`标签打开时应用的打开样式，并在关闭时再次删除。但我们实际上可以将我们的代码压缩得更小一些。
- en: One of the most powerful features of jQuery is called chaining. We've already
    used chaining in our code when we added `slideToggle()` to the `next()` method
    on one line.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: jQuery最强大的功能之一被称为链式调用。当我们在一行中向`next()`方法添加了`slideToggle()`时，我们已经使用了链式调用。
- en: '[PRE15]'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Methods in jQuery can be chained. You can keep adding new methods to further
    transform, modify or animate an element. This line of code gets the question,
    traverses the DOM to the next node, which we know is our `<dd>`, and then toggles
    the slide animation for that `<dd>.`
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: jQuery 中的方法可以链接在一起。您可以继续添加新的方法来进一步转换、修改或动画化一个元素。这行代码获取问题，遍历 DOM 到下一个节点，我们知道这是我们的
    `<dd>`，然后切换那个 `<dd>` 的滑动动画。
- en: 'We can take advantage of chaining again. We have a bit of redundancy in our
    code because we''re starting two different lines with `$(this)`. We can remove
    that extra `$(this)` and just add our `toggleClass()` method to the chain we''ve
    already started as follows:'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们可以再次利用链接。我们的代码中存在一些冗余，因为我们在两行不同的代码中都以 `$(this)` 开头。我们可以删除额外的 `$(this)`，并将我们的
    `toggleClass()` 方法添加到我们已经开始的链中，如下所示：
- en: '[PRE16]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![Time for action — adding some final touches](img/6709OS_03_img4.jpg)'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 — 添加最后的一些修饰](img/6709OS_03_img4.jpg)'
- en: What just happened?
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚刚发生了什么？
- en: We created CSS styles to style the open and closed states of our questions,
    and then we added a bit of code to our JavaScript to change the CSS class of the
    question to use our new styles. jQuery provides a few different methods for updating
    CSS classes, which is often a quick and easy way to update the display of our
    document in response to input from the site visitor. In this case, since we wanted
    to add and remove a class, we used the `toggleClass()` method. That saved us from
    having to figure out on our own if we needed to add or remove the open class.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建了 CSS 样式来为我们的问题的打开和关闭状态添加样式，然后我们在我们的 JavaScript 中添加了一点代码来更改问题的 CSS 类以使用我们的新样式。jQuery
    提供了几种不同的方法来更新 CSS 类，这通常是对来自站点访问者的输入做出响应时更新文档显示的一种快速简便的方法。在这种情况下，由于我们想要添加和移除一个类，所以我们使用了
    `toggleClass()` 方法。这使我们免于自己去弄清楚是否需要添加或移除打开类。
- en: We also took advantage of chaining to simply add this new functionality to our
    existing line of code, making the animated show and hide of the answer and the
    change of CSS class of our question happen all in just one line of code. How's
    that for impressive power in a short amount of code?
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还利用链接来简单地将这个新功能添加到我们现有的代码行中，使得答案的动画显示和隐藏以及我们问题的 CSS 类的更改都只需一行代码即可完成。这对于在短时间内用少量代码实现令人印象深刻的功能来说，算怎么样？
- en: Summary
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned how to set up a basic FAQ page that hides the answers
    to the questions until the site visitor needs to see them. Because jQuery made
    that so simple, we had plenty of time left over for enhancing our FAQ page even
    more, adding animations to our show and hide of the questions, and taking advantage
    of CSS to style our questions with special open and closed classes to communicate
    to our site visitors how our page works. And we did all of that with just a few
    lines of code.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何设置一个基本的常见问题解答页面，该页面在站点访问者需要查看答案之前隐藏问题。由于 jQuery 让这个过程变得如此简单，我们有足够的时间来进一步增强我们的常见问题解答页面，为我们的问题的显示和隐藏添加动画效果，并利用
    CSS 来为我们的问题添加特殊的打开和关闭类，以向我们的站点访问者传达我们页面的工作方式。而我们只用了几行代码就完成了所有这些工作。
- en: Next, we'll learn how to use custom scrollbars on our pages.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将学习如何在我们的页面上使用自定义滚动条。
