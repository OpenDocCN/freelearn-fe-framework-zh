- en: '17'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '17'
- en: Kick-Starting React Native Projects
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 快速启动React Native项目
- en: In this chapter, you’ll get up and running with React Native. Thankfully, much
    of the boilerplate code involved in the creation of a new project is handled for
    you by the command-line tools. We will look at the different CLI tools for React
    Native apps and create our first simple app, which you will be able to upload
    and start right on your device.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将开始使用React Native。幸运的是，创建新项目时涉及的大量样板代码由命令行工具为你处理。我们将探讨React Native应用程序的不同CLI工具，并创建我们的第一个简单应用程序，你将能够直接在你的设备上上传并启动。
- en: 'In this chapter, we’ll cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Exploring React Native CLI tools
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索React Native CLI工具
- en: Installing and using the Expo command-line tool
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装和使用Expo命令行工具
- en: Viewing your app on your phone
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在你的手机上查看你的应用程序
- en: Viewing your app on Expo Snack
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Expo Snack上查看你的应用程序
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: You can find the code files of this chapter on GitHub at [https://github.com/PacktPublishing/React-and-React-Native-5E/tree/main/Chapter17](https://github.com/PacktPublishing/React-and-React-Native-5E/tree/main/Chapter17).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在GitHub上找到本章的代码文件，地址为[https://github.com/PacktPublishing/React-and-React-Native-5E/tree/main/Chapter17](https://github.com/PacktPublishing/React-and-React-Native-5E/tree/main/Chapter17)。
- en: Exploring React Native CLI tools
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索React Native CLI工具
- en: 'To simplify and speed up the development process, we use special command-line
    tools that install blank projects with application templates, dependencies, and
    other tools for starting, building, and testing. There are two major CLI approaches
    we can apply:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简化并加快开发过程，我们使用特殊的命令行工具，这些工具安装带有应用程序模板、依赖项和其他工具的空白项目，以启动、构建和测试。我们可以应用两种主要的CLI方法：
- en: The React Native CLI
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: React Native CLI
- en: The Expo CLI
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Expo CLI
- en: 'The **React Native CLI** is a tool created by Meta. The project is based on
    the original CLI tool and has three parts: native iOS and Android projects and
    a React Native JavaScript app. To get started, you will need either **Xcode**
    or **Android Studio**. One of the main advantages of the React Native CLI is its
    flexibility. You can connect any library with a Native module or directly write
    code to the native parts. However, all of this requires at least a basic understanding
    of mobile development.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**React Native CLI**是由Meta创建的一个工具。该项目基于原始CLI工具，包括三个部分：原生iOS和Android项目以及一个React
    Native JavaScript应用程序。要开始，你需要**Xcode**或**Android Studio**。React Native CLI的主要优势之一是其灵活性。你可以将任何具有原生模块的库连接起来，或者直接编写代码到原生部分。然而，所有这些都需要至少对移动开发有基本的了解。'
- en: The **Expo CLI** is just one part of the big ecosystem for developing React
    Native apps. **Expo** is a framework and a platform for universal React applications.
    Built around React Native and native platforms, it allows you to build, deploy,
    test, and rapidly iterate on iOS, Android, and web apps from a single JavaScript/TypeScript
    code base.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**Expo CLI**是开发React Native应用程序的大生态系统的一部分。**Expo**是一个用于通用React应用程序的框架和平台。围绕React
    Native和原生平台构建，它允许你从单个JavaScript/TypeScript代码库中构建、部署、测试，并快速迭代iOS、Android和Web应用程序。'
- en: 'The Expo framework provides the following:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Expo框架提供以下功能：
- en: 'The **Expo CLI**: A command-line tool that can create blank projects, then
    run, build, and update them.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Expo CLI**：一个命令行工具，可以创建空白项目，然后运行、构建和更新它们。'
- en: '**Expo Go**: An Android and iOS app for running your projects directly on your
    device (without having to compile and sign native apps) and sharing them with
    your entire team.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Expo Go**：一个Android和iOS应用程序，可以直接在你的设备上运行你的项目（无需编译和签名原生应用程序）并与你的整个团队共享。'
- en: '**Expo Snack**: The online playground that allows you to develop React Native
    apps in the browser.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Expo Snack**：一个在线游乐场，允许你在浏览器中开发React Native应用程序。'
- en: '**Expo Application Services** (**EAS**): A set of deeply integrated cloud services
    for Expo and React Native applications. Apps can be compiled, signed, and uploaded
    to stores using EAS in the cloud.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Expo应用程序服务**（**EAS**）：一套深度集成的云服务，用于Expo和React Native应用程序。应用程序可以使用EAS在云中编译、签名并上传到商店。'
- en: Expo comes with a huge number of ready-to-use features. Previously, it imposed
    limitations on projects, as it did not support custom native modules. However,
    this limitation no longer exists. Expo now supports adding custom native code
    and customizing that native code (Android/Xcode projects) through Expo development
    builds. To use any custom native code, you can create a development build and
    config plugins.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Expo附带大量可用的功能。以前，它对项目施加了限制，因为它不支持自定义原生模块。然而，这种限制不再存在。现在，Expo支持通过Expo开发构建添加自定义原生代码和自定义原生代码（Android/Xcode项目）。要使用任何自定义原生代码，您可以创建开发构建和配置插件。
- en: Since Expo is useful for new developers without mobile development skills, we
    will use it to set up our first React Native project.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Expo对没有移动开发技能的新开发者很有用，我们将用它来设置我们的第一个React Native项目。
- en: Installing and using the Expo command-line tool
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和使用Expo命令行工具
- en: 'The **Expo command-line tool** handles the creation of all of the scaffolding
    that your project needs to run a basic React Native application. Additionally,
    Expo has a couple of other tools that make running our app during development
    nice and straightforward. But first, we need to set up the environment and project:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**Expo命令行工具**负责创建项目所需的所有脚手架，以便运行基本的React Native应用程序。此外，Expo还有一些其他工具，使在开发期间运行我们的应用程序变得简单直接。但首先，我们需要设置环境和项目：'
- en: 'Before we can use Expo, we need to install **Node.js**, **Git**, and **Watchman**.
    Watchman is a tool for watching files in our project to trigger actions like rebuilds
    when they change. All of the required tools and details can be found here: [https://docs.expo.dev/get-started/installation/#requirements](https://docs.expo.dev/get-started/installation/#requirements).'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们能够使用Expo之前，我们需要安装**Node.js**、**Git**和**Watchman**。Watchman是一个用于监视项目中文件的工具，当文件发生变化时，它可以触发诸如重建等操作。所有必需的工具和详细信息都可以在这里找到：[https://docs.expo.dev/get-started/installation/#requirements](https://docs.expo.dev/get-started/installation/#requirements)。
- en: 'Once this installation is complete, we can start a new project by running the
    command:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦安装完成，我们可以通过运行以下命令来启动新项目：
- en: '[PRE0]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Next, the CLI will ask you questions about your future project. You should
    see something like this in your terminal:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，CLI将询问您关于您未来项目的问题。您应该在终端看到类似以下内容：
- en: '[PRE1]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: We’ll choose the `Blank (TypeScript)` option.
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们将选择`Blank (TypeScript)`选项。
- en: 'Next, the process will ask you about a project name:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，进程将询问您项目名称：
- en: '[PRE2]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Let’s call it `my-project`.
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 让我们称它为`my-project`。
- en: 'After installing all the dependencies, Expo will finish creating your project
    for you:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装所有依赖项后，Expo将为您完成项目的创建：
- en: '[PRE3]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Now that we have created a blank React Native project, you’ll learn how to launch
    the Expo development server on your computer and view the app on one of your devices.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经创建了一个空白React Native项目，您将学习如何在您的计算机上启动Expo开发服务器并在您的设备之一上查看应用程序。
- en: Viewing your app on your phone
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在手机上查看您的应用
- en: 'In order to view your React Native project on your device during development,
    we need to start the Expo development server:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在开发期间在您的设备上查看React Native项目，我们需要启动Expo开发服务器：
- en: 'In the command-line terminal, make sure that you’re in the project directory:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在命令行终端中，请确保您位于项目目录中：
- en: '[PRE4]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Once you’re in `my-project`, you can run the following command to start the
    development server:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您进入`my-project`目录，您可以通过运行以下命令来启动开发服务器：
- en: '[PRE5]'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This will show you some information about the developer server in the terminal:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将在终端显示有关开发服务器的一些信息：
- en: '[PRE6]'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: In order to view the app on our devices, we need to install the **Expo Go**
    app. You can find it in the Play Store on Android devices or in the App Store
    on iOS devices. Once you have Expo installed, you scan the QR code using the native
    camera on your device:![Figure 16.2 – Expo Go app ](img/B19636_17_01.png)
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了在我们的设备上查看应用程序，我们需要安装**Expo Go**应用程序。您可以在Android设备的Play Store或iOS设备的App Store中找到它。一旦您安装了Expo，您可以使用设备上的原生相机扫描二维码：![图16.2
    – Expo Go应用](img/B19636_17_01.png)
- en: 'Figure 17.1: Expo Go app'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图17.1：Expo Go应用
- en: If you log in to Expo Go and the Expo CLI, you will be able to run the app without
    the QR code. In *Figure 17.1*, you can see the opened development session for
    `my-project`; if you click on it, the app will run.
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您登录到Expo Go和Expo CLI，您将能够运行应用程序而无需二维码。在*图17.1*中，您可以查看为`my-project`打开的开发会话；如果您点击它，应用程序将运行。
- en: 'Once the QR code is scanned or your opened session on Expo Go is clicked, you’ll
    notice new logs and a new connected device in the terminal:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦扫描二维码或您在Expo Go上打开的会话被点击，您将在终端中注意到新的日志和新的连接设备：
- en: '[PRE7]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Now you should see your app running:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在您应该能看到应用程序正在运行：
- en: '![](img/B19636_17_02.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19636_17_02.png)'
- en: 'Figure 17.2: Opened app in Expo Go'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.2：在 Expo Go 中打开的应用程序
- en: 'At this point, you’re ready to start developing your app. In fact, you can
    repeat this same process if you have several physical devices that you want to
    work with at the same time. The best part of this Expo setup is that we get live
    reloading for free on our physical devices as we make code updates on our computers.
    Let’s try this now to make sure that everything works as expected:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您已经准备好开始开发您的应用程序了。实际上，如果您同时想要使用多个物理设备，您可以重复此过程。这个 Expo 设置的最好部分是我们可以在计算机上对代码进行更新时，在物理设备上免费获得实时重新加载。现在让我们尝试一下，以确保一切按预期工作：
- en: 'Let’s open up the `App.ts` file inside the `my-project` folder. There, you’ll
    see the `App` component:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们打开 `my-project` 文件夹内的 `App.ts` 文件。在那里，您将看到 `App` 组件：
- en: '[PRE8]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Now let’s make a small style change to make the font bold:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们进行一个小小的样式更改，使字体加粗：
- en: '[PRE9]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'We’ve added a new style called `text` and applied it to the `Text` component.
    If you save the file and return to your device, you’ll immediately see the change
    applied:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们添加了一个名为 `text` 的新样式，并将其应用于 `Text` 组件。如果您保存文件并返回到您的设备，您将立即看到更改被应用：
- en: '![](img/B19636_17_03.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19636_17_03.png)'
- en: 'Figure 17.3: App with updates to style of text'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.3：更新了文本样式的应用程序
- en: Now that you’re able to run your apps locally on your physical devices, it’s
    time to look at running your React Native apps on a variety of virtual device
    emulators using the Expo Snack service.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您能够在物理设备上本地运行您的应用程序了，是时候看看如何使用 Expo Snack 服务在多种虚拟设备模拟器上运行您的 React Native 应用程序了。
- en: Viewing your app on Expo Snack
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Expo Snack 中查看您的应用程序
- en: 'The **Snack** service provided by Expo is a playground for your React Native
    code. It lets you organize your React Native project files just like you would
    locally on your computer. If you end up putting something together that is worth
    building on, you can export your Snack. You can also create an Expo account and
    save your Snacks to keep working on them or to share them with others. You can
    find Expo Snack with this link: [https://snack.expo.dev/](https://snack.expo.dev/).'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Expo 提供的 **Snack** 服务是您 React Native 代码的游乐场。它允许您像在本地计算机上一样组织您的 React Native
    项目文件。如果您最终组合出值得构建的东西，您可以导出您的 Snack。您还可以创建一个 Expo 账户并保存您的 Snacks 以继续工作或与他人分享。您可以通过此链接找到
    Expo Snack：[https://snack.expo.dev/](https://snack.expo.dev/).
- en: 'We can create a React Native app in Expo Snack from scratch, and it will be
    stored in an Expo account, or we can import existing projects from a Git repository.
    The nice thing about importing a repository is that when you push changes to Git,
    your Snack will also be updated. The Git URL for the example that we’ve worked
    on in this chapter looks like this: [https://github.com/PacktPublishing/React-and-React-Native-5E/tree/main/Chapter17/my-project](https://github.com/PacktPublishing/React-and-React-Native-5E/tree/main/Chapter17/my-project).'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在 Expo Snack 中从头开始创建一个 React Native 应用程序，它将被存储在 Expo 账户中，或者我们可以从 Git 仓库导入现有项目。导入仓库的好处是，当您向
    Git 推送更改时，您的 Snack 也会更新。本章中我们工作的示例的 Git URL 看起来是这样的：[https://github.com/PacktPublishing/React-and-React-Native-5E/tree/main/Chapter17/my-project](https://github.com/PacktPublishing/React-and-React-Native-5E/tree/main/Chapter17/my-project).
- en: 'We can click on the **Import git repository** button in the Snack project menu
    and paste in this URL:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在 Snack 项目菜单中点击 **导入 Git 仓库** 按钮，并粘贴此 URL：
- en: '![](img/B19636_17_04.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19636_17_04.png)'
- en: 'Figure 17.4: Importing a Git repository to Expo Snack'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.4：将 Git 仓库导入到 Expo Snack
- en: 'Once the repository is imported and the Snack is saved, you’ll get an updated
    Snack URL that reflects the Git repository location. For example, the Snack URL
    from this chapter looks like this: `https://snack.expo.dev/@sakhnyuk/2a2429`.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦导入仓库并保存 Snack，您将获得一个更新的 Snack URL，该 URL 反映了 Git 仓库的位置。例如，本章中的 Snack URL 看起来是这样的：`https://snack.expo.dev/@sakhnyuk/2a2429`.
- en: 'If you open this URL, the Snack interface will load and you can make changes
    to the code to test things out before running them. The main advantage of Snack
    is the ability to easily run it on virtualized devices. The controls to run your
    app on a virtual device can be found on the right side of the UI and look like
    this:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您打开此 URL，Snack 界面将加载，您可以在运行之前对代码进行更改以进行测试。Snack 的主要优势是能够在虚拟化设备上轻松运行。运行应用程序在虚拟设备上的控件可以在
    UI 的右侧找到，看起来像这样：
- en: '![](img/B19636_17_05.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19636_17_05.png)'
- en: 'Figure 17.5: Expo Snack emulator'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.5：Expo Snack 模拟器
- en: 'The top control above the image of the phone controls which device type to
    emulate: **Android**, **iOS**, or **Web**. The **Tap to play** button will launch
    the selected virtual device. The **Run on your device** button allows you to run
    the app in Expo Go using the QR code approach.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在手机图片上方的顶部控制栏用于选择要模拟的设备类型：**Android**、**iOS**或**Web**。**点击播放**按钮将启动选定的虚拟设备。**在您的设备上运行**按钮允许您使用二维码方法在Expo
    Go中运行应用。
- en: 'Here’s what our app looks like on a virtual iOS device:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们的应用在虚拟iOS设备上的样子：
- en: '![](img/B19636_17_06.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B19636_17_06.png)'
- en: 'Figure 17.6: Expo Snack iOS emulator'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图17.6：Expo Snack iOS模拟器
- en: 'And here’s what our app looks like on a virtual Android device:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 然后这是我们的应用在虚拟安卓设备上的样子：
- en: '![](img/B19636_17_07.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B19636_17_07.png)'
- en: 'Figure 17.7: Expo Snack Android emulator'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图17.7：Expo Snack安卓模拟器
- en: This app only displays text and applies some styles to it, so it looks pretty
    much identical on different platforms. As we make our way through the React Native
    chapters in this book, you’ll see how useful a tool such as Snack is for making
    comparisons between the two platforms to understand the differences between them.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 此应用仅显示文本并对它应用一些样式，因此在不同的平台上看起来几乎相同。随着我们在这本书的React Native章节中继续前进，你会看到Snack这样的工具在比较两个平台以及理解它们之间的差异方面是多么有用。
- en: Summary
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned how to kick-start a React Native project using
    the Expo command-line tool. First, you learned how to install the Expo tool. Then,
    you learned how to initialize a new React Native project. Next, you started the
    Expo development server and learned about the various parts of the development
    server UI.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了如何使用Expo命令行工具启动React Native项目。首先，你学习了如何安装Expo工具。然后，你学习了如何初始化一个新的React
    Native项目。接下来，你启动了Expo开发服务器，并了解了开发服务器UI的各个部分。
- en: In particular, you learned how to connect the development server with the Expo
    app on any device that you want to test your app on. Expo also has the Snack service,
    which lets us experiment with snippets of code or entire Git repositories. You
    learned how to import a repository and run it on virtual iOS and Android devices.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 特别是，你学习了如何将开发服务器与任何你想要测试应用的设备上的Expo应用连接起来。Expo还提供了Snack服务，它允许我们实验代码片段或整个Git仓库。你学习了如何导入仓库并在虚拟iOS和Android设备上运行它。
- en: In the next chapter, we’ll look at how to build responsive layouts in our React
    Native apps.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨如何在我们的React Native应用中构建响应式布局。
