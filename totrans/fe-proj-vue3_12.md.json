["```js\nnpm run build\nnpm run test:e2e\n```", "```js\n// https://docs.cypress.io/api/introduction/api.html\ndescribe('My First Test', () => {\n  it('visits the app root url', () => {\n    cy.visit('/')\n    cy.contains('h1', 'You did it!')\n  })\n})\n```", "```js\ndescribe('My First Test', () => {\n  it('Opens an arbitrary URL', () => {\n    cy.visit('https://google.com')\n    cy.get('input').should('exist')\n  })\n})\n```", "```js\n<template>\n<h2>Commentator Pro</h2>\n</template>\n```", "```js\ndescribe('Commentator Pro', () => {\n  it('Has a h2 with \"Commentator Pro\"', () => {\n    cy.visit('/')\n    cy.contains('h2', 'Commentator Pro')\n  })\n})\n```", "```js\n    <template>\n    ```", "```js\n    <h2>Commentator Pro</h2>\n    ```", "```js\n    <button>\n    ```", "```js\n    Add a New Comment\n    ```", "```js\n    </button>\n    ```", "```js\n    </template>\n    ```", "```js\n    describe('Adding a New Comment', () => {\n    ```", "```js\n      it('the homepage should have a button with the right\n    ```", "```js\n      text', () => {\n    ```", "```js\n        // test will go here\n    ```", "```js\n      })\n    ```", "```js\n    })\n    ```", "```js\n    describe('Adding a New Comment', () => {\n    ```", "```js\n      it('the homepage should have a button with the right\n    ```", "```js\n      text', () => {\n    ```", "```js\n        cy.visit('/')\n    ```", "```js\n      })\n    ```", "```js\n    })\n    ```", "```js\n    describe('Adding a New Comment', () => {\n    ```", "```js\n      it('the homepage should have a button with the right\n    ```", "```js\n      text', () => {\n    ```", "```js\n        cy.visit('/')\n    ```", "```js\n        cy.contains('button', 'Add a New Comment')\n    ```", "```js\n      })\n    ```", "```js\n    })\n    ```", "```js\n<template>\n<h2>Commentator Pro</h2>\n<button data-test-id=\"new-comment-button\">\nAdd a New Comment\n</button>\n</template>\n```", "```js\n<template>\n<h2>Commentator Pro</h2>\n<button @click=\"showEditor = !showEditor\"\n  data-test-id=\"new-comment-button\">\nAdd a New Comment\n</button>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      showEditor: false\n    }\n  }\n}\n</script>\n```", "```js\n<template>\n<!-- rest of template -->\n<div v-if=\"showEditor\">\n  <p>\n  <textarea data-test-id=\"new-comment-editor\"></textarea>\n  </p>\n</div>\n</template>\n```", "```js\ndescribe('Adding a New Comment', () => {\n  // other tests\n  it('the Add a New Comment button should toggle the editor\n  display on and off', () => {\n    cy.visit('/')\n    cy.get('[data-test-id=\"new-comment-editor\"]')\n      .should('not.exist')\n    cy.get('[data-test-id=\"new-comment-button\"]').click()\n    cy.get('[data-test-id=\"new-comment-editor\"]')\n      .should('be.visible')\n    cy.get('[data-test-id=\"new-comment-button\"]').click()\n    cy.get('[data-test-id=\"new-comment-editor\"]')\n      .should('not.exist')\n  })\n})\n```", "```js\n    <template>\n    ```", "```js\n    <!-- rest of template -->\n    ```", "```js\n      <p>\n    ```", "```js\n      <textarea data-test-id=\"new-comment-editor\"\n    ```", "```js\n        v-model=\"newComment\"></textarea>\n    ```", "```js\n      </p>\n    ```", "```js\n    <!-- rest of template -->\n    ```", "```js\n    </template>\n    ```", "```js\n    <script>\n    ```", "```js\n    export default {\n    ```", "```js\n      data() {\n    ```", "```js\n        return {\n    ```", "```js\n          showEditor: false,\n    ```", "```js\n          newComment: ''\n    ```", "```js\n        }\n    ```", "```js\n      }\n    ```", "```js\n    }\n    ```", "```js\n    </script>\n    ```", "```js\n    <!-- rest of template -->\n    ```", "```js\n    <div v-if=\"showEditor\">\n    ```", "```js\n      <p>\n    ```", "```js\n      <textarea data-test-id=\"new-comment-editor\"\n    ```", "```js\n        v-model=\"newComment\"></textarea>\n    ```", "```js\n      </p>\n    ```", "```js\n      <p>\n    ```", "```js\n      <button data-test-id=\"new-comment-submit\">\n    ```", "```js\n        Submit\n    ```", "```js\n      </button>\n    ```", "```js\n      </p>\n    ```", "```js\n    </div>\n    ```", "```js\n    <!-- rest of template -->\n    ```", "```js\ndescribe('Adding a New Comment', () => {\n  // other tests\n  it('the new comment editor should support text\n  input', () => {\n    cy.visit('/')\n    // Get the editor to show\n    cy.get('[data-test-id=\"new-comment-button\"]')\n      .click()\n    cy.get('[data-test-id=\"new-comment-editor\"]')\n      .should('be.visible')\n    cy.get('[data-test-id=\"new-comment-editor\"]')\n      .type('Just saying...')\n      .should('have.value', 'Just saying...')\n  })\n})\n```", "```js\n    describe('Adding a New Comment', () => {\n    ```", "```js\n      // other tests\n    ```", "```js\n      it('the new comment editor should have a submit\n    ```", "```js\n      button', () => {\n    ```", "```js\n        cy.visit('/')\n    ```", "```js\n        cy.get('[data-test-id=\"new-comment-submit\"]')\n    ```", "```js\n          .should('not.exist')\n    ```", "```js\n        // Get the editor to show\n    ```", "```js\n        cy.get('[data-test-id=\"new-comment-button\"]')\n    ```", "```js\n          .click()\n    ```", "```js\n        cy.get('[data-test-id=\"new-comment-submit\"]')\n    ```", "```js\n          .should('be.visible')\n    ```", "```js\n        cy.contains('[data-test-id=\"new-comment-submit\"]',\n    ```", "```js\n                    'Submit')\n    ```", "```js\n      })\n    ```", "```js\n    })\n    ```", "```js\n    <button data-test-id=\"new-comment-submit\"\n    ```", "```js\n      :disabled=\"!newComment\">\n    ```", "```js\n      Submit\n    ```", "```js\n    </button>\n    ```", "```js\n    describe('Adding a New Comment', () => {\n    ```", "```js\n      // other tests\n    ```", "```js\n      it('the new comment submit button should be disabled\n    ```", "```js\n      based on \"new comment\" content', () => {\n    ```", "```js\n        cy.visit('/')\n    ```", "```js\n        // Get the editor to show\n    ```", "```js\n        cy.get('[data-test-id=\"new-comment-button\"]')\n    ```", "```js\n          .click()\n    ```", "```js\n        cy.get('[data-test-id=\"new-comment-submit\"]')\n    ```", "```js\n          .should('be.visible')\n    ```", "```js\n        cy.get('[data-test-id=\"new-comment-submit\"]')\n    ```", "```js\n          .should('be.disabled')\n    ```", "```js\n        cy.get('[data-test-id=\"new-comment-editor\"]')\n    ```", "```js\n          .type('Just saying...')\n    ```", "```js\n        cy.get('[data-test-id=\"new-comment-submit\"]')\n    ```", "```js\n          .should('not.be.disabled')\n    ```", "```js\n      })\n    ```", "```js\n    })\n    ```", "```js\n    <style scoped>\n    ```", "```js\n    .submitting {\n    ```", "```js\n      font-style: italic;\n    ```", "```js\n    }\n    ```", "```js\n    </style>\n    ```", "```js\n    <script>\n    ```", "```js\n    export default {\n    ```", "```js\n      data() {\n    ```", "```js\n        return {\n    ```", "```js\n          // other properties\n    ```", "```js\n          isSubmitting: false\n    ```", "```js\n        }\n    ```", "```js\n      }\n    ```", "```js\n    }\n    ```", "```js\n    </script>\n    ```", "```js\n    <script>\n    ```", "```js\n    export default {\n    ```", "```js\n      // other component properties\n    ```", "```js\n      methods: {\n    ```", "```js\n        submitNewComment() {\n    ```", "```js\n          this.isSubmitting = true\n    ```", "```js\n          setTimeout(() => {\n    ```", "```js\n            this.isSubmitting = false;\n    ```", "```js\n            this.newComment = '';\n    ```", "```js\n          }, 2500)\n    ```", "```js\n        }\n    ```", "```js\n      }\n    ```", "```js\n    }\n    ```", "```js\n    </script>\n    ```", "```js\n    <template>\n    ```", "```js\n      <!-- rest of template -->\n    ```", "```js\n      <div v-if=\"showEditor\">\n    ```", "```js\n      <!-- rest of editor -->\n    ```", "```js\n      <button data-test-id=\"new-comment-submit\"\n    ```", "```js\n        :disabled=\"!newComment\"\n    ```", "```js\n          @click=\"submitNewComment()\">Submit\n    ```", "```js\n      </button>\n    ```", "```js\n      </div>\n    ```", "```js\n    </template>\n    ```", "```js\n    <button data-test-id=\"new-comment-submit\"\n    ```", "```js\n    :disabled=\"!newComment || isSubmitting\"\n    ```", "```js\n    :class=\"{submitting:isSubmitting}\"\n    ```", "```js\n    @click=\"submitNewComment()\">\n    ```", "```js\n    Submit\n    ```", "```js\n    </button>\n    ```", "```js\n  it('the new comment editor should show a submitting\n  class on submit', () => {\n    cy.visit('/')\n    // Get the editor to show\n    cy.get('[data-test-id=\"new-comment-button\"]')\n      .click()\n    cy.get('[data-test-id=\"new-comment-submit\"]')\n      .should('be.visible')\n    cy.get('[data-test-id=\"new-comment-editor\"]')\n      .type('Just saying...')\n    cy.get('[data-test-id=\"new-comment-submit\"]')\n      .should('not.be.disabled')\n      .click()\n      .should('have.class', 'submitting')\n      .should('be.disabled')\n      // eventually, the submitting class should be\n         removed\n    cy.get('[data-test-id=\"new-comment-submit\"]')\n      .should('not.have.class', 'submitting')\n  })\n```", "```js\n<script>\n// imports\nexport default {\n  data() {\n    return {\n      // other data properties\n      comments: []\n    }\n  },\n  mounted() {\n    fetch('https://jsonplaceholder.typicode.com/comments')\n      .then(res => res.json())\n      .then(comments => {\n        this.comments = comments\n      })\n  }\n  // other component properties\n}\n</script>\n```", "```js\n<div v-if=\"comments.length > 0\" data-test-id=\"comments-list\">\n<div v-for=\"(comment, index) in comments\":key=\"comment.id + index\"data-test-id=\"comment\">\n  <p>{{ comment.body }}</p>\n  <p><a :href=\"'mailto:' + comment.email\">\n    {{ comment.email }}</a>\n  </p>\n    </div>\n</div>\n```", "```js\ndescribe('Loading Existing Comments', () => {\n  it('should load & display comments', () => {\n    cy.visit('/')\n    cy.get('[data-test-id=\"comments-list\"]')\n      .should('be.visible')\n    cy.get('[data-test-id=\"comment-card\"]')\n      .should('have.length.gt', 0)\n  })\n})\n```", "```js\nit('should load and display comments correctly', () => {\n  cy.intercept('**/comments', [\n    {\n      body: 'Vue is getting great adoption',\n      email: 'evan@vuejs.org',\n      id: 100,\n    },\n    {\n      body: 'Just saying...',\n      email: 'evan@vuejs.org',\n      id: 10\n    },\n    {\n      body: 'The JS ecosystem is great',\n      email: 'evan@vuejs.org',\n      id: 1\n    }\n  ]).as('getComments')\n}\n```", "```js\ndescribe('Loading Existing Comments', () => {\n  // other tests\n  it('should load and display comments correctly', () => {\n    // test setup\n    cy.visit('/')\n    cy.wait('@getComments')\n  })\n})\n```", "```js\ndescribe('Loading Existing Comments', () => {\n  // other tests\n  it('should load and display comments correctly', () => {\n    // test setup\n    cy.get('[data-test-id=\"comments-list\"]')\n      .should('be.visible')\n    cy.get('[data-test-id=\"comment-card\"]')\n      .should('have.length', 3)\n  })\n})\n```", "```js\ndescribe('Loading Existing Comments', () => {\n  // other tests\n  it('should load and display comments correctly', () => {\n    // test setup\n    cy.contains('[data-test-id=\"comment-card\"]', 'Vue is\n      getting great adoption').contains('evan@vuejs.org')\n    cy.contains('[data-test-id=\"comment-card\"]',\n      'Just saying...').contains('evan@vuejs.org')\n    cy.contains('[data-test-id=\"comment-card\"]', 'The JS\n      ecosystem is great').contains('evan@vuejs.org')\n  })\n})\n```", "```js\n    <script>\n    ```", "```js\n    // imports\n    ```", "```js\n    export default {\n    ```", "```js\n      // other component properties\n    ```", "```js\n      data: {\n    ```", "```js\n        // other data\n    ```", "```js\n        email:'fakeemail@email.com'\n    ```", "```js\n      },\n    ```", "```js\n      methods: {\n    ```", "```js\n        submitNewComment() {\n    ```", "```js\n          this.isSubmitting = true\n    ```", "```js\n      fetch('https://jsonplaceholder.typicode.com/comments  ', {\n    ```", "```js\n           method: 'POST',\n    ```", "```js\n           headers: {\n    ```", "```js\n             'Content-Type': 'application/json'\n    ```", "```js\n           },\n    ```", "```js\n           body: JSON.stringify({\n    ```", "```js\n             email: this.email,\n    ```", "```js\n             body: this.newComment\n    ```", "```js\n           })\n    ```", "```js\n      })\n    ```", "```js\n      }\n    ```", "```js\n      }\n    ```", "```js\n    }\n    ```", "```js\n    </script>\n    ```", "```js\n<script>\n// imports\nexport default {\n  // other component properties\n  methods: {\n    submitNewComment() {\n      this.isSubmitting = true\n      fetch(\n        // fetch params\n      ).then(res => res.json())\n       .then(data => {\n          this.comments = [\n          data,\n          ...this.comments,\n          ]\n          this.isSubmitting = false\n          this.newComment = ''\n       })\n       .catch(() => {\n          this.isSubmitting = false\n       })\n    }\n  }\n}\n</script>\n```", "```js\n    describe('Adding a New Comment', () => {\n    ```", "```js\n      beforeEach(() => {\n    ```", "```js\n        cy.intercept('GET','**/comments', []);\n    ```", "```js\n      })\n    ```", "```js\n      // tests\n    ```", "```js\nit('the new comment editor should show a submitting class on submit', () => {\n  cy.intercept('POST', '**/comments', (req) => {\n    req.reply({\n      delay: 1500, response: {}\n  });\n}).as('newComment');\n```", "```js\n    describe('Adding a New Comment', () => {\n    ```", "```js\n      // setup & tests\n    ```", "```js\n      it('the new comment editor should show a spinner on\n    ```", "```js\n      submit', () => {\n    ```", "```js\n        // test setup\n    ```", "```js\n        // click the \"submit\" button\n    ```", "```js\n        // check the submitting class appears\n    ```", "```js\n        cy.wait('@newComment')\n    ```", "```js\n        // check that the submitting class is gone\n    ```", "```js\n      })\n    ```", "```js\n    })\n    ```", "```js\n    it('adding a new comment should clear the comment\n    text', () => {\n      cy.intercept('POST', '**/comments', {\n        body: {\n          body: 'Just saying...',\n          email: 'hi@raymondcamden.com'\n        }\n      }).as('newComment');\n      cy.visit('/')\n      // Get the editor to show\n      cy.get('[data-test-id=\"new-comment-button\"]')\n        .click()\n      cy.get('[data-test-id=\"new-comment-submit\"]')\n        .should('be.visible')\n      cy.get('[data-test-id=\"new-comment-editor\"]')\n        .type('Just saying...')\n      cy.get('[data-test-id=\"new-comment-submit\"]')\n        .should('not.be.disabled')\n        .click()\n      cy.wait('@newComment');\n      cy.get('[data-test-id=\"new-comment-editor\"]')\n        .should('have.value','')\n    });\n```", "```js\n    describe('Adding a New Comment', () => {\n    ```", "```js\n      // setup & other tests\n    ```", "```js\n      it('submitting a new comment should POST to\n    ```", "```js\n      /comments and adds response to top of comments\n    ```", "```js\n      list', () => {\n    ```", "```js\n        cy.intercept('GET', '**/comments', [\n    ```", "```js\n          {\n    ```", "```js\n            email: 'evan@vuejs.org',\n    ```", "```js\n            body: 'Existing comment'\n    ```", "```js\n          }\n    ```", "```js\n        ]).as('newComment')\n    ```", "```js\n      })\n    ```", "```js\n    })\n    ```", "```js\n    describe('Adding a New Comment', () => {\n    ```", "```js\n      // setup & other tests\n    ```", "```js\n      it('submitting a new comment should POST to\n    ```", "```js\n      /comments and adds response to top of comments\n    ```", "```js\n      list', () => {\n    ```", "```js\n        // GET request stubbing\n    ```", "```js\n        cy.intercept({\n    ```", "```js\n          method: 'POST',\n    ```", "```js\n          url: '**/comments',\n    ```", "```js\n          response: {\n    ```", "```js\n            email: 'evan@vuejs.org',\n    ```", "```js\n            body: 'Just saying...',\n    ```", "```js\n          },\n    ```", "```js\n        }).as('newComment')\n    ```", "```js\n        cy.visit('/')\n    ```", "```js\n        cy.get('[data-test-id=\"comment-card\"]').should\n    ```", "```js\n          ('have.length', 1)\n    ```", "```js\n        cy.get('[data-test-id=\"new-comment-button\"]')\n    ```", "```js\n          .click()\n    ```", "```js\n        cy.get('[data-test-id=\"new-comment-editor\"]')\n    ```", "```js\n          .type('Just saying...')\n    ```", "```js\n        cy.get('[data-test-id=\"new-comment-submit\"]')\n    ```", "```js\n          .should('not.be.disabled')\n    ```", "```js\n          .click()\n    ```", "```js\n        cy.wait('@newComment')\n    ```", "```js\n      })\n    ```", "```js\n    })\n    ```", "```js\n    describe('Adding a New Comment', () => {\n    ```", "```js\n      // setup & other tests\n    ```", "```js\n      it('submitting a new comment should POST to\n    ```", "```js\n      /comments and adds response to top of comments\n    ```", "```js\n      list', () => {\n    ```", "```js\n        // setup & wait for POST completion\n    ```", "```js\n        cy.get('[data-test-id=\"comments-list\"]')\n    ```", "```js\n          .should('be.visible')\n    ```", "```js\n        cy.get('[data-test-id=\"comment-card\"]')\n    ```", "```js\n          .should('have.length', 2).first()\n    ```", "```js\n          .contains('[data-test-id=\"comment-card\"]',\n    ```", "```js\n          'Just saying...')\n    ```", "```js\n          .contains('fakeemail@email.com')\n    ```", "```js\n      })\n    ```", "```js\n    })\n    ```"]