["```js\nexport default {\n  methods: {\n    greet(name) {\n      return `${this.greeting} ${name}`\n    }\n  },\n  data() {\n    return {\n      greeting: 'Hello'\n    }\n  }\n}\n```", "```js\n<template>\n  <div>{{ greet('World') }}</div>\n</template>\n<script>\nimport greeter from './mixins/greeter.js'\nexport default {\n  mixins: [greeter]\n}\n</script>\n```", "```js\n<script>\n// other imports\nexport default {\n  // other component properties\n  data() {\n    return {\n      greeting: 'Hi'\n    }\n  }\n}\n</script>\n```", "```js\n<template>\n  <div ref=\"zone\" />\n</template>\n<script>\nconst firstMixin = {\n  mounted() {\n    console.log('First mixin mounted hook')\n  }\n}\nconst secondMixin = {\n  mounted() {\n    console.log('Second mixin mounted hook')\n  }\n}\nexport default {\n  mixins: [firstMixin, secondMixin],\n  mounted() {\n    console.log('Component mounted hook')\n  }\n}\n</script>\n```", "```js\nVue.mixin({\n  methods: {\n    $greet(greeting, name) {\n      return `${greeting} ${name}`\n    }\n  }\n})\n```", "```js\n    export default {}\n    ```", "```js\n    export default {\n      methods: {\n        debug(obj) {\n          return JSON.stringify(obj, null, 2)\n        }\n      }\n    }\n    ```", "```js\n    <script>\n    import debug from './mixins/debug.js'\n    export default {\n      mixins: [debug],\n    }\n    </script>\n    ```", "```js\n    <script>\n    // imports\n    export default {\n      // other component properties\n      data() {\n        return {\n          myObj: {\n            some: 'data',\n            other: 'values'\n          }\n        }\n      },\n      created() {\n        console.log(this.debug(this.myObj))\n      }\n    }\n    </script>\n    ```", "```js\n    <template>\n      <div id=\"app\">\n        <pre>{{ debug(myObj) }}</pre>\n      </div>\n    </template>\n    ```", "```js\nconst plugin = {\n  install(Vue, options) {}\n}\n```", "```js\nconst plugin = {\n  install(Vue, options) {\n    Vue.directive('fade', { bind() {} })\n    Vue.filter('truncate', str => str.slice(0, 140))\n    Vue.mixin({\n      data() { return { empty: true } }\n    })\n    Vue.globalProperty = 'very-global-value'\n    Vue.prototype.$myInstanceMethod = function() {}\n  }\n}\n```", "```js\nimport plugin from './plugin'\nVue.use(plugin)\n```", "```js\nVue.use(plugin, { optionProperty: true })\n```", "```js\n    import axios from 'axios'\n    export default {\n      install(Vue, options) {}\n    }\n    ```", "```js\n    // other imports\n    import axiosPlugin from './plugins/axios.js'\n    // other code\n    Vue.use(axiosPlugin)\n    // Vue instantiation code\n    ```", "```js\n    npm install --save axios\n    ```", "```js\n    import axios from 'axios'\n    export default {\n      install(Vue) {\n        Vue.axios = axios\n      }\n    }\n    ```", "```js\n    <template>\n      <div id=\"app\">\n        <div v-for=\"todo in todos\" :key=\"todo.id\">\n          <ul>\n            <li>Title: {{ todo.title }}</li>\n            <li>Status: {{ todo.completed ? \"Completed\" :           \"Not Completed\" }}</li>\n          </ul>\n        </div>\n      </div>\n    </template>\n    <script>\n    import Vue from 'vue'\n    export default {\n      async mounted() {\n        const { data: todos } = await       Vue.axios('https://jsonplaceholder.typicode.com/todos')\n        this.todos = todos\n      },\n      data() {\n        return { todos: [] }\n      }\n    }\n    </script>\n    ```", "```js\n    // imports\n    export default {\n      install(Vue, options) {\n        // other plugin code\n        Vue.prototype.axios = axios\n      }\n    }\n    ```", "```js\n    <script>\n    export default {\n      async mounted() {\n        const { data: todos } = await       this.axios('https://jsonplaceholder.typicode.com/todos')\n        this.todos = todos\n      },\n      data() {\n        return { todos: [] }\n      }\n    }\n    </script>\n    ```", "```js\n<template>\n  <button @click=\"$emit('click', $event)\">\n    <slot />\n  </button>\n</template>\n```", "```js\n// other imports\nimport CustomButton from './components/CustomButton.vue'\nVue.component('CustomButton', CustomButton)\n// other global instance setup\n```", "```js\n<template>\n  <div>\n    <CustomButton>Click Me</CustomButton>\n  </div>\n</template>\n```", "```js\n<template>\n  <div>Date as epoch: {{ epoch }}</div>\n</template>\n<script>\nexport default {\n  props: {\n    date: {\n      type: Date,\n      default() {\n        return new Date()\n      }\n    }\n  },\n  computed: {\n    epoch() {\n      return Number(this.date)\n    }\n  }\n}\n</script>\n```", "```js\nDate as epoch: 1574289255348\n```", "```js\n<template>\n  <div>\n    <slot :epoch=\"epoch\" />\n  </div>\n</template>\n```", "```js\n<template>\n  <div>\n    <Epoch>\n      <template v-slot:default=\"{ epoch }\">\n        Epoch as rendered with parent template {{ epoch }}\n      </template>\n    </Epoch>\n  </div>\n</template>\n```", "```js\nEpoch as rendered with parent template 1574289270190\n```", "```js\n<template>\n  <input v-bind=\"$attrs\">\n</template>\n```", "```js\n<template>\n  <div id=\"app\">\n    <fieldset>\n      <label for=\"textinput\">\n        Text Input\n      </label>\n      <CustomInput\n      type=\"text\"\n      name=\"textinput\"\n      id=\"textinput\"\n      />\n    </fieldset>\n    <fieldset>\n      <label for=\"dateinput\">\n        Date Input\n      </label>\n      <CustomInput\n        type=\"date\"\n        name=\"dateinput\"\n        id=\"dateinput\"\n      />\n    </fieldset>\n  </div>\n</template>\n<script>\nimport CustomInput from './components/CustomInput.vue'\nexport default {\n  components: {\n    CustomInput\n  }\n}\n</script>\n```", "```js\n<template>\n  <div>\n    <textarea\n      v-if=\"type === 'long'\"\n      :value=\"value\"\n      @input=\"$emit('input', $event.target.value)\"\n    >\n    </textarea>\n    <input\n      v-else\n      :value=\"value\"\n      @input=\"$emit('input', $event.target.value)\"\n      type=\"text\"\n    />\n  </div>\n</template>\n<script>\nexport default {\n  props: ['value', 'type']\n}\n</script>\n```", "```js\n<template>\n  <div id=\"app\">\n    <label>Short Text: {{ shortText }}</label>\n    <TextInput v-model=\"shortText\" type=\"short\" />\n    <label>Long Text: {{ longText }}</label>\n    <TextInput v-model=\"longText\" type=\"long\" />\n  </div>\n</template>\n<script>\nimport TextInput from './components/TextInput.vue'\nexport default {\n  components: {\n    TextInput\n  },\n  data() {\n    return {\n      shortText: '',\n      longText: ''\n    }\n  }\n}\n</script>\n```", "```js\nexport default {\n  template: `<div>String Template Component</div>`\n}\n```", "```js\n<template>\n  <div id=\"app\">\n    <StringTemplate />\n  </div>\n</template>\n<script>\nimport StringTemplate from './components/StringTemplate.js'\nexport default {\n  components: {\n    StringTemplate\n  }\n}\n</script>\n```", "```js\nmodule.exports = {\n  runtimeCompiler: true\n};\n```", "```js\nString Template Component\n```", "```js\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n```", "```js\nexport default {\n  render(createElement) {\n    return createElement(\n      'h2',\n      'Render Function Component'\n    )\n  }\n}\n```", "```js\n<template>\n  <div id=\"app\">\n    <RenderFunction />\n  </div>\n</template>\n<script>\nimport RenderFunction from './components/RenderFunction.js'\nexport default {\n  components: {\n    RenderFunction\n  }\n}\n</script>\n```", "```js\nRender Function Component\n```", "```js\nexport default {\n  render() {\n    return <h2>JSX Render Function Component</h2>\n  }\n}\n```", "```js\nexport default {\n  render(createElement) {\n    return createElement(\n      'h2',\n      'JSX Render Function Component'\n    )\n  }\n}\n```", "```js\n<template>\n  <div id=\"app\">\n    <JSXRender />\n  </div>\n</template>\n<script>\nimport JSXRender from './components/JSXRender.js'\nexport default {\n  components: {\n    JSXRender\n  }\n}\n</script>\n```", "```js\nJSX Render Function Component\n```", "```js\n<component :is=\"componentName\" />\n```", "```js\n<template>\n  <div id=\"app\">\n    <div class=\"grid\">\n      <component\n        class=\"grid-item\"\n        v-for=\"item in items\"\n        :key=\"item.id\"\n      />\n    </div>\n  </div>\n</template>\n<script>\nimport Card from './components/Card.vue';\nimport ImageEntry from './components/ImageEntry.vue';\nexport default {\n  components: {\n    Card,\n    ImageEntry\n  },\n  data() {\n    return {\n      items: [\n        {\n          id: '10',\n          title: 'Forest Shot',\n          url: 'https://picsum.photos/id/10/1000/750.jpg',\n        },\n        {\n          id: '1000',\n          title: 'Cold cross',\n          url: 'https://picsum.photos/id/1000/1000/750.jpg',\n        },\n        {\n          id: '1002',\n          title: 'NASA shot',\n          url: 'https://picsum.photos/id/1002/1000/750.jpg',\n        },\n        {\n          id: '866',\n          title: 'Peak',\n          url: 'https://picsum.photos/id/866/1000/750.jpg'\n        },\n      ]\n    }\n  }\n}\n</script>\n```", "```js\n<template>\n    <!-- rest of template -->\n    <component\n      :is=\"itemComponent\"\n      class=\"grid-item\"\n      v-for=\"item in items\"\n      :key=\"item.id\"\n    />\n    <!-- rest of template -->\n</template>\n<script>\n// rest of script\nexport default {\n  // other component properties\n  data() {\n    return {\n      itemComponent: 'card',\n      // other data properties eg. `items`\n    }\n  }\n}\n</script>\n```", "```js\n<template>\n  <!-- rest of template -->\n  Display mode:\n  <input\n    type=\"radio\"\n    name=\"style\"\n    value=\"card\"\n    v-model=\"itemComponent\"\n    id=\"card-radio\"\n  />\n  <label for=\"card-radio\">Card</label>\n  <input\n    type=\"radio\"\n    name=\"style\"\n    value=\"image-entry\"\n    v-model=\"itemComponent\"\n    id=\"image-radio\"\n  />\n  <label for=\"image-radio\">Image</label>\n  <!-- rest of template -->\n</template>\n```", "```js\n<script>\n// rest of script\nexport default {\n  // other component properties\n  data() {\n    return {\n      itemComponent: Card,\n      // other data properties eg. `items`\n    }\n  }\n}\n</script>\n```", "```js\n<template>\n    <!-- rest of template -->\n    <component\n      class=\"grid-item\"\n      v-for=\"item in items\"\n      :key=\"item.id\"\n      :is=\"itemComponent\"\n\n      :url=\"item.url\"\n      :title=\"item.title\"\n    />\n    <!-- rest of template -->\n</template>\n```", "```js\n<template>\n  <div class=\"card\">\n    <img :src=\"img/url\" width=\"100%\" />\n    <h3>{{ title }}</h3>\n  </div>\n</template>\n<script>\nexport default {\n  props: {\n    url: String,\n    title: String\n  }\n}\n</script>\n<style scoped>\n.card {\n  margin: 10px;\n  max-width: 150px;\n}\nh3 {\n  font-weight: normal;\n}\n</style>\n```", "```js\n<template>\n  <img class=\"image\" :src=\"img/url\" />\n</template>\n<script>\nexport default {\n  props: {\n    url: String\n  }\n}\n</script>\n<style scoped>\n.image {\n  margin: 20px;\n  max-width: 300px;\n}\n</style>\n```", "```js\n<template>\n  <div id=\"app\">\n    <component\n      :is=\"activeStep\"\n      @next=\"activeStep = 'second-step'\"\n      @back=\"activeStep = 'first-step'\"\n    />\n  </div>\n</template>\n<script>\nimport FirstStep from './components/FirstStep.vue'\nimport SecondStep from './components/SecondStep.vue'\nexport default {\n  components: {\n    FirstStep,\n    SecondStep\n  },\n  data() {\n    return {\n      activeStep: 'first-step',\n    }\n  }\n}\n</script>\n```", "```js\n<template>\n  <!-- rest of template -->\n  <keep-alive>\n    <component\n      :is=\"activeStep\"\n      @next=\"activeStep = 'second-step'\"\n      @back=\"activeStep = 'first-step'\"\n    />\n  </keep-alive>\n  <!-- rest of template -->\n</template>\n```", "```js\n    <template>\n      <div class=\"card\">\n        <img :src=\"img/url\" width=\"100%\" />\n        <h3>{{ title }}</h3>\n        <p>{{ description }}</p>\n      </div>\n    </template>\n    <script>\n    export default {\n      props: ['url', 'title', 'description']\n    }\n    </script>\n    <style scoped>\n    .card {\n      display: flex;\n      flex-direction: column;\n      max-width: 200px;\n    }\n    h3 {\n      font-weight: normal;\n      margin-bottom: 0;\n      padding-bottom: 0;\n    }\n    </style>\n    ```", "```js\n    <template>\n      <div id=\"app\">\n      </div>\n    </template>\n    <script>\n    export default {\n      data() {\n        return {\n          items: [\n            {\n              id: '10',\n              title: 'Forest Shot',\n              description: 'Recent shot of a forest overlooking a             lake',\n              url: 'https://picsum.photos/id/10/1000/750.jpg',\n            },\n            {\n              id: '1000',\n              title: 'Cold cross',\n              description: 'Mountaintop cross with snowfall from             Jan 2018',\n              url: 'https://picsum.photos/id/1000/1000/750.jpg',\n            },\n          ]\n        }\n      }\n    }\n    </script>\n    ```", "```js\n    <script>\n    import Rich from './components/Rich.vue'\n    export default {\n      components: {\n        Rich\n      },\n      // other component properties, eg. \"data\"\n    }\n    </script>\n    ```", "```js\n    <template>\n      <!-- rest of template -->\n          <component\n            v-for=\"item in items\"\n            :key=\"item.id\"\n            :is=\"layout\"\n            :title=\"item.title\"\n            :description=\"item.description\"\n            :url=\"item.url\"\n          />\n      <!-- rest of template>\n    </template>\n    <script>\n    export default {\n     // other component properties\n      data() {\n        return {\n          layout: 'rich',\n          // other data definitions eg. `items`\n        }\n      }\n    }\n    </script>\n    ```", "```js\n    <template>\n      <!-- rest of template -->\n        <div class=\"grid\">\n          <component\n            v-for=\"item in items\"\n            :key=\"item.id\"\n            :is=\"layout\"\n            :title=\"item.title\"\n            :description=\"item.description\"\n            :url=\"item.url\"\n          />\n        </div>\n      <!-- rest of template -->\n    </template>\n    <style scoped>\n    .grid {\n      display: flex;\n    }\n    </style>\n    ```", "```js\n    <template>\n      <div class=\"card\">\n        <h3>{{ title }}</h3>\n        <p>{{ description }}</p>\n      </div>\n    </template>\n    <script>\n    export default {\n      props: ['title', 'description']\n    }\n    </script>\n    <style scoped>\n    .card {\n      display: flex;\n      flex-direction: column;\n      max-width: 200px;\n    }\n    h3 {\n      font-weight: normal;\n      padding-bottom: 0;\n    }\n    p {\n     margin: 0;\n    }\n    </style>\n    ```", "```js\n    <script>\n    // other imports\n    import Compressed from './components/Compressed.vue'\n    export default {\n      components: {\n        Rich,\n        Compressed,\n      },\n      // other component properties\n    }\n    ```", "```js\n    <template>\n      <!-- rest of template -->\n      Layout: <select v-model=\"layout\">\n          <option value=\"rich\">Rich</option>\n          <option value=\"compressed\">Compressed</option>\n        </select>\n      <!-- rest of template -->\n    </template>\n    ```", "```js\n    <template>\n      <h3>{{ title }}</h3>\n    </template>\n    <script>\n    export default {\n      props: ['title']\n    }\n    </script>\n    <style scoped>\n    h3 {\n      width: 100%;\n      font-weight: normal;\n    }\n    </style>\n    ```", "```js\n    <script>\n    // other imports\n    import List from './components/List.vue'\n    export default {\n      components: {\n        Rich,\n        Compressed,\n        List\n      },\n      // other component properties\n    }\n    ```", "```js\n    <template>\n      <!-- rest of template -->\n        Layout: <select v-model=\"layout\">\n          <option value=\"rich\">Rich</option>\n          <option value=\"compressed\">Compressed</option>\n          <option value=\"list\">List</option>\n        </select>\n      <!-- rest of template -->\n    </template>\n    ```", "```js\n    <template>\n      <!-- rest of template -->\n        <div class=\"grid\" :class=\"{ 'grid-column': layout ===       'list' }\">\n          <!-- grid using component tag -->\n        </div>\n      <!-- rest of template -->\n    </template>\n    <style scoped>\n    /* existing rules */\n    .grid-column {\n      flex-direction: column;\n    }\n    </style>\n    ```", "```js\n<template functional>\n  <div>Functional Component: {{ props.greeting }} {{     props.audience }}</div>\n</template>\n```", "```js\nexport default {\n  functional: true,\n  render(h, context) {\n    return h(\n      'h2',\n      `Functional Render: ${context.props.greeting}         ${context.props.audience}`\n    )\n  }\n}\n```", "```js\n<template>\n  <div id=\"app\">\n    <Greet greeting=\"Hello\" audience=\"World\" />\n    <GreetRender greeting=\"Hello\" audience=\"World\" />\n  </div>\n</template>\n<script>\nimport Greet from './components/Greet.vue'\nimport GreetRender from './components/GreetRender.js'\nexport default {\n  components: {\n    Greet,\n    GreetRender\n  }\n}\n</script>\n```", "```js\n<template>\n  <input\n    type=\"submit\"\n    @click=\"$emit('click', $event)\"\n  />\n</template>\n```", "```js\n<template functional>\n  <input\n    v-on=\"listeners\"\n    v-bind=\"data.attrs\"\n  />\n</template>\n```", "```js\n<template functional>\n  <input\n    type=\"submit\"\n    v-on:click=\"listeners.click\"\n    v-bind=\"data.attrs\"\n  />\n</template>\n```"]