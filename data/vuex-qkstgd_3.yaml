- en: Setting Up Development and Test Environment
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置开发和测试环境
- en: When I started using Vue, I found it difficult to integrate Vue with webpack.
    I also had trouble configuring Karma to use webpack for my tests, not to mention
    figuring out how to test single file components!
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 当我开始使用 Vue 时，我发现将 Vue 与 webpack 集成很困难。我还遇到了配置 Karma 以使用 webpack 进行测试的麻烦，更不用说弄清楚如何测试单个文件组件了！
- en: For this reason, in the next pages you will be guided through the process of
    configuring an environment ready for both Vue/Vuex development and testing. I
    think you will find the next pages quite useful.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这个原因，在接下来的几页中，您将指导配置一个既适合 Vue/Vuex 开发也适合测试的环境。我想您会发现下一页非常有用。
- en: 'In this chapter you will:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将：
- en: set up the development environment using npm.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 npm 设置开发环境。
- en: install, configure and use webpack.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装、配置和使用 webpack。
- en: install, configure and use vue-loader.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装、配置和使用 vue-loader。
- en: set up the testing environment using Karma + Jasmine.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Karma + Jasmine 设置测试环境。
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: You will be required to have Node.js installed on a system. Finally, to use
    the Git repository of this book, the user needs to install Git.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要在系统上安装 Node.js。最后，为了使用本书的 Git 仓库，用户需要安装 Git。
- en: 'The code files of this chapter can be found on GitHub:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码文件可以在 GitHub 上找到：
- en: '[https://github.com/PacktPublishing/Vuex-Quick-Start-Guide/tree/master/chapter-3](https://github.com/PacktPublishing/Vuex-Quick-Start-Guide/tree/master/chapter-3)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/Vuex-Quick-Start-Guide/tree/master/chapter-3](https://github.com/PacktPublishing/Vuex-Quick-Start-Guide/tree/master/chapter-3)'
- en: 'Check out the following video to see the code in action:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下视频，看看代码的实际效果：
- en: '[https://goo.gl/oacFdP](https://goo.gl/oacFdP)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://goo.gl/oacFdP](https://goo.gl/oacFdP)'
- en: Setting up the development environment
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置开发环境
- en: Vue provides a tool, `vue-cli`, for scaffolding Vue.js projects. It also supports
    webpack, the web packaging tool we are going to use. To install `vue-cli`*,* you
    just need to type `npm install -g vue-cli` in a console.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Vue 提供了一个名为 `vue-cli` 的工具，用于构建 Vue.js 项目。它还支持我们将要使用的 Web 打包工具 webpack。要安装 `vue-cli`，您只需在控制台中输入
    `npm install -g vue-cli` 即可。
- en: Although using `vue-cli` is the fastest way to start a new project, in the following
    paragraphs, I will explain how to set up a Vue project from scratch.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然使用 `vue-cli` 是启动新项目的最快方式，但在接下来的段落中，我将解释如何从头开始设置 Vue 项目。
- en: We will set up a Vue/Vuex project using the **npm** (**node package manager**),
    explaining every step and installing only a minimum set of dependencies, as opposed
    to `vue-cli`, which will install a lot of npm packages in order to provide a general-purpose
    project configuration.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 **npm**（**Node 包管理器**）设置 Vue/Vuex 项目，解释每个步骤，并仅安装最小依赖项集，而不是 `vue-cli`，它会安装大量的
    npm 包以提供通用项目配置。
- en: By using the GitHub repository of this book and checking out the first commits,
    you can observe what I did to set up the *EveryNote* app development environment.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用本书的 GitHub 仓库并检查第一次提交，您可以观察我是如何设置 *EveryNote* 应用开发环境的。
- en: Using npm to prepare the project for Vue/Vuex
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 npm 为 Vue/Vuex 准备项目
- en: To use npm, you need to have Node.js installed. You can find information on
    how to install Node.js at [https://nodejs.org/](https://nodejs.org/).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 npm，您需要安装 Node.js。您可以在 [https://nodejs.org/](https://nodejs.org/) 上找到有关如何安装
    Node.js 的信息。
- en: 'The first step to make a Vue/Vuex project is creating a directory and initializing
    it with npm. Open a console and type the following commands:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 Vue/Vuex 项目的第一步是创建一个目录，并使用 npm 初始化它。打开控制台，输入以下命令：
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The `npm init` command will ask you some questions. Each question has a default
    value that is normally a good choice. You can just press *Enter* for each question.
    After that, it will create a `package.json` file with the values you provided.
    We will use this file to save project dependencies and to create some commands
    that are useful for the app's development.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`npm init` 命令会向您提出一些问题。每个问题都有一个默认值，通常是一个不错的选择。您可以为每个问题直接按 *Enter*。之后，它将创建一个包含您提供的值的
    `package.json` 文件。我们将使用此文件来保存项目依赖项并创建一些对应用开发有用的命令。'
- en: 'Let''s begin by installing webpack and its related utilities. Webpack is a
    module bundler, and it will help us to create the production bundles, as well
    as handle Vue single-file components. If you have never used webpack, you should
    google it to familiarize yourself with its core principles. From now on, I will
    assume that you have basic knowledge of webpack. Type the following commands in
    the console:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先安装webpack及其相关工具。Webpack是一个模块打包器，它将帮助我们创建生产捆绑包，以及处理Vue单文件组件。如果您从未使用过webpack，您应该谷歌搜索它以熟悉其核心原则。从现在开始，我将假设您已经具备webpack的基本知识。在控制台中输入以下命令：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: A directory named `node_modules` has been created, and you can find the source
    code of the packages we have just installed inside this directory. If you use
    `Git`, `node_modules` should be put inside `.gitignore`. The `--save-dev` option
    writes the five package names we've just installed to the `package.json` file.
    This way, each time you type `npm install`, all saved packages will be downloaded,
    if needed.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 已创建一个名为`node_modules`的目录，您可以在该目录中找到我们刚刚安装的包的源代码。如果您使用`Git`，则应将`node_modules`放入`.gitignore`文件中。`--save-dev`选项将我们刚刚安装的五个包名写入`package.json`文件。这样，每次您输入`npm
    install`时，如果需要，所有保存的包都将被下载。
- en: 'Let''s see what these packages do:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这些包的作用：
- en: '`webpack`: Will take all the source files and bundle them into a folder that
    will have the corresponding production files'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`webpack`：将所有源文件打包到一个文件夹中，这个文件夹将包含相应的生产文件'
- en: '`webpack-dev-server`: Starts a development HTTP server, and helps us to write
    code and debug it in the browser'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`webpack-dev-server`：启动一个开发HTTP服务器，并帮助我们使用浏览器编写代码和调试'
- en: '`html-webpack-plugin`: Will help us create an `index.html` that will load the
    webpack bundle file'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`html-webpack-plugin`：将帮助我们创建一个`index.html`文件，该文件将加载webpack捆绑包文件'
- en: '`clean-webpack-plugin`: Removes the distribution folder created by webpack
    when bundling the project'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`clean-webpack-plugin`：在捆绑项目时，webpack会创建一个分发文件夹，该插件会删除这个文件夹'
- en: By typing `npm install`, all the saved packages will be reinstalled inside the
    `node_modules` folder. This way, to initialize a project, you just need to get
    the code (using `git clone`, for example) and type `npm install`, and the project
    will be ready to be used.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 通过输入`npm install`，所有保存的包都将重新安装到`node_modules`文件夹中。这样，要初始化一个项目，您只需获取代码（例如使用`git
    clone`）并输入`npm install`，项目就准备好使用了。
- en: 'Let''s now create a file named `webpack.config.js` to configure webpack. The
    initial file will look like the following:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们现在创建一个名为`webpack.config.js`的文件来配置webpack。初始文件将如下所示：
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In the preceding configuration, we assumed that we have a folder named `src`,
    and inside we have an `index.html` and a `main.js`.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的配置中，我们假设我们有一个名为`src`的文件夹，里面有一个`index.html`和一个`main.js`。
- en: 'You may also have noticed that I used `webpack.DefinePlugin`: This plugin lets
    you define constants that can be used inside the project. In this case, we define
    `process.env.NODE_ENV` to tell the development environment apart from the production
    one.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能也注意到了我使用了`webpack.DefinePlugin`：此插件允许您定义可以在项目中使用的常量。在这种情况下，我们定义`process.env.NODE_ENV`以区分开发环境和生产环境。
- en: 'Now we can create the `src` folder:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以创建`src`文件夹：
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Once this is done, create the `index.html` file inside the `src` folder:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此操作后，在`src`文件夹中创建`index.html`文件：
- en: '[PRE4]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Now write the `main.js` file, as follows:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在编写`main.js`文件，如下所示：
- en: '[PRE5]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'We can now use webpack to build the project. We can use the `npx` node command,
    which executes npm package binaries, saving us from having to write the whole
    path to the webpack executable:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以使用webpack来构建项目。我们可以使用`npx`节点命令，该命令执行npm包的二进制文件，这样我们就不需要写出webpack可执行文件的完整路径：
- en: '[PRE6]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'A folder named `dist` will be created, and inside you will find the `app.bundle.js`
    and `index.html` files. If you open the HTML file, you may notice that the following
    line has been added at the end of the body tag:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 将创建一个名为`dist`的文件夹，您将在其中找到`app.bundle.js`和`index.html`文件。如果您打开HTML文件，您可能会注意到在`body`标签的末尾添加了以下行：
- en: '[PRE7]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: That is the `html` tag that will load the webpack bundle. We will see later
    how to tell webpack to use Vue single-file components.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 那是加载webpack捆绑包的`html`标签。我们将在稍后看到如何告诉webpack使用Vue单文件组件。
- en: 'Since building each individual bundle and loading them in an HTTP server to
    see the changes during development is not convenient, we will use `webpack-dev-server`:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 由于在开发过程中，逐个构建每个捆绑文件并在HTTP服务器中加载它们以查看更改并不方便，我们将使用`webpack-dev-server`：
- en: '[PRE8]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: If you open a browser at `http://localhost:8080/`, you will see a white page
    with a Hello world phrase inside. If you open the browser development tools, you
    will see the same sentence printed in the browser console.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你打开浏览器访问 `http://localhost:8080/`，你将看到一个包含“Hello world”字样的白色页面。如果你打开浏览器开发工具，你将看到相同的句子在浏览器控制台中打印出来。
- en: 'Let''s put some commands to run webpack and `webpack-dev-server` inside the
    `package.json` file so that we can run them by typing `npm run build` and `npm
    start`:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在 `package.json` 文件中添加一些运行 webpack 和 `webpack-dev-server` 的命令，这样我们就可以通过输入
    `npm run build` 和 `npm start` 来运行它们：
- en: '[PRE9]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Since webpack 4.0, you have needed to specify whether you are running webpack
    for a production environment or a development one. The `--mode` parameter lets
    you specify which environment you are building for. Finally, `--config webpack.config.js`
    can be omitted.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 自从 webpack 4.0 以来，你需要指定你是在运行用于生产环境还是开发环境的 webpack。`--mode` 参数让你指定你正在构建哪个环境。最后，`--config
    webpack.config.js` 可以省略。
- en: 'You may have noticed that I added `cross-env NODE_ENV=production` in the `build`
    section. That''s because, when building the application for production, we need
    the `NODE_ENV` environment variable to be set to a production value. This way,
    we can use something like the following code to determine whether we are building
    production code:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到，我在 `build` 部分添加了 `cross-env NODE_ENV=production`。这是因为，当构建用于生产的应用程序时，我们需要将
    `NODE_ENV` 环境变量设置为生产值。这样，我们可以使用以下代码来确定我们是否正在构建生产代码：
- en: '[PRE10]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'To use `cross-env`, you need to install it by typing:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 `cross-env`，你需要通过输入以下命令来安装它：
- en: '[PRE11]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Finally, let's install Vue and Vuex and use them to check whether everything
    is properly configured.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们安装 Vue 和 Vuex，并使用它们来检查一切是否配置正确。
- en: 'Execute the following command in a console:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在控制台中执行以下命令：
- en: '[PRE12]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Edit the `main.js` file as follows:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下方式编辑 `main.js` 文件：
- en: '[PRE13]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Update `index.html` as follows:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下方式更新 `index.html`：
- en: '[PRE14]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Now type `npm start` and voila—the browser shows our very first Vuex application:
    `Hello Vue(x) World!`'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在输入 `npm start`，浏览器就会显示我们非常第一个 Vuex 应用程序：“Hello Vue(x) World!”
- en: Using vue-loader for single-file components
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 vue-loader 为单文件组件
- en: 'Vue.js provides a webpack loader, `vue-loader`, to transform single-file components
    into JavaScript modules. To install `vue-loader` and related tools, type the following
    commands into a console:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: Vue.js 提供了一个 webpack 加载器，`vue-loader`，用于将单文件组件转换为 JavaScript 模块。要安装 `vue-loader`
    和相关工具，请在控制台中输入以下命令：
- en: '[PRE15]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The `file-loader` is needed to import external files, such as images. The other
    packages are needed to tell webpack how to build all the pieces inside the `.vue`
    file.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '`file-loader` 用于导入外部文件，例如图片。其他包用于告诉 webpack 如何构建 `.vue` 文件内的所有部分。'
- en: 'Let''s update `webpack.config.js` to use single-file components that will have
    a file extension of `.vue`:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更新 `webpack.config.js` 以使用具有 `.vue` 文件扩展名的单文件组件：
- en: '[PRE16]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Within the `rules` section inside the configuration, we tell webpack which loader
    to use when a file is imported inside a source file. In the preceding code, we
    configured webpack to use `vue-loader` for every `.vue` file, `css-loader`, and
    `vue-style-loader` for `.css` files, and `file-loader` for images.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在配置文件中的 `rules` 部分内，我们告诉 webpack 当源文件中导入文件时使用哪个加载器。在上面的代码中，我们配置了 webpack 为每个
    `.vue` 文件使用 `vue-loader`，为 `.css` 文件使用 `css-loader` 和 `vue-style-loader`，以及为图片使用
    `file-loader`。
- en: 'In order to test that everything has been correctly configured, we will create
    an `app.vue` file:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 为了测试一切是否已正确配置，我们将创建一个 `app.vue` 文件：
- en: '[PRE17]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: You need a `background.jpg` file to build the preceding file. It is enough to
    put any image within the `src` folder and rename it as `background.jpg`.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要一个 `background.jpg` 文件来构建前面的文件。只需将任何图片放入 `src` 文件夹中，并将其重命名为 `background.jpg`
    即可。
- en: This file uses `Vuex.Store`, the three parts of a Vue single-file component—`<template>`,
    `<script>`, and `<style>`—and an image as the background. This way, we are going
    to test `vue-loader` and its related packages, `Vuex.Store`, and `file-loader`
    for the background image.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 此文件使用 `Vuex.Store`，Vue 单文件组件的三个部分——`<template>`、`<script>` 和 `<style>`——以及一个作为背景的图片。这样，我们将测试
    `vue-loader` 及其相关包 `Vuex.Store` 和 `file-loader` 对背景图片的支持。
- en: 'Let''s now update `main.js` to use `app.vue`:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们现在更新 `main.js` 以使用 `app.vue`：
- en: '[PRE18]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Restart `webpack-dev-server` (`npm start`) and open the URL `http://localhost:8080/`,
    and you will see something like the following screenshot:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 重新启动 `webpack-dev-server` (`npm start`) 并打开 URL `http://localhost:8080/`，你将看到以下截图类似的内容：
- en: '![](img/5ca88b5c-b3dc-4acf-82a2-010d7401a8da.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5ca88b5c-b3dc-4acf-82a2-010d7401a8da.png)'
- en: 'Figure 3.1: Using app.vue'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.1：使用 app.vue
- en: Configuring the test environment
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置测试环境
- en: If you are configuring webpack for single-file components, you will probably
    find it a bit tricky; configuring a test environment is definitely difficult the
    first time.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在为单文件组件配置webpack，你可能会觉得有点棘手；第一次配置测试环境肯定是有难度的。
- en: We will use Karma as the test runner, Jasmine as the test/assertions framework,
    and Chrome as the browser that will run all the tests.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用Karma作为测试运行器，Jasmine作为测试/断言框架，以及Chrome作为将运行所有测试的浏览器。
- en: 'First, let''s install all we need:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们安装所有需要的工具：
- en: '[PRE19]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Then we need to create a `karma.conf.js` file, as follows:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们需要创建一个`karma.conf.js`文件，如下所示：
- en: '[PRE20]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The preceding configuration will run all files that end with `.spec.js` inside
    the `test` folder. In addition, we told Karma to preprocess files using webpack.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 上述配置将在`test`文件夹内运行所有以`.spec.js`结尾的文件。此外，我们还告诉Karma使用webpack预处理文件。
- en: 'Let''s create a test folder inside `notes-app`:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在`notes-app`内部创建一个测试文件夹：
- en: '[PRE21]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Finally, we will create a simple test that will load a `.vue` file and test
    it.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将创建一个简单的测试，用于加载`.vue`文件并进行测试。
- en: 'Create a folder inside `test` named `test-setup` and put it inside a `dummy.vue`
    file:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在`test`文件夹内部创建一个名为`test-setup`的文件夹，并将其放入一个`dummy.vue`文件中：
- en: '[PRE22]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Create a test file named `dummy.vue.spec.js`:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个名为`dummy.vue.spec.js`的测试文件：
- en: '[PRE23]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Update `package.json` as follows:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下方式更新`package.json`：
- en: '[PRE24]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Next, execute `npm test` to run the test we just created. You should see something
    like the following in the console:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，执行`npm test`来运行我们刚刚创建的测试。你应该在控制台看到以下类似的内容：
- en: '[PRE25]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: We are now ready to begin the development of the EveryNote web application,
    which is the topic of the next chapter.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经准备好开始开发EveryNote网络应用程序了，这是下一章的主题。
- en: Summary
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter we went through all the steps necessary to set up a test and
    development environment, ready to start coding with Vuex and Vue single file components.
    In addition we added some files to test that everything was properly configured.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了设置测试和开发环境所需的所有步骤，准备好使用Vuex和Vue单文件组件开始编码。此外，我们还添加了一些测试文件以确保一切配置正确。
