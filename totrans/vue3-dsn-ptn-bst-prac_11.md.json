["```js\n<script setup>\nconst $props=defineProps(['caption'])\n</script>\n<template>\n    <div>\n        <span class=\"spinner\"></span> {{ $props.caption }}\n    </div>\n</template>\n<style scoped>\n.spinner{\n    display: inline-block;\n    height: 1rem; width: 1rem;\n    border: 2px solid;\n    vertical-align: middle;\n    border-radius: 50%;\n    border-top-color: #06c9c9;\n    animation: rotate 1s linear infinite;\n}\n@keyframes rotate {\n    0%{ transform: rotate(0deg);}\n    100%{transform: rotate(360deg);}\n}\n</style>\n```", "```js\n<script setup>\nimport { ref, onMounted } from \"vue\"\nconst _max_value = ref(30),                               #1\n    _scroll_watcher = ref(null),                          #2\n    observer = new IntersectionObserver(triggerEvent)     #3\nonMounted(() => {\n    observer.observe(_scroll_watcher.value)               #4\n})\nfunction triggerEvent() {_max_value.value += 20;}\n</script>\n<template>\n    <div v-for=\"elem in _max_value\" :key=\"elem\">\n        item {{ elem }}\n    </div>\n    <div     ref=\"_scroll_watcher\"></div>                 #5\n</template>\n```", "```js\nHome > Level 1 > Level 2 > Level 3 > Current page\n```", "```js\nHome\n  └── Level 1\n   └── Level 2\n    └── Level 3\n     └── Current Page\n```", "```js\n// For mobile\n    @media only screen and (max-width: 600px) {\n         section{\n             display: flex;\n             flex-direction: column;\n         }\n    }\n// For desktop\nsection{\n    display: flex;\n    flex-direction: row;\n}\n```", "```js\nimport Vue from \"vue\"\nconst app=new Vue({el:\"#app\"})\n```", "```js\nimport {createApp} from \"vue\"\nconst app=createApp({..})\napp.mount(\"#app\")\n```", "```js\nimport Vue from \"vue\"\nimport MyComponent from \"MyComponent.vue\"\nvue.component(\"myComponent\", MyComponent)\nconst app=new Vue({...})\n```", "```js\nimport { createApp }from \"vue\"\nimport MyComponent from \"MyComponent.vue\"\nconst App=createApp({...})\nApp.component(\"myComponent\", MyComponent).mount(\"#app\")\n```", "```js\nimport { createApp }from \"vue\"\nimport MyComponent from \"MyComponent.vue\"\ncreateApp({...}).component(\"myComponent\", MyComponent) .mount(\"#app\")\n```", "```js\ncreateApp({\n    data(){return {...}}\n})\n```", "```js\nexport default {\n    data(){return {...}}\n}\n```", "```js\n<script setup>\nimport {reactive, ref} from \"vue\"\nconst\n    data=reactive({name:\"John\", surname:\"Doe\"}),\n    person=ref({name: \"Jane\", surname:\"Doe\"})\n    // Then, to access the values in JavaScript\n    // Reactive object\n    data.name=\"Mary\"\n    data.surname=\"Sue\"\n    // Reactive ref\n    person.value.name=\"Emma\"\n    person.value.surname=\"Smith\"\n</script>\n<template>\n    <strong>{{data.surname}}, {{data.name}}</strong><br>\n    <strong>{{person.surname}}, {{person.name}}</strong>\n</template>\n```", "```js\nconst $props=defineProps(['modelValue','modelPerson']),\n$emit=defineEmits(['update:modelValue','update:modelPerson'])\n```"]