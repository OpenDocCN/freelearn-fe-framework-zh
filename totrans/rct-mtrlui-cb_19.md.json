["```js\nimport React, { Fragment } from 'react';\n\nimport {\n  withStyles,\n  createMuiTheme,\n  MuiThemeProvider\n} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport red from '@material-ui/core/colors/red';\nimport pink from '@material-ui/core/colors/pink';\nimport purple from '@material-ui/core/colors/purple';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport indigo from '@material-ui/core/colors/indigo';\nimport blue from '@material-ui/core/colors/blue';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport cyan from '@material-ui/core/colors/cyan';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/green';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport lime from '@material-ui/core/colors/lime';\nimport yellow from '@material-ui/core/colors/yellow';\nimport amber from '@material-ui/core/colors/amber';\nimport orange from '@material-ui/core/colors/orange';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport brown from '@material-ui/core/colors/brown';\nimport grey from '@material-ui/core/colors/grey';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\n\nconst styles = theme => ({\n  button: { margin: theme.spacing(2) }\n});\n\nconst hues = {\n  red,\n  pink,\n  purple,\n  deepPurple,\n  indigo,\n  blue,\n  lightBlue,\n  cyan,\n  teal,\n  green,\n  lightGreen,\n  lime,\n  yellow,\n  amber,\n  orange,\n  deepOrange,\n  brown,\n  grey,\n  blueGrey\n};\n\nconst UnderstandingThePallette = withStyles(styles)(\n  ({\n    primaryHue,\n    primaryShade,\n    secondaryHue,\n    secondaryShade,\n    errorHue,\n    errorShade,\n    classes\n  }) => {\n    const theme = createMuiTheme({\n      palette: {\n        primary: { main: hues[primaryHue][primaryShade] },\n        secondary: { main: hues[secondaryHue][secondaryShade] },\n        error: { main: hues[errorHue][errorShade] }\n      }\n    });\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Button className={classes.button} variant=\"contained\">\n          Default\n        </Button>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Primary\n        </Button>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          Secondary\n        </Button>\n        <Typography className={classes.button} color=\"error\">\n          Error\n        </Typography>\n      </MuiThemeProvider>\n    );\n  }\n);\n\nexport default UnderstandingThePallette;\n```", "```js\nimport red from '@material-ui/core/colors/red';\nimport pink from '@material-ui/core/colors/pink';\nimport purple from '@material-ui/core/colors/purple';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport indigo from '@material-ui/core/colors/indigo';\nimport blue from '@material-ui/core/colors/blue';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport cyan from '@material-ui/core/colors/cyan';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/green';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport lime from '@material-ui/core/colors/lime';\nimport yellow from '@material-ui/core/colors/yellow';\nimport amber from '@material-ui/core/colors/amber';\nimport orange from '@material-ui/core/colors/orange';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport brown from '@material-ui/core/colors/brown';\nimport grey from '@material-ui/core/colors/grey';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\n```", "```js\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: hues[primaryHue][primaryShade] },\n    secondary: { main: hues[secondaryHue][secondaryShade] },\n    error: { main: hues[errorHue][errorShade] }\n  }\n});\n```", "```js\nimport React, { Fragment } from 'react';\n\nimport {\n  withStyles,\n  createMuiTheme,\n  MuiThemeProvider\n} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport red from '@material-ui/core/colors/red';\nimport pink from '@material-ui/core/colors/pink';\nimport blue from '@material-ui/core/colors/blue';\n\nconst styles = theme => ({\n  button: { margin: theme.spacing(2) }\n});\n\nconst light = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: blue,\n    secondary: pink,\n    error: { main: red[600] }\n  }\n});\n\nconst dark = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: blue,\n    secondary: pink,\n    error: { main: red[600] }\n  }\n});\n\nconst LightVersusDarkThemes = withStyles(styles)(\n  ({ themeType, classes }) => {\n    return (\n      <MuiThemeProvider theme={{ dark, light }[themeType]}>\n        <Dialog open={true}>\n          <DialogTitle>Use Google's location service?</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Let Google help apps determine location. This means\n              sending anonymous location data to Google, even when no\n              apps are running.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"secondary\">Disagree</Button>\n            <Button variant=\"contained\" color=\"primary\" autoFocus>\n              Agree\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </MuiThemeProvider>\n    );\n  }\n);\n\nexport default LightVersusDarkThemes;\n```", "```js\nconst light = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: blue,\n    secondary: pink,\n    error: { main: red[600] }\n  }\n});\n\nconst dark = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: blue,\n    secondary: pink,\n    error: { main: red[600] }\n  }\n});\n```", "```js\nnpm install --save typeface-exo typeface-ubuntu\n```", "```js\nimport 'typeface-exo';\nimport 'typeface-ubuntu';\n```", "```js\nconst roboto = createMuiTheme({\n  typography: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif'\n  }\n});\n\nconst exo = createMuiTheme({\n  typography: {\n    fontFamily: '\"Exo\", \"Roboto\", \"Helvetica\", \"Arial\", sans-serif'\n  }\n});\n\nconst ubuntu = createMuiTheme({\n  typography: {\n    fontFamily: '\"Ubuntu\", \"Roboto\", \"Helvetica\", \"Arial\", sans-serif'\n  }\n});\n```", "```js\nimport React from 'react';\n\nimport {\n  createMuiTheme,\n  MuiThemeProvider\n} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport red from '@material-ui/core/colors/red';\nimport pink from '@material-ui/core/colors/pink';\nimport blue from '@material-ui/core/colors/blue';\n\nconst Blue = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: blue,\n    secondary: pink,\n    error: { main: red[600] }\n  }\n});\n\nconst Rounded = theme =>\n  createMuiTheme({\n    ...theme,\n    shape: {\n      borderRadius: 8\n    }\n  });\n\nconst NestingThemes = () => (\n  <MuiThemeProvider theme={Blue}>\n    <MuiThemeProvider theme={Rounded}>\n      <Dialog open={true}>\n        <DialogTitle>Use Google's location service?</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Let Google help apps determine location. This means\n            sending anonymous location data to Google, even when no\n            apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"secondary\">Disagree</Button>\n          <Button variant=\"contained\" color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </MuiThemeProvider>\n  </MuiThemeProvider>\n);\n\nexport default NestingThemes;\n```", "```js\nconst Rounded = theme =>\n  createMuiTheme({\n    ...theme,\n    shape: {\n      borderRadius: 8\n    }\n  });\n```", "```js\nimport React from 'react';\n\nimport {\n  createMuiTheme,\n  MuiThemeProvider\n} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiDialogTitle: { root: { textAlign: 'center' } },\n    MuiDialogActions: { root: { justifyContent: 'center' } }\n  }\n});\n\nconst ComponentThemeSettings = () => (\n  <MuiThemeProvider theme={theme}>\n    <Dialog open={true}>\n      <DialogTitle>Use Google's location service?</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Let Google help apps determine location. This means sending\n          anonymous location data to Google, even when no apps are\n          running.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"secondary\">Disagree</Button>\n        <Button color=\"primary\" autoFocus>\n          Agree\n        </Button>\n      </DialogActions>\n    </Dialog>\n  </MuiThemeProvider>\n);\n\nexport default ComponentThemeSettings;\n```", "```js\noverrides: {\n  MuiDialogTitle: { root: { textAlign: 'center' } },\n  MuiDialogActions: { root: { justifyContent: 'center' } }\n},\n```"]