- en: Getting Your App Ready for Production
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为您的应用准备生产环境
- en: 'We''ve put together a pretty nice starter application in Create React App over
    the span of this book. While it probably won''t win any awards, you now have the
    foundation that you need to be able to build on top of this and turn it into the
    next world-leading pomodoro tracker, or maybe something like a new task manager
    application for developers! Throughout all of this, we''ve covered the build process
    and the bootstrap process, but have yet to focus on the final portion of building
    any application: shipping it to production!'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书的篇幅内，我们已经在 Create React App 中构建了一个相当不错的入门级应用。虽然它可能不会赢得任何奖项，但你现在有了建立在这个基础之上的能力，并将其转变为下一个世界领先的番茄工作法追踪器，或者可能是为开发者开发的新任务管理应用！在这个过程中，我们涵盖了构建过程和引导过程，但尚未关注构建任何应用的最终部分：将其部署到生产环境！
- en: We've spent a lot of time talking about the different important features in
    Create React App, and have built an application on top of it. We've added a lot
    to our application; we took something from zero to an app that is functional,
    uses the latest and greatest modern JavaScript programming techniques, and uses
    the sort of techniques that you'll see when working with Create React App in any
    sort of professional environment.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经花费了很多时间讨论 Create React App 中的不同重要特性，并在其基础上构建了一个应用。我们对应用做了很多扩展；我们将一些从零开始的东西变成了一个功能性的应用，使用了最新的最先进的现代
    JavaScript 编程技术，并且使用了在以任何专业环境使用 Create React App 时你会看到的那些技术。
- en: 'We''ll need to expand on that and cover the remaining Create React App CLI
    commands that we can run: `build` and `eject`. We have added a few extra libraries
    here and there, primarily as utility libraries, but we should also spend a little
    bit of time working with a few additional libraries, in order to get a feel for
    how that impacts the workflow. So, we''ll discuss a few common libraries, including
    their usage, impact, and where to go to learn more about them.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要进一步扩展并介绍我们还可以运行的剩余 Create React App CLI 命令：`build` 和 `eject`。我们在一些地方添加了一些额外的库，主要是作为实用库，但我们也应该花一些时间与一些额外的库一起工作，以便了解这对工作流程的影响。因此，我们将讨论一些常见的库，包括它们的用法、影响以及如何了解更多关于它们的信息。
- en: 'By the end of this chapter, you will have learned about the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将了解以下主题：
- en: Adding other libraries to our application
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将其他库添加到我们的应用中
- en: Using Create React App `eject`, and its impact on your application
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Create React App `eject` 及其对应用的影响
- en: Using Create React App `build` to create a production build
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Create React App `build` 创建生产构建
- en: Adding other libraries
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加其他库
- en: As we mentioned previously, we'll be adding a few more libraries. If you're
    not interested in swapping either of these libraries, you can safely skip this
    section, but there are a few items to cover that may be representative of scenarios
    that you'll run into while working on JavaScript in a team environment. For example,
    Redux was, at one point, considered important (if not essential) for building
    a React project of any significant complexity. Recently, that mentality has ebbed
    a bit, and generally speaking, people will only opt for using libraries like Redux
    when it is more necessary and state management is a harder part of their applications.
    Regardless, we should have experience in adding it to our applications, so that
    we will be ready to contribute, should we ever be working on a project that is
    using it as well. There are a lot of other common libraries that people use in
    conjunction with React, and we'll cover them very quickly here, before moving
    on to a quick example of using Redux in a Create React App project!
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前提到的，我们将添加一些更多的库。如果你对交换这些库中的任何一个不感兴趣，你可以安全地跳过这一部分，但有一些可能代表你在团队环境中编写 JavaScript
    时会遇到的情况的项目要讨论。例如，Redux 在某个时刻被认为是构建任何具有一定复杂性的 React 项目的（如果不是必需的）重要部分。最近，这种心态有所减弱，一般来说，人们只有在更必要的时候才会选择使用像
    Redux 这样的库，当状态管理是它们应用中更困难的部分时。无论如何，我们应该有在应用中添加它的经验，这样我们就可以准备好为任何可能使用它的项目做出贡献。还有许多其他常见的库与
    React 一起使用，我们将在快速介绍它们之后，再转到使用 Redux 在 Create React App 项目中的快速示例！
- en: Other popular React libraries
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他流行的 React 库
- en: There are other libraries that come up frequently when working with React. These
    may be libraries that help you to use your browser's address bar to figure out
    what component to render as its main application, or they may be libraries that
    give any form elements that you use in React a little more native functionality
    and remove more boilerplate code.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 React 的时候，还会经常遇到其他库。这些可能是帮助您使用浏览器地址栏来确定要渲染为主应用的组件的库，或者可能是为 React 中的任何表单元素提供更多原生功能并减少更多模板代码的库。
- en: React Router
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: React Router
- en: 'React Router is a library aimed at helping you route requests to particular
    components. The idea is that when someone visits your project, they may want to
    interact with a specific component. This helps you to manage those requests and
    figure out the right way to get the user directly to that component. The good
    news is that installing React Router and using it inside of a Create React App
    project is actually pretty simple! To install it, all you need to run is the following
    command:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: React Router 是一个旨在帮助您将请求路由到特定组件的库。其理念是，当有人访问您的项目时，他们可能想要与一个特定的组件进行交互。这有助于您管理这些请求并找出将用户直接带到该组件的正确方式。好消息是，在
    Create React App 项目中安装 React Router 并使用它实际上非常简单！要安装它，您只需运行以下命令：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Then, you can modify your `src/App/App.js` file to start adding new routes to
    components! React Router is similar to Redux, in that it is an incredibly complex
    project by itself; so, if you want to learn more, you can visit [https://reacttraining.com/react-router/.](https://reacttraining.com/react-router/)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您可以将 `src/App/App.js` 文件修改为开始向组件添加新路由！React Router 与 Redux 类似，它本身是一个非常复杂的工程；因此，如果您想了解更多，可以访问
    [https://reacttraining.com/react-router/](https://reacttraining.com/react-router/)。
- en: React Final Form
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: React Final Form
- en: 'Odds are, if you''re working with any form of interactive web application,
    you''ll need to be able to handle web forms in a consistent and performant way.
    The great news is that, because this is such a common problem, there are a number
    of popular libraries out there to handle dealing with forms in React efficiently.
    The most popular of these is React Final Form, which you can add to your project
    by running the following command:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在处理任何形式的交互式网络应用，您可能需要能够以一致和高效的方式处理网页表单。好消息是，由于这是一个非常普遍的问题，因此有多个流行的库可以高效地处理
    React 中的表单处理。其中最受欢迎的是 React Final Form，您可以通过运行以下命令将其添加到项目中：
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: From there, you can use any of React Final Form's functionality to replace the
    forms in your application! For more information on how to properly take advantage
    of this library, you can visit [https://github.com/final-form/react-final-form](https://github.com/final-form/react-final-form).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 从那里，您可以使用 React Final Form 的任何功能来替换应用程序中的表单！有关如何充分利用此库的更多信息，您可以访问 [https://github.com/final-form/react-final-form](https://github.com/final-form/react-final-form)。
- en: Adding Redux for state management
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加 Redux 进行状态管理
- en: Redux is a common library for managing the state of your application, especially
    when it is a little more complicated, and you want to control the flow of events
    in your frontend project! Redux provides a way for you to tightly control how
    the entire state of your application is affected by different types of events,
    such as button clicks or form changes. If your application gets incredibly large
    and complex, and managing too many different streams of events affecting your
    application becomes too hard, it is a great time to introduce something like Redux
    to your project!
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Redux 是一个用于管理应用程序状态的常见库，尤其是在应用程序稍微复杂一些，并且您想要控制前端项目中事件流的时候！Redux 提供了一种方式，让您可以紧密控制应用程序的整个状态如何受到不同类型事件的影响，例如按钮点击或表单更改。如果您的应用程序变得非常大且复杂，管理影响应用程序的众多不同事件流变得过于困难，那么在项目中引入类似
    Redux 这样的工具将是一个很好的时机！
- en: 'The good news is that, similar to the previous libraries, you can also add
    Redux to your Create React App project without a lot of extra fuss! You''ll want
    both `redux` and `react-redux`, to make sure that you have all of the bindings
    that you''d normally need to connect everything together:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 好消息是，与之前的库类似，您也可以轻松地将 Redux 添加到您的 Create React App 项目中！您需要添加 `redux` 和 `react-redux`，以确保您拥有连接一切所需的所有绑定：
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This should install everything that you need to get started with Redux. Similar
    to the other libraries that we've mentioned, Redux is an incredibly complex topic
    that could easily fill up an entire book by itself. If you'd like to learn more
    about Redux, visit [https://redux.js.org/](https://redux.js.org/).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该会安装你开始使用Redux所需的所有内容。类似于我们提到的其他库，Redux是一个极其复杂的话题，单独一本书都足以涵盖。如果你想了解更多关于Redux的信息，请访问[https://redux.js.org/](https://redux.js.org/)。
- en: Creating a production build
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个生产构建
- en: Finally, we're ready to get this all bundled up and ready for a production deployment!
    Our code is done, our code works, and everything is great; so, what do we do now?
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们准备好将所有这些打包起来，为生产部署做好准备！我们的代码完成了，代码运行正常，一切都很完美；那么，我们现在该做什么呢？
- en: It's simple; we just run `yarn build` and call it a day! Well, that's most of
    the process. You see, when you run `yarn build`, Create React App tries to figure
    out the best, most efficient way to bundle up everything that you've been working
    on in your Create React App project and minify/productionize everything that you've
    written—every image and asset that you've added, every library that needs to be
    included—everything.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这很简单；我们只需运行`yarn build`，然后就算完成了！嗯，那基本上就是整个过程。你看，当你运行`yarn build`时，Create React
    App会尝试找出最佳、最高效的方式来捆绑你在Create React App项目中所有的工作，并最小化/生产化你所写的每一行代码——你添加的每一张图片和资产，需要包含的每一个库——所有这些。
- en: How to create a production build
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何创建一个生产构建
- en: 'To create a production build, we just need to run `yarn build`. It''s that
    simple! See the following:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个生产构建，我们只需要运行`yarn build`。就这么简单！请看以下内容：
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: You should now have a production-ready build of files in the `build/` directory
    of your application! This is a heavily-optimized build, ready to be copied and
    deployed, wherever you can deploy your application!
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你应该在你的应用程序的`build/`目录中拥有一个生产就绪的文件构建！这是一个高度优化的构建，准备好复制和部署，无论你在哪里可以部署你的应用程序！
- en: What's important to note is that the output of this process are static files
    (fully compiled HTML/JS/CSS) that can be deployed and run from any place that
    can serve static files back to a user—so, essentially, any kind of **content delivery
    network** (**CDN**) or web server that you may already have.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的重要一点是，这个过程输出的结果是静态文件（完全编译的HTML/JS/CSS），可以从任何可以服务静态文件回传给用户的地方部署和运行——所以，本质上，任何你已有的**内容分发网络**（**CDN**）或网页服务器都可以。
- en: This process relies heavily on Webpack's build process and multiple different
    build and optimization plugins that optimize nearly every part of the build process.
    Files are minified, chunked by their usage and scope (to reduce importing files
    that we don't need), and set up in a way that allows for browser caching, to reduce
    as much effort as possible each time a person revisits your site!
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程高度依赖于Webpack的构建过程和多个不同的构建和优化插件，它们优化了构建过程的几乎每一个部分。文件被压缩，根据它们的用途和范围进行分块（以减少导入我们不需要的文件），并设置为允许浏览器缓存，以尽可能减少每次有人重新访问你的网站时的努力！
- en: '**Minified** means that the files are reduced down in file size as much as
    possible, by renaming code, minimizing whitespace, or otherwise cutting down on
    extraneous code, so that the amount of JavaScript that needs to be deployed is
    as small as possible.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**压缩**意味着文件通过重命名代码、最小化空白或以其他方式减少多余代码，尽可能减小文件大小，从而使需要部署的JavaScript量尽可能小。'
- en: Thoughts on the deployment process
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于部署过程的思考
- en: The actual deployment process is a little bit more tricky. There are a million
    and one ways to deploy this, but as we have built our application off of a proxy
    backend server, one of the methods is for us to integrate our project into an
    existing backend server with something to serve our frontend code from, such as
    a Rails/node/Phoenix server. This allows us to run this code as our frontend and
    have a backend server behind the scenes, powering this application. Without that,
    our app won't work; as you may recall, this is an application powered by a `Todo`
    backend.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 实际的部署过程要复杂一些。有无数种部署方法，但鉴于我们是在一个代理后端服务器上构建的应用程序，其中一种方法是我们将项目集成到一个现有的后端服务器中，使用某种东西来服务我们的前端代码，例如Rails/node/Phoenix服务器。这允许我们运行这段代码作为我们的前端，并在幕后有一个后端服务器支持这个应用程序。没有那个，我们的应用程序将无法工作；如你所回忆，这是一个由`Todo`后端支持的应用程序。
- en: Ejecting our project
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 退出我们的项目
- en: One of the other options available to us is the ability to `eject` our project
    in Create React App. **Ejecting** an app means that it removes all of the scaffolds
    and confines of the Create React App CLI, with all of the bonuses and caveats
    that you might expect from such an operation. For one, we gain greater ability
    and control over our project, and can tweak things as we see fit, which is great;
    but it also puts you into a world where you need to understand your Babel configs,
    your Webpack configs, and every other behind the scenes configuration option that
    you were previously able to ignore.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可用的另一个选项是能够在 Create React App 中 `eject` 我们的项目。**Ejecting** 一个应用意味着它移除了 Create
    React App CLI 的所有脚手架和限制，以及你可能从这个操作中预期到的所有好处和注意事项。首先，我们获得了更大的能力和控制权，可以按需调整事物，这是非常好的；但这也让你进入了一个需要理解你的
    Babel 配置、Webpack 配置以及你之前能够忽略的每一个幕后配置选项的世界。
- en: Eject is very much a double-edged sword; it's a powerful tool, and it allows
    you to move beyond the rules that Create React App introduces into your world.
    However, you'll now be responsible for any headaches that come as a result of
    configuration modifications in the future.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '`eject` 是一把双刃剑；它是一个强大的工具，它让你能够超越 Create React App 带入你世界中的规则。然而，你现在将负责未来配置修改带来的任何头痛问题。'
- en: That being said, `eject` is also an important command in the Create React App
    world. I've seen many projects that started off with a Create React App built
    project, but changed when the app became sufficiently complex. At that point,
    ejecting is a good idea, in order to be able to appropriately tweak things as
    you need to. Again, a big focus of this book is to understand how to become an
    expert on Create React App and its latest version; so, understanding and using
    all of the commands is a major part of that.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，`eject` 在 Create React App 的世界中也是一个重要的命令。我见过许多项目最初是以 Create React App 构建的项目开始的，但随着应用变得足够复杂，它们发生了变化。在那个阶段，进行
    `eject` 是一个好主意，这样你就可以根据需要相应地调整事物。再次强调，本书的一个主要重点是理解如何成为 Create React App 及其最新版本的专家；因此，理解和使用所有命令是这一过程的重要组成部分。
- en: How to eject
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何进行 `eject`
- en: 'Let''s start by talking about how to perform an `eject` with Create React App.
    The process itself is actually simple enough: you just run `npm run eject` or
    `yarn eject`, and the process begins. This is also not quite enough information
    to be able to make an informed decision about when and where to `eject` with Create
    React App, so we''ll actually explore the results of running the command. We''ll
    start off by moving this into a new branch in our source control of choice (or,
    if you''re not using one, copy the directory somewhere, so that you can play with
    this without fear of losing your project).'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先来谈谈如何使用 Create React App 进行 `eject`。这个过程本身其实很简单：你只需运行 `npm run eject` 或
    `yarn eject`，然后过程就开始了。这也不是足够的信息来做出关于何时何地使用 Create React App 进行 `eject` 的明智决定，所以我们将实际探索运行该命令的结果。我们将首先将其移动到我们选择的源控制中的新分支（或者，如果你没有使用源控制，将目录复制到某个地方，这样你就可以在没有失去项目的风险下进行实验）。
- en: This is a permanent operation. If you don't want to be stuck with these changes,
    ensure that you have copied your folder, or branched it in such a way that you
    don't get locked into an `eject` during this section!
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个永久性的操作。如果你不希望被这些更改所困扰，确保你已经复制了你的文件夹，或者以某种方式创建了分支，这样你就不需要在这一部分被锁定在 `eject`
    中了！
- en: 'We get the following output:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到以下输出：
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Wow! A lot happens when you `eject`! It creates roughly 13 new scripts, most
    of which are either helper/utility JavaScript files or configuration files for
    things like Webpack, Babel, or Jest. A lot of this is the process of allowing
    you to continue to use your project as if it were already a major Create React
    App project, despite the fact that you just ejected. For example, most of our
    commands should work identically. If I run `yarn test`, for example, I should
    still get a full `Test Suite` running and passing:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 哇！当你 `eject` 时会发生很多事情！它大约创建了 13 个新的脚本，其中大多数是辅助/实用 JavaScript 文件或 Webpack、Babel
    或 Jest 等事物的配置文件。这其中的许多是为了让你能够继续使用你的项目，就像它已经是一个主要的 Create React App 项目一样，尽管你刚刚进行了
    `eject`。例如，我们的大多数命令应该工作得完全一样。例如，如果我运行 `yarn test`，我应该仍然得到一个完整的 `Test Suite` 运行并通过：
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Similarly, if I run `yarn start`, I should be able to expect to use my React
    project in the same way that I always have:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，如果我运行 `yarn start`，我应该能够期待以与我之前相同的方式使用我的 React 项目：
- en: '[PRE6]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Our browser should still spin up and open itself to `http://localhost:3000/`.
    We can also continue to run our own backend simulation server, with requests getting
    proxied appropriately! As you can see, the Create React App team did everything
    they could to make `eject` as painless and seamless a process as it possibly could
    be. We can even still build for production with `yarn build`.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的浏览器应该仍然会启动并自动打开到`http://localhost:3000/`。我们还可以继续运行我们自己的后端模拟服务器，请求会被适当代理！正如您所看到的，Create
    React App团队已经尽其所能使`eject`过程尽可能无痛和无缝。我们甚至还可以使用`yarn build`来构建生产环境。
- en: 'We can also see the configuration files that are created for us, based on how
    Create React App structures its projects. We can see the Webpack configs, for
    example, in these files:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以看到为我们创建的配置文件，基于Create React App如何构建其项目。例如，我们可以看到Webpack配置在这些文件中：
- en: '[PRE7]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: If you wanted to tweak your `config` in some custom way, this is where you'd
    do it, and you can base your configs off of the incredibly elaborate files that
    they've populated here.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想以某种自定义方式调整您的`config`，这就是您需要操作的地方，您可以根据他们在这里填充的极其详尽的文件来构建您的配置。
- en: You can also see how they've set up Jest to work so seamlessly, by looking at
    the scripts folder for `scripts/test.js`, as well as the Jest-specific configuration
    files located in `config/`.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以通过查看`scripts`文件夹中的`scripts/test.js`以及位于`config/`目录下的Jest特定配置文件，来了解他们是如何无缝设置Jest的。
- en: Drawbacks of using eject
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用eject的缺点
- en: Remember that this does not all come for free, and there's no reason not to
    just immediately `eject` a project. First off, you will not get any potential
    time-saving changes or productivity enhancers when the Create React App team updates
    the scripts for Create React App. You'll be in your own world if something breaks,
    if something doesn't work right, or otherwise, and you won't really have anywhere
    to reach out to for support.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，这并非免费提供，也没有立即将项目eject的理由。首先，当Create React App团队更新Create React App的脚本时，您将不会获得任何潜在的时间节省更改或生产力提升器。如果出现问题，如果某些东西工作不正常，或者在其他情况下，您实际上将无处寻求支持。
- en: The `eject` command is like buying something as-is. It might not have any strings
    attached to it anymore, but it also doesn't have any support, either. Buyer beware!
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '`eject`命令就像购买现成的东西。它可能不再有任何附加条件，但它也没有任何支持。买家需谨慎！'
- en: Summary
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: That's it! At this point, you should have a solid grasp of Create React App
    2's changes and benefits. We've explored functionality, both old and new, to make
    sure that we're building the most up-to-date, modern JavaScript implementations
    that we possibly can! We're using libraries and techniques that we would already
    be using in most frontend projects that we might build.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 就这些了！在这个阶段，您应该已经对Create React App 2的变更和好处有了稳固的理解。我们已经探索了新旧功能，以确保我们能够构建尽可能最新、最现代的JavaScript实现！我们正在使用我们在可能构建的大多数前端项目中已经会使用的库和技术。
- en: We've also taken a deep dive into how to set up a healthy software development
    life cycle using Create React App, getting us to a point where our application
    runs smoothly and is resilient when changes do occur. Our application is well
    and thoroughly tested, and is not prone to random breaking. This is all something
    that we've done with absolutely zero configuration; in my mind, this is one of
    the biggest strengths of working with a frontend development project in Create
    React App!
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还深入研究了如何使用Create React App设置健康的软件开发生命周期，使我们的应用程序在发生更改时运行顺畅且具有弹性。我们的应用程序经过良好的彻底测试，并且不易随机崩溃。这一切都是我们在没有任何配置的情况下完成的；在我看来，这是在Create
    React App中与前端开发项目合作的最大优势之一！
- en: We've also integrated a number of other non-specific Create React App solutions
    into our code, whether it is better CSS support through CSS modules or SASS, or
    additional libraries and clever abstractions via service libraries. We've striven
    to code our projects in a smart way that allows for easy reuse and expandability,
    without making our projects obtuse or difficult for other developers to contribute
    to. We've also proxied a backend API, so that we can work with backend developers
    and show them the interface and data language that the frontend uses, reducing
    the friction and back-and-forth between multiple development teams and ideologies!
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还把许多其他非特定的 Create React App 解决方案整合到了我们的代码中，无论是通过 CSS 模块或 SASS 提供更好的 CSS 支持，还是通过服务库提供额外的库和巧妙的抽象。我们努力以智能的方式编写项目代码，以便于轻松重用和扩展，同时不会使我们的项目变得晦涩或让其他开发者难以贡献。我们还代理了一个后端
    API，这样我们就可以与后端开发者合作，向他们展示前端使用的接口和数据语言，减少多个开发团队和理念之间的摩擦和来回沟通！
- en: Finally, you've seen what our options become when we outgrow the safe confines
    of Create React App and eject our application into a standard Webpack configuration!
    Our application lives on, and we can configure new and exciting additions to our
    project without hobbling ourselves or our development team!
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你已经看到了当我们超越 Create React App 的安全边界，将其应用推出到标准的 Webpack 配置时，我们的选项会变成什么样子！我们的应用依然存在，并且我们可以配置新的和令人兴奋的项目功能，而不会束缚我们自己或我们的开发团队！
- en: I hope you've learned a lot about how to really get started with Create React
    App (and, by proxy, React itself). Thank you so much for coming with me on this
    journey, and I can't wait to see what you build out there!
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望你已经学到了很多关于如何真正开始使用 Create React App（以及通过代理，React 本身）的知识。非常感谢你陪我走过了这段旅程，我迫不及待地想看看你在那里能创造出什么！
