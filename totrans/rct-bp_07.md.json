["```js\n\"devDependencies\": {\n  \"autoprefixer\": \"^6.2.3\",\n  \"babel-core\": \"^6.3.26\",\n  \"babel-loader\": \"^6.2.0\",\n  \"babel-plugin-react-transform\": \"^2.0.0\",\n  \"babel-preset-es2015\": \"^6.3.13\",\n  \"babel-preset-react\": \"^6.3.13\",\n  \"babel-tape-runner\": \"^2.0.0\",\n  \"classnames\": \"^2.2.3\",\n  \"exif-component\": \"^1.0.1\",\n  \"exif-js\": \"^2.1.1\",\n  \"firebase\": \"^2.3.2\",\n  \"history\": \"^1.17.0\",\n  \"imagetocanvas\": \"^1.1.5\",\n  \"react\": \"^0.14.5\",\n  \"react-bootstrap\": \"^0.28.2\",\n  \"react-dom\": \"^0.14.5\",\n  \"react-router\": \"^1.0.3\",\n  \"react-transform-catch-errors\": \"^1.0.1\",\n  \"react-transform-hmr\": \"^1.0.1\",\n  \"reactfire\": \"^0.5.1\",\n  \"redbox-react\": \"^1.2.0\",\n  \"superagent\": \"^1.6.1\",\n  \"webpack\": \"^1.12.9\",\n  \"webpack-dev-middleware\": \"^1.4.0\",\n  \"webpack-hot-middleware\": \"^2.6.0\"\n},\n\"dependencies\": {\n  \"body-parser\": \"^1.14.2\",\n  \"cloudinary\": \"^1.3.0\",\n  \"cors\": \"^2.7.1\",\n  \"envs\": \"^0.1.6\",\n  \"express\": \"^4.13.3\",\n  \"path\": \"^0.12.7\"\n}\n```", "```js\n├── assets\n│   ├── app.css\n│   ├── favicon.ico\n│   └── index.html\n├── package.json\n├── server.js\n├── source\n│   └── index.jsx\n└── webpack.config.js\n```", "```js\n'use strict';\nvar path = require('path');\nvar express = require('express');\nvar webpack = require('webpack');\nvar config = require('./webpack.config');\nvar port = process.env.PORT || 8080;\nvar app = express();\nvar cors = require('cors');\nvar compiler = webpack(config);\nvar cloudinary = require('cloudinary');\nvar bodyParser = require('body-parser');\napp.use( bodyParser.json({limit:'50mb'}) );\n```", "```js\napp.use(cors());\n\napp.use(require('webpack-dev-middleware')(compiler, {\n  noInfo:true,\n  publicPath: config.output.publicPath,\n  stats: {\n    colors: true\n  }\n}));\n\nvar isProduction = process.env.NODE_ENV === 'production';\n\napp.use(require('webpack-hot-middleware')(compiler));\napp.use(express.static(path.join(__dirname, \"assets\")));\n\ncloudinary.config({\n  cloud_name: 'YOUR_CLOUD_NAME',\n  api_key: 'YOUR_API_KEY',\n  api_secret: 'YOUR_API_SECRET'\n});\n\nvar routes = function (app) {\n  app.post('/upload', function(req, res) {\n    cloudinary.uploader.upload(req.body.image, function(result) { \n      res.send(JSON.stringify(result));\n    });\n  });\n```", "```js\n  app.get('*', function(req, res) {\n    res.sendFile(path.join(__dirname, 'assets','index.html'));\n  });\n}\n```", "```js\nvar router = express.Router();\nroutes(router);\napp.use(router);\napp.listen(port, 'localhost', function(err) {\n  if (err) {\n    console.log(err);\n    return;\n  }\n\n  console.log('Listening at http://localhost:'+port);\n});\n```", "```js\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Reactagram</title>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, \n    initial-scale=1, maximum-scale=1\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap-glyphicons.css\" />\n    <link rel=\"stylesheet\" type=\"text/css\"href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css\" />\n    <link href='https://fonts.googleapis.com/css?family=Bitter' rel='stylesheet' type='text/css'>\n    <link rel=\"stylesheet\" href=\"/app.css\">\n  </head>\n  <body>\n    <div id=\"app\"></div>\n    <script src=\"img/bundle.js\"></script>\n  </body>\n</html>\n```", "```js\nbody {\n  font-family: 'Bitter', serif;\n  padding: 15px;\n  margin-top: 60px;\n}\n```", "```js\nbody {\n  font-family: 'Bitter', serif;\n  padding: 15px;\n  margin-top: 60px; \n}\n\n.header {\n  padding: 10px;\n  font-size: 18px;\n  margin: 5px; \n}\n\nh1 {\n  font-size: 18px; \n}\n\nul {\n  list-style-type: none; \n}\n\n#camera {\n  position: absolute;\n  opacity: 1; \n}\n\n.hidden {\n  display: none; \n}\n```", "```js\n@media all and (max-width: 320px) {\n  .canvas {\n    padding: 0;\n    text-align: center;\n    margin: 0 auto;\n    display: block;\n    z-index: 10;\n    position: fixed;\n    left: 10px;\n    top: 60px; \n  }\n}\n```", "```js\n#imageCanvas {\n  max-width: 300px;\n  height: 300px;\n  margin: 0px auto;\n  border: 1px solid #333; \n}\n```", "```js\n.menuButtonLeft {\n  position: fixed;\n  padding-right: 15px;\n  height: 50px;\n  border-right: 2px solid #999;\n  padding-top: 16px;\n  top: 0;\n  left: 30px;\n  color: #999;\n  z-index: 1; \n}\n\n.menuButtonRight {\n  padding-left: 15px;\n  height: 50px;\n  border-left: 2px solid #999;\n  padding-top: 16px;\n  top: 0;\n  position: fixed;\n  right: 30px;\n  color: #999;\n  z-index: 1; \n}\n```", "```js\n.nav a:visited, .nav a:link {\n  color: #999; }\n.nav a:hover, a:focus {\n  color: #fff;\n  text-decoration: none;\n}\n\n.logo {\n  padding-top: 16px;\n  margin: 0 auto;\n  text-align: center;\n}\n\n.filterButtonGrayscale {\n  position: fixed;\n  bottom: 55px;\n  left: 40px; \n  z-index:2;\n}\n\n.filterButtonThreshold {\n  position: fixed;\n  bottom: 55px;\n  right: 40px; \n  z-index:2;\n}\n\n.filterButtonBrightness {\n  position: fixed;\n  bottom: 10px;\n  left: 40px; \n  z-index:2;\n}\n\n.filterButtonSave {\n  position: fixed;\n  bottom: 10px;\n  right: 40px; \n  z-index:2;\n}\n```", "```js\n.stream {\n  transition: all .5s ease-in;\n  -webkit-animation-duration: 1s;\n  animation-duration: 1s;\n  -webkit-animation-fill-mode: both;\n  animation-fill-mode: both;\n  height: 480px;\n  margin-top: 10px;\n  padding: 0; }\n  .stream img {\n    border: 2px solid #333;\n  }\n```", "```js\n  .spinner {\n    width: 40px;\n    height: 40px;\n    display: none;\n    position: relative;\n    margin: 100px auto;\n  }\n\n  .double-bounce1, .double-bounce2 {\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background-color: #333;\n    opacity: 0.6;\n    position: absolute;\n    top: 0;\n    left: 0;\n    -webkit-animation: sk-bounce 2.0s infinite ease-in-out;\n    animation: sk-bounce 2.0s infinite ease-in-out;\n  }\n\n  .double-bounce2 {\n    -webkit-animation-delay: -1.0s;\n    animation-delay: -1.0s;\n  }\n\n  @-webkit-keyframes sk-bounce {\n    0%, 100% {\n      -webkit-transform: scale(0);\n    }\n    50% {\n      -webkit-transform: scale(1);\n    }\n  }\n  @keyframes sk-bounce {\n    0%, 100% {\n      transform: scale(0);\n      -webkit-transform: scale(0);\n    }\n    50% {\n      transform: scale(1);\n      -webkit-transform: scale(1);\n    }\n  }\n}\n```", "```js\nnode server.js\n\n```", "```js\nListening at http://localhost:8080\nwebpack built c870b4500e3efe8b5030 in 1462ms\n\n```", "```js\nimport React from 'react';\nimport {render} from 'react-dom';\nimport config from './config';\nimport RoutesConfig from './routes';\n\nrender(\n  RoutesConfig(config),\n  document.getElementById('app')\n);\n```", "```js\nvar rootUrl = \"https://YOURAPP.firebaseio.com/\";\n```", "```js\nvar rootDb = \"imageStream\";\nvar likesDb = \"likes\";\n\nmodule.exports = {\n  rootUrl: rootUrl,\n  rootDb: rootDb,\n  fbImageStream: rootUrl + rootDb,\n  fbLikes: rootUrl + likesDb\n}\n```", "```js\nimport React from 'react';\nimport { Link,\n  Router,\n  Route,\n  NoMatch,\n  IndexRoute,\n  browserHistory\n}\nfrom 'react-router'\nimport App from './components/app';\nimport Welcome from './components/welcome';\nimport Camera from './components/camera';\nimport Stream from './components/stream';\nimport Item from './components/item';\nimport config from './config';\nimport FBConnect from './fbconnect';\n```", "```js\nfunction Routes(config) {\n  return <Router history={ browserHistory }>\n    <Route path=\"/\" name=\"Reactagram\" \n      component={ FBConnect( App, config)} >\n      <Route name=\"Stream\" path=\"stream\"\n        component={ FBConnect( Stream, config) } />\n      <Route name=\"ItemParent\" path=\"item\"\n        component={ FBConnect( Item, config) } >\n        <Route name=\"Item\" path=\":key\"\n         component={ FBConnect( Item, config) } />\n      </Route>\n      <Route name=\"Camera\" path=\"camera\" \n        component={ FBConnect( Camera, config) } />\n      <IndexRoute name=\"Welcome\" \n        component={ FBConnect( Welcome, config) } />\n    </Route>\n    <Route name=\"404: No Match for route\" path=\"*\" component={FBConnect(App,config)} />\n  </Router>\n}\nexport default Routes;\n```", "```js\nimport React, { Component, PropTypes } from 'react';\nimport ReactFireMixin from 'reactfire';\nimport Firebase from 'firebase';\nimport FBFunc from './fbfunc';\nimport Userinfo from './userinfo';\n\nfunction FBConnect(Component, config) {\n  const FirebaseConnection = React.createClass({\n    mixins:[ReactFireMixin, Userinfo],\n    getInitialState: function() {\n      return {\n        data: [],\n        imageStream: [],\n        fbImageStream: config.fbImageStream\n      };\n    },\n    componentDidMount() {\n      const firebaseRef = new Firebase(\n      this.state.fbImageStream, 'imageStream');\n      this.bindAsArray(firebaseRef.orderByChild(\"timestamp\"),\n      \"imageStream\");\n```", "```js\n    },\n    render() {\n      return <Component {...this.props}\n      {...this.state} {...FBFunc} />;\n```", "```js\n    }\n  });\n  return FirebaseConnection;\n};\nexport default FBConnect;\n```", "```js\nimport Firebase from 'firebase';\n\nconst FbFunc = {\n  uploadImage(url: string, user: string) {\n    let firebaseRef = new Firebase(this.fbImageStream);\n    let object = JSON.stringify(\n      {\n        url:url,\n        user:user,\n        timestamp: new Date().getTime(),\n        likes:0\n      }\n    );\n    firebaseRef.push({\n      text: object\n    });\n  },\n```", "```js\n  like(key) {\n    var onComplete = function(error) {\n      if (error) {\n        console.log('Update failed');\n      }\n      else {\n        console.log('Update succeeded');\n      }\n    };\n    var firebaseRef = new Firebase(`${this.props.fbImageStream}/${key}/likes`);\n    firebaseRef.transaction(function(likes) {\n      return likes+1;\n    }, onComplete);\n  },\n```", "```js\naddComment(e,key) {\n  const comment = this.refs.comment.getValue();\n  var onComplete = function(error) {\n    if (error) {\n      console.log('Synchronization failed');\n    }\n    else {\n      console.log('Synchronization succeeded');\n    }\n  };\n  let object = JSON.stringify(\n    {\n      comment:comment,\n      user:this.props.username,\n      timestamp: new Date().getTime()\n    }\n  );\n  var firebaseRef = new Firebase(this.props.fbImageStream+`/${key}/comments`);\n  firebaseRef.push({\n    text: object\n  }, onComplete);\n},\n```", "```js\nremoveItem(key) {\n  var firebaseRef = new Firebase(this.props.fbImageStream);\n  firebaseRef.child(key).remove();\n},\nresetDatabase() {\n  let stringsRef = new Firebase(this.props.fbImageStream);\n  stringsRef.set({});\n  }\n};\nexport default FbFunc;\n```", "```js\nexport function username() {\n  const adjs = [\"autumn\", \"hidden\", \"bitter\", \"misty\", \"silent\",\n    \"empty\", \"dry\", \"dark\", \"summer\", \"icy\",\n    \"delicate\", \"quiet\", \"ancient\", \"purple\",\n    \"lively\", \"nameless\"];\n  const nouns = [\"breeze\", \"moon\", \"rain\", \"wind\", \"sea\", \n    \"morning\", \"snow\", \"lake\", \"sunset\", \"pine\",\n    \"shadow\", \"leaf\", \"dawn\", \"frog\", \"smoke\",\n    \"star\"];\n  const rnd = Math.floor(Math.random() * Math.pow(2, 12));\n  return `${adjs[rnd % (adjs.length-1)]}-\n    ${nouns[rnd % (nouns.length-1)]}`;\n};\n```", "```js\nmodule.exports = {\n\n  getInitialState() {\n    username: \"\"\n  },\n\n  componentDidMount() {\n    let username;\n    if(localStorage.getItem(\"username\")) {\n      username = localStorage.getItem(\"username\");\n    }\n\n    if(!username || username === undefined) {\n      localStorage.setItem(\"username\",\n      require(\"./tools/username\").username());\n    }\n\n    this.setState({username: username})\n  }\n\n}\n```", "```js\nimport React from 'react';\nimport { Grid, Col, Row, Nav, Navbar } from 'react-bootstrap';\nimport { Link } from 'react-router';\nimport Classnames from 'classnames';\n\nmodule.exports = React.createClass({\n  goBack() {\n    return this.props.location.pathname.split(\"/\")[1]\n      ===\"item\" ? \"/stream\" : \"/\";\n  },\n```", "```js\n  render() {\n    const BackStyle = Classnames({\n      hidden: this.props.location.pathname===\"/\",\n      \"menuButtonLeft\": true\n    });\n\n    const PhotoStyle = Classnames({\n      hidden: this.props.location.pathname===\"/camera\",\n      \"menuButtonRight\": true\n    });\n```", "```js\n    return <Grid>\n  <Navbar\n    componentClass=\"header\"\"\n    fixedTop\n    inverse>\n    <h1\n      center\n      style={{ color:\"#fff\" }}\n      className=\"logo\">Reactagram\n    </h1>\n    <Nav\n      role=\"navigation\"\n      eventKey={ 0 }\n      pullRight>\n      <Link\n        className={ BackStyle }\n        to={this.goBack()}>Back</Link>\n      <Link\n        className={ PhotoStyle }\n        to=\"/camera\">Photo</Link>\n    </Nav>\n  </Navbar>\n  { this.props.children }\n  </Grid>\n  }\n});\n```", "```js\nimport React from 'react';\nimport { Row, Col, Button } from 'react-bootstrap';\n\nmodule.exports = React.createClass({\n  contextTypes: {\n    router: React.PropTypes.object.isRequired\n  },\n  historyPush(location) {\n    this.context.router.push(location);\n  },\n```", "```js\n  renderResetButton() {\n    return <Button bsStyle=\"danger\"\n    onClick={this.props.resetDatabase.bind(null, this)}>\n    Reset database!\n    </Button>\n  },\n  renderPictureButton() {\n    return <Button bsStyle=\"default\"\n      onClick={this.historyPush.bind(null, '/camera')}>\n      Take a picture\n    </Button>\n  },\n```", "```js\n  renderStreamButton() {\n    return <Button bsStyle=\"default\"\n      onClick={ this.historyPush.bind(null, '/stream') }>\n      Stream\n    </Button>\n  },\n  render() {\n    return <Row>\n      <Col md={12}>\n        <h1>Welcome { this.props.username }</h1>\n        <p>\n          Reactagram is social picture app. Take snapshots of\n          yourself and share with your friends.\n        </p>\n        <p>\n          { this.renderPictureButton() }\n        </p>\n        <p>\n          { this.renderStreamButton() }\n        </p>\n\n        <p>\n          <em>PS! The username has been automatically\n          generated for you.</em>\n        </p>\n\n      </Col>\n      <Col md={ 12 }>\n        <h3>Reset database</h3>\n        <p>\n          Click here to reset your database.\n          Note: This will completely\n          Clear all of your uploaded pictures.\n          There's no way to undo this.\n        </p>\n        <p>\n          { this.renderResetButton() }\n        </p>\n      </Col>\n    </Row>\n  }\n})\n```", "```js\n<Input type=\"file\" label=\"Camera\" onChange={this.takePhoto}\n  help=\"Click to snap a photo\" accept=\"image/*\" />\n```", "```js\nimport React from 'react';\nimport { Link } from 'react-router';\nimport classNames from 'classnames';\nimport { Input, Button } from 'react-bootstrap';\n//import Filters from '../tools/filters';\n```", "```js\nimport request from 'superagent';\nimport ImageToCanvas from 'imagetocanvas';\n```", "```js\nmodule.exports = React.createClass({\n\n  getInitialState() {\n    return {\n      imageLoaded: false\n    };\n  },\n```", "```js\n  componentDidMount() {\n    this.refs.imageCanvas.style.display=\"none\";\n    this.refs.spinner.style.display=\"none\";\n  },\n```", "```js\n  toImg(imageData) {\n    var imgElement = document.createElement('img');\n    imgElement.src = imageData;\n    return imgElement;\n  },\n\n  toPng(canvas) {\n    var img = document.createElement('img');\n    img.src = canvas.toDataURL('image/png');\n    return img;\n  },\n```", "```js\n  putImage(img, orientation) {\n    var canvas = this.refs.imageCanvas;\n    var ctx = canvas.getContext(\"2d\");\n    let w = img.width;\n    let h = img.height;\n    const scaleH = h / 400;\n    const scaleW = w / 300;\n    let tempCanvas = document.createElement('canvas');\n    let tempCtx = tempCanvas.getContext('2d');\n    canvas.width = w/scaleW < 300 ? w/scaleW : 300;\n    canvas.height = h/scaleH < 400 ? h/scaleH : 400;\n    tempCanvas.width = canvas.width;\n    tempCanvas.height = canvas.height;\n    tempCtx.drawImage(img, 0, 0, w/scaleW, h/scaleH); \n\n    ImageToCanvas.drawCanvas(canvas, this.toPng(tempCanvas), orientation, scaleW, scaleH);\n\n    this.refs.imageCanvas.style.display=\"block\";\n    this.refs.imageCanvas.style.width= w/scaleW + \"px\";\n    this.refs.imageCanvas.style.height= h/scaleH + \"px\";\n  },\n```", "```js\n  takePhoto(event) {\n    let camera = this.refs.camera,\n      files = event.target.files,\n      file, w, h, mpImg, orientation;\n    let canvas = this.refs.imageCanvas;\n    if (files && files.length > 0) {\n      file = files[0];\n      var fileReader = new FileReader();\n      var putImage = this.putImage;\n      fileReader.onload = (event)=> {\n        var img = new Image();\n        img.src=event.target.result;\n        try {\n          ImageToCanvas.getExifOrientation(\n            ImageToCanvas.toBlob(img.src),\n          (orientation)=> {\n            putImage(img, orientation);\n          });\n```", "```js\n        }\n        catch (e) {\n          this.putImage(img, 1);\n```", "```js\n        }\n      }\n      fileReader.readAsDataURL(file);\n      this.setState({imageLoaded:true});\n    }\n  },\n\n  applyGrayscale() {\n    let canvas = this.refs.imageCanvas;\n    let ctx=canvas.getContext(\"2d\");\n    let pixels = Filters.grayscale( \n      ctx.getImageData(0,0,canvas.width,canvas.height), {});\n    ctx.putImageData(pixels, 0, 0);\n  },\n```", "```js\n  applyThreshold(threshold) {\n    let canvas = this.refs.imageCanvas;\n    let ctx=canvas.getContext(\"2d\");\n    let pixels = Filters.threshold(\n      ctx.getImageData(0,0,canvas.width,canvas.height), threshold);\n    ctx.putImageData(pixels, 0, 0);\n  },\n\n  applyBrightness(adjustment) {\n    let canvas = this.refs.imageCanvas;\n    let ctx=canvas.getContext(\"2d\");\n    let pixels = Filters.brightness(\n      ctx.getImageData(0,0,canvas.width,canvas.height), adjustment);\n    ctx.putImageData(pixels, 0, 0);\n  },\n\n  saveImage() {\n    let canvas = this.refs.imageCanvas;\n    document.body.style.opacity=0.4;\n    this.refs.spinner.style.display=\"block\";\n    this.refs.imageCanvas.style.display=\"none\";\n```", "```js\n    var dataURL = canvas.toDataURL();\n\n    new Promise((resolve, reject)=> {\n      request\n      .post('/upload')\n      .send({ image: dataURL, username: this.props.username })\n      .set('Accept', 'application/json')\n      .end((err, res)=> {\n        console.log(err);\n        if(err) {\n          reject(err)\n      }\n      if(res.err) {\n        reject(res.err);\n      }\n      resolve(res);\n    });\n  }).then((res)=> {\n  const result = JSON.parse(res.text);\n  this.props.uploadImage(result.secure_url,this.props.username);\n  this.props.history.pushState(null,'stream');\n  document.body.style.opacity=1.0;\n});\n```", "```js\n  },\n\n  render() {\n    const inputClass= classNames({\n      hidden: this.state.imageLoaded\n    });\n    const grayScaleButton= classNames({\n      hidden: !this.state.imageLoaded,\n      \"filterButtonGrayscale\": true\n    });\n    const thresholdButton= classNames({\n      hidden: !this.state.imageLoaded,\n      \"filterButtonThreshold\": true\n    });\n    const brightnessButton= classNames({\n      hidden: !this.state.imageLoaded,\n      \"filterButtonBrightness\": true\n    });\n    const saveButton= classNames({\n      hidden: !this.state.imageLoaded,\n      \"filterButtonSave\": true\n    });\n```", "```js\n  return <div>\n    <Button className={grayScaleButton} onClick={this.applyGrayscale}>Grayscale</Button>\n\n    <Button className={thresholdButton} \n      onClick={this.applyThreshold.bind(null,128)}>Threshold\n    </Button>\n\n    <Button className={brightnessButton}\n      onClick={this.applyBrightness.bind(null,40)}>Brighter\n    </Button>\n\n    <Button className={saveButton} bsStyle=\"success\" \n        onClick={this.saveImage}>Save Image</Button>\n    <div className={inputClass}>\n\n    <Input type=\"file\" label=\"Camera\"  onChange={this.takePhoto}\n      help=\"Click to snap a photo or select an image from your \n      photo roll\" ref=\"camera\" accept=\"image/*\" />\n  </div>\n\n  <div className=\"spinner\" ref=\"spinner\">\n    <div className=\"double-bounce1\"></div>\n    <div className=\"double-bounce2\"></div>\n  </div>\n\n  <div className=\"canvas\">\n\n    <canvas ref=\"imageCanvas\" id=\"imageCanvas\">\n      Your browser does not support the HTML5 canvas tag.\n    </canvas>\n  </div>\n\n  </div>\n  }\n});\n```", "```js\nlet canvas = this.refs.imageCanvas;\nlet ctx= canvas.getContext(\"2d\");\nlet pixels = ctx.getImageData(0,0,canvas.width,canvas.height)\n```", "```js\nlet pixels = Filters.grayscale(\nctx.getImageData(0,0,canvas.width,canvas.height), {});\n```", "```js\nlet Filters = {};\n\nFilters.grayscale = function(pixels, args) {\n  var data = pixels.data;\n  for (let i=0; i < data.length; i+=4) {\n    let red = data[i];\n    let green = data[i+1];\n    let blue = data[i+2];\n    let variance = 0.2126*red + 0.7152*green + 0.0722*blue;\n```", "```js\n    data[i] = data[i+1] = data[i+2] = variance\n```", "```js\n  }\n  return pixels;\n};\n\nFilters.brightness = function(pixels, adjustment) {\n  var data = pixels.data;\n  for (let i=0; i<data.length; i+=4) {\n    data[i] += adjustment;\n    data[i+1] += adjustment;\n    data[i+2] += adjustment;\n```", "```js\n  }\n  return pixels;\n};\n\nFilters.threshold = function(pixels, threshold) {\n  var data = pixels.data;\n  for (let i=0; i<data.length; i+=4) {\n    let red = data[i];\n    let green = data[i+1];\n    let blue = data[i+2];\n    let variance = (0.2126*red + 0.7152*green + 0.0722*blue >= threshold) ? 255 : 0;\n```", "```js\n    data[i] = data[i+1] = data[i+2] = variance\n  }\n  return pixels;\n};\n\nmodule.exports = Filters;\n```", "```js\nimport React from 'react';\nimport { Grid,Row, Col, Button } from 'react-bootstrap';\nimport { Link } from 'react-router';\n\nmodule.exports = React.createClass({\n  renderStream(item, index, image, data){\n    return (\n      <Col\n        className=\"stream\"\n        sm={ 12 }\n        md={ 6 }\n        lg={ 4 }\n        key={ index } >\n          <Link to={`/item/${item['.key']}`}>\n          <img style={{ margin:'0 auto',display:'block' }}\n            width=\"300\"\n            height=\"400\"\n            src={ image } />\n        </Link>\n\n        <strong style={{ display:'block', fontWeight:600,\n         textAlign:'center' }}>\n           { data.user }\n        </strong>\n\n        <strong style={{ display:'block', fontWeight:600,\n          textAlign:'center' }}>\n          Likes: { item.likes || 0 }\n        </strong>\n\n        <div style={{ padding:0,display:'block', fontWeight:600,\n          textAlign:'center' }}>\n\n          <Button bsStyle=\"success\"\n            onClick={ this.props.like.bind(this,item['.key']) }>\n            Like\n          </Button>\n        </div>\n```", "```js\n      </Col>\n    );\n  },\n\n  render() {\n    let stream = this.props.imageStream.map((item, index) => {\n      const data = JSON.parse(item.text);\n      let image;\n      try {\n        image = \n        data.url.replace(\"upload/\",\"upload/c_crop,g_center,h_300/\");\n      }\n      catch(e) {\n        console.log(e);\n      }\n```", "```js\n      return image ?\n        this.renderStream(item, index, image, data) : null;\n\n    });\n    return <Row>\n      {stream}\n    </Row>\n  }\n});\n```", "```js\nimport React from 'react';\nimport { Grid,Row, Col, Button, Input } from 'react-bootstrap';\nimport { Link } from 'react-router';\nimport { pad } from '../tools/pad';\n\nmodule.exports = React.createClass({\n  renderStream(item, index, image, data) {\n    return (\n      <Col className=\"stream\" sm={12} md={6} lg={4} key={ index } >\n\n        <img style={{margin:'0 auto',display:'block'}}\n          width=\"300\" height=\"400\" src={ image } />\n\n        <strong style={{display:'block', fontWeight:600, \n          textAlign:'center'}}>{data.user}</strong>\n\n        <strong style={{display:'block', fontWeight:600,\n          textAlign:'center'}}>Likes: {item.likes||0}</strong>\n\n        <div style={{padding:0,display:'block', fontWeight:600, \n          textAlign:'center'}}>\n\n          <Button bsStyle=\"success\"\n            onClick={this.props.like.bind(this,item['.key'])}>\n            Like</Button>\n        </div>\n\n        {this.renderComments(item.comments)}\n        {this.renderCommentField(item['.key'])}\n\n      </Col>\n    );\n  },\n```", "```js\n  renderComments(comments) {\n    if(!comments) return;\n\n    let data,text, commentStream=[];\n    const keys = Object.keys(comments);\n    keys.forEach((key)=>{\n      data = comments[key];\n      text = JSON.parse(data.text);\n      commentStream.push(text);\n    })\n\n    return <Col md={12}><h4>Comments</h4>\n      {commentStream.map((item,idx)=>{\n        const date = new Intl.DateTimeFormat().format(item.timestamp)\n        const utcdate = new Intl.DateTimeFormat('en-US').format(date);\n        const utcdate = new Intl.DateTimeFormat('en-US').format(date);\n      return <div\n        key={ ´comment${idx}` }\n        style={{ paddingTop:15 }}>\n          { utcdate } <br/> { item.comment }\n          - <small>{ item.user }</small>\n      </div>\n    })}</Col>\n  },\n```", "```js\n  renderCommentField(key) {\n    return <Col md={12}>\n      <hr/>\n      <h4>Add your own comment</h4>\n      <Input type=\"textarea\" ref=\"comment\"></Input>\n      <Button bsStyle=\"info\"\n        onClick={this.props.addComment.bind(this,\n        this.refs.comment, key)} >Comment</Button>\n    </Col>\n  },\n```", "```js\n  render() {\n    let { key } = this.props.params;\n    let stream = this.props.imageStream\n    .filter((item)=>{return item['.key']==key})\n    .map((item, index) => {\n      const data = JSON.parse(item.text);\n      let image;\n      try {\n        image = data.url.replace(\"upload/\",\"upload/c_crop,g_center,h_300/\");\n      } catch(e){\n        console.log(e);\n      }\n      return image ?\n      this.renderStream(item, index, image, data) : null;\n\n    });\n    return <Row>\n      {stream}\n      </Row>\n  }\n});\n```", "```js\nexport const pad = (p = '00', s = '') => {\n  return p.toString().slice(s.toString().length)+s;\n}\n```", "```js\n├── assets\n│   ├── app.css\n│   ├── favicon.ico\n│   └── index.html\n├── package.json\n├── server.js\n├── source\n│   ├── components\n│   │   ├── app.jsx\n│   │   ├── camera.jsx\n│   │   ├── item.jsx\n│   │   ├── stream.jsx\n│   │   └── welcome.jsx\n│   ├── config.js\n│   ├── fbconnect.js\n│   ├── fbfunc.js\n│   ├── index.jsx\n│   ├── routes.jsx\n│   ├── tools\n│   │   ├── filters.js\n│   │   ├── pad.js\n│   │   └── username.js\n│   └── userinfo.js\n└── webpack.config.js\n```"]