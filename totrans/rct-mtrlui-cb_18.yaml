- en: Icons - Enhance Icons to Match Your Look and Feel
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图标 - 增强图标以匹配您的外观和感觉
- en: 'In this chapter, you''ll learn about the following:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习以下内容：
- en: Coloring icons
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 着色图标
- en: Scaling icons
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缩放图标
- en: Dynamically loading icons
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 动态加载图标
- en: Themed icons
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主题图标
- en: Installing more icons
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装更多图标
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: Icons play a big part in any Material-UI application. Even if you don't set
    out to explicitly use them, icons are used by many components by default. If a
    Material-UI component doesn't use icons by default, you can often find direct
    support for integrating Material-UI icons. Icons play an important role in the
    usability of your application—they provide a means to quickly scan the screen
    for meaning, instead of having to parse text all of the time.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图标在任何Material-UI应用程序中都扮演着重要角色。即使你没有打算明确使用它们，许多组件默认情况下也会使用图标。如果一个Material-UI组件默认不使用图标，你通常可以找到直接支持集成Material-UI图标的选项。图标在应用程序的可用性中发挥着重要作用——它们提供了一种快速扫描屏幕以获取意义的方法，而不是需要不断解析文本。
- en: Coloring icons
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 着色图标
- en: Material-UI icon components accept a `color` property that takes a named theme
    color and applies it to the icon.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Material-UI图标组件接受一个`color`属性，该属性接受一个命名主题颜色并将其应用到图标上。
- en: How to do it...
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到...
- en: 'This example uses a Storybook control to change the `color` property of the
    icons that are rendered:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例使用Storybook控件来更改渲染的图标的`color`属性：
- en: '![](img/2dbc6969-67b8-4938-ba39-5ea20f569ce2.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/2dbc6969-67b8-4938-ba39-5ea20f569ce2.png)'
- en: 'Here''s some code that renders several icons that use the selected `color`
    value:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一段代码，展示了如何使用所选的`color`值渲染多个图标：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: How it works...
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'The `color` property defaults to `inherit`, which means that icons will be
    the same color as their parent components. Let''s walk through the different color
    values and see what these icons from the example look like:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '`color`属性默认为`inherit`，这意味着图标将与它们的父组件颜色相同。让我们看看不同的颜色值，并看看示例中的这些图标看起来如何：'
- en: '| Inherit  | The `inherit` color value will use the color value from the parent
    component style: | ![](img/5efdbea7-8b20-4921-aa2d-d7f0362fa368.png) |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| 继承  | `inherit`颜色值将使用父组件样式的颜色值： | ![图片](img/5efdbea7-8b20-4921-aa2d-d7f0362fa368.png)
    |'
- en: '| Primary | The `primary` color applies the `palette.primary.``main` theme
    color to the icon: | ![](img/7a1b4082-6e03-48ea-83b8-18fb7244463e.png) |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| 主要 | `primary`颜色将`palette.primary.main`主题颜色应用到图标上： | ![图片](img/7a1b4082-6e03-48ea-83b8-18fb7244463e.png)
    |'
- en: '| Secondary | The `secondary` color applies the `palette.secondary.``main` theme
    color to the icon: | ![](img/843f25f6-006f-4b79-ba6b-38130a1abf0a.png) |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| 次要 | `secondary`颜色将`palette.secondary.main`主题颜色应用到图标上： | ![图片](img/843f25f6-006f-4b79-ba6b-38130a1abf0a.png)
    |'
- en: '| Action | The `action` color applies the `palette.action.``active` theme color
    to the icon: | ![](img/07c980aa-150f-416f-a6b4-dd1572ef831c.png) |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| 操作 | `action`颜色将`palette.action.active`主题颜色应用到图标上： | ![图片](img/07c980aa-150f-416f-a6b4-dd1572ef831c.png)
    |'
- en: '| Error | The `error` color applies the `palette.error.``main` theme color
    to the icon: | ![](img/ea0d5a91-73aa-4b8e-a2db-fe22ff945098.png) |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| 错误 | `error`颜色将`palette.error.main`主题颜色应用到图标上： | ![图片](img/ea0d5a91-73aa-4b8e-a2db-fe22ff945098.png)
    |'
- en: '| Disabled | The `disabled` color applies the `palette.action.``disabled` theme
    color to the icon: | ![](img/1ab30baf-4b2e-4192-a927-e4c661489bb0.png) |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| 禁用 | `disabled`颜色将`palette.action.disabled`主题颜色应用到图标上： | ![图片](img/1ab30baf-4b2e-4192-a927-e4c661489bb0.png)
    |'
- en: See also
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 相关内容
- en: 'Icon demos: [https://material-ui.com/style/icons/](https://material-ui.com/style/icons/)'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图标演示：[https://material-ui.com/style/icons/](https://material-ui.com/style/icons/)
- en: Icon API documentation: [https://material-ui.com/api/icon/](https://material-ui.com/api/icon/)
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图标API文档：[https://material-ui.com/api/icon/](https://material-ui.com/api/icon/)
- en: Scaling icons
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 缩放图标
- en: The `fontSize` property of the Material-UI icon components accepts a string
    value that represents a predetermined icon size. The reason the property is called
    `fontSize` instead of `size` is because the `fontSize` CSS property is what determines
    the size of an icon. The default is `24px`.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Material-UI图标组件的`fontSize`属性接受一个表示预定义图标大小的字符串值。这个属性被称为`fontSize`而不是`size`的原因是，`fontSize`CSS属性决定了图标的大小。默认值为`24px`。
- en: How to do it...
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到...
- en: 'This example uses a Storybook control to change the `fontSize` property of
    the icons that are rendered:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例使用Storybook控件来更改渲染的图标的`fontSize`属性：
- en: '![](img/160790bb-920a-4b05-90f3-1f80999b2da3.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/160790bb-920a-4b05-90f3-1f80999b2da3.png)'
- en: 'Here''s some code that renders several icons that use the selected `fontSize`
    value:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一段代码，展示了如何使用所选的`fontSize`值渲染多个图标：
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: How it works...
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The default value of `fontSize` is `default`. Let's walk through the different
    size options of Material-UI icons and see how they look.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '`fontSize`的默认值是`default`。让我们浏览Material-UI图标的不同大小选项，看看它们的外观。'
- en: Default
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 默认
- en: 'The `default` value sets the icon size to 24 pixels:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '`default`值将图标大小设置为24像素：'
- en: '![](img/6bb21f8e-f169-4db2-9220-a540da3fb172.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6bb21f8e-f169-4db2-9220-a540da3fb172.png)'
- en: Inherit
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 继承
- en: 'The `inherit` value sets the icon to whatever `fontSize` its parent component
    is set to. In this example, the icons inherit 16 pixels as the `fontSize`:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`inherit`值将图标设置为父组件设置的`fontSize`。在这个例子中，图标继承了16像素作为`fontSize`：'
- en: '![](img/7e957317-f600-42fe-8262-e183c11673d1.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7e957317-f600-42fe-8262-e183c11673d1.png)'
- en: Small
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 小
- en: 'The `small` value sets the icon size to 20 pixels:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`small`值将图标大小设置为20像素：'
- en: '![](img/f96316b8-74fd-4213-94e6-40247a72a9ba.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f96316b8-74fd-4213-94e6-40247a72a9ba.png)'
- en: Large
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 大
- en: 'The `large` value sets the icon size to 36 pixels:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '`large`值将图标大小设置为36像素：'
- en: '![](img/2d515d2a-687d-4ebe-8d41-965f390cf448.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2d515d2a-687d-4ebe-8d41-965f390cf448.png)'
- en: See also
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 相关内容
- en: Icon demos: [https://material-ui.com/style/icons/](https://material-ui.com/style/icons/)
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图标演示：[https://material-ui.com/style/icons/](https://material-ui.com/style/icons/)
- en: Icon API documentation: [https://material-ui.com/api/icon/](https://material-ui.com/api/icon/)
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图标API文档：[https://material-ui.com/api/icon/](https://material-ui.com/api/icon/)
- en: Dynamically loading icons
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动态加载图标
- en: On screens that only have a handful of icons on them, you can directly import
    them as components without any issues. This can be challenging if you have a screen
    with many icons or if your application as a whole uses lots of icons (the latter
    case increases the bundle size). The answer, in both cases, is to load Material-UI
    icons lazily/dynamically.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在只有少量图标的屏幕上，你可以直接将它们作为组件导入而不会出现任何问题。如果你有一个图标很多的屏幕，或者你的应用程序整体上使用了大量图标（后者会增加包的大小），这可能会很具挑战性。在这两种情况下，答案都是懒加载/动态加载Material-UI图标。
- en: How to do it...
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何实现...
- en: You can leverage the `lazy()` higher-order component from React. Also from React,
    the `Suspense` component provides placeholders in your UI while your `lazy` components
    are fetched and rendered. This overall approach is how code-splitting is handled
    in React—Material-UI icons happen to be a good use case.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以利用React的`lazy()`高阶组件。同时，React的`Suspense`组件在`lazy`组件被检索和渲染时在你的UI中提供占位符。这种整体方法就是React中处理代码拆分的方式——Material-UI图标恰好是一个很好的用例。
- en: 'This example uses a Storybook control to select the icon category to load:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这个例子使用Storybook控件来选择要加载的图标类别：
- en: '![](img/0609a5a4-b72f-4c7a-a840-cafa45a0eae4.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0609a5a4-b72f-4c7a-a840-cafa45a0eae4.png)'
- en: 'Here''s the code to create `lazy icon` components that load dynamically:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这是创建动态加载的`lazy icon`组件的代码：
- en: '[PRE2]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Here''s what you''ll see when the screen first loads:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 当屏幕首次加载时，你会看到以下内容：
- en: '![](img/54e7ed6b-4118-4d49-94a7-6cd39d7a2a89.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/54e7ed6b-4118-4d49-94a7-6cd39d7a2a89.png)'
- en: 'Here''s what you''ll see if you select the `Av` category:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你选择`Av`类别，你会看到以下内容：
- en: '![](img/423f4f54-b34a-4916-8f56-85fbea9f22cf.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/423f4f54-b34a-4916-8f56-85fbea9f22cf.png)'
- en: How it works...
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'The `lazy()` function takes a function that returns a call to `import()`. It
    returns a `lazy` component:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '`lazy()`函数接收一个返回`import()`调用的函数。它返回一个`lazy`组件：'
- en: '[PRE3]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This code doesn''t actually `import` the `ThreeDRotation` icon. It builds a
    new component that imports the icon when it''s rendered. For example, the following
    will cause the icon to be imported:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码实际上并没有`import` `ThreeDRotation`图标。它构建了一个新组件，在渲染时导入图标。例如，以下代码将导致图标被导入：
- en: '[PRE4]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You can actually see this for yourself if you look at the Network tab in `dev`
    tools while running this example. The `Action` category is selected by default,
    so you can see the network requests to load the `lazy` components that are being
    rendered:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在运行此示例时查看`dev`工具中的网络标签来亲自看到这一点。默认选择`Action`类别，因此你可以看到加载正在渲染的`lazy`组件的网络请求：
- en: '![](img/3682e251-3def-4d59-a6b4-0e6ba19a55c9.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3682e251-3def-4d59-a6b4-0e6ba19a55c9.png)'
- en: 'Then, if you change the selected category to `Communication`, you''ll see several
    more network requests to load the lazy icons in this category that are now being
    rendered:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，如果你将选择的类别更改为`Communication`，你会看到更多网络请求来加载这个类别中正在渲染的懒加载图标：
- en: '![](img/f46f068f-66b7-4d21-b127-f6cce5c0e6cc.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f46f068f-66b7-4d21-b127-f6cce5c0e6cc.png)'
- en: See also
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 相关内容
- en: Icon demos: [https://material-ui.com/style/icons/](https://material-ui.com/style/icons/)
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图标演示：[https://material-ui.com/style/icons/](https://material-ui.com/style/icons/)
- en: Icon API documentation: [https://material-ui.com/api/icon/](https://material-ui.com/api/icon/)
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图标API文档：[https://material-ui.com/api/icon/](https://material-ui.com/api/icon/)
- en: Themed icons
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 主题图标
- en: Material-UI icons have themes that can be applied to them. They are not to be
    confused with Material-UI themes that apply styles to every Material-UI component
    that you use; icon themes are specifically for icons. To use a themed icon, you
    have to import a different version of it.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: Material-UI 图标有可以应用于它们的主题。它们不要与应用于你使用的每个 Material-UI 组件的样式主题混淆；图标主题专门用于图标。要使用主题图标，你必须导入它的不同版本。
- en: How to do it...
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To help explore the different icon themes, this example uses a Storybook control
    that allows you to change the icon theme:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助探索不同的图标主题，此示例使用了一个 Storybook 控件，允许你更改图标主题：
- en: '![](img/890321b5-b1b5-4832-b5ba-3148eb332a32.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](img/890321b5-b1b5-4832-b5ba-3148eb332a32.png)'
- en: 'Here''s the source:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这是源代码：
- en: '[PRE5]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: How it works...
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'If you take a look at the `themes` object, you can see that each theme has
    the same icons in it, but their `import` paths are slightly different. For example,
    the `Attachment` icon is imported by the `Filled` theme, as follows:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你查看 `themes` 对象，你会看到每个主题都有相同的图标，但它们的 `import` 路径略有不同。例如，`Attachment` 图标是由
    `Filled` 主题导入的，如下所示：
- en: '[PRE6]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'In the `Rounded` theme, here''s how the same icon is imported:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `Rounded` 主题中，导入相同图标的示例如下：
- en: '[PRE7]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: You append the theme name to the icon name to change the theme of the icon.
    The same pattern follows for each of them.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 你通过将主题名称附加到图标名称来更改图标的主题。每个都遵循相同的模式。
- en: Not every icon changes when the theme changes. It really just depends on the
    icon shape and whether it makes sense to, with the given theme. The `import` will
    still work, but there isn't always a visual change.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 并非每个图标在主题更改时都会改变。这实际上完全取决于图标形状以及是否与给定主题相匹配。导入仍然会工作，但并不总是会有视觉上的变化。
- en: 'Let''s explore them now:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们一起来探索它们：
- en: '| Filled | The `Filled` theme is the default. Here''s what it looks like when
    applied to the example: | ![](img/dd0cf33b-0a77-4557-a4b0-7d991154480c.png) |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| 填充 | `Filled` 主题是默认主题。以下是将其应用于示例时的外观： | ![](img/dd0cf33b-0a77-4557-a4b0-7d991154480c.png)
    |'
- en: '| Outlined | Take a look at the preceding `Filled` theme—notice that some icons
    are actually outlined by default.Here''s what the `Outlined` theme looks like
    when applied to the example: | ![](img/c624b650-d85b-41a1-9856-9a39d80692a3.png)
    |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| 线框 | 查看前面的 `Filled` 主题——注意，一些图标实际上是默认轮廓的。以下是 `Outlined` 主题应用于示例时的外观： | ![](img/c624b650-d85b-41a1-9856-9a39d80692a3.png)
    |'
- en: '| Rounded | Here''s what the `Rounded` theme looks like when applied to the
    example: | ![](img/74efca1a-823a-4d8d-83ca-6d8dedffddd3.png) |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| 圆角 | 这是将 `Rounded` 主题应用于示例时的外观： | ![](img/74efca1a-823a-4d8d-83ca-6d8dedffddd3.png)
    |'
- en: '| Two tone | Here''s what the `TwoTone` theme looks like when applied to the
    example: | ![](img/401295a4-a80f-4716-b6a8-fc66d88ae00b.png) |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| 双色调 | 这是将 `TwoTone` 主题应用于示例时的外观： | ![](img/401295a4-a80f-4716-b6a8-fc66d88ae00b.png)
    |'
- en: '| Sharp | Here''s what the `Sharp` theme looks like when applied to the example:
    | ![](img/192a4a87-64d0-4103-b734-592835e0f1f3.png) |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| 锋利 | 这是将 `Sharp` 主题应用于示例时的外观： | ![](img/192a4a87-64d0-4103-b734-592835e0f1f3.png)
    |'
- en: See also
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 相关内容
- en: Icon demos: [https://material-ui.com/style/icons/](https://material-ui.com/style/icons/)
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图标演示：[https://material-ui.com/style/icons/](https://material-ui.com/style/icons/)
- en: Icon API documentation: [https://material-ui.com/api/icon/](https://material-ui.com/api/icon/)
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图标 API 文档：[https://material-ui.com/api/icon/](https://material-ui.com/api/icon/)
- en: Installing more icons
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装更多图标
- en: The `mdi-material-ui` package provides a staggering number of icons, available
    for you to use in your Material-UI applications in the same way as you would use
    the built-in icons.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '`mdi-material-ui` 包提供了大量的图标，你可以像使用内置图标一样，在你的 Material-UI 应用程序中使用它们。'
- en: How to do it...
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The first step is to install the package and make it available in your project:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是安装包并将其添加到你的项目中：
- en: '[PRE8]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Now you''re ready to `import` icons from this package and use them:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经准备好从这个包中 `import` 图标并使用它们：
- en: '[PRE9]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Here''s what the icons look like when you load the screen:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这是加载屏幕时图标的外观：
- en: '![](img/e0aaba0c-a15e-40fc-aa3c-c3b869882d12.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e0aaba0c-a15e-40fc-aa3c-c3b869882d12.png)'
- en: How it works...
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The icons from `mdi-material-design` are just like the icons from `@material-ui/icons`.
    They're imported and rendered as React components. You find the name of the icon
    that you need by looking it up on [https://materialdesignicons.com/](https://materialdesignicons.com/).
    Anywhere you can use the official Material-UI icons, such as in buttons, you can
    also use icons from `mdi-material-ui`.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 `mdi-material-design` 的图标与 `@material-ui/icons` 的图标类似。它们被导入并作为React组件渲染。您可以通过在
    [https://materialdesignicons.com/](https://materialdesignicons.com/) 上查找来找到您需要的图标名称。在任何可以使用官方Material-UI图标的地方，例如在按钮中，您也可以使用
    `mdi-material-ui` 的图标。
- en: See also
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参见
- en: 'The Material Design icons package: [https://materialdesignicons.com/](https://materialdesignicons.com/)'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 材料设计图标包：[https://materialdesignicons.com/](https://materialdesignicons.com/)
- en: Icon demos: [https://material-ui.com/style/icons/](https://material-ui.com/style/icons/)
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图标演示：[https://material-ui.com/style/icons/](https://material-ui.com/style/icons/)
- en: Icon API documentation: [https://material-ui.com/api/icon/](https://material-ui.com/api/icon/)
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图标API文档：[https://material-ui.com/api/icon/](https://material-ui.com/api/icon/)
