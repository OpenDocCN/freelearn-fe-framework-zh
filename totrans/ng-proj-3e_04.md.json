["```js\nng new weather-app --style=scss --routing=false \n```", "```js\nng add @angular/material --theme=indigo-pink --animations=enabled --typography \n```", "```js\n    @angular/material/prebuilt-themes/indigo-pink.css \n    ```", "```js\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\"> \n    ```", "```js\n    import { NgModule } from '@angular/core';\n    import { BrowserModule } from '@angular/platform-browser';\n    import { AppComponent } from './app.component';\n    **import** **{** **BrowserAnimationsModule** **}** **from****'@angular/platform-browser/animations'****;**\n    @NgModule({\n      declarations: [\n        AppComponent\n      ],\n      imports: [\n        BrowserModule,\n        **BrowserAnimationsModule**\n      ],\n      providers: [],\n      bootstrap: [AppComponent]\n    })\n    export class AppModule { } \n    ```", "```js\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500&display=swap\" rel=\"stylesheet\"> \n    ```", "```js\n    <body **class****=****\"mat-typography\"**>\n      <app-root></app-root>\n    </body> \n    ```", "```js\n    html, body { height: 100%; }\n    body { margin: 0; font-family: Roboto, \"Helvetica Neue\", sans-serif; } \n    ```", "```js\n    ng generate interface weather \n    ```", "```js\n    export interface Weather {\n      weather: WeatherInfo[],\n      main: {\n        temp: number;\n        pressure: number;\n        humidity: number;\n      };\n      wind: {\n        speed: number;\n      };\n      sys: {\n        country: string\n      };\n      name: string;\n    }\n    interface WeatherInfo {\n      main: string;\n      icon: string;\n    } \n    ```", "```js\n    **import** **{** **HttpClientModule** **}** **from****'@angular/common/http'****;**\n    import { NgModule } from '@angular/core';\n    import { BrowserModule } from '@angular/platform-browser';\n    import { AppComponent } from './app.component';\n    import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n    @NgModule({\n      declarations: [\n        AppComponent\n      ],\n      imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        **HttpClientModule**\n      ],\n      providers: [],\n      bootstrap: [AppComponent]\n    })\n    export class AppModule { } \n    ```", "```js\n    ng generate service weather \n    ```", "```js\n    **import** **{** **HttpClient** **}** **from****'@angular/common/http'****;**\n    import { Injectable } from '@angular/core';\n    @Injectable({\n      providedIn: 'root'\n    })\n    export class WeatherService {\n      constructor(**private** **http: HttpClient**) { }\n    } \n    ```", "```js\n    private apiUrl = 'https://api.openweathermap.org/data/2.5/';\n    private apiKey = '<Your API key>'; \n    ```", "```js\n        getWeather(city: string): Observable<Weather> {\n          const options = new HttpParams()\n            .set('units', 'metric')\n            .set('q', city)\n            .set('appId', this.apiKey);\n          return this.http.get<Weather>(this.apiUrl + 'weather', { params: options });\n        } \n        ```", "```js\n    import { HttpClient, **HttpParams** } from '@angular/common/http';\n    import { Injectable } from '@angular/core';\n    **import** **{** **Observable** **}** **from****'rxjs'****;**\n    **import** **{** **Weather** **}** **from****'./weather'****;** \n    ```", "```js\n    ng generate component weather \n    ```", "```js\n    <app-weather></app-weather> \n    ```", "```js\n    @NgModule({\n      declarations: [\n        AppComponent,\n        WeatherComponent\n      ],\n      imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        **MatIconModule****,**\n    **MatInputModule****,**\n    **MatCardModule**\n      ],\n      providers: [],\n      bootstrap: [AppComponent]\n    }) \n    ```", "```js\n    import { MatCardModule } from '@angular/material/card';\n    import { MatIconModule } from '@angular/material/icon';\n    import { MatInputModule } from '@angular/material/input'; \n    ```", "```js\n    import { Component } from '@angular/core';\n    **import** **{** **Weather** **}** **from****'****../weather'****;**\n    **import** **{** **WeatherService** **}** **from****'../weather.service'****;**\n    @Component({\n      selector: 'app-weather',\n      templateUrl: './weather.component.html',\n      styleUrls: ['./weather.component.scss']\n    })\n    export class WeatherComponent {\n      **weather****:** **Weather** **|** **undefined****;**\n      **constructor****(****private** **weatherService: WeatherService****){ }**\n    } \n    ```", "```js\n    search(city: string) {\n      this.weatherService.getWeather(city).subscribe(weather => this.weather = weather);\n    } \n    ```", "```js\n<mat-form-field>\n    <input matInput placeholder=\"Enter city\" #cityCtrl (keydown.enter)=\"search(cityCtrl.value)\">\n    <mat-icon matSuffix (click)=\"search(cityCtrl.value)\">search</mat-icon>\n</mat-form-field>\n<mat-card *ngIf=\"weather\">\n    <mat-card-header>\n        <mat-card-title>{{weather.name}}, {{weather.sys.country}}</mat-card-title>\n        <mat-card-subtitle>{{weather.weather[0].main}}</mat-card-subtitle>\n    </mat-card-header>\n    <img mat-card-image src=\"img/{{weather.weather[0].icon}}@2x.png\" [alt]=\"weather.weather[0].main\">\n    <mat-card-content>\n      <h1>{{weather.main.temp | number:'1.0-0'}} &#8451;</h1>\n      <p>Pressure: {{weather.main.pressure}} hPa</p>\n      <p>Humidity: {{weather.main.humidity}} %</p>\n      <p>Wind: {{weather.wind.speed}} m/s</p>\n    </mat-card-content>\n</mat-card> \n```", "```js\n:host {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  padding-top: 25px;\n}\nmat-form-field {\n  width: 20%;\n}\nmat-icon {\n  cursor: pointer;\n}\nmat-card {\n  margin-top: 30px;\n  width: 250px;\n}\nh1 {\n  text-align: center;\n  font-size: 2.5em;\n} \n```", "```js\nng add @angular/pwa \n```", "```js\n    @NgModule({\n      declarations: [\n        AppComponent,\n        WeatherComponent\n      ],\n      imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        MatIconModule,\n        MatInputModule,\n        MatCardModule,\n        **ServiceWorkerModule****.****register****(****'ngsw-worker.js'****, {**\n    **enabled****: !****isDevMode****(),**\n    **// Register the ServiceWorker as soon as the application is stable**\n    **// or after 30 seconds (whichever comes first).**\n    **registrationStrategy****:** **'registerWhenStable:30000'**\n     **})**\n      ],\n      providers: [],\n      bootstrap: [AppComponent]\n    }) \n    ```", "```js\n    <link rel=\"manifest\" href=\"manifest.webmanifest\">\n    <meta name=\"theme-color\" content=\"#1976d2\"> \n    ```", "```js\n    npm install -D http-server \n    ```", "```js\n    \"scripts\": {\n      \"ng\": \"ng\",\n      \"start\": \"ng serve\",\n      \"build\": \"ng build\",\n      \"watch\": \"ng build --watch --configuration development\",\n      \"test\": \"ng test\",\n      **\"server\"****:** **\"http-server -p 8080 -c-1 dist/weather-app\"**\n    } \n    ```", "```js\n    npm run server \n    ```", "```js\n    **import** **{** **MatSnackBarModule** **}** **from****'@angular/material/snack-bar'****;**\n    @NgModule({\n      declarations: [\n        AppComponent,\n        WeatherComponent\n      ],\n      imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        MatIconModule,\n        MatInputModule,\n        MatCardModule,\n        **MatSnackBarModule**,\n        ServiceWorkerModule.register('ngsw-worker.js', {\n          enabled: !isDevMode(),\n          // Register the ServiceWorker as soon as the application is stable\n          // or after 30 seconds (whichever comes first).\n          registrationStrategy: 'registerWhenStable:30000'\n        })\n      ],\n      providers: [],\n      bootstrap: [AppComponent]\n    }) \n    ```", "```js\n    import { Component, **OnInit** } from '@angular/core';\n    @Component({\n      selector: 'app-root',\n      templateUrl: './app.component.html',\n      styleUrls: ['./app.component.scss']\n    })\n    export class AppComponent **implements****OnInit** {\n      title = 'weather-app';\n    } \n    ```", "```js\n    import { Component, OnInit } from '@angular/core';\n    **import** **{** **MatSnackBar** **}** **from****'@angular/material/snack-bar'****;**\n    **import** **{** **SwUpdate****,** **VersionReadyEvent** **}** **from****'@angular/service-worker'****;**\n    @Component({\n      selector: 'app-root',\n      templateUrl: './app.component.html',\n      styleUrls: ['./app.component.scss']\n    })\n    export class AppComponent implements OnInit {\n      title = 'weather-app';\n      **constructor****(****private** **updates: SwUpdate,** **private** **snackbar: MatSnackBar****) {}**\n    } \n    ```", "```js\n    ngOnInit() {\n      this.updates.versionUpdates.pipe(\n        filter((evt): evt is VersionReadyEvent => evt.type === 'VERSION_READY'),\n        switchMap(() => this.snackbar.open('A new version is available!', 'Update now').afterDismissed()),\n        filter(result => result.dismissedByAction),\n        map(() => this.updates.activateUpdate().then(() => location.reload()))\n      ).subscribe();\n    } \n    ```", "```js\n    import { filter, map, switchMap } from 'rxjs'; \n    ```", "```js\n    ng build \n    ```", "```js\n    npm run server \n    ```", "```js\n    ng generate component header \n    ```", "```js\n    **import** **{** **MatButtonModule** **}** **from****'@angular/material/button'****;**\n    **import** **{** **MatToolbarModule** **}** **from****'@angular/material/toolbar'****;**\n    @NgModule({\n      declarations: [\n        AppComponent,\n        WeatherComponent,\n        HeaderComponent\n      ],\n      imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        MatIconModule,\n        MatInputModule,\n        MatCardModule,\n        MatSnackBarModule,\n    **MatButtonModule****,**\n    **MatToolbarModule****,**\n        ServiceWorkerModule.register('ngsw-worker.js', {\n          enabled: !isDevMode(),\n          // Register the ServiceWorker as soon as the application is stable\n          // or after 30 seconds (whichever comes first).\n          registrationStrategy: 'registerWhenStable:30000'\n        })\n      ],\n      providers: [],\n      bootstrap: [AppComponent]\n    }) \n    ```", "```js\n    <mat-toolbar color=\"primary\">\n      <span>Weather App</span>\n      <span class=\"spacer\"></span>\n      <button mat-icon-button>\n        <mat-icon>refresh</mat-icon>\n      </button>\n      <button mat-icon-button>\n        <mat-icon>share</mat-icon>\n      </button>\n    </mat-toolbar> \n    ```", "```js\n    .spacer {\n      flex: 1 1 auto;\n    } \n    ```", "```js\n    **<****app-header****></****app-header****>**\n    <app-weather></app-weather> \n    ```", "```js\n    npm install -g firebase-tools \n    ```", "```js\n    firebase login \n    ```", "```js\n    ng add @angular/fire \n    ```", "```js\n    ? What features would you like to setup? \n    ```", "```js\n    ? Which Firebase account would you like to use? \n    ```", "```js\n    ? Please select a project: \n    ```", "```js\n    ? Please select a hosting site: \n    ```", "```js\nng deploy \n```"]