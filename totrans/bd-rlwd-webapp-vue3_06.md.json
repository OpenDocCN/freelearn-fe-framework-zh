["```js\nnpm create vuetify\n```", "```js\nVITE_SUPABASE_URL=YOUR_SUPABASE_URLVITE_SUPABASE_ANON_KEY=YOUR_SUPABASE_ANON_KEY\n```", "```js\nnpm install @supabase/supabase-js\n```", "```js\nimport { createClient } from '@supabase/supabase-js'const supabaseUrl = import.meta.env.VITE_SUPABASE_URL\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY\nexport const useSupabaseClient = createClient(supabaseUrl, supabaseAnonKey);\n```", "```js\n<template>Â Â <v-app>\nÂ Â Â Â <v-main>\nÂ Â Â Â Â Â <router-view />\nÂ Â Â Â </v-main>\nÂ Â </v-app>\n</template>\n```", "```js\n<script setup lang=\"ts\">import { onMounted } from \"vue\";\nimport { useUserStore } from \"@/store/user\";\nimport { useSupabaseClient } from \"@/composables/supabase\";\nconst userStore = useUserStore();\nonMounted(async () => {\nÂ Â const { data } = await useSupabaseClient.auth.getSession();\nÂ Â if (data && data.session && data.session.user) {\nÂ Â Â Â await userStore.insertProfile(data.session);\nÂ Â Â Â userStore.setUserSession(data.session);\nÂ Â }\nÂ Â useSupabaseClient.auth.onAuthStateChange((_, _session) => {\nÂ Â Â Â userStore.setUserSession(_session);\nÂ Â });\n});\n</script>\n<template>\nÂ Â <router-view />\n</template>\n```", "```js\n<script lang=\"ts\" setup>import FormLogin from '@/components/FormLogin.vue';\n</script>\n<template>\nÂ Â <form-login />\n</template>\n```", "```js\n<script setup lang=\"ts\">import { storeToRefs } from \"pinia\";\nimport { useUserStore } from \"@/store/user\";\nimport { useAppStore } from \"@/store/app\";\nconst userStore = useUserStore();\nconst appStore = useAppStore();\nconst { userIsLoggedIn } = storeToRefs(userStore);\nconst { drawer } = storeToRefs(appStore);\nconst goToPage = (page: string): void => {\nÂ Â appStore.navigateToPage(page);\n};\n</script>\n<template>\nÂ Â <v-navigation-drawer v-model=\"drawer\" app>\nÂ Â Â Â <v-list dense v-if=\"userIsLoggedIn\">\nÂ Â Â Â Â Â <v-list-item @click=\"userStore.logout()\">\nÂ Â Â Â Â Â Â Â <template v-slot:prepend>\nÂ Â Â Â Â Â Â Â Â Â <v-icon icon=\"mdi-account-arrow-right\"></v-icon>\nÂ Â Â Â Â Â Â Â </template>\nÂ Â Â Â Â Â Â Â <v-list-item-title>Log out</v-list-item-title>\nÂ Â Â Â Â Â </v-list-item>\nÂ Â Â Â </v-list>\nÂ Â Â Â <v-list dense v-else>\nÂ Â Â Â Â Â <v-list-item @click=\"goToPage('/login')\">\nÂ Â Â Â Â Â Â Â <template v-slot:prepend>\nÂ Â Â Â Â Â Â Â Â Â <v-icon icon=\"mdi-account\"></v-icon>\nÂ Â Â Â Â Â Â Â </template>\nÂ Â Â Â Â Â Â Â <v-list-item-title>Login</v-list-item-title>\nÂ Â Â Â Â Â </v-list-item>\nÂ Â Â Â </v-list>\nÂ Â </v-navigation-drawer>\n</template>\n```", "```js\n<script setup lang=\"ts\">// ...abbreviated\nconst userStore = useUserStore();\nconst appStore = useAppStore();\nconst { pageTitle, dialog } = storeToRefs(appStore);\nconst currentYear = new Date().getFullYear();\nonMounted(async () => {\nÂ Â // ...abbreviated\n});\n</script>\n<template>\nÂ Â <v-app>\nÂ Â Â Â <app-menu />\nÂ Â Â Â <v-app-bar app style=\"position: relative\">\nÂ Â Â Â Â Â <v-app-bar-nav-icon @click=\"appStore.toggleDrawer()\"></v-app-bar-nav-icon>\nÂ Â Â Â Â Â <v-toolbar-title>ğŸ’ª Fittest Pal - {{ pageTitle }}</v-toolbar-title>\nÂ Â Â Â </v-app-bar>\nÂ Â Â Â <v-main>\nÂ Â Â Â Â Â <!-- abbreviated -->\nÂ Â Â Â </v-main>\nÂ Â Â Â <v-footer app>\n<span>&copy; {{ currentYear }} ğŸ’ª Fittest Pal Fitness Tracker</span>\nÂ Â Â Â </v-footer>\nÂ Â </v-app>\n</template>\n```", "```js\nÂ Â Â Â Â Â {Â Â Â Â Â Â Â Â path: 'track',\nÂ Â Â Â Â Â Â Â name: 'Track',\nÂ Â Â Â Â Â Â Â component: () => import(/* webpackChunkName: \"track\" */ '@/views/Track.vue'),\nÂ Â Â Â Â Â Â Â beforeEnter: loginGuard\nÂ Â Â Â Â Â },\n```", "```js\n<script lang=\"ts\" setup>import TrackExercise from \"@/components/TrackExercise.vue\";\n</script>\n<template>\nÂ Â <track-exercise />\n</template>\n```", "```js\n<script setup lang=\"ts\">// ...abbreviated\nconst menuItems = [\nÂ Â {\nÂ Â Â Â icon: \"mdi-dumbbell\",\nÂ Â Â Â title: \"Track\",\nÂ Â Â Â page: \"/track\",\nÂ Â }\n];\n</script>\n```", "```js\n<v-list dense v-if=\"userIsLoggedIn\">Â Â <v-list-item\nÂ Â Â Â v-for=\"item in menuItems\"\nÂ Â Â Â :key=\"item.title\"\nÂ Â Â Â @click=\"goToPage(item.page)\"\nÂ Â >\nÂ Â Â Â <template v-slot:prepend>\nÂ Â Â Â Â Â <v-icon :icon=\"item.icon\"></v-icon>\nÂ Â Â Â </template>\nÂ Â Â Â <v-list-item-title>{{ item.title }}</v-list-item-title>\nÂ Â </v-list-item>\nÂ Â <v-list-item @click=\"userStore.logout()\">\nÂ Â Â Â <template v-slot:prepend>\nÂ Â Â Â Â Â <v-icon icon=\"mdi-account-arrow-right\"></v-icon>\nÂ Â Â Â </template>\nÂ Â Â Â <v-list-item-title>Log out</v-list-item-title>\nÂ Â </v-list-item>\n</v-list>\n```", "```js\n<script setup lang=\"ts\">import { ref } from \"vue\";\nimport type { Ref } from \"vue\";\nimport { VDatePicker } from \"vuetify/labs/VDatePicker\";\nconst showDialogDate: Ref<boolean> = ref(false);\nconst selectedDate: Ref<any[] | undefined> = ref(undefined);\n</script>\n```", "```js\n<template>Â Â <v-container>\nÂ Â Â Â <v-row class=\"align-center justify-space-between mb-6\">\nÂ Â Â Â Â Â <v-btn @click=\"showDialogDate = true\">\nÂ Â Â Â Â Â Â Â <span v-if=\"selectedDate\">Change date</span>\nÂ Â Â Â Â Â Â Â <span v-else>Select date</span>\nÂ Â Â Â Â Â </v-btn>\nÂ Â Â Â Â Â {{ selectedDate }}\nÂ Â Â Â Â Â <v-dialog v-model=\"showDialogDate\" center>\nÂ Â Â Â Â Â Â Â <v-date-picker\nÂ Â Â Â Â Â Â Â Â Â v-model=\"selectedDate\"\nÂ Â Â Â Â Â Â Â Â Â show-adjacent-months\nÂ Â Â Â Â Â Â Â Â Â @click:cancel=\"showDialogDate = false\"\nÂ Â Â Â Â Â Â Â Â Â @click:save=\"showDialogDate = false\"\nÂ Â Â Â Â Â Â Â Â Â style=\"margin: 0 auto\"\nÂ Â Â Â Â Â Â Â ></v-date-picker>\nÂ Â Â Â Â Â </v-dialog>\nÂ Â Â Â </v-row>\nÂ Â </v-container>\n</template>\n```", "```js\n<script setup lang=\"ts\">import { ref, computed } from \"vue\";\n// ... abbreviated\nconst formattedDate: Ref<string> = computed(() => {\nÂ Â if (selectedDate?.value?.length) {\nÂ Â Â Â return new Intl.DateTimeFormat(\"en-US\", {\nÂ Â Â Â Â Â weekday: \"long\",\nÂ Â Â Â Â Â year: \"numeric\",\nÂ Â Â Â Â Â month: \"long\",\nÂ Â Â Â Â Â day: \"numeric\",\nÂ Â Â Â }).format(selectedDate.value[0]);\nÂ Â }\nÂ Â return \"\";\n});\n</script>\n```", "```js\n<h4 class=\"text-h5\">{{ formattedDate }}</h4>\n```", "```js\n<script setup lang=\"ts\">import { storeToRefs } from \"pinia\";\nimport { useFitnessStore } from '@/store/fitness'\nconst fitnessStore = useFitnessStore()\nconst { exercises } = storeToRefs(fitnessStore)\n</script>\n<template>\nÂ Â <v-select\nÂ Â Â Â v-if=\"exercises\"\nÂ Â Â Â label=\"Select exercise\"\nÂ Â Â Â :items=\"exercises\"\nÂ Â Â Â item-title=\"name\"\nÂ Â Â Â item-value=\"id\"\nÂ Â ></v-select>\n</template>\n```", "```js\n{ \"exercise\": \"7fa3219e-9127-4189-ae30-d340aaf0f9e6\",Â Â \"routines\": [\nÂ Â Â Â { \"weight\": \"10\", \"repetitions\": \"10\" },\nÂ Â Â Â { \"weight\": \"10\", \"repetitions\": \"10\" }\nÂ Â ]\n}\n```", "```js\n<script setup lang=\"ts\">// ...abbreviated\nimport type { Routine } from \"@/types/fitness\";\nimport AddRoutine from \"./AddRoutine.vue\";\nconst routines: Ref<Routine[]> = ref([]);\nconst showDialogRoutine: Ref<boolean> = ref(false);\nconst addRoutineToExercise = (newRoutine: any) => {\nÂ Â showDialogRoutine.value = false;\nÂ Â routines.value.push(newRoutine);\n};\n</script>\n```", "```js\n<template>Â Â <v-container>\nÂ Â Â Â <v-row class=\"align-center justify-space-between mb-6\">\nÂ Â Â Â Â Â // â€¦abbreviated\nÂ Â Â Â </v-row>\nÂ Â Â Â {{ routines }}\nÂ Â Â Â <v-row class=\"mb-6\">\nÂ Â Â Â Â Â <v-btn\nÂ Â Â Â Â Â Â Â block\nÂ Â Â Â Â Â Â Â size=\"x-large\"\nÂ Â Â Â Â Â Â Â @click=\"showDialogRoutine = true\"\nÂ Â Â Â Â Â Â Â v-if=\"selectedDate\"\nÂ Â Â Â Â Â >\nÂ Â Â Â Â Â Â Â Add routine\nÂ Â Â Â Â Â </v-btn>\nÂ Â Â Â Â Â <v-dialog v-model=\"showDialogRoutine\" fullscreen>\nÂ Â Â Â Â Â Â Â <v-card>\nÂ Â Â Â Â Â Â Â Â Â <v-card-text>\nÂ Â Â Â Â Â Â Â Â Â Â Â <add-routine @add=\"addRoutineToExercise\" />\nÂ Â Â Â Â Â Â Â Â Â </v-card-text>\nÂ Â Â Â Â Â Â Â Â Â <v-card-actions>\nÂ Â Â Â Â Â Â Â Â Â Â Â <v-btn color=\"primary\" @click=\"showDialogRoutine = false\"\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â >Close</v-btn\nÂ Â Â Â Â Â Â Â Â Â Â Â >\nÂ Â Â Â Â Â Â Â Â Â </v-card-actions>\nÂ Â Â Â Â Â Â Â </v-card>\nÂ Â Â Â Â Â </v-dialog>\nÂ Â Â Â </v-row>\nÂ Â </v-container>\n</template>\n```", "```js\nimport { useFitnessStore } from \"@/store/fitness\";const fitnessStore = useFitnessStore();\nimport { useAppStore } from \"@/store/app\";\nconst appStore = useAppStore();\n```", "```js\nconst canSaveWorkout = computed(() => {Â Â return routines.value.length > 0;\n});\nconst reset = () => {\nÂ Â routines.value = [];\nÂ Â selectedDate.value = undefined;\n};\nconst saveWorkout = () => {\nÂ Â if (selectedDate.value && routines.value?.length > 0) {\nÂ Â Â Â fitnessStore.saveWorkout({\nÂ Â Â Â Â Â date: selectedDate.value,\nÂ Â Â Â Â Â routines: routines.value,\nÂ Â Â Â });\nÂ Â Â Â appStore.showDialog({\nÂ Â Â Â Â Â title: \"Success\",\nÂ Â Â Â Â Â contents: \"Workout saved successfully\",\nÂ Â Â Â });\nÂ Â Â Â reset();\nÂ Â } else {\nÂ Â Â Â appStore.showDialog({\nÂ Â Â Â Â Â title: \"Error\",\nÂ Â Â Â Â Â contents: \"Please select a date and add at least one routine\",\nÂ Â Â Â });\nÂ Â }\n};\n```", "```js\n<template>// â€¦abbreviated\nÂ Â Â Â <v-row class=\"mb-6\">\nÂ Â Â Â Â Â <v-btn\nÂ Â Â Â Â Â Â Â block\nÂ Â Â Â Â Â Â Â size=\"x-large\"\nÂ Â Â Â Â Â Â Â :disabled=\"!canSaveWorkout\"\nÂ Â Â Â Â Â Â Â @click=\"saveWorkout\"\nÂ Â Â Â Â Â Â Â v-if=\"selectedDate\"\nÂ Â Â Â Â Â Â Â >Save workout</v-btn\nÂ Â Â Â Â Â >\nÂ Â Â Â </v-row>\nÂ Â </v-container>\n</template>\n```", "```js\n<script setup lang=\"ts\">import { computed, onMounted } from \"vue\";\nimport { storeToRefs } from \"pinia\";\nimport { useFitnessStore } from \"@/store/fitness\";\nconst fitnessStore = useFitnessStore();\nconst { dashboard } = storeToRefs(fitnessStore);\nconst daysSinceLastWorkout = computed(() => {\nÂ Â if (!dashboard.value) return 0;\nÂ Â const lastWorkout = new Date(dashboard.value.last_workout_date);\nÂ Â const today = new Date();\nÂ Â const diffTime = Math.abs(today.getTime() - lastWorkout.getTime());\nÂ Â const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\nÂ Â return diffDays;\n});\nonMounted(() => {\nÂ Â fitnessStore.getDashboard();\n});\n</script>\n```", "```js\n<template>Â Â <v-row>\nÂ Â Â Â <v-col cols=\"12\" sm=\"3\" m=\"2\" class=\"d-flex justify-space-between\">\nÂ Â Â Â Â Â <v-card class=\"align-self-stretch flex-grow-1\">\nÂ Â Â Â Â Â Â Â <v-card-title>{{ daysSinceLastWorkout }}</v-card-title>\nÂ Â Â Â Â Â Â Â <v-card-text>Days since last workout</v-card-text>\nÂ Â Â Â Â Â </v-card>\nÂ Â Â Â </v-col>\nÂ Â Â Â <v-col cols=\"12\" sm=\"3\" m=\"2\" class=\"d-flex justify-space-between\">\nÂ Â Â Â Â Â <v-card class=\"align-self-stretch flex-grow-1\">\nÂ Â Â Â Â Â Â Â <v-card-title>{{ dashboard?.total_workouts || 0 }}</v-card-title>\nÂ Â Â Â Â Â Â Â <v-card-text>Total workouts</v-card-text>\nÂ Â Â Â Â Â </v-card>\nÂ Â Â Â </v-col>\nÂ Â Â Â <v-col cols=\"12\" sm=\"3\" m=\"2\" class=\"d-flex justify-space-between\">\nÂ Â Â Â Â Â <v-card class=\"align-self-stretch flex-grow-1\">\nÂ Â Â Â Â Â Â Â <v-card-title>{{ dashboard?.cumulative_weight || 0 }}</v-card-title>\nÂ Â Â Â Â Â Â Â <v-card-text>Cumulative weight moved</v-card-text>\nÂ Â Â Â Â Â </v-card>\nÂ Â Â Â </v-col>\nÂ Â Â Â <v-col cols=\"12\" sm=\"3\" m=\"2\" class=\"d-flex justify-space-between\">\nÂ Â Â Â Â Â <v-card class=\"align-self-stretch flex-grow-1\">\nÂ Â Â Â Â Â Â Â <v-card-title>{{\nÂ Â Â Â Â Â Â Â Â Â dashboard?.most_weight_single_workout || 0\nÂ Â Â Â Â Â Â Â }}</v-card-title>\nÂ Â Â Â Â Â Â Â <v-card-text>Most weight in a single workout</v-card-text>\nÂ Â Â Â Â Â </v-card>\nÂ Â Â Â </v-col>\nÂ Â </v-row>\n</template>\n```", "```js\n<script setup lang=\"ts\">// ...abbreviated\nimport GroupedExerciseView from \"./GroupedExerciseView.vue\";\n// ...abbreviated\n</script>\n```", "```js\n<template>Â Â <v-container>\nÂ Â Â Â <workout-stats class=\"mb-4\" />\nÂ Â Â Â <h1>Past workouts</h1>\nÂ Â Â Â <v-expansion-panels v-model=\"panel\" multiple v-if=\"workouts\">\nÂ Â Â Â Â Â <v-expansion-panel v-for=\"id in workoutIds\" :key=\"id\">\nÂ Â Â Â Â Â Â Â <v-expansion-panel-title\nÂ Â Â Â Â Â Â Â Â Â >{{\nÂ Â Â Â Â Â Â Â Â Â Â Â formattedDate(new Date(workoutsGroupedById[id].workout_created_at))\nÂ Â Â Â Â Â Â Â Â Â }}\nÂ Â Â Â Â Â Â Â </v-expansion-panel-title>\nÂ Â Â Â Â Â Â Â <v-expansion-panel-text>\nÂ Â Â Â Â Â Â Â Â Â <grouped-exercise-view\nÂ Â Â Â Â Â Â Â Â Â Â Â :exercise=\"set\"\nÂ Â Â Â Â Â Â Â Â Â Â Â v-for=\"(set, index) in setsByExerciseName(workoutsGroupedById[id].sets)\"\nÂ Â Â Â Â Â Â Â Â Â Â Â :key=\"index\"\nÂ Â Â Â Â Â Â Â Â Â />\nÂ Â Â Â Â Â Â Â </v-expansion-panel-text>\nÂ Â Â Â Â Â </v-expansion-panel>\nÂ Â Â Â </v-expansion-panels>\nÂ Â </v-container>\n</template>\n```", "```js\n<script setup lang=\"ts\">// ...abbreviated\nimport ExerciseGrouping from \"./ExerciseGrouping.vue\";\n// ...abbreviated\n</script>\n<template>\nÂ Â <v-container>\nÂ Â Â Â // ...abbreviated\nÂ Â Â Â <exercise-grouping\nÂ Â Â Â Â Â Â Â :key=\"index\"\nÂ Â Â Â Â Â Â Â v-for=\"(row, index) in routines\"\nÂ Â Â Â Â Â Â Â :exercise-id=\"row.exercise || 'Unknown'\"\nÂ Â Â Â Â Â Â Â :routines=\"row?.routines\"\nÂ Â Â Â Â Â Â Â class=\"mb-6\"\nÂ Â Â Â Â Â />\nÂ Â Â Â // ...abbreviated\nÂ Â </v-container>\n</template>\n```", "```js\nnpm i vue-chartjs chart.js\n```", "```js\nÂ Â Â Â Â Â {Â Â Â Â Â Â Â Â path: 'graph',\nÂ Â Â Â Â Â Â Â name: 'Graph',\nÂ Â Â Â Â Â Â Â component: () => import(/* webpackChunkName: \"graph\" */ '@/views/Graph.vue'),\nÂ Â Â Â Â Â Â Â beforeEnter: loginGuard\nÂ Â Â Â Â Â },\n```", "```js\n<script lang=\"ts\" setup>import Graph from \"@/components/Graph.vue\";\n</script>\n<template>\nÂ Â <graph/>\n</template>\n```", "```js\nconst menuItems = [Â Â // ...abbreviated\nÂ Â {\nÂ Â Â Â icon: \"mdi-chart-line\",\nÂ Â Â Â title: \"Graph\",\nÂ Â Â Â page: \"/graph\",\nÂ Â },\n];\n```", "```js\nchartData: {Â Â labels: [ 'January', 'February', 'March' ],\nÂ Â datasets: [ { data: [40, 20, 12] } ]\n},\n```", "```js\nÂ Â Â Â const workoutsWithSets: Ref<WorkoutFromDatasource | []> = ref([]);Â Â Â Â const getWorkoutsWithSets = async (options: GetWorkoutsOptions = { order: 'ascending' }): Promise<void> => {\nÂ Â Â Â Â Â Â Â try {\nÂ Â Â Â Â Â Â Â Â Â Â Â // ...abbreviated\nÂ Â Â Â Â Â Â Â Â Â Â Â const { data, error, status }: any = await useSupabaseClient\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â .from('workouts')\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â .select(\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â id, created_at,\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â sets (\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â workout_id, weight, repetitions,\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â exercises ( name, color )\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â )\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â )\nÂ Â Â Â // ...abbreviated\nreturn { exercises, getExercises, saveWorkout, workouts, getWorkouts, dashboard, getDashboard, workoutsWithSets, getWorkoutsWithSets }\n```", "```js\n<script setup lang=\"ts\">import { ref } from \"vue\";\nimport type { Ref } from \"vue\";\nimport GraphPie from '@/components/GraphPie.vue'\nconst panel: Ref<Number[]> = ref([0]);\n</script>\n<template>\nÂ Â <v-container>\nÂ Â Â Â <h1>Graphs</h1>\nÂ Â Â Â <v-expansion-panels v-model=\"panel\" accordion>\nÂ Â Â Â Â Â <v-expansion-panel>\nÂ Â Â Â Â Â Â Â <v-expansion-panel-title\nÂ Â Â Â Â Â Â Â Â Â >Workout distribution all time (sets & reps)</v-expansion-panel-title\nÂ Â Â Â Â Â Â Â >\nÂ Â Â Â Â Â Â Â <v-expansion-panel-text>\nÂ Â Â Â Â Â Â Â Â Â <graph-pie />\nÂ Â Â Â Â Â Â Â </v-expansion-panel-text>\nÂ Â Â Â Â Â </v-expansion-panel>\nÂ Â Â Â Â Â // ...abbreviated\nÂ Â Â Â </v-expansion-panels>\nÂ Â </v-container>\n</template>\n```", "```js\n<script setup lang=\"ts\">import { ref } from \"vue\";\nimport type { Ref } from \"vue\";\nimport GraphPie from '@/components/GraphPie.vue'\nimport GraphLine from '@/components/GraphLine.vue'\nimport GraphBar from '@/components/GraphBar.vue'\nconst panel: Ref<Number[]> = ref([0]);\n</script>\n<template>\nÂ Â <v-container>\nÂ Â Â Â <h1>Graphs</h1>\nÂ Â Â Â <v-expansion-panels v-model=\"panel\" accordion>\nÂ Â Â Â Â Â <!-- abbreviated -->\nÂ Â Â Â Â Â <v-expansion-panel>\nÂ Â Â Â Â Â Â Â <v-expansion-panel-title\nÂ Â Â Â Â Â Â Â Â Â >Monthly cumulative weight per exercise</v-expansion-panel-title\nÂ Â Â Â Â Â Â Â >\nÂ Â Â Â Â Â Â Â <v-expansion-panel-text>\nÂ Â Â Â Â Â Â Â Â Â <graph-bar />\nÂ Â Â Â Â Â Â Â </v-expansion-panel-text>\nÂ Â Â Â Â Â </v-expansion-panel>\nÂ Â Â Â Â Â <v-expansion-panel>\nÂ Â Â Â Â Â Â Â <v-expansion-panel-title\nÂ Â Â Â Â Â Â Â Â Â >Cumulative effort per exercise over time</v-expansion-panel-title\nÂ Â Â Â Â Â Â Â >\nÂ Â Â Â Â Â Â Â <v-expansion-panel-text>\nÂ Â Â Â Â Â Â Â Â Â <graph-line />\nÂ Â Â Â Â Â Â Â </v-expansion-panel-text>\nÂ Â Â Â Â Â </v-expansion-panel>\nÂ Â Â Â </v-expansion-panels>\nÂ Â </v-container>\n</template>\n```"]