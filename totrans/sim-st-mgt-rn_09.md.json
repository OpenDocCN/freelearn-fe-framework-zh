["```js\n$ npm i @tanstack/react-query\n```", "```js\n$ yarn add @tanstack/react-query\n```", "```js\n// App.js\nimport {\n  QueryClient,\n  QueryClientProvider,\n} from '@tanstack/react-query'\n//…\nconst queryClient = new QueryClient()\nexport default function App() {\n//…\n  return (\n    <SafeAreaProvider>\n    <QueryClientProvider client={queryClient}>\n//…\n       </QueryClientProvider>\n    </SafeAreaProvider>\n  );\n}\n//…\n```", "```js\n// App.js\nexport default function App() {\n    return (\n      <QueryClientProvider client={queryClient}>\n      <AppWrapped />\n    </QueryClientProvider>\n  )\n};\n```", "```js\n// App.js\nimport {\n  useQuery,\n//…\n} from '@tanstack/react-query'\n//…\nconst fetchLoginStatus = async () => {\n    const response = await fetch(requestBase +\n      \"/loginState.json\");\n    return response.json();\n  }\nconst AppWrapped = () => {\n  const { data } = useQuery(['loginState'],\n    fetchLoginStatus);\n//…\n{!data?.loggedIn ? (\n    <Stack.Screen name='Login' component={Login} />\n          ) : (\n            <>\n               <Stack.Screen\n                name='Home'\n//…\n```", "```js\n// src/queries/useCustomImageQuery\nimport { useQuery } from \"@tanstack/react-query\";\nimport { requestBase } from \"../utils/constants\";\nconst getImages = async () => {\n  const response = await fetch(requestBase +\n    \"/john_doe/likedImages.json\");\n  return response.json();\n}\nexport const useCustomImageQuery = () => {\n  const { data } = useQuery(['loginState']);\n  return useQuery(\n    [\"imageList\"],\n    getImages,\n    {\n    enabled: data?.loggedIn,\n  });\n};\n```", "```js\n// src/components/ListOfFavorited.js\nimport { useCustomImageQuery } from \"../queries/\n  useCustomImageQuery\";\n//…\nexport const ListOfFavorites = ({ navigation }) => {\n  const { data: queriedImages } = useCustomImageQuery();\n//…\n  return (\n//…\n    <FlatList\n    data={ queriedImages }\n//…\n```", "```js\n  const imageListMutation = useMutation(newImage => {\n    return fetch('/john_doe/likedImages ',\n      {method: 'POST', body: newImage})\n  });\n```", "```js\n// src/surfaces/ImageDetailsmodal.js\n//…\nexport const ImageDetailsmodal = ({ navigation }) => {\n  const imageListMutation = useMutation(newImage => {\n    return fetch('/john_doe/likedImages ',\n      {method: 'POST', body: newImage})\n  });\n//…\n  return (\n//…\n      <Pressable\n          onPress={() => {\n           imageListMutation.mutate({route.params.imageItem\n             })\n          }}\n        >\n        {mutation.isLoading ? (\n            <Text>Loading…</Text>\n              ) : (\n                <Ionicons\n                  //…\n          /> )\n          }\n        </Pressable>\n//…\n```", "```js\nconst updateImges = () => {\n   return fetch('/john_doe/likedImages ',\n     {method: 'POST', body: newImage})\n}\nconst imageListMutation = useMutation(updateImges, {\n   onSuccess: data => {\n    queryClient.setQueryData(['imageList'], data)\n  }\n})\n```"]