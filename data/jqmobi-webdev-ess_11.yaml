- en: Chapter 11. Enhancing jQuery Mobile
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第11章. 增强 jQuery Mobile
- en: In this chapter, we'll learn how to enhance jQuery Mobile, how to make your
    mobile applications really stand out from the pack by creating themes and icons
    to improve the look and functionality of our app.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何增强 jQuery Mobile，如何通过创建主题和图标来改善应用程序的外观和功能，使您的移动应用程序真正脱颖而出。
- en: 'In this chapter, we will:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将：
- en: Learn about the building blocks of jQuery Mobile
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解 jQuery Mobile 的构建模块
- en: Create our own jQuery Mobile theme using ThemeRoller
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 ThemeRoller 创建我们自己的 jQuery Mobile 主题
- en: Design and implement custom icons for our application
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为我们的应用设计并实现自定义图标
- en: What's possible?
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 有什么可能？
- en: The reaction many developers have when using jQuery Mobile for the first time
    is awe at how easy it is to implement a rich, compelling mobile website for their
    users. The ease with which it converts plain HTML to beautiful, usable buttons,
    and listviews. The form elements are a dream to work with. The jQuery Mobile team
    even shipped five well designed and attractive themes and 18 commonly used icons
    along with the rest of the package. They even built a tool that we can use to
    build our own themes; **ThemeRoller**.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 当许多开发人员第一次使用 jQuery Mobile 时，他们的反应是对其易于实现丰富、引人入胜的移动网站感到敬畏。它轻松将普通 HTML 转换为美观、可用的按钮和列表视图。表单元素非常容易处理。jQuery
    Mobile 团队甚至随包提供了五种设计良好、吸引人的主题和 18 个常用图标。他们甚至建立了一个工具，供我们使用来构建自己的主题；**ThemeRoller**。
- en: After working with jQuery Mobile for sometime developers might be asking "what
    *else can I do with this?"* Just like muscle cars from the 60s and 70s. It wasn't
    enough that they were already awesome, the tweakers and the gearheads wanted to
    do more. If you are identified with that mentality then this chapter is for you.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 jQuery Mobile 一段时间后，开发人员可能会问"我还可以用这个做什么*别的*吗？" 就像 60 年代和 70 年代的肌肉车一样。它们已经很棒了，但调整者和发烧友还想做更多。如果你有这种心态，那么本章就是为你准备的。
- en: The wonderful thing about jQuery Mobile is that because it's all plain CSS and
    HTML, we can do almost anything we want to it with very little effort. In this
    chapter we'll be creating our own theme from scratch using ThemeRoller for jQuery
    Mobile. We'll be designing buttons and writing the CSS code needed to implement
    both low and high resolution versions. We'll also be looking at how we can expand
    on the styles and classes already available in jQuery Mobile and make something
    different and unique. Let's get started now, shall we?
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 jQuery Mobile 的美妙之处在于，因为它全部是普通的 CSS 和 HTML，我们几乎可以用很少的工作做任何我们想做的事情。在本章中，我们将使用
    ThemeRoller 为 jQuery Mobile 从头开始创建自己的主题。我们将设计按钮并编写必要的 CSS 代码来实现低分辨率和高分辨率版本。我们还将探讨如何扩展
    jQuery Mobile 中已有的样式和类，并制作出不同和独特的东西。那么，让我们开始吧？
- en: The visual building blocks of jQuery Mobile
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: jQuery Mobile 的视觉构建模块
- en: As you've already seen, jQuery Mobile is very user friendly and pleasing to
    the eye. It makes good use of rounded corners, subtle gradients, drop shadows
    to make elements stand out from their surroundings, and other *tricks* that graphic
    designers have been using for years in print. But on the web, these effects were
    only possible with the use of images, or complicated and poorly supported plugins
    and applets.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你已经看到的，jQuery Mobile 非常用户友好且外观令人愉悦。它充分利用了圆角、微妙的渐变、投影来突出元素与周围环境的区别，以及其他*技巧*，这些技巧多年来一直是平面设计师在印刷品中使用的。但在网络上，这些效果只能通过使用图片或复杂且支持不佳的插件和小程序来实现。
- en: With the advent of the Web 2.0 and CSS 3, all of these options have been made
    available to us, the layman web developers. Just remember that with great power
    comes great responsibility. jQuery Mobile operates on the principle of progressive
    enhancement. A tricky phrase but it just means that you should develop for the
    lowest common denominator and offer enhancements for browsers that understand
    them.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 随着 Web 2.0 和 CSS 3 的出现，所有这些选项都已提供给我们，即普通的网页开发人员。只需记住，权力越大，责任越大。jQuery Mobile
    基于渐进增强的原则运作。这个繁琐的短语只是意味着您应该为理解这些增强的浏览器开发，并为理解它们的浏览器提供增强。
- en: Luckily for us these stylistic additions are almost purely cosmetic. If a browser
    doesn't understand the `border-radius` declaration, then it simply displays squared
    off corners. The same holds true for gradients and shadows. While jQuery Mobile
    adds these effects to your application out of the box, it's worthwhile knowing
    how to add them on your own.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，这些样式上的附加几乎纯粹是装饰性的。如果浏览器不理解`border-radius`声明，那么它将简单地显示方形边角。渐变和阴影也是如此。虽然jQuery
    Mobile默认为您的应用程序添加这些效果，但了解如何自己添加它们也是值得的。
- en: Border-radius
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 圆角
- en: 'Rounded corners can be one of the most elegant and appealing effects, and they
    are also the simplest to add. There are a few caveats that developers need to
    know about this effect and the other effects. While there is a specification for
    `border-radius` as recommended by the W3C, it turns out that each of the primary
    browser manufacturers supports it in slightly different ways. The end result is
    the same, but the path to it varies. Let''s take a look at the most basic `border-radius`
    declaration, and the following screenshot is its result:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 圆角可以是最优雅和吸引人的效果之一，也是最简单的效果之一。开发人员需要了解此效果和其他效果的一些注意事项。虽然W3C推荐了`border-radius`的规范，但事实证明，每个主要浏览器制造商对其支持的方式略有不同。最终结果是相同的，但路径不同。让我们来看一下最基本的`border-radius`声明，以下屏幕截图是其结果：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![Border-radius](img/7263_11_1.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![圆角](img/7263_11_1.jpg)'
- en: 'You also have the option of rounding only certain corners, as well as tweaking
    the values so that the corner isn''t a perfect quarter-circle. Let''s look at
    a few more examples. The following code snippet and the screenshot demonstrate
    an example to get two rounded corners:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以选择仅使某些角变圆，以及调整值，使角不是完美的四分之一圆。让我们看几个更多的示例。以下代码片段和屏幕截图演示了一个示例，以获得两个圆角：
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![Border-radius](img/7263_11_2.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![圆角](img/7263_11_2.jpg)'
- en: 'The following code snippet and the screenshot demonstrate an example to get
    one rounded corner:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段和屏幕截图演示了一个示例，以获得一个圆角：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![Border-radius](img/7263_11_3.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![圆角](img/7263_11_3.jpg)'
- en: 'Sadly, it''s not quite as easy as this, just yet. Because each browser vendor
    has their own unique rendering for this effect, software developers like Google,
    or Mozilla have taken to creating their own versions, commonly called **vendor
    prefixes**. For the previous style declarations to have the widest range of coverage
    you''d have to add the following lines of code:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 遗憾的是，目前情况并不像这么简单。因为每个浏览器供应商都对此效果有自己独特的渲染，像谷歌或Mozilla这样的软件开发者已经开始创建自己的版本，通常称为**厂商前缀**。为了使先前的样式声明具有最广泛的覆盖范围，您需要添加以下代码行：
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Applying drop shadows
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用投影阴影
- en: 'Drop shadows in CSS take one of two forms: text-shadows (applied to text) and
    box-shadows (applied to everything else). Like `border-radius`, drop shadows are
    fairly straightforward if you''re looking at the W3C specification.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: CSS中的投影阴影有两种形式：文本阴影（应用于文本）和框阴影（应用于其他所有内容）。与`border-radius`一样，如果您查看W3C规范，投影阴影也相对简单。
- en: Using text-shadow
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 text-shadow
- en: 'Let''s look at `text-shadow` first:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先看一下`text-shadow`：
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![Using text-shadow](img/7263_11_4.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![使用 text-shadow](img/7263_11_4.jpg)'
- en: 'This property also supports multiple shadows by adding additional declarations
    in a comma separated list, as shown in the following code snippet and the output:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 该属性还通过在逗号分隔的列表中添加附加声明来支持多个阴影，如以下代码片段和输出所示：
- en: '[PRE5]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![Using text-shadow](img/7263_11_5.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![使用 text-shadow](img/7263_11_5.jpg)'
- en: Unlike the `border-radius` property, the `text-shadow` property doesn't require
    vendor prefixes. That doesn't mean that all browsers support it, it simply means
    that browsers that do support this property, display it as intended, while browsers
    that do not, simply see nothing.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 与`border-radius`属性不同，`text-shadow`属性不需要厂商前缀。这并不意味着所有浏览器都支持它，这只是意味着支持此属性的浏览器会按预期显示，而不支持此属性的浏览器则会看不到任何内容。
- en: Using box-shadow
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 box-shadow
- en: 'Box-shadow follows a very similar model to text-shadow, with one addition,
    that is the `inset` keyword which allows for inner shadowing. Let''s get to the
    examples. The first example shows standard outer shadows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Box-shadow遵循与text-shadow非常相似的模型，只是增加了一个关键词`inset`，允许内部阴影。让我们看一些示例。第一个示例显示了标准外部阴影：
- en: '[PRE6]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![Using box-shadow](img/7263_11_6.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![使用 box-shadow](img/7263_11_6.jpg)'
- en: And now, in the following example check out these inner shadows. Snazzy eh?
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在以下示例中，看看这些内部阴影。很酷，对吧？
- en: '[PRE7]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![Using box-shadow](img/7263_11_7.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![使用 box-shadow](img/7263_11_7.jpg)'
- en: 'It''s worth mentioning that both box-shadow and text-shadow can have their
    colors set with the less commonly used `rgb` and `rgba` declarations. This allows
    the developers to set colors using the more familiar convention of RGB values.
    The `rgba` declaration also allows setting color opacity from `0` to `1`. The
    code for that is a simple change, as shown in the following snippet:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 值得一提的是，阴影和文本阴影都可以使用不常用的 `rgb` 和 `rgba` 声明来设置它们的颜色。这使得开发者可以使用更熟悉的 RGB 值的约定来设置颜色。`rgba`
    声明还允许设置颜色的不透明度从 `0` 到 `1`。修改的代码如下所示：
- en: '[PRE8]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: CSS gradients
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: CSS 渐变
- en: CSS gradients are a great way to add beauty and impact to your website. Options
    include linear gradients (right to left, top to bottom, and so on.), and radial
    gradients (from center outwards). By default, gradients consist of a start color
    and an end color. CSS gradients may also include additional tones using color
    stops.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: CSS 渐变是向你的网站添加美感和冲击力的绝佳方式。选项包括线性渐变（从右到左，从上到下等等），以及径向渐变（从中心向外）。默认情况下，渐变由起始颜色和结束颜色组成。CSS
    渐变也可以使用颜色停止来添加额外的色调。
- en: 'It should be noted however that support for CSS gradients in older browsers
    isn''t perfect, specifically in Internet Explorer. The good news is that there
    are ways to address IE that can allow developers to reliably use gradients in
    their development. The bad news is that the code for that support is *robust*.
    Let''s take a look at the simplest possible gradient declaration:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，老版本浏览器对 CSS 渐变的支持并不完美，特别是在 Internet Explorer 中。好消息是，有办法解决 IE 的问题，可以让开发者可靠地在开发中使用渐变。坏消息是，支持该功能的代码*非常复杂*。让我们来看一下最简单的渐变声明：
- en: '[PRE9]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Gradient declarations can be quite complex so let''s break it down with an
    infographic:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 渐变声明可能相当复杂，所以让我们用一个信息图来分解它：
- en: '![CSS gradients](img/7263_11_8.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![CSS 渐变](img/7263_11_8.jpg)'
- en: 'Now here''s the kicker...at the time of writing this, there were no browsers
    that supported the W3C specification using the actual property. Let''s take a
    look at the code to support multiple browsers and you''ll love jQuery Mobile even
    more than you already do:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在关键来了......在撰写本文时，没有浏览器支持使用实际属性的 W3C 规范。让我们来看一下支持多个浏览器的代码，你会更加喜欢 jQuery Mobile：
- en: '[PRE10]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![CSS gradients](img/7263_11_9.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![CSS 渐变](img/7263_11_9.jpg)'
- en: 'You can add multiple colors to your gradient by adding additional comma separated
    declarations. For example, the following code:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过添加额外的逗号分隔声明来将多种颜色添加到你的渐变中。例如，以下代码：
- en: '[PRE11]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Results are shown in the following gradient:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 结果显示在以下渐变中：
- en: '![CSS gradients](img/7263_11_10.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![CSS 渐变](img/7263_11_10.jpg)'
- en: As you might guess after reading the last few pages, jQuery Mobile does a lot
    of heavy lifting on your behalf. Not only does it add slick gradient page backgrounds,
    but it has to keep track of all of the browser quirks that might prevent that
    sweet drop shadow from showing up. As we move into the next section you'll likely
    be even more impressed with the way it handles themes and color swatches.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在阅读最近几页后可能猜到的那样，jQuery Mobile 为你做了很多繁重的工作。它不仅添加了漂亮的渐变页面背景，还必须跟踪可能阻止甜美的阴影出现的所有浏览器怪癖。当我们进入下一节时，你可能会对它处理主题和色板的方式更为印象深刻。
- en: The basics of jQuery Mobile theming
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: jQuery Mobile 主题的基础知识
- en: Theming in jQuery Mobile is straightforward and simple to use for the developer,
    but is pretty elaborate behind the scenes. Luckily there will rarely be a time
    when you need to know everything that's being done for you. However, it's worth
    a little bit of our time to understand how it works.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在 jQuery Mobile 中进行主题设置对开发者来说是直接简单易用的，但是在幕后却相当复杂。幸运的是，很少有时候你需要知道为你所做的一切。然而，花点时间了解它的工作原理也是值得的。
- en: Out of the box jQuery Mobile comes with a theme set comprised of five color
    swatches, each associated with a letter from A-E. The theme contains a series
    of base CSS classes which can be applied at will to nearly any element and they
    contain global settings for width, height, border radius, shadows. The individual
    swatches contain specific information about color, fonts, and so on.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery Mobile 的开箱即用版本包含了一个由五种颜色色板组成的主题集，每个与 A-E 中的一个字母相关联。该主题包含了一系列基本的 CSS 类，可以随意应用于几乎任何元素，并且它们包含了宽度、高度、边框半径、阴影的全局设置。各个色板包含了有关颜色、字体等方面的具体信息。
- en: 'Additional swatches can be added to the five original swatches from F-Z, or
    the original swatches can be replaced or overridden at will. This system allows
    for a total of 26 distinct swatches, allowing for millions of possible combinations
    of theme colors, styles, and patterns. You apply a jQuery Mobile theme to the
    selected element by adding a `data-theme` attribute with the letter of the desired
    theme:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 可以将额外的样本添加到来自 F-Z 的五个原始样本中，或者可以随意替换或覆盖原始样本。这个系统允许共有 26 个不同的样本，从而可以产生数百万种主题颜色、样式和图案的可能组合。您可以通过添加一个`data-theme`属性和所需主题的字母来将
    jQuery Mobile 主题应用于所选元素：
- en: '![The basics of jQuery Mobile theming](img/7263_11_11.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![jQuery Mobile 主题的基础知识](img/7263_11_11.jpg)'
- en: Developers will generally choose to use the `data-theme` attribute method when
    applying styles, but it's also possible to attach the CSS class names directly
    to your page elements for more granular control. There are a handful of primary
    prefixes which allow for this flexibility.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 开发人员通常会选择使用`data-theme`属性方法来应用样式，但也可以直接将 CSS 类名附加到页面元素以获得更精细的控制。有几个主要前缀允许这种灵活性。
- en: Bars (.ui-bar-?)
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 条（.ui-bar-?）
- en: 'The bar prefix is generally applied to headers, footers, and other areas with
    high importance:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: bar 前缀通常应用于标题、页脚和其他重要区域：
- en: '![Bars (.ui-bar-?)](img/7263_11_12.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![条（.ui-bar-?）](img/7263_11_12.jpg)'
- en: Content blocks (.ui-body-?)
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 内容块（.ui-body-?）
- en: 'Content blocks are generally applied to areas where paragraph text is expected
    to occur. Its color helps to ensure maximum readability with the text color placed
    against it:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 内容块通常应用于预期出现段落文本的区域。它的颜色有助于确保文本颜色与其放置在其上的文本颜色之间具有最大的可读性：
- en: '![Content blocks (.ui-body-?)](img/7263_11_13.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![内容块（.ui-body-?）](img/7263_11_13.jpg)'
- en: Buttons and listviews (.ui-btn-?)
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 按钮和列表视图（.ui-btn-?）
- en: 'Buttons and listviews are two of the most important elements in the jQuery
    Mobile library and you can rest assured that the team took their time getting
    them right. The `.ui-btn` prefix also includes styles for up, down, hover, and
    active states:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮和列表视图是 jQuery Mobile 库中最重要的两个元素，您可以放心地知道团队花了很多时间来完善它们。`.ui-btn`前缀还包括用于上升、下降、悬停和活动状态的样式：
- en: '![Buttons and listviews (.ui-btn-?)](img/7263_11_14.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![按钮和列表视图（.ui-btn-?）](img/7263_11_14.jpg)'
- en: Mixing and matching swatches
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 混搭样本
- en: One of the nice things about theming in jQuery Mobile is that child elements
    inherit from their parent unless otherwise specified. This means that if you put
    a button without its own `data-theme` attribute inside a header or footer bar,
    that button will use the same theme as its parent. Wicked eh?
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery Mobile 中主题的一个好处是，除非另有说明，否则子元素会从其父元素继承。这意味着，如果您在页眉或页脚栏中放置一个没有自己`data-theme`属性的按钮，该按钮将使用与其父元素相同的主题。酷，对吧？
- en: '![Mixing and matching swatches](img/7263_11_15.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![混搭样本](img/7263_11_15.jpg)'
- en: 'It''s also perfectly acceptable, and even encouraged, to place an element using
    one swatch and the child of an element using another swatch. This can help the
    element stand out more, or match a different part of the app, or whatever reasoning
    the developer chooses. It''s possible, and what''s more it''s easy. Simply place
    a button (or other element) inside a header bar, and assign it its own `data-theme`
    attribute:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个元素中使用一个样本并在另一个元素的子元素中使用另一个样本也是完全可以接受甚至是鼓励的。这可以帮助元素更加突出，或者与应用程序的不同部分匹配，或者开发人员选择的任何其他原因。这是可能的，而且更重要的是，它很容易。只需将按钮（或其他元素）放置在页眉栏内，并为其分配自己的`data-theme`属性：
- en: '![Mixing and matching swatches](img/7263_11_16.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![混搭样本](img/7263_11_16.jpg)'
- en: Site-wide active state
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 全站活动状态
- en: jQuery Mobile also applies a global *active* state for all elements. This active
    state is used for buttons, form elements, navigation, and anywhere there's a need
    to indicate that something is currently selected. The only way to change this
    color value is to set (or override) it via CSS. The CSS class for the active state
    is, appropriately named, `.ui-btn-active:`
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery Mobile 还为所有元素应用了一个全局 *活动* 状态。此活动状态用于按钮、表单元素、导航等任何需要指示当前选择的地方。更改此颜色值的唯一方法是通过
    CSS 设置（或覆盖）它。活动状态的 CSS 类名是`.ui-btn-active`：
- en: '![Site-wide active state](img/7263_11_17.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![全站活动状态](img/7263_11_17.jpg)'
- en: Default icons
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 默认图标
- en: 'Included in the jQuery Mobile set are 18 icons which cover a wide array of
    needs for developers. The icon set is white on transparent which jQuery Mobile
    overlays over a semi-transparent black circle to provide contrast against all
    of the swatches. To add an icon, specify the `data-icon` attribute with the name
    of the desired icon:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery Mobile 集中包含了 18 个图标，涵盖了开发人员广泛的需求。图标集是白色的透明图标，jQuery Mobile 在半透明的黑色圆圈上覆盖以提供与所有样品的对比度。要添加图标，请使用所需图标的名称指定
    `data-icon` 属性：
- en: '![Default icons](img/7263_11_18.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![默认图标](img/7263_11_18.jpg)'
- en: jQuery Mobile also provides the ability to place icons on the top, right, bottom,
    or left side of a button using the `data-iconpos="[top, right, bottom, left]"`
    attribute, with left being the default placement. Developers are also able to
    display an icon alone, without text, by specifying `data-iconpos="notext":`
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery Mobile 还提供了使用 `data-iconpos="[top, right, bottom, left]"` 属性在按钮的顶部、右侧、底部或左侧放置图标的功能，其中左侧是默认位置。开发人员还可以通过指定
    `data-iconpos="notext"` 来仅显示图标而不显示文本：
- en: '![Default icons](img/7263_11_19.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![默认图标](img/7263_11_19.jpg)'
- en: Deploying custom icons is also possible and will be covered later in this chapter.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 部署自定义图标也是可能的，将在本章后面进行讨论。
- en: Creating and using a custom theme
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建和使用自定义主题
- en: 'We''ve already discussed how powerful theming is in jQuery Mobile. It makes
    it trivial to develop a rich mobile website with simple and elegant style. Even
    more powerful is the ability to create your own library of swatches which can
    be used to make your application or website truly unique. Developing your own
    theme can be approached in one of the following two ways:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经讨论过 jQuery Mobile 中主题设置的强大功能。它使得用简单而优雅的样式开发丰富的移动网站变得轻而易举。更强大的是，您可以创建自己的样品库，以使您的应用程序或网站真正独特。可以通过以下两种方式之一来处理自己的主题开发：
- en: Download and open the existing jQuery Mobile CSS file and edit to your heart's
    content.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载并打开现有的 jQuery Mobile CSS 文件，并按自己的意愿进行编辑。
- en: 'Point your web browser to ThemeRoller for jQuery Mobile: [http://jquerymobile.com/themeroller/](http://jquerymobile.com/themeroller/).'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将您的网络浏览器指向 jQuery Mobile 的 ThemeRoller：[http://jquerymobile.com/themeroller/](http://jquerymobile.com/themeroller/)。
- en: We'll be focusing solely on option two because let's be honest, why wade through
    all of that CSS when you can point, click, and drag your way to a new theme, full
    of swatches in 10 minutes? Let's find out what ThemeRoller is all about.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将专注于第二种选择，因为说实话，为什么要费劲地浏览所有的 CSS 呢？您可以在 10 分钟内使用指点、点击和拖放的方式创建一个充满样品的新主题。让我们了解一下
    ThemeRoller 是什么。
- en: What's ThemeRoller?
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是 ThemeRoller？
- en: ThemeRoller for jQuery Mobile is an extension of a web-based app that was written
    for the jQuery UI project. It allows users to quickly assemble a theme full of
    swatches in minutes using drag-and-drop color management. It features an interactive
    preview so that you can immediately see how your changes affect your theme. It
    also has a built-in inspector tool which helps you dig into the minute details
    (should you want them). It also integrates with Adobe® Kuler®, a color management
    tool. You can download your theme after you're done, you can share it with others
    via a custom URL, and you can re-import past themes for last-minute tweaking.
    It's a powerful tool and is a perfect complement to jQuery Mobile.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: ThemeRoller for jQuery Mobile 是为 jQuery UI 项目编写的一个基于 Web 的应用程序的扩展。它允许用户使用拖放颜色管理在几分钟内快速组装一个充满样品的主题。它具有交互式预览功能，因此您可以立即看到您的更改如何影响您的主题。它还具有内置的检查器工具，可帮助您深入了解细节（如果您需要）。它还集成了
    Adobe® Kuler®，一个颜色管理工具。您可以在完成后下载您的主题，可以通过自定义 URL 与他人共享，也可以重新导入过去的主题进行最后的微调。它是一个强大的工具，是
    jQuery Mobile 的完美补充。
- en: One of the hallmarks of the five default swatches is that the jQuery Mobile
    team spent quite a bit of time working on readability and usability. The swatches
    range from highest contrast (A), to lowest contrast (E). Within a single theme
    the areas which have most contrast are the areas most prominent on the page. This
    includes the header (and listview headers), and buttons. When creating your own
    theme it's a good idea to keep this in mind. We always want to focus on usability
    within our app right? What good is a slick app if no one can read it because of
    poor color choices?
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 五个默认样品的特点之一是，jQuery Mobile 团队花了相当多的时间来改善可读性和可用性。这些样品的对比度从最高（A）到最低（E）不等。在单个主题中，对比度最高的区域是页面上最突出的区域。这包括页眉（和列表视图的标题）和按钮。在创建自己的主题时，牢记这一点是个好主意。我们总是希望专注于应用程序的可用性，对吗？如果由于颜色选择不当而无法阅读，那么漂亮的应用有什么用呢？
- en: Using ThemeRoller
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 ThemeRoller
- en: 'The first thing you''ll see when you load up ThemeRoller is a slick looking
    splash screen, followed by a helpful **Getting Started** screen:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 当你加载ThemeRoller时，第一件事就是看到一个看起来很漂亮的启动屏幕，然后是一个有用的**入门**屏幕：
- en: '![Using ThemeRoller](img/7263_11_20.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![使用ThemeRoller](img/7263_11_20.jpg)'
- en: 'The **Getting Started** screen has some helpful tips so make sure to glance
    at it before clicking the **Get Rolling** button:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '**入门**屏幕上有一些有用的提示，所以在点击**开始**按钮之前一定要看一眼：'
- en: '![Using ThemeRoller](img/7263_11_21.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![使用ThemeRoller](img/7263_11_21.jpg)'
- en: 'After all of the splash screens are out of the way you''ll be presented with
    the primary interface:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 当所有的启动屏幕都结束后，你将会看到主要界面：
- en: '![Using ThemeRoller](img/7263_11_22.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![使用ThemeRoller](img/7263_11_22.jpg)'
- en: 'ThemeRoller is broken into four main areas: Preview, Color, Inspector and Tools.
    Each of these contains important functionality that we need to review. We''ll
    start with the Preview section.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: ThemeRoller分为四个主要区域：预览、颜色、检查员和工具。每个区域都包含了我们需要审查的重要功能。我们将从预览部分开始。
- en: Preview
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 预览
- en: 'Unless you''re loading an existing theme, the preview area will present three
    complete, identical and interactive jQuery Mobile pages packed with widgets of
    all sorts:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 除非你正在加载现有主题，否则预览区域将呈现三个完整、相同且交互式的jQuery移动页面，上面装满了各种小部件：
- en: '![Preview](img/7263_11_23.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![预览](img/7263_11_23.jpg)'
- en: Move your mouse over them and you'll see that each page is functional. The header
    on each page contains a letter indicating which swatch controls its appearance.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 将鼠标移到上面，你会发现每个页面都是功能性的。每个页面的页眉包含了一个字母，指示了哪个色板控制了它的外观。
- en: Colors
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 颜色
- en: 'At the top of the page you''ll see a series of color chips, along with two
    slider controls and a toggle button. Further to the right, you''ll see another
    ten color chips which should be blank. These are dedicated to recently used colors
    and will be empty until you''ve selected a color:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在页面顶部，你会看到一系列颜色芯片，以及两个滑块控件和一个切换按钮。右边更远处，你会看到另外十个颜色芯片，应该是空白的。这些专门用于最近使用的颜色，直到你选择了颜色为止：
- en: '![Colors](img/7263_11_24.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![颜色](img/7263_11_24.jpg)'
- en: Below the color chips are two sliders labelled **Lightness** and **Saturation**.
    The lightness slider adjusts the light and dark tones of the series of color swatches,
    while the saturation makes the colors more, or less, vibrant. Taken together,
    a user should be able to approximate nearly any color they choose. To use colors
    from Kuler®, click the text link marked **Adobe Kuler swatches**.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在颜色芯片下面有两个标有**亮度**和**饱和度**的滑块。亮度滑块调整了一系列色板的明亮和暗色调，而饱和度使颜色更加鲜艳或柔和。综合在一起，用户应该能够近似于他们选择的任何颜色。要使用Kuler®的颜色，点击标有**Adobe
    Kuler色板**的文本链接。
- en: Each of the color chips can be dragged onto any element within the preview area.
    This makes development of a swatch set extremely easy. Note that many of the jQuery
    Mobile styles overlap, for example, the header bar at the top of the page receives
    the same style as the header of the listview. Adjust the colors as desired then
    drag each chip onto an element on the page. Remember that each individual page
    is its own swatch so be careful about how you choose to mix colors.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 每个颜色芯片都可以拖放到预览区域内的任何元素上。这使得色板集的开发非常容易。请注意，许多jQuery Mobile样式重叠，比如页顶的标题栏与列表视图的标题接收到相同的样式。根据需要调整颜色，然后将每个色片拖放到页面上的元素上。请记住，每个单独的页面都是自己的色板，所以在选择混合颜色时要小心。
- en: Inspector
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 检查员
- en: 'On the far left of the interface is the inspector panel, split into two parts.
    The top part contains buttons allowing developers to download their theme, import
    an existing theme, and share a link to their theme. There''s also a **Help** link
    for people who didn''t buy this book:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 界面最左侧是检查员面板，分为两部分。顶部包含了一系列按钮，允许开发者下载他们的主题，导入现有主题，并分享他们的主题链接。还有一个**帮助**链接给那些没有购买这本书的人：
- en: '![Inspector](img/7263_11_25.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![检查员](img/7263_11_25.jpg)'
- en: The bottom section contains a series of tabs labelled **Global, A, B, C**, and
    **+**. Each of these tabs holds an accordion panel which contains all of the values
    for an individual swatch, except for the Global tab which applies to all of the
    swatches.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 底部区域包含一系列标有**全局, A, B, C**和**+**的标签。每个标签都包含一个手风琴面板，其中包含了单个色板的所有值，除了全局标签，它适用于所有色板。
- en: Select the **Global** tab, then click **Active State**, and the accordion panel
    will expand to show settings for the active state for your entire theme. Options
    include text color, text-shadow, background, and border. Changing a value in the
    global causes every current (and future) swatch to reflect the new setting.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 选择**全局**选项卡，然后点击**活动状态**，手风琴面板将展开，显示整个主题的活动状态设置。选项包括文本颜色、文本阴影、背景和边框。在全局更改值会导致每个当前（和将来的）色板都反映新的设置。
- en: Additional swatches can be added to your theme in two ways. Clicking the **+**
    tab at the top of the inspector adds a new swatch at the last place in your theme.
    You can also add a new swatch by clicking the **Add Swatch** button located at
    the bottom of the preview area. Swatches can be deleted by selecting the tab with
    the swatch you want to remove, then clicking the **Delete** link located to the
    right of the swatch name. Note that deleting a swatch from the top of the stack
    will cause the remaining swatches to be renamed.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过两种方式向主题添加额外的色板。点击检查器顶部的**+**选项卡会在你的主题中的最后位置添加一个新的色板。你也可以通过点击预览区域底部的**添加色板**按钮来添加一个新的色板。通过选择要删除的色板的选项卡，然后单击该色板名称右侧的**删除**链接来删除色板。请注意，从堆栈顶部删除色板会导致其余色板被重命名。
- en: Tools
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 工具
- en: 'At the very top of the page there are a series of buttons. These buttons allow
    you to perform a variety of tasks which we''ll cover in a moment, but first, take
    a closer look at the buttons themselves:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 页面顶部有一系列按钮。这些按钮允许你执行各种任务，我们马上就会介绍，但首先，仔细看看这些按钮本身：
- en: '![Tools](img/7263_11_25-2.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![工具](img/7263_11_25-2.jpg)'
- en: 'You''ll notice the following buttons: a switch allowing you to change between
    the 1.1 (current) Version and the 1.0.1 Version, undo/redo, and a toggle button
    for the inspector. Setting this toggle to on allows you to inspect any widget
    in the preview area. Hovering over a widget highlights that element with a blue
    box. Clicking the element will cause the accordion menu in the Inspector area
    to expand to display settings specific to that element.'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到以下按钮：一个切换按钮，允许你在当前 1.1 版本和 1.0.1 版本之间切换，撤销/重做，以及检查器的切换按钮。将此切换打开可以检查预览区域中的任何小部件。将鼠标悬停在小部件上会用蓝框突出显示该元素。单击该元素将导致检查器区域的手风琴菜单展开，显示特定于该元素的设置。
- en: There are four additional buttons which allow you to download your theme, import
    or upgrade a previously created theme, share your theme with others, and a help
    button.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 还有四个额外的按钮，允许你下载你的主题，导入或升级先前创建的主题，与他人分享你的主题，以及一个帮助按钮。
- en: Creating a theme for Notekeeper
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建 Notekeeper 的主题
- en: 'Now that we''re familiar with the ThemeRoller interface, how about we go ahead
    and create our first theme? Rather than build one in abstract, let''s create one
    that we''ll actually use for the Notekeeper app we built earlier. Let''s start
    simply by modifying one of the existing themes that is shipped with jQuery Mobile.
    The team was kind enough to let users import the default themes as a starting
    place for new themes, so that''s where we''ll head first. Click the **Import**
    button at the top left of the window and you''ll get a box allowing you to paste
    in the contents of an existing theme:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们熟悉了 ThemeRoller 的界面，那么我们何不继续创建我们的第一个主题呢？与其在抽象中构建一个主题，不如创建一个我们实际将在之前构建的 Notekeeper
    应用程序中使用的主题。让我们简单地开始，通过修改 jQuery Mobile 随附的现有主题之一。团队很友好地让用户导入默认主题作为新主题的起点，所以我们首先要去那里。点击窗口左上角的**导入**按钮，然后你会得到一个框，允许你粘贴现有主题的内容：
- en: '![Creating a theme for Notekeeper](img/7263_11_26.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![为 Notekeeper 创建主题](img/7263_11_26.jpg)'
- en: Import the default theme by clicking the link in the top-right corner, appropriately
    titled **Import Default Theme**. After the textarea fills with CSS, click **Import**.
    The preview area will reload and display swatches from **A** to **E**.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在右上角点击链接，适当命名为**导入默认主题**来导入默认主题。在文本区域填充 CSS 后，点击**导入**。预览区域将重新加载并显示从 **A** 到
    **E** 的色板。
- en: We'll focus our efforts on changing up the white swatch, **D**, as it's the
    closest to what our end goal is. Since we'd rather use swatch **A** as the name,
    let's delete the other swatches so that only **D** is left. Remember that ThemeRoller
    renames swatches as others are deleted. That means when you delete swatch **A,
    B** becomes **A, C** becomes **D**, and so on.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将集中精力改变白色色板 **D**，因为它最接近我们的最终目标。由于我们更愿意使用色板 **A** 作为名称，让我们删除其他色板，以便只剩下 **D**。请记住，当你删除色板
    **A** 时，ThemeRoller 会将其他色板重命名。这意味着当你删除色板 **A** 时，色板 **B** 变成 **A**，色板 **C** 变成
    **D**，依此类推。
- en: Keep going until the swatch that was **D** is now in the **A** position. Finally,
    delete swatch **B** (which was formerly swatch **E)** so that all we have left
    is swatch **A:**
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 继续进行，直到原来是**D**的样本现在位于**A**位置。最后，删除样本 **B**（原来是样本 **E**），这样我们就只剩下样本 **A：**
- en: '![Creating a theme for Notekeeper](img/7263_11_26_02.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![为 Notekeeper 创建主题](img/7263_11_26_02.jpg)'
- en: 'This swatch is nice looking but it''s a little bland. Let''s inject a little
    color by changing the header to a nice green. The simplest way to determine what
    values should be changed for any element is to use the inspector. Toggle the inspector
    to **On** at the top, then click anywhere on the header of theme **A**. You''ll
    know if you got it right if the **A** tab is selected on the left, and the **Header/Footer
    Bar** panel expands:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 这个样本看起来不错，但有点单调。让我们通过将页眉改为漂亮的绿色来注入一点色彩。确定任何元素的哪些值应该更改的最简单方法是使用检查器。在顶部切换检查器到**On**，然后点击主题
    **A** 的页眉的任何地方。如果左侧选择了 **A** 选项卡，并且**页眉/页脚栏**面板展开，你就会知道你做对了：
- en: '![Creating a theme for Notekeeper](img/7263_11_27.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![为 Notekeeper 创建主题](img/7263_11_27.jpg)'
- en: You can change the color in one of a few ways. You can drag a color chip from
    the top directly onto the background. You can also drag a color chip onto an input
    field. Finally you can manually input the value. Notice that when you click into
    a field containing a color value you're provided with a slick color picker. Go
    ahead and change the values in the input fields in this panel to the values shown
    in the previous screenshot.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过几种方式之一改变颜色。你可以直接将一个颜色芯片从顶部拖到背景上。你也可以将一个颜色芯片拖到输入字段上。最后，你可以手动输入值。注意，当你点击包含颜色值的字段时，你会看到一个时髦的颜色选择器。继续，并将此面板中的输入字段中的值更改为上一张截图中显示的值。
- en: 'Looking good, but now the blue from the theme''s active state clashes with
    our green. Using the inspector tool, click once on the **On** section of the On/Off
    toggle bar. This should cause the **Active State** panel within the **Global**
    tab to expand. We''ll change the blue to a nice warm grey. The Global panel should
    now look similar to the following screenshot:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来不错，但现在主题活动状态的蓝色与我们的绿色不搭配。使用检查器工具，在 On/Off 切换栏的**On**部分单击一次。这将导致**全局**选项卡内的**活动状态**面板展开。我们将把蓝色改成一个漂亮的暖灰色。全局面板现在应该看起来类似于以下截图：
- en: '![Creating a theme for Notekeeper](img/7263_11_28.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![为 Notekeeper 创建主题](img/7263_11_28.jpg)'
- en: 'There''s only one thing that''s keeping our new theme from looking its hottest,
    the blue text link in the paragraph at the top. Going back to our trusty inspector,
    let''s click directly on the link which will expand the **Content Body** panel
    within the **A** tab. Now, for those already familiar with CSS you know that you
    can''t simply change the link color without changing the hover also, `visited:hover`,
    and active states. The problem is that there are no options to make those changes,
    but ThemeRoller has you covered. Click the **+** to the right of the **Link Color**
    input field to display the rest of the options, then change the colors, as shown
    in the following screenshot:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 我们新主题唯一的不足之处是段落顶部的蓝色文本链接。回到我们可靠的检查器，让我们直接点击链接，这将展开**内容主体**面板，位于**A**选项卡内。现在，对于那些已经熟悉
    CSS 的人来说，你知道你不能简单地改变链接颜色而不改变悬停状态，`visited:hover` 和活动状态。问题在于没有选项可以进行这些更改，但是 ThemeRoller
    为你提供了解决方案。点击**链接颜色**输入字段右侧的**+**以显示其他选项，然后根据以下截图更改颜色：
- en: '![Creating a theme for Notekeeper](img/7263_11_29.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![为 Notekeeper 创建主题](img/7263_11_29.jpg)'
- en: And that's that. Feel free to make additional changes to your theme as you explore
    the inspector area. Change whatever you like, it's just bits and bytes right now.
    Keep in mind though that there's no undo option at the time. If you really like
    something, consider writing down the values so that you don't lose them or exporting
    it as it is. Speaking of...
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样。随时在探索检查器区域时进行其他主题的额外更改。无论你喜欢什么，都可以更改，现在只是位和字节而已。但请记住，目前没有撤销选项。如果你真的喜欢某些东西，请考虑写下值，以免丢失它们，或者将其导出为它是什么。说到…
- en: Exporting your theme
  id: totrans-139
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 导出你的主题
- en: Before we actually export our theme there's one thing that must be noted. Remember
    the splash page with the "helpful" information? It turns out that there's one
    piece that's not a recommendation, but a requirement.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们实际导出主题之前，必须注意一件事。还记得带有“有用”信息的闪屏页面吗？事实证明，有一条不是建议，而是要求的。
- en: '**We recommend building themes with at least 3 swatches (A-C)**.'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '**我们建议用至少 3 个样本（A-C）来构建主题**。'
- en: For our theme to apply to our Notekeeper app properly we'll need to duplicate
    our single swatch (letter **A)** to swatches **B** and **C**. Luckily this is
    an easy thing to do. Select the **A** tab at the top of the inspector, then click
    the **+** tab twice. What you should see is three identical swatches, and now
    we're done.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使我们的主题正确应用到我们的 Notekeeper 应用程序中，我们需要将我们的单个色板（字母 **A**）复制到色板 **B** 和 **C**
    中。幸运的是，这是一件很容易的事情。在检查器顶部选择 **A** 选项卡，然后点击两次 **+** 选项卡。你应该会看到三个相同的色板，现在我们完成了。
- en: Now that we've finished our theme we're going to export it for use in our Notekeeper
    application. This is a straightforward process which begins by clicking the **Download
    Theme** button located in the middle of the page, at the top of the interface.
    You'll be presented with a box allowing you to name your theme, some information
    about how to apply your theme, and a button labelled **Download Zip**. After naming
    our theme Notekeeper, click the **Download Zip** button and you'll receive a tasty
    little morsel in your downloads folder.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经完成了我们的主题，我们将导出它以在我们的 Notekeeper 应用中使用。这是一个简单的过程，从页面中间顶部的**下载主题**按钮开始。你将看到一个框，允许你为主题命名，一些关于如何应用主题的信息，以及一个标记为**下载
    Zip**的按钮。在将我们的主题命名为 Notekeeper 后，点击**下载 Zip**按钮，你将在下载文件夹中收到一个美味的小东西。
- en: 'Extract the contents of the ZIP file and you''ll see the following directory
    structure:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 解压缩 ZIP 文件的内容，你将看到以下的目录结构：
- en: index.html
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: index.html
- en: themes/
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: themes/
- en: '`Notekeeper.css` (The uncompressed version of your theme)'
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Notekeeper.css`（你的主题的未压缩版本）'
- en: '`Notekeeper.min.css` (The compressed version. Use this in production)'
  id: totrans-148
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Notekeeper.min.css`（压缩版本。在生产中使用此版本）'
- en: images/
  id: totrans-149
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: images/
- en: '`ajax-loader.gif`'
  id: totrans-150
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ajax-loader.gif`'
- en: '`icons-18-black.png`'
  id: totrans-151
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`icons-18-black.png`'
- en: '`icons-18-white.png`'
  id: totrans-152
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`icons-18-white.png`'
- en: '`icons-36-black.png`'
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`icons-36-black.png`'
- en: '`icons-36-white.png`'
  id: totrans-154
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`icons-36-white.png`'
- en: The HTML file at the top of the tree contains information on how to implement
    your theme, as well as a few widgets to confirm that the theme works. All of the
    links are relative in the example file, so you should be able to drag it into
    any browser window and see the results.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 树顶部的 HTML 文件包含了如何实现你的主题的信息，以及一些小部件来确认主题是否有效。示例文件中的所有链接都是相对的，因此你应该能够将其拖放到任何浏览器窗口中并查看结果。
- en: 'A few notes about the download and implementation of themes:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 关于主题的下载和实施的一些注意事项：
- en: The jQuery team provides the icons for buttons to you in this ZIP file for a
    reason. The theme requires those images to be relative to the CSS file. This means
    that unless you're already using the default themes you need to also include the
    images folder when you upload your theme to your website or the icons won't show
    up.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: jQuery 团队之所以向你提供此 ZIP 文件中的按钮图标是有原因的。主题要求这些图像与 CSS 文件相关联。这意味着，除非你已经在使用默认主题，否则在将你的主题上传到网站时，你还需要包含图像文件夹，否则图标将不会显示出来。
- en: '**Hang on to the uncompressed version of your theme**. While you don''t want
    to use it in production because of the size, you will need it should you ever
    wish to edit it within ThemeRoller. ThemeRoller cannot, at the time of this writing,
    import the minified CSS file.'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**牢记你的主题的未压缩版本**。虽然由于体积原因你不希望在生产中使用它，但是如果你希望在 ThemeRoller 中编辑它，你将需要它。截止到撰写本文时，ThemeRoller
    无法导入被压缩的 CSS 文件。'
- en: Creating and using custom icons
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建和使用自定义图标
- en: We've seen how easy it is to add our own theme to jQuery Mobile using ThemeRoller.
    Now we're going to add a little more spice to our Notekeeper application by creating
    a custom icon. The directions in this section will be specific to Photoshop but
    any graphics application capable of exporting transparent PNG files should be
    acceptable.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到了使用 ThemeRoller 向 jQuery Mobile 添加自己的主题是多么简单。现在我们将通过创建一个自定义图标为我们的 Notekeeper
    应用增添一些趣味。本节中的说明将专门针对 Photoshop，但任何能够导出透明 PNG 文件的图形应用程序都应该是可以接受的。
- en: CSS Sprites
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CSS 精灵
- en: 'Before we create and use an icon, we should first understand how jQuery Mobile
    uses icons and applies them. In the theme you just created there are several image
    files present (themes/images). Open `icons-18-black.png`, and `icons-36-black.png`
    in the graphics editor of your choice. Zoom in on both of them to 400% or so and
    you should see something very similar to the following image:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们创建和使用图标之前，我们应该先了解 jQuery Mobile 如何使用图标并应用它们。在你刚刚创建的主题中有几个图像文件（themes/images）。打开
    `icons-18-black.png` 和 `icons-36-black.png`，在你选择的图形编辑器中将它们放大到 400% 或更多，你应该会看到与以下图像非常相似的东西：
- en: '![CSS Sprites](img/7263_11_30.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![CSS 精灵](img/7263_11_30.jpg)'
- en: 'When opening each of these files you''ll probably notice that each image contains
    all the icons. This is because jQuery Mobile takes advantage of a technique called
    **CSS Sprites** which itself takes advantage of the fact that CSS allows developers
    to *crop* a background image by specifying its position within its container,
    and to hide any other part of the background that would normally display outside
    of that container. Its primary benefits include the following:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 当打开这些文件时，你可能会注意到每个图像都包含所有图标。这是因为 jQuery Mobile 利用了一种称为 **CSS 雪碧图** 的技术，它本身利用了
    CSS 允许开发人员通过指定其容器内的位置来 *裁剪* 背景图像的事实，并隐藏通常显示在该容器外部的背景的任何其他部分。它的主要优点包括以下几点：
- en: Reducing the number of requests a browser has to make. Fewer requests generally
    mean that a page will load faster.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 减少浏览器发出的请求数量。请求越少，通常意味着页面加载速度会更快。
- en: Centralize image locations. All icons can be found in one location.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 图片位置居中。所有图标都可以在一个位置找到。
- en: 'The following screenshot is a simple illustration of the technique:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图是该技术的简单说明：
- en: '![CSS Sprites](img/7263_11_31.jpg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![CSS 雪碧图](img/7263_11_31.jpg)'
- en: 'A browser always refers to an image from its top-left corner. In CSS language
    that''s `0,0`. To achieve this effect you set the background image on a container
    then simply adjust the `X` and `Y` coordinates until the position of the image
    matches your design. Then set the overflow of the container to crop, or hide,
    the remainder of the image. Remember that you''re *moving* the image to the left
    so you''ll use negative numbers for the `X` position. Using the previous illustration
    as a reference, the following code snippet is used to achieve this effect:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览器始终从图像的左上角引用图像。在 CSS 语言中，即 `0,0`。要实现此效果，您将背景图像设置在一个容器上，然后简单地调整 `X` 和 `Y` 坐标，直到图像的位置与您的设计匹配。然后设置容器的溢出以裁剪或隐藏图像的其余部分。请记住，您正在
    *移动* 图像到左侧，因此对于 `X` 位置，您将使用负数。使用前面的示例作为参考，以下代码片段用于实现此效果：
- en: '[PRE12]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Designing your first icon
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计你的第一个图标
- en: We're only going to be creating a single icon so we won't quite need all of
    the empty space around the icon. Let's start by deciding what we want to illustrate.
    Our application is called Notekeeper and it creates notes. Perhaps an icon illustrating
    a sheet of paper would work? This would have the added benefit of being fairly
    easy to represent at a small size. In the image editor of your choice create a
    new document at `36x36` pixels at `72` dpi. Name it `notekeeper-icon-black-36.png:`
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只会创建一个单一图标，所以我们不需要图标周围的所有空白空间。让我们先决定我们想要描绘什么。我们的应用叫做 Notekeeper，它创建笔记。也许一个描绘纸张的图标会起作用？这样做的额外好处是在小尺寸下相对容易表示。在你选择的图像编辑器中创建一个新文档，尺寸为
    `36x36` 像素，分辨率为 `72` dpi。将其命名为 `notekeeper-icon-black-36.png`：
- en: '![Designing your first icon](img/7263_11_32.jpg)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![设计你的第一个图标](img/7263_11_32.jpg)'
- en: Even though the dimensions of the document are 36x36 pixels, the active area
    of the icon will only be 22x22 pixels. This is in keeping with the icons provided
    by the jQuery Mobile team and will make sure our icon doesn't look odd. To make
    it easier to stay within the lines, use the rectangular selection tool to draw
    a square at 22px, then position it 7px from the top edge of the document and 7px
    from the left.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管文档的尺寸是 36x36 像素，但图标的有效区域只有 22x22 像素。这是为了与 jQuery Mobile 团队提供的图标保持一致，以确保我们的图标看起来不奇怪。为了更容易地保持在线条内，使用矩形选择工具在
    22px 处绘制一个正方形，然后将其位置设置在文档的顶部边缘和左侧边缘各 7px 处。
- en: 'Next draw guides along each edge so that your document looks something similar
    to the following screenshot:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，沿着每条边绘制指南线，使得你的文档看起来类似以下截图：
- en: '![Designing your first icon](img/7263_11_33.jpg)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![设计你的第一个图标](img/7263_11_33.jpg)'
- en: 'When drawing icons, you want to keep in mind the dimensions and attributes
    of the thing being illustrated. You won''t be able to represent everything, but
    you need to communicate the spirit of the thing. A sheet of paper is taller than
    it is wide, and has lines on it. Let''s start with those two things and see what
    we can come up with. The other icons in the set have a thick feel to them so that
    they can stand out against the background. Let''s color in a solid shape, then
    delete the lines for the page so that the icon has the same thick feel. We''re
    going to draw the lines in black so that they show up better printed in the book,
    but our icons will need to be white. Make sure you adjust your design accordingly:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在绘制图标时，你需要考虑所描绘事物的尺寸和属性。你不可能表现出所有细节，但你需要传达事物的精神。一张纸比它宽高比更高，并且上面有线条。让我们从这两点开始，看看我们能得出什么。此套图标中的其他图标都有较粗的感觉，以便它们能在背景中显眼。让我们填充一个实心形状，然后删除页面的线条，以便图标具有相同的粗糙感。我们将用黑色绘制线条，以便它们在书中更好地打印出来，但我们的图标需要是白色的。确保你相应调整你的设计：
- en: '![Designing your first icon](img/7263_11_34.jpg)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![设计你的第一个图标](img/7263_11_34.jpg)'
- en: This icon seems to meet all of our criteria. It's taller than it is wide, and
    has lines just like paper. It also has a jaunty little page turn to give it some
    attitude. Isn't that what everyone looks for in their paper icon? Make sure that
    the icon's lines are white, then save it. The jQuery Mobile icons have been saved
    as transparent PNG-8 files. This is similar to the GIF format, but isn't required.
    Use transparent GIF or transparent PNG-24 if you wish.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 这个图标似乎符合我们所有的标准。它比宽高比更高，并且像纸一样有线条。它还有一个活泼的小翻页，给它一些态度。这不就是每个人在他们的纸图标上寻找的东西吗？确保图标的线条是白色的，然后保存它。jQuery
    Mobile 图标已保存为透明的 PNG-8 文件。这类似于 GIF 格式，但不是必需的。如果你愿意，可以使用透明 GIF 或透明 PNG-24。
- en: 'When we created our first icon, we created the high resolution version. For
    brevity''s sake we''re going to quickly walk through the steps of creating a low-resolution
    icon:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们创建第一个图标时，我们创建了高分辨率版本。 为了简洁起见，我们将快速浏览创建低分辨率图标的步骤：
- en: Create a new image document at 18x18 pixels. Name this one `notekeeper-icon-18`.
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的图像文档，尺寸为 18x18 像素。将其命名为`notekeeper-icon-18`。
- en: The active area of this icon will be 12x12 pixels. Draw a selection 12px square
    then position it 3px from the top, and 3px from the left.
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这个图标的活动区域将是 12x12 像素。绘制一个 12px 的正方形选择区域，然后将其位置设置为距离顶部 3px，距离左侧 3px。
- en: Draw your guides then sketch out the icon using the previous version as a reference.
    It's a lot harder drawing with this little space isn't it?
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制你的辅助线，然后草图出图标，使用以前的版本作为参考。在这么小的空间里画图标确实很难，不是吗？
- en: Your final result should look similar to the following screenshot:![Designing
    your first icon](img/7263_11_35.jpg)
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你的最终结果应该类似于以下截图：![设计你的第一个图标](img/7263_11_35.jpg)
- en: Save both images along with your Notekeeper theme and close Photoshop.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 将两个图像与你的 Notekeeper 主题一起保存并关闭 Photoshop。
- en: High and low resolution
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 高分辨率和低分辨率
- en: Resolution is the number of dots, or pixels, that can be displayed into a given
    area. Those of you from the web world measure everything in 72dpi, because that's
    what most monitors display. If you have much experience with mobiles then you
    might know that each device can have a different resolution compared to the one
    next to it. The problem with this is that higher resolution devices simply display
    more pixels on screen. This means that an image displayed on a high resolution
    screen will be smaller than the same image on a low resolution screen.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 分辨率是可以显示在给定区域内的点数或像素数。来自网络世界的你们通常将所有东西都以 72dpi 进行测量，因为大多数显示器都显示这个分辨率。如果你有很多移动设备的经验，你可能知道每个设备的分辨率可能与其旁边的设备不同。这样做的问题在于，分辨率更高的设备在屏幕上只是显示更多的像素。这意味着在高分辨率屏幕上显示的图像将比在低分辨率屏幕上显示的同一图像要小。
- en: jQuery Mobile accounts for this by having two versions of each icon, along with
    two sets of code for high and low resolution devices. In the next section we'll
    apply our custom theme and custom icon to our Notekeeper application.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery Mobile 通过为高分辨率和低分辨率设备提供两个版本的每个图标以及两套代码来解决此问题。在下一节中，我们将为我们的 Notekeeper
    应用程序应用自定义主题和自定义图标。
- en: Updating the Notekeeper app
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新 Notekeeper 应用程序
- en: 'It''s time for us to tie all of these loose ends together. We have a custom
    theme that we built using ThemeRoller, we''ve got our sweet custom icon, and now
    it''s time for us to put all the pieces together. You''ll need the following pieces
    to finish up:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候将所有这些松散的端点联系在一起了。我们有一个使用ThemeRoller构建的自定义主题，我们有我们漂亮的自定义图标，现在是时候将所有的片段组合在一起了。您需要以下内容来完成：
- en: The code you completed at the end of the Notekeeper chapter.
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你在Notekeeper章节末尾完成的代码。
- en: The custom theme you created earlier in this chapter.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您在本章前面创建的自定义主题。
- en: Your custom icon; in white; in both 18px and 36px sizes.
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您的自定义图标；白色；分别为18px和36px尺寸。
- en: Adding our custom theme
  id: totrans-194
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加我们的自定义主题
- en: 'Let''s start with the easiest part. Adding in our custom theme is pretty simple.
    Open `notekeeper.html` (in your browser, and in the text editor of your choice).
    Look for the`<head>` tag and add the following lines:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从最简单的部分开始。添加我们的自定义主题非常简单。打开`notekeeper.html`（在您的浏览器中，并在您选择的文本编辑器中）。查找`<head>`标签并添加以下行：
- en: '[PRE13]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The first new line implements the new theme we created. The second line currently
    points to a missing file (because we haven't created it yet). Even with a rich
    theming system such as jQuery Mobile has, we're still going to have some custom
    CSS for various things. `styles.css` is where we'll put our assorted styles, especially
    the definitions for our custom icon.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行新加入了我们创建的新主题。第二行目前指向一个缺失的文件（因为我们还没有创建它）。即使像jQuery Mobile这样拥有丰富主题系统的系统，我们仍然会为各种事物编写一些自定义CSS。`styles.css`是我们将放置各种样式的地方，特别是我们自定义图标的定义。
- en: By the way, go ahead and reload your browser window and take a look at our new
    theme in action. Isn't it snazzy? It's going to look even snazzier in a few minutes
    when our custom icon appears.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 顺便说一句，您可以重新加载浏览器窗口，看看我们的新主题是如何运行的。是不是很漂亮？当我们的自定义图标出现时，它会看起来更加漂亮。
- en: Adding our custom icon
  id: totrans-199
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加我们的自定义图标
- en: Go ahead and create `styles.css` in the root of your Notekeeper application
    code, then open it. The first thing we'll do is to add in the declaration for
    our 18px icon. It's low-resolution and will be the one you'll see in your desktop
    browser. High-resolution icons only show up in iPhone 4 and iPhone 4S at the moment.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 接着，在你的Notekeeper应用代码的根目录下创建`styles.css`，然后打开它。我们将首先添加我们的18px图标的声明。它是低分辨率的，将在您的桌面浏览器中看到。高分辨率图标目前只在iPhone
    4和iPhone 4S上显示。
- en: 'To add our custom icon we follow the pattern set by jQuery Mobile. It applies
    icons to buttons and other elements using the `.ui-icon` prefix. This means that
    for our icon to work within the framework we have to name our CSS class as follows:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加我们的自定义图标，我们遵循jQuery Mobile设定的模式。它使用`.ui-icon`前缀为按钮和其他元素应用图标。这意味着为了使我们的图标在框架中起作用，我们必须将我们的CSS类命名为以下内容：
- en: '[PRE14]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Then adding the icon to our `Add Note` button is as simple as adding a `data-icon`
    attribute, as shown in the following lines of code:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，将图标添加到我们的“添加笔记”按钮中就像添加一个`data-icon`属性一样简单，如下所示的代码行所示：
- en: '[PRE15]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Keep in mind that the string `notekeeper-note` can be anything as long as it
    matches the second half of the CSS class you created earlier. Finally let's add
    the remaining piece to our app, the high-resolution icon.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，字符串`notekeeper-note`可以是任何东西，只要它与您之前创建的CSS类的后半部分匹配即可。最后让我们为我们的应用程序添加剩下的一部分，即高分辨率图标。
- en: 'One of the hallmarks of jQuery Mobile is its support for something called **media
    queries**. Media queries essentially allows you to query a given device for various
    pieces of information based on its media type: screen, print, tv, handheld, and
    several others. The answer to this query allows developers to branch CSS code
    and display the page one way for a desktop browser (screen), and another way for
    a TV (tv). In the case of our icons, we want to ask any viewing device with a
    type of screen, if it supports a property called `-webkit-min-device-pixel-ratio`
    and if the value of that property is `2`. Add the following lines to `styles.css`
    after the declaration for the low-resolution icon:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery Mobile的一个显著特点是它对**媒体查询**的支持。媒体查询本质上允许您查询给定设备的各种信息，基于其媒体类型：屏幕、打印、电视、手持设备等。对这个查询的回答允许开发人员对CSS代码进行分支，并为桌面浏览器（屏幕）显示页面的一种方式，为电视（电视）显示页面的另一种方式。对于我们的图标，我们想要询问任何视图设备，其类型为屏幕，是否支持一个名为`-webkit-min-device-pixel-ratio`的属性，以及该属性的值是否为`2`。在低分辨率图标的声明之后，将以下行添加到`styles.css`中：
- en: '[PRE16]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Other than the media query code the only thing unique about this is the `background-size`
    property. It allows developers to specify that a given background should be scaled
    to the specified size (18x18 pixels) rather than its original size of 36x36 pixels.
    Since the resolution on the iPhone 4 and 4S is exactly double the size of the
    low-resolution devices this means that we're packing double the pixels into the
    same space as the smaller icon. The end result is that the icon looks crisper
    and sharper. If you've got one of these devices, upload your code to a server
    and view it. Your patience will be rewarded.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 除了媒体查询代码之外，这个唯一与众不同的是`background-size`属性。它允许开发人员指定给定背景应按指定大小（18x18像素）缩放，而不是其原始大小36x36像素。由于
    iPhone 4 和 4S 上的分辨率恰好是低分辨率设备的两倍，这意味着我们将两倍的像素打包到与较小图标相同的空间中。最终结果是图标看起来更加清晰和锐利。如果您拥有其中一款设备，请将您的代码上传到服务器并查看它。您的耐心将会得到回报。
- en: Summary
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned about advanced CSS techniques that are central to
    the jQuery Mobile experience, and how jQuery Mobile uses them to provide a rich
    interface to the end user. We took a deep dive into the basics of jQuery Mobile
    theming and how it works. We built a custom theme using the ThemeRoller tool,
    a custom icon with our very own hands, and we learned how to tie all those things
    together and implement them in our application.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了对于 jQuery Mobile 体验至关重要的高级 CSS 技术，以及 jQuery Mobile 如何利用它们为最终用户提供丰富的界面。我们深入探讨了
    jQuery Mobile 主题化的基础知识以及它的工作原理。我们使用 ThemeRoller 工具构建了一个自定义主题，用我们自己的双手创建了一个自定义图标，并学习了如何将所有这些东西联系在一起并在我们的应用程序中实现它们。
- en: In the next chapter, you'll learn how to take the principles you've learned
    in the past 11 chapters and create a native application which can run on the iOS
    and Android platforms (along with several others), using the Phonegap open source
    library.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，您将学习如何运用过去11章学到的原则，并创建一个可以在 iOS 和 Android 平台上运行的本机应用程序（以及其他几个平台），使用 Phonegap
    开源库。
