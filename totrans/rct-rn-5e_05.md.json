["```js\nfunction MyButton(props) {\n  const clickHandler = () => {\n    console.log(\"clicked\");\n  };\n  return <button onClick={clickHandler}>{props.children}</button>;\n} \n```", "```js\nfunction MyInput() {\n  const onChange = () => {\n    console.log(\"changed\");\n  };\n  const onBlur = () => {\n    console.log(\"blured\");\n  };\n  return <input onChange={onChange} onBlur={onBlur} />;\n} \n```", "```js\nfunction MyButton(props) {\n  return (\n    <button onClick={(e) => console.log(\"clicked\", e)}>\n      {props.children}\n    </button>\n  );\n} \n```", "```js\nfunction fetchData() {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve();\n    }, 1000);\n  });\n}\nfunction MyButton(props) {\n  function onClick(e) {\n    console.log(\"clicked\", e.currentTarget.style);\n    fetchData().then(() => {\n      console.log(\"callback\", e.currentTarget.style);\n    });\n  }\n  return <button onClick={onClick}>{props.children}</button>;\n} \n```"]