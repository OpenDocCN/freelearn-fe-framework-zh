["```js\n// src/Home.js\n\nclass Home extends React.Component {\n  componentDidMount() {\n    this.timer = setInterval(::this.generateCats, 1000);\n  }\n}\n```", "```js\nnpm install babel-core --save\nnpm install babel-loader --save\nnpm install babel-preset-react --save\nnpm install babel-preset-es2015 --save\nnpm install babel-plugin-transform-function-bind –save\n\n```", "```js\n// package.json  \n\n\"scripts\": {\n\"lint\": \"eslint src\"\n}\n```", "```js\nnpm install eslint --save\nnpm install babel-eslint --save\nnpm install eslint-plugin-react –save\n\n```", "```js\n// .eslintrc\n{\n  \"parser\": \"babel-eslint\",\n  \"env\": {\n    \"browser\": true,\n    \"es6\": true,\n    \"node\": true,\n    \"jquery\": true \n  },\n  \"plugins\": [\n    \"react\" \n  ],\n  \"ecmaFeatures\": {\n    \"arrowFunctions\": true,\n    \"blockBindings\": true,\n    \"classes\": true,\n    \"defaultParams\": true,\n    \"destructuring\": true,\n    \"forOf\": true,\n    \"generators\": true,\n    \"modules\": true,\n    \"spread\": true,\n    \"templateStrings\": true,\n    \"jsx\": true\n  },\n  \"rules\": {\n    \"consistent-return\": [0],\n    \"key-spacing\": [0],\n    \"quotes\": [0],\n    \"new-cap\": [0],\n    \"no-multi-spaces\": [0],\n    \"no-shadow\": [0],\n    \"no-alert\": [0],\n    \"no-unused-vars\": [0],\n    \"no-underscore-dangle\": [0],\n    \"no-use-before-define\": [0, \"nofunc\"],\n    \"comma-dangle\": [0],\n    \"space-after-keywords\": [2],\n    \"space-before-blocks\": [2],\n    \"camelcase\": [0],\n    \"eqeqeq\": [2]\n  }\n}\n```", "```js\n$ npm run lint\n\n> react-router-flux@0.0.1 lint /Users/prathamesh/Projects/sources/reactjs-by-example/chapter11\n> eslint src\n\n/reactjs-by-example/chapter11/src/Home.js\n 29:20  error  Missing space before opening brace  space-before-blocks\n\nx 1 problem (1 error, 0 warnings)\n\n```", "```js\n// Before  \nfaveUnfave(event){\n    …\n}\n\n// After\nfaveUnfave(event) {\n…\n}\n```", "```js\n// src/index.js\nrender((\n  <Router history={history}>\n    <Route path=\"/\" component={App}>\n      <IndexRoute component={Home}/>\n      <Route path=\"/pictures/:id\" component={Picture}/>\n    </Route>\n  </Router>\n), document.getElementById('rootElement'));\n```", "```js\n// webpack.config.js\npath = require('path');\nvar webpack = require('webpack');\n\nmodule.exports = {\n  // starting point of the application\n  entry: [ './src/index']\n};\n```", "```js\n// webpack.config.js\nvar path = require('path');\nvar webpack = require('webpack');\n\nmodule.exports = {\n  entry: ['./src/index'],\n  output: {\n    path: path.join(__dirname, 'dist'),\n    filename: 'bundle.js',\n    publicPath: '/static/'\n  }\n}\n```", "```js\n$ webpack\nHash: f8496f13702a67943730\nVersion: webpack 1.12.11\nTime: 2690ms\n Asset     Size  Chunks             Chunk Names\nbundle.js  1.81 MB       0  [emitted]  main\n [0] multi main 52 bytes {0} [built]\n + 330 hidden modules\n\n```", "```js\n// index.html\n<html>\n  <head>\n    <title>React Router/ Data Models</title>\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css\" type=\"text/css\" />\n    <link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css\" rel=\"stylesheet\">\n  </head>\n  <body>\n    <div id='rootElement' class=\"container\"></div>\n  </body>\n  <script src=\"img/jquery-2.1.4.min.js\"></script>\n  <script src=\"img/bootstrap.min.js\"></script>\n <script src=\"img/bundle.js\"></script>\n</html>\n```", "```js\n// webpack.config.js\nmodule.exports = {\n  module: {\n    loaders: [\n      {\n        test: /\\.jsx?$/,\n        loader: 'babel-loader',\n        query: {\n          presets: ['es2015', 'react'],\n          plugins: ['transform-function-bind']\n        },\n        include: path.join(__dirname, 'src')\n      }]\n  }\n};\n```", "```js\n// webpack.config.js\n\nmodule.exports = {\nmodule: {\n    loaders: [\n      {\n        test: /\\.jsx?$/,\n        loader: 'babel-loader',\n        query: {\n          presets: ['es2015', 'react'],\n          plugins: ['transform-function-bind']\n        },\n        include: path.join(__dirname, 'src')\n      },\n      { test: /\\.css$/, loader: \"style-loader!css-loader\" },\n      { test: /\\.woff(\\d+)?$/, loader: 'url?prefix=font/&limit=5000&mimetype=application/font-woff' },\n      { test: /\\.ttf$/, loader: 'file?prefix=font/' },\n      { test: /\\.eot$/, loader: 'file?prefix=font/' },\n      { test: /\\.svg$/, loader: 'file?prefix=font/' },\n      { test: /\\.woff(2)?(\\?v=[0-9]\\.[0-9]\\.[0-9])?$/, loader: \"url-loader?limit=10000&minetype=application/font-woff\"},\n      { test: /\\.(ttf|eot|svg)(\\?v=[0-9]\\.[0-9]\\.[0-9])?$/, loader: \"file-loader\" }\n    ]\n  }\n};\n```", "```js\n// server.js\nvar webpack = require('webpack');\nvar WebpackDevServer = require('webpack-dev-server');\nvar config = require('./webpack.config');\n\nnew WebpackDevServer(webpack(config), {\n  publicPath: config.output.publicPath,\n  hot: true,\n  historyApiFallback: true\n}).listen(9000, 'localhost', function (err, result) {\n  if (err) {\n    console.log(err);\n  }\n\n  console.log('Listening at localhost:9000');\n});\n```", "```js\n// package.json\n\"scripts\": {\n    \"start\": \"node server.js\",\n  }\n```", "```js\nentry: [\n    'webpack-dev-server/client?http://localhost:9000',\n    'webpack/hot/only-dev-server',\n    './src/index'\n]\n```", "```js\nmodule: {\n    loaders: [\n      { test: /\\.jsx?$/,\n        loader: 'react-hot',\n        include: path.join(__dirname, 'src')\n      }\n     .. .. .. \n    ]\n  }\n```", "```js\nplugins: [\n    new webpack.HotModuleReplacementPlugin(),\n    new webpack.NoErrorsPlugin()\n]\n```", "```js\n// webpack.config.js\nvar path = require('path');\nvar webpack = require('webpack');\n\nmodule.exports = {\n  devtool: 'eval',\n  entry: [\n    'webpack-dev-server/client?http://localhost:9000',\n    'webpack/hot/only-dev-server',\n    './src/index'\n  ],\n  output: {\n    path: path.join(__dirname, 'dist'),\n    filename: 'bundle.js',\n    publicPath: '/static/'\n  },\n  plugins: [\n    new webpack.HotModuleReplacementPlugin(),\n    new webpack.NoErrorsPlugin()\n  ],\n  resolve: {\n    extensions: ['', '.js', '.jsx']\n  },\n  module: {\n    loaders: [\n      { test: /\\.jsx?$/,\n        loader: 'react-hot',\n        include: path.join(__dirname, 'src')\n      },\n      {\n\n        test: /\\.jsx?$/,\n        loader: 'babel-loader',\n        query: {\n          presets: ['es2015', 'react'],\n          plugins: ['transform-function-bind']\n        },\n        include: path.join(__dirname, 'src')\n      },\n      { test: /\\.css$/, loader: \"style-loader!css-loader\" },\n      { test: /\\.woff(\\d+)?$/, loader: 'url?prefix=font/&limit=5000&mimetype=application/font-woff' },\n      { test: /\\.ttf$/, loader: 'file?prefix=font/' },\n      { test: /\\.eot$/, loader: 'file?prefix=font/' },\n      { test: /\\.svg$/, loader: 'file?prefix=font/' },\n      { test: /\\.woff(2)?(\\?v=[0-9]\\.[0-9]\\.[0-9])?$/, loader: \"url-loader?limit=10000&minetype=application/font-woff\"},\n      { test: /\\.(ttf|eot|svg)(\\?v=[0-9]\\.[0-9]\\.[0-9])?$/, loader: \"file-loader\" }\n    ]\n  }\n};\n```"]