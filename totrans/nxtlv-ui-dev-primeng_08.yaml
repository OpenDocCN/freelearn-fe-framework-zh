- en: '8'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '8'
- en: Working with Navigation and Layout Components
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与导航和布局组件一起工作
- en: Navigating through a web application should be a seamless experience. How we
    structure our content, guide our users, and respond to their interactions can
    significantly influence their overall experience. This chapter dives deep into
    PrimeNG’s navigation and layout components, designed to help us craft intuitive
    and user-friendly interfaces for our Angular applications.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在Web应用程序中导航应该是一个无缝的体验。我们如何构建内容、引导用户以及响应他们的交互可以显著影响他们的整体体验。本章深入探讨了PrimeNG的导航和布局组件，旨在帮助我们为Angular应用程序构建直观且用户友好的界面。
- en: In this exploration, we’ll uncover the potential of PrimeNG’s navigation components,
    understanding how they can be used to guide users through our application. From
    menus to breadcrumbs, and from tabs to accordions, we’ll learn how to structure
    content, create navigation paths, and design responsive layouts that adapt to
    different screen sizes.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在这次探索中，我们将揭示PrimeNG导航组件的潜力，了解它们如何被用来引导用户通过我们的应用程序。从菜单到面包屑，从标签页到手风琴，我们将学习如何构建内容结构，创建导航路径，并设计适应不同屏幕尺寸的响应式布局。
- en: The overall goal of this chapter is to empower you with the knowledge and skills
    to leverage PrimeNG’s navigation and layout components effectively. By the end
    of this chapter, you will be able to create seamless navigation experiences, organize
    content in a structured manner, and ensure responsive layouts that adapt to various
    devices. You will also have gained insights into handling navigation events and
    integrating them into your application’s functionality.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的整体目标是赋予你利用PrimeNG的导航和布局组件的有效知识和技术。到本章结束时，你将能够创建无缝的导航体验，以结构化的方式组织内容，并确保适应各种设备的响应式布局。你还将深入了解如何处理导航事件并将它们集成到应用程序的功能中。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Introducing navigation and layout components
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍导航和布局组件
- en: Working with menus
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与菜单一起工作
- en: Introducing PrimeNG panels
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍PrimeNG面板
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'This chapter contains various code samples of PrimeNG displaying components.
    You can find the related source code in the `chapter-08` folder of the following
    GitHub repository: [https://github.com/PacktPublishing/Next-Level-UI-Development-with-PrimeNG/tree/main/apps/chapter-08](https://github.com/PacktPublishing/Next-Level-UI-Development-with-PrimeNG/tree/main/apps/chapter-08)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章包含PrimeNG显示组件的各种代码示例。你可以在以下GitHub仓库的`chapter-08`文件夹中找到相关源代码：[https://github.com/PacktPublishing/Next-Level-UI-Development-with-PrimeNG/tree/main/apps/chapter-08](https://github.com/PacktPublishing/Next-Level-UI-Development-with-PrimeNG/tree/main/apps/chapter-08)
- en: Introducing navigation and layout components
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍导航和布局组件
- en: In the realm of web development, creating intuitive and user-friendly interfaces
    is paramount to providing a seamless experience for users. Navigation and layout
    components play a pivotal role in achieving this goal. These components serve
    as the building blocks for organizing content, guiding users through different
    sections of an application, and ensuring responsive design.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在Web开发领域，创建直观且用户友好的界面对于为用户提供无缝体验至关重要。导航和布局组件在实现这一目标中发挥着关键作用。这些组件作为组织内容、引导用户通过应用程序的不同部分以及确保响应式设计的构建块。
- en: What are navigation and layout components?
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导航和布局组件是什么？
- en: '**Navigation components** provide users with a means to navigate through an
    application’s various features, sections, and content. They offer intuitive and
    accessible ways to access different functionalities, improving the overall usability
    of an application. Examples of navigation components include menus, breadcrumbs,
    tabs, and toolbars.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**导航组件**为用户提供了一种在应用程序的各个功能、部分和内容之间导航的方式。它们提供了直观且易于访问的方法来访问不同的功能，从而提高了应用程序的整体可用性。导航组件的例子包括菜单、面包屑、标签页和工具栏。'
- en: On the other hand, **layout components** are responsible for structuring and
    organizing the presentation of content within an application. They ensure that
    information is displayed in a clear and visually appealing manner. Layout components
    provide the foundation for creating responsive and adaptive designs that can adapt
    to different screen sizes and devices.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，**布局组件**负责在应用程序中构建和组织内容的展示。它们确保信息以清晰和视觉上吸引人的方式显示。布局组件为创建能够适应不同屏幕尺寸和设备的响应式和自适应设计提供了基础。
- en: Crafting an intuitive navigation and layout experience
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 打造直观的导航和布局体验
- en: 'Creating an intuitive navigation system is like designing a city’s road network.
    It should be logical, easy to follow, and cater to the needs of its users. Here
    are some pointers that can help you to achieve that:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 创建直观的导航系统就像设计一个城市的道路网络。它应该是逻辑的，易于遵循，并满足用户的需求。以下是一些可以帮助您实现这一目标的要点：
- en: '*User-centric design*: Always design with the user in mind. Understand their
    needs, their habits, and their expectations. A navigation system that resonates
    with the user’s intuition will always be more effective.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*以用户为中心的设计*：始终以用户为中心进行设计。了解他们的需求、习惯和期望。与用户直觉产生共鸣的导航系统总是更有效。'
- en: '*Consistency is key*: Whether it’s the placement of navigation buttons or the
    style of drop-down menus, maintaining consistency across your application helps
    users build familiarity.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*一致性是关键*：无论是导航按钮的位置还是下拉菜单的样式，在整个应用程序中保持一致性有助于用户建立熟悉感。'
- en: '*Feedback*: Provide feedback when users interact with navigation elements.
    Whether it’s a button changing color when hovered over or a subtle animation when
    a menu opens, these small interactions can enhance the user experience.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*反馈*：当用户与导航元素互动时提供反馈。无论是按钮在悬停时改变颜色，还是菜单打开时的微妙动画，这些小交互都可以增强用户体验。'
- en: '*Adaptability*: Ensure your navigation and layout components are responsive,
    adapting to different screen sizes and devices, and offering a seamless experience
    whether viewed on a desktop, tablet, or mobile.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*适应性*：确保您的导航和布局组件是响应式的，适应不同的屏幕尺寸和设备，无论在桌面、平板电脑还是手机上查看，都能提供无缝的体验。'
- en: Best practices for creating navigation and layout components
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建导航和布局组件的最佳实践
- en: 'Here are some additional best practices to keep in mind when creating navigation
    and layout components:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建导航和布局组件时，以下是一些需要记住的额外最佳实践：
- en: '*Simplicity*: Overcomplicating navigation can confuse users; aim for clarity
    and ease of use.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*简洁性*：过度复杂的导航会使用户困惑；追求清晰和易用性。'
- en: '*Modularity*: Divide complex navigation and layout structures into smaller,
    reusable components. This promotes code reusability, maintainability, and scalability.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*模块化*：将复杂的导航和布局结构分解成更小、可重用的组件。这促进了代码的可重用性、可维护性和可扩展性。'
- en: '*Accessibility*: Ensure that your navigation components are accessible to everyone,
    including those with disabilities. Use semantic HTML, provide alt text for images,
    and ensure components are keyboard navigable.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*可访问性*：确保您的导航组件对所有人都是可访问的，包括有残疾的人。使用语义HTML，为图像提供alt文本，并确保组件是键盘可导航的。'
- en: '*Testing*: Test your navigation components. This can be done through usability
    testing, where real users interact with your application. Their feedback can offer
    invaluable insights to improve your components.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*测试*：测试您的导航组件。这可以通过可用性测试来完成，其中真实用户与您的应用程序互动。他们的反馈可以提供宝贵的见解，以改进您的组件。'
- en: 'Remember that these best practices serve as guidelines, and it is vital to
    adapt them to the specific needs and requirements of your application. Now, let’s
    move on to another essential aspect of building intuitive UIs in Angular applications:
    PrimeNG menus.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，这些最佳实践作为指南，根据您应用程序的具体需求和需求进行调整至关重要。现在，让我们继续探讨构建Angular应用程序中直观UI的另一个重要方面：PrimeNG菜单。
- en: Working with menus
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与菜单一起工作
- en: '**Menus** are a fundamental element of a UI that provide a navigational structure
    and allow users to access various features and functionalities of an application.
    In PrimeNG, you can find a wide range of menu components that can be easily integrated
    into your projects. In this section, we will explore what menus are, discuss when
    to use PrimeNG menus, and provide an example of using PrimeNG menus in an e-commerce
    application.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**菜单**是UI的一个基本元素，它提供了导航结构，并允许用户访问应用程序的各种功能和功能。在PrimeNG中，您可以找到各种菜单组件，可以轻松集成到您的项目中。在本节中，我们将探讨菜单是什么，讨论何时使用PrimeNG菜单，并提供在电子商务应用程序中使用PrimeNG菜单的示例。'
- en: What are PrimeNG menus?
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PrimeNG菜单是什么？
- en: 'Menus can vary in complexity and design, ranging from simple text-based menus
    to more elaborate hierarchical menus with submenus and icons. PrimeNG offers several
    menu components that cater to different use cases and design requirements. Some
    popular menu components provided by PrimeNG include the following:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 菜单的复杂性和设计各不相同，从简单的基于文本的菜单到更复杂的具有子菜单和图标的分层菜单。PrimeNG提供了一系列菜单组件，以满足不同的用例和设计需求。PrimeNG提供的以下是一些流行的菜单组件：
- en: '`Menu`: The `p-menu` component is a versatile menu that supports various modes,
    such as popup, slide, and overlay. It can be used as a standalone menu or as a
    dropdown within other components.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Menu`：`p-menu` 组件是一个多功能的菜单，支持多种模式，如弹出、滑动和覆盖。它可以作为一个独立的菜单或作为其他组件中的下拉菜单使用。'
- en: '`Menubar`: The `p-menubar` component represents a horizontal menu bar commonly
    used in top-level navigation scenarios. It allows you to create a clean and concise
    navigation interface, especially useful for applications with multiple sections
    or modules.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Menubar`：`p-menubar` 组件代表一个水平菜单栏，通常用于顶级导航场景。它允许您创建一个干净且简洁的导航界面，特别适用于具有多个部分或模块的应用程序。'
- en: '`MegaMenu`: The `p-megaMenu` component is designed for more complex navigation
    scenarios, allowing you to create multi-column menus with images, icons, and submenus.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MegaMenu`：`p-megaMenu` 组件是为更复杂的导航场景设计的，允许您创建带有图片、图标和子菜单的多列菜单。'
- en: '`ContextMenu`: The `p-contextMenu` component enables the display of context-specific
    menus that appear when users right-click or long-press on an element. It is useful
    for providing context-dependent actions or options.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ContextMenu`：`p-contextMenu` 组件允许显示上下文特定的菜单，当用户在元素上右键点击或长按时出现。它对于提供上下文相关的操作或选项非常有用。'
- en: '`TieredMenu`: The `p-tieredMenu` component is a hierarchical menu that supports
    multiple levels of nested menus. It is suitable for organizing options in a structured
    manner.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TieredMenu`：`p-tieredMenu` 组件是一个支持多级嵌套菜单的层次菜单。它适合以结构化的方式组织选项。'
- en: '`Breadcrumb`: The `p-breadcrumb` component is used to display a breadcrumb
    navigation trail that represents the user’s current location within the application’s
    hierarchy. It is typically placed near the top of the page and provides links
    to higher-level sections or pages.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Breadcrumb`：`p-breadcrumb` 组件用于显示表示用户在应用程序层次结构中当前位置的面包屑导航路径。它通常放置在页面顶部附近，并提供链接到高级别部分或页面。'
- en: These are just a few examples of the menu components available in PrimeNG. Depending
    on your application’s requirements, you can choose the most appropriate menu component
    to create a seamless and intuitive navigation experience.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这些只是 PrimeNG 中可用的菜单组件的几个示例。根据您应用程序的需求，您可以选择最合适的菜单组件来创建无缝且直观的导航体验。
- en: Creating a basic menu
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建基本菜单
- en: Suppose you want a horizontal menu at the top of your e-commerce application’s
    home page. This menu includes categories such as electronics, clothing, home and
    kitchen, and sports and fitness, and each category represents a drop-down menu
    that expands when users hover over it or click on it.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您想在电子商务应用程序主页的顶部添加一个水平菜单。此菜单包括电子产品、服装、家居和厨房以及运动和健身等类别，每个类别代表一个当用户悬停或点击时展开的下拉菜单。
- en: 'To get started, we need to import the necessary modules from the PrimeNG library:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，我们需要从 PrimeNG 库中导入必要的模块：
- en: '[PRE0]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Once the dependencies are installed and imported, let’s see how a PrimeNG menu
    can be set up:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦安装并导入了依赖项，让我们看看如何设置 PrimeNG 菜单：
- en: '[PRE1]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Let’s break down the code:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解一下代码：
- en: '`<p-menu [model]="menuItems" />`: This represents the usage of the PrimeNG
    `Menu` component. It binds the `model` property of the `Menu` component to the
    `menuItems` variable.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<p-menu [model]="menuItems" />`：这表示 PrimeNG `Menu` 组件的使用。它将 `Menu` 组件的 `model`
    属性绑定到 `menuItems` 变量。'
- en: '`menuItems: MenuItem[]`: This is an array of `MenuItem` objects from the PrimeNG
    API. Each `MenuItem` object can have various properties, such as `label`, `items`,
    `routerLink`, `routerLinkActiveOptions`, and so on.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`menuItems: MenuItem[]`：这是一个来自 PrimeNG API 的 `MenuItem` 对象数组。每个 `MenuItem`
    对象可以具有各种属性，例如 `label`、`items`、`routerLink`、`routerLinkActiveOptions` 等。'
- en: Note
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The `routerLink` property in the menu items is an Angular feature that facilitates
    navigation between different routes in the application. The `routerLinkActiveOptions`
    property provides a means to verify and style the active menu by targeting the
    `p-menuitem-link-active` class. By default, the active class is applied to the
    route that matches the `routerLink` value defined in the `MenuItem` object. If
    you require different configurations, refer to the documentation available at
    [https://angular.io/api/router/IsActiveMatchOptions](https://angular.io/api/router/IsActiveMatchOptions).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 菜单项中的`routerLink`属性是Angular的一个特性，它简化了应用程序中不同路由之间的导航。`routerLinkActiveOptions`属性提供了一种通过针对`p-menuitem-link-active`类来验证和样式化活动菜单的方法。默认情况下，活动类应用于与`MenuItem`对象中定义的`routerLink`值匹配的路由。如果您需要不同的配置，请参阅[https://angular.io/api/router/IsActiveMatchOptions](https://angular.io/api/router/IsActiveMatchOptions)上的文档。
- en: 'In this example, each menu item is represented by a `label` property, which
    specifies the text to be displayed. The `items` property represents the submenu
    items for each category. Then the `routerLink` property is used to navigate to
    the corresponding product listing page when an item is clicked. Here is the result:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在本例中，每个菜单项都由一个`label`属性表示，该属性指定要显示的文本。`items`属性表示每个类别的子菜单项。然后使用`routerLink`属性在点击项时导航到相应的产品列表页面。以下是结果：
- en: '![Figure 8.1 – Basic menu](img/B18805_08_01.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![图8.1 – 基本菜单](img/B18805_08_01.jpg)'
- en: Figure 8.1 – Basic menu
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.1 – 基本菜单
- en: Working with Menubar
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Menubar
- en: PrimeNG `Menubar` is a dynamic navigation component designed for horizontal
    layouts. It goes beyond a simple list of links, offering customization options
    to fit diverse application requirements. You can include links, buttons, and other
    UI components within `Menubar`, making it versatile and adaptable.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: PrimeNG `Menubar`是一个为水平布局设计的动态导航组件。它不仅是一个链接列表，还提供了定制选项以满足不同的应用程序需求。您可以在`Menubar`中包含链接、按钮和其他UI组件，使其变得灵活且适应性强。
- en: 'To get started, we need to import the necessary modules from the PrimeNG library:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，我们需要从PrimeNG库中导入必要的模块：
- en: '[PRE2]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'After that, we can create a menu bar by utilizing the PrimeNG `p-menubar` component:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们可以通过使用PrimeNG的`p-menubar`组件来创建菜单栏：
- en: '[PRE3]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Let’s take a look at the result:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看结果：
- en: '![Figure 8.2 – Menubar](img/B18805_08_02.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![图8.2 – Menubar](img/B18805_08_02.jpg)'
- en: Figure 8.2 – Menubar
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.2 – Menubar
- en: 'In this example, `Menubar` hosts two main sections: **Electronics** and **Clothing**.
    The **Electronics** section is further broken down into sub-categories such as
    **Computers**, **Smartphones**, and **Televisions**. This structure ensures that
    users can swiftly navigate to their desired product category or access their account
    settings without any hassle.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在本例中，`Menubar`包含两个主要部分：**电子产品**和**服装**。**电子产品**部分进一步细分为**电脑**、**智能手机**和**电视**等子类别。这种结构确保用户可以迅速导航到他们想要的产品类别或轻松访问他们的账户设置，而无需任何麻烦。
- en: Working with MegaMenu
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用MegaMenu
- en: PrimeNG `MegaMenu` is a drop-down navigation component that displays submenus
    in a two-dimensional panel, which is ideal for situations with extensive navigation
    choices, eliminating the need for scrolling through long lists. It proves particularly
    useful for websites or applications with multiple features or categories, providing
    organized and easily accessible navigation options.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: PrimeNG `MegaMenu`是一个下拉导航组件，在二维面板中显示子菜单，非常适合具有大量导航选项的情况，消除了滚动长列表的需求。它对于具有多个功能或类别的网站或应用程序特别有用，提供了有组织和易于访问的导航选项。
- en: 'To get started, we need to import the necessary modules from the PrimeNG library:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，我们需要从PrimeNG库中导入必要的模块：
- en: '[PRE4]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'After that, we can create a menu bar by utilizing the PrimeNG `p-megaMenu`
    component:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们可以通过使用PrimeNG的`p-megaMenu`组件来创建菜单栏：
- en: '[PRE5]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'In this example, we define an array of `MegaMenuItem` objects to represent
    the menu structure. Each `MenuItem` object has a `label` property to specify the
    text displayed for the menu item. Additionally, the `items` property is used for
    nesting submenus within a menu item. The resulting `MegaMenu` component will have
    a top level named **Categories**:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在本例中，我们定义了一个`MegaMenuItem`对象的数组来表示菜单结构。每个`MenuItem`对象都有一个`label`属性来指定菜单项显示的文本。此外，`items`属性用于在菜单项内嵌套子菜单。生成的`MegaMenu`组件将有一个顶级名为**类别**：
- en: '![Figure 8.3 – MegaMenu](img/B18805_08_03.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图8.3 – MegaMenu](img/B18805_08_03.jpg)'
- en: Figure 8.3 – MegaMenu
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.3 – MegaMenu
- en: 'When users hover over **Categories**, a drop-down submenu will appear with
    additional subcategories and products. In this example, after hovering, you can
    see the **Electronics**, **Fashion**, and **Home & Living** subcategories. Within
    the **Electronics** subcategory, there are further options: **Laptops** and **Cameras**.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户将鼠标悬停在**类别**上时，将出现一个下拉子菜单，包含额外的子类别和产品。在这个例子中，在悬停之后，你可以看到**电子产品**、**时尚**和**家居与生活**子类别。在**电子产品**子类别中，还有进一步的选择：**笔记本电脑**和**相机**。
- en: Working with ContextMenu
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 与ContextMenu一起工作
- en: PrimeNG `ContextMenu` is a contextual menu component that pops up in the UI
    upon a specific user action, typically a right-click. It provides a list of actions
    that users can perform, which are contextually relevant to the area or the element
    they’ve interacted with. Instead of navigating to the top menu or searching for
    options, the context menu brings the actions directly to the user.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: PrimeNG `ContextMenu`是一个上下文菜单组件，在用户执行特定操作（通常是右键点击）时在UI中弹出。它提供了一系列用户可以执行的操作，这些操作与用户交互的区域或元素上下文相关。与导航到顶级菜单或搜索选项不同，上下文菜单将操作直接带到用户面前。
- en: 'A context menu is used when you want to offer users quick actions without cluttering
    the UI. It’s especially beneficial in the following cases:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 当你想为用户提供快速操作而不使UI杂乱无章时，会使用上下文菜单。在以下情况下特别有益：
- en: The screen space is limited
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 屏幕空间有限
- en: You want to provide options that are relevant to a specific element or area
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你希望提供与特定元素或区域相关的选项
- en: You aim to reduce the number of clicks a user has to make
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的目标是减少用户需要点击的次数
- en: For instance, in a text editor, right-clicking might bring up options to cut,
    copy, or paste. In a photo viewer, it might offer options to zoom, save, or share.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在文本编辑器中，右键点击可能会弹出剪切、复制或粘贴的选项。在图片查看器中，它可能提供缩放、保存或分享的选项。
- en: 'Let’s envision an e-commerce platform where users can browse products. A context
    menu can provide quick actions for these products. To get started, we need to
    import the necessary modules from the PrimeNG library:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们设想一个电子商务平台，用户可以在其中浏览产品。上下文菜单可以为这些产品提供快速操作。要开始，我们需要从PrimeNG库中导入必要的模块：
- en: '[PRE6]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'After that, let’s create a context menu for a product image:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，让我们为产品图片创建一个上下文菜单：
- en: '[PRE7]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Let’s break down the code:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解一下代码：
- en: '`<img #img .../>`: This is a template reference variable used to reference
    the `<img>` element within the Angular component'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<img #img .../>`：这是一个模板引用变量，用于在Angular组件中引用`<img>`元素'
- en: '`<p-contextMenu [target]="img" [model]="contextMenuItems" />`: This part of
    the code defines the PrimeNG `ContextMenu` component and configures its properties:'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<p-contextMenu [target]="img" [model]="contextMenuItems" />`：这部分代码定义了PrimeNG的`ContextMenu`组件并配置了其属性：'
- en: '`[target]="img"`: This binds the target property of the `ContextMenu` component
    to the `img` template reference variable. This means that the `ContextMenu` component
    will be triggered when the user right-clicks on the referenced `<``img>` element.'
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[target]="img"`：这会将`ContextMenu`组件的目标属性绑定到`img`模板引用变量。这意味着当用户右键点击引用的`<img>`元素时，`ContextMenu`组件将被触发。'
- en: '`[model]="contextMenuItems"`: This binds the `model` property of `ContextMenu`
    to the `contextMenuItems` array.'
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[model]="contextMenuItems"`：这会将`ContextMenu`的`model`属性绑定到`contextMenuItems`数组。'
- en: '`contextMenuItems: MenuItem[]`: This is an array of `MenuItem` objects. Each
    object represents a menu item in the context menu. It has properties such as `label`
    (the text displayed for the menu item), `icon` (an icon associated with the menu
    item), and `command` (a function to be executed when the menu item is selected).
    In this case, the `command` properties are set to call specific methods (`viewProduct()`,
    `addToCart()`, and `addToWishlist()`) in the Angular component.'
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`contextMenuItems: MenuItem[]`：这是一个`MenuItem`对象的数组。每个对象代表上下文菜单中的一个菜单项。它具有如`label`（显示在菜单项上的文本）、`icon`（与菜单项关联的图标）和`command`（当选择菜单项时要执行的功能）等属性。在这种情况下，`command`属性被设置为调用Angular组件中的特定方法（`viewProduct()`、`addToCart()`和`addToWishlist()`）。'
- en: 'Let’s take a look at the result:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看结果：
- en: '![Figure 8.4 – Example of ContextMenu](img/B18805_08_04.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![图8.4 – ContextMenu示例](img/B18805_08_04.jpg)'
- en: Figure 8.4 – Example of ContextMenu
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.4 – ContextMenu示例
- en: In this setup, when a user right-clicks on a product, they’re presented with
    options to view its details, add it to the cart, or add it to their wishlist.
    This enhances the shopping experience, making actions swift and straightforward.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个设置中，当用户在产品上右键点击时，他们会看到查看详情、添加到购物车或添加到愿望单的选项。这增强了购物体验，使操作迅速而直接。
- en: Working with TieredMenu
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 与`TieredMenu`一起工作
- en: PrimeNG `TieredMenu` is a multilevel menu system that allows options to be organized
    in a hierarchical structure. Instead of a flat list, you get a cascading menu
    where options can have child options, and those child options can have their own
    children, and so on. This tiered structure is visually intuitive, allowing users
    to navigate through categories and subcategories with ease.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: PrimeNG的`TieredMenu`是一个多级菜单系统，允许选项以分层结构组织。与扁平列表不同，您会得到一个级联菜单，其中选项可以有子选项，这些子选项还可以有自己的子选项，依此类推。这种分层结构在视觉上直观，使用户能够轻松地浏览类别和子类别。
- en: 'PrimeNG `TieredMenu` is an excellent choice in various scenarios where hierarchical
    navigation menus are required. Here are some situations where you can leverage
    the power of `TieredMenu`:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: PrimeNG的`TieredMenu`在各种需要分层导航菜单的场景中都是一个很好的选择。以下是一些您可以利用`TieredMenu`功能的情况：
- en: '*Complex application menus*: When you have an application with a large number
    of menu items and submenus, `TieredMenu` simplifies the management and organization
    of the menu structure. It allows you to create a logical hierarchy of menus, making
    it easier for users to navigate through the application.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*复杂的应用程序菜单*：当您有一个包含大量菜单项和子菜单的应用程序时，`TieredMenu`简化了菜单结构和管理的组织。它允许您创建一个逻辑上的菜单层次结构，使用户能够更容易地浏览应用程序。'
- en: '*E-commerce websites*: `TieredMenu` is particularly useful in e-commerce websites
    that often have extensive product categories and subcategories. By using `TieredMenu`,
    you can create a user-friendly navigation system that enables shoppers to browse
    through different product categories and subcategories effortlessly.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*电子商务网站*：`TieredMenu`在电子商务网站上特别有用，因为它们通常有广泛的产品类别和子类别。通过使用`TieredMenu`，您可以创建一个用户友好的导航系统，使购物者能够轻松浏览不同的产品类别和子类别。'
- en: '*Admin dashboards*: Admin dashboards typically have multiple sections and sub-sections,
    each requiring its own set of menus. `TieredMenu` provides a clean and organized
    way to represent these menus, allowing administrators to access various functionalities
    and settings with ease.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*管理仪表板*：管理仪表板通常有多个部分和子部分，每个部分都需要自己的菜单集。`TieredMenu`提供了一个干净且组织良好的方式来表示这些菜单，使管理员能够轻松访问各种功能和设置。'
- en: '*Multilevel dropdowns*: If you need to implement multilevel drop-down menus,
    `TieredMenu` simplifies the process. It handles the complexity of managing nested
    menus and ensures smooth transitions between different levels of hierarchy.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*多级下拉菜单*：如果您需要实现多级下拉菜单，`TieredMenu`简化了这一过程。它处理了管理嵌套菜单的复杂性，并确保在不同层次之间的平滑过渡。'
- en: To illustrate the usage of PrimeNG `TieredMenu` in an e-commerce context, let’s
    consider a scenario where we have an online store selling electronic devices.
    We want to create a navigation menu that allows users to browse through different
    product categories and subcategories.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明PrimeNG `TieredMenu`在电子商务环境中的应用，让我们考虑一个场景，其中我们有一个在线商店销售电子产品。我们希望创建一个导航菜单，允许用户浏览不同的产品类别和子类别。
- en: 'To get started, we need to import the necessary modules from the PrimeNG library:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用，我们需要从PrimeNG库中导入必要的模块：
- en: '[PRE8]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'After that, we can enable PrimeNG `TieredMenu` by adding the following code:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们可以通过添加以下代码来启用PrimeNG的`TieredMenu`：
- en: '[PRE9]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Let’s break down the code:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解一下代码：
- en: '`<p-tieredMenu [model]="tieredMenus" />`: This represents the PrimeNG `TieredMenu`
    component. The `model` attribute binds the `tieredMenus` property in the component
    class to the `TieredMenu` component.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<p-tieredMenu [model]="tieredMenus" />`：这代表PrimeNG的`TieredMenu`组件。`model`属性将组件类中的`tieredMenus`属性绑定到`TieredMenu`组件。'
- en: '`tieredMenus: MenuItem[]`: This is an array of `MenuItem` objects from the
    PrimeNG API. Each `MenuItem` object can have various properties, such as`label`,
    `icon`, `items`, `routerLink`, and so on.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tieredMenus: MenuItem[]`：这是一个来自PrimeNG API的`MenuItem`对象数组。每个`MenuItem`对象可以具有各种属性，例如`label`、`icon`、`items`、`routerLink`等。'
- en: 'Let’s have a look at the result:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看结果：
- en: '![Figure 8.5 – A tiered menu](img/B18805_08_05.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![图8.5 – 分层菜单](img/B18805_08_05.jpg)'
- en: Figure 8.5 – A tiered menu
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.5 – 分层菜单
- en: 'In this example, we have a top-level menu item, **Electronics**, with several
    submenus: **Computers**, **Smartphones**, and **Tablets**. Each submenu can have
    its own submenus, creating a hierarchical structure. Users can navigate through
    the menu items and submenus by hovering over the respective items.'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们有一个顶级菜单项 **Electronics**，它有几个子菜单：**Computers**、**Smartphones** 和 **Tablets**。每个子菜单都可以有自己的子菜单，从而创建一个层次结构。用户可以通过悬停在相应项上在菜单项和子菜单之间导航。
- en: Working with Breadcrumb
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用面包屑
- en: PrimeNG `Breadcrumb` is a navigation component that indicates the current location
    within an application’s hierarchical structure. It provides a series of links,
    each representing a level in the hierarchy, leading back to the home page or main
    dashboard.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: PrimeNG `Breadcrumb` 是一个导航组件，它指示应用程序层次结构中的当前位置。它提供了一系列链接，每个链接代表层次结构中的一个级别，可以返回主页或主仪表板。
- en: Note
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Breadcrumbs should be used as a secondary navigation aid – they complement the
    main navigation but shouldn’t replace it. For this reason, ensure that your application
    also has a primary navigation system, such as a menu or sidebar.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 应将面包屑用作辅助导航工具 – 它补充了主要导航，但不应该取代它。因此，请确保你的应用程序还有一个主要导航系统，例如菜单或侧边栏。
- en: 'To get started, we need to import the necessary modules from the PrimeNG library:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，我们需要从 PrimeNG 库中导入必要的模块：
- en: '[PRE10]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'After that, we can enable PrimeNG `Breadcrumb` by adding the following code:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们可以通过添加以下代码来启用 PrimeNG `Breadcrumb`：
- en: '[PRE11]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Let’s break down the code and explain each part:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解代码并解释每个部分：
- en: '`<p-breadcrumb [model]="breadcrumbItems" />`: This represents the actual usage
    of the PrimeNG `Breadcrumb` component. The `[model]` attribute is used to bind
    the `breadcrumbItems` array to the component’s model property.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<p-breadcrumb [model]="breadcrumbItems" />`：这代表了 PrimeNG `Breadcrumb` 组件的实际用法。`[model]`
    属性用于将 `breadcrumbItems` 数组绑定到组件的模型属性。'
- en: '`breadcrumbItems: MenuItem[]`: This is an array of `MenuItem` objects from
    the PrimeNG API. Each `MenuItem` object can have various properties such as `label`,
    `icon`, `items`, `routerLink`, and so on.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`breadcrumbItems: MenuItem[]`：这是一个包含 PrimeNG API 中的 `MenuItem` 对象的数组。每个 `MenuItem`
    对象可以具有各种属性，如 `label`、`icon`、`items`、`routerLink` 等。'
- en: 'Let’s have a look at the result:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看结果：
- en: '![Figure 8.6 – Breadcrumb](img/B18805_08_06.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.6 – 面包屑](img/B18805_08_06.jpg)'
- en: Figure 8.6 – Breadcrumb
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.6 – 面包屑
- en: 'In this example, the breadcrumb starts with the `Home` link, which takes users
    back to the website’s home page. The subsequent links represent the category hierarchy:
    **Electronics**, **Computers**, and finally, the current page, **MacBook Air**.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，面包屑从 `Home` 链接开始，该链接将用户带回到网站的首页。随后的链接代表分类层次结构：**Electronics**、**Computers**，最后是当前页面，**MacBook
    Air**。
- en: Having delved into the diverse capabilities of PrimeNG’s menus, we’ve seen how
    they can streamline navigation and enhance the user experience in applications.
    Now, let’s transition to exploring PrimeNG panels, which are essential components
    that offer a versatile way to organize and present content within an application.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入研究了 PrimeNG 菜单的多种功能后，我们看到了它们如何简化导航并增强应用程序的用户体验。现在，让我们转向探索 PrimeNG 面板，这些是提供灵活方式在应用程序中组织和展示内容的必要组件。
- en: Introducing PrimeNG panels
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 PrimeNG 面板
- en: '`Panel`, `ScrollPanel`, `Accordion`, `Splitter`, `Fieldset`, and `TabView`.'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '`Panel`、`ScrollPanel`、`Accordion`、`Splitter`、`Fieldset` 和 `TabView`。'
- en: 'PrimeNG panels can be used in various scenarios where content organization
    and presentation are crucial. Here are some situations where you can benefit from
    using PrimeNG panels:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: PrimeNG 面板可以在各种场景中使用，在这些场景中，内容组织和展示至关重要。以下是一些你可以从使用 PrimeNG 面板中受益的情况：
- en: '`Accordion` are useful when you have multiple sections of content and want
    to conserve space by allowing users to expand only the sections that they are
    interested in'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Accordion` 在你有多个内容部分并且想要通过只允许用户展开他们感兴趣的部分来节省空间时非常有用。'
- en: '`ScrollPanel` component enables users to scroll through the content, ensuring
    that all information remains accessible'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ScrollPanel` 组件使用户能够滚动内容，确保所有信息都保持可访问。'
- en: '`Splitter` component is valuable when you need to create resizable and collapsible
    panels, enabling users to customize the layout according to their preferences'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Splitter` 组件在你需要创建可调整大小和可折叠的面板时非常有价值，使用户能够根据他们的偏好自定义布局。'
- en: '`Fieldset` component is particularly useful when you have a form with related
    fields that need to be visually grouped together, improving the user experience
    and understanding'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fieldset`组件在您有一个包含相关字段且需要视觉上分组在一起以改善用户体验和理解表单时特别有用。'
- en: '`TabView` component is beneficial when you have multiple sets of related information
    or functionalities that can be organized into tabs, allowing users to switch between
    them easily'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TabView`组件在您有多个相关信息或功能集可以组织到标签中时非常有用，允许用户轻松切换。'
- en: To get started, let’s create a basic PrimeNG panel.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，让我们创建一个基本的PrimeNG面板。
- en: Creating a basic panel
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建基本面板
- en: A PrimeNG panel is essentially a container that wraps around content, providing
    it with a structured appearance. It comes with an optional header, which can be
    used to give a title or context to the content inside. The beauty of the panel
    lies in its simplicity. It doesn’t impose any specific style or behavior on the
    content; instead, it offers a neat boundary, making the content stand out.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: PrimeNG面板本质上是一个围绕内容包装的容器，为内容提供结构化的外观。它包含一个可选的标题栏，可以用来为内部内容提供标题或上下文。面板的美丽之处在于其简洁性。它不对内容施加任何特定的样式或行为；相反，它提供了一个整洁的边界，使内容更加突出。
- en: Whether you’re designing a dashboard, a form, or a content page, the panel can
    be your go-to component to give structure to your content. It’s especially useful
    when you want to group related pieces of information together, making it easier
    for users to process and understand.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您是在设计仪表板、表单还是内容页面，面板都可以成为您为内容提供结构的首选组件。当您想要将相关的信息片段组合在一起时，它尤其有用，这使用户更容易处理和理解。
- en: Note
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: While PrimeNG `Panel` is versatile, it’s essential to use it judiciously. Overusing
    it can make a page look cluttered. Always aim for a balance between design and
    functionality.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然PrimeNG `Panel`功能多样，但使用它时必须谨慎。过度使用可能会使页面显得杂乱。始终追求设计功能和平衡。
- en: Let’s dive into the realm of e-commerce to see PrimeNG `Panel` in action. In
    an e-commerce website, the `Panel` component can be used to display detailed information
    about a product. For example, when a user clicks on a product thumbnail or name,
    a panel can slide in or expand to reveal the product details, including images,
    descriptions, specifications, and customer reviews. This allows users to explore
    the product information without leaving the current page.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入电子商务领域，看看PrimeNG `Panel`的实际应用。在电子商务网站上，`Panel`组件可以用来显示关于产品的详细信息。例如，当用户点击产品缩略图或名称时，面板可以滑动或展开以显示产品详情，包括图片、描述、规格和客户评价。这使用户能够在不离开当前页面的情况下探索产品信息。
- en: 'To get started, we need to import the necessary modules from the PrimeNG library:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，我们需要从PrimeNG库中导入必要的模块：
- en: '[PRE12]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Once the dependencies are installed and imported, let’s see how a PrimeNG panel
    can be set up:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦安装并导入依赖项，让我们看看如何设置PrimeNG面板：
- en: '[PRE13]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Let’s break down the code and explain each part:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解代码并解释每个部分：
- en: '`<p-panel>`: This is the main component tag for creating a panel in PrimeNG.'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<p-panel>`：这是在PrimeNG中创建面板的主要组件标签。'
- en: '`header="Product Details"`: This attribute sets the title or header of the
    panel to `"``Product Details"`.'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`header="Product Details"`：此属性将面板的标题或头部设置为`"Product Details"`。'
- en: '`-toggleable]="true"`: This attribute makes the panel’s content collapsible.
    When set to `true`, it allows users to click on the panel header to toggle (show/hide)
    the content inside the panel.'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-toggleable]="true"`：此属性使面板的内容可折叠。当设置为`true`时，允许用户点击面板标题来切换（显示/隐藏）面板内的内容。'
- en: 'Let’s take a look at the result:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看结果：
- en: '![Figure 8.7 – Basic panel](img/B18805_08_07.jpg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![图8.7 – 基本面板](img/B18805_08_07.jpg)'
- en: Figure 8.7 – Basic panel
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.7 – 基本面板
- en: In this example, you can expand or collapse the product details by clicking
    on the minus or plus icon.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，您可以通过点击减号或加号图标来展开或折叠产品详情。
- en: Working with ScrollPanel
  id: totrans-157
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 与ScrollPanel一起工作
- en: PrimeNG `ScrollPanel` enables you to create scrollable areas within their applications,
    allowing users to view content that exceeds the available space. The `ScrollPanel`
    component provides a native-like scrolling experience, which means that when users
    navigate through the app, the scrolling feels smooth and natural, just like it
    would on the device’s built-in applications, and the component also supports both
    horizontal and vertical scrolling.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: PrimeNG `ScrollPanel` 允许你在应用程序内创建可滚动的区域，使用户能够查看超出可用空间的内容。`ScrollPanel` 组件提供类似原生的滚动体验，这意味着当用户在应用程序中导航时，滚动感觉平滑自然，就像在设备内置的应用程序中一样，该组件还支持水平和垂直滚动。
- en: Unlike the default browser scrollbars, which can be inconsistent across different
    platforms, `ScrollPanel` offers a uniform look and feel. It’s not just about aesthetics;
    it’s about providing a smoother, more intuitive scrolling experience for users.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 与在不同平台上可能不一致的默认浏览器滚动条不同，`ScrollPanel` 提供了一致的视觉和感觉。这不仅仅是关于美观；这是为了为用户提供更平滑、更直观的滚动体验。
- en: 'Let’s improve the basic panel shown in *Figure 8**.7* by adding `ScrollPanel`.
    To start, import the necessary modules from the PrimeNG library:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过添加 `ScrollPanel` 来改进 *图 8.7* 中显示的基本面板。首先，从 PrimeNG 库中导入必要的模块：
- en: '[PRE14]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Now, let’s see how PrimeNG `ScrollPanel` can be set up:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看如何设置 PrimeNG `ScrollPanel`：
- en: '[PRE15]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Let’s break down the code and explain its functionality:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解代码并解释其功能：
- en: '`<p-panel ...>`: This represents the PrimeNG `Panel` component.'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<p-panel ...>`：这代表 PrimeNG `Panel` 组件。'
- en: '`<p-scrollPanel [style]="{ width: ''100%'', height: ''200px'' }">`: This creates
    a scrollable viewport within the panel to handle overflowing content. It allows
    users to scroll through the content vertically. The `[style]` attribute is used
    to define the dimensions of the scrollable area. In this case, the width is set
    to `100%`, and the height is set to `200px`.'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<p-scrollPanel [style]="{ width: ''100%'', height: ''200px'' }">`：这将在面板内创建一个可滚动的视口来处理溢出的内容。它允许用户垂直滚动内容。`[style]`
    属性用于定义可滚动区域的尺寸。在这种情况下，宽度设置为 `100%`，高度设置为 `200px`。'
- en: 'Let’s take a look at the result:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看结果：
- en: '![Figure 8.8 – ScrollPanel (with the scroll bar marked)](img/B18805_08_08.jpg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.8 – 带滚动条的 ScrollPanel](img/B18805_08_08.jpg)'
- en: Figure 8.8 – ScrollPanel (with the scroll bar marked)
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.8 – 带滚动条的 ScrollPanel
- en: In this example, we defined `ScrollPanel` inside a basic panel with a fixed
    width and height. Since the content of the **Product Details** panel is quite
    large, the scrolling feature allows users to view the content effortlessly without
    losing the context of the entire page.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们在一个具有固定宽度和高度的基面板内定义了 `ScrollPanel`。由于 **产品详情** 面板的内容相当大，滚动功能允许用户轻松查看内容，而不会失去整个页面的上下文。
- en: Working with Accordion
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 与 Accordion 一起工作
- en: PrimeNG `Accordion` is a UI component that allows you to display content in
    a stacked manner. Think of it as a vertical stack of expandable/collapsible panels.
    Each panel has a title bar, and when you click on it, the content inside unfolds,
    revealing more details. This mechanism ensures that users are not overwhelmed
    with too much information at once. Instead, they can choose which sections to
    delve into, making their browsing experience more focused and less cluttered.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: PrimeNG `Accordion` 是一个 UI 组件，允许你以堆叠的方式显示内容。可以将其视为可展开/折叠的面板垂直堆栈。每个面板都有一个标题栏，当你点击它时，面板内的内容展开，显示更多详细信息。这种机制确保用户不会一次性被过多信息淹没。相反，他们可以选择深入哪些部分，使他们的浏览体验更加专注和整洁。
- en: 'Accordions shine in scenarios where space is at a premium, and you need to
    present a list of items with associated detailed content. They’re especially handy
    for the following circumstances:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在空间有限且需要展示与相关详细内容关联的项目列表的情况下，Accordions 非常有用。它们特别适用于以下情况：
- en: '**Organizing related content**: Group related sections or topics, allowing
    users to quickly navigate to their area of interest'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**组织相关内容**：将相关部分或主题分组，使用户能够快速导航到他们感兴趣的区域'
- en: '**Forms with multiple steps**: Break down long forms into manageable chunks,
    guiding users step by step'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多步骤表单**：将长表单分解成可管理的部分，逐步引导用户'
- en: '**FAQs**: Present a list of questions and expand to show answers'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**常见问题解答**：展示一系列问题，并展开以显示答案'
- en: '**Product specifications**: In e-commerce, use accordions to display detailed
    specs or features of a product without overwhelming the user'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**产品规格**：在电子商务中，使用手风琴式布局显示产品的详细规格或特性，而不会让用户感到信息过载'
- en: Imagine you’re developing an e-commerce platform that sells electronic gadgets.
    For each product, there’s a wealth of information to convey specifications, user
    reviews, warranty details, and more. Using a PrimeNG accordion, you can neatly
    organize this information.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，您正在开发一个销售电子小工具的电子商务平台。对于每个产品，都有大量信息需要传达规格、用户评价、保修详情等。使用 PrimeNG 手风琴，您可以整洁地组织这些信息。
- en: 'To get started, import the necessary modules from the PrimeNG library:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用，请从 PrimeNG 库中导入必要的模块：
- en: '[PRE16]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Now we can see how a PrimeNG accordion can be set up:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以看到如何设置 PrimeNG 手风琴：
- en: '[PRE17]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The code provided demonstrates the usage of the PrimeNG `Accordion` component
    to create a set of tabs with different content sections. Let’s break it down:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 提供的代码演示了如何使用 PrimeNG `Accordion` 组件创建一组具有不同内容部分的标签。让我们分解它：
- en: '`<p-accordion>...</p-accordion>`: This code snippet wraps the `Accordion` component
    around its child elements, indicating the start and end of the accordion section.'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<p-accordion>...</p-accordion>`：此代码片段将 `Accordion` 组件包裹在其子元素周围，表示手风琴部分的开始和结束。'
- en: '`<p-accordionTab header="...">`: This element represents a section of the accordion.
    The header attribute defines the title of that section.'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<p-accordionTab header="...">`：此元素代表手风琴的一个部分。header 属性定义了该部分的标题。'
- en: 'Let’s have a look at the result:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看结果：
- en: '![Figure 8.9 – Accordion](img/B18805_08_09.jpg)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.9 – 手风琴](img/B18805_08_09.jpg)'
- en: Figure 8.9 – Accordion
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.9 – 手风琴
- en: We have created three accordion tabs, so when users click on a title, the associated
    content inside the tab expands.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建了三个手风琴标签，因此当用户点击标题时，标签内的相关内容会展开。
- en: Working with Fieldset
  id: totrans-190
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 与 Fieldset 一起工作
- en: PrimeNG `Fieldset` is a container component designed to group related content
    within a visually distinct boundary. It’s similar to the classic HTML `<fieldset>`
    element but supercharged with additional features and styling. The most notable
    feature is its optional toggleable attribute, allowing users to expand or collapse
    the content within, making it perfect for sections that benefit from a hide/show
    functionality.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: PrimeNG `Fieldset` 是一个容器组件，旨在将相关内容分组在一个视觉上独特的边界内。它与经典的 HTML `<fieldset>` 元素类似，但增加了额外的功能和样式。最显著的功能是其可选的可切换属性，允许用户展开或折叠内容，使其非常适合需要隐藏/显示功能的章节。
- en: '`Fieldset` is your go-to component for the following instances:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '`Fieldset` 是您在以下情况下首选的组件：'
- en: '**Grouping related elements**: This is especially the case for forms where
    you might want to group related input fields'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分组相关元素**：这在表单中尤其如此，您可能希望将相关的输入字段分组'
- en: '**Enhancing readability**: By segmenting content, you make it easier for users
    to process information'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**提高可读性**：通过分割内容，您使用户更容易处理信息'
- en: '**Interactive content presentation**: With its toggleable feature, you can
    present optional or supplementary information without overwhelming the main content'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交互式内容展示**：利用其可切换功能，您可以在不压倒主要内容的情况下展示可选或补充信息'
- en: In the previous section, we displayed product information such as specifications,
    warranty details, and user reviews using PrimeNG `Accordion` (as seen in *Figure
    8**.9*). Instead of using `Accordion`, we can also use `Fieldset` to neatly package
    each section.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我们使用 PrimeNG `Accordion`（如图 *图 8.9* 所示）显示了产品信息，如规格、保修详情和用户评价。除了使用 `Accordion`，我们还可以使用
    `Fieldset` 来整洁地包装每个部分。
- en: 'To get started, import the necessary modules from the PrimeNG library:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用，请从 PrimeNG 库中导入必要的模块：
- en: '[PRE18]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Then, let’s set up PrimeNG `Fieldset`:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，让我们设置 PrimeNG `Fieldset`：
- en: '[PRE19]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The provided code demonstrates the usage of the PrimeNG `Fieldset` component
    with specific attributes. Let’s break down the code and explain each part:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 提供的代码演示了如何使用 PrimeNG `Fieldset` 组件及其特定属性。让我们分解代码并解释每个部分：
- en: '`<p-fieldset>`: The HTML tag that represents the PrimeNG `Fieldset` component.'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<p-fieldset>`：代表 PrimeNG `Fieldset` 组件的 HTML 标签。'
- en: '`legend="Specifications"`: The `legend` attribute sets the title or description
    of the `Fieldset` component. In this case, `legend` is set to `Specifications`,
    indicating that the content within the `Fieldset` component pertains to the specifications
    of a product.'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`legend="规格"`：`legend` 属性设置 `Fieldset` 组件的标题或描述。在这种情况下，`legend` 设置为 `规格`，表示
    `Fieldset` 组件内的内容与产品的规格相关。'
- en: '`[toggleable]="true"`: The `[toggleable]` attribute is a property binding that
    enables the toggleable functionality of the `Fieldset` component. When set to
    `true`, the content within the fieldset can be expanded or collapsed by the user.
    This allows the user to hide or reveal the specifications section as needed.'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[toggleable]="true"`：`[toggleable]`属性是一个属性绑定，它启用了`Fieldset`组件的可切换功能。当设置为`true`时，字段集中的内容可以被用户展开或折叠。这使用户能够根据需要隐藏或显示规格部分。'
- en: 'Let’s take a look at the result:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看结果：
- en: '![Figure 8.10 – Fieldset](img/B18805_08_10.jpg)'
  id: totrans-206
  prefs: []
  type: TYPE_IMG
  zh: '![图8.10 – 字段集](img/B18805_08_10.jpg)'
- en: Figure 8.10 – Fieldset
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.10 – 字段集
- en: In this example, each fieldset acts as a container for a specific type of information.
    Users can quickly glance at the legends (such as **Specification** or **User Review**)
    and decide which sections they want to delve into, expanding them as needed.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，每个字段集都作为特定类型信息的容器。用户可以快速浏览图例（如**规格**或**用户评论**）并决定他们想要深入了解哪些部分，并根据需要展开它们。
- en: Working with TabView
  id: totrans-209
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用TabView
- en: PrimeNG `TabView` is a navigation component that allows you to display content
    broken down into multiple tabs. Each tab acts as a container for its unique content,
    ensuring that information is organized and easily accessible. With `TabView`,
    users can swiftly switch between different sections without being overwhelmed.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: PrimeNG的`TabView`是一个导航组件，允许您将内容分解成多个标签显示。每个标签都作为其独特内容的容器，确保信息是有组织的且易于访问。使用`TabView`，用户可以快速在不同部分之间切换，而不会感到不知所措。
- en: '`TabView` is versatile and finds its place in various scenarios:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '`TabView`功能丰富，在各种场景中都有其位置：'
- en: '**Settings or configuration pages**: This is so that different categories of
    settings can be grouped under individual tabs'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设置或配置页面**：这样可以将不同类别的设置分组到单独的标签下'
- en: '**Profile pages**: This is when you might want to separate user information,
    activity history, and settings into distinct tabs'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**个人资料页面**：这可能是在您想要将用户信息、活动历史和设置分别放入不同的标签时'
- en: '**Product descriptions in e-commerce**: This is when you want to segregate
    product details, customer reviews, and specifications'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**电子商务中的产品描述**：这是当您想要将产品详情、客户评论和规格分开时'
- en: '**Documentation**: This is for when you want to separate guides, API references,
    and examples'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文档**：这是当您想要将指南、API参考和示例分开时'
- en: 'In the previous sections, we displayed the product information using PrimeNG
    `Accordion` (*Figure 8**.9*) and `Fieldset` (*Figure 8**.10*). Now, let’s try
    using `TabView`. To get started, import the necessary modules from the PrimeNG
    library:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的章节中，我们使用PrimeNG的`Accordion`（*图8.9*）和`Fieldset`（*图8.10*）显示了产品信息。现在，让我们尝试使用`TabView`。要开始，请从PrimeNG库中导入必要的模块：
- en: '[PRE20]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'And now let’s see how PrimeNG `TabView` can be set up:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看如何设置PrimeNG的`TabView`：
- en: '[PRE21]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Let’s break down the code and explain each part:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解代码并解释每个部分：
- en: '`<p-tabView>`: This PrimeNG component serves as the container for our tabs.'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<p-tabView>`：这个PrimeNG组件作为我们标签的容器。'
- en: '`<p-tabPanel header="Warranty">`: These components represent different sections
    of product information inside the `tabView` container. The `header` attribute
    holds the value of the tab’s label.'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<p-tabPanel header="Warranty">`：这些组件代表`tabView`容器内产品信息的不同部分。`header`属性包含标签的值。'
- en: 'Let’s have a look at the result:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看结果：
- en: '![Figure 8.11 – TabView](img/B18805_08_11.jpg)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
  zh: '![图8.11 – TabView](img/B18805_08_11.jpg)'
- en: Figure 8.11 – TabView
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.11 – TabView
- en: By using PrimeNG `TabView`, we can create separate sections of the content that
    are displayed as tabs. Users can click on the tab headers (**Warranty**, **Specifications**,
    or **Reviews**) to switch between the corresponding sections and access the relevant
    information.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用PrimeNG的`TabView`，我们可以创建内容的不同部分，这些部分以标签的形式显示。用户可以通过点击标签标题（**保修**、**规格**或**评论**）在相应的部分之间切换，并访问相关信息。
- en: Working with Splitter
  id: totrans-227
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Splitter
- en: PrimeNG `Splitter` is a layout component that allows users to adjust the size
    of its child elements by dragging a divider. Think of it as a resizable partition
    that users can adjust according to their viewing preferences. It’s particularly
    useful in scenarios where you want to provide an adjustable ratio between two
    or more content sections, be it horizontally or vertically.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: PrimeNG的`Splitter`是一个布局组件，允许用户通过拖动分隔线来调整其子元素的大小。将其想象为用户可以根据他们的查看偏好调整大小的可调整分区。它在需要提供两个或更多内容部分之间可调整比例的场景中特别有用，无论是水平还是垂直。
- en: 'The `Splitter` component shines in various scenarios:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '`Splitter`组件在各种场景中都非常出色：'
- en: '`Splitter` when you have multiple widgets or panels, and you want to give users
    the flexibility to adjust their sizes'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你有多个小部件或面板，并希望给用户提供调整它们大小的灵活性时，使用`Splitter`
- en: '`Splitter` component can be used when you might have a code section on one
    side and a preview on the other'
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你可能在一侧有一个代码部分而在另一侧有一个预览时，可以使用`Splitter`组件
- en: '`Splitter` component lets you allow users to adjust the view to compare two
    images side by side'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Splitter`组件允许用户调整视图以并排比较两个图像'
- en: '`Splitter` component can be used for applications where you want to offer adjustable
    multi-panel views'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Splitter`组件可用于需要提供可调整的多面板视图的应用程序'
- en: 'Let’s consider an example where PrimeNG `Splitter` compares two images side
    by side. To start, import the necessary modules from the PrimeNG library:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一个例子，其中PrimeNG的`Splitter`组件将两个图像并排比较。首先，从PrimeNG库中导入必要的模块：
- en: '[PRE22]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Then let’s see how PrimeNG `Splitter` can be set up:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 然后让我们看看如何设置PrimeNG的`Splitter`组件：
- en: '[PRE23]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Let’s break down the code and explain each part:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解代码并解释每个部分：
- en: '`<p-splitter>`: This represents the PrimeNG `Splitter` component.'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<p-splitter>`：这代表PrimeNG的`Splitter`组件。'
- en: '`[style]="{ height: ''300px'' }"`: The is used to apply inline CSS styles to
    the `Splitter` component. In this case, the height of the `Splitter` component
    is set to 300 px using the `height` property.'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[style]="{ height: ''300px'' }"`：这用于将内联CSS样式应用到`Splitter`组件上。在这种情况下，`Splitter`组件的高度通过`height`属性设置为300
    px。'
- en: '`layout="horizontal"`: The `layout` attribute defines the orientation of the
    panels within the `Splitter` component. In this example, it is set to `horizontal`,
    indicating that the panels will be displayed side by side horizontally.'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`layout="horizontal"`：`layout`属性定义了`Splitter`组件内面板的排列方向。在这个例子中，它被设置为`horizontal`，表示面板将以水平方式并排显示。'
- en: '`<ng-template pTemplate>`: The `pTemplate` directive is specific to PrimeNG
    and is used to mark the Angular template as a PrimeNG template.'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<ng-template pTemplate>`：`pTemplate`指令是PrimeNG特有的，用于标记Angular模板为PrimeNG模板。'
- en: 'Let’s take a look at the result:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看结果：
- en: '![Figure 8.12 – Splitter](img/B18805_08_12.jpg)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![图8.12 – Splitter](img/B18805_08_12.jpg)'
- en: Figure 8.12 – Splitter
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.12 – Splitter
- en: Here we created two panels within the `Splitter` component, with each panel
    containing an image for comparison purposes.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们在`Splitter`组件内部创建了两个面板，每个面板包含一个用于比较目的的图像。
- en: Having explored the various features and capabilities of PrimeNG panels, we
    have gained valuable insights into how this powerful component can enhance the
    layout and presentation of content in your Angular applications.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 在探索了PrimeNG面板的各种功能和能力之后，我们获得了宝贵的见解，了解了这个强大的组件如何增强Angular应用程序中内容的布局和展示。
- en: Summary
  id: totrans-248
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we navigated through the vast world of PrimeNG components.
    It took us on a journey through the intricacies of navigation and layout components.
    These elements are the backbone of any application, dictating how users interact
    with the content and ensuring a seamless experience.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们穿越了PrimeNG组件的广阔世界。它带我们经历了一次导航和布局组件的复杂旅程。这些元素是任何应用程序的骨架，决定了用户如何与内容互动，并确保无缝体验。
- en: We delved deep into various components from menus and panels. Each component
    serves a unique purpose, from organizing content to enhancing navigation. By now,
    you should have a firm grasp on when and how to use these components in your applications.
    These components will allow us to structure and present content in a meaningful
    way, improving the overall user experience. Moreover, through various examples,
    we’ve seen how these components can be integrated into real-world applications.
    These practical insights aim to bridge the gap between theoretical knowledge and
    actual implementation.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 我们深入研究了从菜单和面板的各种组件。每个组件都服务于独特的目的，从组织内容到增强导航。到目前为止，你应该已经牢固地掌握了在应用程序中何时以及如何使用这些组件。这些组件将使我们能够以有意义的方式构建和展示内容，从而提高整体用户体验。此外，通过各种示例，我们看到了这些组件如何集成到实际应用中。这些实用见解旨在弥合理论知识与实际实施之间的差距。
- en: As we transition to the next chapter, we’ll be diving into the art of customizing
    PrimeNG components with theming. Theming is a powerful tool that allows you to
    tailor the look and feel of components to align with brand guidelines or specific
    design preferences. We’ll explore how to harness the power of theming to make
    PrimeNG components truly your own. So, gear up for a colorful journey into the
    world of customization and design!
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我们过渡到下一章，我们将深入探讨使用主题定制PrimeNG组件的艺术。主题化是一个强大的工具，它允许你根据品牌指南或特定的设计偏好定制组件的外观和感觉。我们将探讨如何利用主题化的力量，使PrimeNG组件真正成为你自己的。所以，准备好开始一段丰富多彩的定制和设计之旅吧！
- en: 'Part 3: Advanced Techniques and Best Practices'
  id: totrans-252
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3部分：高级技术和最佳实践
- en: In this part, you will delve into advanced techniques and best practices for
    working with PrimeNG. You will explore customization, optimization, reusability,
    internationalization, and testing strategies to enhance your PrimeNG-powered Angular
    applications.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 在本部分，你将深入了解与PrimeNG一起工作的高级技术和最佳实践。你将探索定制、优化、重用、国际化以及测试策略，以增强你的PrimeNG驱动的Angular应用程序。
- en: By the end of this part, you will have a deep understanding of these advanced
    topics and be equipped with valuable skills to build robust, efficient, and user-friendly
    applications.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 在本部分的结尾，你将深入理解这些高级主题，并具备构建稳健、高效和用户友好的应用程序的宝贵技能。
- en: 'This part contains the following chapters:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分包含以下章节：
- en: '[*Chapter 9*](B18805_09.xhtml#_idTextAnchor184), *Customizing PrimeNG Components
    with Theming*'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第9章*](B18805_09.xhtml#_idTextAnchor184), *使用主题定制PrimeNG组件*'
- en: '[*Chapter 10*](B18805_10.xhtml#_idTextAnchor205), *Exploring Optimization Techniques
    for Angular Applications*'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第10章*](B18805_10.xhtml#_idTextAnchor205), *探索Angular应用程序的优化技术*'
- en: '[*Chapter 11*](B18805_11.xhtml#_idTextAnchor232), *Creating Reusable and Extendable
    Components*'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第11章*](B18805_11.xhtml#_idTextAnchor232), *创建可重用和可扩展的组件*'
- en: '[*Chapter 12*](B18805_12.xhtml#_idTextAnchor251), *Working with Internationalization
    and Localization*'
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第12章*](B18805_12.xhtml#_idTextAnchor251), *处理国际化和本地化*'
- en: '[*Chapter 13*](B18805_13.xhtml#_idTextAnchor268), *Testing PrimeNG Components*'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第13章*](B18805_13.xhtml#_idTextAnchor268), *测试PrimeNG组件*'
