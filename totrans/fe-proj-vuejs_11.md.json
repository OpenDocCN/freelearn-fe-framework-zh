["```js\nimport Vue from 'vue'\nimport Vuex from 'vuex'\nVue.use(Vuex)\nexport default new Vuex.Store({\n  state: {\n    name:\"Lindy\", \n    favoriteColor: \"blue\",\n    profession: \"librarian\"\n  },\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n```", "```js\nexport default {\n  name: 'Lindy',\n  favoriteColor: 'blue',\n  profession: 'librarian'\n}\n```", "```js\nimport Vue from 'vue'\nimport Vuex from 'vuex'\nVue.use(Vuex)\nimport state from './state.js';\nexport default new Vuex.Store({\n  state,\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n```", "```js\nimport Vue from 'vue'\nimport Vuex from 'vuex'\nVue.use(Vuex)\nexport default new Vuex.Store({\n  state: {\n    firstName: \"Lindy\",\n    lastName: \"Roberthon\"\n  },\n  getters: {\n    name(state) {\n      return state.firstName + ' ' + state.lastName;\n    }\n  },\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n```", "```js\nexport default {\n  firstName: 'Lindy',\n  lastName: 'Roberthon'\n}\n```", "```js\nexport default {\n  name(state) {\n    return state.firstName + ' ' + state.lastName;\n  }\n}\n```", "```js\nimport Vue from 'vue'\nimport Vuex from 'vuex'\nVue.use(Vuex)\nimport state from './state.js';\nimport getters from './getters.js';\nexport default new Vuex.Store({\n  state,\n  getters,\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n```", "```js\n    import Vue from 'vue'\n    import Vuex from 'vuex'\n    Vue.use(Vuex)\n    import state from './state.js';\n    import getters from './getters.js';\n    import mutations from './mutations.js';\n    import actions from './actions.js';\n    export default new Vuex.Store({\n      state,\n      getters,\n      mutations,\n      actions,\n      modules: {\n      }\n    })\n    ```", "```js\n    export default {\n            firstName: 'Lindy',\n            lastName: 'Roberthon',\n            numCats: 5,\n            numDogs: 1,\n            favoriteFilm:''\n    }\n    ```", "```js\n    export default {\n            name(state) {\n                    return state.firstName + ' ' +state.lastName\n            },\n            totalPets(state) {\n                    return state.numCats + state.numDogs\n            }\n    }\n    ```", "```js\n    export default {\n            addCat(state) {\n                state.numCats++;\n            },\n            addDog(state) {\n                state.numDogs++;\n            },\n            setFirstName(state, name) {\n                if(name !== '') state.firstName = name;\n            },\n            setLastName(state, name) {\n                if(name !== '') state.lastName = name;\n            },\n            setFavoriteFilm(state, film) {\n                if(film !== '') state.favoriteFilm = film;\n            }\n    }\n    ```", "```js\n    export default {\n        async updateFavoriteFilm(context, film) {\n            try {\n                let response = await fetch('https://swapi.dev/api/films?search='+encodeURIComponent(film));\n                let data = await response.json();\n                if(data.count === 1) context.commit               ('setFavoriteFilm', film);\n                else console.log('Ignored setting non-Star Wars               film '+film+' as favorite.'); \n            } catch(e) {\n                console.error(e);\n            }\n        }\n    }\n    ```", "```js\n    <template>\n      <div id=\"app\">\n        My first name is {{ $store.state.firstName }}.<br/>\n        My full name is {{ $store.getters.name }}.<br/>\n        I have this many pets - {{ $store.getters.totalPets }}.<br/>\n        My favorite film is {{ $store.state.favoriteFilm }}.\n      </div>\n    </template>\n    <script>\n    export default {\n      name: 'app',\n      created() {\n        this.$store.dispatch('updateFavoriteFilm', 'A New Hope');\n      }\n    }\n    </script>\n    ```", "```js\nstate: {\n  name:\"Lindy\", \n  favoriteColor: \"blue\", \n  profession: \"librarian\", \n  // lots more values about Lindy\n  books: [\n    { name: \"An Umbrella on Fire\", pages: 283 },\n    { name: \"Unicorn Whisperer\", pages: 501 },\n    // many, many more books\n  ],\n  robots: {\n    skill:'advanced',\n    totalAllowed: 10,\n    robots: [\n      { name: \"Draconis\" },\n      // so much robots \n    ]\n  }\n}\n```", "```js\nimport Vue from 'vue'\nimport Vuex from 'vuex'\nVue.use(Vuex)\nexport default new Vuex.Store({\n  state: {\n    firstName:'Raymond',\n    lastName:'Camden'\n  },\n  getters: {\n    name(state) {\n      return state.firstName + ' ' + state.lastName;\n    }\n  },\n  modules: {\n    resume: {\n      state: {\n        forHire:true,\n        jobs: [\n          \"Librarian\", \n          \"Jedi\",\n          \"Cat Herder\"\n        ]\n      },\n      getters: {\n        totalJobs(state) {\n          return state.jobs.length;\n        }\n      }\n    }\n  }\n})\n```", "```js\ntotalJobs(state, anyArgument, rootState)\n```", "```js\nfirst name {{ $store.state.firstName }}<br/>\nfor hire? {{ $store.state.resume.forHire }}<br/>\n```", "```js\nfull name {{ $store.getters.name }}<br/>\ntotal jobs {{ $store.getters.totalJobs }}<br/>\n```", "```js\nmodules: {\n  resume: {\n    namespaced: true,\n    state: {\n      forHire:true,\n      jobs: [\n        \"Librarian\", \n        \"Jedi\",\n        \"Cat Herder\"\n      ]\n    },\n    getters: {\n      totalJobs(state) {\n        return state.jobs.length;\n      }\n    }\n  }\n}\n```", "```js\n      state: {\n        firstName:'Raymond',\n        lastName:'Camden'\n      },\n      getters: {\n        name(state) {\n          return state.firstName + ' ' + state.lastName;\n        }\n      },\n    ```", "```js\n      modules: {\n        resume: {\n          state: {\n            forHire:true,\n            jobs: [\n              \"Librarian\", \n              \"Jedi\",\n              \"Cat Herder\"\n            ]\n          },\n          getters: {\n            totalJobs(state) {\n              return state.jobs.length;\n            }\n          }\n        },\n    ```", "```js\n    export default {\n            state: {\n                websites: [\n                    \"https://www.raymondcamden.com\",\n                    \"https://codabreaker.rocks\"\n                ]\n            },\n            mutations: {\n                addSite(state, url) {\n                    state.websites.push(url);\n                }\n            }\n    }\n    ```", "```js\n    import portfolio from './portfolio.js';\n    ```", "```js\n      modules: {\n        resume: {\n          state: {\n            forHire:true,\n            jobs: [\n              \"Librarian\", \n              \"Jedi\",\n              \"Cat Herder\"\n            ]\n          },\n          getters: {\n            totalJobs(state) {\n              return state.jobs.length;\n            }\n          }\n        },\n        portfolio\n      }\n    ```", "```js\n        <p>\n        My name is {{ $store.getters.name }} and I \n        <span v-if=\"$store.state.resume.forHire\">\n            am looking for work!\n        </span><span v-else>\n            am not looking for work.\n        </span>\n        </p>\n        <p>\n          I've had {{ $store.getters.totalJobs }} total jobs. \n        </p>\n        <h2>Portfolio</h2>\n        <ul>\n          <li \n            v-for=\"(site,idx) in $store.state.portfolio.websites\"\n            :key=\"idx\"><a :href=\"site\" target=\"_new\">{{ site }}</a></li>\n        </ul>\n    ```", "```js\n        <p>\n          <input type=\"url\" placeholder=\"New site for portfolio\"         v-model=\"site\">\n          <button @click=\"addSite\">Add Site</button>\n        </p>\n    ```", "```js\n    export default {\n      name: 'app',\n      data() {\n        return {\n          site:''\n        }\n      },\n      methods: {\n        addSite() {\n          this.$store.commit('addSite', this.site);\n          this.site = '';\n        }\n      }\n    }\n    ```", "```js\nclass Cat extends Model {\n  static entity = 'cats'\n  static fields () {\n    return {\n      id: this.attr(null),\n      name: this.string(''),\n      age: this.number(0),\n      adoptable: this.boolean(true)\n    }\n  }\n}\n```"]