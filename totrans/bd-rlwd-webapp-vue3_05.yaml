- en: '5'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '5'
- en: Building a Recipe App with Vuetify
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Vuetify构建食谱应用
- en: In this chapter, we’ll leverage the power of a third-party component library
    to quickly scaffold out a user interface and explore the powers and usage of a
    store in the context of an app. We will build a meal planner where a user can
    browse recipes to add them to a weekly calendar. The state of the week planner
    will be stored on the user’s machine to make sure it’s available on returning
    visits.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将利用第三方组件库的强大功能，快速构建用户界面，并探讨在应用上下文中存储的权力和使用方法。我们将构建一个餐单规划器，用户可以浏览食谱并将其添加到每周日历中。周规划器的状态将存储在用户的机器上，以确保在返回访问时可用。
- en: 'In this chapter, we’ll cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Applying and customizing Vuetify to scaffold out views
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用和自定义Vuetify以构建视图
- en: Speeding up development using a component library
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用组件库加速开发
- en: Refactoring strategies
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重构策略
- en: Understanding state
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解状态
- en: The usefulness of structuring stores using Pinia
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Pinia结构化存储的有用性
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: We’ll be using **Vuetify** ([https://vuetifyjs.com/en/](https://vuetifyjs.com/en/))
    in this chapter, a popular component library for Vue.js 3 applications. We also
    need to register for an API key at [https://spoonacular.com/](https://spoonacular.com/)
    to retrieve recipe data.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用**Vuetify** ([https://vuetifyjs.com/en/](https://vuetifyjs.com/en/))，这是一个Vue.js
    3应用的流行组件库。我们还需要在[https://spoonacular.com/](https://spoonacular.com/)注册一个API密钥以检索食谱数据。
- en: To manage our applications’ state, we’ll use `localStorage` in our app.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 为了管理我们应用程序的状态，我们将在我们的应用中使用`localStorage`。
- en: 'The code for this chapter can be found in this book’s GitHub repository: [https://github.com/PacktPublishing/Building-Real-world-Web-Applications-with-Vue.js-3/tree/main/05.mealplanner](https://github.com/PacktPublishing/Building-Real-world-Web-Applications-with-Vue.js-3/tree/main/05.mealplanner).'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码可以在本书的GitHub存储库中找到：[https://github.com/PacktPublishing/Building-Real-world-Web-Applications-with-Vue.js-3/tree/main/05.mealplanner](https://github.com/PacktPublishing/Building-Real-world-Web-Applications-with-Vue.js-3/tree/main/05.mealplanner)。
- en: A new Vue project
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个新的Vue项目
- en: 'We’re ready to initialize a new project, but we’ll use the Vuetify installer
    this time. Vuetify is a wrapper around the Vue installer, with presets for common
    Vuetify project configurations. In the CLI, type the following command to proceed
    to the next steps of the installer wizard:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们准备好初始化一个新的项目，但这次我们将使用Vuetify安装程序。Vuetify是Vue安装程序的包装器，为常见的Vuetify项目配置提供了预设。在CLI中，输入以下命令以进入安装向导的下一步：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now, do the following:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，执行以下操作：
- en: Choose `vue-meal-planner` as the project’s name.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将项目名称选择为`vue-meal-planner`。
- en: Use the **Base** (Vuetify, VueRouter) installation.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**基础**（Vuetify，VueRouter）安装。
- en: Select **TypeScript** using the arrow keys.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用箭头键选择**TypeScript**。
- en: Select the **npm** option to install the dependencies.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**npm**选项来安装依赖项。
- en: 'If you navigate to the new projects folder, you can run the local development
    server with `npm run dev`. The result should look very similar to what’s shown
    in *Figure 5**.1*:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你导航到新的项目文件夹，你可以使用 `npm run dev` 来运行本地开发服务器。结果应该看起来非常类似于*图5.1*1所示：
- en: '![Figure 5.1 – The initialized Vuetify application](img/B19563_05_01.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![图5.1 – 初始化的Vuetify应用](img/B19563_05_01.jpg)'
- en: Figure 5.1 – The initialized Vuetify application
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.1 – 初始化的Vuetify应用
- en: 'Before we continue, we also need an API key to make the example a bit closer
    to reality. This will also allow us to search for actual recipes. To register
    at Spoonacular, you can follow these steps:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续之前，我们还需要一个API密钥，以便使示例更接近现实。这将使我们能够搜索实际的食谱。要在Spoonacular注册，请按照以下步骤操作：
- en: Visit [https://spoonacular.com/](https://spoonacular.com/).
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问[https://spoonacular.com/](https://spoonacular.com/)。
- en: Navigate to the **Food** API.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**食品**API。
- en: Sign up via **Email** and choose a password.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过**电子邮件**注册并选择一个密码。
- en: Confirm your email address to complete the registration process.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认你的电子邮件地址以完成注册过程。
- en: After logging in, go to **Profile** to reveal the API key.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录后，前往**个人资料**以显示API密钥。
- en: 'Create a `.env` file in the root of your project and add the following line:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的项目根目录中创建一个`.env`文件，并添加以下行：
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: We are now ready to create a meal planner application.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在准备好创建一个餐单规划应用。
- en: Let’s get cooking
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 让我们开始烹饪
- en: 'First, we’ll make sure we have a decent boilerplate project to begin with and
    start by replacing the contents of `App.vue` with the following:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们要确保我们有一个不错的样板项目开始，并开始用以下内容替换`App.vue`的内容：
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We’ll expand on this later. Note that in the generated Vue component, the order
    of the `<template>` and `<script>` tags is different. I prefer starting with the
    `<script>` tag because that holds the logic that ties to the `<template>` tag,
    but both are valid:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们稍后会在此基础上进行扩展。请注意，在生成的 Vue 组件中，`<template>` 和 `<script>` 标签的顺序与我们的示例不同。我更喜欢从
    `<script>` 标签开始，因为它包含与 `<template>` 标签相关的逻辑，但两者都是有效的：
- en: '![Figure 5.2 – The template and script tag have a different order than in our
    examples](img/B19563_05_02.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.2 – 模板和 `script` 标签的顺序与我们的示例不同](img/B19563_05_02.jpg)'
- en: Figure 5.2 – The template and script tag have a different order than in our
    examples
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.2 – 模板和 `script` 标签的顺序与我们的示例不同
- en: On the home view, we will build our meal planner as a representation of the
    upcoming 7 days. First, we’ll start with a component that can render several days
    based on a given date.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在主页视图中，我们将构建我们的餐计划器作为未来 7 天的表示。首先，我们将从一个可以基于给定日期渲染多个天数的组件开始。
- en: 'We’ll create a component in the `components` folder called `CalendarDays.vue`:
    [https://github.com/PacktPublishing/Building-Real-world-Web-Applications-with-Vue.js-3/blob/main/05.mealplanner/.notes/5.1-CalendarDays.vue](https://github.com/PacktPublishing/Building-Real-world-Web-Applications-with-Vue.js-3/blob/main/05.mealplanner/.notes/5.1-CalendarDays.vue).'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在 `components` 文件夹中创建一个名为 `CalendarDays.vue` 的组件：[https://github.com/PacktPublishing/Building-Real-world-Web-Applications-with-Vue.js-3/blob/main/05.mealplanner/.notes/5.1-CalendarDays.vue](https://github.com/PacktPublishing/Building-Real-world-Web-Applications-with-Vue.js-3/blob/main/05.mealplanner/.notes/5.1-CalendarDays.vue)。
- en: 'First, let’s take a look at the `script` tag. It accepts props so that it can
    execute the `generateCards` function, which generates an array of *cards* with
    a `date` property for each card. We’ve added the following content just to have
    something to show in the template:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们看看 `script` 标签。它接受属性，以便执行 `generateCards` 函数，该函数为每个卡片生成一个带有 `date` 属性的
    *cards* 数组。我们添加以下内容只是为了在模板中显示一些内容：
- en: '[PRE3]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In the template, we’re using the Vuetify `table` component to render a table.
    The Vuetify components are prefixed with the `v-` identifier.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在模板中，我们使用 Vuetify 的 `table` 组件来渲染表格。Vuetify 组件以 `v-` 标识符为前缀。
- en: 'We render the table rows using the generated entries from the cards array.
    We’ll expose the component to the view by creating a `MealPlanner.vue` component
    where we import our component:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用从卡片数组生成的条目来渲染表格行。我们将通过创建一个 `MealPlanner.vue` 组件并将我们的组件导入其中来将组件暴露给视图：
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: We’re not doing anything special here other than instantiating the `CalendarDays`
    component with our desired number of plannable days. While we’re in this folder,
    we can delete `HelloWorld.vue`, and replace the reference in the `views\Home.vue`
    component so that our application shows `MealPlanner` on the home page.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里没有做任何特别的事情，只是用我们想要的计划天数实例化了 `CalendarDays` 组件。当我们在这个文件夹中时，我们可以删除 `HelloWorld.vue`，并在
    `views\Home.vue` 组件中替换引用，以便我们的应用程序在主页上显示 `MealPlanner`。
- en: 'Let’s improve it by showing formatted dates. We’ll create a small composable
    for this in a to-be-created `composables` folder. Let’s call the file `formatters.ts`:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过显示格式化的日期来改进它。我们将为此在即将创建的 `composables` 文件夹中创建一个小型可组合组件。让我们称这个文件为 `formatters.ts`：
- en: '[PRE5]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Here, we’re just adding some clever code that spells out the first, second,
    or third suffixes based on the given date. We’re leveraging bits of the browser’s
    built-in APIs, but with a bit of extra formatting. We can now print out the dates
    in a readable format for our generated cards, but we’ll get to that in a moment.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们只是添加了一些聪明的代码，根据给定的日期来拼写第一、第二或第三后缀。我们利用了浏览器内置的API的一部分，但增加了一些额外的格式化。现在我们可以以可读的格式打印出生成的卡片上的日期，但我们会稍后再讨论这一点。
- en: 'Let’s also create a composable to help us interact with the Spoonacular API.
    We’ll create a file called `recipeApi.ts` in the `composables` folder. The contents
    should be familiar and resemble the functions we used in the previous chapter:
    [https://github.com/PacktPublishing/Building-Real-world-Web-Applications-with-Vue.js-3/blob/main/05.mealplanner/.notes/5.2-recipeApi.ts](https://github.com/PacktPublishing/Building-Real-world-Web-Applications-with-Vue.js-3/blob/main/05.mealplanner/.notes/5.2-recipeApi.ts).'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再创建一个可组合组件来帮助我们与 Spoonacular API 交互。我们将在 `composables` 文件夹中创建一个名为 `recipeApi.ts`
    的文件。内容应该熟悉，类似于我们在上一章中使用的函数：[https://github.com/PacktPublishing/Building-Real-world-Web-Applications-with-Vue.js-3/blob/main/05.mealplanner/.notes/5.2-recipeApi.ts](https://github.com/PacktPublishing/Building-Real-world-Web-Applications-with-Vue.js-3/blob/main/05.mealplanner/.notes/5.2-recipeApi.ts)。
- en: 'With the default installation of Vuetify, we ended up with a default `AppBar.vue`
    component in the `src/layouts/default` folder. Let’s modify it so that it fits
    the purpose of the app:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Vuetify 的默认安装，我们在 `src/layouts/default` 文件夹中得到了一个默认的 `AppBar.vue` 组件。让我们修改它，使其符合应用程序的目的：
- en: '[PRE6]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The Vuetify components make it relatively easy to build an app with sensible
    defaults. In the next section, we will learn how to quickly expand our application
    using the available components.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Vuetify 组件使得构建具有合理默认值的 app 相对容易。在下一节中，我们将学习如何快速扩展我们的应用程序，使用可用的组件。
- en: Quick development with Vuetify
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Vuetify 快速开发
- en: The app we’ve built so far isn’t much use to us yet. Let’s turn this into a
    working meal planner! Since we are going to want to abstract and compartmentalize,
    we’ll start by splitting some of the code of the `CalendarDays.vue` component.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们到目前为止构建的应用程序对我们来说还没有什么用处。让我们将其变成一个工作餐计划器！由于我们希望进行抽象和模块化，我们将从拆分 `CalendarDays.vue`
    组件的一些代码开始。
- en: 'First, we’ll create a new component, called `CalendarCard.vue`. We will use
    this to represent a calendar item and use the date formatter we’ve created:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将创建一个新的组件，命名为 `CalendarCard.vue`。我们将用它来表示日历项，并使用我们创建的日期格式化器：
- en: '[PRE7]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'In `CalendarDays.vue`, we can replace the inline representation by importing
    our newly created `CalendarCard` component:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `CalendarDays.vue` 中，我们可以通过导入我们新创建的 `CalendarCard` 组件来替换内联表示：
- en: '[PRE8]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Then, we’ll add the component to the template:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将组件添加到模板中：
- en: '[PRE9]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: We also need to add a new route that will be able to display all planned recipes.
    We’ll add the recipes later. First, we’ll create a table to display recipes. We’ll
    feed it recipes via a prop from another component.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要添加一个新的路由，以便能够显示所有计划中的食谱。我们将在稍后添加食谱。首先，我们将创建一个表格来显示食谱。我们将通过另一个组件的 prop 来提供食谱。
- en: 'Let’s create `RecipeTable.vue`: [https://github.com/PacktPublishing/Building-Real-world-Web-Applications-with-Vue.js-3/blob/main/05.mealplanner/.notes/5.3-RecipeTable.vue](https://github.com/PacktPublishing/Building-Real-world-Web-Applications-with-Vue.js-3/blob/main/05.mealplanner/.notes/5.3-RecipeTable.vue).'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建 `RecipeTable.vue`：[https://github.com/PacktPublishing/Building-Real-world-Web-Applications-with-Vue.js-3/blob/main/05.mealplanner/.notes/5.3-RecipeTable.vue](https://github.com/PacktPublishing/Building-Real-world-Web-Applications-with-Vue.js-3/blob/main/05.mealplanner/.notes/5.3-RecipeTable.vue).
- en: We’re using the Vuetify components to create a table representation of the list
    of recipes that will be provided in the property. The `openPreview` function (*lines
    2, 14-16, and 34*) is one of the features that the table will support in the future.
    When we’re implementing this, we will make sure that the emitted event will be
    picked up by the parent component. Let’s quickly build the parent component.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用 Vuetify 组件来创建一个表格表示将要提供的食谱列表。`openPreview` 函数（*第 2、14-16 和 34 行*）是表格未来将支持的功能之一。当我们实现这一点时，我们将确保发出的事件将被父组件捕获。让我们快速构建父组件。
- en: 'Let’s create a `RecipesList.vue` component. It will feature the table for displaying
    past and future recipes, using Vuetify components: [https://github.com/PacktPublishing/Building-Real-world-Web-Applications-with-Vue.js-3/blob/main/05.mealplanner/.notes/5.4-RecipesList.vue](https://github.com/PacktPublishing/Building-Real-world-Web-Applications-with-Vue.js-3/blob/main/05.mealplanner/.notes/5.4-RecipesList.vue).'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个 `RecipesList.vue` 组件。它将使用 Vuetify 组件来展示过去和未来的食谱表格：[https://github.com/PacktPublishing/Building-Real-world-Web-Applications-with-Vue.js-3/blob/main/05.mealplanner/.notes/5.4-RecipesList.vue](https://github.com/PacktPublishing/Building-Real-world-Web-Applications-with-Vue.js-3/blob/main/05.mealplanner/.notes/5.4-RecipesList.vue).
- en: I’ve added a little bit of code to generate some mock data (*lines 12-24*).
    It can sometimes be helpful to focus on the template, and in those cases, it’s
    helpful to be able to have granular control over the data and support multiple
    scenarios. When writing the unit tests to match this file, you could even reuse
    this code!
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我添加了一些代码来生成一些模拟数据（*第 12-24 行*）。有时专注于模板可能会有所帮助，在这些情况下，能够对数据进行细粒度控制并支持多种场景会很有帮助。在编写匹配此文件的单元测试时，甚至可以重用此代码！
- en: The other part is how we’re listening to the event that gets emitted from the
    `RecipeTable` component (*lines 69 and 76*). We trigger the `openPreview` function
    (*lines 26-28*) on the click event. We’ll also need a view and a route to be able
    to navigate to these components.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面是如何监听从 `RecipeTable` 组件发出的事件（*第 69 和 76 行*）。我们在点击事件上触发 `openPreview` 函数（*第
    26-28 行*）。我们还需要一个视图和一个路由来能够导航到这些组件。
- en: 'Let’s create a `RecipeView.vue` component in the `src/views` folder that simply
    loads our component:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在 `src/views` 文件夹中创建一个名为 `RecipeView.vue` 的组件，它简单地加载我们的组件：
- en: '[PRE10]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Next, we’ll expand the route configuration, which Vuetify generated for us
    in `src/router/index.ts`:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将扩展Vuetify为我们生成的路由配置，位于 `src/router/index.ts`：
- en: '[PRE11]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Finally, we can update `src/layouts/default/AppBar.vue`:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以更新 `src/layouts/default/AppBar.vue`：
- en: '[PRE12]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'With these lines of code, we’ve added a hamburger menu with a toggle. It just
    works! This is a very powerful feature of using a component library: it not only
    provides styled components but also provides commonly used patterns for interaction.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这些代码行，我们添加了一个带有切换功能的汉堡菜单。它只需按一下即可工作！这是使用组件库的一个非常强大的功能：它不仅提供了样式化的组件，还提供了常用的交互模式。
- en: I highly recommend checking out the Vuetify documentation as it provides an
    extensive list of the available components and examples of how to use them. In
    the app we’re building, we’re only touching lightly upon the usage of the component
    library, but you also have the option of optimizing the components so that they
    fit a more specific goal or purpose.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我强烈建议查看Vuetify文档，因为它提供了可用的组件的详尽列表以及如何使用它们的示例。在我们正在构建的应用中，我们只是轻触组件库的使用，但你也有优化组件以适应更具体目标或目的的选项。
- en: We can now navigate to two different views and build a limited version of the
    final app. In the next section, we’ll connect the Spoonacular recipes to our app!
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以导航到两个不同的视图并构建最终应用的有限版本。在下一节中，我们将连接Spoonacular食谱到我们的应用！
- en: Connecting the recipes to our app
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将食谱连接到我们的应用
- en: In this section, we’ll connect the API to our app, which allows users to start
    planning meals for upcoming days. We’ll explore patterns to interact with an app
    using the Vuetify components.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将API连接到我们的应用，这使用户能够开始为即将到来的日子规划餐点。我们将探讨使用Vuetify组件与应用交互的模式。
- en: A bit of additional setup
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一些额外的设置
- en: 'Because we are going to deal with asynchronous data, we’ll add some helper
    components. First, we’ll create an `AppLoader.vue` component in the `src/components`
    folder, which acts as a loading indicator:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们将处理异步数据，我们将添加一些辅助组件。首先，我们在 `src/components` 文件夹中创建一个名为 `AppLoader.vue` 的组件，它充当加载指示器：
- en: '[PRE13]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'And while we’re at it, we can also add a dedicated component to handle our
    links. We’ll name it `AppLink.vue`:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续进行的同时，我们还可以添加一个专门处理链接的组件。我们将命名为 `AppLink.vue`：
- en: '[PRE14]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'We can insert `AppLink` into `AppBar.vue` immediately by replacing `router-link`
    with our new component. This component adds style across our applications’ links.
    Note that we’re keeping the markup deliberately close to the original `router-link`:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以直接将 `AppLink` 插入到 `AppBar.vue` 中，通过将 `router-link` 替换为我们的新组件。此组件为我们的应用程序中的链接添加样式。请注意，我们故意将标记保持接近原始的
    `router-link`：
- en: '[PRE15]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Now that we can navigate, let’s continue by exposing the data from the API in
    our application.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们能够导航了，让我们继续通过在应用中公开API数据来继续。
- en: Our API connection
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的API连接
- en: We’ll now focus on the `CalendarCard.vue` and `CalendarDays.vue` components.
    We’ll add functionalities to search for a recipe and add it to a day, view it,
    and remove it.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将专注于 `CalendarCard.vue` 和 `CalendarDays.vue` 组件。我们将添加搜索食谱并将其添加到一天、查看它以及删除它的功能。
- en: 'We’ll start in `CalendarCard.vue` by adding an event to signal that a user
    selected a certain date:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从 `CalendarCard.vue` 开始，添加一个事件来表示用户选择了一个特定的日期：
- en: '[PRE16]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'In the user interface, we’ve added a button that emits the current card when
    it’s clicked. Now, let’s modify `CalendarDays.vue` so that it picks up this event
    and shows a dialog to search for recipes:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在用户界面中，我们添加了一个按钮，当点击时它会发出当前卡片。现在，让我们修改 `CalendarDays.vue` 以使其能够捕捉这个事件并显示一个对话框来搜索食谱：
- en: '[PRE17]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: In the updated code, we’re storing the state of the dialog in a newly created
    variable and using a component provided by Vuetify to open a dialog, where we
    can also close and restore the variables to their initial values.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在更新的代码中，我们将对话框的状态存储在一个新创建的变量中，并使用Vuetify提供的组件打开一个对话框，我们还可以关闭并恢复变量到它们的初始值。
- en: Selecting a recipe
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择食谱
- en: Next, we’ll build a small search component to display in the dialog. This will
    allow users to search for a recipe. When selected, we’ll pass the details of the
    recipe to the `CalendarDays.vue` component.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将构建一个小型搜索组件以在对话框中显示。这将允许用户搜索食谱。当选择后，我们将食谱的详细信息传递给 `CalendarDays.vue` 组件。
- en: 'Create a file called `RecipeSearch.vue`:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个名为 `RecipeSearch.vue` 的文件：
- en: '[PRE18]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: We’re making use of a debounced watcher, the same as with the Marvel search
    component. We can use the composable to retrieve the results based on a simple
    text-based search query and display the results in a list.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: When a user clicks on a list item, we’ll emit the event and send the corresponding
    recipe as context to the parent component.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: Let’s implement the addition and removal of recipes on a day!
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: Adding and removing a meal
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Implementing the search functionality is now very easy! We can import the component
    in the setup tag and then place the components’ tags in the template. We do have
    to add a listener since we’re emitting an event on the search component.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s take a look:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'With that, we’ve added the `recipe-search` component to the page. With the
    `insertRecipeOnDay` function, we can modify our cards collection by adding the
    selected recipe (which was emitted through the search component) and adding it
    to a new property on a card: today.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: 'Before we display recipes for a day, let’s also add a method for removing a
    recipe on a day based on a recipe ID and the date (this way, we can support multiple
    recipes on one day and similar recipes across multiple days). We can add the following
    function to the script tag:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'This function simply modifies the `today` collection by filtering out any recipe
    that matches the given ID and date. In the template, we’ll add a listener for
    an event on the `CalenderCard.vue` component, like this:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: <script setup lang="ts">import { useFormatDate } from "@/composables/formatters";
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: import AppLink from "./AppLink.vue";
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: const emits = defineEmits(["daySelected", "recipeRemoved"]);
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: 'const addRecipeToDay = (card: Card): void => {'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: emits("daySelected", card);
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: 'const recipeRemoved = (recipe: Today, date: Date): void => {'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: emits("recipeRemoved", recipe, date);
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: interface Today {
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: 'id: number;'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: 'title: string;'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: 'readyInMinutes: number;'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: interface Card {
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: 'date: Date;'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: 'today: Today[];'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: const props = defineProps<{
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: 'card: Card;'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: '}>();'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: </script>
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: <template>
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: <v-sheet class="d-flex justify-space-between">
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: <v-sheet class="ma-2 pa-2">
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: <h2 class="text-h2">{{ useFormatDate(card.date) }}</h2>
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: </v-sheet>
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: <v-sheet class="ma-2 pa-2">
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: <v-btn text @click="addRecipeToDay(card)" icon="mdi-plus"></v-btn>
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: </v-sheet>
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: </v-sheet>
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: <v-col>
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: <v-card v-for="today in card.today" :key="today.id" class="my-4">
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: <v-card-title>
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: <app-link :to="/recipe/${today.id}">{{ today.title }}</app-link>
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: </v-card-title>
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: <v-card-text>{{ today.readyInMinutes }} minutes</v-card-text>
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: <v-card-actions>
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: <v-spacer></v-spacer>
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: <v-btn
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: text
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: icon="mdi-trash-can-outline"
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: '@click="recipeRemoved(today, card.date)"'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: '></v-btn>'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: </v-card-actions>
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: </v-card>
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: </v-col>
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: </template>
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: <script setup lang="ts">import { ref, onMounted } from "vue";
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: import type { Ref } from "vue";
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: import type { Recipe } from "@/types/spoonacular";
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: import { useRecipeInformation } from "@/composables/recipeApi";
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: import AppLoader from "./AppLoader.vue";
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: const props = defineProps({
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: 'id: {'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: 'type: Number,'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: 'required: true,'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: '},'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: 'activePanel: {'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: 'type: Number,'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 'type: Number,'
- en: 'default: 0,'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 'default: 0,'
- en: '},'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '});'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: 'const recipe: Ref<Recipe | null> = ref(null);'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 'const recipe: Ref<Recipe | null> = ref(null);'
- en: 'const getRecipeDetails = async (id: number): Promise<void> => {'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 'const getRecipeDetails = async (id: number): Promise<void> => {'
- en: const data = (await useRecipeInformation(id.toString())) as Recipe;
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: const data = (await useRecipeInformation(id.toString())) as Recipe;
- en: recipe.value = data;
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: recipe.value = data;
- en: '};'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: const panel = ref<number | null>(1);
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: const panel = ref<number | null>(1);
- en: onMounted(() => {
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: onMounted(() => {
- en: getRecipeDetails(props.activePanel);
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: getRecipeDetails(props.activePanel);
- en: '});'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: </script>
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: <template>
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <AppLoader v-if="!recipe" />
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: <AppLoader v-if="!recipe" />
- en: <v-container v-else fluid>
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: <v-container v-else fluid>
- en: <v-col>
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: <v-col>
- en: <v-img height="200" :src="img/recipe.image" cover v-if="recipe.image" />
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: <v-img height="200" :src="img/recipe.image" cover v-if="recipe.image" />
- en: <h1 class="text-h3 ma-4">{{ recipe.title }}</h1>
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: <h1 class="text-h3 ma-4">{{ recipe.title }}</h1>
- en: <v-chip
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: <v-chip
- en: class="ma-2 my-4"
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: class="ma-2 my-4"
- en: color="primary"
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: color="primary"
- en: :key="cuisine"
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: :key="cuisine"
- en: v-for="cuisine in recipe.cuisines"
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: v-for="cuisine in recipe.cuisines"
- en: '>'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '{{ cuisine }}'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '{{ cuisine }}'
- en: </v-chip>
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: </v-chip>
- en: <v-expansion-panels variant="accordion" v-model="panel">
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: <v-expansion-panels variant="accordion" v-model="panel">
- en: <v-expansion-panel>
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: <v-expansion-panel>
- en: <v-expansion-panel-title class="text-h5"
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: <v-expansion-panel-title class="text-h5"
- en: '>Summary</v-expansion-panel-title'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '>摘要</v-expansion-panel-title'
- en: '>'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <v-expansion-panel-text>
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: <v-expansion-panel-text>
- en: <div v-html="recipe.summary" class="text-body-1"></div>
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: <div v-html="recipe.summary" class="text-body-1"></div>
- en: </v-expansion-panel-text>
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: </v-expansion-panel-text>
- en: </v-expansion-panel>
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: </v-expansion-panel>
- en: <v-expansion-panel>
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: <v-expansion-panel>
- en: <v-expansion-panel-title class="text-h5"
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: <v-expansion-panel-title class="text-h5"
- en: '>Instructions</v-expansion-panel-title'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '>说明</v-expansion-panel-title'
- en: '>'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: <v-expansion-panel-text>
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: <v-expansion-panel-text>
- en: <div v-html="recipe.instructions" class="text-body-1"></div>
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: <div v-html="recipe.instructions" class="text-body-1"></div>
- en: </v-expansion-panel-text>
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: </v-expansion-panel-text>
- en: </v-expansion-panel>
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: </v-expansion-panel>
- en: </v-expansion-panels>
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: </v-expansion-panels>
- en: </v-col>
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: </v-col>
- en: </v-container>
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: </v-container>
- en: </template>
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: '[PRE23]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: <script setup lang="ts">import { useRouter } from "vue-router";
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: <script setup lang="ts">import { useRouter } from "vue-router";
- en: import CookingInstructions from "@/components/CookingInstructions.vue";
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: import CookingInstructions from "@/components/CookingInstructions.vue";
- en: const router = useRouter();
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: const router = useRouter();
- en: const recipeId = Number(router.currentRoute.value.params.id);
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: const recipeId = Number(router.currentRoute.value.params.id);
- en: </script>
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: <template>
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <cooking-instructions :id="recipeId" :active-panel="1" />
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: <cooking-instructions :id="recipeId" :active-panel="1" />
- en: </template>
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: '[PRE24]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: import { createRouter, createWebHistory } from 'vue-router'const routes = [
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: import { createRouter, createWebHistory } from 'vue-router'const routes = [
- en: '{'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: 'path: ''/'','
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 'path: ''/'','
- en: 'component: () => import(''@/layouts/default/Default.vue''),'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 'component: () => import(''@/layouts/default/Default.vue''),'
- en: 'children: ['
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 'children: ['
- en: '{'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: 'path: '''','
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 'path: '''','
- en: 'name: ''Home'','
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 'name: ''Home'','
- en: // route level code-splitting
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: // 路由级别的代码拆分
- en: // this generates a separate chunk (about.[hash].js) for this route
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: // 这为该路由生成一个单独的块（about.[hash].js）
- en: // which is lazy-loaded when the route is visited.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: // 当访问路由时按需加载。
- en: 'component: () => import(/* webpackChunkName: "home" */ ''@/views/Home.vue''),'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 'component: () => import(/* webpackChunkName: "home" */ ''@/views/Home.vue''),'
- en: '},'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '{'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: 'path: ''recipes'','
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 'path: ''recipes'','
- en: 'name: ''recipes'','
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 'name: ''recipes'','
- en: 'component: () => import(''@/views/RecipesView.vue'')'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 'component: () => import(''@/views/RecipesView.vue'')'
- en: '},'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '{'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: 'path: ''/recipe/:id'','
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 'path: ''/recipe/:id'','
- en: 'name: ''recipe'','
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 'name: ''recipe'','
- en: 'component: () => import(''../views/RecipeView.vue'')'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 'component: () => import(''../views/RecipeView.vue'')'
- en: '}'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '],'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '],'
- en: '},'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: ']'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: ']'
- en: const router = createRouter({
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: const router = createRouter({
- en: 'history: createWebHistory(process.env.BASE_URL),'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 'history: createWebHistory(process.env.BASE_URL),'
- en: routes,
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: routes,
- en: '})'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '})'
- en: export default router
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: export default router
- en: '[PRE25]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: npm install pinia
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: npm install pinia
- en: '[PRE26]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: /** * main.ts
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: /** * main.ts
- en: '*'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '*'
- en: '* Bootstraps Vuetify and other plugins then mounts the App'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '* 引入 Vuetify 和其他插件，然后挂载 App'
- en: '*/'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '*/'
- en: // Components
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: // 组件
- en: import App from './App.vue'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: import App from './App.vue'
- en: // Pinia
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: // Pinia
- en: import { createPinia } from 'pinia'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: import { createPinia } from 'pinia'
- en: // Composables
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: // 可组合函数
- en: import { createApp } from 'vue'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: import { createApp } from 'vue'
- en: // Plugins
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: // 插件
- en: import { registerPlugins } from '@/plugins'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: import { registerPlugins } from '@/plugins'
- en: const pinia = createPinia()
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: const pinia = createPinia()
- en: const app = createApp(App)
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: const app = createApp(App)
- en: registerPlugins(app)
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: registerPlugins(app)
- en: app.use(pinia)
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: app.use(pinia)
- en: app.mount('#app')
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: app.mount('#app')
- en: '[PRE27]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: import { defineStore } from "pinia";export const useCacheStore = defineStore('cache',
    () => {
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: import { defineStore } from "pinia";export const useCacheStore = defineStore('cache',
    () => {
- en: return { }
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: return { }
- en: '});'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: '[PRE28]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: import { defineStore } from "pinia";export const useCacheStore = defineStore('cache',
    () => {
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: import { defineStore } from "pinia";export const useCacheStore = defineStore('cache',
    () => {
- en: 'const cachedData = (): void => {}'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 'const cachedData = (): void => {}'
- en: 'const cacheData = (): void => {}'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 'const cacheData = (): void => {}'
- en: return { cachedData, cacheData }
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: return { cachedData, cacheData }
- en: '});'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: '[PRE29]'
  id: totrans-290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: import { ref } from "vue";import { defineStore } from "pinia";
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: import { ref } from "vue";import { defineStore } from "pinia";
- en: export const useCacheStore = defineStore('cache', () => {
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: export const useCacheStore = defineStore('cache', () => {
- en: const cache = ref<any>([]);
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: const cache = ref<any>([]);
- en: 'const cachedData = (key: string): any => {'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 'const cachedData = (key: string): any => {'
- en: try {
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: try {
- en: return cache.value[key]
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: return cache.value[key]
- en: '} catch (e) {'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: '} catch (e) {'
- en: return undefined;
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: return undefined;
- en: '}'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: 'const cacheData = (key: string, data: any): void => {'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 'const cacheData = (key: string, data: any): void => {'
- en: cache.value[key] = data
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: cache.value[key] = data
- en: '}'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: return { cachedData, cacheData }
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: return { cachedData, cacheData }
- en: '});'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: '[PRE30]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: import { useCacheStore } from "@/stores/cache";const store = useCacheStore();
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: import { useCacheStore } from "@/stores/cache";const store = useCacheStore();
- en: '[PRE31]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: <script setup lang="ts">import { ref, onMounted } from "vue";
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: <script setup lang="ts">import { ref, onMounted } from "vue";
- en: import type { Ref } from "vue";
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: import type { Ref } from "vue";
- en: import type { Recipe } from "@/types/spoonacular";
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: import type { Recipe } from "@/types/spoonacular";
- en: import { useRecipeInformation } from "@/composables/recipeApi";
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: import { useRecipeInformation } from "@/composables/recipeApi";
- en: import AppLoader from "./AppLoader.vue";
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: import AppLoader from "./AppLoader.vue";
- en: import { useCacheStore } from "@/stores/cache";
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: import { useCacheStore } from "@/stores/cache";
- en: const store = useCacheStore();
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: const store = useCacheStore();
- en: const props = defineProps({
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: const props = defineProps({
- en: 'id: {'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 'id: {'
- en: 'type: Number,'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 'type: Number,'
- en: 'required: true,'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 'required: true,'
- en: '},'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '});'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: 'const recipe: Ref<Recipe | null> = ref(null);'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 'const recipe: Ref<Recipe | null> = ref(null);'
- en: 'const getRecipeDetails = async (id: number): Promise<void> => {'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 'const getRecipeDetails = async (id: number): Promise<void> => {'
- en: const cacheKey = recipe-details-${props.id};
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: const cacheKey = recipe-details-${props.id};
- en: if (store.cachedData(cacheKey)) {
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: if (store.cachedData(cacheKey)) {
- en: recipe.value = store.cachedData(cacheKey) as Recipe;
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: recipe.value = store.cachedData(cacheKey) as Recipe;
- en: '} else {'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: '} else {'
- en: const data = (await useRecipeInformation(id.toString())) as Recipe;
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: const data = (await useRecipeInformation(id.toString())) as Recipe;
- en: store.cacheData(cacheKey, data);
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: store.cacheData(cacheKey, data);
- en: recipe.value = data;
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: recipe.value = data;
- en: '}'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '};'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: const panel = ref<number | null>(1);
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: const panel = ref<number | null>(1);
- en: onMounted(() => {
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: onMounted(() => {
- en: getRecipeDetails(props.id);
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: getRecipeDetails(props.id);
- en: '});'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: </script>
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: '[PRE32]'
  id: totrans-338
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: import { defineStore } from "pinia";export const usePlannerStore = defineStore('planner',
    () => {
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: import { defineStore } from "pinia";export const usePlannerStore = defineStore('planner',
    () => {
- en: '})'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: '})'
- en: '[PRE33]'
  id: totrans-341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: npm install @vueuse/core
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: npm install @vueuse/core
- en: '[PRE34]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: import { ref } from "vue";import { defineStore } from "pinia";
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: import { ref } from "vue";import { defineStore } from "pinia";
- en: import { useLocalStorage } from "@vueuse/core"
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: import { useLocalStorage } from "@vueuse/core"
- en: interface Recipe {
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: interface Recipe {
- en: 'id: number;'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 'id: number;'
- en: 'date: Date;'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: Date;'
- en: '}'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: export const usePlannerStore = defineStore('planner', () => {
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: export const usePlannerStore = defineStore('planner', () => {
- en: const recipes = ref<Recipe[] | any>(useLocalStorage('planner', []));
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: const recipes = ref<Recipe[] | any>(useLocalStorage('planner', []));
- en: return { recipes }
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: return { recipes }
- en: '})'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: '})'
- en: '[PRE35]'
  id: totrans-354
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: import { ref } from "vue";import { defineStore } from "pinia";
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: import { ref } from "vue";import { defineStore } from "pinia";
- en: import { useLocalStorage } from "@vueuse/core"
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: import { useLocalStorage } from "@vueuse/core"
- en: interface Recipe {
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: interface Recipe {
- en: 'id: number;'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 'id: number;'
- en: 'date: Date;'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: Date;'
- en: '}'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: export const usePlannerStore = defineStore('planner', () => {
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: export const usePlannerStore = defineStore('planner', () => {
- en: const recipes = ref<Recipe[] | any>(useLocalStorage('planner', []));
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: const recipes = ref<Recipe[] | any>(useLocalStorage('planner', []));
- en: 'const addRecipe = (recipe: Recipe) => {'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 'const addRecipe = (recipe: Recipe) => {'
- en: recipes.value.push(recipe)
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: recipes.value.push(recipe)
- en: '}'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: 'const removeRecipeByIdDate = (options: { id: number, date: Date }) => {'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 'const removeRecipeByIdDate = (options: { id: number, date: Date }) => {'
- en: const { id, date } = options;
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: const { id, date } = options;
- en: 'const recipeIndex: number = recipes.value.findIndex((recipe: Recipe) => recipe.id
    === id && new Date(recipe.date).setHours(0, 0, 0, 0) === new Date(date).setHours(0,
    0, 0, 0))'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 'const recipeIndex: number = recipes.value.findIndex((recipe: Recipe) => recipe.id
    === id && new Date(recipe.date).setHours(0, 0, 0, 0) === new Date(date).setHours(0,
    0, 0, 0))'
- en: recipes.value.splice(recipeIndex, 1)
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: recipes.value.splice(recipeIndex, 1)
- en: '}'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: return { recipes, addRecipe, removeRecipeByIdDate }
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: return { recipes, addRecipe, removeRecipeByIdDate }
- en: '})'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: '})'
- en: '[PRE36]'
  id: totrans-373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: <script setup lang="ts">import { storeToRefs } from "pinia";
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: <script setup lang="ts">import { storeToRefs } from "pinia";
- en: import CalendarDays from "./CalendarDays.vue";
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: import CalendarDays from "./CalendarDays.vue";
- en: import { usePlannerStore } from "@/stores/planner";
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: import { usePlannerStore } from "@/stores/planner";
- en: const store = usePlannerStore();
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: const store = usePlannerStore();
- en: const { recipes } = storeToRefs(store);
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: const { recipes } = storeToRefs(store);
- en: </script>
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: <template>
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <calendar-days
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: <calendar-days
- en: :date="new Date()"
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: :date="new Date()"
- en: :days="7"
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: :days="7"
- en: :recipes="recipes"
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: :recipes="recipes"
- en: :key="recipes-${recipes.length}"
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: :key="recipes-${recipes.length}"
- en: />
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: />
- en: </template>
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: '[PRE37]'
  id: totrans-388
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'const props = defineProps({  date: {'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 'const props = defineProps({  date: {'
- en: 'type: Date,'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 'type: Date,'
- en: 'required: true,'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 'required: true,'
- en: '},'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: 'days: {'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 'days: {'
- en: 'type: Number,'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 'type: Number,'
- en: 'required: false,'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 'required: false,'
- en: 'default: 7,'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 'default: 7,'
- en: '},'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: 'recipes: {'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 'recipes: {'
- en: 'type: Array,'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 'type: Array,'
- en: 'required: false,'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 'required: false,'
- en: 'value: [],'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 'value: [],'
- en: '},'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '});'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: 'const generateCards = (startDate: Date, numberOfDays: number): Card[] => {'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 'const generateCards = (startDate: Date, numberOfDays: number): Card[] => {'
- en: 'const cards: Card[] = [];'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 'const cards: Card[] = [];'
- en: const currentDate = new Date(startDate);
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: const currentDate = new Date(startDate);
- en: for (let i = 0; i < numberOfDays; i++) {
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: for (let i = 0; i < numberOfDays; i++) {
- en: const date = new Date(currentDate.getTime());
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: const date = new Date(currentDate.getTime());
- en: const content = Card ${i + 1};
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: const content = Card ${i + 1};
- en: 'const recipesThisDay = props.recipes?.filter((recipe: any) => {'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 'const recipesThisDay = props.recipes?.filter((recipe: any) => {'
- en: const recipeDate = new Date(recipe.date).setHours(0, 0, 0, 0);
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: const recipeDate = new Date(recipe.date).setHours(0, 0, 0, 0);
- en: return recipeDate === date.setHours(0, 0, 0, 0);
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: return recipeDate === date.setHours(0, 0, 0, 0);
- en: '}) as Today[];'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: '}) as Today[];'
- en: 'cards.push({ date, content, today: recipesThisDay });'
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 'cards.push({ date, content, today: recipesThisDay });'
- en: currentDate.setDate(currentDate.getDate() + 1);
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: currentDate.setDate(currentDate.getDate() + 1);
- en: '}'
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: return cards;
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: return cards;
- en: '};'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '[PRE38]'
  id: totrans-419
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'const insertRecipeOnDay = (recipe: RecipeResults): void => {  if (dateSelected.value)
    {'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 'const insertRecipeOnDay = (recipe: RecipeResults): void => {  if (dateSelected.value)
    {'
- en: 'store.addRecipe({ ...recipe, date: dateSelected.value });'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 'store.addRecipe({ ...recipe, date: dateSelected.value });'
- en: recipeDialogClose();
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: recipeDialogClose();
- en: '}'
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '};'
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '[PRE39]'
  id: totrans-425
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: <script setup lang="ts">import { ref } from "vue";
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: <script setup lang="ts">import { ref } from "vue";
- en: import type { Ref } from "vue";
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: import type { Ref } from "vue";
- en: import type { Recipe, RecipeResults } from "@/types/spoonacular";
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: import type { Recipe, RecipeResults } from "@/types/spoonacular";
- en: import { useRecipeInformation } from "@/composables/recipeApi";
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: import { useRecipeInformation } from "@/composables/recipeApi";
- en: import { usePlannerStore } from "@/stores/planner";
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: import { usePlannerStore } from "@/stores/planner";
- en: const store = usePlannerStore();
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: const store = usePlannerStore();
- en: import { useCacheStore } from "@/stores/cache";
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: import { useCacheStore } from "@/stores/cache";
- en: const cacheStore = useCacheStore();
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: const cacheStore = useCacheStore();
- en: // …abbreviated
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: // …abbreviated
- en: 'const preloadRecipe = async (id: number): Promise<void> => {'
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 'const preloadRecipe = async (id: number): Promise<void> => {'
- en: const cacheKey = recipe-details-${id};
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: const cacheKey = recipe-details-${id};
- en: if (!cacheStore.cachedData(cacheKey)) {
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: if (!cacheStore.cachedData(cacheKey)) {
- en: const data = (await useRecipeInformation(id.toString())) as Recipe;
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: const data = (await useRecipeInformation(id.toString())) as Recipe;
- en: cacheStore.cacheData(cacheKey, data);
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: cacheStore.cacheData(cacheKey, data);
- en: '}'
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '};'
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: 'const insertRecipeOnDay = (recipe: RecipeResults): void => {'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 'const insertRecipeOnDay = (recipe: RecipeResults): void => {'
- en: if (dateSelected.value) {
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: if (dateSelected.value) {
- en: preloadRecipe(recipe.id);
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: preloadRecipe(recipe.id);
- en: 'store.addRecipe({ ...recipe, date: dateSelected.value });'
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 'store.addRecipe({ ...recipe, date: dateSelected.value });'
- en: recipeDialogClose();
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: recipeDialogClose();
- en: '}'
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '};'
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: // …abbreviated
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: // …abbreviated
- en: </script>
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: '[PRE40]'
  id: totrans-451
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: <calendar-card  :card="card"
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: <calendar-card  :card="card"
- en: '@daySelected="recipeDialogOpen"'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: '@daySelected="recipeDialogOpen"'
- en: '@recipeRemoved="removeRecipeFromDay"'
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: '@recipeRemoved="removeRecipeFromDay"'
- en: />
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: />
- en: '[PRE41]'
  id: totrans-456
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: const emits = defineEmits(["daySelected", "recipeRemoved"]);// …abbreviated
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: const emits = defineEmits(["daySelected", "recipeRemoved"]);// …abbreviated
- en: 'const recipeRemoved = (recipe: Today, date: Date): void => {'
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: 'const recipeRemoved = (recipe: Today, date: Date): void => {'
- en: emits("recipeRemoved", recipe, date);
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: emits("recipeRemoved", recipe, date);
- en: '};'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '[PRE42]'
  id: totrans-461
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: <script setup lang="ts">import { useFormatDate } from "@/composables/formatters";
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: <script setup lang="ts">import { useFormatDate } from "@/composables/formatters";
- en: const emits = defineEmits(["daySelected"]);
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: const emits = defineEmits(["daySelected"]);
- en: import { usePlannerStore } from "@/stores/planner";
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: import { usePlannerStore } from "@/stores/planner";
- en: const store = usePlannerStore();
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: const store = usePlannerStore();
- en: import AppLink from "./AppLink.vue";
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: import AppLink from "./AppLink.vue";
- en: interface Today {
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: interface Today {
- en: 'id: number;'
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 'id: number;'
- en: 'title: string;'
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: 'title: string;'
- en: 'readyInMinutes: number;'
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 'readyInMinutes: number;'
- en: '}'
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: interface Card {
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: interface Card {
- en: 'date: Date;'
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: Date;'
- en: 'today: Today[];'
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 'today: Today[];'
- en: '}'
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: const props = defineProps<{
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: const props = defineProps<{
- en: 'card: Card;'
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 'card: Card;'
- en: '}>();'
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: '}>();'
- en: 'const addRecipeToDay = (card: Card): void => {'
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: 'const addRecipeToDay = (card: Card): void => {'
- en: emits("daySelected", card);
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: emits("daySelected", card);
- en: '};'
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: 'const removeFromDay = (recipes: { id: number; date: Date }): void => {'
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 'const removeFromDay = (recipes: { id: number; date: Date }): void => {'
- en: const { id, date } = recipes;
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: const { id, date } = recipes;
- en: store.removeRecipeByIdDate({ id, date });
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: store.removeRecipeByIdDate({ id, date });
- en: '};'
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: '[PRE43]'
  id: totrans-487
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: <v-card-actions>  <v-spacer></v-spacer>
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: <v-card-actions>  <v-spacer></v-spacer>
- en: <v-btn
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: <v-btn
- en: text
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: text
- en: icon="mdi-trash-can-outline"
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: icon="mdi-trash-can-outline"
- en: '@click="removeFromDay({ id: today.id, date: card.date })"'
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: '@click="removeFromDay({ id: today.id, date: card.date })"'
- en: '></v-btn>'
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: '></v-btn>'
- en: </v-card-actions>
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: </v-card-actions>
- en: '[PRE44]'
  id: totrans-495
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: import { ref, computed } from "vue";import { defineStore } from "pinia";
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: import { ref, computed } from "vue";import { defineStore } from "pinia";
- en: import { useLocalStorage } from "@vueuse/core"
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: import { useLocalStorage } from "@vueuse/core"
- en: import type { Recipe } from "@/types/spoonacular";
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: import type { Recipe } from "@/types/spoonacular";
- en: interface RecipeList extends Recipe {
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: interface RecipeList extends Recipe {
- en: 'date: Date;'
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: Date;'
- en: '}'
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: export const usePlannerStore = defineStore('planner', () => {
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
- en: const recipes = ref<Recipe[] | any>(useLocalStorage('planner', []));
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
- en: const recipesSortedByDate = () =>
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
- en: 'recipes.value.sort((a: { date : Date }, b: { date: Date }) => new Date(a.date).getTime()
    < new Date(b.date).getTime() ? -1 : 1)'
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
- en: const pastRecipes = computed(() => {
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
- en: const sorted = recipesSortedByDate();
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
- en: 'return sorted.filter((recipe: RecipeList) => {'
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
- en: const date = new Date(recipe.date);
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
- en: return date < new Date();
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
- en: '}) as RecipeList[]'
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
- en: const futureRecipes = computed(() => {
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
- en: const sorted = recipesSortedByDate();
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
- en: 'return sorted.filter((recipe: RecipeList) => {'
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
- en: const date = new Date(recipe.date);
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
- en: return date >= new Date();
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
- en: '}) as RecipeList[];'
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
- en: 'const addRecipe = (recipe: Recipe) => {'
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
- en: console.log('addRecipe', recipe)
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
- en: recipes.value.push(recipe)
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
- en: 'const removeRecipeByIdDate = (options: { id: number, date: Date }) => {'
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
- en: const { id, date } = options;
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
- en: 'const recipeIndex: number = recipes.value.findIndex((recipe: Recipe) => recipe.id
    === id && new Date(recipe.date).setHours(0, 0, 0, 0) === new Date(date).setHours(0,
    0, 0, 0))'
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
- en: recipes.value.splice(recipeIndex, 1)
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
- en: return { recipes, pastRecipes, futureRecipes, addRecipe, removeRecipeByIdDate
    }
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
- en: '});'
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  id: totrans-531
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: <script setup lang="ts">import { ref, computed, onMounted } from "vue";
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
- en: import type { Ref } from "vue";
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
- en: import { storeToRefs } from "pinia";
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
- en: import type { Recipe } from "@/types/spoonacular";
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
- en: interface RecipeList extends Recipe {
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
- en: 'date: Date;'
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
- en: import RecipeTable from "./RecipeTable.vue";
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
- en: const { pastRecipes, futureRecipes } = storeToRefs(store);
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
- en: '// return a date in the future:'
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
- en: 'const addDays = (days: number): Date => {'
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
- en: const date = new Date();
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
- en: date.setDate(date.getDate() + days);
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
- en: return date;
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
- en: '// generate some mock data for now:'
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
- en: const recipes = [
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
- en: '{ id: 1, title: "test", date: addDays(1) },'
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
- en: '{ id: 2, title: "test2", date: addDays(1) },'
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
- en: '{ id: 2, title: "test3", date: addDays(-1) },'
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
- en: '];'
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
- en: 'const openPreview = (recipe: { title: string }): void => {'
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
- en: console.log(`opening recipe ${recipe.title}`);
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
- en: const pastRecipes = computed(() =>
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
- en: 'recipes.filter((recipe: RecipeList) => {'
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
- en: const date = new Date(recipe.date);
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
- en: return date < new Date();
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
- en: const futureRecipes = computed(
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
- en: () =>
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
- en: 'recipes.filter((recipe: RecipeList) => {'
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
- en: const date = new Date(recipe.date);
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
- en: return date >= new Date();
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
- en: '}) as RecipeList[]'
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
- en: );
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
- en: 'const tab: Ref<string> = ref("upcoming");'
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
- en: onMounted(() => {
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
- en: if (futureRecipes.value.length === 0) {
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
- en: tab.value = "past";
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
- en: '});'
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
- en: </script>
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  id: totrans-576
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: <script setup lang="ts">import { ref, onMounted } from "vue";
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
- en: import type { Ref } from "vue";
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
- en: import { storeToRefs } from "pinia";
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
- en: import type { Recipe } from "@/types/spoonacular";
  id: totrans-580
  prefs: []
  type: TYPE_NORMAL
- en: import { usePlannerStore } from "@/stores/planner";
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
- en: const store = usePlannerStore();
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
- en: import RecipeTable from "./RecipeTable.vue";
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
- en: import CookingInstructions from "./CookingInstructions.vue";
  id: totrans-584
  prefs: []
  type: TYPE_NORMAL
- en: import AppLink from "./AppLink.vue";
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
- en: const { pastRecipes, futureRecipes } = storeToRefs(store);
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
- en: 'const dialogVisible: Ref<boolean> = ref(false);'
  id: totrans-587
  prefs: []
  type: TYPE_NORMAL
- en: 'const selectedRecipe: Ref<Recipe | null> = ref(null);'
  id: totrans-588
  prefs: []
  type: TYPE_NORMAL
- en: 'const openPreview = (recipe: Recipe): void => {'
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
- en: selectedRecipe.value = recipe;
  id: totrans-590
  prefs: []
  type: TYPE_NORMAL
- en: dialogVisible.value = true;
  id: totrans-591
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-592
  prefs: []
  type: TYPE_NORMAL
- en: 'const tab: Ref<string> = ref("upcoming");'
  id: totrans-593
  prefs: []
  type: TYPE_NORMAL
- en: onMounted(() => {
  id: totrans-594
  prefs: []
  type: TYPE_NORMAL
- en: if (futureRecipes.length === 0) {
  id: totrans-595
  prefs: []
  type: TYPE_NORMAL
- en: tab.value = "past";
  id: totrans-596
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
- en: '});'
  id: totrans-598
  prefs: []
  type: TYPE_NORMAL
- en: </script>
  id: totrans-599
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  id: totrans-600
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: <template>  <div v-if="pastRecipes.length === 0 && futureRecipes.length ===
    0">
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
- en: No recipes yet. Add some to your planner!
  id: totrans-602
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  id: totrans-603
  prefs: []
  type: TYPE_NORMAL
- en: <div v-else>
  id: totrans-604
  prefs: []
  type: TYPE_NORMAL
- en: <!-- abbreviated -–>
  id: totrans-605
  prefs: []
  type: TYPE_NORMAL
- en: </v-window>
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
- en: <v-dialog v-model="dialogVisible" class="dialog" scrollable>
  id: totrans-607
  prefs: []
  type: TYPE_NORMAL
- en: <v-card v-if="selectedRecipe">
  id: totrans-608
  prefs: []
  type: TYPE_NORMAL
- en: <cooking-instructions :id="selectedRecipe.id" />
  id: totrans-609
  prefs: []
  type: TYPE_NORMAL
- en: <v-card-actions>
  id: totrans-610
  prefs: []
  type: TYPE_NORMAL
- en: <v-btn text>
  id: totrans-611
  prefs: []
  type: TYPE_NORMAL
- en: <app-link :to="/recipe/${selectedRecipe.id}"
  id: totrans-612
  prefs: []
  type: TYPE_NORMAL
- en: '>Cooking instructions</app-link'
  id: totrans-613
  prefs: []
  type: TYPE_NORMAL
- en: '></v-btn'
  id: totrans-614
  prefs: []
  type: TYPE_NORMAL
- en: '>'
  id: totrans-615
  prefs: []
  type: TYPE_NORMAL
- en: <v-spacer />
  id: totrans-616
  prefs: []
  type: TYPE_NORMAL
- en: <v-btn @click="dialogVisible = false" icon="mdi-close"></v-btn>
  id: totrans-617
  prefs: []
  type: TYPE_NORMAL
- en: </v-card-actions>
  id: totrans-618
  prefs: []
  type: TYPE_NORMAL
- en: </v-card>
  id: totrans-619
  prefs: []
  type: TYPE_NORMAL
- en: </v-dialog>
  id: totrans-620
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  id: totrans-621
  prefs: []
  type: TYPE_NORMAL
- en: </template>
  id: totrans-622
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  id: totrans-623
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: import { ref } from "vue";import { defineStore } from "pinia";
  id: totrans-624
  prefs: []
  type: TYPE_NORMAL
- en: import { useLocalStorage } from "@vueuse/core"
  id: totrans-625
  prefs: []
  type: TYPE_NORMAL
- en: interface Rating {
  id: totrans-626
  prefs: []
  type: TYPE_NORMAL
- en: 'id: number;'
  id: totrans-627
  prefs: []
  type: TYPE_NORMAL
- en: 'rating: number;'
  id: totrans-628
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-629
  prefs: []
  type: TYPE_NORMAL
- en: export const useRatingStore = defineStore('rating', () => {
  id: totrans-630
  prefs: []
  type: TYPE_NORMAL
- en: const ratings = ref<Rating[] | any>(useLocalStorage('rating', []));
  id: totrans-631
  prefs: []
  type: TYPE_NORMAL
- en: 'const getRatingById = (id: number) => {'
  id: totrans-632
  prefs: []
  type: TYPE_NORMAL
- en: 'const rating = ratings.value.find((rating: Rating) => rating.id === id)'
  id: totrans-633
  prefs: []
  type: TYPE_NORMAL
- en: return rating?.rating;
  id: totrans-634
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-635
  prefs: []
  type: TYPE_NORMAL
- en: 'const saveRating = (rating: Rating) => {'
  id: totrans-636
  prefs: []
  type: TYPE_NORMAL
- en: 'const ratingIndex = ratings.value.findIndex((r: Rating) => r.id === rating.id)'
  id: totrans-637
  prefs: []
  type: TYPE_NORMAL
- en: if (ratingIndex === -1) {
  id: totrans-638
  prefs: []
  type: TYPE_NORMAL
- en: ratings.value.push(rating)
  id: totrans-639
  prefs: []
  type: TYPE_NORMAL
- en: '} else {'
  id: totrans-640
  prefs: []
  type: TYPE_NORMAL
- en: ratings.value[ratingIndex] = rating
  id: totrans-641
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-642
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  id: totrans-643
  prefs: []
  type: TYPE_NORMAL
- en: return { getRatingById, saveRating }
  id: totrans-644
  prefs: []
  type: TYPE_NORMAL
- en: '})'
  id: totrans-645
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  id: totrans-646
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: <script setup lang="ts">import { ref } from "vue";
  id: totrans-647
  prefs: []
  type: TYPE_NORMAL
- en: import type { Ref } from "vue";
  id: totrans-648
  prefs: []
  type: TYPE_NORMAL
- en: import { useRatingStore } from "@/stores/modules/rating";
  id: totrans-649
  prefs: []
  type: TYPE_NORMAL
- en: const store = useRatingStore();
  id: totrans-650
  prefs: []
  type: TYPE_NORMAL
- en: const props = defineProps<{
  id: totrans-651
  prefs: []
  type: TYPE_NORMAL
- en: 'id: number;'
  id: totrans-652
  prefs: []
  type: TYPE_NORMAL
- en: 'readonly?: boolean;'
  id: totrans-653
  prefs: []
  type: TYPE_NORMAL
- en: '}>();'
  id: totrans-654
  prefs: []
  type: TYPE_NORMAL
- en: 'const rating: Ref<number> = ref(store.getRatingById(props.id));'
  id: totrans-655
  prefs: []
  type: TYPE_NORMAL
- en: const saveRating = () => {
  id: totrans-656
  prefs: []
  type: TYPE_NORMAL
- en: 'store.saveRating({id: props.id, rating: rating.value});'
  id: totrans-657
  prefs: []
  type: TYPE_NORMAL
- en: '};'
  id: totrans-658
  prefs: []
  type: TYPE_NORMAL
- en: </script>
  id: totrans-659
  prefs: []
  type: TYPE_NORMAL
- en: <template>
  id: totrans-660
  prefs: []
  type: TYPE_NORMAL
- en: <div class="flex items-center">
  id: totrans-661
  prefs: []
  type: TYPE_NORMAL
- en: <v-rating
  id: totrans-662
  prefs: []
  type: TYPE_NORMAL
- en: v-model="rating"
  id: totrans-663
  prefs: []
  type: TYPE_NORMAL
- en: color="light-green"
  id: totrans-664
  prefs: []
  type: TYPE_NORMAL
- en: :readonly="readonly"
  id: totrans-665
  prefs: []
  type: TYPE_NORMAL
- en: half-increments
  id: totrans-666
  prefs: []
  type: TYPE_NORMAL
- en: item-aria-label="This item is rated {0} of {1}"
  id: totrans-667
  prefs: []
  type: TYPE_NORMAL
- en: hover
  id: totrans-668
  prefs: []
  type: TYPE_NORMAL
- en: '@click="saveRating"'
  id: totrans-669
  prefs: []
  type: TYPE_NORMAL
- en: '></v-rating>'
  id: totrans-670
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  id: totrans-671
  prefs: []
  type: TYPE_NORMAL
- en: </template>
  id: totrans-672
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  id: totrans-673
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: <script setup lang="ts">// …abbreviated
  id: totrans-674
  prefs: []
  type: TYPE_NORMAL
- en: import AppLoader from "./AppLoader.vue";
  id: totrans-675
  prefs: []
  type: TYPE_NORMAL
- en: import RecipeRating from "./RecipeRating.vue";
  id: totrans-676
  prefs: []
  type: TYPE_NORMAL
- en: // …abbreviated
  id: totrans-677
  prefs: []
  type: TYPE_NORMAL
- en: </script>
  id: totrans-678
  prefs: []
  type: TYPE_NORMAL
- en: <template>
  id: totrans-679
  prefs: []
  type: TYPE_NORMAL
- en: <app-loader v-if="!recipe" />
  id: totrans-680
  prefs: []
  type: TYPE_NORMAL
- en: <v-container v-else fluid>
  id: totrans-681
  prefs: []
  type: TYPE_NORMAL
- en: <v-col>
  id: totrans-682
  prefs: []
  type: TYPE_NORMAL
- en: <v-img height="200" :src="img/recipe.image" cover v-if="recipe.image" />
  id: totrans-683
  prefs: []
  type: TYPE_NORMAL
- en: <h1 class="text-h3 ma-4">{{ recipe.title }}</h1>
  id: totrans-684
  prefs: []
  type: TYPE_NORMAL
- en: <recipe-rating :id="recipe.id" />
  id: totrans-685
  prefs: []
  type: TYPE_NORMAL
- en: <!-- abbreviated -->
  id: totrans-686
  prefs: []
  type: TYPE_NORMAL
- en: </v-col>
  id: totrans-687
  prefs: []
  type: TYPE_NORMAL
- en: </v-container>
  id: totrans-688
  prefs: []
  type: TYPE_NORMAL
- en: </template>
  id: totrans-689
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  id: totrans-690
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
