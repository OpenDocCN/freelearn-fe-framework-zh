- en: The MongoDB Deployment on mLab
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: mLab上的MongoDB部署
- en: We have come to the point where we need to start planning the deployment of
    our application. We have chosen MongoDB as our database. There are different approaches
    of using it for scaling--you can do everything on your own with your own servers
    (more time consuming and demanding) or you can use services that do replications/scaling
    for you, such as Database-as-a-Service providers.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经到了需要开始规划我们的应用程序部署的阶段。我们选择了MongoDB作为我们的数据库。使用它的不同方法用于扩展--您可以自己使用自己的服务器做所有事情（耗时且要求高）或者您可以使用为您执行复制/扩展的服务，例如数据库即服务提供商。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Creating an mLab account and creating a new MongoDB deployment
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建mLab账户和创建新的MongoDB部署
- en: How a replica set works in MongoDB and how you can use it within mLab
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MongoDB中的复制集是如何工作的，以及您如何在mLab中使用它
- en: Testing the replica set on a live demo (flip-flop from mLab)
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在实时演示中测试复制集（在mLab中切换）
- en: Setting up the database user and password
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置数据库用户和密码
- en: Learning about what you need to prepare for deployment on AWS EC2
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解在AWS EC2上部署需要准备的事项
- en: mLab overview
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: mLab概述
- en: We will use mLab in our case in order to spend less time configuring the low-level
    stuff on MongoDB and more time building a robust scalable application.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的案例中，我们将使用mLab来减少在MongoDB上配置底层配置的时间，并更多地构建一个健壮可扩展的应用程序。
- en: 'If we go to [www.mLab.com](http://www.mLab.com), there is a free DB plan (that
    we will use in this chapter) and a paid DB plan:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们访问[www.mLab.com](http://www.mLab.com)，有一个免费的数据库计划（我们将在本章中使用）和一个付费的数据库计划：
- en: '![](img/00084.jpeg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00084.jpeg)'
- en: 'In general, mLab provides several interesting features such as the following:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，mLab提供以下一些有趣的功能：
- en: '**Tools for cloud automation**: These provide on-demand provisioning (preparing)
    on AWS, Azure, or Google; replica sets (described in detail later in this chapter);
    and **sharded clusters**. These also provide seamless, zero-downtime scaling,
    and high availability via automatic failover.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**云自动化工具**：这些提供AWS、Azure或Google上的按需配置（准备），复制集（将在本章后面详细描述）；以及**分片集群**。这些还提供通过自动故障转移的无缝、零停机时间扩展和高可用性。'
- en: '**Tools for backup and recovery**: These provide automatic backups, which can
    help in later project stages in case of an emergency.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**备份和恢复工具**：这些提供自动备份，在紧急情况下可以在后续项目阶段提供帮助。'
- en: '**Tools for monitoring and alerts**: For example, there is a **slow queries**
    tool that helps you to find slow queries, which can be optimized by adding an
    index.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**监控和警报工具**：例如，有一个**慢查询**工具，可以帮助您找到慢查询，这些查询可以通过添加索引进行优化。'
- en: '**Tools for online data browsing**: You can browse the MongoDB''s collection
    via the browser when you are logged into mLab''s administration panel.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在线数据浏览工具**：当您登录到mLab的管理面板时，您可以通过浏览器浏览MongoDB的集合。'
- en: Replica set connections and high availability
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 复制集连接和高可用性
- en: In MongoDB, there is a feature that ensures high availability using automatic
    failover. In short, failover is a feature that ensures that if a primary server
    (that has the most important copy of your database) fails, then a secondary member's
    database becomes the primary one if the original primary server is unavailable.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在MongoDB中，有一个使用自动故障转移确保高可用性的功能。简而言之，故障转移是一个确保如果主服务器（拥有您数据库最重要的副本）失败，那么如果原始主服务器不可用，则次要成员的数据库将成为主数据库的功能。
- en: A secondary member's database is a server that keeps the so-called **read-only
    backup** of your database.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 次要成员的数据库是一个服务器，它保存了所谓的**只读备份**。
- en: The primary and the secondary databases very often replicate themselves in order
    to be in sync all the time. The secondary server is mostly for read operations.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 主数据库和次要数据库经常相互复制，以确保始终同步。次要服务器主要用于读取操作。
- en: This whole replica set feature is quite time-consuming to implement from scratch
    (without mLab), but mLab provides this feature in order to *abstract* this part
    so that our whole process will be more automated.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 从头开始（没有mLab）实现整个复制集功能相当耗时，但mLab提供此功能是为了*抽象*这一部分，以便我们的整个过程将更加自动化。
- en: MongoDB failover
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MongoDB故障转移
- en: mLab also provides a great tool for testing the failover scenario in our app,
    which is available at [http://flip-flop.mlab.com](http://flip-flop.mlab.com).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: mLab还提供了一个测试我们应用程序中故障转移场景的出色工具，可在[http://flip-flop.mlab.com](http://flip-flop.mlab.com)找到。
- en: '![](img/00085.jpeg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00085.jpeg)'
- en: 'Here, we can test how automatic failover with the MongoDB replica set works.
    As we can see in the preceding screenshot, there are three nodes: the replica''s
    **flip** and **flop**, and an arbiter. In the flip-flop''s demo, you can connect
    to the arbiter server, and the primary server will step down and the cluster will
    failover to the other node. You can experiment with it--try on your own and have
    fun!'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以测试MongoDB副本集的自动故障转移功能。正如我们可以在前面的截图中所见，有三个节点：副本的**翻转**和**折叠**，以及一个仲裁者。在flip-flop的演示中，您可以连接到仲裁者服务器，主服务器将下线，集群将故障转移到其他节点。您可以自己尝试并享受乐趣！
- en: You can find more documentation on how to play with the flip-flop's demo at
    [http://docs.mlab.com/connecting/#replica-set-connections](http://docs.mlab.com/connecting/#replica-set-connections).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[http://docs.mlab.com/connecting/#replica-set-connections](http://docs.mlab.com/connecting/#replica-set-connections)找到更多有关如何使用flip-flop演示的文档。
- en: Free versus paid plan in mLab
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: mLab的免费与付费计划
- en: In this book, we will guide you through the process of using mLab with a free
    plan. In mLab, the replica set is available in the paid plans (starting at $15/month),
    and, of course, you can use the flip-flop's demo for free in order to play with
    that very important feature of MongoDB.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我们将指导您使用免费计划来操作mLab。在mLab中，副本集在付费计划中可用（起价为每月15美元），当然，您也可以免费使用flip-flop的演示来体验MongoDB的非常重要的功能。
- en: The new mLab's account and node
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 新的mLab账户和节点
- en: 'Go to [https://mlab.com/signup/](https://mlab.com/signup/), as shown in the
    following screenshot:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往[https://mlab.com/signup/](https://mlab.com/signup/)，如下面的截图所示：
- en: '![](img/00086.jpeg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00086.jpeg)'
- en: Verify your e-mail by clicking on the confirm link in your inbox.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击收件箱中的确认链接来验证您的电子邮件。
- en: 'Click on the Create new button, as shown in the following screenshot:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击创建新按钮，如下面的截图所示：
- en: '![](img/00087.jpeg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00087.jpeg)'
- en: 'You are on the Create new deployment page. Choose Single-node | Sandbox (FREE),
    as shown in the following screenshot:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您现在处于创建新部署页面。选择单节点 | 沙盒（免费），如下面的截图所示：
- en: '![](img/00088.jpeg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00088.jpeg)'
- en: 'While you are still at [https://mlab.com/create](https://mlab.com/create) (Create
    new deployment), set the database name as `publishingapp` and click on the Create
    new MongoDB deployment button, as shown in the next screenshot:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您仍然在[https://mlab.com/create](https://mlab.com/create)（创建新部署）时，将数据库名称设置为`publishingapp`，然后点击创建新的MongoDB部署按钮，如下面的截图所示：
- en: '![](img/00089.jpeg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00089.jpeg)'
- en: 'After following the preceding steps, you should be able to find the MongoDB
    deployment on the dashboard ([https://mlab.com/home](https://mlab.com/home)),
    as shown in the following screenshot:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在遵循前面的步骤之后，您应该能够在仪表板上找到MongoDB部署（[https://mlab.com/home](https://mlab.com/home)），如下面的截图所示：
- en: '![](img/00090.jpeg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00090.jpeg)'
- en: Creating the database's user/password and other configurations
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建数据库的用户/密码和其他配置
- en: Right now, the database is ready for our publishing application, but it's still
    empty.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，数据库已准备好用于我们的发布应用程序，但它仍然是空的。
- en: 'There are steps that we need to take in order to use it:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要采取以下步骤才能使用它：
- en: 'Create a user/password combination. We need to click on the database that has
    been just created and find a tab called Users. After you click on it, click on
    the Add new database user button and then fill in the details on the form, as
    shown in the following screenshot:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建用户/密码组合。我们需要点击刚刚创建的数据库，找到名为“用户”的标签页。点击它后，点击添加新数据库用户按钮，然后在表单中填写详细信息，如下面的截图所示：
- en: '![](img/00091.jpeg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00091.jpeg)'
- en: 'Let''s assume for this book that our details are as follows:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们假设这本书的详细信息如下：
- en: 'DB username: `usermlab`'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库用户名：`usermlab`
- en: 'DB password: `pwdmlab`'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库密码：`pwdmlab`
- en: In the places where we will use the username and password, I will use these
    details.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们需要使用用户名和密码的地方，我将使用这些详细信息。
- en: 'After that, we need to create the collections that are identical to our local
    MongoDB:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，我们需要创建与本地MongoDB中相同的集合：
- en: Collections | Add collection | articles
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 集合 | 添加集合 | articles
- en: Collections | Add collection | pubUsers
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 集合 | 添加集合 | pubUsers
- en: 'After performing all the preceding steps, you should see something like the
    following screenshot:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在执行所有前面的步骤之后，您应该会看到如下截图所示的内容：
- en: '![](img/00092.jpeg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00092.jpeg)'
- en: 'At this stage, the last thing is to write down the Mongo details from the following
    screenshot:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这个阶段，最后一步是从以下截图中写下Mongo的详细信息：
- en: '![](img/00093.jpeg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00093.jpeg)'
- en: Config wrap up
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置总结
- en: We need to keep and share all the information from mLab along with the AWS S3
    details. The details will be useful in the next chapter when deploying our app
    on Amazon AWS EC2.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要保留并分享所有来自mLab的信息，以及AWS S3的详细信息。这些细节将在下一章部署我们的应用在Amazon AWS EC2时有用。
- en: 'At this point in the book, there are details that we need to keep separately:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的这一部分，有一些细节我们需要单独保留：
- en: '[PRE0]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Make sure, that you have replaced the ports and the hostname to the correct
    one (as provided by mLab in the preceding screenshot).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你已经将端口和主机名替换为正确的值（如前一个屏幕截图中所提供的mLab提供的）。
- en: 'All the Mongo `env` variables can be obtained from mLab, where you can find
    a link similar to the following (this is an example copied from the account created
    while writing this chapter):'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 所有Mongo `env`变量都可以从mLab获得，在那里你可以找到一个类似以下链接（这是一个在编写本章时创建的账户的示例）：
- en: '[PRE1]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Summary
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In the next chapter, we will start using those environment variables on our
    production server on the AWS EC2's platform. Keep all these details noted in an
    easily accessible, safe place, as we will use them soon.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将开始在AWS EC2平台上我们的生产服务器上使用这些环境变量。将这些细节记录在一个易于访问、安全的地方，因为我们很快就会使用它们。
- en: The last thing is to check if the app is running correctly and to use the remote
    mLab MongoDB (instead of the local MongoDB that was run with the `mongd` command).
    You can do this by running it with `npm start`, and then you shall see the empty
    home page of the publishing app. Because we moved away from the local database
    and the remote is empty, you need to register a new user and try to publish a
    new article with mLab under the hood to store the data.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是检查应用是否运行正确，并使用远程mLab MongoDB（而不是使用`mongd`命令运行的本地MongoDB）。你可以通过运行`npm start`来实现，然后你应该能看到发布应用的空主页。因为我们已经从本地数据库迁移到了远程数据库，而远程数据库是空的，所以你需要注册一个新用户，并尝试在mLab下发布一篇文章来存储数据。
