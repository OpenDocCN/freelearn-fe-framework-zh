["```js\n// Code 1.1\n\n// Declare a variable and assign a value\nvar x = \"Hello\";\n\n// Down the line\n// you might have forgotten \n// about the original value of x\n//\n//\n// Re-assign the value\nx = 1;\n\n// Log value\nconsole.log(x); // 1\n```", "```js\n// Code 1.2\n\nvar isCompleted;\n\n// Assign null\nisCompleted = null;\nconsole.log('When null:', isCompleted);\n\n// Re-assign a boolean\nisCompleted = false;\nconsole.log('When boolean:', isCompleted);\n\n// Re-assign a string\nisCompleted = 'Not Yet!';\nconsole.log('When string:', isCompleted);\n\n// Re-assign a number\nisCompleted = 0;\nconsole.log('When number:', isCompleted);\n\n// Re-assign an array\nisCompleted = [false, true, 0];\nconsole.log('When array:', isCompleted);\n\n// Re-assign an object\nisCompleted = {status: true, done: \"no\"};\nconsole.log('When object:', isCompleted);\n\n/**\n* CONSOLE:\n*\n* When null: null\n* When boolean: false\n* When string: Not Yet!\n* When number: 0\n* When array: [ false, true, 0 ]\n* When object: { status: true, done: 'no' }\n*/\n```", "```js\nfunction greetUser( username ) {\n return `Hi, ${username}`\n}\n\nconsole.log('Greet a user string: ', greetUser('Codebeast'))\nconsole.log('Greet a boolean: ', greetUser(true))\nconsole.log('Greet a number: ', greetUser(1))\n\n/**\n * CONSOLE:\n *\n * Greet a user string: Hi, Codebeast\n * Greet a boolean: Hi, true\n * Greet a number: Hi, 1\n */\n```", "```js\nfunction greetUser( username ) {\n // Reverse the username\n var reversed = username.split('').reverse().join('');\n return `Hi, ${reversed}`\n}\n\nconsole.log('Greet a correct user: ', greetUser('Codebeast'))\n\n * CONSOLE:\n *\n * Greet a correct user: Hi, tsaebedoC\n */\n```", "```js\n// Code 1.4\n\nfunction greetUser( username ) {\n var reversed = username.split('').reverse().join('');\n return `Hi, ${reversed}`\n}\n\nconsole.log('Greet a correct user: ', greetUser('Codebeast'))\n\n// Pass in a value that doesn't support\n// the split method\nconsole.log('Greet a boolean: ',greetUser(true))\n\n * CONSOLE:\n *\n * Greet a correct user: Hi, tsaebedoC\n * /$Path/Examples/chapter1/1.4.js:2\n * var reversed = username.split('').reverse().join('');\n                          ^\n * TypeError: username.split is not a function\n */\n```", "```js\n// Code 1.5\nfunction greetUser( username ) {\n if(typeof username !== 'string') {\n   throw new Error('Invalid type passed');\n };\n var reversed = username.split('').reverse().join('');\n return `Hi, ${reversed}`\n}\n\nconsole.log('Greet a correct user: ', greetUser('Codebeast'))\nconsole.log('Greet a boolean: ',greetUser(true))\n```", "```js\nfunction greetUser( user ) {\n if ( typeof user !== 'object' ) {\n   throw new Error('Type is not an object');\n }\n return `Hi, ${user.name}`;\n}\n\nconsole.log('Greet a correct user: ', greetUser( {name: 'Codebeast', age: 24 } ))\n// Greet a correct user: Hi, Codebeast\n\nconsole.log('Greet a boolean: ', greetUser( [1, 2, 3] ))\n// Greet a boolean: Hi, undefined\n```", "```js\nObject.prototype.toString.call([]); // [object Array] Object.prototype.toString.call({}); // [object Object] Object.prototype.toString.call(''); // [object String] Object.prototype.toString.call(new Date()); // [object Date]\n// etc\n```", "```js\nvar getType = function (elem) {\n return Object.prototype.toString.call(elem).slice(8, -1);\n};\nvar isObject = function (elem) {\n return getType(elem) === 'Object';\n};\n\n// You can use the function\n// to check types\nif (isObject(person)) {\n person.getName();\n}\n```", "```js\nfunction greet( username: string ) {\n return `Hi, ${username}`;\n}\n```"]