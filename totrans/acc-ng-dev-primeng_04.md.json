["```js\n@NgModule({\n  declarations: [SchoolsComponent],\n  imports: [CommonModule, GoogleMapsModule],\n  exports: [SchoolsComponent],\n})\nexport class SchoolsModule {}\n```", "```js\n@Injectable({\n  providedIn: 'any',\n})\nexport class ThemeService {\n  constructor(@Inject(themeToken) private theme: ITheme) {}\n  public setSetting(name: string, value: string): void {\n    this.setItem(name, value);\n  }\n  public getSetting(name: string): string {\n    switch (name) {\n      case 'background':\n        return this.getItem(name) ?? this.theme.background;\n      case 'tileBackground':\n        return this.getItem(name) ?? \n         this.theme.tileBackground;\n      case 'headerBackground':\n        return this.getItem(name) ?? \n         this.theme.headerBackground;\n      case 'textSize':\n        return this.getItem(name) ?? this.theme.textSize;\n      case 'videoSize':\n        return this.getItem(name) ?? this.theme.videoSize;\n    }\n    return 'white';\n  }\n  private setItem(name: string, value: string): void {\n    localStorage.setItem(this.prefix(name), value);\n  }\n  private getItem(name: string): string | null {\n    return localStorage.getItem(this.prefix(name));\n  }\n  private prefix(name: string): string {\n    return this.theme.id + '_' + name;\n  }\n}\n```", "```js\nimport { InjectionToken } from '@angular/core';\nimport { ITheme } from './theme/theme.model';\nexport const themeToken = new InjectionToken<ITheme>('theme');\n```", "```js\nexport interface ITheme {\n  id: string;\n  background: string;\n  headerBackground: string;\n  tileBackground: string;\n  textSize: string;\n  videoSize: string;\n}\n```", "```js\nimport { ITheme } from './app/theme/theme.model';\nexport const theme: ITheme = {\n  id: 'green',\n  background: '#f8f6f8',\n  tileBackground: '#f4ecf4',\n  headerBackground: '#00aa00',\n  textSize: '3',\n  videoSize: '7',\n};\n```", "```js\n// (...)\nimport { themeToken } from './theme.token';\nimport { theme } from '../green.theme';\nimport { AppRoutingModule } from './app-routing.module';\n// (...)\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    // (...)\n    AppRoutingModule,\n  ],\n  providers: [\n    {\n      provide: themeToken,\n      useValue: theme,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n```", "```js\nconst routes: Routes = [\n  {path: '', redirectTo: 'login', pathMatch: 'full',},\n  {\n    path: 'course',\n    loadChildren: () =>\n      import('./course/course.module').then((m) => \n       m.CourseModule),\n  },\n  {\n    path: 'login',\n    loadChildren: () =>\n      import('./login/login.module').then((m) => \n       m.LoginModule),\n  },\n  {\n    path: 'schools',\n    loadChildren: () =>\n      import('./schools/schools.module').then((m) => \n       m.SchoolsModule),\n  },\n  {\n    path: 'theme',\n    loadChildren: () =>\n      import('./theme/theme.module').then((m) => \n       m.ThemeModule),\n  },\n];\n```", "```js\nimport { CourseComponent } from './course.component';\nconst routes: Routes = [{ path: ':id', component: CourseComponent }];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CourseRoutingModule {}\n```", "```js\nimport { ITheme } from './app/theme/theme.model';\nexport const theme: ITheme = {\n  id: 'metallic',\n  background: '#ffeeff',\n  tileBackground: '#ffefff',\n  headerBackground: '#ccbbcc',\n  textSize: '3',\n  videoSize: '7',\n};\n```", "```js\n// (...)\nimport { theme } from '../../metallic.theme'\n// (...)\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    LoginRoutingModule,\n  ],\n  providers: [\n    {\n      provide: themeToken,\n      useValue: theme,\n    },\n  ],\n})\nexport class LoginModule {}\n```", "```js\n.mat-card {\n  background: var(--background, green);\n}\n```", "```js\n@Component({\n  selector: 'workspace-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent {\n  @HostBinding('style.--background')\n  background: string;\n  loginForm: FormGroup;\n  constructor(\n    public fb: FormBuilder,\n    public authService: AuthService,\n    private themeService: ThemeService\n  ) {\n    this.background = themeService.getSetting(\n     'background');\n    this.loginForm = this.fb.group({\n      name: [''],\n      password: [''],\n    });\n  }\n  loginUser(): void {\n    this.authService.login(this.loginForm.value);\n  }\n}\n```", "```js\n@Injectable({\n  providedIn: 'platform',\n})\nexport class AuthService {\n  public loginEvent: EventEmitter<string> = new \n   EventEmitter();\n  login(user: IUser): void {\n    if (user.name === 'demo' && user.password === 'demo') {\n      this.token = 'thisTokenShouldBeProvidedByTheBackend';\n      this.loginEvent.emit(this.token);\n    }\n  }\n  logout(): void {\n    this.token = '';\n  }\n  set token(value: string) {\n    localStorage.setItem('token', value);\n  }\n  get token(): string {\n    return localStorage.getItem('token') ?? '';\n  }\n}\n```", "```js\n  this.authService.loginEvent.subscribe((token: string) => {\n      const courseId: string | null = \n       this.preferenceService.getCourseId();\n      if (courseId) {\n        router.navigate(['/course', courseId]);\n      } else {\n        router.navigate(['/schools']);\n      }\n    });\n```", "```js\nng add i @angular/elements\n```", "```js\n  <script\n      src=\"img/widgets.js\"\n      type=\"text/javascript\"\n    ></script\n```", "```js\n<ng-container *ngIf=\"course$ | async as course\">\n  <a\n    href=\"https://twitter.com/intent/tweet?button_hashtag=     {{ course.hashtag }}\"\n    class=\"twitter-hashtag-button\"\n    >Tweet {{ course.hashtag }}</a\n  >\n</ng-container>\n```", "```js\n@Component({\n  selector: 'workspace-tweetcourse',\n  templateUrl: './tweetcourse.component.html',\n})\nexport class TweetCourseComponent implements OnInit {\n  @Input()\n  courseId!: string;\n  public course$: Observable<ICourse> | undefined;\n  constructor(\n    private courseService: CourseService\n  ) {\n  }\n  ngOnInit(): void{\n    this.course$ = this.courseService.getCourse(\n     this.courseId);\n  }\n}\n```", "```js\nexport class AppModule implements DoBootstrap {\n  constructor(private injector: Injector) {\n    const el = createCustomElement(TweetCourseComponent, {\n      injector: this.injector,\n    });\n    customElements.define('tweet-course', el);\n  }\n  ngDoBootstrap(): void {}\n}\n```", "```js\n  <tweet-course courseId=\"1\"></tweet-course>\n```", "```js\n    <mat-nav-list>\n      <a *ngIf=\"!token\" mat-list-item \n       href=\"/login\">Login</a>\n      <ng-container *ngIf=\"token\">\n        <a mat-list-item *ngIf=\"courseId\" \n         routerLink=\"course/{{ courseId }}\"\n          >Follow course</a\n        >\n        <a mat-list-item routerLink=\"/schools\">Find \n         school</a>\n        <a mat-list-item routerLink=\"/theme\">Theme</a>\n        <a *ngIf=\"token\" mat-list-item (click)=\"logout()\" \n         href=\"#\">Logout</a>\n      </ng-container>\n      <ng-container *ngIf=\"courseId\">\n        <tweet-course courseId=\"courseId\"></tweet-course>\n      </ng-container>\n    </mat-nav-list>\n```"]