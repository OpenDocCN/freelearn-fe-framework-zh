["```js\nimport { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')\n```", "```js\nimport { createApp } from 'vue'\nimport { createPinia } from 'pinia'\nimport App from './App.vue'\ncreateApp(App).mount('#app')\n```", "```js\nimport { createApp } from 'vue'\nimport { createPinia } from 'pinia'\nimport App from './App.vue'\nconst app = createApp(App)\napp.use(createPinia())\napp.mount('#app')\n```", "```js\n    import { defineStore } from 'pinia'\n    ```", "```js\n    export const useCounterStore = defineStore({\n    ```", "```js\n      id: 'counter',\n    ```", "```js\n      state: () => ({\n    ```", "```js\n        counter: 1\n    ```", "```js\n      }),\n    ```", "```js\n      getters: {\n    ```", "```js\n        doubleCount: (state) => state.counter * 2\n    ```", "```js\n      },\n    ```", "```js\n      actions: {\n    ```", "```js\n        increment() {\n    ```", "```js\n          this.counter++\n    ```", "```js\n        }\n    ```", "```js\n      }\n    ```", "```js\n    })\n    ```", "```js\n    <template>\n    ```", "```js\n      <p>\n    ```", "```js\n      Counter: {{ store.counter }}\n    ```", "```js\n      </p>\n    ```", "```js\n    </template>\n    ```", "```js\n    <script setup>\n    ```", "```js\n    import { useCounterStore } from './stores/counter'\n    ```", "```js\n    const store = useCounterStore()\n    ```", "```js\n    </script>\n    ```", "```js\n    <script setup>\n    ```", "```js\n    import { useCounterStore } from '@/stores/counter';\n    ```", "```js\n    const store = useCounterStore()\n    ```", "```js\n    </script>\n    ```", "```js\n    <template>\n    ```", "```js\n      <h2>Edit Counter</h2>\n    ```", "```js\n      <input type=\"text\" v-model=\"store.counter\">\n    ```", "```js\n    </template>\n    ```", "```js\n    <script setup>\n    ```", "```js\n    import EditCounter from './components/EditCounter.vue'\n    ```", "```js\n    import { useCounterStore } from './stores/counter'\n    ```", "```js\n    const store = useCounterStore();\n    ```", "```js\n    </script>\n    ```", "```js\n    <template>\n    ```", "```js\n      <p>\n    ```", "```js\n      Counter: {{ store.counter }}\n    ```", "```js\n      </p>\n    ```", "```js\n      <EditCounter></EditCounter>\n    ```", "```js\n    </template>\n    ```", "```js\n    <script setup>\n    ```", "```js\n    import RGBEdit from './components/RGBEdit.vue'\n    ```", "```js\n    import PreviewColor from './components/PreviewColor.vue'\n    ```", "```js\n    </script>\n    ```", "```js\n    <template>\n    ```", "```js\n    <h1>Color Editor</h1>\n    ```", "```js\n    <p>\n    ```", "```js\n    Use the sliders below to set the red, green, and blue values for a color.\n    ```", "```js\n    </p>\n    ```", "```js\n    <div class=\"twocol\">\n    ```", "```js\n      <RGBEdit></RGBEdit>\n    ```", "```js\n      <PreviewColor></PreviewColor>\n    ```", "```js\n    </div>\n    ```", "```js\n    </template>\n    ```", "```js\n    <style>\n    ```", "```js\n    .twocol {\n    ```", "```js\n      display: grid;\n    ```", "```js\n      grid-template-columns: 1fr 1fr;\n    ```", "```js\n      column-gap: 10px;\n    ```", "```js\n    }\n    ```", "```js\n    </style>\n    ```", "```js\n    <template>\n    ```", "```js\n    <div>\n    ```", "```js\n      <h2>Edit RGB</h2>\n    ```", "```js\n    </div>\n    ```", "```js\n    </template>\n    ```", "```js\n<template>\n<div>\n  <h2>Preview Color</h2>\n</div>\n</template>\n```", "```js\n    import { defineStore } from 'pinia'\n    ```", "```js\n    export const useColorStore = defineStore({\n    ```", "```js\n      id: 'color',\n    ```", "```js\n      state: () => ({\n    ```", "```js\n        red: 0,\n    ```", "```js\n        blue: 0,\n    ```", "```js\n        green: 0\n    ```", "```js\n      })\n    ```", "```js\n    })\n    ```", "```js\n    <script setup>\n    ```", "```js\n    import { useColorStore } from '@/stores/color';\n    ```", "```js\n    const store = useColorStore()\n    ```", "```js\n    </script>\n    ```", "```js\n<template>\n<div>\n  <h2>Edit RGB</h2>\n  <label for=\"red\">Red</label> <input type=\"range\"\n    min=\"0\" max=\"255\" id=\"red\" v-model=\"store.red\">\n      <br/>\n  <label for=\"green\">Green</label>\n    <input type=\"range\" min=\"0\" max=\"255\" id=\"green\"\n      v-model=\"store.green\"><br/>\n  <label for=\"blue\">Blue</label>\n    <input type=\"range\" min=\"0\" max=\"255\" id=\"blue\"\n      v-model=\"store.blue\"><br/>\n</div>\n</template>\n```", "```js\n<style>\nlabel {\n      display: inline-block;\n      width: 50px;\n}\n</style>\n```", "```js\n    <script setup>\n    ```", "```js\n    import { useColorStore } from '@/stores/color';\n    ```", "```js\n    const store = useColorStore()\n    ```", "```js\n    </script>\n    ```", "```js\n<script setup>\nimport { computed } from 'vue'\nimport { useColorStore } from '@/stores/color';\nconst store = useColorStore()\nconst previewRGB = computed(() => {\n  return {\n    backgroundColor: \"#\" + Number(store.red)\n    .toString(16).padStart(2, '0') +\n    Number(store.green).toString(16)\n    .padStart(2, '0') + Number(store.blue)\n    .toString(16).padStart(2, '0')\n  }\n});\n</script>\n```", "```js\n<template>\n<div>\n  <h2>Preview Color</h2>\n  <div class=\"previewColor\" :style=\"previewRGB\"></div>\n  <p>\n  CSS color string: {{ previewRGB.backgroundColor }}\n  </p>\n</div>\n</template>\n```", "```js\n<style>\n.previewColor {\n  width: 250px;\n  height: 250px;\n}\n</style>\n```", "```js\nimport { defineStore } from 'pinia'\nexport const useCounterStore = defineStore({\n  id: 'counter',\n  state: () => ({\n    counter: 0\n  }),\n  getters: {\n    doubleCount: (state) => state.counter * 2\n  },\n  // rest of file...\n})\n```", "```js\n<template>\n  <p>\n  Counter: {{ store.counter }}\n  </p>\n  <p>\n  Double Count: {{ store.doubleCount }}\n  </p>\n</template>\n```", "```js\n    import { defineStore } from 'pinia'\n    ```", "```js\n    export const useColorStore = defineStore({\n    ```", "```js\n      id: 'color',\n    ```", "```js\n      state: () => ({\n    ```", "```js\n        red: 0,\n    ```", "```js\n        blue: 0,\n    ```", "```js\n        green: 0\n    ```", "```js\n      }),\n    ```", "```js\n      getters: {\n    ```", "```js\n        hex: (state) => {\n    ```", "```js\n          return  \"#\" + Number(state.red).toString(16)\n    ```", "```js\n            .padStart(2, '0') +\n    ```", "```js\n          Number(state.green).toString(16)\n    ```", "```js\n            .padStart(2, '0') +\n    ```", "```js\n          Number(state.blue).toString(16)\n    ```", "```js\n            .padStart(2, '0');\n    ```", "```js\n      }\n    ```", "```js\n    }\n    ```", "```js\n    })\n    ```", "```js\n    <script setup>\n    ```", "```js\n    import { computed } from 'vue'\n    ```", "```js\n    import { useColorStore } from '@/stores/color';\n    ```", "```js\n    const store = useColorStore()\n    ```", "```js\n    const previewRGB = computed(() => {\n    ```", "```js\n      return {\n    ```", "```js\n        backgroundColor: store.hex\n    ```", "```js\n      }\n    ```", "```js\n    });\n    ```", "```js\n    </script>\n    ```", "```js\n    // Rest of component, unchanged\n    ```", "```js\ndoubleCount: (state) => state.counter * 2,\nsuperDuperState: (state) => state.doubleCount * 999,\n```", "```js\ndoubleCount: (state) => state.counter * 2,\nsuperDuperState: (state) => state.doubleCount * 999,\ndoubleDoubleCount() {\n  return this.doubleCount * 2;\n},\n```", "```js\ncountPlusN: (state) => x => Number(state.counter) + Number(x)\n```", "```js\ndoublePlusN: {{ store.countPlusN(9) }}\n```", "```js\nimport { defineStore } from 'pinia'\nexport const useCounterStore = defineStore({\n  id: 'counter',\n  state: () => ({\n    counter: 0\n  }),\n  // rest of store...\n  actions: {\n    increment() {\n      this.counter++\n    }\n  }\n})\n```", "```js\ndecrement() {\n  if(this.counter > 0) this.counter--\n}\n```", "```js\n    actions: {\n    ```", "```js\n    }\n    ```", "```js\n    lighten() {\n    ```", "```js\n      let newHex = pSBC(0.4, this.hex);\n    ```", "```js\n      // parse out hex back to dec\n    ```", "```js\n      this.red = parseInt(newHex.substring(1,3), 16);\n    ```", "```js\n      this.green = parseInt(newHex.substring(3,5), 16);\n    ```", "```js\n      this.blue = parseInt(newHex.substring(5,), 16);\n    ```", "```js\n    },\n    ```", "```js\n    darken() {\n    ```", "```js\n      let newHex = pSBC(-0.4, this.hex);\n    ```", "```js\n      // parse out hex back to dec\n    ```", "```js\n      this.red = parseInt(newHex.substring(1,3), 16);\n    ```", "```js\n      this.green = parseInt(newHex.substring(3,5), 16);\n    ```", "```js\n      this.blue = parseInt(newHex.substring(5,), 16);\n    ```", "```js\n    }\n    ```", "```js\n    <p>\n    ```", "```js\n    <button @click=\"store.darken()\">Darken</button>\n    ```", "```js\n    <button @click=\"store.lighten()\">Lighten</button>\n    ```", "```js\n    </p>\n    ```", "```js\n{\"color\":{\"red\":0,\"blue\":\"69\",\"green\":\"217\"}}\n```", "```js\n        products: [\n    ```", "```js\n          { name: \"Widgets\", price: 10 },\n    ```", "```js\n          { name: \"Doodads\", price: 8 },\n    ```", "```js\n          { name: \"Roundtuits\", price: 12 },\n    ```", "```js\n          { name: \"Fluff\", price: 4 },\n    ```", "```js\n          { name: \"Goobers\", price: 7 }\n    ```", "```js\n        ],\n    ```"]