- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Walking through Our Application
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now, we are one step closer to diving into reactive patterns, but before we
    do, let’s present the app that we are going to build throughout this book.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: We will start by explaining the technical requirements, followed by a breakdown
    of the app’s interfaces so that you know its user story. Furthermore, we will
    showcase an overview of the application architecture and a visual representation
    of the component tree. By the end of this chapter, we will have all the required
    pieces in place to start implementing our application.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we’re going to cover the following main topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: Breaking down our app’s interfaces
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reviewing our app’s architecture
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reviewing our app’s components
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Though we are not creating the project in this chapter, you should know the
    requirements for it before going ahead.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: We are going to use **Angular** **18** for our frontend, so please make sure
    you follow the prerequisites at [https://angular.dev/tools/cli/setup-local](https://angular.dev/tools/cli/setup-local).
    The prerequisites include the environment setup and the technologies needed in
    order to install and use Angular.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: We are also going to be using **Bootstrap** version 5.0.0 ([https://getbootstrap.com/](https://getbootstrap.com/)),
    a toolkit for developing responsive web apps, and version 7.8.1 of **RxJS**.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: 'You will also be able to find all of the code to create this project in the
    book’s GitHub repository: [https://github.com/PacktPublishing/Reactive-Patterns-with-RxJS-and-Angular-Signals-Second-Edition](https://github.com/PacktPublishing/Reactive-Patterns-with-RxJS-and-Angular-Signals-Second-Edition).'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: Breaking down our app’s interfaces
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As a food junkie, I want the application to be like a recipe book, allowing
    users and home cooks to browse and share delicious food recipes. The main aim
    of the app is to provide inspiration for meals as well as help users do the following:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: Share their recipes
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pin favorite recipes to easily find them
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Distinguish top-rated recipes
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Filter out recipes according to some criteria
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The app is composed of six interfaces. Let’s tackle these interfaces one by
    one.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: View one – the landing page
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The first page contains a list of available recipes, sorted according to popularity:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.1 – The landing page view](img/B21180_02_01.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
- en: Figure 2.1 – The landing page view
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: 'In this view, users have the possibility to do the following:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: Quickly search for a recipe by setting filters according to some criteria (on
    the left-hand side)
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clear the list of filters
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: View the most popular recipes
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rate recipes by clicking on the number of stars
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add a recipe to their favorites by clicking on the heart icon
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: See a recipe’s details by clicking on it
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: View the total number of recipes
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: View two – the New Recipe interface
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This page contains a form to create a new recipe:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.2 – The New Recipe view](img/B21180_02_02.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
- en: Figure 2.2 – The New Recipe view
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: 'In this view, users can create a new recipe by clicking on the **New Recipe**
    menu item located at the top right of the page. A form containing details of the
    recipe will be opened to fill out the information and save it. These details include
    the following:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: '**Title**: The title of the recipe'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ingredients**: The ingredients required to prepare the recipe'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Image Url**: A good image of the meal prepared'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cooking time**: The time required to cook the meal'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Yield**: The number of people that can be served by this meal'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Prep time**: The time required to prepare the meal'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tags**: Key tags describing the recipe'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Steps**: The steps required to prepare and cook the meal'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: View three – the My Recipes interface
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This page contains a list of recipes created by the user. This screen is reachable
    by clicking on the **My Recipes** menu item located at the top right. Users can
    edit and remove recipes by clicking on the edit and delete icons, respectively:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.3 – The My Recipes view](img/B21180_02_03.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
- en: Figure 2.3 – The My Recipes view
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: View four – the My Favourites interface
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This page contains a list of the user’s favorite recipes, reachable by clicking
    on the **My Favourites** menu item located at the top right:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.4 – The My Favourites view](img/B21180_02_04.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
- en: Figure 2.4 – The My Favourites view
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: View five – the Modify Recipe interface
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: While the **New Recipe** interface allows the user to create a new recipe, the
    **Modify Recipe** interface allows the user to edit an existing recipe. This page
    is reachable by clicking the **Edit** button next to each button on the **My Recipes**
    interface, and looks just like *Figure 2**.2*.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: View six – the Recipe Details interface
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This page contains all the details of the selected recipe. This screen is reachable
    from the landing page after clicking on a displayed recipe:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.5 – The Recipe Details view](img/B21180_02_05.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
- en: Figure 2.5 – The Recipe Details view
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have detailed our application’s interfaces, let’s have a look at
    the app’s architecture.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: Reviewing our app’s architecture
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The frontend layer of the recipe app will be implemented in Angular 18 and will
    communicate with a RESTful backend based on Node.js.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: 'Aspects related to the backend are not the subject of this book and will not
    be detailed. You can find a ready-to-use fake backend, named `recipes-book-api`,
    in the GitHub repository: [https://github.com/PacktPublishing/Reactive-Patterns-with-RxJS-for-Angular-17-2nd-Edition](https://github.com/PacktPublishing/Reactive-Patterns-with-RxJS-for-Angular-17-2nd-Edition).'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: 'The frontend of the recipe app is pluggable to any RESTful backend. Therefore,
    you can use pretty much any other technology for the backend. All communications
    will be performed through the HttpClient module and will request REST controllers
    in the backend:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.6 – The book of recipes architecture](img/B21180_02_06.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
- en: Figure 2.6 – The book of recipes architecture
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have the big picture of our target application, let’s break down
    the different Angular components of our app.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了目标应用的大致情况，让我们分解我们的应用的不同Angular组件。
- en: Reviewing our app’s components
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查我们的应用组件
- en: 'An Angular application has a tree structure consisting of all the components
    we create. In the following diagram, you will find the component tree of our recipe
    app, which is important for understanding the anatomy of the application:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 一个Angular应用由我们创建的所有组件组成，具有树状结构。在下面的图中，你可以找到我们的食谱应用的组件树，这对于理解应用的结构非常重要：
- en: '![Figure 2.7 – Components overview](img/B21180_02_07.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![图2.7 – 组件概览](img/B21180_02_07.jpg)'
- en: Figure 2.7 – Components overview
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.7 – 组件概览
- en: 'Let’s break down the components:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解这些组件：
- en: '`AppComponent`: The parent component of the app'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AppComponent`: 应用的父组件'
- en: '`HeaderComponent`: The component representing the header of the app that contains
    the user space, the menu, and the logo'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`HeaderComponent`: 代表应用头部，包含用户空间、菜单和标志'
- en: '`HomeComponent`: The component representing the landing page that contains
    `RecipeFilterComponent` and `RecipesListComponent`:'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`HomeComponent`: 代表包含`RecipeFilterComponent`和`RecipesListComponent`的着陆页的组件：'
- en: '`RecipeFilterComponent`: The component representing the filter zone that contains
    the criteria fields and the `RecipesListComponent`: The component containing a
    list of recipes'
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RecipeFilterComponent`: 代表包含标准字段和`RecipesListComponent`的筛选区域的组件：`RecipesListComponent`:
    包含食谱列表的组件'
- en: '`RecipesDetailsComponent`: The component containing the details of one recipe'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RecipesDetailsComponent`: 包含一个食谱详细信息的组件'
- en: '`RecipesCreationComponent`: The component containing a form to create a recipe
    with all the required fields'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RecipesCreationComponent`: 包含一个表单，用于创建包含所有必填字段的食谱'
- en: You now have a better understanding of the components that will make up our
    app.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在对我们的应用将包含的组件有了更好的理解。
- en: Summary
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we explained the features of the recipe application that we
    will be working on, as well as the look and feel of the UIs. We also shed light
    on the app’s architecture and the components that will make it up.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们解释了我们将要工作的食谱应用的功能，以及UI的外观和感觉。我们还阐明了应用架构以及构成应用的组件。
- en: Now that all those aspects are clear, let’s explore our first reactive pattern
    together, which we will cover in the next chapter.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 现在所有这些方面都清晰了，让我们一起来探索我们的第一个响应式模式，我们将在下一章中介绍。
- en: 'Part 2: A Trip into Reactive Patterns'
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2部分：深入响应式模式
- en: In this part, you will learn the most used reactive patterns in different real-world
    scenarios such as fetching data from a backend API, handling server errors, filtering
    data, and providing autocompleted search results in a dropdown list. Every reactive
    pattern will be endorsed by an example involving our recipes app.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在本部分，你将学习在不同实际场景中最常用的响应式模式，例如从后端API获取数据、处理服务器错误、过滤数据以及在下拉列表中提供自动完成搜索结果。每个响应式模式都将通过涉及我们的食谱应用的示例来支持。
- en: You will also learn the best practices and pitfalls to avoid and dive into the
    latest Angular features, such as standalone components and the new built-in control
    flow syntax.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 你还将学习最佳实践和需要避免的陷阱，并深入了解最新的Angular特性，例如独立组件和新的内置控制流语法。
- en: 'This part includes the following chapters:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分包括以下章节：
- en: '[*Chapter 3*](B21180_03.xhtml#_idTextAnchor047), *Fetching Data as Streams*'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第3章*](B21180_03.xhtml#_idTextAnchor047), *以流的形式获取数据*'
- en: '[*Chapter 4*](B21180_04.xhtml#_idTextAnchor071), *Handling Errors Reactively*'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第4章*](B21180_04.xhtml#_idTextAnchor071), *响应式处理错误*'
- en: '[*Chapter 5*](B21180_05.xhtml#_idTextAnchor083), *Combining Streams*'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第5章*](B21180_05.xhtml#_idTextAnchor083), *合并流*'
- en: '[*Chapter 6*](B21180_06.xhtml#_idTextAnchor097), *Transforming Streams*'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第6章*](B21180_06.xhtml#_idTextAnchor097), *转换流*'
- en: '[*Chapter 7*](B21180_07.xhtml#_idTextAnchor107), *Sharing Data between Angular
    Components*'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第7章*](B21180_07.xhtml#_idTextAnchor107), *在Angular组件之间共享数据*'
