- en: Deploying Your Applications
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署您的应用
- en: Developers publish their apps to different marketplaces in order to distribute
    them to end users. For iOS, it's the Apple App Store. On Android, the primary
    choice is the Google Play Store.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 开发者将他们的应用发布到不同的市场，以便将它们分发给最终用户。对于iOS，是苹果应用商店。在Android上，主要选择是谷歌应用商店。
- en: If you're new to mobile development thanks to the power of React Native, this
    will seem like a new world for you. Having a background in the Web, I personally
    felt lost at first when it came time to publish my first mobile app-after all,
    we're used to deploying our apps to a server.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您因为React Native的力量而涉足移动开发，这对你来说将是一个全新的世界。由于我在Web方面有背景，我最初在发布我的第一个移动应用时感到有些迷茫——毕竟，我们习惯于将应用部署到服务器上。
- en: 'In this chapter, you''re going to do the following things:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将执行以下操作：
- en: Discover the requirements for submitting an app to both the Apple App Store
    and Google Play
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解提交应用到苹果应用商店和谷歌应用商店的要求
- en: Learn about the importance of app logos and screenshots
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解应用标志和截图的重要性
- en: Write a description for our application
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为我们的应用编写描述
- en: For iOS, verify our app with Xcode and bundle it for submission to iTunes Connect
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于iOS，使用Xcode验证我们的应用并将其打包提交到iTunes Connect
- en: Submit the iOS app for review with Apple
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将iOS应用提交给苹果进行审查
- en: Use TestFlight to create internal and external beta tests for users
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用TestFlight为用户创建内部和外部beta测试
- en: Use the Developer Console to add and submit our Android application to Google
    Play
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用开发者控制台添加并提交我们的安卓应用到谷歌应用商店
- en: Learn how to send alpha and beta versions of our Android apps to test users
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何向测试用户发送我们安卓应用的alpha和beta版本
- en: Basic requirements
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本要求
- en: At a base level, to submit your apps to either the App Store or Google Play,
    you will need a developer membership for the platform(s) of your choice.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在基本层面上，要将您的应用提交到App Store或Google Play，您将需要您选择平台（s）的开发者会员资格。
- en: For iOS, you will need an Apple Developer membership. This annual, paid membership
    gives you the ability to publish on all of Apple's platforms-iOS, macOS, and tvOS.
    It also grants you the option of sending preproduction versions of your applications
    to beta testers first.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 对于iOS，您需要一个苹果开发者会员资格。这个年度的付费会员资格让您能够在苹果的所有平台上发布——iOS、macOS和tvOS。它还为您提供了将应用程序的预生产版本首先发送给beta测试者的选项。
- en: With distribution to an Android device, the most popular channel is the Google
    Play Store. It reaches every official, Google-supported Android device and requires
    a Publisher Account.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在安卓设备上进行分发，最受欢迎的渠道是谷歌应用商店。它覆盖了所有官方的、谷歌支持的安卓设备，并需要一个发布者账户。
- en: For both apps, we also need to provide app icons so that our users don't install
    a blank icon to their devices, and screenshots so that they have a better idea
    of what they are downloading in advance.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这两个应用，我们还需要提供应用图标，这样我们的用户就不会在设备上安装一个空白图标，并且需要提供截图，以便他们在下载前有一个更好的了解。
- en: Before we go any further, it should be stated that the app we've built, with
    the included screenshots, may not be accepted by an editorial board for sale on
    either App Store. We're using this project as a means to have a working app for
    going through the motions of actually submitting an application.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续之前，应该指出的是，我们构建的应用，包括截图，可能不会被任何一家应用商店的编辑委员会接受销售。我们正在使用这个项目作为拥有一个可工作的应用，以便实际提交应用程序的过程。
- en: Creating developer memberships
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建开发者会员资格
- en: The process for signing up for a developer membership in either store is different.
    Since the prerequisites and steps to do so may change at any given time, I will
    spare you the step-by-step details.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两个商店中注册开发者会员资格的过程是不同的。由于这些先决条件和步骤可能会随时更改，我将省略详细的步骤说明。
- en: Enrolling in the Apple Developer Program
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 注册苹果开发者计划
- en: To sign up for an Apple Developer account, point your browser to [https://developer.apple.com](https://developer.apple.com).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 要注册苹果开发者账户，请将您的浏览器指向[https://developer.apple.com](https://developer.apple.com)。
- en: Joining the Apple Developer Program requires an Apple ID. As of the publishing
    of this book, members pay a $99 annual fee for the program.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 加入苹果开发者计划需要一个苹果ID。截至本书出版时，会员每年需支付99美元的会员费。
- en: Signing up for a Google Play Publisher account
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 注册谷歌应用商店发布者账户
- en: To get started with your Publisher account, point your browser to [https://play.google.com/apps/publish](https://play.google.com/apps/publish).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始您的发布者账户，请将您的浏览器指向[https://play.google.com/apps/publish](https://play.google.com/apps/publish)。
- en: To sign up for a Google Play Publisher Account, you will need a Google Account-usually,
    this is your Gmail address. As of the publishing of this book, the program requires
    a $25 one-time fee to join.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 要注册 Google Play Publisher 账户，你需要一个 Google 账户——通常，这是你的 Gmail 地址。截至本书出版时，该计划要求支付
    25 美元的单次费用才能加入。
- en: Making your app look great
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使你的应用程序看起来很棒
- en: In addition to having membership in the appropriate platforms' developer programs,
    submitting your application to either store requires that you provide it with
    an app logo, screenshots of the app, and a description.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 除了在适当的平台开发者程序中拥有会员资格外，将你的应用程序提交到任一商店还需要你提供应用程序的标志、应用程序的截图和描述。
- en: Creating an icon
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建图标
- en: Icons are the gateway to your application. It's what your users will interact
    with to access your app. To submit an application to the appropriate marketplace
    of your choice, it has to have an icon.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图标是进入你应用程序的门户。这是用户将与之交互以访问应用程序的方式。为了将应用程序提交到你选择的适当市场，它必须有一个图标。
- en: Because an icon is your app's brand, it's increasingly not enough to simply
    create a solid color shade and slap some text on it-users expect more.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 因为图标是应用程序的品牌，仅仅创建一个纯色阴影并在上面添加一些文字已经不够了——用户期望更多。
- en: Personally, I like using Sketch ([https://www.sketchapp.com/](https://www.sketchapp.com/))
    to design my app icons. While my design skills are not the greatest, I find it
    simple and intuitive to use.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 个人来说，我喜欢使用 Sketch ([https://www.sketchapp.com/](https://www.sketchapp.com/))
    来设计我的应用程序图标。虽然我的设计技能不是最好的，但我发现它简单直观。
- en: There are so many ways you can procure an icon for your application. You could
    hire someone (either locally or online) to design one, or create one yourself
    using a plethora of applications.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以为你的应用程序获取图标的方式有很多。你可以雇佣某人（无论是本地还是在线）来设计一个，或者使用大量的应用程序自己创建一个。
- en: When I need to generate different-sized app icons for submission to the App
    Store and Google Play, my go-to service is MakeAppIcon ([https://makeappicon.com](https://makeappicon.com)),
    which is available on the Web as a drag and drop service, as well as a standalone
    Mac app.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 当我需要为提交到 App Store 和 Google Play 的不同尺寸的应用程序图标生成图标时，我首选的服务是 MakeAppIcon ([https://makeappicon.com](https://makeappicon.com))，它作为一个拖放服务在网络上提供，同时也是一个独立的
    Mac 应用程序。
- en: Taking app screenshots
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 拍摄应用截图
- en: Screenshots give your potential app customers a glimpse into how your application
    looks.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕截图可以让你的潜在应用程序客户一窥你的应用程序的外观。
- en: One quick way to create screenshots is simply to take them on your device or
    simulator with the application running, and then upload those to the App Store
    or Google Play.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 创建截图的一个快速方法是直接在设备或模拟器上运行应用程序时拍摄它们，然后将这些截图上传到 App Store 或 Google Play。
- en: You can add additional aesthetics to your screenshots using a variety of services.
    There happens to be one that imposes your screenshot within the photo of an iOS
    device, giving your potential customers a look at how the app appears on a physical
    device.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用各种服务为你的截图添加额外的美学元素。有一个服务会将你的截图置于 iOS 设备的照片中，让你的潜在客户看到应用程序在物理设备上的外观。
- en: To add things such as a device/background to my screenshots, LaunchKit has a
    great Sketch-to-App-Store plugin ([http://sketchtoappstore.com/](http://sketchtoappstore.com/))
    that can help make this happen, though the devices available to impose your screenshots
    on are a bit dated-the most recent iOS device is an iPhone 6 Plus, and the only
    available Android device is a Nexus 5.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 要将设备/背景等元素添加到我的屏幕截图上，LaunchKit 提供了一个出色的 Sketch-to-App-Store 插件([http://sketchtoappstore.com/](http://sketchtoappstore.com/))，它可以帮助实现这一功能，尽管可用于将截图应用于其上的设备有些过时——最新的
    iOS 设备是 iPhone 6 Plus，唯一可用的 Android 设备是 Nexus 5。
- en: There are also services that help strip out the status bar in case you don't
    want it shown in your screenshot--especially important if you're taking that screenshot
    on a device with a heavily populated status bar or if your screenshots have varying
    times showing on the bar and you want to present them with a level of consistency.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有一些服务可以帮助去除状态栏，以防你不想在屏幕截图中显示它——特别是如果你在状态栏内容繁多的设备上截图，或者你的截图在状态栏上显示的时间不同，而你希望以一致的方式展示它们。
- en: I like using Status Barred from the Mac App Store ([https://itunes.apple.com/us/app/status-barred/id413853485?mt=12](https://itunes.apple.com/us/app/status-barred/id413853485?mt=12))
    to crop the status bar from my screenshots.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢使用来自 Mac App Store 的 Status Barred ([https://itunes.apple.com/us/app/status-barred/id413853485?mt=12](https://itunes.apple.com/us/app/status-barred/id413853485?mt=12))
    来从我的屏幕截图中裁剪状态栏。
- en: Writing a description
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写描述
- en: Without a proper description, your potential customers won't know what your
    application does or have the relevant information to decide whether to install
    your app or not. Regardless of whether your app is free or paid, the lack of a
    proper description will be a negative strike against your application.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 没有一个合适的描述，您的潜在客户将不知道您的应用做什么，或者没有足够的信息来决定是否安装您的应用。无论您的应用是免费还是付费，缺乏合适的描述都将对您的应用产生负面影响。
- en: A simple one-liner won't do it either--you want to convey to your potential
    customers exactly why they want to download your app. What does it do? What features
    does it have that will make your users interested in it?
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 简单的一行也不行——您想要向您的潜在客户清楚地传达他们为什么要下载您的应用。它做什么？它有哪些功能会让用户感兴趣？
- en: Always take the opportunity to write a detailed description for your application.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 总是抓住机会为您的应用写一个详细的描述。
- en: Combining it all
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 综合所有内容
- en: Like it or not, a good description alongside a nice app icon and screenshots
    does make or break your app when a potential customer decides whether to download
    it or not.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 不管你是否喜欢，一个好的描述，加上一个漂亮的图标和截图，确实会在潜在客户决定是否下载你的应用时起到决定性的作用。
- en: Once you have a developer membership, an icon, screenshots for your app, and
    a description, you're ready to start the process of submitting your application
    for the world to enjoy.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您拥有了开发者会员资格，有了应用图标、截图和描述，您就可以开始提交您的应用，让全世界都能享受它。
- en: Next, we are going to go through the steps taken to submit `Friends`, our Facebook
    client, over to both the App Store and Google Play.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将介绍如何将我们的Facebook客户端“朋友”提交到App Store和Google Play。
- en: Apple App Store
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Apple App Store
- en: 'The first thing we need to do is give our app an iOS App ID. In the Apple Developer
    portal at [https://developer.apple.com](https://developer.apple.com), select Certificates,
    Identifiers & Profiles:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先需要为我们的应用提供一个iOS App ID。在Apple开发者门户[https://developer.apple.com](https://developer.apple.com)中，选择证书、标识符和配置文件：
- en: '![](img/Image-1.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图片1](img/Image-1.png)'
- en: 'Once you are in the portal to manage your Certificates, Identifiers, & Profiles,
    select the option for App IDs, then press the add button in the upper-right corner:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您进入管理您的证书、标识符和配置文件的门户，选择App IDs选项，然后点击右上角的添加按钮：
- en: '![](img/Image-2.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![图片2](img/Image-2.png)'
- en: This will take you to a page that allows you to register an App ID. Give it
    a name (without special characters) and then decide whether you'll give the app
    an Explicit App ID or Wildcard App ID, followed by announcing any services that
    you intend to enable in your app.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这将带您到一个页面，允许您注册一个App ID。给它起一个名字（不要使用特殊字符），然后决定您是否会给应用一个显式App ID或通配符App ID，接着宣布您打算在应用中启用哪些服务。
- en: An Explicit App ID is required if you implement app-specific services such as
    push notifications, in-app purchases, and Apple Pay.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您实现了如推送通知、应用内购买和Apple Pay等特定于应用的服务，则需要一个显式App ID。
- en: 'If you don''t plan on using any app-specific services, Apple recommends that
    you use a Wildcard App ID instead:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不打算使用任何特定于应用的服务，Apple建议您使用通配符App ID：
- en: '![](img/Image-3.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![图片3](img/Image-3.png)'
- en: 'Once configured, you''ll be asked to confirm your App ID. If everything looks
    right, hit the Register button to complete registration of your App ID:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 配置完成后，您将被要求确认您的App ID。如果一切看起来都正确，点击注册按钮完成App ID的注册：
- en: '![](img/Image-4.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图片4](img/Image-4.png)'
- en: With an App ID for Friends created, our next step is to open the project in
    Xcode and make some changes to our project.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 创建了“朋友”的App ID后，我们的下一步是打开Xcode中的项目，并对我们的项目做一些修改。
- en: Modifying the Bundle ID in Xcode
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Xcode中修改Bundle ID
- en: Open the folder where your repo for `Friends` is located, and go into the `ios`
    folder. Open `Friends.xcodeproj`, which will automatically launch in Xcode.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 打开您的“朋友”仓库所在的文件夹，进入“ios”文件夹。打开“Friends.xcodeproj”，它将在Xcode中自动打开。
- en: In Xcode, go to the General tab for your project and select the Team drop-down
    menu under Signing. Sign in with your Apple ID and password. Once you do so, a
    Signing Certificate should be automatically generated for you.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在Xcode中，转到您的项目的一般选项卡，然后在签名下选择团队下拉菜单。使用您的Apple ID和密码登录。一旦这样做，就会为您自动生成一个签名证书。
- en: Then, under Identity, set your Bundle Identifier to the App ID you previously
    added in the Apple Developer Portal. After this, we'll add an icon for the app.
    I've added icons that you can use for this reason in the repository belonging
    to this chapter.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在 Identity 下，将您的 Bundle Identifier 设置为您之前在 Apple 开发者门户中添加的应用 ID。之后，我们将为应用程序添加一个图标。我已在此章节所属的存储库中添加了您可以使用此原因的图标。
- en: Adding app icons in Xcode
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Xcode 中添加应用程序图标
- en: 'While still in the General tab, select the arrow to the immediate right of
    the App Icons Source drop-down menu:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在仍然处于 General 选项卡的情况下，选择 App Icons Source 下拉菜单右侧的箭头：
- en: '![](img/Screen_Shot_2016-12-27_at_10_02_00_PM.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Screen_Shot_2016-12-27_at_10_02_00_PM.png)'
- en: 'Afterwards, you will be taken to a screen that will let you drag and drop image
    assets to their corresponding logos. Xcode will provide warnings if you end up
    adding an incorrectly sized icon to the wrong drop zone:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，您将被带到屏幕，允许您将图像资源拖放到相应的标志上。如果最终将错误尺寸的图标添加到错误的拖放区域，Xcode 将提供警告：
- en: '![](img/Screen-Shot-2016-12-27-at-10.03.18-PM.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Screen-Shot-2016-12-27-at-10.03.18-PM.png)'
- en: The text underneath each drop zone's section shows the target resolution for
    each icon.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 每个拖放区域下方的文本显示了每个图标的目标分辨率。
- en: Once you have your app icons set up, it's time to create an archive of your
    application for submission to iTunes Connect.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您设置了应用程序图标，就是时候创建应用程序存档以提交到 iTunes Connect。
- en: Creating an archive
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建存档
- en: 'First up, let''s make sure that our project''s scheme settings are properly
    archiving the release version of our app and not the debugging one by going into
    the Mac Toolbar when Xcode is open and selecting Product | Scheme | Edit Scheme:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们确保在 Xcode 打开时进入 Mac 工具栏，选择 Product | Scheme | Edit Scheme，以确保我们的项目方案设置正确存档了应用程序的发布版本而不是调试版本：
- en: '![](img/image_08_007-2.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_08_007-2.png)'
- en: 'Once this pane has opened, select the Archive option on the left-hand column
    and confirm that the Build Configuration is set to Release:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦打开此面板，选择左侧的 Archive 选项并确认构建配置设置为 Release：
- en: '![](img/image_08_008.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_08_008.png)'
- en: 'Now, close this and go over to this drop-down menu, which lets you select the
    device to build and run your app for in Xcode:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，关闭此窗口并转到此下拉菜单，它允许您在 Xcode 中选择构建和运行应用程序的设备：
- en: '![](img/image_08_009-2.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_08_009-2.png)'
- en: Xcode will not allow you to create an archive of an app whose target is an iOS
    Simulator device. If you attempt to do so, the option will simply be grayed out
    under the Product menu.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: Xcode 不允许您创建目标为 iOS 模拟器设备的应用程序存档。如果您尝试这样做，该选项将在 Product 菜单下简单地变灰。
- en: 'Click on this drop-down menu and select Generic iOS Device:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 点击此下拉菜单并选择 Generic iOS Device：
- en: '![](img/image_08_010-2.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_08_010-2.png)'
- en: 'Finally, go back to the Product menu in Xcode and select Archive:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，回到 Xcode 的 Product 菜单并选择 Archive：
- en: '![](img/image_08_011.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_08_011.png)'
- en: 'Xcode will now build and archive your app to get it ready for distribution
    to iTunes Connect. If everything works great, you''ll see the following list of
    archives with some options on the right-hand side:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，Xcode 将构建和存档您的应用程序，以便将其准备好分发到 iTunes Connect。如果一切顺利，您将看到以下存档列表，右侧有一些选项：
- en: '![](img/Image-5.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Image-5.png)'
- en: Keep this screen open, since we will need it in a moment. For now, let's go
    into iTunes Connect to add the app to our account.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 保持此屏幕打开，因为我们很快就会需要它。现在，让我们进入 iTunes Connect 以将应用程序添加到我们的账户中。
- en: iTunes Connect
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: iTunes Connect
- en: iTunes Connect is the portal Apple developers use to submit their applications.
    To get there, point your browser to [https://itunesconnect.apple.com](https://itunesconnect.apple.com)
    and sign in if needed. You'll land on the iTunes Connect dashboard. On it, select
    My Apps, which is the first app on the left in the top row.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: iTunes Connect 是苹果开发者提交其应用程序的门户。要进入，请将浏览器指向 [https://itunesconnect.apple.com](https://itunesconnect.apple.com)
    并在需要时登录。您将进入 iTunes Connect 仪表板。在仪表板上，选择 My Apps，这是顶部行左侧的第一个应用程序。
- en: Once selected, you'll arrive at a list of apps you have submitted to iTunes
    Connect, and their statuses.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 选择后，您将到达一个列表，列出了您已提交到 iTunes Connect 的应用程序及其状态。
- en: '![](img/Image-6.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Image-6.png)'
- en: 'To submit a new app, choose the add symbol in the top-left corner and select
    New App:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 要提交新应用程序，请选择左上角的添加符号并选择 New App：
- en: '![](img/Image-7.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Image-7.png)'
- en: 'You''ll be asked to fill out some details about your app in the modal that
    appears. Select your platform (iOS), give the app a name, primary language, Bundle
    ID (mapped to the App ID in the Developer Portal you created, which is also your
    application''s Bundle ID in Xcode), and a unique SKU:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 您将被要求在出现的模态窗口中填写有关您应用的详细信息。选择您的平台（iOS），为应用命名，主要语言，Bundle ID（映射到您在开发者门户中创建的应用ID，这同时也是您在Xcode中的应用的Bundle
    ID），以及一个唯一的SKU：
- en: '![](img/image_08_015.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![图片-08_015](img/image_08_015.png)'
- en: Once you complete this step, you'll be taken to a summary page about your app.
    Let's skip back to Xcode for now and finish the process of validating and submitting
    our app to iTunes Connect.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此步骤后，您将被带到有关您应用的摘要页面。现在让我们回到Xcode，完成验证和提交我们的应用到iTunes Connect的过程。
- en: Validating our app in Xcode
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Xcode中验证我们的应用
- en: 'Go ahead and select Validate in the last screen you were in with Xcode, which
    should result in this Summary screen:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在Xcode的最后屏幕中选择“验证”，这将导致出现此摘要屏幕：
- en: '![](img/image_08_016.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![图片-08_016](img/image_08_016.png)'
- en: Click on the Validate button. Let it do its work in communicating with iTunes
    Connect and, if everything checks out, you'll receive a Validation Successful
    prompt. If this is the case, hit Done and let's begin uploading our app.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“验证”按钮。让它与iTunes Connect通信，如果一切检查无误，您将收到“验证成功”提示。如果是这种情况，点击“完成”，然后让我们开始上传我们的应用。
- en: 'Pressing the Upload to App Store button, you will be prompted with a similar
    request to choose your Development Team and then press Upload:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 按下“上传到App Store”按钮，您将收到一个类似请求，要求您选择您的开发团队，然后点击上传：
- en: '![](img/image_08_017.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![图片-08_017](img/image_08_017.png)'
- en: At this point, the archive of your project will begin the process of uploading
    and verifying its assets with the App Store. Give it some time and, once it's
    finished, you will see an Upload Successful prompt. Once you do, let's go right
    back to iTunes Connect.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 到此为止，您项目的存档将开始上传并验证其资产与App Store的过程。请给它一些时间，一旦完成，您将看到“上传成功”提示。一旦完成，让我们立即回到iTunes
    Connect。
- en: Submitting our app for review
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提交我们的应用进行审查
- en: We have a few final steps before we can submit our app for review. First, we
    need to add screenshots to it. In the folder for this chapter, I have added screenshots
    that you can play around with.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们可以提交我们的应用进行审查之前，我们还有一些最终步骤。首先，我们需要向其中添加截图。在本章的文件夹中，我已经添加了一些您可以尝试的截图。
- en: 'We''ll select our app under the label 1.0 Prepare for Submission in the left-hand
    column, then drag our screenshots to the drop zone:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在左侧列标的“1.0 准备提交”标签下选择我们的应用，然后将我们的截图拖到拖放区：
- en: '![](img/Image-8.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![图片-8](img/Image-8.png)'
- en: 'Next, give the app a Description, some Keywords, and Support, and Marketing
    URLs. After you''ve done so, scroll down and select a build to submit--this will
    be the one we just uploaded to the App Store through Xcode, in the previous section:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，为应用提供描述、一些关键词和支持以及营销URL。完成这些后，向下滚动并选择要提交的构建--这将是我们在上一节通过Xcode上传到App Store的构建：
- en: '![](img/Image-9.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![图片-Image-9](img/Image-9.png)'
- en: iTunes Connect automatically scales down images made for a 5.5" display so that
    smaller display types don't need their own unique images unless you wish to assign
    them yourself.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: iTunes Connect会自动调整用于5.5英寸显示屏的图片大小，以便较小的显示类型不需要自己的独特图片，除非您希望自行分配。
- en: '![](img/image_08_020.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![图片-08_020](img/image_08_020.png)'
- en: 'You''ll find that the builds you''ve uploaded through Xcode are automatically
    populated in the modal that appears, with its corresponding version and build
    numbers that you''ve assigned in Xcode:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 您会发现通过Xcode上传的构建会自动填充在出现的模态窗口中，其中包含您在Xcode中分配的相应版本和构建号：
- en: '![](img/image_08_021.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![图片-08_021](img/image_08_021.png)'
- en: 'Once selected, the Build section in iTunes Connect will update with your app''s
    information:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦选择，在iTunes Connect中的“构建”部分将更新您的应用信息：
- en: '![](img/image_08_022.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![图片-08_022](img/image_08_022.png)'
- en: 'The next step is to include an app icon of 1024 × 1024 under General App Information
    and to populate it with a copyright and your contact information:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是在“常规应用信息”下包含一个1024 × 1024的应用图标，并填写版权信息和您的联系信息：
- en: '![](img/image_08_023.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![图片-08_023](img/image_08_023.png)'
- en: Then, provide your contact information, along with any notes you'd like the
    App Store reviewers to read, as well as a Demo Account if one is necessary to
    use all the features of the app.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，提供您的联系信息，以及您希望App Store审阅者阅读的任何注释，以及如果需要使用应用的所有功能，请提供演示账户。
- en: 'Finally, decide whether you''d like your app to be released immediately or
    not once approved by the App Store reviewers:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，决定您的应用在App Store审阅者批准后是否立即发布：
- en: '![](img/image_08_024.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image_08_024.png)'
- en: When you've filled out all these details, press the Submit for Review button
    at the top. That's it, you're done! Pat yourself on the back and wait for Apple's
    review team to get back to you with either an approval or rejection.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 当你填写完所有这些详细信息后，请点击顶部的“提交审查”按钮。这就完成了！给自己鼓掌，并等待苹果的审查团队回复，无论是批准还是拒绝。
- en: Beta testing iOS apps with TestFlight
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 TestFlight 进行 iOS 应用测试
- en: TestFlight is a service Apple acquired a few years ago that is fully integrated
    with iTunes Connect. It lets you test your iOS apps before you release them on
    the App Store, with a select group of beta testers.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: TestFlight 是苹果几年前收购的一项服务，它与 iTunes Connect 完全集成。它允许你在将 iOS 应用发布到 App Store 之前，通过一组精选的测试者进行测试。
- en: Beta testing is important because it gives developers the ability to gather
    feedback on their app as it is being used in real-life situations, and discover
    bugs they might not have caught otherwise.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 测试是重要的，因为它让开发者能够在实际使用场景中收集关于他们应用的反馈，并发现他们可能没有注意到的错误。
- en: 'There are two kinds of tests you can run with TestFlight: **Internal** and
    **External** tests.'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 TestFlight 运行两种测试：**内部**和**外部**测试。
- en: In an Internal test, users within your team who have been assigned a Developer
    or Admin role in iTunes Connect can privately test the app, allowing you to gain
    feedback from them quickly. Up to 25 users can be part of an Internal test.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在内部测试中，你的团队中分配了开发者或管理员角色的用户可以私下测试应用，让你能够快速从他们那里获得反馈。最多可以有 25 名用户参与内部测试。
- en: For External tests, you can invite any users from outside your organization
    to test your app. Apps made available to an External test can accept up to 2,000
    users, and the app must be reviewed by Apple before you can begin testing.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 对于外部测试，你可以邀请任何组织外的用户来测试你的应用。可供外部测试的应用可以接受多达 2,000 名用户，并且你的应用必须在开始测试之前由苹果进行审查。
- en: From my experience, the Beta App Review process takes a significantly shorter
    period of time than the formal App Review process for publicly releasing your
    app to all users.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我的经验，Beta App 审查过程比正式的 App 审查过程要短得多，后者是将你的应用发布给所有用户。
- en: Entering test information
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 输入测试信息
- en: 'The first step in making your app available via TestFlight is to log in to
    iTunes Connect, select one of your apps, and then choose the TestFlight tab. Then,
    fill out the Test Information form to provide some details about your app:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 将你的应用通过 TestFlight 发布的第一步是登录到 iTunes Connect，选择你的一个应用，然后选择 TestFlight 选项卡。然后，填写
    Test Information 表单以提供一些关于你的应用的详细信息：
- en: '![](img/Image-10.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Image-10.png)'
- en: Once those details have been saved, you can begin setting up either an Internal
    or External test.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 保存这些详细信息后，你可以开始设置内部或外部测试。
- en: Creating an Internal beta test with TestFlight
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 TestFlight 创建内部测试
- en: 'To create an Internal test, select the Internal Test option in the sidebar
    and click on Select Version to Test, which will make the following modal visible:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建内部测试，请在侧边栏中选择“内部测试”选项，然后点击“选择要测试的版本”，这将使以下模态可见：
- en: '![](img/Image-11.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Image-11.png)'
- en: If you have uploaded multiple builds of your app, you should see them appear
    here. Select the one you wish to send out to your beta testers and press the Next
    button. If your app has not been previously configured to declare its Export Compliance,
    you will be brought to a second question on the modal asking if your app is designed
    to use, contain, or incorporate cryptography.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已上传了多个应用版本，你应该会看到它们在这里出现。选择你希望发送给测试者的版本，然后点击“下一步”按钮。如果你的应用尚未配置为声明其出口合规性，你将被带到模态的第二个问题，询问你的应用是否设计用于使用、包含或集成加密。
- en: Next, you can click on the Internal Testers box to add at least one tester.
    This list is populated with any users you have added via iTunes Connect. If you
    have not added anyone to your team so far, you will only see yourself as a listed
    beta tester.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你可以点击“内部测试者”框添加至少一个测试者。此列表将显示你通过 iTunes Connect 添加的任何用户。如果你到目前为止还没有添加任何人到你的团队，你将只会看到你自己作为列出的测试者。
- en: 'To change this, go back to the main iTunes Connect portal and select Users
    and Roles:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改这一点，请返回到主 iTunes Connect 门户并选择“用户和角色”：
- en: '![](img/image_08_027-2.png)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image_08_027-2.png)'
- en: 'Select the + icon to add a user, and fill out the multi-page form to proceed:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 选择 + 图标添加用户，并填写多页表单以继续：
- en: '![](img/image_08_028.png)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image_08_028.png)'
- en: Once you have added the users you wish to send an Internal test to, you can
    select them in the Internal Testing section of the TestFlight tab in the app you
    wish to beta test. When you have selected everyone, click the Start Testing button
    and your users will receive an e-mail notification to join the test!
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您添加了要发送内部测试的用户，您可以在要测试的beta测试应用的TestFlight标签页的内部测试部分中选择他们。当您选择了所有人后，点击“开始测试”按钮，您的用户将收到一封电子邮件通知，邀请他们加入测试！
- en: Creating an External beta test with TestFlight
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用TestFlight创建外部beta测试
- en: 'The process for creating an External test has a couple of things that differ
    from the Internal one. First, you will have to submit your app for review to Apple
    before it is approved for the External beta. When you click on the Add Build to
    Test button for an External test, you will see the following prompt to fill out
    more details about the app:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 创建外部测试的过程与内部测试有一些不同之处。首先，在您的应用获得外部beta测试批准之前，您必须向苹果提交您的应用进行审查。当您点击外部测试的“添加构建到测试”按钮时，您将看到以下提示，以便填写更多关于应用的详细信息：
- en: '![](img/image_08_029.png)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image_08_029.png)'
- en: This is for specifying to your users exactly what parts of the app they should
    be testing, along with a description for them to read. You will also need to provide
    an e-mail they can send feedback to, along with a marketing URL for your app.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 这是为了向您的用户明确说明他们应该测试应用哪些部分，以及为他们提供的阅读描述。您还需要提供一个他们可以发送反馈的电子邮件地址，以及您应用的营销URL。
- en: 'You will then be taken to two more parts of this modal, where you are asked
    to provide details for the Beta App Review team. The first part will consist of
    your Contact Information in the event Apple would like to get in touch with you
    regarding your app, along with the ability to add a test account for the Beta
    App Review team to use:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您将被带到这个模态框的另外两个部分，您需要为Beta App Review团队提供详细信息。第一部分将包括您的联系信息，以防苹果希望就您的应用与您联系，以及添加测试账户供Beta
    App Review团队使用的能力：
- en: '![](img/image_08_030.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image_08_030.png)'
- en: 'Afterwards, you will be asked to provide a description of the app and what
    the team should be aware of as they perform a review of your app:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，您将被要求提供应用的描述，以及团队在审查您的应用时应注意的事项：
- en: '![](img/image_08_031.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image_08_031.png)'
- en: 'You will not be able to begin an External test until your app has cleared Beta
    App Review:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 您必须先确保您的应用通过了Beta App Review，才能开始外部测试：
- en: '![](img/image_08_032.png)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image_08_032.png)'
- en: 'In the meantime, you can add users to the test with one of three options:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，您可以通过以下三种选项之一添加测试用户：
- en: '![](img/image_08_033.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image_08_033.png)'
- en: 'The first is to add new testers by entering their name and e-mail address,
    which will bring up a modal allowing you to do so:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个方法是输入测试者的姓名和电子邮件地址来添加新测试者，这将弹出一个模态框，允许您这样做：
- en: '![](img/image_08_034-2.png)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image_08_034-2.png)'
- en: The next option lets you add existing External test users that have beta tested
    any apps of yours in the past. That option will give you a list along with checkboxes
    for you to select users to add.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个选项允许您添加过去测试过您任何应用的现有外部测试用户。该选项将为您提供一份带有复选框的列表，以便您选择要添加的用户。
- en: The final option is to import a CSV file of your External test users.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个选项是导入外部测试用户的CSV文件。
- en: Once you have added at least one user and your build has been approved by Beta
    App Review, you can submit the app and begin the beta test!
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您添加了至少一个用户，并且您的构建已通过Beta App Review的批准，您就可以提交应用并开始beta测试！
- en: That's everything we are going to cover regarding the iOS App Store and iTunes
    Connect. In the next section, we will look at what we would do to upload Friends
    for Android to the Google Play Store.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们要介绍的有关iOS App Store和iTunes Connect的所有内容。在下一节中，我们将探讨如何将Friends for Android上传到Google
    Play Store。
- en: Google Play Store
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Google Play Store
- en: 'To submit an app to the Google Play Store, we''ll have to take the following
    steps:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 要将应用提交到Google Play Store，我们需要执行以下步骤：
- en: Add an App Icon
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加应用图标
- en: Give our app a unique package identifier
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为我们的应用提供一个独特的包标识符
- en: Generate a signed APK file
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成已签名的APK文件
- en: Upload that APK file to the Google Play developer portal
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将APK文件上传到Google Play开发者门户
- en: Add screenshots and a description for our app
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为我们的应用添加截图和描述
- en: Adding an app icon for Android
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为Android添加应用图标
- en: 'In order to give your Android app an icon, we''re going to navigate to the
    following folder in our repo: `android/app/src/main/res`.'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 为了给您的Android应用添加图标，我们将导航到以下文件夹：`android/app/src/main/res`。
- en: 'Then, add an icon image renamed `ic_launcher.png` to each of the four folders
    with the corresponding dimensions:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，将重命名为 `ic_launcher.png` 的图标图像添加到每个包含相应尺寸的四个文件夹中：
- en: '`mipmap-hdpi: 72 × 72`'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mipmap-hdpi: 72 × 72`'
- en: '`mipmap-mdpi: 48 × 48`'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mipmap-mdpi: 48 × 48`'
- en: '`mipmap-xhdpi: 96 × 96`'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mipmap-xhdpi: 96 × 96`'
- en: '`mipmap-xxhdpi: 144 × 144`'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mipmap-xxhdpi: 144 × 144`'
- en: Once you've added these images, run the `react-native run-android` command to
    build your app, and you should see the icons updated on the home screen of your
    Android Virtual Device.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 添加这些图像后，运行 `react-native run-android` 命令来构建你的应用，你应该会在你的 Android 虚拟设备的首页上看到图标已更新。
- en: For your convenience, app icons for the Android version of Friends have been
    made available in the repo pertaining to this chapter's code.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 为了方便起见，本章代码仓库中已经提供了 Friends 安卓版本的图标。
- en: Creating a unique package identifier
  id: totrans-176
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建唯一的包标识符
- en: Your APK won't be uploaded to the Google Play Developer Console if its package
    name is the same as another app that already exists in the Google Play Store.
    To give it a unique name, we'll first open Android Studio and import the `Android`
    folder of our app to it.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的 APK 的包名与 Google Play 商店中已存在的另一个应用相同，则不会将其上传到 Google Play 开发者控制台。为了给它一个独特的名字，我们首先打开
    Android Studio 并将我们的应用 `Android` 文件夹导入其中。
- en: Select Import Project (Eclipse ADT, Gradle, etc.) from the Android Studio welcome
    screen. Then navigate to the repository for your project and import just the `Android`
    folder within.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Android Studio 欢迎屏幕中选择“导入项目”（Eclipse ADT、Gradle 等）。然后导航到你的项目仓库，并仅导入其中的 `Android`
    文件夹。
- en: Afterwards, open `AndroidManifest.xml` and change the package name on the second
    line.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，打开 `AndroidManifest.xml` 并更改第二行的包名。
- en: 'Then, right-click on your `app` folder that contains the package identifier,
    and select Refactor | Rename. Then, give your package a new name:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，右键单击包含包标识符的 `app` 文件夹，选择“重构”|“重命名”。然后，给你的包起一个新的名字：
- en: '![](img/image_08_035.png)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_08_035.png)'
- en: Now open up `build.gradle` within the `android/app` folder, and replace any
    instances of your old package identifier with your new one. The changes you've
    made will be applied automatically.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 现在打开 `android/app` 文件夹中的 `build.gradle`，并将任何旧包标识符替换为新的。你做的更改将自动应用。
- en: Generating a Signed APK file
  id: totrans-183
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生成签名 APK 文件
- en: 'First, in your terminal, we''ll generate a private signing key:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在你的终端中，我们将生成一个私钥签名：
- en: '[PRE0]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You'll set a password for your keystore and key. Your release key will be labeled
    `friends-release-key`, unless you choose otherwise.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 你将为你的 keystore 和密钥设置密码。你的发布密钥将被标记为 `friends-release-key`，除非你选择其他名称。
- en: The `validity` flag in this command sets the validity of the key for `x` number
    of days. In this case, it's `10000`, due to our command.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令中的 `validity` 标志设置了密钥的有效期为 `x` 天。在这种情况下，由于我们的命令，它是 `10000`。
- en: This `keystore` file will be located at the directory in which your terminal
    prompt was when you ran the command. Move it over to `android/app` in your Friends
    app repo.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 此 `keystore` 文件将位于你运行命令时终端提示符所在的目录。将其移动到你的 Friends 应用仓库中的 `android/app` 目录下。
- en: Important! It's not a good idea to commit your `keystore` file to Git or any
    other version control system. Make sure to add this file to `.gitignore`.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 重要！将你的 `keystore` 文件提交到 Git 或任何其他版本控制系统不是一个好主意。确保将其添加到 `.gitignore` 文件中。
- en: 'Then, open up your `gradle.properties` file and add the following information:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，打开你的 `gradle.properties` 文件并添加以下信息：
- en: '[PRE1]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Replace `YOURPASSWORDHERE` with the password you created for your release store
    and release key.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `YOURPASSWORDHERE` 替换为你为发布商店和发布密钥创建的密码。
- en: 'Next up, we''re going to add the signing configuration to your app''s `build.gradle`
    file:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将向你的应用的 `build.gradle` 文件中添加签名配置：
- en: '[PRE2]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Afterwards, let''s generate the APK. Back in terminal, change to the `Android`
    directory and run the following:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，让我们生成 APK。回到终端，切换到 `Android` 目录并运行以下命令：
- en: '[PRE3]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The build process can take a few minutes. Once it's finished, you'll find your
    generated signed APK under `android/app/build/outputs/apk/app-release.apk`.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 构建过程可能需要几分钟。一旦完成，你将在 `android/app/build/outputs/apk/app-release.apk` 下找到生成的签名
    APK。
- en: 'If you''d like to test it out on an Android Virtual Device, simply change your
    directory back to the root of the project and run the following:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想在 Android 虚拟设备上测试它，只需将你的目录切换回项目的根目录，并运行以下命令：
- en: '[PRE4]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: If everything looks right, then let's go and submit the app to the Google Play
    Store!
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切看起来都正确，那么让我们提交应用到 Google Play 商店！
- en: Submitting to Google Play
  id: totrans-201
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提交到 Google Play
- en: Head over to the Google Play Developer Console at [https://play.google.com/apps/publish](https://play.google.com/apps/publish).
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 访问[https://play.google.com/apps/publish](https://play.google.com/apps/publish)的Google
    Play开发者控制台。
- en: 'Once you''re signed in with your Google account, select the Publish an Android
    App on Google Play option, which is the top-left in the quadrant of cards made
    visible:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 使用你的谷歌账户登录后，选择“在Google Play上发布安卓应用”选项，这是在可见卡片区域的最左上角：
- en: '![](img/Image-12.png)'
  id: totrans-204
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Image-12.png)'
- en: 'You''ll be prompted to give your app a Default language and Title:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 你将被提示为你的应用提供一个默认语言和标题：
- en: '![](img/image_08_037.png)'
  id: totrans-206
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image_08_037.png)'
- en: Once you create the app, you'll be taken to a page that allows you to edit the
    details of your application.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦创建了应用，你将被带到允许你编辑应用详细信息的页面。
- en: 'To submit an app, you''re going to need to fill out the following information:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 要提交一个应用，你需要填写以下信息：
- en: A high-resolution 512 × 512 icon
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高分辨率512 × 512图标
- en: A feature graphic
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 特效图形
- en: Two screenshots that are not for Android TV
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个非安卓TV的截图
- en: Category and content rating
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类别和内容评级
- en: Short and full description of the app
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用简短和完整描述
- en: Upload the APK we created earlier
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 上传我们之前创建的APK
- en: Target at least one country for distribution
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 至少针对一个国家进行分发
- en: A URL that points to the app's privacy policy
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指向应用隐私政策的URL
- en: Pricing information
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定价信息
- en: Declaration of whether or not the app contains advertising
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 声明应用是否包含广告
- en: 'Use the menu on the left-hand side to navigate between the four required tabs:
    Uploading your APK, the listing on the Play Store, Content rating, and Pricing
    information.'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 使用左侧菜单在四个必需标签页之间导航：上传你的APK、Play商店上的列表、内容评级和定价信息。
- en: 'When all of the details have been filled out, let''s navigate to the Manage
    releases section in the sidebar to begin the process of rolling out your app to
    the Google Play Store:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 当所有详情都已填写完毕，让我们导航到侧边栏中的“管理发布”部分，开始将你的应用到Google Play商店推出的过程：
- en: As of March 2017, Google is planning on deprecating the APK page in the sidebar
    and encourages everyone to start migrating over to the Manage releases page instead.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 截至2017年3月，谷歌计划弃用侧边栏中的APK页面，并鼓励大家开始迁移到“管理发布”页面。
- en: '![](img/Image-13.png)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image-13.png)'
- en: 'Select Production and you will be taken to the following page:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 选择“生产”并将带你到以下页面：
- en: '![](img/Image-14.png)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Image-14.png)'
- en: In the Google Play Developer Console, if you select your app and go into the
    Manage releases option in the sidebar, you will be asked to either upload a new
    APK or add an existing APK from the library. In this scenario, I chose Add APK
    from library, since I had already uploaded the `Friends APK` file previously.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 在Google Play开发者控制台中，如果你选择了你的应用并进入侧边栏中的“管理发布”选项，你将被要求上传一个新的APK或从库中添加一个现有的APK。在这种情况下，我选择了从库中添加APK，因为我之前已经上传了`Friends
    APK`文件。
- en: 'Then I was asked to select from my list of existing APKs:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我被要求从我的现有APK列表中选择：
- en: '![](img/image_08_040.png)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image_08_040.png)'
- en: Afterwards, give the app a Release Name and a Description regarding what is
    new with this release, before pressing the Review button in the bottom-right corner.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，为应用提供一个发布名称和关于这次发布新内容的描述，然后按底部右角的“审查”按钮。
- en: In the next step, you will be asked to review the details of your release before
    you roll it out to the public. Once you have confirmed the details are correct,
    press the Start rollout to production button in the bottom-right corner. You will
    be prompted for confirmation.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一步中，你将需要在你向公众推出之前审查你的发布详情。一旦你确认详情正确，请按底部右角的“开始推出到生产”按钮。你将收到确认提示。
- en: Once you have confirmed, the app will begin rolling out to the Google Play Store!
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦确认，应用将开始推出到Google Play商店！
- en: '![](img/Image-15.png)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Image-15.png)'
- en: Alpha and beta testing Android apps
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安卓应用的Alpha和Beta测试
- en: In the Manage releases page, you may have noticed there are buttons to manage
    alpha and beta releases of your app.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 在“管理发布”页面，你可能已经注意到有按钮可以管理你的应用的Alpha和Beta发布。
- en: Functionality-wise, there are currently no differences between an alpha and
    beta test. However, you can test two different versions of your app at the same
    time by running an alpha test for one version and a beta test for the other.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 在功能上，目前Alpha测试和Beta测试之间没有区别。然而，你可以通过为一个版本运行Alpha测试，为另一个版本运行Beta测试，同时测试你应用的两个不同版本。
- en: 'Each test can be run against one of three different testing methods, available
    to each track:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 每个测试都可以针对每个轨道可用的三种不同的测试方法之一运行：
- en: 'Open: This lets anyone with an opt-in link subscribe to it'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 公开：这允许任何拥有订阅链接的人订阅
- en: 'Closed: This is where you have to specifically invite people to the test with
    their e-mail address'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 私密：这里您需要具体邀请人们通过他们的电子邮件地址加入测试
- en: 'Testing using Google Groups or Google+ Communities: This is where only users
    in the groups or communities you specify will be allowed to join the test'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Google Groups 或 Google+ 社区进行测试：这里只允许您指定的组或社区中的用户加入测试
- en: You will also need to create an app release for each test track, which goes
    through the same workflow as rolling out an app to production.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 您还需要为每个测试轨道创建一个应用发布版本，其工作流程与将应用部署到生产环境相同。
- en: Once you have created a release for your test, a link will be generated for
    you to distribute among your testers, so they can install the app on their devices.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您为测试创建了发布版本，系统将为您生成一个链接，以便您在测试人员之间分发，他们可以在自己的设备上安装应用。
- en: Summary
  id: totrans-241
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: That's it for this chapter! You've just taken your first step into publishing
    the apps you build with React Native for both iOS and Android devices.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是本章的全部内容！您已经迈出了第一步，开始发布您用 React Native 为 iOS 和 Android 设备构建的应用。
- en: In this chapter, we learned about the requirements and costs of signing up for
    developer accounts to publish our apps to the Apple App Store and Google Play
    Store. Then we looked at the requirements for submitting an app to those marketplaces,
    including app icons and screenshots.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们了解了注册开发者账户以将我们的应用到苹果应用商店和谷歌应用商店发布的要求和成本。然后我们探讨了向这些市场提交应用的要求，包括应用图标和截图。
- en: We also built and uploaded app files for both platforms, generated a signed
    APK for our Android app, and then submitted the apps for distribution. Finally,
    we discovered how to make our apps available for prerelease testing with TestFlight
    for iOS and the Google Developer Console for Android.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还为两个平台构建并上传了应用文件，为我们的 Android 应用生成了一个签名 APK，然后提交了应用以进行分发。最后，我们发现了如何通过 iOS
    的 TestFlight 和 Android 的谷歌开发者控制台使我们的应用可用于预发布测试。
- en: In the final chapter, we're going to look at parts of the React Native SDK that
    we couldn't fit into our three existing projects, and discover how to use them.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 在最后一章中，我们将探讨我们无法融入现有三个项目的 React Native SDK 的部分，并了解如何使用它们。
