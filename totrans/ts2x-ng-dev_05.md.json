["```js\n// Code: 5.1\n//./src/app/app.component.ts\n\nimport { Component, OnInit } from '@angular/core';\n```", "```js\n// Code: 5.1\n//./src/app/app.component.ts\n\n@Component({ \n  selector: 'app-root', \n  templateUrl: './app.component.html',  \n  styleUrls: ['./app.component.css'] \n}) \nexport class AppComponent implements OnInit { \n  title: string = 'Items in Bag'; \n  items: Array<string> = []; \n  loading: boolean = false;  \n  ngOnInit () { \n    this.loading = true;  \n    setTimeout(() => { \n      this.items = [ \n         'Pen', \n         'Note', \n         'Mug', \n         'Charger', \n         'Passport', \n         'Keys' \n      ] \n     this.loading = false; \n   }, 3000) \n } \n}\n```", "```js\n<!-- Code: 5.1 -->\n<!-- ./src/app/app.component.html -->\n\n<div style=\"text-align:center\">  \n  <h1>  {{title}}!!  </h1>  \n  <h4 *ngIf=\"loading\">Please wait...</h4>  \n</div>  \n<ul>  \n  <li *ngFor=\"let item of items\">{{item}}</li>  \n</ul>\n```", "```js\nng g component tab\n```", "```js\n<ul>\n  <li *ngFor=\"let item of items\">{{item}}</li>  \n</ul>  \n\n<!--Add tab component to app-->\n<app-tab></app-tab>\n```", "```js\n<!--./src/app/tab/tab.component.css-->\n<div class=\"tab\">  \n  <button class=\"tablink\" (click)=\"openTab($event, 'London')\">London</button> \n  <button class=\"tablink\" (click)=\"openTab($event, 'Paris')\">Paris</button>\n  <button class=\"tablink\" (click)=\"openTab($event, 'Tokyo')\">Tokyo</button>\n</div>\n\n<div id=\"London\" class=\"tabcontent\">\n  <h3>London</h3>\n  <p>London is the capital city of England.</p>\n</div>\n<div id=\"Paris\" class=\"tabcontent\">\n  <h3>Paris</h3>\n  <p>Paris is the capital of France.</p>  \n</div>\n<div id=\"Tokyo\" class=\"tabcontent\">\n  <h3>Tokyo</h3>\n  <p>Tokyo is the capital of Japan.</p>\n</div>\n```", "```js\n// based on styles from the base sample\n\n/* ./src/app/tab/tab.component.css */\ndiv.tab {\n  overflow: hidden;\n  border: 1px solid #ccc;\n  background-color: #f1f1f1;\n } \n\ndiv.tab button {\n  background-color: inherit;\n  float: left;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  padding: 14px 16px;\n  transition: 0.3s;\n }\n\ndiv.tab button:hover {\n  background-color: #ddd;\n }   \n\ndiv.tab button.active {\n  background-color: #ccc;\n }   \n\n.tabcontent {\n  padding: 6px 12px;\n  border: 1px solid #ccc;\n  border-top: none;\n}\n```", "```js\n.tabcontent {  \n  display: none;\n }\n```", "```js\nimport { Component, ElementRef, OnInit, AfterContentInit } from '@angular/core';  \n\n@Component({\n  selector: 'app-tab',\n  templateUrl: './tab.component.html',\n  styleUrls: ['./tab.component.css']\n })\n\nexport class TabComponent implements OnInit, AfterContentInit {\n  tabContents: Array<HTMLElement>;\n  tabLinks: Array<HTMLElement>;\n\n  constructor(\n    private el: ElementRef\n  ) { }\n\n  ngOnInit() {}\n\n  ngAfterContentInit() {\n    // Grab the DOM\n    this.tabContents = this.el.nativeElement.querySelectorAll('.tabcontent');\n    this.tabLinks = this.el.nativeElement.querySelectorAll('.tablink');\n   }   \n} \n```", "```js\nexport class TabComponent implements OnInit, AfterContentInit {\n  tabContents: Array<HTMLElement>;\n  tabLinks: Array<HTMLElement>;\n  constructor(\n    private el: ElementRef\n  ) { }\n  ngOnInit() {}\n  ngAfterContentInit() {\n    this.tabContents = this.el.nativeElement.querySelectorAll('.tabcontent');\n    this.tabLinks = this.el.nativeElement.querySelectorAll('.tablink');\n\n    // Activate first tab\n\n    this.tabContents[0].style.display = \"block\";\n    this.tabLinks[0].className = \" active\";\n }\n} \n```", "```js\n<button class=\"tablink\" (click)=\"open($event, 'London')\">London</button> \n<button class=\"tablink\" (click)=\"open($event, 'Paris')\">Paris</button>\n<button class=\"tablink\" (click)=\"open($event, 'Tokyo')\">Tokyo</button>\n```", "```js\nexport class TabComponent implements OnInit, AfterContentInit {\n  tabContents: Array<HTMLElement>;\n tabLinks: Array<HTMLElement>;\n  constructor(\n private el: ElementRef\n  ) { }\n\n  // ...\n\n open(evt, cityName) {\n    for (let i = 0; i < this.tabContents.length; i++) {\n      this.tabContents[i].style.display = \"none\";\n    }\n    for (let i = 0; i < this.tabLinks.length; i++) {\n      this.tabLinks[i].className = this.tabLinks[i].className.replace(\" active\", \"\");\n    }\n   this.el.nativeElement.querySelector(`#${cityName}`).style.display = \"block\"; \n   evt.currentTarget.className += \" active\"; \n }\n} \n```", "```js\nng g component child\n```", "```js\n// Code 5.2\n<!-- ./src/app/app.component.html -->\n\n<div style=\"text-align:center\">\n  <h1>  This is parent component  </h1>\n  <app-child></app-child> \n</div>  \n```", "```js\n// Code 5.2\n<!-- ./src/app/child/child.component.html -->\n\n<h3>This is child component </h3> \n```", "```js\nh3 {  color: palevioletred }\n```", "```js\nh3 {\n  color: palevioletred\n}\n```", "```js\nh3 {\n  color: blueviolet\n}\n```", "```js\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-child',\n</span>  templateUrl: './child.component.html',\n  styleUrls: ['./child.component.css'],\n  // Encapsulation: Emulated\n  encapsulation: ViewEncapsulation.Emulated\n})\n\nexport class ChildComponent implements OnInit {\n   constructor() { }\n   ngOnInit() {  }\n} \n```", "```js\n@Component({\n  selector: 'app-child',\n  templateUrl: './child.component.html',\n  styleUrls: ['./child.component.css'],\n // Encapsulation: Native\n  encapsulation: ViewEncapsulation.Native\n})\n```", "```js\n@Component({\n  selector: 'app-child',\n  templateUrl: './child.component.html',\n  styleUrls: ['./child.component.css'],\n // Encapsulation: Native\n  encapsulation: ViewEncapsulation.None\n})\n```", "```js\n// child component style\nh1 {\n  color: blueviolet\n}\n```"]