- en: Chapter 11. Form Plug-In
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 11 章 表单插件
- en: You better find out
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你最好找出来
- en: ''
  id: totrans-2
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Before you fill in the blanks
  id: totrans-3
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在你填写空白之前
- en: ''
  id: totrans-4
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: —Devo,
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: —Devo,
- en: ''
  id: totrans-6
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '"Find Out"'
  id: totrans-7
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '"找出"'
- en: The **Form** plug-in is a terrific example of a script that makes a difficult,
    complex task dead simple. It assists us in AJAX submission of forms (even if the
    forms contain file upload fields), as well as inspection and manipulation of the
    contents of form fields.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**Form** 插件是一个很好的例子，它使得一个困难、复杂的任务变得非常简单。它帮助我们以 AJAX 方式提交表单（即使表单包含文件上传字段），以及检查和操作表单字段的内容。'
- en: AJAX Form Submission
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AJAX 表单提交
- en: These methods assist in submitting a form's contents to the server using AJAX
    calls.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这些方法有助于使用 AJAX 调用将表单内容提交到服务器。
- en: .ajaxSubmit()
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .ajaxSubmit()
- en: '| Sends a form''s contents to the server without a page refresh.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '| 发送表单内容到服务器而不刷新页面。'
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '|'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters (First Version)
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数 (第一个版本)
- en: '`success`: A callback to execute when the server successfully responds.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`success`：当服务器成功响应时执行的回调。'
- en: Parameters (Second Version)
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数 (第二个版本)
- en: '`options`: A map of options configuring the submission. Can contain the following
    items:'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`options`：配置提交的选项的映射。可以包含以下项目：'
- en: '`url` (optional): The URL to which the form will be submitted. The default
    value is the form''s `action` attribute value, or the current page''s URL if none
    is found.'
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`url` (可选)：表单将被提交到的 URL。默认值为表单的 `action` 属性值，如果没有找到则为当前页面的 URL。'
- en: '`type` (optional): The method to use when submitting the form (`GET` or `POST`).
    The default value is the form''s `method` attribute value, or `GET` if none is
    found.'
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`type` (可选)：提交表单时要使用的方法（`GET` 或 `POST`）。默认值为表单的 `method` 属性值，如果没有找到则为 `GET`。'
- en: '`beforeSubmit` (optional): A callback to execute before the request is sent.'
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`beforeSubmit` (可选)：在发送请求之前执行的回调。'
- en: '`dataType` (optional): How the response data will be interpreted. Can be `''xml'',
    ''script''`, or `''json''`.'
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dataType` (可选)：如何解释响应数据。可以是 `''xml'', ''script''` 或 `''json''`。'
- en: '`target` (optional): The element into which the response HTML will be placed.
    Can be a selector string, jQuery object, or DOM element reference. Only valid
    if `dataType` is omitted.'
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`target` (可选)：响应 HTML 将放置的元素。可以是选择器字符串、jQuery 对象或 DOM 元素引用。仅当省略 `dataType`
    时有效。'
- en: '`success` (optional): A callback to execute when the server successfully responds.'
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`success` (可选)：当服务器成功响应时执行的回调。'
- en: '`semantic` (optional): Whether to force strict HTML ordering of fields. The
    default value is `false`.'
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`semantic` (可选)：是否强制 HTML 字段的严格排序。默认值为 `false`。'
- en: '`resetForm` (optional): A Boolean indicating whether to reset the form values
    to their defaults after a successful submission. The default value is `false`.'
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`resetForm` (可选)：一个布尔值，指示在成功提交后将表单值重置为默认值。默认值为 `false`。'
- en: '`clearForm` (optional): A Boolean indicating whether to clear the form values
    after a successful submission. The default value is `false`.'
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`clearForm` (可选)：一个布尔值，指示是否在成功提交后清除表单值。默认值为 `false`。'
- en: Return Value
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: The jQuery object, for chaining purposes.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 用于链接目的的 jQuery 对象。
- en: Discussion
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 讨论
- en: The `.ajaxSubmit` method issues an AJAX request using the provided `url` and
    `type` information, along with the data currently present in the form. The form
    contents are encoded using the `.formToArray` method, and intricacies such as
    file uploading are handled behind the scenes.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '`.ajaxSubmit` 方法使用提供的 `url` 和 `type` 信息发起一个 AJAX 请求，同时使用表单中当前存在的数据。表单内容使用 `.formToArray`
    方法进行编码，而文件上传等细节则在幕后处理。'
- en: If a callback is provided using the `beforeSubmit` option, the callback will
    be fired before the request is sent. This gives us an opportunity to perform last-minute
    validation or cleanup. If a validation routine detects errors that the user must
    correct, the routine can return `false` to prevent the form from being submitted.
    The callback is passed the form data as returned by `.formToArray()`, the jQuery
    object that references the form, and the options object that was provided to `.ajaxSubmit()`.
    For an example of this callback in action, see the example in the discussion of
    `.ajaxForm()` later.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用 `beforeSubmit` 选项提供了回调函数，则在发送请求之前将触发该回调。这给我们一个机会来进行最后一分钟的验证或清理。如果验证程序检测到用户必须更正的错误，程序可以返回
    `false` 阻止表单提交。回调函数通过由 `.formToArray()` 返回的表单数据、引用表单的 jQuery 对象以及提供给 `.ajaxSubmit()`
    的选项对象来传递。有关此回调函数的示例，请查看后面关于 `.ajaxForm()` 的讨论中的示例。
- en: When a `dataType` is provided, the response data is interpreted accordingly.
    The processing performed is the same as with the `$.ajax` function for the supported
    data types. Any `script` responses are interpreted as JavaScript and executed
    in the global context, while `json` responses are parsed as a JavaScript object
    or array. Calls that specify an `xml` data type do not cause any parsing to occur
    when the response is received.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 当提供了`dataType`时，响应数据将相应地进行解释。所执行的处理与支持的数据类型的`$.ajax`函数相同。任何`script`响应都将被解释为
    JavaScript 并在全局上下文中执行，而`json`响应将被解析为 JavaScript 对象或数组。指定`xml`数据类型的调用在接收到响应时不会引起任何解析。
- en: If no `dataType` is provided, then we can instead use the `target` option. The
    DOM element referred to by the target will be filled with the response to the
    AJAX request, interpreted as plain HTML. The `dataType` and `target` options are
    mutually exclusive.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未提供`dataType`，则可以使用`target`选项。目标引用的 DOM 元素将被填充为 AJAX 请求的响应，解释为纯 HTML。`dataType`和`target`选项是互斥的。
- en: After any relevant processing has been performed due to the `dataType` or `target`
    options, the `success` callback is executed. This function is given the response
    data to act on. For information on ways to interpret and manipulate the response
    data, see the `$.ajax` function discussion in [Chapter 7](ch07.html "Chapter 7. AJAX
    Methods").
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在由于`dataType`或`target`选项而执行了任何相关处理后，将执行`success`回调。此函数会提供响应数据以进行操作。有关解释和操作响应数据的方法，请参见[第
    7 章](ch07.html "第 7 章. AJAX 方法")中的`$.ajax`函数讨论。
- en: The `semantic` flag forces strict semantic ordering at the expense of execution
    speed. For more information, see the `.formToArray()` discussion later.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '`semantic`标志以执行速度为代价强制使用严格的语义排序。有关更多信息，请参见稍后的`.formToArray()`讨论。'
- en: If `resetForm` or `clearForm` is set to `true`, the corresponding action will
    be taken before the `success` callback (if provided) is executed. For more information
    on these actions, see the `.clearForm` and `.resetForm` method discussions later.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`resetForm`或`clearForm`设置为`true`，则在执行`success`回调（如果提供）之前会执行相应的操作。有关这些操作的更多信息，请参见稍后的`.clearForm`和`.resetForm`方法讨论。
- en: If the form that is being submitted contains file upload fields, the file data
    will be properly uploaded using the `multipart/form-data` MIME type. No further
    action needs to be taken.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要提交的表单包含文件上传字段，则文件数据将使用`multipart/form-data` MIME 类型正确上传。无需采取进一步操作。
- en: Note that the `.ajaxSubmit` method executes immediately. Since it is common
    to issue the AJAX request when the submit button is clicked, it is typically more
    convenient to use the `.ajaxForm` method instead. However, the direct action of
    `.ajaxSubmit()` may be the easiest way to achieve interaction between this plug-in
    and others, such as the popular **Validation** plug-in.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`.ajaxSubmit`方法会立即执行。由于通常在单击提交按钮时发出 AJAX 请求，因此通常更方便使用`.ajaxForm`方法。但是，`.ajaxSubmit()`的直接操作可能是实现此插件与其他插件（如流行的**Validation**插件）之间交互的最简便方法。
- en: .ajaxForm()
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .ajaxForm()
- en: '| Prepares a form for automatic AJAX submission.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '| 准备一个表单以进行自动 AJAX 提交。'
- en: '[PRE1]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '|'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: '`options`: A map of options configuring the submission. Can contain the following
    items (which are passed along intact to `.ajaxSubmit())`:'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`options`：配置提交的选项映射。可以包含以下项目（这些项目将原样传递给`.ajaxSubmit()`）：'
- en: '`url` (optional): The URL to which the form will be submitted. The default
    value is the form''s `action` attribute value, or the current page''s URL if none
    is found.'
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`url`（可选）：表单将提交到的 URL。默认值为表单的`action`属性值，如果找不到则为当前页面的 URL。'
- en: '`type` (optional): The method to use when submitting the form (`GET` or `POST`).
    The default value is the form''s `method` attribute value, or `GET` if none is
    found.'
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`type`（可选）：提交表单时使用的方法（`GET`或`POST`）。默认值为表单的`method`属性值，如果找不到则为`GET`。'
- en: '`beforeSubmit` (optional): A callback to execute before the request is sent.'
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`beforeSubmit`（可选）：在发送请求之前执行的回调。'
- en: '`dataType` (optional): How the response data will be interpreted. Can be `''xml'',
    ''script''`, or `''json''`.'
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dataType`（可选）：响应数据的解释方式。可以是`''xml''，''script''`或`''json''`。'
- en: '`target` (optional): The element into which the response HTML will be placed.
    Can be a selector string, jQuery object, or DOM element reference. Only valid
    if `dataType` is omitted.'
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`target`（可选）：将响应 HTML 放置到其中的元素。可以是选择器字符串、jQuery 对象或 DOM 元素引用。仅当省略`dataType`时有效。'
- en: '`success` (optional): A callback to execute when the server successfully responds.'
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`success`（可选）：服务器成功响应时执行的回调。'
- en: '`semantic` (optional): Whether to force strict HTML ordering of fields. The
    default value is `false`.'
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`semantic`（可选）：是否强制使用严格的 HTML 字段顺序。默认值为 `false`。'
- en: '`resetForm` (optional): A Boolean indicating whether to reset the form values
    to their defaults after a successful submission. The default value is `false`.'
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`resetForm`（可选）：一个布尔值，指示在成功提交后是否将表单值重置为默认值。默认值为 `false`。'
- en: '`clearForm` (optional): A Boolean indicating whether to clear the form values
    after a successful submission. The default value is `false`.'
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`clearForm`（可选）：一个布尔值，指示在成功提交后是否清除表单值。默认值为 `false`。'
- en: Return Value
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: The jQuery object, for chaining purposes.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery 对象，用于链式调用目的。
- en: Discussion
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 讨论
- en: The `.ajaxForm` method prepares a form for later submission by AJAX. When the
    form is submitted, the AJAX request will use the provided `url` and `type` information,
    along with the data currently present in the form. The form contents are encoded
    using the `.formToArray` method, and intricacies such as file uploading are handled
    behind the scenes.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '`.ajaxForm` 方法通过 AJAX 准备表单以供稍后提交。当提交表单时，AJAX 请求将使用提供的 `url` 和 `type` 信息以及当前在表单中的数据。表单内容使用
    `.formToArray` 方法进行编码，并且诸如文件上传之类的复杂性在幕后处理。'
- en: Unlike the `.ajaxSubmit` method, the `.ajaxForm` method does not cause immediate
    action. Instead, it binds handlers to the `submit` event of the form and the `click`
    events of form buttons, which in turn cause the form contents to be sent as an
    AJAX request. This removes some of the work in setting up an AJAX form.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 与 `.ajaxSubmit` 方法不同，`.ajaxForm` 方法不会导致立即操作。相反，它将处理器绑定到表单的 `submit` 事件和表单按钮的
    `click` 事件，从而导致表单内容作为 AJAX 请求发送。这消除了设置 AJAX 表单的一些工作。
- en: In addition, the `.ajaxForm` method is able to simulate other aspects of a standard
    form submission that the `.ajaxSubmit` method cannot. The name and value of the
    submit button that was clicked are included with the request when `.ajaxForm()`
    does the job. Also, when a form contains an `<input>` field of type `image, .ajaxForm()`
    can capture the mouse coordinates and send them along with the request.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，`.ajaxForm` 方法能够模拟标准表单提交的其他方面，而`.ajaxSubmit` 方法则不能。当 `.ajaxForm()` 执行时，包括被点击的提交按钮的名称和值在内的请求会被包含在其中。此外，当表单包含一个类型为
    `image` 的 `<input>` 字段时，`.ajaxForm()` 可以捕获鼠标坐标并将它们与请求一起发送。
- en: For best results, the **Dimensions** plug-in should also be present when using
    image inputs. The Form plug-in will auto-detect the presence of Dimensions and
    use it if possible.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获得最佳效果，在使用图像输入时，**Dimensions** 插件也应该存在。Form 插件将自动检测 Dimensions 的存在，并在可能的情况下使用它。
- en: 'The `.ajaxForm` method can be used with forms containing any standard field
    type:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '`.ajaxForm` 方法可用于包含任何标准字段类型的表单：'
- en: '[PRE2]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'To prepare the form for submission, we only need to call `.ajaxForm()` once,
    when the DOM is ready:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 要准备表单进行提交，我们只需要在 DOM 就绪时调用 `.ajaxForm()` 一次。
- en: '[PRE3]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The user can then fill in the form fields:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 用户随后可以填写表单字段：
- en: '![Discussion.ajaxForm()about](img/3810_11_01.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![Discussion.ajaxForm()about](img/3810_11_01.jpg)'
- en: 'When the **Send** button is later clicked, the server receives all of the form
    information without a browser refresh. For testing purposes, we can use PHP''s
    `print_r` function to display the posted form contents:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 当稍后点击**发送**按钮时，服务器将接收到所有表单信息，而无需浏览器刷新。为了测试目的，我们可以使用 PHP 的 `print_r` 函数来显示已发布的表单内容：
- en: '[PRE4]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'If a callback is provided using the `beforeSubmit` option, the callback will
    be fired before the request is sent. The callback is passed the form data as returned
    by `.formToArray()`, the jQuery object that references the form, and the options
    object that was provided to `.ajaxForm()`. This callback is primarily useful for
    performing form validation:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用 `beforeSubmit` 选项提供回调函数，则在发送请求之前将触发回调。回调以由 `.formToArray()` 返回的表单数据、引用表单的
    jQuery 对象和提供给 `.ajaxForm()` 的选项对象作为参数传递。此回调主要用于执行表单验证：
- en: '[PRE5]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: If a validation routine detects errors that the user must correct, the routine
    can return `false` to prevent the form from being submitted. In our example here,
    a value must be entered in the **City** field, or an alert will be shown and no
    submission will occur.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如果验证例程检测到用户必须更正的错误，则该例程可以返回 `false` 以防止提交表单。在我们的示例中，**城市**字段必须输入一个值，否则将显示警报并且不会提交。
- en: When a `dataType` is provided, the response data is interpreted accordingly.
    The processing performed is the same as with the `$.ajax` function, for the supported
    data types. Any `script` responses are interpreted as JavaScript and executed
    in the global context, while `json` responses are parsed as a JavaScript object
    or array. Calls that specify an `xml` data type do not cause any parsing to occur
    when the response is received.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 当提供了`dataType`时，响应数据将相应地进行解释。执行的处理与`$.ajax`函数相同，适用于支持的数据类型。任何`script`响应都将被解释为JavaScript并在全局上下文中执行，而`json`响应将被解析为JavaScript对象或数组。指定`xml`数据类型的调用在接收到响应时不会引起任何解析。
- en: If no `dataType` is provided, then we can instead use the `target` option. The
    DOM element referred to by the target will be filled with the response to the
    AJAX request, interpreted as plain HTML. The `dataType` and `target` options are
    mutually exclusive.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未提供`dataType`，则可以使用`target`选项。由目标引用的DOM元素将填充为AJAX请求的响应，解释为纯HTML。`dataType`和`target`选项是互斥的。
- en: After any relevant processing has been performed due to the `dataType` or `target`
    options, the `success` callback is executed. This function is given the response
    data to act on. For information on ways to interpret and manipulate the response
    data, see the `$.ajax` function discussion in [Chapter 7](ch07.html "Chapter 7. AJAX
    Methods").
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在由于`dataType`或`target`选项而执行了任何相关处理后，将执行`success`回调。此函数被给予响应数据以便执行操作。有关解释和操作响应数据的方法，请参见[第7章](ch07.html
    "第7章 AJAX 方法")中的`$.ajax`函数讨论。
- en: The `semantic` flag forces strict semantic ordering at the expense of execution
    speed. For more information, see the `.formToArray()` discussion later.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '`semantic`标志以执行速度为代价强制执行严格的语义顺序。有关更多信息，请参见稍后的`.formToArray()`讨论。'
- en: If `resetForm` or `clearForm` is set to `true`, the corresponding action will
    be taken before the `success` callback (if provided) is executed. For more information
    on these actions, see the `.clearForm` and `.resetForm` method discussions later.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`resetForm`或`clearForm`设置为`true`，则会在执行`success`回调（如果提供）之前执行相应的操作。有关这些操作的更多信息，请参见稍后的`.clearForm`和`.resetForm`方法讨论。
- en: If the form being submitted contains file upload fields, the file data will
    be properly uploaded using the `multipart/form-data` MIME type. No further action
    needs to be taken.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要提交的表单包含文件上传字段，则文件数据将使用`multipart/form-data` MIME类型正确上传。无需采取进一步的操作。
- en: .ajaxFormUnbind()
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .ajaxFormUnbind()
- en: '| Restores a form to its non-AJAX state.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '| 将表单恢复到其非AJAX状态。'
- en: '[PRE6]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '|'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: None.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 无。
- en: Return Value
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: The jQuery object, for chaining purposes.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 用于链接目的的jQuery对象。
- en: Discussion
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 讨论
- en: Calling `.ajaxForm()` on a form binds handlers to the `submit` event of the
    form and to the `click` events of any buttons and image inputs therein. If at
    a later time the form should no longer submit using AJAX, we can call `.ajaxFormUnbind()`
    on the same form to remove these handlers without disrupting any other handlers
    that may have been bound to the form elements.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在表单上调用`.ajaxForm()`会将处理程序绑定到表单的`submit`事件以及其中任何按钮和图像输入的`click`事件上。如果以后表单不再使用AJAX提交，我们可以在同一表单上调用`.ajaxFormUnbind()`来移除这些处理程序，而不会中断可能已绑定到表单元素的任何其他处理程序。
- en: Retrieving Form Values
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检索表单值
- en: These methods allow scripts to read and transform the values of fields in web
    forms.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这些方法允许脚本读取和转换Web表单中字段的值。
- en: .formToArray()
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .formToArray()
- en: '| Collects the values in a form into an array of objects.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '| 将表单中的值收集到对象数组中。'
- en: '[PRE7]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '|'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: '`semantic` (optional): Whether to force strict HTML ordering of fields. The
    default value is `false`.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`semantic`（可选）：是否强制执行字段的严格HTML排序。默认值为`false`。'
- en: Return Value
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: An array of objects, each representing one field in the form.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 一个对象数组，每个对象代表表单中的一个字段。
- en: Discussion
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 讨论
- en: The `.formToArray` method fetches the values of a form, and organizes them into
    a data structure that is appropriate for passing to the jQuery AJAX functions
    such as `$.ajax(), $.post()`, and `.load()`. It can handle forms with any standard
    field type.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '`.formToArray`方法获取表单的值，并将它们组织成适合传递给jQuery AJAX函数（如`$.ajax(), $.post()`和`.load()`）的数据结构。它可以处理具有任何标准字段类型的表单。'
- en: 'Given the form, illustrated in the `.ajaxFor()` discussion, the `.formToArray`
    method will return a JavaScript array of the form values:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 给定在`.ajaxFor()`讨论中说明的表单，`.formToArray`方法将返回一个JavaScript数组，其中包含表单的值：
- en: '[PRE8]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Each object in the array has a `name` and a `value` property. Checkbox elements
    that are not checked do not get represented in the array.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 数组中的每个对象都有`name`和`value`属性。未选中的复选框元素不会在数组中表示。
- en: If the `semantic` argument is set to `true`, then the fields listed in the array
    will be guaranteed to be ordered as they are in the HTML source. If the form contains
    no `<input>` elements of type `image`, then this will already be the case. Avoid
    using this option unless it is needed, as the extra processing involved will slow
    down the method.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如果将`semantic`参数设置为`true`，则数组中列出的字段将保证按照它们在HTML源代码中的顺序排序。如果表单中不包含`<input>`类型为`image`的元素，则这已经是事实。除非需要，否则避免使用此选项，因为涉及的额外处理会减慢方法的速度。
- en: .formSerialize()
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .formSerialize()
- en: '| Collects the values in a form into a serialized string.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '| 将表单中的值收集到序列化字符串中。'
- en: '[PRE9]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '|'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: '`semantic` (optional): Whether to force strict HTML ordering of fields. The
    default value is `false`.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`semantic`（可选）：是否强制严格的HTML字段排序。默认值为`false`。'
- en: Return Value
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: A string representation of the form fields, suitable for submission.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 适合提交的表单字段的字符串表示。
- en: Discussion
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 讨论
- en: The `.formSerialize` method fetches the values of a form, and converts them
    into a string that is appropriate for passing as a query string for a `GET` request.
    It can handle forms with any standard field type.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '`.formSerialize`方法获取表单的值，并将其转换为适合作为`GET`请求的查询字符串传递的字符串。它可以处理任何标准字段类型的表单。'
- en: 'Given the form illustrated in the `.ajaxFor()` discussion, the `.formSerialize`
    method will return a string representation of the form values:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到在`.ajaxFor()`讨论中所示的表单，`.formSerialize`方法将返回表单值的字符串表示：
- en: '[PRE10]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Each of the fields shows up as a key-value pair in the string. Checkbox elements
    that are not checked do not get represented in the string. The string is URL-encoded
    as necessary.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 每个字段在字符串中显示为键值对。未选中的复选框元素不会在字符串中表示。字符串根据需要进行URL编码。
- en: If the `semantic` argument is set to `true`, then the fields listed in the string
    will be guaranteed to be ordered as they are in the HTML source. If the form contains
    no `<input>` elements of type `image`, then this will already be the case. Avoid
    using this option unless it is needed, as the extra processing involved will slow
    down the method.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 如果将`semantic`参数设置为`true`，那么字符串中列出的字段将保证按照它们在HTML源代码中的顺序排序。如果表单中不包含`<input>`类型为`image`的元素，则这已经是事实。除非需要，否则避免使用此选项，因为涉及的额外处理会减慢方法的速度。
- en: .fieldSerialize()
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .fieldSerialize()
- en: '| Collects the values of a set of fields into a serialized string.'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '| 将一组字段的值收集到序列化字符串中。'
- en: '[PRE11]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '|'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: '`successful` (optional): Whether to prune the included field values to successful
    ones. The default value is `true`.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`successful`（可选）：是否修剪包含的字段值以获取成功的字段。默认值为`true`。'
- en: Return Value
  id: totrans-125
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: A string representation of the form fields, suitable for submission.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 适合提交的表单字段的字符串表示。
- en: Discussion
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 讨论
- en: Like the `.formSerialize` method before it, the `.fieldSerialize` method fetches
    the values of a form, and converts them into a string that is appropriate for
    passing as a query string for a `GET` request. However, `.fieldSerialize()` acts
    on a jQuery object that references individual fields rather than the form as a
    whole.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于之前的`.formSerialize`方法，`.fieldSerialize`方法获取表单的值，并将其转换为适合作为`GET`请求的查询字符串传递的字符串。然而，`.fieldSerialize()`作用于一个引用单个字段而不是整个表单的jQuery对象上。
- en: 'It can handle fields of any standard type, such as `<select>` menus:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 它可以处理任何标准类型的字段，例如`<select>`菜单：
- en: '[PRE12]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The user can then select any option:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可以选择任何选项：
- en: '![Discussion.fieldSerialize()about](img/3810_11_02.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![Discussion.fieldSerialize()about](img/3810_11_02.jpg)'
- en: 'The value is pulled from the currently selected option, and the `.fieldSerialize`
    method will return a string representation of this value:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 值从当前选择的选项中获取，并且`.fieldSerialize`方法将返回此值的字符串表示：
- en: '[PRE13]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Each of the given fields shows up as a key-value pair in the string. Checkbox
    elements that are not checked do not get represented in the string. The string
    is URL-encoded as necessary.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 每个给定的字段在字符串中显示为键值对。未选中的复选框元素不会在字符串中表示。字符串根据需要进行URL编码。
- en: 'By default, fields are not represented in the string if they are not successful,
    as defined in the W3C specification for HTML forms:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，如果字段不成功，则不会在字符串中表示它们，如HTML表单的W3C规范中所定义：
- en: '[http://www.w3.org/TR/html4/interact/forms.html#h-17.13.2](http://www.w3.org/TR/html4/interact/forms.html#h-17.13.2)'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.w3.org/TR/html4/interact/forms.html#h-17.13.2](http://www.w3.org/TR/html4/interact/forms.html#h-17.13.2)'
- en: Successful fields are the ones that are submitted to the server during a normal
    form submission operation. For example, checkboxes that are currently checked
    are successful; unchecked ones are not. It is rare to want the values of unsuccessful
    fields, but if this is required, the `successful` parameter of `.fieldSerialize()`
    can be set to `false`.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 成功的字段是在正常表单提交操作期间提交到服务器的字段。例如，当前选中的复选框是成功的；未选中的不是。很少会想要不成功字段的值，但如果需要，可以将`.fieldSerialize()`的`successful`参数设置为`false`。
- en: 'Given the form illustrated in the `.ajaxFor()` discussion, `.fieldSerializer()`
    includes only checked radio buttons and checkboxes when `successful` is set to
    `true`:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在`.ajaxFor()`讨论中所示的表单中，当`successful`设置为`true`时，`.fieldSerializer()`仅包括选中的单选按钮和复选框：
- en: '[PRE14]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'But when successful is set to `false, fieldSerializer()` includes the unselected
    options as well:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 但是当`successful`设置为`false`时，`fieldSerializer()`也包括未选中的选项：
- en: '[PRE15]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: .fieldValue()
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`.fieldValue()`'
- en: '| Collects the values of a set of fields into an array of strings.'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '| 将一组字段的值收集到一个字符串数组中。'
- en: '[PRE16]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '|'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters (First Version)
  id: totrans-147
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数（第一个版本）
- en: '`successful` (optional): Whether to prune the included field values to successful
    ones. The default value is `true`.'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`successful`（可选）：是否将包含的字段值修剪为成功的值。默认值为`true`。'
- en: Parameters (Second Version)
  id: totrans-149
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数（第二个版本）
- en: '`element`: The form input element whose value is to be retrieved.'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`element`：要检索其值的表单输入元素。'
- en: '`successful` (optional): Whether to prune the included field values to successful
    ones. The default value is `true`.'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`successful`（可选）：是否将包含的字段值修剪为成功的值。默认值为`true`。'
- en: Return Value
  id: totrans-152
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: An array of strings containing the field values.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 一个包含字段值的字符串数组。
- en: Discussion
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 讨论
- en: The `.fieldValue()` method and the `$.fieldValue()` function both fetch the
    values of a form, returning them as an array of strings. The `.fieldValue()` method
    acts on a jQuery object that references individual fields, while the `$.fieldValue()`
    function performs the same task on the field element passed as its first parameter.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '`.fieldValue()`方法和`$.fieldValue()`函数都会获取表单的值，并将它们作为字符串数组返回。`.fieldValue()`方法作用于引用单个字段的jQuery对象，而`$.fieldValue()`函数在其第一个参数作为字段元素时执行相同的任务。'
- en: 'These operations can handle fields of any standard type, such as `<select>`
    menus:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 这些操作可以处理任何标准类型的字段，比如`<select>`菜单：
- en: '[PRE17]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The user can then select any option:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 用户随后可以选择任何选项：
- en: '![Discussion.fieldValue()about](img/3810_11_02.jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![Discussion.fieldValue()about](img/3810_11_02.jpg)'
- en: 'The value is pulled from the currently selected option, and the `.fieldValue()`
    method will return an array representation of this value:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 该值从当前选定的选项中获取，并且`.fieldValue()`方法将以数组表示此值：
- en: '[PRE18]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Each of the given fields shows up as a string in the array. Checkbox elements
    that are not checked do not get represented in the array.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 给定的每个字段都以数组中的字符串形式出现。未选中的复选框元素不会在数组中表示。
- en: 'By default, fields are not represented in the array if they are not successful,
    as defined in the W3C specification for HTML forms:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，如果字段在W3C HTML表单规范中定义的不成功，则不会在数组中表示这些字段：
- en: '[http://www.w3.org/TR/html4/interact/forms.html#h-17.13.2](http://www.w3.org/TR/html4/interact/forms.html#h-17.13.2)'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.w3.org/TR/html4/interact/forms.html#h-17.13.2](http://www.w3.org/TR/html4/interact/forms.html#h-17.13.2)'
- en: Successful fields are the ones that are submitted to the server during a normal
    form submission operation. For example, checkboxes that are currently checked
    are successful; unchecked ones are not. It is rare to want the values of unsuccessful
    fields, but if this is required, the `successful` parameter of `.fieldValue()`
    can be set to `false`.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 成功的字段是在正常表单提交操作期间提交到服务器的字段。例如，当前选中的复选框是成功的；未选中的不是。很少会想要不成功字段的值，但如果需要，可以将`.fieldValue()`的`successful`参数设置为`false`。
- en: 'Given the form illustrated in the `.ajaxFor()` discussion, `.fieldValue()`
    includes only checked radio buttons and checkboxes when `successful` is set to
    to `true`:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在`.ajaxFor()`讨论中所示的表单中，当`successful`设置为`true`时，`.fieldValue()`仅包括选中的单选按钮和复选框：
- en: '[PRE19]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'But when `successful` is set to `false`, .fieldValue() includes the unselected
    options as well:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 但是当`successful`设置为`false`时，`.fieldValue()`也包括未选中的选项：
- en: '[PRE20]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The `.fieldValue` method always returns an array; if there are no values to
    report in the set of elements being acted upon, the result array will be empty.
    In contrast, the `$.fieldValue` function will return `null` if the field element
    in question is not successful.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '`.fieldValue` 方法始终返回一个数组；如果在被操作元素集中没有要报告的值，则结果数组将为空。相比之下，如果所询问的字段元素不成功，`$.fieldValue`
    函数将返回 `null`。'
- en: Form Manipulation
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 表单操作
- en: These methods allow scripts to easily change the current contents of a form
    on the page.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 这些方法使脚本可以轻松地更改页面上表单的当前内容。
- en: .clearForm()
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .clearForm()
- en: '| Clears all data in a form.'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '| 清除表单中的所有数据。'
- en: '[PRE21]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '|'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-177
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: None.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 无。
- en: Return Value
  id: totrans-179
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: The jQuery object, for chaining purposes.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery 对象，用于链式调用。
- en: Discussion
  id: totrans-181
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 讨论
- en: This method finds all input fields (<input>, `<select>`, and `<textarea>` elements)
    within the matched elements, and clears their values. This method is usually applied
    to a `<form>` element, but can work with any container for fields (such as a `<fieldset>)`
    as well.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法查找匹配元素内的所有输入字段（<input>、`<select>` 和 `<textarea>` 元素），并清除它们的值。此方法通常应用于 `<form>`
    元素，但也可以与任何字段容器（如 `<fieldset>`）一起使用。
- en: 'All fields are emptied, regardless of their default values:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 所有字段都将清空，而不考虑其默认值：
- en: '![Discussion.clearForm()about](img/3810_11_03.jpg)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![Discussion.clearForm()about](img/3810_11_03.jpg)'
- en: 'The fields are cleared according to their type, as follows:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 根据其类型清除字段，如下所示：
- en: Text fields and text areas have their values set to an empty string.
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文本字段和文本区域的值设置为空字符串。
- en: Select elements are set to -1, which indicates no selection.
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择元素设置为 -1，表示无选择。
- en: Checkboxes and radio buttons are unchecked.
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复选框和单选按钮未选中。
- en: Other fields, such as submit buttons and image inputs, are not affected.
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他字段，如提交按钮和图像输入，不受影响。
- en: Note that hidden fields are not affected by the clearing operation, even though
    they have a value.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，尽管隐藏字段具有值，但它们不受清除操作的影响。
- en: .clearFields()
  id: totrans-191
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .clearFields()
- en: '| Clears all data in an input field.'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '| 清除输入字段中的所有数据。'
- en: '[PRE22]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '|'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-195
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: None.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 无。
- en: Return Value
  id: totrans-197
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: The jQuery object, for chaining purposes.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery 对象，用于链式调用。
- en: Discussion
  id: totrans-199
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 讨论
- en: This method clears the values of all matched elements that are input fields
    (<input>, `<select>`, and `<textarea>` elements).
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法清除所有匹配的输入字段元素的值（<input>、`<select>` 和 `<textarea>` 元素）。
- en: 'The `.clearFields` method differs from `.clearForm()` only in that `.clearForm()`
    is sent to a jQuery object that has matched the form element, while `.clearFields()`
    is sent to a jQuery object that matches the individual fields themselves:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '`.clearFields` 方法与 `.clearForm()` 仅在 `.clearForm()` 发送到匹配表单元素的 jQuery 对象时有所不同，而
    `.clearFields()` 发送到匹配的字段本身的 jQuery 对象时有所不同：'
- en: '![Discussion.clearFields()about](img/3810_11_04.jpg)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![Discussion.clearFields()about](img/3810_11_04.jpg)'
- en: 'The fields are cleared according to their type, as follows:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 根据其类型清除字段，如下所示：
- en: Text fields and text areas have their values set to an empty string.
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文本字段和文本区域的值设置为空字符串。
- en: Select elements are set to -1, which indicates "no selection."
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择元素设置为 -1，表示“无选择”。
- en: Checkboxes and radio buttons are unchecked.
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复选框和单选按钮未选中。
- en: Other fields, such as submit buttons and image inputs, are not affected.
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他字段，如提交按钮和图像输入，不受影响。
- en: Note that hidden fields are not affected by the clearing operation, even though
    they have a value.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，尽管隐藏字段具有值，但它们不受清除操作的影响。
- en: .resetForm()
  id: totrans-209
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: .resetForm()
- en: '| Resets a form to its initial values.'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '| 将表单重置为其初始值。'
- en: '[PRE23]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '|'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Parameters
  id: totrans-213
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: None.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 无。
- en: Return Value
  id: totrans-215
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 返回值
- en: The jQuery object, for chaining purposes.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery 对象，用于链式调用。
- en: Discussion
  id: totrans-217
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 讨论
- en: 'This method returns all fields in a form to their initial values (the ones
    defined in the HTML source):'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法将表单中的所有字段返回到其初始值（在 HTML 源代码中定义的值）：
- en: '![Discussion.resetForm()about](img/3810_11_05.jpg)'
  id: totrans-219
  prefs: []
  type: TYPE_IMG
  zh: '![Discussion.resetForm()about](img/3810_11_05.jpg)'
- en: This action is accomplished using the DOM API's native `.reset` method. For
    this reason, `.resetForm()` can only be applied to a jQuery object that references
    `<form>` elements, unlike `.clearForm()`, which can be applied to jQuery objects
    referencing any containing element as well.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 DOM API 的本地 `.reset` 方法完成此操作。因此，`.resetForm()` 只能应用于引用 `<form>` 元素的 jQuery
    对象，而不像 `.clearForm()` 那样，后者可以应用于引用任何包含元素的 jQuery 对象。
