- en: <st c="0">7</st>
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '7'
- en: <st c="2">Understanding Cypress and its Role in End-to-End Tests for Web Applications</st>
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 Cypress 及其在 Web 应用端到端测试中的作用
- en: <st c="77">In the world of web development, Angular has emerged as one of the
    most popular frameworks for building dynamic and robust web applications.</st>
    <st c="219">With its extensive features and powerful capabilities, Angular enables
    developers to create seamless user experiences.</st> <st c="338">However, ensuring
    the reliability and functionality of these applications requires thorough testing,
    and this is where</st> **<st c="457">Cypress</st>** <st c="464">comes</st> <st
    c="471">into play.</st>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Web 开发的世界中，Angular 已经成为构建动态和强大 Web 应用程序最受欢迎的框架之一。<st c="219">凭借其丰富的特性和强大的功能，Angular
    使开发者能够创建无缝的用户体验。</st> <st c="338">然而，确保这些应用程序的可靠性和功能需要彻底的测试，这正是**<st c="457">Cypress</st>**
    <st c="464">发挥作用的地方。</st>
- en: <st c="481">Cypress is a versatile</st> **<st c="505">end-to-end</st>** <st
    c="515">(</st>**<st c="517">E2E</st>**<st c="520">) testing framework that seamlessly
    integrates with Angular projects, allowing developers to write and execute component
    tests that cover the entire application flow.</st> <st c="688">In this chapter,
    we will explore the role of Cypress in E2E testing for Angular projects and guide
    you through the process of discovering, setting up, and writing your first component
    test</st> <st c="877">with Cypress.</st>
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Cypress 是一个多功能的**<st c="505">端到端</st>** <st c="515">(</st>**<st c="517">E2E</st>**<st
    c="520">) 测试框架，它能够无缝地集成到 Angular 项目中，允许开发者编写和执行覆盖整个应用程序流程的组件测试。</st> <st c="688">在本章中，我们将探讨
    Cypress 在 Angular 项目端到端测试中的作用，并指导您通过发现、设置和编写第一个组件测试的过程来使用 Cypress。</st> <st c="877">使用
    Cypress。</st>
- en: <st c="890">We will begin by discovering Cypress and understanding its unique
    features and advantages.</st> <st c="982">From its intuitive API to its real-time
    reloading and debugging capabilities, Cypress provides developers with a seamless
    and efficient testing experience.</st> <st c="1138">By grasping the core concepts
    of Cypress and its integration with Angular, developers can harness its power
    to ensure the quality and reliability of their</st> <st c="1293">Angular applications.</st>
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先了解 Cypress，并理解其独特的特性和优势。<st c="982">从其直观的 API 到实时重新加载和调试功能，Cypress 为开发者提供了一种无缝且高效的测试体验。</st>
    <st c="1138">通过掌握 Cypress 的核心概念及其与 Angular 的集成，开发者可以利用其力量确保其 Angular 应用程序的质量和可靠性。</st>
    <st c="1293">Angular 应用程序。</st>
- en: <st c="1314">Next, we will dive into the process of setting up Cypress in an
    Angular project.</st> <st c="1396">We will explore the necessary configurations
    and dependencies, guiding you through the steps to integrate Cypress seamlessly
    into your Angular development workflow.</st> <st c="1561">With a solid foundation
    in place, you will be ready to leverage the full potential of Cypress in your</st>
    <st c="1663">Angular projects.</st>
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将深入了解在 Angular 项目中设置 Cypress 的过程。<st c="1396">我们将探讨必要的配置和依赖项，指导您通过步骤将
    Cypress 无缝集成到您的 Angular 开发工作流程中。</st> <st c="1561">在打下坚实的基础后，您将准备好在您的**<st c="1663">Angular
    项目</st>**中充分利用 Cypress 的全部潜力。</st>
- en: <st c="1680">Finally, we will guide you through the process of writing your
    first E2E component test with Cypress in an Angular project.</st> <st c="1805">We
    will cover the essential aspects of writing effective component tests, including
    selecting elements, interacting with the application, and asserting</st> <st c="1957">expected
    behavior.</st>
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将指导您在 Angular 项目中使用 Cypress 编写第一个端到端组件测试的过程。<st c="1805">我们将涵盖编写有效组件测试的必要方面，包括选择元素、与应用程序交互以及断言**<st
    c="1957">预期行为</st>**。</st>
- en: <st c="1975">In summary, here are the main topics that will be covered in</st>
    <st c="2037">this chapter:</st>
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 概括来说，以下是本章将涵盖的主要主题：
- en: <st c="2050">Discovering Cypress and its role in an</st> <st c="2090">Angular
    project</st>
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发现 Cypress 及其在 Angular 项目中的作用
- en: <st c="2105">Setting up Cypress in an</st> <st c="2131">Angular project</st>
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Angular 项目中设置 Cypress
- en: <st c="2146">Writing your first E2E component test with Cypress in an</st> <st
    c="2204">Angular project</st>
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Angular 项目中使用 Cypress 编写第一个端到端组件测试
- en: <st c="2219">Technical requirements</st>
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: <st c="2242">To follow along with the examples and exercises in this chapter,
    you will need to have a basic understanding of Angular and TypeScript, as well
    as the following</st> <st c="2404">technical requirements:</st>
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="2242">为了跟随本章中的示例和练习，你需要对 Angular 和 TypeScript 有基本的了解，以及以下</st> <st c="2404">技术要求：</st>
- en: <st c="2427">Node.js and</st> **<st c="2440">Node Package Manager</st>** <st
    c="2460">(</st>**<st c="2462">npm</st>**<st c="2465">) installed on</st> <st c="2481">your
    computer</st>
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="2427">Node.js 和</st> **<st c="2440">Node 包管理器</st>** <st c="2460">(</st>**<st
    c="2462">npm</st>**<st c="2465">) 安装在你电脑上</st>
- en: <st c="2494">Angular CLI</st> <st c="2507">installed globally</st>
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="2494">Angular CLI</st> <st c="2507">全局安装</st>
- en: <st c="2525">A code editor, such as Visual Studio Code, installed on</st> <st
    c="2582">your computer.</st>
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="2525">安装在你电脑上的代码编辑器，例如 Visual Studio Code。</st>
- en: <st c="2596">The code files of this chapter can be found</st> <st c="2641">at</st>
    [<st c="2644">https://github.com/PacktPublishing/Mastering-Angular-Test-Driven-Development/tree/main/Chapter%207</st>](https://github.com/PacktPublishing/Mastering-Angular-Test-Driven-Development/tree/main/Chapter%207)<st
    c="2742">.</st>
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="2596">本章的代码文件可以在</st> <st c="2641">以下位置找到</st> [<st c="2644">https://github.com/PacktPublishing/Mastering-Angular-Test-Driven-Development/tree/main/Chapter%207</st>](https://github.com/PacktPublishing/Mastering-Angular-Test-Driven-Development/tree/main/Chapter%207)<st
    c="2742">。</st>
- en: <st c="2743">Discovering Cypress and its role in an Angular project</st>
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="2743">探索 Cypress 及其在 Angular 项目中的作用</st>
- en: <st c="2798">Testing plays a vital role in ensuring the</st> <st c="2842">quality
    and reliability of applications.</st> <st c="2883">When it comes to Angular projects,
    developers need a robust testing framework that seamlessly integrates with the
    framework’s components and provides an efficient and comprehensive testing experience.</st>
    <st c="3084">This is where Cypress, an E2E testing framework, comes into the picture.</st>
    <st c="3157">In this section, we will explore Cypress and its role in Angular
    projects, uncovering its unique features</st> <st c="3263">and advantages.</st>
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="2798">测试在确保应用程序的</st> <st c="2842">质量和可靠性方面发挥着至关重要的作用。</st> <st c="2883">当涉及到
    Angular 项目时，开发者需要一个与框架组件无缝集成的强大测试框架，并提供高效全面的测试体验。</st> <st c="3084">这就是 E2E 测试框架
    Cypress 发挥作用的地方。</st> <st c="3157">在本节中，我们将探讨 Cypress 及其在 Angular 项目中的作用，揭示其独特的特性和优势。</st>
- en: <st c="3278">Understanding Cypress</st>
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="3278">了解 Cypress</st>
- en: <st c="3300">Cypress is a powerful JavaScript-based</st> <st c="3340">testing
    framework that allows developers to write and execute E2E tests for web applications.</st>
    <st c="3434">What sets Cypress apart from other testing frameworks is its ability
    to run tests directly in the browser, enabling real-time reloading and debugging.</st>
    <st c="3585">This feature makes Cypress an ideal choice for Angular projects,
    where developers can test their applications in a live environment, mimicking
    real</st> <st c="3733">user interactions.</st>
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="3300">Cypress 是一个基于 JavaScript 的强大</st> <st c="3340">测试框架，允许开发者编写和执行
    Web 应用的端到端测试。</st> <st c="3434">Cypress 与其他测试框架的不同之处在于其能够在浏览器中直接运行测试，实现实时重新加载和调试。</st>
    <st c="3585">这一特性使得 Cypress 成为 Angular 项目的理想选择，开发者可以在真实环境中测试他们的应用程序，模拟真实的</st>
    <st c="3733">用户交互。</st>
- en: <st c="3751">Seamless integration with Angular</st>
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="3751">与 Angular 无缝集成</st>
- en: <st c="3785">Cypress seamlessly integrates with Angular projects, making it
    an excellent choice for testing Angular applications.</st> <st c="3903">It</st>
    <st c="3905">leverages Angular’s powerful components, directives, and services,
    allowing developers to write tests that cover the entire application flow.</st>
    <st c="4048">Whether it’s testing individual components, validating complex</st>
    <st c="4111">user flows, or ensuring cross-browser compatibility, Cypress provides
    the necessary tools and capabilities to accomplish these</st> <st c="4238">tasks
    effectively.</st>
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="3785">Cypress 与 Angular 项目无缝集成，使其成为测试 Angular 应用程序的绝佳选择。</st> <st c="3903">它</st>
    <st c="3905">利用 Angular 的强大组件、指令和服务，允许开发者编写涵盖整个应用程序流程的测试。</st> <st c="4048">无论是测试单个组件、验证复杂的</st>
    <st c="4111">用户流程，还是确保跨浏览器兼容性，Cypress 都提供了完成这些</st> <st c="4238">任务所需的工具和能力。</st>
- en: <st c="4256">Efficient testing workflow</st>
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="4256">高效的测试工作流程</st>
- en: <st c="4283">One of the key advantages of</st> <st c="4313">Cypress is its intuitive
    API, which simplifies the process of writing tests.</st> <st c="4390">With its
    declarative syntax, developers can easily select elements, interact with the application,
    and assert expected behavior.</st> <st c="4519">Cypress also offers a comprehensive
    set of built-in commands and assertions, making it easier to write expressive
    and readable tests.</st> <st c="4653">Furthermore, Cypress provides powerful debugging
    features, allowing developers to inspect elements, step through the code, and
    troubleshoot issues in</st> <st c="4803">real time.</st>
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="4283">Cypress的一个关键优势是它直观的API，它简化了编写测试的过程。</st> <st c="4313">凭借其声明性语法，开发者可以轻松选择元素，与应用程序交互，并断言预期的行为。</st>
    <st c="4390">Cypress还提供了一套全面的内置命令和断言，使得编写表达性和可读性强的测试更加容易。</st> <st c="4519">此外，Cypress还提供了强大的调试功能，允许开发者检查元素，逐步执行代码，并在</st>
    <st c="4803">实时</st>中排查问题。
- en: <st c="4813">Real-time reloading and debugging</st>
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="4813">实时重新加载和调试</st>
- en: <st c="4847">Cypress’s real-time</st> <st c="4867">reloading and debugging capabilities
    are particularly valuable in Angular projects.</st> <st c="4952">As developers
    make changes to their code, Cypress automatically reloads the application, reflecting
    the updates in real time.</st> <st c="5078">This feature significantly speeds
    up the testing process, as developers can instantly see the impact of their changes
    without the need to manually refresh the browser.</st> <st c="5246">Additionally,
    Cypress’s powerful debugging tools enable developers to pinpoint and resolve issues
    quickly, improving the overall efficiency of the</st> <st c="5393">testing workflow.</st>
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="4847">Cypress的实时</st> <st c="4867">重新加载和调试功能在Angular项目中尤其有价值。</st> <st
    c="4952">随着开发者对代码的修改，Cypress会自动重新加载应用程序，实时反映更新。</st> <st c="5078">此功能显著加快了测试过程，因为开发者可以立即看到他们更改的影响，无需手动刷新浏览器。</st>
    <st c="5246">此外，Cypress强大的调试工具使开发者能够快速定位和解决问题，从而提高测试工作流程的整体效率。</st>
- en: <st c="5410">In the next section, we’ll learn how to configure Cypress in our</st>
    <st c="5476">Angular project.</st>
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="5410">在下一节中，我们将学习如何在我们的</st> <st c="5476">Angular项目中</st>配置Cypress。</st>
- en: <st c="5492">Setting up Cypress in our Angular project</st>
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="5492">在我们的Angular项目中设置Cypress</st>
- en: <st c="5534">Now that we’ve understood what</st> <st c="5566">Cypress is for
    and its role in</st> <st c="5597">an Angular project, we’ll look at how to configure
    it in</st> <st c="5654">our project.</st>
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="5534">现在我们已经了解了Cypress是什么以及它在Angular项目中的作用，我们将探讨如何在</st> <st c="5654">我们的项目中</st>配置它。
- en: <st c="5666">Installing Cypress</st>
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="5666">安装Cypress</st>
- en: <st c="5685">To begin, you need to</st> <st c="5708">have Node.js and npm installed
    on your machine.</st> <st c="5756">If you don’t have them already, download and
    install them from the official</st> <st c="5832">Node.js website.</st>
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，您需要在您的机器上安装Node.js和npm。<st c="5708">如果您还没有安装，请从官方</st> <st c="5832">Node.js网站</st>下载并安装。
- en: <st c="5848">Once you have Node.js and npm installed, open your terminal and
    navigate to your Angular project’s root directory.</st> <st c="5964">Run the following
    command to install Cypress as a</st> <st c="6014">dev dependency:</st>
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="5848">一旦您安装了Node.js和npm，打开您的终端并导航到您的Angular项目的根目录。</st> <st c="5964">运行以下命令将Cypress作为</st>
    <st c="6014">开发依赖项</st>安装：
- en: '[PRE0]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: <st c="6062">The previous command will download and install Cypress in your
    project.</st> <st c="6135">This is how it works in</st> <st c="6159">the terminal:</st>
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="6062">之前的命令将在您的项目中下载并安装Cypress。</st> <st c="6135">这是在</st> <st c="6159">终端中的工作方式：</st>
- en: '![Figure 7.1 – Cypress installation](img/B21146_07_1.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图7.1 – Cypress安装](img/B21146_07_1.jpg)'
- en: <st c="6470">Figure 7.1 – Cypress installation</st>
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="6470">图7.1 – Cypress安装</st>
- en: <st c="6503">After installation, you can see the dependency in the</st> <st
    c="6558">package.json file:</st>
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="6503">安装后，您可以在</st> <st c="6558">package.json文件中看到依赖关系：</st>
- en: '![Figure 7.2 – Cypress dependency in package.json](img/B21146_07_2.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![图7.2 – Cypress在package.json中的依赖关系](img/B21146_07_2.jpg)'
- en: <st c="6960">Figure 7.2 – Cypress dependency in package.json</st>
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="6960">图7.2 – Cypress在package.json中的依赖关系</st>
- en: <st c="7007">In the next section, we’ll look</st> <st c="7039">at how to</st>
    <st c="7050">configure Cypress.</st>
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="7007">在下一节中，我们将探讨如何</st> <st c="7039">配置Cypress。</st>
- en: <st c="7068">Configuring Cypress</st>
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="7068">配置Cypress</st>
- en: <st c="7088">As previously mentioned, we’ll take a</st> <st c="7126">step-by-step
    look at how to</st> <st c="7155">configure Cypress:</st>
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="7088">如前所述，我们将逐步了解如何</st> <st c="7126">配置 Cypress：</st>
- en: <st c="7173">After installing Cypress, run the following command in your terminal
    from your</st> <st c="7253">project root:</st>
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="7173">在安装 Cypress 后，从你的</st> <st c="7253">项目根目录</st> 运行以下命令：</st>
- en: '[PRE1]'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![Figure 7.3 – Open Cypress in the command line](img/B21146_07_3.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.3 – 在命令行中打开 Cypress](img/B21146_07_3.jpg)'
- en: <st c="7505">Figure 7.3 – Open Cypress in the command line</st>
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="7505">图 7.3 – 在命令行中打开 Cypress</st>
- en: <st c="7550">You will now see your browser launch and it will present the interface
    shown in</st> *<st c="7631">Figure 7</st>**<st c="7639">.4</st>*<st c="7641">:</st>
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="7550">现在你将看到浏览器启动，并显示如图 *<st c="7631">图 7</st>**<st c="7639">.4</st>*<st
    c="7641">* 所示的界面：</st>
- en: "![Figure 7.4 – Cypress launch int\uFEFFerface](img/B21146_07_4.jpg)"
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.4 – Cypress 启动界面](img/B21146_07_4.jpg)'
- en: <st c="7734">Figure 7.4 – Cypress launch int</st><st c="7765">erface</st>
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="7734">图 7.4 – Cypress 启动界面</st><st c="7765">面</st>
- en: <st c="7772">Click on</st> **<st c="7782">Continue</st>**<st c="7790">, and
    you’ll be</st> <st c="7805">redirected to the</st> <st c="7824">following interface:</st>
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="7772">点击</st> **<st c="7782">继续</st>**<st c="7790">，你将被重定向到以下界面：</st>
- en: '![Figure 7.5 – Cypress E2E test interface of preference](img/B21146_07_5.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.5 – Cypress E2E 测试首选界面](img/B21146_07_5.jpg)'
- en: <st c="8227">Figure 7.5 – Cypress E2E test interface of preference</st>
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8227">图 7.5 – Cypress E2E 测试首选界面</st>
- en: <st c="8280">Choose</st> **<st c="8288">E2E Testing</st>** <st c="8299">and
    you’ll now be redirected to the interface shown in</st> *<st c="8355">Figure 7</st>**<st
    c="8363">.6</st>*<st c="8365">:</st>
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="8280">选择</st> **<st c="8288">E2E 测试</st>** <st c="8299">，你将被重定向到如图 *<st
    c="8355">图 7</st>**<st c="8363">.6</st>*<st c="8365">* 所示的界面：</st>
- en: '![Figure 7.6 – Cypress E2E testing control panel](img/B21146_07_6.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.6 – Cypress E2E 测试控制面板](img/B21146_07_6.jpg)'
- en: <st c="8858">Figure 7.6 – Cypress E2E testing control panel</st>
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8858">图 7.6 – Cypress E2E 测试控制面板</st>
- en: <st c="8904">These files are part of a Cypress</st> <st c="8939">testing setup
    for a web application.</st> <st c="8976">Let’s break down what each</st> <st c="9003">file
    does:</st>
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8904">这些文件是针对 Web 应用程序的 Cypress 测试设置的一部分。</st> <st c="8939">让我们分析一下每个</st>
    <st c="8976">文件的功能：</st>
- en: '`<st c="9013">cypress.config.ts</st>`<st c="9031">: The</st> `<st c="9038">cypress.config.ts</st>`
    <st c="9055">file allows you to customize Cypress to fit the needs of your project,
    including setting up proxy configurations, configuring network requests, and specifying
    custom command</st> <st c="9230">line flags.</st>'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<st c="9013">cypress.config.ts</st>`<st c="9031">: `<st c="9038">cypress.config.ts</st>`
    文件允许你根据项目需求自定义 Cypress，包括设置代理配置、配置网络请求以及指定自定义命令行标志。</st>'
- en: '`<st c="9241">cypress/support/e2e.ts</st>`<st c="9264">: This file typically
    contains global commands and utilities that are available across all your E2E
    tests.</st> <st c="9372">It’s a place where you can define functions that perform
    common actions, like logging in, navigating between pages, or interacting with
    elements in a consistent way.</st> <st c="9538">By defining these commands here,
    you ensure they’re available in every test file without needing to</st> <st c="9638">redefine
    them.</st>'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<st c="9241">cypress/support/e2e.ts</st>`<st c="9264">: 此文件通常包含可在所有 E2E 测试中使用的全局命令和实用工具。</st>
    <st c="9372">这是一个可以定义执行常见操作（如登录、在页面间导航或以一致的方式与元素交互）的函数的地方。</st> <st c="9538">在这里定义这些命令，你可以确保它们在每一个测试文件中都是可用的，无需重新定义。</st>
    <st c="9638">它们。</st>'
- en: '`<st c="9652">cypress/support/comman</st><st c="9675">ds.ts</st>`<st c="9681">:
    Similar to</st> `<st c="9695">e2e.ts</st>`<st c="9701">, the</st> `<st c="9707">commands.ts</st>`
    <st c="9718">file is used to extend Cypress’s built-in commands with custom ones.</st>
    <st c="9788">This file is specifically focused on adding new commands that can
    be used within your</st> <st c="9874">test suites.</st> <st c="9887">These commands
    can encapsulate complex interactions or sequences of actions that you find yourself
    repeating across multiple</st> <st c="10011">tests.</st> <st c="10019">Defining
    custom commands helps keep your tests</st> **<st c="10066">DRY</st>** <st c="10070">(</st>**<st
    c="10071">Don’t Repeat Yourself</st>**<st c="10092">), making them easier to maintain</st>
    <st c="10127">and understand.</st>'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<st c="9652">cypress/support/comman</st><st c="9675">ds.ts</st>`<st c="9681">：与</st>
    `<st c="9695">e2e.ts</st>`<st c="9701">类似，</st> `<st c="9707">commands.ts</st>`
    <st c="9718">文件用于使用自定义命令扩展Cypress的内置命令。</st> <st c="9788">此文件专门用于添加可在您的</st> <st
    c="9874">测试套件中使用的</st> <st c="9887">新命令。</st> <st c="9887">这些命令可以封装复杂的交互或一系列动作，这些动作您发现自己需要在多个</st>
    <st c="10011">测试中重复。</st> <st c="10019">定义自定义命令有助于保持您的测试</st> **<st c="10066">DRY</st>**
    <st c="10070">(</st>**<st c="10071">不要重复自己</st>**<st c="10092">)，使它们更容易维护和了解。</st>'
- en: '`<st c="10142">cypress/fixtures/example.json</st>`<st c="10172">: The fixtures
    folder is used to store JSON files that contain data used in your tests.</st>
    <st c="10261">These could be mock API responses, sample data for seeding databases,
    or any other static data required for your tests to run.</st> <st c="10388">The</st>
    `<st c="10392">example.json</st>` <st c="10404">file would be one such fixture
    file, containing example data that your tests might need to</st> <st c="10496">interact
    with.</st>'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<st c="10142">cypress/fixtures/example.json</st>`<st c="10172">：固定文件夹用于存储包含测试中使用的数据的JSON文件。</st>
    <st c="10261">这些可能是模拟API响应、用于数据库播种的样本数据或任何其他测试运行所需的静态数据。</st> <st c="10388">此</st>
    `<st c="10392">example.json</st>` <st c="10404">文件将是一个这样的固定文件，包含测试可能需要与之交互的示例数据。</st>'
- en: <st c="10510">After clicking on</st> **<st c="10529">Continue</st>**<st c="10537">,
    you will see this interface to choose your preferred browser for E2E testing,
    as shown in</st> *<st c="10629">Figure 7</st>**<st c="10637">.7</st>*<st c="10639">:</st>
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="10510">点击</st> **<st c="10529">继续</st>**<st c="10537">后，您将看到此界面以选择您首选的E2E测试浏览器，如图</st>
    *<st c="10629">图7</st>**<st c="10637">.7</st>*<st c="10639">：</st>
- en: '![Figure 7.7 – The browser selection interface in Cypress](img/B21146_07_7.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![图7.7 – Cypress中的浏览器选择界面](img/B21146_07_7.jpg)'
- en: <st c="10827">Figure 7.7 – The browser selection interface in Cypress</st>
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="10827">图7.7 – Cypress中的浏览器选择界面</st>
- en: <st c="10882">Once all the configuration has been completed, you should be able
    to access the interface, as</st> <st c="10976">shown in</st> *<st c="10986">Figure
    7</st>**<st c="10994">.8</st>*<st c="10996">:</st>
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="10882">一旦完成所有配置，你应该能够访问界面，如图</st> <st c="10976">所示</st> *<st c="10986">图7</st>**<st
    c="10994">.8</st>*<st c="10996">：</st>
- en: '![Figure 7.8 – Cypress E2E testing dashboard interface](img/B21146_07_8.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![图7.8 – Cypress端到端测试仪表板界面](img/B21146_07_8.jpg)'
- en: <st c="11037">Figure 7.8 – Cypress E2E testing dashboard interface</st>
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="11037">图7.8 – Cypress端到端测试仪表板界面</st>
- en: <st c="11089">In the Angular project directory, a</st> `<st c="11126">cypress</st>`
    <st c="11133">folder is created</st> <st c="11152">like this:</st>
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="11089">在Angular项目目录中，创建了一个</st> `<st c="11126">cypress</st>` <st c="11133">文件夹</st>
    <st c="11152">如下：</st>
- en: '![Figure 7.9 – The Cypress support folder](img/B21146_07_9.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![图7.9 – Cypress支持文件夹](img/B21146_07_9.jpg)'
- en: <st c="11227">Figure 7.9 – The Cypress support folder</st>
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="11227">图7.9 – Cypress支持文件夹</st>
- en: <st c="11266">Finally, we’re going to add this script to</st> `<st c="11310">package.json</st>`
    <st c="11322">to avoid making</st> `<st c="11339">npx cypress open</st>` <st c="11355">the
    next</st> <st c="11365">few times:</st>
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="11266">最后，我们将把这个脚本添加到</st> `<st c="11310">package.json</st>` <st c="11322">中，以避免多次执行</st>
    `<st c="11339">npx cypress open</st>` <st c="11355">：</st>
- en: '![Figure 7.10 – Cypress command in package.json scripts](img/B21146_07_10.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图7.10 – Cypress命令在package.json脚本中](img/B21146_07_10.jpg)'
- en: <st c="11546">Figure 7.10 – Cypress command in package.json scripts</st>
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="11546">图7.10 – Cypress命令在package.json脚本中</st>
- en: <st c="11599">In the next section, we’ll take</st> <st c="11632">a look at how
    to write our first</st> <st c="11665">E2E test.</st>
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="11599">在下一节中，我们将探讨如何编写我们的第一个</st> <st c="11632">端到端测试。</st>
- en: <st c="11674">Writing your first E2E test</st>
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="11674">编写您的第一个端到端测试</st>
- en: <st c="11702">Once Cypress has been</st> <st c="11724">properly configured for
    E2E testing, we can get down to business.</st> <st c="11791">Let’s take a look
    at how to write our first</st> <st c="11835">E2E test:</st>
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="11702">一旦Cypress已正确配置用于端到端测试，我们就可以开始工作了。</st> <st c="11724">让我们看看如何编写我们的第一个</st>
    <st c="11791">端到端测试：</st>
- en: <st c="11844">Now that Cypress is installed and configured, you can start writing
    your first test.</st> <st c="11930">You can click on</st> **<st c="11947">Create
    new spec</st>** <st c="11962">in this interface as shown in</st> *<st c="11993">Figure
    7</st>**<st c="12001">.11</st>*<st c="12004">:</st>
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="11844">现在Cypress已安装并配置好，你可以开始编写你的第一个测试。</st> <st c="11930">你可以点击</st>
    **<st c="11947">创建新规范</st>** <st c="11962">在此界面中，如图</st> *<st c="11993">图7</st>**<st
    c="12001">.11</st>*<st c="12004">：</st>
- en: '![Figure 7.11 – Spec creation interface in Cypress](img/B21146_07_11.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![Figure 7.11 – Cypress中的规范创建界面](img/B21146_07_11.jpg)'
- en: <st c="12048">Figure 7.11 – Spec creation interface in Cypress</st>
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="12048">图7.11 – Cypress中的规范创建界面</st>
- en: <st c="12096">After doing that, you can see in</st> *<st c="12130">Figure 7</st>**<st
    c="12138">.12</st>* <st c="12141">a new file named</st> `<st c="12159">spec.cy.ts</st>`<st
    c="12169">, created in the</st> `<st c="12186">e2e</st>` <st c="12189">folder
    of your project’s</st> `<st c="12215">cypress</st>` <st c="12222">folder:</st>
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="12096">完成这些后，你可以在</st> *<st c="12130">图7</st>**<st c="12138">.12</st>*
    <st c="12141">中看到一个名为</st> `<st c="12159">spec.cy.ts</st>`<st c="12169">的新文件，它位于你的项目的</st>
    `<st c="12186">e2e</st>` <st c="12189">文件夹中的</st> `<st c="12215">cypress</st>`
    <st c="12222">文件夹：</st>
- en: '![Figure 7.12 – Spec file](img/B21146_07_12.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![图7.12 – 规范文件](img/B21146_07_12.jpg)'
- en: <st c="12310">Figure 7.12 – Spec file</st>
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="12310">图7.12 – 规范文件</st>
- en: <st c="12333">This file contains</st> <st c="12353">the following:</st>
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="12333">此文件包含以下内容：</st>
- en: '![Figure 7.13 – The source code of our spec file](img/B21146_07_13.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![图7.13 – 我们的规范文件的源代码](img/B21146_07_13.jpg)'
- en: <st c="12470">Figure 7.13 – The source code of our spec file</st>
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="12470">图7.13 – 我们的规范文件的源代码](img/B21146_07_13.jpg)
- en: <st c="12516">Now, you may be</st> <st c="12532">faced with a surprise when
    you return to the browser where the E2E test is launched as shown in</st> *<st
    c="12629">Figure 7</st>**<st c="12637">.14</st>*<st c="12640">:</st>
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="12516">现在，当你返回到启动端到端测试的浏览器时，你可能会感到惊讶，如图</st> *<st c="12629">图7</st>**<st
    c="12637">.14</st>*<st c="12640">：</st>
- en: "![Figure 7.14 – The E2E test failed due to a compilation e\uFEFF\uFEFFrror](img/B21146_07_14.jpg)"
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![Figure 7.14 – 端到端测试因编译错误而失败](img/B21146_07_14.jpg)'
- en: <st c="14793">Figure 7.14 – The E2E test failed due to a compilation e</st><st
    c="14849">rror</st>
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="14793">图7.14 – 端到端测试因编译错误而失败</st><st c="14849">错误</st>
- en: '<st c="14854">To solve this issue, you can just remove</st> `<st c="14896">sourceMap:
    true</st>` <st c="14911">from your</st> `<st c="14922">tsconfig.json</st>` <st
    c="14935">file and</st> <st c="14945">you’ll</st> <st c="14952">get this:</st>'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '<st c="14854">要解决这个问题，你只需从你的</st> `<st c="14896">sourceMap: true</st>` <st
    c="14911">中删除</st> `<st c="14922">tsconfig.json</st>` <st c="14935">文件，</st> <st
    c="14945">然后你将得到这个：</st>'
- en: '[PRE2]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: <st c="15652">As you can see</st> <st c="15668">now,</st> <st c="15673">it works:</st>
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="15652">正如你所见</st> <st c="15668">现在</st>， <st c="15673">它工作正常：</st>
- en: '![Figure 7.15 – The interface that displays all specs files](img/B21146_07_15.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![图7.15 – 显示所有规范文件的界面](img/B21146_07_15.jpg)'
- en: <st c="15684">Figure 7.15 – The interface that displays all specs files</st>
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="15684">图7.15 – 显示所有规范文件的界面</st>
- en: <st c="15741">Then, you can click on the</st> `<st c="15769">spec.cy.ts</st>`
    <st c="15779">file and if all goes well, you’ll</st> <st c="15814">get this:</st>
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="15741">然后，你可以点击</st> `<st c="15769">spec.cy.ts</st>` <st c="15779">文件，如果一切顺利，你将得到这个：</st>
- en: '![Figure 7.16 – The successful completion of our E2E test](img/B21146_07_16.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![图7.16 – 我们端到端测试的成功完成](img/B21146_07_16.jpg)'
- en: <st c="15946">Figure 7.16 – The successful completion of our E2E test</st>
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="15946">图7.16 – 我们端到端测试的成功完成</st>
- en: <st c="16001">Congrats!</st> <st c="16012">You’ve just written your first E2E
    test!</st> <st c="16053">Technically, we’ve generated it with the ease</st> <st
    c="16099">of Cypress.</st>
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16001">恭喜！</st> <st c="16012">你刚刚编写了你的第一个端到端测试！</st> <st c="16053">技术上，我们用Cypress的便捷性生成了它。</st>
    <st c="16099">的。</st>
- en: <st c="16110">Now that we know how to</st> <st c="16134">write an E2E test,
    the goal of the chapter has been achieved.</st> <st c="16197">We’ll summarize
    everything we’ve covered in the</st> <st c="16245">next section.</st>
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16110">现在我们知道了如何编写端到端测试，本章的目标已经实现。</st> <st c="16197">我们将在下一节中总结我们所学到的所有内容。</st>
- en: <st c="16258">Summary</st>
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="16258">总结</st>
- en: <st c="16266">This chapter covered discovering Cypress, configuring it, and
    taking it into an Angular project in the writing of an</st> <st c="16384">E2E
    test.</st>
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16266">本章涵盖了发现 Cypress、配置它以及将其应用于编写 E2E 测试的 Angular 项目中的过程。</st> <st
    c="16384">章节从 Cypress 工具的介绍开始，解释了为什么它是 Angular 社区中最广泛使用的工具，然后展示了如何在 Angular 项目中配置
    Cypress，最后逐步教你如何使用 Cypress 在 Angular 中编写第一个 E2E 测试。</st>
- en: <st c="16393">The chapter started with an introduction to the Cypress tool and
    explained why it’s the most widely used tool in the Angular community, then showed
    how to configure Cypress in an Angular project, and finally taught you how to
    write your first E2E test with Cypress in Angular step</st> <st c="16675">by step.</st>
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16393">下一章，我们将深入探讨使用 Cypress 在测试驱动开发方法中编写 E2E 测试，同时我们将改进和重构与我们的组件相关的先前测试，并遵循
    Cypress 的良好实践。</st> <st c="16675">逐步进行。</st>
- en: <st c="16683">In the next chapter, we will go into more depth with the writing
    of E2E tests with Cypress in a test-driven development approach, and we will improve
    and refactor our previous tests related to our components while respecting the
    good practices</st> <st c="16928">with Cypress.</st>
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16683">在下一章中，我们将更深入地探讨使用 Cypress 在测试驱动开发方法中编写 E2E 测试，同时我们将改进和重构与我们的组件相关的先前测试，并尊重
    Cypress 的良好实践。</st> <st c="16928">。</st>
