["```js\n    npm run serve ng-basic-routing \n    ```", "```js\n    import { Route } from '@angular/router';\n    export const appRoutes: Route[] = []; \n    ```", "```js\n    import { ApplicationConfig } from '@angular/core';\n    **import** **{**\n    **provideRouter,**\n    **withEnabledBlockingInitialNavigation,**\n    **}** **from****'@angular/router'****;**\n    **import** **{ appRoutes }** **from****'./app.routes'****;**\n    export const appConfig: ApplicationConfig = {\n      providers: [**provideRouter****(appRoutes,** **withEnabledBlockingInitialNavigation****())**],\n    }; \n    ```", "```js\n    nx g c home --directory apps/chapter07/ng-basic-routing/src/app/home --standalone\n    nx g c about --directory apps/chapter07/ng-basic-routing/src/app/about --standalone \n    ```", "```js\n    import { Route } from '@angular/router';\n    **import** **{** **AboutComponent** **}** **from****'./about/about.component'****;**\n    **import** **{** **HomeComponent** **}** **from****'./home/home.component'****;**\n    export const appRoutes: Route[] = [**{**\n    **path****:** **''****,**\n    **pathMatch****:** **'full'****,**\n    **redirectTo****:** **'home'**\n    **}, {**\n    **path****:** **'home'****,**\n    **component****:** **HomeComponent**\n    **}, {**\n    **path****:** **'about'****,**\n    **component****:** **AboutComponent**\n    **}**\n    ]; \n    ```", "```js\n    <!-- Toolbar -->\n    ...\n    <main class=\"content\" role=\"main\">\n    **<****router-outlet****></****router-outlet****>**\n    </main> \n    ```", "```js\n    ...\n    **import** **{** **RouterModule** **}** **from****'@angular/router'****;**\n    @Component({\n      ...,\n      imports: [CommonModule, **RouterModule**],\n    })\n    export class AppComponent {} \n    ```", "```js\n    <!-- Toolbar -->\n    <div class=\"toolbar\" role=\"banner\">\n      ...\n      <div class=\"spacer\"></div>\n    **<****div****class****=****\"route-links\"****>**\n    **<****div**\n    **class****=****\"route-links__route-link\"**\n    **routerLink****=****\"/home\"**\n    **routerLinkActive****=****\"route-links__route-link--active\"**\n    **>**\n    **Home**\n    **</****div****>**\n    **<****div**\n    **class****=****\"route-links__route-link\"**\n    **routerLink****=****\"/about\"**\n    **routerLinkActive****=****\"route-links__route-link--active\"**\n    **>**\n    **About**\n    **</****div****>**\n    **</****div****>**\n      ...\n    <main class=\"content\" role=\"main\">...</main> \n    ```", "```js\n    npm run serve ng-lazy-routing \n    ```", "```js\n    import { Route } from '@angular/router';\n    export const appRoutes: Route[] = [{\n      path: '',\n      pathMatch: 'full',\n      redirectTo: 'home'\n    }**, {**\n    **path****:** **'home'****,**\n    **loadComponent****:** **() =>****import****(****'./home/home.component'****).****then****(****m** **=>** **m.****HomeComponent****)**\n    **}, {**\n    **path****:** **'about'****,**\n    **loadComponent****:** **() =>****import****(****'./about/about.component'****).****then****(****m** **=>** **m.****AboutComponent****)**\n    **}**]; \n    ```", "```js\n    npm run serve ng-route-preload-strat \n    ```", "```js\n    import { ApplicationConfig } from '@angular/core';\n    import {\n      **PreloadAllModules****,**\n    **provideRouter****,**\n    **withEnabledBlockingInitialNavigation****,**\n    **withPreloading****,**\n    **}** from '@angular/router';\n    import { appRoutes } from './app.routes';\n    import { provideAnimations } from '@angular/platform-browser/animations';\n    export const appConfig: ApplicationConfig = {\n      providers: [\n        provideRouter(\n          appRoutes,\n          withEnabledBlockingInitialNavigation(),\n          **withPreloading****(****PreloadAllModules****)**\n        ),\n        provideAnimations(),\n      ],\n    }; \n    ```", "```js\n    nx g service app-preload-strategy --project ng-route-preload-strat \n    ```", "```js\n    import { Injectable } from '@angular/core';\n    **import** **{** **PreloadingStrategy** **}** **from****'@angular/router'****;**\n    @Injectable({\n      providedIn: 'root'\n    })\n    export class CustomPreloadStrategyService**implements****PreloadingStrategy** {\n    } \n    ```", "```js\n    import { Injectable } from '@angular/core';\n    import { PreloadingStrategy**,** **Route** } from '@angular/router';\n    **import** **{** **Observable****,** **of** **}** **from****'rxjs'****;**\n    @Injectable({...})\n    export class CustomPreloadStrategyService implements PreloadingStrategy {\n      **preload****(****route****:** **Route****,** **load****:** **() =>****Observable****<****any****>):**\n    **Observable****<****any****> {**\n    **return****of****(****null****)**\n    **}**\n    **logAndLoad****(****route****:** **Route****,** **load****: () =>** **Observable****<****any****>****) {**\n    **console****.****log****(****`Preloading route:** **${route.path}****`****);**\n    **return****load****();**\n    **}**\n    } \n    ```", "```js\n    ...\n    export const appRoutes: Route[] = [\n      { path: '', ...},\n      { path: 'auth', ...},\n      { path: 'admin', ..., **data****: {** **loadForAdmin****:** **true** **}** },\n      {\n        path: 'admin-campaign',\n        ...,\n        **data****: {** **loadForAdmin****:** **true** **}**\n      },\n      {\n        path: 'employee',\n        ...,\n       **data****: {** **loadForEmployee****:** **true** **},**\n      },\n      {\n        path: 'employee-campaign',\n        ...,\n        **data****: {** **loadForEmployee****:** **true** **},**\n      },\n    ]; \n    ```", "```js\n    ...\n    **import** **{** **AuthService** **}** **from****'./auth/auth.service'****;**\n    **import** **{** **UserType** **}** **from****'./constants/user-type'****;**\n    ...\n    export class AppPreloadStrategyService implements PreloadingStrategy {\n      **auth =** **inject****(****AuthService****);**\n    preload(route: Route, load: () => Observable<any>): Observable<any> {\n        **const** **isLoggedIn =** **this****.****auth****.****isLoggedIn****();**\n    **if** **(!isLoggedIn) {**\n    **return****of****(****null****)**\n    **}**\n    **const** **isAdmin =** **this****.****auth****.****loggedInUserType** **===**\n    **UserType****.****Admin****;**\n    return of(null)\n      }\n      logAndLoad(route: Route, load: () => Observable<any>) {...}\n    } \n    ```", "```js\n    ...\n    export class CustomPreloadStrategyService implements PreloadingStrategy {\n    ...\n      preload(route: Route, load: () => Observable<any>):\n      Observable<any> {\n        ...\n        const isAdmin = this.auth.loggedInUserType ===\n      UserType.Admin;\n        **if** **(**\n    **(isAdmin && route.****data****?.[****'loadForAdmin'****]) ||**\n    **(!isAdmin && route.****data****?.[****'loadForEmployee'****])**\n    **) {**\n    **return****this****.****logAndLoad****(route, load);**\n    **}**\n    return of(null)\n      }\n    } \n    ```", "```js\n    import { ApplicationConfig } from '@angular/core';\n    import {\n      provideRouter,\n      withEnabledBlockingInitialNavigation,\n      withPreloading,\n    } from '@angular/router';\n    import { appRoutes } from './app.routes';\n    **import** **{** **AppPreloadStrategyService** **}** **from****'./app-preload-strategy.service'****;**\n    import { provideAnimations } from '@angular/platform-browser/animations';\n    export const appConfig: ApplicationConfig = {\n      providers: [\n        provideRouter(\n          appRoutes,\n          withEnabledBlockingInitialNavigation(),\n          withPreloading(AppPreloadStrategyService)\n        ),\n        provideAnimations(),\n      ],\n    }; \n    ```", "```js\npreload(route: Route, load: () => Observable<any>) => Observable<any> \n```", "```js\n    npm run serve ng-route-guards \n    ```", "```js\n    import { inject } from \"@angular/core\";\n    import { CanActivateFn, Router } from \"@angular/router\";\n    import { AuthService } from \"./auth.service\";\n    export const canActivateAdminOrEmployee: CanActivateFn =\n      () => {\n      const router = inject(Router);\n      const authService = inject(AuthService);\n      const isLoggedIn = authService.isLoggedIn();\n      if (!isLoggedIn) {\n        router.navigate(['/auth']);\n        return false;\n      }\n      return true;\n    }; \n    ```", "```js\n     import { Route } from '@angular/router';\n    import { canActivateAdminOrEmployee } from './auth/auth.guards';\n    export const appRoutes: Route[] = [\n      {...},\n      { path: 'auth', ... },\n      {\n        path: 'admin',\n        ...,\n        **canActivate****: [canActivateAdminOrEmployee]**\n      },\n      {\n        path: 'employee',\n        ...,\n        **canActivate****: [canActivateAdminOrEmployee]**\n      }\n    ]; \n    ```", "```js\n    ...\n    **import** **{** **UserType** **}** **from****'../constants/user-type'****;**\n    **export****const****canActivateLogin****:** **CanActivateFn** **=** **() =>** **{**\n    **const** **router =** **inject****(****Router****);**\n    **const** **authService =** **inject****(****AuthService****);**\n    **const** **isLoggedIn = authService.****isLoggedIn****();**\n    **if** **(router.****url** **===** **'/'** **&& isLoggedIn) {**\n    **const** **isAdmin = authService.****loggedInUserType** **===**\n    **UserType****.****Admin****;**\n    **router.****navigate****([****`/****${isAdmin ?** **'admin'** **:**\n    **'employee'****}****`****])**\n    **return****false**\n    **}**\n    **return** **!authService.****isLoggedIn****()**\n    **}**\n    export const canActivateAdminOrEmployee: CanActivateFn = () => {...}; \n    ```", "```js\n    npm run serve ng-route-guards \n    ```", "```js\n    import { Route } from '@angular/router';\n    export const appRoutes: Route[] = [\n      { path: '', ...},\n      { path: 'users', ...},\n      {\n        path: 'users/**:uuid**',\n        loadComponent: () => ...,\n      },\n    ]; \n    ```", "```js\n    <ul>\n    <li\n     routerLink=\"/users/**{{user.uuid}}**\"\n        *ngFor=\"let user of users\">\n        ...\n      </li>\n    </ul> \n    ```", "```js\n    ...\n    import { **ActivatedRoute****,** RouterModule } from '@angular/router';\n    import { **filter, map,** Observable} from 'rxjs';\n    ...\n    @Component({...})\n    export class UserDetailsComponent {\n      **route =** **inject****(****ActivatedRoute****);**\n      ...\n      **constructor****() {**\n    **this****.****user$** **=** **this****.****route****.****paramMap****.****pipe****(**\n    **map****(****(****params****) =>** **params.****get****(****'uuid'****)),**\n    **filter****(****(****uuid****) =>** **!!uuid),**\n    **map****(****(****uuid****) =>** **{**\n    **return****this****.****userService****.****getById****(uuid** **as****string****) ||**\n    **null****;**\n    **})**\n    **);**\n    **}**\n    } \n    ```", "```js\n    ...\n    import { filter, map, Observable**,** **of****, tap**} from 'rxjs';\n    ...\n    @Component({...})\n    export class UserDetailsComponent {\n      ...\n      constructor() {\n        this.user$ = this.route.paramMap.pipe(\n          map((params) => params.get('uuid')),\n          filter((uuid) => !!uuid),\n          **tap****(****(****uuid****) =>** **{**\n    **this****.****similarUsers$** **=**\n    **of****(****this****.****userService****.****getSimilar****(uuid** **as****string****))**\n    **}),**\n    map((uuid) => {...})\n        );\n      }\n    } \n    ```", "```js\nthis.route.snapshot.paramMap.get('uuid'); \n```", "```js\n    npm run serve ng-global-loader \n    ```", "```js\n    ...\n    @Component({\n      ...\n      imports: [RouterModule, CommonModule**,** **LoaderComponent**],\n      providers: [...],\n    })\n    export class AppComponent {\n      ...\n      router = inject(Router);\n      **isRouting =** **true****;**\n      ...\n    } \n    ```", "```js\n    <div *ngIf=\"isRouting; else app\" class=\"loader-container\n      fixed w-full h-full flex items-center justify-center \">\n    <app-loader></app-loader>\n    </div>\n    <ng-template #app>\n    <div class=\"toolbar\" role=\"banner\">...</div>\n    <main class=\"content\" role=\"main\">...</main>\n    </ng-template> \n    ```", "```js\n    import { **NavigationStart****,** Router, RouterModule } from '@angular/router';\n    ...\n    @Component({...})\n    export class AppComponent {\n      **constructor****() {**\n    **this****.****router****.****events****.****subscribe****(****(****event****) =>** **{**\n    **if** **(event** **instanceof****NavigationStart****) {**\n    **this****.****isRouting** **=** **true****;**\n    **}**\n    **})**\n    **}**\n    get isLoggedIn() {...}\n    } \n    ```", "```js\n    ...\n    import { **NavigationCancel****,** **NavigationEnd****,** **NavigationError****,** NavigationStart, Router, RouterModule } from '@angular/router';\n    ...\n    @Component({...})\n    export class AppComponent {\n      ...\n      isRouting = **false**;\n      constructor() {\n        this.router.events.subscribe((event) => {\n          if (event instanceof NavigationStart) {\n            this.isRouting = true;\n          }**else****if** **(**\n    **event** **instanceof****NavigationEnd** **||**\n    **event** **instanceof****NavigationError** **||**\n    **event** **instanceof****NavigationCancel**\n    **) {**\n    **this****.****isRouting** **=** **false****;**\n    **}**\n        })\n      }\n      ...\n    } \n    ```"]