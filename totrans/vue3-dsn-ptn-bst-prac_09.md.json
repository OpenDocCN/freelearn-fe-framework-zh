["```js\n$ npm install\n```", "```js\n$ npm run start\n```", "```js\n$ npm install -D vitest\n```", "```js\n\"scripts\": {\n    \"start\":\"vite\",\n    \"build\": \"vite build\",\n    \"preview\": \"vite preview\",\n    \"test\": \"vitest\",\n    \"test:once\": \"vitest run\",\n    \"test:coverage\": \"vitest run --coverage\"\n}\n```", "```js\n$ npm run test\n```", "```js\nimport { describe, expect, test } from \"vitest\"\nimport { Fibonacci, FibonacciPromise } from \"../services/Fibonacci.js\"\n```", "```js\ndescribe(\"Test the results from Fibonacci()\", () => {\n test(\"Results according to the series definition\", ()=>{\n    // Expected values as defined by the series\n    expect(Fibonacci(0)).toBe(0)\n    expect(Fibonacci(1)).toBe(1)\n    expect(Fibonacci(2)).toBe(1)\n    expect(Fibonacci(3)).toBe(2)\n    // A known value defined by calculation of the series\n    expect(Fibonacci(10)).toBe(55)\n })\n})\n```", "```js\n$ npm run test\n```", "```js\n// Using expect\nexpect(Fibonacci(10)).toBe(55);\n// Using your own logic\nlet result=Fibonacci(10);\nif(result!=55) throw Error(\"Calculation failed\");\n```", "```js\ntest(\"Out of range, must fail and throw an error\", ()=>{\n    expect(()=>Fibonacci(-5)).toThrow()\n})\n```", "```js\ntest(\"Resolve promise\", async ()=>{\nawait expect(FibonacciPromise(10)).resolves.toBe(55)\n})\n```", "```js\n$ npm install -D @vue/test-utils\n```", "```js\nexport default defineConfig({\n    plugins: [vue()],\n    test:{environment:\"jsdom\"}\n})\n```", "```js\n$ npm install –D jsdom\n```", "```js\nimport { describe, expect, test } from \"vitest\"\nimport { mount } from \"@vue/test-utils\"                             #1\nimport FibonacciOutput from \"../components/FibonacciOutput.vue\"     #2\ndescribe(\"Check Component props and HTML\", () => {\n    test(\"Props input and HTML output\", () => {\n        const wrapper = mount(FibonacciOutput,\n            { props: { number: 10 } })                              #3\n        expect(wrapper.text()).toContain(55)                        #4\n    })\n})\n```", "```js\nimport { describe, expect, test } from \"vitest\"\nimport { mount } from \"@vue/test-utils\"\nimport FibonacciInput from \"../components/FibonacciInput.vue\"\ndescribe(\"Check Component action and event\", ()=>{\n    test(\"Enter value and emit event on button click\",()=>{\n        let wrapper=mount(FibonacciInput)                           #1\n        wrapper.find(\"input\").setValue(10)                          #2\n        wrapper.find(\"button\").trigger(\"click\")                     #3\n        // Capture the event parameters\n        let inputEvents=wrapper.emitted(\"input\")                    #4\n        // Assert the event was emitted, and with the correct value\n        // Each event provides an array with the arguments passed\n        expect(inputEvents[0]).toEqual([10])                        #5\n        // or\n        expect(inputEvents[0][0]).toBe(10)                          #6\n    })\n})\n```", "```js\nif (import.meta.vitest) {\n    const { describe, test, expect } = import.meta.vitest\n   //... Test functions here\n}\n```", "```js\nexport default defineConfig({\n    test: {\n        includeSource: ['src/**/*.{js,ts}'],\n        // other configurations here...\n    },\n})\n```", "```js\nexport default defineConfig({\n    define: { 'import.meta.vitest': 'undefined' },\n    // Other configurations...\n})\n```", "```js\n$ npm run test:coverage\n```", "```js\ntest:{\n    coverage: {reporter: ['text', 'json', 'html']},\n    //...\n}\n```", "```js\n$ npm install –D @vitests/ui\n```", "```js\nscripts:{\n    \"test:ui\": \"vitest –-ui\"\n    // Other settings...\n}\n```", "```js\n$ npm run test:ui\n```", "```js\n$ sudo apt install git\n```", "```js\n$ sudo add-apt-repository ppa:git-core/ppa\n$ sudo apt update\n$ sudo apt install git\n```", "```js\n$ git –-version\n```", "```js\n$ git init\n```", "```js\n$ git add [filename1] [filename2]..\n```", "```js\n$ git add .\n```", "```js\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\npnpm-debug.log*\nlerna-debug.log*\nnode_modules\ndist\ndist-ssr\n*.local\n.vscode/*\n!.vscode/extensions.json\n.idea\n.DS_Store\n*.suo\n*.ntvs*\n*.njsproj\n*.sln\n*.sw?\n```", "```js\n$ git status\n```", "```js\n$ git commit –m \"First commit\"\n```", "```js\n$ git checkout –b [branch_name]\n```", "```js\n$ git branch [branch_name]\n```", "```js\n$ git branch –d [branch_name]\n```", "```js\n$ git checkout [branch_name]\n```", "```js\n$ git merge [branch_name]\n```", "```js\n$ git branch\n```", "```js\n    $ git remote add origin URL\n    ```", "```js\n    $ git push –set-upstream origin master\n    ```", "```js\n    $ git pull origin master\n    ```", "```js\n    $ git push origin master\n    ```"]