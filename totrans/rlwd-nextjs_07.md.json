["```js\nimport React, { useState } from \"react\";\nfunction Counter({ initialCount = 0 }) {\n  const [count, setCount] = useState(initialCount);\n  return (\n    <div>\n      <b>Count is: {count}</b><br />\n      <button onClick={() => setCount(count + 1)}>\n        Increment +\n      </button>\n      <button onClick={() => setCount(count - 1)}>\n        Decrement -\n      </button>\n    </div>\n  )\n}\nexport default Counter;\n```", "```js\n{\n  \"8321-k532\": 4,\n  \"9126-b921\": 2\n}\n```", "```js\nimport { createContext } from 'react';\nconst ShoppingCartContext = createContext({\n  items: {},\n  setItems: () => null,\n});\nexport default ShoppingCartContext;\n```", "```js\nimport { useState } from 'react';\nimport Head from 'next/head';\nimport CartContext from\n  '../components/context/cartContext';\nimport Navbar from '../components/Navbar';\nfunction MyApp({ Component, pageProps }) {\n  const [items, setItems] = useState({});\n  return (\n    <>\n      <Head>\n        <link\nhref=\"https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css\"\n          rel=\"stylesheet\"\n        />\n      </Head>\n      <CartContext.Provider value={{ items, setItems }}>\n        <Navbar />\n        <div className=\"w-9/12 m-auto pt-10\">\n          <Component {...pageProps} />\n        </div>\n      </CartContext.Provider>\n    </>\n  );\n}\nexport default MyApp;\n```", "```js\nimport ProductCard from '../components/ProductCard';\nimport products from '../data/items';\nfunction Home() {\n  return (\n    <div className=\"grid grid-cols-4 gap-4\">\n      {products.map((product) => (\n        <ProductCard key={product.id} {...product} />\n      ))}\n    </div>\n  );\n}\nexport default Home;\n```", "```js\nfunction ProductCard({ id, name, price, picture }) {\n  return (\n    <div className=\"bg-gray-200 p-6 rounded-md\">\n    <div className=\"relative 100% h-40 m-auto\">\n      <img src={picture} alt={name} className=\"object-cover\" />\n    </div>\n    <div className=\"flex justify-between mt-4\">\n    <div className=\"font-bold text-l\"> {name} </div>\n    <div className=\"font-bold text-l text-gray-500\"> ${price}       per kg </div>\n    </div>\n    <div className=\"flex justify-between mt-4 w-2/4 m-auto\">\n      <button\n      className=\"pl-2 pr-2 bg-red-400 text-white rounded-md\"\n      disabled={false /* To be implemented */}\n      onClick={() => {} /* To be implemented */}>\n        -\n      </button>\n    <div>{/* To be implemented */}</div>\n      <button\n      className=\"pl-2 pr-2 bg-green-400 text-white rounded-md\"      onClick={()  => {} /* To be implemented */}>\n        +\n      </button>\n</div>\n</div>\n  );\n}\nexport default ProductCard;\n```", "```js\nimport { useContext } from 'react';\nimport cartContext from '../components/context/cartContext';\nfunction ProductCard({ id, name, price, picture }) {\nconst { setItems, items } = useContext(cartContext);\n// ...\n```", "```js\nimport { useContext } from 'react';\nimport cartContext from '../components/context/cartContext';\nfunction ProductCard({ id, name, price, picture })\n  const { setItems, items } = useContext(cartContext);\n  const productAmount = id in items ? items[id] : 0;\n// ...\n```", "```js\nimport { useContext } from 'react';\nimport cartContext from '../components/context/cartContext';\nfunction ProductCard({ id, name, price, picture }) {\n  const { setItems, items } = useContext(cartContext);\n  const productAmount = items?.[id] ?? 0;\n  const handleAmount = (action) => {\n    if (action === 'increment') {\n      const newItemAmount = id in items ? items[id] + 1 : 1;\n      setItems({ ...items, [id]: newItemAmount });\n    }\n    if (action === 'decrement') {\n      if (items?.[id] > 0) {\n        setItems({ ...items, [id]: items[id] - 1 });\n      }\n    }\n  };\n// ...\n```", "```js\n<div className=\"flex justify-between mt-4 w-2/4 m-auto\">\n<button\n  className=\"pl-2 pr-2 bg-red-400 text-white rounded-md\"\n  disabled={productAmount === 0}\n  onClick={() => handleAmount('decrement')}>\n    -\n</button>\n  <div>{productAmount}</div>\n<button\n  className=\"pl-2 pr-2 bg-green-400 text-white rounded-md\"\n  onClick={() => handleAmount('increment')}>\n    +\n</button>\n</div>\n```", "```js\nimport { useContext } from 'react';\nimport Link from 'next/link';\nimport cartContext from '../components/context/cartContext';\nfunction Navbar() {\n  const { items } = useContext(cartContext);\n// ...\n```", "```js\nimport { useContext } from 'react';\nimport Link from 'next/link';\nimport cartContext from '../components/context/cartContext';\nfunction Navbar() {\n  const { items } = useContext(cartContext);\n  const totalItemsAmount = Object.values(items)\n    .reduce((x, y) => x + y, 0);\n// ...\n```", "```js\n// ...\n<div className=\"font-bold underline\">\n  <Link href=\"/cart\" passHref>\n    <a>{totalItemsAmount} items in cart</a>\n  </Link>\n</div>\n// ...\n```", "```js\nimport { useContext } from 'react';\nimport cartContext from '../components/context/cartContext';\nimport data from '../data/items';\nfunction Cart() {\n  const { items } = useContext(cartContext);\n// ...\n```", "```js\nimport { useContext } from 'react';\nimport cartContext from '../components/context/cartContext';\nimport data from '../data/items';\nfunction getFullItem(id) {\n  const idx = data.findIndex((item) => item.id === id);\n  return data[idx];\n}\nfunction Cart() {\n  const { items } = useContext(cartContext);\n// ...\n```", "```js\n// ...\nfunction Cart() {\n  const { items } = useContext(cartContext);\n  const total = Object.keys(items)\n    .map((id) => getFullItem(id).price * items[id])\n    .reduce((x, y) => x + y, 0);\n// ...\n```", "```js\n// ...\nfunction Cart() {\n  const { items } = useContext(cartContext);\n  const total = Object.keys(items)\n    .map((id) => getFullItem(id).price * items[id])\n    .reduce((x, y) => x + y, 0);\n  const amounts = Object.keys(items).map((id) => {\n    const item = getFullItem(id);\n    return { item, amount: items[id] };\n  });\n// ...\n```", "```js\n// ...\n<div>\n<h1 className=\"text-xl font-bold\"> Total: ${total} </h1>\n<div>\n  {amounts.map(({ item, amount }) => (\n    <div key={item.id}>\nx{amount} {item.name} (${amount * \n        item.price})\n</div>\n  ))}\n</div>\n</div>\n// ...\n```", "```js\nyarn add redux react-redux\n```", "```js\nyarn add -D redux-devtools-extension\n```", "```js\nimport { useMemo } from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nlet store;\nconst initialState = {};\n// ...\n```", "```js\n//...\nconst reducer = (state = initialState, action) => {\n  const itemID = action.id;\n  switch (action.type) {\n    case 'INCREMENT':\n      const newItemAmount = itemID in state ? \n        state[itemID] + 1 : 1;\n      return {\n        ...state,\n        [itemID]: newItemAmount,\n      };\n    case 'DECREMENT':\n      if (state?.[itemID] > 0) {\n        return {\n          ...state,\n          [itemID]: state[itemID] - 1,\n        };\n      }\n      return state;\n    default:\n      return state;\n  }\n};\n```", "```js\n// ...\nfunction initStore(preloadedState = initialState) {\n  return createStore(\n    reducer,\n    preloadedState,\n    composeWithDevTools(applyMiddleware())\n  );\n}\n```", "```js\n// ...\nexport const initializeStore = (preloadedState) => {\n  let _store = store ?? initStore(preloadedState);\n  if (preloadedState && store) {\n    _store = initStore({\n      ...store.getState(),\n      ...preloadedState,\n    });\n    store = undefined;\n  }\n  //Return '_store' when initializing Redux on the server-side\n  if (typeof window === 'undefined') return _store;\n  if (!store) store = _store;\n  return _store;\n};\n```", "```js\n// ...\nexport function useStore(initialState) {\n  return useMemo(\n    () => initializeStore(initialState), [initialState]\n  );\n}\n```", "```js\nimport Head from 'next/head';\nimport { Provider } from 'react-redux';\nimport { useStore } from '../redux/store';\nimport Navbar from '../components/Navbar';\nfunction MyApp({ Component, pageProps }) {\n  const store = useStore(pageProps.initialReduxState);\n  return (\n  <>\n<Head>\n  <link href=\"https://unpkg.com/tailwindcss@^2/dist/tailwind.    min.css\" rel=\"stylesheet\" />\n</Head>\n  <Provider store={store}>\n<Navbar />\n  <div className=\"w-9/12 m-auto pt-10\">\n    <Component {...pageProps} />\n  </div>\n  </Provider>\n</>\n  );\n}\nexport default MyApp;\n```", "```js\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\n// ...\n```", "```js\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nfunction useGlobalItems() {\n  return useSelector((state) => state, shallowEqual);\n}\n// ...\n```", "```js\n// ...\nfunction ProductCard({ id, name, price, picture }) {\n  const dispatch = useDispatch();\n  const items = useGlobalItems();\n  const productAmount = items?.[id] ?? 0;\n  return (\n// ...\n```", "```js\n// ...\n<div className=\"flex justify-between mt-4 w-2/4 m-auto\">\n  <button\n    className=\"pl-2 pr-2 bg-red-400 text-white rounded-md\"\n    disabled={productAmount === 0}\n    onClick={() => dispatch({ type: 'DECREMENT', id })}>\n      -\n  </button>\n<div>{productAmount}</div>\n  <button\n    className=\"pl-2 pr-2 bg-green-400 text-white rounded-md\"\n    onClick={() => dispatch({ type: 'INCREMENT', id })}>\n      +\n  </button>\n</div>\n// ...\n```", "```js\nimport Link from 'next/link';\nimport { useSelector, shallowEqual } from 'react-redux';\nfunction useGlobalItems() {\n  return useSelector((state) => state, shallowEqual);\n}\nfunction Navbar() {\n  const items = useGlobalItems();\n  const totalItemsAmount = Object.keys(items)\n    .map((key) => items[key])\n    .reduce((x, y) => x + y, 0);\n  return (\n    <div className=\"w-full bg-purple-600 p-4 text-white\">\n    <div className=\"w-9/12 m-auto flex justify-between\">\n    <div className=\"font-bold\">\n      <Link href=\"/\" passHref>\n        <a> My e-commerce </a>\n      </Link>\n    </div>\n    <div className=\"font-bold underline\">\n      <Link href=\"/cart\" passHref>\n        <a>{totalItemsAmount} items in cart</a>\n      </Link>\n     </div>\n     </div>\n     </div>\n  );\n}\nexport default Navbar;\n```", "```js\nimport { useSelector, shallowEqual } from 'react-redux';\nimport data from '../data/items';\nfunction useGlobalItems() {\n  return useSelector((state) => state, shallowEqual);\n}\n// ...\n```", "```js\n// ...\nfunction getFullItem(id) {\n  const idx = data.findIndex((item) => item.id === id);\n  return data[idx];\n}\n// ...\n```", "```js\nfunction Cart() {\n  const items = useGlobalItems();\n  const total = Object.keys(items)\n    .map((id) => getFullItem(id).price * items[id])\n    .reduce((x, y) => x + y, 0);\n  const amounts = Object.keys(items).map((id) => {\n    const item = getFullItem(id);\n    return { item, amount: items[id] };\n  });\n  return (\n    <div>\n      <h1 className=\"text-xl font-bold\"> Total: ${total}  \n      </h1>\n    <div>\n        {amounts.map(({ item, amount }) => (\n          <div key={item.id}>\n            x{amount} {item.name} (${amount * item.price})\n    </div>\n        ))}\n    </div>\n    </div>\n  );\n}\nexport default Cart;\n```"]