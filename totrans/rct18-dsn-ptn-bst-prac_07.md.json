["```js\nimport { FC, useState } from 'react'\ntype Props = {\n count: number\n}\nconst Counter: FC<Props> = (props) => {}\nexport default Counter \n```", "```js\nconst [state, setState] = useState<number>(props.count) \n```", "```js\nconst handleClick = () => {\n setState({ count: state.count + 1 })\n} \n```", "```js\nreturn (\n <div>\n {state.count}\n <button onClick={handleClick}>+</button>\n </div>\n) \n```", "```js\n<Counter count={1} /> \n```", "```js\n<Counter>\nProps\n count: 1\nState\n count: 1 \n```", "```js\n<Counter>\nProps\n count: 1\nState\n count: 2 \n```", "```js\ntype Props = {\n initialCount: number\n}\nconst Counter: FC<Props> = (props) => {\n const [count, setState] = useState<Count>({ count: props.initialCount })\n ...\n} \n```", "```js\n<Counter initialCount={1} /> \n```", "```js\nimport { FC, useState } from 'react'\nconst List: FC = () => {\n}\nexport default List \n```", "```js\nconst [items, setItems] = useState(['foo', 'bar']) \n```", "```js\nconst handleClick = () => {\nconst newItems = items.slice()\n newItems.unshift('baz')\n setItems(newItems)\n} \n```", "```js\nreturn (\n <div>\n <ul>\n  {items.map((item, index) => (\n  <li key={index}>{item}</li>\n  ))}\n </ul>\n <button onClick={handleClick}>+</button>\n </div>\n) \n```", "```js\nreturn (\n <div>\n <ul>\n  {items.map((item, index) => (\n  <li key={index}>\n  {item}\n  <input type=\"text\" />\n  </li>\n  ))}\n </ul>\n <button onClick={handleClick}>+</button>\n </div>\n) \n```", "```js\n {items.map((item, index) => (\n   <li key={`${item}-${index}`}>\n  {item}\n   <input type=\"text\" />\n </li>\n ))} \n```", "```js\n<Component {...props} /> \n```", "```js\n_jsx(Component, props) \n```", "```js\nconst Spread = () => <div foo=\"bar\" /> \n```", "```js\n Unknown prop `foo` on <div> tag. Remove this prop from the element \n```", "```js\n const Spread = props => <div {...props} />; \n```", "```js\n <Spread className=\"foo\" /> \n```", "```js\n <Spread foo=\"bar\" className=\"baz\" /> \n```", "```js\n const Spread = props => <div {...props.domProps} /> \n```", "```js\n <Spread foo=\"bar\" domProps={{ className: 'baz' }} /> \n```"]