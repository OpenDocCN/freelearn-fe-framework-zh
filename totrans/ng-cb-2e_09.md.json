["```js\n    npm run serve ng-cdk-virtual-scroll \n    ```", "```js\n    cd start && npm install --save @angular/cdk \n    ```", "```js\n    ...\n    **import** **{** **ScrollingModule** **}** **from****'@angular/cdk/scrolling'****;**\n    @Component({\n      ...,\n      imports: [CommonModule, **ScrollingModule**]\n    })\n    export class UsersListComponent {\n      @Input() listItems: AppUserCard[] = [];\n    } \n    ```", "```js\n    <h4 class=\"heading\">Our trusted customers</h4>\n    <ul>\n    <cdk-virtual-scroll-viewport class=\"list list-group p-2\"\n      [itemSize]=\"120\">\n    <li class=\"list__item list-group-item my-2 rounded-md p -4\"\n          *cdkVirtualFor=\"let item of listItems\">\n          ...\n        </li>\n    </cdk-virtual-scroll-viewport>\n    </ul> \n    ```", "```js\n    npm run serve ng-cdk-lkm \n    ```", "```js\n    import { Component, HostBinding, Input, ViewEncapsulation } from '@angular/core';\n    ...\n    **import** **{** **FocusableOption** **}** **from****'@angular/cdk/a11y'****;**\n    @Component({\n      ...,\n      styleUrls: ['./users-list-item.component.scss'],\n      encapsulation: ViewEncapsulation.None,\n    })\n    export class UsersListItemComponent **implements** **FocusableOption** {\n      @Input() item!: Partial<AppUserCard>;\n      @HostBinding('tabIndex')\n      tabIndex = -1;\n      @HostBinding('role')\n      role = 'list-item';\n      **focus****() {}**\n    } \n    ```", "```js\n    import { Component, **ElementRef****,** HostBinding, Input, ViewEncapsulation, inject } from '@angular/core';\n    ...\n    export class UsersListItemComponent implements FocusableOption {\n      ...\n      role = 'list-item';\n      **el =** **inject****(****ElementRef****);**\n    focus() {\n        **this****.el.nativeElement.****focus****();**\n      }\n    } \n    ```", "```js\n    import { Component, **HostBinding**, Input } from '@angular/core';\n    ...\n    export class UsersListComponent {\n      **@HostBinding****(****'role'****)**\n    **role =** **'list'****;**\n    @Input() listItems: AppUserCard[] = [];\n    } \n    ```", "```js\n    import { Component, HostBinding, Input, QueryList, ViewChildren } from '@angular/core';\n    ...\n    **import** **{** **FocusKeyManager** **}** **from****'@angular/cdk/a11y'****;**\n    ...\n    export class UsersListComponent {\n      @HostBinding('role')\n      role = 'list';\n      @Input() listItems: AppUserCard[] = [];\n      @ViewChildren(UsersListItemComponent)\n      listItemsElements!: QueryList<UsersListItemComponent>;\n      **private** **listKeyManager!:** **FocusKeyManager****<****UsersListItemComponent****>;**\n    } \n    ```", "```js\n    import { **AfterViewInit****,** Component, HostBinding, Input, QueryList, ViewChildren } from '@angular/core';\n          ...\n    export class UsersListComponent **implements** **AfterViewInit** {\n      ...\n      **ngAfterViewInit****() {**\n    **this****.listKeyManager =** **new** **FocusKeyManager****(**\n    **this****.listItemsElements**\n    **);**\n    **}**\n    } \n    ```", "```js\n    import { AfterViewInit, Component, HostBinding, **HostListener****,** Input, QueryList, ViewChildren } from '@angular/core';\n    ...\n    export class UsersListComponent implements AfterViewInit {\n      ...\n      **@HostListener****(****'window:keydown'****, [****'$event'****])**\n    **onKeydown****(****event****:** **KeyboardEvent****) {**\n    **this****.listKeyManager.****onKeydown****(event);**\n    **}**\n      ...\n    } \n    ```", "```js\n    import { Component, ElementRef, HostBinding, **HostListener****,** Input, ViewEncapsulation, inject } from '@angular/core';\n    ...\n    export class UsersListItemComponent implements FocusableOption {\n      ...\n      role = 'list-item';\n      **@HostListener****(****'keyup'****, [****'****$event'****])**\n    **onEnter****(****ev****:** **KeyboardEvent****) {**\n    **if** **(ev.code ===** **'Enter'****) {**\n    **alert****(****'Selected item is: '** **+**\n     **JSON****.****stringify****(****this****.item));**\n    **}**\n    **}**\n      ...\n    } \n    ```", "```js\n@HostBinding('tabIndex') and tabIndex = -1; \n```", "```js\n@HostBinding('role') and role = 'list-item'; \n```", "```js\n    npm run serve ng-cdk-popover \n    ```", "```js\n    ...\n    import { CdkOverlayOrigin, **ConnectedPosition****,** OverlayModule } from '@angular/cdk/overlay';\n    ...\n    @Component({\n      ...,\n      imports: [..., OverlayModule],\n    })\n    export class UsersListComponent {\n      @Input() listItems: AppUserCard[] = [];\n      popoverMenuOrigin!: CdkOverlayOrigin | null;\n      **menuPositions****:** **ConnectedPosition****[] = [**\n    **{** **offsetY****:** **4****,** **originX****:** **'****end'****,** **originY****:** **'bottom'****,**\n    **overlayX****:** **'end'****,** **overlayY****:** **'top'** **},**\n    **{** **offsetY****:** **-4****,** **originX****:** **'****end'****,** **originY****:** **'top'****,** **overlayX****:**\n    **'end'****,** **overlayY****:** **'bottom'** **},**\n    **];**\n         } \n    ```", "```js\n    <h4 class=\"heading\">Our trusted customers</h4>\n    <ul>\n    <cdk-virtual-scroll-viewport class=\"list list-group p-2\"\n        [itemSize]=\"120\">\n    <app-users-list-item\n     class=\"list__item\"\n     **cdkOverlayOrigin** #menuTrigger=\"cdkOverlayOrigin\"\n          *cdkVirtualFor=\"let item of listItems\"\n          [item]=\"item\">\n    </app-users-list-item>\n    </cdk-virtual-scroll-viewport>\n    </ul> \n    ```", "```js\n    ...\n    export class UsersListComponent {\n      ...\n       **openMenu****(****$event****:** **Event****,** **itemTrigger****:** **CdkOverlayOrigin****) {**\n    **if** **($event) {**\n    **$event.****stopImmediatePropagation****();**\n    **}**\n    **this****.popoverMenuOrigin = itemTrigger;**\n    **}**\n    } \n    ```", "```js\n    ...\n    export class UsersListComponent{\n      ...\n      menuShown = false;\n      ...\n      openMenu($event: Event, itemTrigger: CdkOverlayOrigin) {\n        if ($event) {\n          $event.stopImmediatePropagation();\n        }\n        this.popoverMenuOrigin = itemTrigger;\n        **this****.menuShown** **=** **true****;**\n      }\n      closeMenu() {\n        this.popoverMenuOrigin = null;\n        this.menuShown = false;\n      }\n      ...\n    } \n    ```", "```js\n    <h4 class=\"heading\">Our trusted customers</h4>\n    <ul>\n    <cdk-virtual-scroll-viewport class=\"list list-group p-2\"\n      [itemSize]=\"120\">\n    <app-users-list-item\n     class=\"list__item\"\n     cdkOverlayOrigin #menuTrigger=\"cdkOverlayOrigin\"\n          *cdkVirtualFor=\"let item of listItems\"\n     **(****click****)=****\"openMenu($event, menuTrigger)\"**\n     **[****class.list__item--active****]=****\"popoverMenuOrigin ===** **menuTrigger\"**\n          [item]=\"item\">\n    </app-users-list-item>\n    </cdk-virtual-scroll-viewport>\n    </ul>\n    ... \n    ```", "```js\n    ...\n    .menu-popover {\n      ...\n      &::before {\n        top: -10px;\n        border-width: 0px 10px 10px 10px;\n        border-color: transparent transparent white\n         transparent;\n        position: absolute;\n        content: '';\n        right: 5%;\n        border-style: solid;\n      }\n      &--up {\n        transform: translateY(-20px);\n        &::before {\n          top: unset !important;\n          transform: rotate(180deg);\n          bottom: -10px;\n        }\n      }\n      &__list {...}\n    } \n    ```", "```js\n    cd start && nx g directive positional-popover-class --directory apps/chapter09/ng-cdk-popover/src/app/directives \n    ```", "```js\n    ...\n    **import** **{** **PopoverPositionalClassDirective** **}** **from****'../../directives/popover-positional-class.directive'****;**\n    @Component({\n      ...\n      imports: [CommonModule, ScrollingModule, UsersListItemComponent, OverlayModule, **PopoverPositionalClassDirective**]\n    })\n    ... \n    ```", "```js\n    ...\n    <ng-template \n     cdkConnectedOverlay \n     ...\n      (backdropClick)=\"closeMenu()\"\n      [cdkConnectedOverlayPositions]=\"menuPositions\"\n     **appPopoverPositionalClass****targetSelector****=****\".menu-popover\"**\n      **inverseClass****=****\"menu-popover--up\"** \n      [originY]=\"popoverMenuPosition.originY\"\n      (positionChange)=\"popoverPositionChanged($event)\"\n     cdkConnectedOverlayPanelClass=\"menu-popover\"\n      >\n    <div class=\"menu-popover__list\">\n        ...\n      </div>\n    </ng-template> \n    ```", "```js\n    ...\n    import { ChangeDetectorRef, Component, Input, inject } from '@angular/core';\n    ...\n    import { CdkOverlayOrigin, ConnectedOverlayPositionChange, **ConnectedPosition****,** OverlayModule } from '@angular/cdk/overlay';\n    @Component({...})\n    export class UsersListComponent {\n      ...\n       cdRef = inject(ChangeDetectorRef); \n\n      **popoverMenuPosition****:** **Partial****<****ConnectedPosition****> = {**\n    **originY****:** **undefined**\n    **};**\n    **popoverPositionChanged****(****$event****:**\n      **ConnectedOverlayPositionChange****) {**\n    **if** **(****this****.popoverMenuPosition.originY !==**\n      $event.connectionPair.originY) {\n          this.popoverMenuPosition.originY = $event.connectionPair.originY;\n          }\n        this.cdRef.detectChanges();\n      }\n      ...\n    } \n    ```", "```js\nopenMenu($event: Event, itemTrigger: CdkOverlayOrigin) {\n    if ($event) {\n      $event.stopImmediatePropagation();\n    }\n    this.popoverMenuTrigger = itemTrigger;\n    this.menuShown = true;\n} \n```", "```js\n<ng-template cdkConnectedOverlay [cdkConnectedOverlayOrigin]=\"popoverMenuOrigin!\"\n  [cdkConnectedOverlayOpen]=\"menuShown\" [cdkConnectedOverlayHasBackdrop]=\"true\"\n  (backdropClick)=\"closeMenu()\"\n  [cdkConnectedOverlayPositions]=\"menuPositions\"\n  appPopoverPositionalClass targetSelector=\".menu-popover\" inverseClass=\"menu-popover--up\"\n**[originY]=****\"popoverMenuPosition.originY\"**\n**(positionChange)=****\"popoverPositionChanged($event)\"**\n  cdkConnectedOverlayPanelClass=\"menu-popover\"\n  >\n  ...\n</ng-template> \n```", "```js\n.menu-popover {\n  ...\n  **&****::before** **{**\n**top****: -****10px****;**\n**border-width****:** **0px****10px****10px****10px****;**\n**border-color****: transparent transparent white  transparent;**\n**position****: absolute;**\n**content****:** **''****;**\n**right****:** **5%****;**\n**border-style****: solid;**\n**}**\n  &--up {...}\n  &__list {...}\n} \n```", "```js\n.menu-popover {\n  ...\n  &::before {...}\n  &--up {\n    **transform****:** **translateY****(-****20px****);**\n**&****::before** **{**\n**top****: unset** **!important****;**\n**transform****:** **rotate****(****180deg****);**\n**bottom****: -****10px****;**\n**}**\n  }\n  &__list {...}\n} \n180deg to invert its pointer.\n```", "```js\n    npm run serve ng-cdk-coercion \n    ```", "```js\n    ...\n    export class RatingComponent {\n      @Input() value = 2;\n      @Input() disabled = false;\n      **@Input****() max =** **5****;**\n      ...\n      get renderArr() {\n        return new Array(**this****.****max**).fill(0).map((_, index) =>\n      index + 1);\n      }\n      ...\n    } \n    ```", "```js\n     <app-rating\n              [value]=\"reviewForm.controls.rating.value\" **max****=****\"8\"**\n              [disabled]=\"ratingDisabled\"\n              (valueChanged)=\"applyRating($event)\">\n    </app-rating> \n    ```", "```js\n    ...\n    **import** **{** **NumberInput****, coerceNumberProperty }** **from****'****@angular/cdk/coercion'****;**\n    ...\n    export class RatingComponent {\n      @Input() value = 2;\n      @Input() disabled = false;\n      **@Input****() get max () {**\n    **return****this****.****_max****;**\n    **}**\n    **set max (****val****:** **NumberInput****) {**\n    **this****.****_max** **=** **coerceNumberProperty****(val);**\n    **}**\n    **private** **_max =** **5****;**\n    @Output() valueChanged: EventEmitter<number> = new\n      EventEmitter();\n      ...\n    } \n    ```", "```js\n     <app-rating\n              [value]=\"reviewForm.controls.rating.value\"\n     max=\"8\"\n     **disabled****=****\"{{ratingDisabled}}\"**\n              (valueChanged)=\"applyRating($event)\">\n    </app-rating> \n    ```", "```js\n    ...\n    import { **BooleanInput****,** NumberInput, **coerceBooleanProperty**, coerceNumberProperty } from '@angular/cdk/coercion';\n    ...\n    export class RatingComponent {\n      @Input() value = 2;\n      **@Input****() get disabled () {**\n    **return****this****.****_disabled****;**\n    **}**\n    **set disabled (****val****:** **BooleanInput****) {**\n    **this****.****_disabled** **=** **coerceBooleanProperty****(val);**\n    **}**\n    **private** **_disabled =** **false****;**\n    @Input() get max () {...}\n      ...\n    } \n    ```", "```js\nvalue != null && `${value}` !== 'false' \n```", "```js\n    npm run serve ng-cdk-drag-drop to serve the project. \n    ```", "```js\n    ...\n    **import** **{** **DragDropModule** **}** **from****'@angular/cdk/drag-drop'****;**\n    @Component({\n      ...\n      imports: [CommonModule, FileComponent, FolderComponent, **DragDropModule**],\n      standalone: true\n    })\n    ... \n    ```", "```js\n    <div class=\"folders\">\n      ...\n      <div class=\"folders__list\">\n    <app-folder\n     **cdkDropList**\n     ...\n          [folder]=\"folder\"\n        >\n    </app-folder>\n    </div>\n    <div class=\"folders__selected-folder-files\"\n        *ngIf=\"selectedFolder\">\n    <div>\n    <app-file\n     **cdkDrag**\n            *ngFor=\"let file of selectedFolder.files\"\n            [file]=\"file\"\n          ></app-file>\n    </div>\n    </div>\n    </div> \n    ```", "```js\n    <div class=\"folders\">\n      ...\n      <div class=\"folders__selected-folder-files\"\n        *ngIf=\"selectedFolder\">\n    <div **cdkDropList**>\n    <app-file ...></app-file>\n    </div>\n    </div>\n    </div> \n    ```", "```js\n    <div class=\"folders\">\n      ...\n      <div class=\"folders__list\">\n    <app-folder\n     cdkDropList\n     **[****cdkDropListData****]=****\"folder.files\"**\n     ...\n        >\n    </app-folder>\n    </div>\n    <div class=\"folders__selected-folder-files\"\n        *ngIf=\"selectedFolder\">\n    <div\n     cdkDropList\n     **[****cdkDropListData****]=****\"selectedFolder.files\"**\n        >\n    <app-file\n     cdkDrag\n     **[****cdkDragData****]=****\"file\"**\n     ...\n          ></app-file>\n    </div>\n    </div>\n    </div> \n    ```", "```js\n    <div class=\"folders\">\n      ...\n      <div class=\"folders__list\">\n    <app-folder\n     cdkDropList\n          [cdkDropListData]=\"folder.files\"\n     **(****cdkDropListDropped****)=****\"onFileDrop($event)\"**\n     ...\n        >\n    </app-folder>\n    </div>\n    <div class=\"folders__selected-folder-files\"\n        *ngIf=\"selectedFolder\">\n    <div\n     cdkDropList\n          [cdkDropListData]=\"selectedFolder.files\"\n     **(****cdkDropListDropped****)=****\"onFileDrop($event)\"**\n        >\n          ...\n        </div>\n    </div>\n    </div> \n    ```", "```js\n    ...\n    import { IFile, IFolder } from '../interfaces';\n    ...\n    import { **CdkDragDrop****,** DragDropModule, **moveItemInArray****,** **transferArrayItem** } from '@angular/cdk/drag-drop';\n    ...\n    export class FoldersListComponent {\n      ...\n      toggleFolderSelect(folder: IFolder) {...}\n      **onFileDrop****(****event****:** **CdkDragDrop****<****IFile****[]>) {**\n    **if** **(event.previousContainer === event.container) {**\n    **moveItemInArray****(**\n    **event.container.data, event.previousIndex,**\n    **event.currentIndex**\n    **);**\n    **}** **else** **{**\n    **transferArrayItem****(**\n    **event.previousContainer****.data, event.container.data,**\n    **event.previousIndex, event.currentIndex**\n    **);**\n    **}**\n    **}**\n    } \n    ```", "```js\n    <div class=\"folders\" **cdkDropListGroup**>\n    ...\n    </div> \n    ```", "```js\n    <div class=\"folders\" cdkDropListGroup>\n      ...\n      <div class=\"folders__selected-folder-files\"   *ngIf=\"selectedFolder\">\n    <div\n     cdkDropList\n     ...\n        >\n    <app-file\n     cdkDrag\n     ...\n          >\n    **<****fa-icon**\n    **class****=****\"file-drag-preview\"**\n    *******cdkDragPreview**\n    **[****icon****]=****\"file.icon!\"**\n    **></****fa-icon****>**\n    </app-file>\n    </div>\n    </div>\n    </div> \n    ```", "```js\n    ...\n    **import** **{** **FontAwesomeModule** **}** **from****'@fortawesome/angular-fontawesome'****;**\n    @Component({\n      ...\n      imports: [CommonModule, FileComponent, FolderComponent, DragDropModule, **FontAwesomeModule**],\n      standalone: true\n    })\n    ... \n    ```", "```js\n    $folder-bg: #f5f5f5;\n    **$file-preview-****transition****: transform** **250ms****cubic-bezier****(****0****,**\n    **0****,** **0.2****,** **1****);**\n    .folders {...}\n    **.file-drag-preview** **{**\n    **padding****:** **10px****20px****;**\n    **background****: transparent;**\n    **font-size****:** **32px****;**\n    **}**\n    **.file-drop-placeholder** **{**\n    **min-height****:** **60px****;**\n    **transition****: $file-preview-transition;**\n    **display****: flex;**\n    **align-items****: center;**\n    **justify-content****: center;**\n    **font-size****:** **32px****;**\n    **}** \n    ```", "```js\n    ... \n    *** {**\n    **user-select: none;**\n    **}**\n\n    **.cdk-drop-list-dragging****.cdk-drag** **{**\n    **transition****: transform** **250ms****cubic-bezier****(****0****,** **0****,** **0.2****,** **1****);**\n    **}**\n\n    **.cdk-drag-animating** **{**\n    **transition****: transform** **300ms****cubic-bezier****(****0****,** **0****,** **0.2****,** **1****);**\n    **}** \n    ```", "```js\n    <div class=\"folders\" cdkDropListGroup>\n      ...\n      <div class=\"folders__selected-folder-files\" *ngIf=\"selectedFolder\">\n    <div cdkDropList ...>\n    <app-file cdkDrag ...>\n    <fa-icon class=\"file-drag-preview\"\n              *cdkDragPreview ... ></fa-icon>\n    **<****div****class****=****\"file-drop-placeholder\"**\n    *******cdkDragPlaceholder****>**\n    **<****fa-icon** **[****icon****]=****\"****upArrow\"****></****fa-icon****>**\n    **</****div****>**\n    </app-file>\n    </div>\n    </div>\n    </div> \n    ```", "```js\n    ...\n    **import** **{ faArrowAltCircleUp }** **from****'@fortawesome/free-regular-svg-icons'****;**\n    ...\n    export class FoldersListComponent {\n      folders = APP_DATA;\n      **upArrow = faArrowAltCircleUp;**\n    selectedFolder: IFolder | null = null;\n      ...\n    } \n    ```", "```js\n    npm run serve ng-cdk-stepper \n    ```", "```js\n    ...\n    **import** **{** **CdkStepperModule** **}** **from****'@angular/cdk/stepper'****;**\n    @Component({\n      ...\n      imports: [\n        ...\n        DiceComponent**,**\n    **CdkStepperModule**\n      ],\n    })\n    ... \n    ```", "```js\n    cd start && nx g c game-stepper --directory apps/chapter09/ng-cdk-stepper/src/app/components/game-stepper \n    ```", "```js\n    ...\n    **import** **{** **CdkStepper****,** **CdkStepperModule** **}** **from****'****@angular/cdk/stepper'****;**\n    @Component({\n      ...\n      imports: [CommonModule, **CdkStepperModule**],\n      ...\n      **providers****: [{** **provide****:** **CdkStepper****,** **useExisting****:**\n    **GameStepperComponent** **}],**\n    })\n    export class GameStepperComponent**extends****CdkStepper** {\n    } \n    ```", "```js\n    <div class=\"game-stepper\">\n    <header>\n    <h3 *ngIf=\"selected\">\n    <ng-container\n            *ngIf=\"selected.stepLabel; else showLabelText\"\n            [ngTemplateOutlet]=\"selected.stepLabel.template\"\n          >\n    </ng-container>\n    <ng-template #showLabelText>\n            {{ selected.label }}\n          </ng-template>\n    </h3>\n    </header>\n    </div> \n    ```", "```js\n    <div class=\"game-stepper\">\n    <header>...</header>\n    **<****section****class****=****\"game-stepper__content\"****>**\n    **<****div** **[****ngTemplateOutlet****]=****\"selected ? selected.content :**\n    **null\"****></****div****>**\n    **</****section****>**\n      ...\n    </div> \n    ```", "```js\n    <div class=\"game-stepper\">\n    <header>...</header>\n    <section class=\"game-stepper__content\">...</section>\n    **<****footer****class****=****\"game-stepper__navigation\"****>**\n    **<****button** *******ngIf****=****\"steps.get(selectedIndex - 1)\"**\n    **class****=****\"game-stepper__navigation__button btn btn**\n    **-primary\"****cdkStepperPrevious****>**\n    **&larr;**\n    **</****button****>**\n    **<****span****class****=****\"flex-1\"****></****span****>**\n    **<****button** *******ngIf****=****\"steps.get(selectedIndex + 1)\"**\n    **class****=****\"game-stepper__navigation__button btn btn-**\n    **primary\"****cdkStepperNext****>**\n    **&rarr;**\n    **</****button****>**\n    **</****footer****>**\n    </div> \n    ```", "```js\n    .game-stepper {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      &__navigation {\n        width: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        > button {\n          margin: 0 8px;\n        }\n      }\n\n      &__content {\n        min-height: 150px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex-direction: column;\n      }\n      header,\n      footer {\n        margin: 10px auto;\n      }\n    } \n    ```", "```js\n    ...\n    **import** **{** **GameStepperComponent** **}** **from****'../components/game-stepper/game-stepper.component'****;**\n    @Component({\n      ...\n      imports: [\n        ...\n        **GameStepperComponent**\n      ],\n    }) \n    ```", "```js\n    <app-game-stepper>\n    <form (ngSubmit)=\"submitName()\"\n      [formGroup]=\"nameForm\">...</form>\n    <app-value-guesser></app-value-guesser>\n    <app-dice></app-dice>\n    <app-leader-board></app-leader-board>\n    </app-game-stepper> \n    ```", "```js\n    <app-game-stepper>\n    <cdk-step>\n    <form (ngSubmit)=\"submitName()\"\n          [formGroup]=\"nameForm\">\n          ...\n        </form>\n    </cdk-step>\n    <cdk-step>\n    <app-value-guesser></app-value-guesser>\n    <app-dice></app-dice>\n    </cdk-step>\n    <cdk-step>\n    <app-leader-board></app-leader-board>\n    </cdk-step>\n    </app-game-stepper> \n    ```", "```js\n    <app-game-stepper>\n    <cdk-step>\n    <**ng-template****cdkStepLabel****>****Enter your name****</****ng-**\n    **template****>**\n    <form (ngSubmit)=\"submitName()\"     [formGroup]=\"nameForm\">\n          ...\n        </form>\n    </cdk-step>\n    <cdk-step>\n    **<****ng-template****cdkStepLabel****>**\n    **Guess what the value will be when the die is rolled**\n    **</****ng-template****>**\n    <app-value-guesser></app-value-guesser>\n    <app-dice></app-dice>\n    </cdk-step>\n    <cdk-step>\n    <ng-template cdkStepLabel>Results</ng-template>\n    <app-leader-board></app-leader-board>\n    </cdk-step>\n    </app-game-stepper> \n    ```", "```js\n    <app-game-stepper **[****linear****]=****\"true\"**>\n    <cdk-step **[****completed****]=****\"!!nameForm.get('name')!.value\"**>\n    <ng-template cdkStepLabel> Enter your\n          name</ng-template>\n    <form (ngSubmit)=\"submitName()\"\n          [formGroup]=\"nameForm\">\n    <div class=\"mb-3\" *ngIf=\"nameForm.get('name') as\n            nameControl\">\n            ...\n          </div>\n    **<****button** **←** **REMOVE****THIS**\n    **type****=****\"submit\"**\n    **[****disabled****]=****\"!nameForm.valid\"**\n    **class****=****\"btn btn-primary\"**\n    **>**\n    **Submit**\n    **</****button****>**\n    </form>\n    </cdk-step>\n      ...\n    </app-game-stepper> \n    ```", "```js\n    <section class=\"game-stepper\">\n      ...\n      <footer class=\"game-stepper__navigation\">\n        ...\n        <button\n     class=\"game-stepper__navigation__button btn\n            btn-primary\"\n     cdkStepperNext\n     **[****disabled****]=****\"!selected!.completed\"**\n          [style.visibility]=\"steps.get(selectedIndex + 1) ?\n            'visible' : 'hidden'\"\n        >\n    &rarr;\n    </button>\n    </footer>\n    </section> \n    ```", "```js\n    import { CommonModule } from '@angular/common';\n    import { Component, **ViewChild** } from '@angular/core';\n    import { **CdkStepper**, CdkStepperModule } from '@angular/cdk/stepper';\n    ...\n    export class GameComponent {\n      **@ViewChild****(****CdkStepper****) stepper!:** **CdkStepper****;**\n      ...\n      submitName() {\n        **this****.****stepper****.****next****();**\n      }\n    } \n    ```", "```js\n    ...\n    **import** **{** **IDiceSide** **}** **from****'../interfaces/dice.interface'****;**\n    @Component({...})\n    export class GameComponent implements OnInit {\n      @ViewChild(CdkStepper) stepper: CdkStepper;\n      **@ViewChild****(****DiceComponent****) diceComponent!:** **DiceComponent****;**\n    **@ViewChild****(****ValueGuesserComponent****)**\n    **valueGuesserComponent!:** **ValueGuesserComponent****;**\n    **guessedValue****:** **number** **|** **null** **=** **null****;**\n    **isCorrectGuess****:** **null** **|** **boolean** **=** **null****;**\n      ...\n      submitName() {...}\n      **rollTheDice****(****guessedValue****:** **number****) {**\n    **this****.****isCorrectGuess** **=** **null****;**\n    **this****.****guessedValue** **= guessedValue;**\n    **this****.****diceComponent****.****rollDice****();**\n    **}**\n    **showResult****(****diceSide****:** **IDiceSide****) {**\n    **this****.****isCorrectGuess** **=** **this****.****guessedValue** **===**\n    **diceSide.****value****;**\n    **}**\n    } \n    ```", "```js\n    <app-game-stepper [linear]=\"true\">\n    <cdk-step [completed]=\"!!nameForm.get('name').value\">\n        ...\n      </cdk-step>\n    <cdk-step **[****completed****]=****\"isCorrectGuess !== null\"**>\n    <ng-template cdkStepLabel\n          >Guess what the value will be when the die is\n            rolled</ng-template\n        >\n        <app-value-guesser [rolling]=\"rolling\" **(****valueGuessed****)=**\n    **\"rollTheDice($event)\"**></app-value-guesser>\n    <app-dice (diceRolling)=\"rolling = $event;\"\n      **(****diceRolled****)=****\"showResult($event)\"**></app-dice>\n    **<****ng-container** **[****ngSwitch****]=****\"isCorrectGuess\"****>**\n    **<****div****class****=****\"alert alert-success\"**\n    *******ngSwitchCase****=****\"true\"****>**\n    **You rock {{ nameForm.get('name')!.value }}! You got**\n    **50 points**\n    **</****div****>**\n    **<****div****class****=****\"alert alert-danger\"**\n    *******ngSwitchCase****=****\"false\"****>**\n    **Oops! Try again!**\n    **</****div****>**\n    **</****ng-container****>**\n    </cdk-step>\n    <cdk-step>...</cdk-step>\n    </app-game-stepper> \n    ```", "```js\n    ...\n    import { Component, ViewChild, **inject** } from '@angular/core';\n    ...\n    **import** **{** **LeaderboardService** **}** **from****'../services/leaderboard.service'****;**\n    **import** **{** **IScore** **}** **from****'../interfaces/score.interface'****;**\n    ...\n    export class GameComponent {\n      ...\n      **leaderboardService =** **inject****(****LeaderboardService****);**\n    **scores****:** **IScore****[] =** **this****.****leaderboardService****.****getScores****();**\n      ...\n      showResult(diceSide: IDiceSide) {\n        this.isCorrectGuess = this.guessedValue ===\n          diceSide.value;\n        **const** **userName =** **this****.****nameForm****.****controls****.****name****.****value****as**\n    **string****;**\n    **if** **(!****this****.****isCorrectGuess****) {**\n    **return****;**\n    **}**\n    **this****.****scores** **=** **this****.****leaderboardService****.****setScores****({**\n    **name****: userName,**\n    **score****:** **50****,**\n    **});**\n    **}**\n    } \n    ```", "```js\n    <app-game-stepper [linear]=\"true\">\n    <cdk-step [completed]=\"!!nameForm.get('name')!\n        .value\"></cdk-step>\n    <cdk-step [completed]=\"isCorrectGuess !== null\">\n    </cdk-step>\n    <cdk-step>\n    <ng-template cdkStepLabel>Results</ng-template>\n    <app-leader-board **[****scores****]=****\"scores\"**></app-leader-\n        board>\n      </cdk-step>\n    </app-game-stepper> \n    ```", "```js\n    npm run serve ng-cdk-listbox \n    ```", "```js\n    ...\n    **import** **{** **CdkListboxModule** **}** **from****'@angular/cdk/listbox'****;**\n    @Component({\n      ...\n      imports: [CommonModule, ReactiveFormsModule, **CdkListboxModule**],\n      ...\n    })\n    ... \n    ```", "```js\n    <!-- Color Options -->\n    **<****ul****cdkListbox**\n    **[****tabindex****]=****\"0\"**\n    **aria-labelledby****=****\"product-colors\"**\n    **cdkListboxOrientation****=****\"horizontal\"**\n    **class****=****\"flex flex-wrap justify-center gap-1**\n    **[&:hover_li]:opacity-75\"****>**\n    **<****li****cdkOption****=****\"space-gray\"****class****=****\"color-option**\n    **color-option--space-gray\"****></****li****>**\n    **<****li****cdkOption****=****\"silver\"****class****=****\"color-option**\n    **color-option--silver\"****></****li****>**\n    **<****li****cdkOption****=****\"pink\"****class****=****\"color-option color-**\n    **option--pink\"****></****li****>**\n    **<****li****cdkOption****=****\"green\"****class****=****\"color-option**\n    **color-option--green\"****></****li****>**\n    **<****li****cdkOption****=****\"blue\"****class****=****\"****color-option color-**\n    **option--blue\"****></****li****>**\n    **</****ul****>**\n    <!-- Color Options end --> \n    ```", "```js\n    .color-option {\n      ...\n      &--active,\n      &[aria-selected=true] {\n        @apply scale-125;\n      }\n    } \n    ```", "```js\n    <!-- Color Options -->\n    <ul cdkListbox\n              [tabindex]=\"0\"\n     **formControlName****=****\"color\"**...>\n              ...\n            </ul>\n    **<!-- Color Options end →** \n    ```", "```js\n    <!-- Color Options -->\n    <ul cdkListbox\n     ...>\n    <li cdkOption=\"space-gray\" **cdkOptionTypeaheadLabel****=****\"space gray\"** class=\"color-option color-option--space-gray\"></li>\n    <li cdkOption=\"silver\" **cdkOptionTypeaheadLabel****=****\"silver\"** class=\"color-option color-option--silver\"></li>\n    <li cdkOption=\"pink\" **cdkOptionTypeaheadLabel****=****\"pink\"** class=\"color-option color-option--pink\"></li>\n    <li cdkOption=\"green\" **cdkOptionTypeaheadLabel****=****\"green\"** class=\"color-option color-option--green\"></li>\n    <li cdkOption=\"blue\" **cdkOptionTypeaheadLabel****=****\"blue\"** class=\"color-option color-option--blue\"></li>\n    </ul>\n    <!-- Color Options end --> \n    ```", "```js\n    npm run serve ng-cdk-menu \n    ```", "```js\n    ...\n    **import** **{** **CdkMenu****,** **CdkMenuItem****,** **CdkMenuTrigger** **}** **from****'@angular/cdk/menu'****;**\n    @Component({\n      ...\n      imports: [CommonModule, ReactiveFormsModule, CdkListboxModule **,** **CdkMenu****,** **CdkMenuItem****,** **CdkMenuTrigger**],\n      ...\n    })\n    export class ProductCardComponent {...} \n    ```", "```js\n    <article class=\"block group shadow-md bg-white relative\">\n    <button **[****cdkMenuTriggerFor****]=****\"productActions\"** class=\"...\">...</button>\n      ...\n    </article>\n    **<****ng-template** **#****productActions****>**\n    **<****ul****class****=****\"menu-popover__list\"****cdkMenu****>**\n    **<****li****cdkMenuItem****class****=****\"menu-popover__list__item\"****>**\n    **Share**\n    **</****li****>**\n    **<****li****cdkMenuItem****class****=****\"menu-popover__list__item\"****>**\n    **Manage** **&#10148;**\n    **</****li****>**\n    **<****li****cdkMenuItem****class****=****\"menu-popover__list__item\"****>**\n    **Preview**\n    **</****li****>**\n    **</****ul****>**\n    **</****ng-template****>** \n    ```", "```js\n    ...\n    **import** **{** **ConnectedPosition** **}** **from****'@angular/cdk/overlay'****;**\n    ...\n    export class ProductCardComponent {\n      ...\n      **menuPositions****:** **ConnectedPosition****[] = [**\n    **{**\n    **offsetY****:** **4****,**\n    **originX****:** **'end'****,**\n    **originY****:** **'bottom'****,**\n    **overlayX****:** **'end'****,**\n    **overlayY****:** **'top'****,**\n    **},**\n    **{**\n    **offsetY****: -****4****,**\n    **originX****:** **'end'****,**\n    **originY****:** **'top'****,**\n    **overlayX****:** **'****end'****,**\n    **overlayY****:** **'bottom'****,**\n    **},**\n    **]**\n    } \n    ```", "```js\n    <article class=\"block group shadow-md bg-white relative\">\n    <button **[****cdkMenuPosition****]=****\"menuPositions\"**\n     [cdkMenuTriggerFor]=\"productActions\" class=\"...\">\n    <span class=\"material-symbols-outlined\">\n          more_vert\n        </span>\n    </button>\n    </article> \n    ```", "```js\n    <article class=\"block group shadow-md bg-white\n      relative\">...</article>\n    <ng-template #productActions>\n    <ul class=\"menu-popover__list\" cdkMenu>\n    <li cdkMenuItem class=\"menu-popover__list__item\">...</li>\n    <li cdkMenuItem class=\"menu-popover__list__item\"\n      **[****cdkMenuTriggerFor****]=****\"productEditActions\"**>\n          Manage &#10148;\n    </li>\n    <li cdkMenuItem class=\"menu-\n          popover__list__item\">...</li>\n    </ul>\n    </ng-template>\n    **<****ng-template** **#****productEditActions****>**\n    **<****ul****class****=****\"menu-popover__list\"****cdkMenu****>**\n    **<****li****cdkMenuItem****class****=****\"menu-popover__list__item\"****>**\n    **Duplicate**\n    **</****li****>**\n    **<****li****cdkMenuItem****class****=****\"menu-popover__list__item\"****>**\n    **Edit**\n    **</****li****>**\n    **<****li****cdkMenuItem****class****=****\"menu-popover__list__item\"****>**\n    **Delete**\n    **</****li****>**\n    **</****ul****>**\n    **</****ng-template****>** \n    ```", "```js\n{ \n      offsetY: 4, \n      originX: 'end', \n      originY: 'bottom', \n      overlayX: 'end', \n      overlayY: 'top', \n } \n```", "```js\n{ \n      offsetY: -4, \n      originX: 'end', \n      originY: top, \n      overlayX: 'end', \n      overlayY: bottom, \n } \n```"]