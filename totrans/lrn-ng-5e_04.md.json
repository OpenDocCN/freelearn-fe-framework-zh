["```js\nexpression | pipe \n```", "```js\nexpression | pipe:param \n```", "```js\n    **import { CommonModule } from '@angular/common';**\n    import { Component, input, output } from '@angular/core';\n    import { Product } from '../product';\n    @Component({\n      selector: 'app-product-detail',\n      imports: [**CommonModule**],\n      templateUrl: './product-detail.component.html',\n      styleUrl: './product-detail.component.css'\n    }) \n    ```", "```js\n    export interface Product {\n      id: number;\n      title: string;\n      **price: number;**\n    **categories: Record<number, string>;**\n    } \n    ```", "```js\n    products: Product[] = [\n      { \n        id: 1,\n        title: 'Keyboard',\n        **price: 100,**\n    **categories: {**\n    **1: 'Computing',**\n    **2: 'Peripherals'**\n    **}**\n      },\n      {\n        id: 2,\n        title: 'Microphone',\n        **price: 35,**\n    **categories: { 3: 'Multimedia' }**\n      },\n      {\n        id: 3,\n        title: 'Web camera',\n        **price: 79,**\n    **categories: {**\n    **1: 'Computing',**\n    **3: 'Multimedia'**\n    **}**\n      },\n      {\n        id: 4,\n        title: 'Tablet',\n        **price: 500,**\n    **categories: { 4: 'Entertainment' }**\n      }\n    ]; \n    ```", "```js\n    @if (product()) {\n      <p>You selected:\n        <strong>{{product()!.title}}</strong>\n      </p>\n      **<p>{{product()!.price | currency:'EUR'}}</p>**\n      <button (click)=\"addToCart()\">Add to cart</button>\n    } \n    ```", "```js\n    <div class=\"pill-group\">\n      @for (cat of product()!.categories | keyvalue; track cat.key) {\n        <p class=\"pill\">{{cat.value | lowercase}}</p>\n      }\n    </div> \n    ```", "```js\n    .pill-group {\n      display: flex;\n      flex-direction: row;\n      align-items: start;\n      flex-wrap: wrap;\n      gap: 1.25rem;\n    }\n    .pill {\n      display: flex;\n      align-items: center;\n      --pill-accent: var(--gray-900);\n      background: color-mix(in srgb, var(--pill-accent) 5%, transparent);\n      color: var(--pill-accent);\n      padding-inline: 0.75rem;\n      padding-block: 0.375rem;\n      border-radius: 2.75rem;\n      border: 0;\n      transition: background 0.3s ease;\n      font-family: var(--inter-font);\n      font-size: 0.875rem;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 1.4rem;\n      letter-spacing: -0.00875rem;\n      text-decoration: none;\n    } \n    ```", "```js\nimport { **CurrencyPipe, KeyValuePipe, LowerCasePipe** } from '@angular/common';\nimport { Component, input, output } from '@angular/core';\nimport { Product } from '../product';\n@Component({\n  selector: 'app-product-detail',\n  imports: [**KeyValuePipe, CurrencyPipe, LowerCasePipe**],\n  templateUrl: './product-detail.component.html',\n  styleUrl: './product-detail.component.css'\n}) \n```", "```js\n@let selectedProduct = product()!; \n```", "```js\n@if (**selectedProduct**) {\n  <p>You selected:\n    <strong>{{**selectedProduct**.title}}</strong>\n  </p>\n  <p>{{**selectedProduct**.price | currency:'EUR'}}</p>\n  <div class=\"pill-group\">\n    @for (cat of **selectedProduct**.categories | keyvalue; track cat.key) {\n      <p class=\"pill\">{{cat.value | lowercase}}</p>\n    }\n  </div>  \n  <button (click)=\"addToCart()\">Add to cart</button>\n} \n```", "```js\nng generate pipe sort \n```", "```js\nimport { Pipe, PipeTransform } from '@angular/core';\n@Pipe({\n  name: 'sort'\n})\nexport class SortPipe implements PipeTransform {\n  transform(value: unknown, ...args: unknown[]): unknown {\n    return null;\n  }\n} \n```", "```js\n    import { Product } from './product'; \n    ```", "```js\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Product } from './product';\n@Pipe({\n  name: 'sort'\n})\nexport class SortPipe implements PipeTransform {\n  transform(value: Product[], ...args: unknown[]): Product[] {\n    return [];\n  }\n} \n```", "```js\ntransform(value: Product[], ...args: unknown[]): Product[] {\n  **if (value) {**\n    **return value.sort((a: Product, b: Product) => {**\n      **if (a.title < b.title) {**\n        **return -1;**\n      **} else if (b.title < a.title) {**\n        **return 1;**\n      **}**\n      **return 0;**\n    **});**\n  **}**\n  return [];\n} \n```", "```js\n    import { Component } from '@angular/core';\n    import { Product } from '../product';\n    import { ProductDetailComponent } from '../product-detail/product-detail.component';\n    **import { SortPipe } from '../sort.pipe';**\n    @Component({\n      selector: 'app-product-list',\n      imports: [ProductDetailComponent, **SortPipe**],\n      templateUrl: './product-list.component.html',\n      styleUrl: './product-list.component.css'\n    }) \n    ```", "```js\n    <ul class=\"pill-group\">\n      @for (product of products **| sort**; track product.id) {\n        <li class=\"pill\" (click)=\"selectedProduct = product\">\n          @switch (product.title) {\n            @case ('Keyboard') { ![img](img/Icon-041.png) }\n            @case ('Microphone') { ![img](img/Icon-05.png) }\n            @default { ![img](img/Icon-09.png) }\n          }\n          {{product.title}}\n        </li>\n      } @empty {\n        <p>No products found!</p>\n      }\n    </ul> \n    ```", "```js\ntransform(value: Product[], **...args: unknown[]**): Product[] {\n    if (value) {\n      return value.sort((a: Product, b: Product) => {\n        if (a.title < b.title) {\n          return -1;\n        } else if (b.title < a.title) {\n          return 1;\n        }\n        return 0;\n      });\n    }  \n    return [];\n  } \n```", "```js\n    transform(value: Product[], **args: keyof Product**): Product[] {\n        if (value) {\n          return value.sort((a: Product, b: Product) => {\n            if (a.title < b.title) {\n              return -1;\n            } else if (b.title < a.title) {\n              return 1;\n            }\n            return 0;\n          });\n        }  \n        return [];\n      } \n    ```", "```js\n    if (value) {\n      return value.sort((a: Product, b: Product) => {\n        if (a**[args]****[args]** < b) {\n          return -1;\n        } else if (b**[args]****[args]** < a) {\n          return 1;\n        }\n        return 0;\n      });\n    } \n    ```", "```js\n    transform(value: Product[], args: keyof Product **= 'title'**) \n    ```", "```js\n    @for (product of products | sort**:'price'**; track product.id) {\n      <li class=\"pill\" (click)=\"selectedProduct = product\">\n        @switch (product.title) {\n          @case ('Keyboard') {![img](img/Icon-041.png) }\n          @case ('Microphone') { ![img](img/Icon-05.png) }\n          @default { ![img](img/Icon-09.png) }\n        }\n        {{product.title}}\n      </li>\n    } \n    ```", "```js\n@Pipe({\n  name: 'sort',\n  **pure: false**\n}) \n```", "```js\nthis.products= [ \n  ...this.products,\n  {\n    id: 5,\n    title: 'Headphones',\n    price: 55,\n    categories: { 3: 'Multimedia' }\n  }\n]; \n```", "```js\nng generate directive copyright \n```", "```js\nimport { Directive } from '@angular/core';\n@Directive({\n  selector: '[appCopyright]'\n})\nexport class CopyrightDirective {\n  constructor() { }\n} \n```", "```js\n    .copyright {\n      font-family: \"Inter\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n        Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\",\n        \"Segoe UI Symbol\";\n        width: 100%;\n        min-height: 100%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        padding: 1rem;\n        box-sizing: inherit;\n        position: relative;\n    } \n    ```", "```js\n    import { Directive, **ElementRef** } from '@angular/core'; \n    ```", "```js\n    constructor(el: **ElementRef**) {\n      **const currentYear = new Date().getFullYear();**\n      **const targetEl: HTMLElement = el.nativeElement;**\n      **targetEl.classList.add('copyright');**\n      **targetEl.textContent = `Copyright Â©${currentYear} All Rights****Reserved`;** \n    } \n    ```", "```js\n    import { Component } from '@angular/core';\n    import { RouterOutlet } from '@angular/router';\n    import { ProductListComponent } from './product-list/product-list.component';\n    **import { CopyrightDirective } from './copyright.directive';**\n    @Component({\n      selector: 'app-root',\n      imports: [\n        RouterOutlet,\n        ProductListComponent,\n        **CopyrightDirective**\n      ],\n      templateUrl: './app.component.html',\n      styleUrl: './app.component.css'\n    }) \n    ```", "```js\n    <main class=\"main\">\n      <div class=\"content\">\n        <app-product-list></app-product-list>\n      </div>\n    </main>\n    **<footer appCopyright></footer>**\n    <router-outlet /> \n    ```", "```js\n    ng generate directive numeric \n    ```", "```js\n    import { Directive, **HostBinding, HostListener** } from '@angular/core'; \n    ```", "```js\n    @HostBinding('class') currentClass = ''; \n    ```", "```js\n    @HostListener('keypress', ['$event']) onKeyPress(event: KeyboardEvent) {\n      const charCode = event.key.charCodeAt(0);\n      if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n        this.currentClass = 'invalid';\n        event.preventDefault();\n      } else {\n        this.currentClass = 'valid';\n      }\n    } \n    ```", "```js\n    input.valid {\n      border: solid green;\n    }\n    input.invalid {\n      border: solid red;\n    } \n    ```", "```js\n<input appNumeric /> \n```"]