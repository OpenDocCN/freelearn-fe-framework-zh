["```js\nFeature: Pizza Ordering\n  Scenario: Customer orders a single pizza\n    Given I'm on the PizzaShop website\n    When I select the \"Order Pizza\" button\n    And I choose a \"Margherita\" pizza\n    And I add it to the cart\n    Then the cart should contain 1 \"Margherita\" pizza\n  Scenario: Customer removes a pizza from the cart\n    Given I'm on the PizzaShop website\n    And the cart contains 1 \"Margherita\" pizza\n    When I remove the \"Margherita\" pizza from the cart\n    Then the cart should be empty\n```", "```js\nimport React from 'react';\nimport {render, screen} from '@testing-library/react';\ndescribe('Code Oven Application', () => {\n  it('renders application heading', () => {\n    render(<PizzaShopApp />);\n    const heading = screen.getByText('The Code Oven');\n    expect(heading).toBeInTheDocument();\n  });\n});\n```", "```js\nnpm run test src/ch7\n```", "```js\nimport React from 'react';\nimport {render, screen} from '@testing-library/react';\nfunction PizzaShopApp() {\n  return <>The Code Oven</>;\n}\ndescribe(\"Code Oven Application\", () => {\n  it(\"renders application heading\", () => {\n    render(<PizzaShopApp />);\n    const heading = screen.getByText(\"The Code Oven\");\n    expect(heading).toBeInTheDocument();\n  });\n});\n```", "```js\nimport React from \"react\";\nexport function PizzaShopApp() {\n  return <>The Code Oven</>;\n}\n```", "```js\nit(\"renders menu list\", () => {\n  render(<PizzaShopApp />);\n  const menuList = screen.getByRole('list');\n  const menuItems = within(menuList).getAllByRole('listitem');\n  expect(menuItems.length).toEqual(8);\n});\n```", "```js\nimport React from \"react\";\nexport function PizzaShopApp() {\n  return <>\n    <h1>The Code Oven</h1>\n    <ol>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n    </ol>\n  </>;\n}\n```", "```js\nimport React from \"react\";\nexport function PizzaShopApp() {\n  return <>\n    <h1>The Code Oven</h1>\n    <ol>\n      {new Array(8).fill(0).map(x => <li></li>)}\n    </ol>\n  </>;\n}\n```", "```js\nit(\"renders menu list\", () => {\n  render(<PizzaShopApp />);\n  const menuList = screen.getByRole('list');\n  const menuItems = within(menuList).getAllByRole('listitem');\n  expect(menuItems.length).toEqual(8);\n  expect(within(menuItems[0]).getByText('Margherita Pizza')).\n   toBeInTheDocument();\n  expect(within(menuItems[1]).getByText('Pepperoni Pizza')).\n   toBeInTheDocument();\n  expect(within(menuItems[2]).getByText('Veggie Supreme Pizza')).\n   toBeInTheDocument();\n  //...\n});\n```", "```js\nconst pizzas = [\n  \"Margherita Pizza\",\n  \"Pepperoni Pizza\",\n  \"Veggie Supreme Pizza\",\n  \"Chicken BBQ Pizza\",\n  \"Spicy Meat Feast Pizza\",\n  \"Pasta Primavera\",\n  \"Caesar Salad\",\n  \"Chocolate Lava Cake\"\n];\nexport function PizzaShopApp() {\n  return <>\n    <h1>The Code Oven</h1>\n    <ol>\n      {pizzas.map((x) => <li>{x}</li>)}\n    </ol>\n  </>;\n}\n```", "```js\nit('renders a shopping cart', () => {\n  render(<PizzaShopApp />);\n  const shoppingCartContainer = screen.getByTestId('shopping-cart');\n  const placeOrderButton = within(shoppingCartContainer).\n  getByRole('button');\n  expect(placeOrderButton).toBeInTheDocument();\n})\n```", "```js\nexport function PizzaShopApp() {\n  return <>\n    <h1>The Code Oven</h1>\n    <ol>\n      {pizzas.map((x) => <li>{x}</li>)}\n    </ol>\n    <div data-testid=\"shopping-cart\">\n      <button></button>\n    </div>\n  </>;\n}\n```", "```js\nit('renders a shopping cart', () => {\n  render(<PizzaShopApp />);\n  const shoppingCartContainer = screen.getByTestId('shopping-cart');\n  const placeOrderButton = within(shoppingCartContainer).\n   getByRole('button');\n  expect(placeOrderButton).toBeInTheDocument();\n  expect(placeOrderButton).toHaveTextContent('Place My Order');\n  expect(placeOrderButton).toBeDisabled();\n})\n```", "```js\nexport function PizzaShopApp() {\n  return <>\n    <h1>The Code Oven</h1>\n    <ol>\n      {pizzas.map((x) => <li>{x}</li>)}\n    </ol>\n    <div data-testid=\"shopping-cart\">\n      <button disabled>Place My Order</button>\n    </div>\n  </>;\n}\n```", "```js\nit('adds menu item to shopping cart', () => {\n  render(<PizzaShopApp />);\n  const menuList = screen.getByRole('list');\n  const menuItems = within(menuList).getAllByRole('listitem');\n  const addButton = within(menuItems[0]).getByRole('button');\n  userEvent.click(addButton);\n  const shoppingCartContainer = screen.getByTestId('shopping-cart');\n  const placeOrderButton = within(shoppingCartContainer).\n   getByRole('button');\n  expect(within(shoppingCartContainer).getByText('Margherita Pizza')).\n   toBeInTheDocument();\n  expect(placeOrderButton).toBeEnabled();\n})\n```", "```js\nexport function PizzaShopApp() {\n  const [cartItems, setCartItems] = useState<string[]>([]);\n  const addItem = (item: string) => {\n    setCartItems([...cartItems, item]);\n  }\n  return <>\n    <h1>The Code Oven</h1>\n    <ol>\n      {pizzas.map((x) => <li>\n        {x}\n        <button onClick={() => addItem(x)}>Add</button>\n      </li>)}\n    </ol>\n    <div data-testid=\"shopping-cart\">\n      <ol>\n        {cartItems.map(x => <li>{x}</li>)}\n      </ol>\n      <button disabled=>Place My Order</button>\n    </div>\n  </>;\n}\n```", "```js\n<div data-testid=\"menu-list\">\n  <ol>\n    {pizzas.map((x) => <li>\n      {x}\n      <button onClick={() => addItem(x)}>Add</button>\n    </li>)}\n  </ol>\n</div>\n```", "```js\nit('adds menu item to shopping cart', () => {\n  render(<PizzaShopApp />);\n  const menuItems = within(screen.getByTestId('menu-list')).\n   getAllByRole('listitem');\n  const addButton = within(menuItems[0]).getByRole('button');\n  userEvent.click(addButton);\n  const shoppingCartContainer = screen.getByTestId('shopping-cart');\n  const placeOrderButton = within(shoppingCartContainer).\n   getByRole('button');\n  expect(within(shoppingCartContainer).getByText('Margherita Pizza')).\n   toBeInTheDocument();\n  expect(placeOrderButton).toBeEnabled();\n})\n```", "```js\nit('adds menu item to shopping cart',  async () => {\n  render(<PizzaShopApp />);\n  const menuItems = within(screen.getByTestId('menu-list')).getAllByRole('listitem');\n  const addButton = within(menuItems[0]).getByRole('button');\n  await userEvent.click(addButton);\n  const shoppingCartContainer = screen.getByTestId('shopping-cart');\n  const placeOrderButton = within(shoppingCartContainer)\n   .getByRole('button');\n  expect(within(shoppingCartContainer).getByText('Margherita Pizza')).\n   toBeInTheDocument();\n  expect(placeOrderButton).toBeEnabled();\n})\n```", "```js\nexport function PizzaShopApp() {\n  const [cartItems, setCartItems] = useState<string[]>([]);\n  const addItem = (item: string) => {\n    setCartItems([...cartItems, item]);\n  }\n  return <>\n    <h1>The Code Oven</h1>\n    <div data-testid=\"menu-list\">\n      <ol>\n        {pizzas.map((x) => <li>\n          {x}\n          <button onClick={() => addItem(x)}>Add</button>\n        </li>)}\n      </ol>\n    </div>\n    <div data-testid=\"shopping-cart\">\n      <ol>\n        {cartItems.map(x => <li>{x}</li>)}\n      </ol>\n      <button disabled={cartItems.length === 0}>Place My Order\n       </button>\n    </div>\n  </>;\n}\n```", "```js\nexport function PizzaShopApp() {\n  const [cartItems, setCartItems] = useState<string[]>([]);\n  const addItem = (item: string) => {\n    setCartItems([...cartItems, item]);\n  }\n  return <>\n    <h1>The Code Oven</h1>\n    <div data-testid=\"menu-list\">\n      <ol>\n        {pizzas.map((item) => <li key={item}>\n          {item}\n          <button onClick={() => addItem(item)}>Add</button>\n        </li>)}\n      </ol>\n    </div>\n    <div data-testid=\"shopping-cart\">\n      <ol>\n        {cartItems.map(item => <li key={item}>{item}</li>)}\n      </ol>\n      <button disabled={cartItems.length === 0}>Place My Order\n       </button>\n    </div>\n  </>;\n}\n```", "```js\nconst MenuList = ({\n  onAddMenuItem,\n}: {\n  onAddMenuItem: (item: string) => void;\n}) => {\n  return (\n    <div data-testid=\"menu-list\">\n      <ol>\n        {pizzas.map((item) => (\n          <li key={item}>\n            {item}\n            <button onClick={() => onAddMenuItem(item)}>Add</button>\n          </li>\n        ))}\n      </ol>\n    </div>\n  );\n};\n```", "```js\nconst ShoppingCart = ({ cartItems }: { cartItems: string[] }) => {\n  return (\n    <div data-testid=\"shopping-cart\">\n      <ol>\n        {cartItems.map((item) => (\n          <li key={item}>{item}</li>\n        ))}\n      </ol>\n      <button disabled={cartItems.length === 0}>Place My Order\n       </button>\n    </div>\n  );\n};\n```", "```js\nexport function PizzaShopApp() {\n  const [cartItems, setCartItems] = useState<string[]>([]);\n  const addItem = (item: string) => {\n    setCartItems([...cartItems, item]);\n  };\n  return (\n    <>\n      <h1>The Code Oven</h1>\n      <MenuList onAddMenuItem={addItem} />\n      <ShoppingCart cartItems={cartItems} />\n    </>\n  );\n}\n```"]