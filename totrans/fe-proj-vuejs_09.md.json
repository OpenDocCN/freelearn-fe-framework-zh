["```js\n<script src=\"img/vue.js\"></script>\n<script src=\"img/vuex.js\"></script>\n```", "```js\n<script src=\"img/vue\"></script>\n<script src=\"img/vuex\"></script>\n```", "```js\nimport Vue from 'vue'\nimport Vuex from 'vuex'\nVue.use(Vuex)\nexport default new Vuex.Store({\n  state: {\n  },\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n```", "```js\nimport Vue from 'vue'\nimport App from './App.vue'\nimport store from './store'\nVue.config.productionTip = false\nnew Vue({\n  store,\n  render: h => h(App)\n}).$mount('#app')\n```", "```js\n    import Vue from 'vue'\n    import Vuex from 'vuex'\n    Vue.use(Vuex)\n    export default new Vuex.Store({\n      state: {\n        name:\"Lindy\", \n        favoriteColor: \"blue\", \n        profession: \"librarian\"\n      },\n      mutations: {\n      },\n      actions: {\n      },\n      modules: {\n      }\n    })\n    ```", "```js\n    <template>\n      <div id=\"app\">\n        <p>\n        My name is {{ $store.state.name }} and \n        my favorite color is {{ $store.state.favoriteColor }}. \n        My job is a {{ $store.state.profession }}.\n        </p>\n        <HelloWorld />\n      </div>\n    </template>\n    <script>\n    import HelloWorld from '@/components/HelloWorld';\n    export default {\n      name: 'app',\n      components:{\n        HelloWorld\n      }\n    }\n    </script>\n    ```", "```js\n    <template>\n      <div>\n        <p>\n          Hi, I'm a component, and I also have access to state! \n          My name is {{ $store.state.name }}.\n        </p>\n      </div>\n    </template>\n    <script>\n    export default {\n      name: 'HelloWorld'\n    }\n    </script>\n    ```", "```js\n    My name is Lindy and my favorite color is blue. My job is a librarian.\n    Hi, I am a component, and I also have access to state! My name is Lindy.\n    ```", "```js\nstate: {\n  name: \"Raymond\",\n  gender: \"male\",\n  job: \"Developer Evangelist\"\n},\ngetters: {\n  bio(state) {\n    return `My name is ${state.name}. I'm a ${state.job}`;\n  } \n}\n```", "```js\n{{ $store.getters.bio }}\n```", "```js\n    import Vue from 'vue'\n    import Vuex from 'vuex'\n    Vue.use(Vuex)\n    export default new Vuex.Store({\n      state: {\n        firstName: \"Lindy\",\n        lastName: \"Roberthon\"\n      },\n      getters: {\n        name(state) {\n          return `${state.firstName} ${state.lastName}`;\n        }\n      },\n      mutations: {\n      },\n      actions: {\n      },\n      modules: {\n      }\n    })\n    ```", "```js\n    <template>\n      <div id=\"app\">\n        <p>\n        My name is {{ $store.getters.name }}\n        </p>\n      </div>\n    </template>\n    ```", "```js\n    My name is Lindy Roberthon\n    ```", "```js\nimport Vue from 'vue'\nimport Vuex from 'vuex'\nVue.use(Vuex)\nexport default new Vuex.Store({\n  state: {\n    books:[\n      {type:'nonfiction', title:'Truth about Cats', pages: 200},\n      {type:'nonfiction', title:'Truth about Dogs', pages: 100},\n      {type:'fiction', title:'The Cat Said Meow', pages: 400},\n      {type:'fiction', title:'The Last Dog', pages: 600},\n    ]\n  },\n  getters: {\n    fiction(state) {\n      return state.books.filter(book => book.type === 'fiction');\n    },\n    nonfiction(state) {\n      return state.books.filter(book => book.type ===         'nonfiction');\n    }\n  },\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n```", "```js\n<h2>Fiction Books</h2>\n<ul>\n  <li v-for=\"book in $store.getters.fiction\" :key=\"book.title\">\n  {{ book.title }}\n  </li>\n</ul>\n<h2>Non-Fiction Books</h2>\n<ul>\n    <li v-for=\"book in $store.getters.nonfiction\" :key=      \"book.title\">\n    {{ book.title }}\n    </li>\n</ul>\n```", "```js\nshortName(state) {\n  return function(length) {\n    return ('${state.firstName} ${state.lastName}').      substring(0, length);\n  }\n}\n```", "```js\n    import Vue from 'vue'\n    import Vuex from 'vuex'\n    Vue.use(Vuex)\n    export default new Vuex.Store({\n      state: {\n        books:[\n          {type:'nonfiction', title:'Truth about Cats', pages: 200},\n          {type:'nonfiction', title:'Truth about Dogs', pages: 100},\n          {type:'fiction', title:'The Cat Said Meow', pages: 400},\n          {type:'fiction', title:'The Last Dog', pages: 600},\n        ]\n      },\n      getters: {\n        fiction(state) {\n          return state.books.filter(book => book.type === 'fiction');\n        },\n        nonfiction(state) {\n          return state.books.filter(book => book.type ===         'nonfiction');\n        },\n        booksByMaxPages(state) {\n          return function(pages) {\n            return state.books.filter(book => book.pages <= pages);\n          }\n        }\n      }\n    })\n    ```", "```js\n    <template>\n      <div id=\"app\">\n        <h2>Fiction Books</h2>\n        <ul>\n          <li v-for=\"book in $store.getters.fiction\" :key=        \"book.title\">\n            {{ book.title }}\n          </li>\n        </ul>\n        <h2>Non-Fiction Books</h2>\n        <ul>\n          <li v-for=\"book in $store.getters.nonfiction\" :key=        \"book.title\">\n            {{ book.title }}\n          </li>\n        </ul>\n        <h2>Short Books</h2>\n        <ul>\n          <li v-for=\"book in $store.getters.booksByMaxPages(150)\"         :key=\"book.title\">\n            {{ book.title }}\n          </li>\n        </ul>\n      </div>\n    </template>\n    <script>\n    export default {\n      name: 'app'\n    }\n    </script>\n    ```", "```js\nstate: {\n  totalCats: 5,\n  name:'Lindy'\n},\nmutations: {\n  newCat(state) {\n    state.totalCats++;\n  },\n  setName(state, name) {\n   state.name = name;\n  }\n}\n```", "```js\n$store.commit('newCat');\n$store.commit('setName', 'Raymond');\n```", "```js\n    import Vue from 'vue'\n    import Vuex from 'vuex'\n    Vue.use(Vuex)\n    export default new Vuex.Store({\n      state: {\n        totalCats:5, \n        name: \"Lindy\"\n      },\n      mutations: {\n        adoptCat(state) {\n          state.totalCats++;\n        },\n        placeCat(state) {\n          if(state.totalCats > 0) state.totalCats--;\n        },\n        setName(state, name) {\n          state.name = name;\n        }\n      }\n    })\n    ```", "```js\n    <template>\n      <div id=\"app\">\n        <h1>About Me</h1>\n        <p>\n          My name is {{ $store.state.name }} and \n          I have {{ $store.state.totalCats }} cats.\n        </p>\n        <p>\n          <input v-model=\"newName\">\n          <button @click=\"setName\" :disabled=\"!newName\">Update Name         </button>\n        </p>\n        <Cat/>\n      </div>\n    </template>\n    <script>\n    import Cat from './components/Cat.vue'\n    export default {\n      name: 'app',\n      components: {\n        Cat\n      },\n      data() {\n        return {\n          newName:''\n        }\n      },\n      methods: {\n        setName() {\n          if(this.newName) {\n            this.$store.commit('setName', this.newName);\n            this.newName = '';\n          }\n        }\n      }\n    }\n    </script>\n    ```", "```js\n    <template>\n      <div>\n        <button @click=\"addCat\">More Cats!</button>\n        <button @click=\"removeCat\">Less Cats :(</button>\n      </div>\n    </template>\n    <script>\n    export default {\n      name: 'Cat',\n      methods: {\n        addCat() {\n          this.$store.commit('adoptCat');\n        },\n       removeCat() {\n          this.$store.commit('placeCat');\n        }\n      }\n    }\n    </script>\n    ```", "```js\n  mutations: {\n    setBooks(state, books) {\n      state.books = books;\n    }\n  },\n  actions: {\n    loadBooks(context) {\n      fetch('/data/books.json')\n      .then(res => res.json())\n      .then(res => {\n        context.commit('setBooks', res);\n      });\n    }\n  },\n```", "```js\nthis.$store.dispatch('loadBooks');\n```", "```js\n    [\n        {\n            \"type\": \"nonfiction\",\n            \"title\": \"Truth about Cats\",\n            \"pages\": 200\n        }, \n         {\n            \"type\": \"nonfiction\",\n            \"title\": \"Truth about Dogs\",\n            \"pages\": 100\n        },\n        {\n            \"type\": \"fiction\",\n            \"title\": \"The Cat Said Meow\",\n            \"pages\": 400\n        },\n        {\n            \"type\": \"fiction\",\n            \"title\": \"The Last Dog\",\n            \"pages\": 600\n        }\n    ]\n    ```", "```js\n    import Vue from 'vue'\n    import Vuex from 'vuex'\n    Vue.use(Vuex)\n    export default new Vuex.Store({\n      state: {\n        books:[]\n      },\n      mutations: {\n        setBooks(state, books) {\n          state.books = books;\n        }\n      },\n      actions: {\n        loadBooks(context) {\n          fetch('/data/books.json')\n          .then(res => res.json())\n          .then(res => {\n            context.commit('setBooks', res);\n          });\n        }\n      }\n    })\n    ```", "```js\n    <template>\n      <div id=\"app\">\n        Books\n        <ul>\n          <li v-for=\"book in $store.state.books\" :key=\"book.title\">        {{ book.title }}</li>\n        </ul>\n      </div>\n    </template>\n    <script>\n    export default {\n      name: 'app',\n      created() {\n        this.$store.dispatch('loadBooks');\n      }\n    }\n    </script>\n    ```", "```js\nmapState([\"age\", \"rank\", \"serialNumber\"]);\nmapGetters([\"name\", \"fiction\", \"nonfiction\"]);\n```", "```js\nmapState({\n    howOld:\"age\",\n    level:\"rank\",\n    sn:\"serialNumber\"\n});\nmapGetters({\n    ourName:\"name\", \n    fictionBooks:\"fictionBooks\",\n    nonfictionBooks: \"nonfictionBooks\"\n});\n```", "```js\nimport { mapState, mapGetters } from 'vuex';\n```", "```js\n    import Vue from 'vue'\n    import Vuex from 'vuex'\n    Vue.use(Vuex)\n    export default new Vuex.Store({\n      state: {\n        firstName: \"Lindy\",\n        lastName: \"Roberthon\"\n      },\n      getters: {\n        name(state) {\n          return `${state.firstName} ${state.lastName}`;\n        }\n      }\n    })\n    ```", "```js\n    <template>\n      <div id=\"app\">\n        <p>\n        My name is {{ firstName }} {{ lastName}}, or just {{ name }}.\n        </p>\n      </div>\n    </template>\n    <script>\n    import { mapGetters } from 'vuex';\n    import { mapState } from 'vuex';\n    export default {\n      name: 'app',\n      computed: {\n        ...mapState([ \"firstName\", \"lastName\" ]),\n        ...mapGetters([\n          \"name\"\n        ])\n      }\n    }\n    </script>\n    ```", "```js\n    My name is Lindy Roberthon, or just Lindy Roberthon.\n    ```", "```js\nmapMutations([\"setBooks\"]);\nmapActions([\"loadBooks\"]);\n```", "```js\nmethods:{\n    ...mapMutations([\"setBooks\"]),\n    ...mapActions([\"loadBooks\"])\n}\n```"]