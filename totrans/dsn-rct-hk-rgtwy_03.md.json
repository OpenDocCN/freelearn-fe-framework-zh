["```js\nlet states = {}\nfunction _getM2(initialValue, key) {\n  if (states[key] === undefined) {\n    states[key] = initialValue\n  } \n  return states[key]\n}\nfunction _setM2(v, key) {\n  states[key] = v\n  ReactDOM.render(<Title />, rootEl)\n}\n```", "```js\nlet states = {}\n```", "```js\nconst a = _getM2(0, 'comp_a')\n```", "```js\nReactDOM.render(<Title />, rootEl)\n```", "```js\nlet updatingFiber = ...\nfunction updateFunctionComponent(Component, props) {\n  prevHook = null\n  let children = Component(props)\n  ...\n}\n```", "```js\nfunction mountHook() {\n  const Hook = {\n    state: null\n    next: null\n  }  \n  if (prevHook === null) { \n    updatingFiber.memoizedState = Hook\n    prevHook = Hook\n  } else {\n    prevHook.next = Hook\n    prevHook = prevHook.next     \n  }\n  return Hook\n}\n```", "```js\nfunction updateHook() {\n  var Hook\n  if (prevHook === null) {\n    Hook = updatingFiber.memoizedState\n  } else {\n    Hook = prevHook.next\n  }  \n  prevHook = Hook\n  return Hook\n}\n```", "```js\nfunction _useHook(initialState) {\n  let Hook\n  if (isFiberMounting) {\n    Hook = mountHook()\n    Hook.state = initialState\n  } else {\n    Hook = updateHook()\n  }  \n  return Hook.state\n}\n```", "```js\nconst Title = () => {\n  const a = _useHook(0)\n}\n```", "```js\nconst Title = () => {\n  const a = useHook()\n  const b = useHook(1)\n  const c = useHook(1, 2, \"Hello\")\n  const d = useHook({ text: \"Hello World\"})\n}\n```", "```js\nconst Title = () => {\n  useHook(...)\n  const i = useHook(...)\n  const [j, k] = useHook(...)\n  const { value } = useHook(...)\n}\n```", "```js\nconst Title = ({ text }) => {\n  const i = useHook(...)\n  const j = useHook(i)\n  const k = useHook(i, j, text)\n}\n```", "```js\nconst Title = () => {\n  const a = _useHook(0)\n  const b = _useHook(\"Hello\")\n}\n```", "```js\n  const a = _useHook(0)\n```", "```js\n  const b = _useHook(\"Hello\")\n```", "```js\nconst Title = ({ flag }) => {\n  const a = flag ? _useHook('a') : ' '\n  const b = _useHook('b')\n  return <h1>Hello World+{a}{b}</h1>\n}\n```", "```js\n|T-------F---------------> flag\n|a------- ---------------> a\n|b-------a---------------> b\n```", "```js\n|T-------F---------------> flag\n|a-------a---------------> Hook1\n|b-------b---------------> Hook2\n```", "```js\nconst Title = () => {\n  const a = ' '\n  const b = _useHook('b')\n  return <h1>Hello World+{a}{b}</h1>\n}\n```", "```js\n|F-------T---------------> flag\n| -------b---------------> a\n|b-------b---------------> b\n|b-------b---------------> Hook1\n|~-------b---------------> Hook2\n```", "```js\nconst Title = ({ arr }) => {\n  const names = arr.map(v => _useHook(v))\n  return <div>{names.join('')}</div>\n}\n```", "```js\nconst Title = ({ flag }) => {\n  const _a = _useHook('a')\n  const b = _useHook('b')\n  const a = flag ? _a : ' '\n  return <h1>Hello World+{a}{b}</h1>\n}\n```", "```js\n|T-------F---------------> flag\n|a-------a---------------> Hook1\n|b-------b---------------> Hook2\n|a------- ---------------> a\n|b-------b---------------> b\n```", "```js\n|F-------T---------------> flag\n|a-------a---------------> Hook1\n|b-------b---------------> Hook2\n| -------a---------------> a\n|b-------b---------------> b\n```", "```js\nconst Title = ({ arr }) => {\n  const t = _useHook(arr)\n  const names = t.map((v, i) => t[i] || '')\n  return <div>{names.join('')}</div>\n}\n```", "```js\nconst isFiberMounting = current === null\n```"]