["```js\nvar Page = function(content) {\n    this.content = content;\n};\n\nPage.prototype.render = function() {\n    return \"<div>\" + this.content + \"</div>\";\n}\n\nvar Post = function(tags, content) {\n    this.tags = tags;\n\n    Page.call(this, content);\n};\n\nPost.prototype = new Page();\n\nPost.prototype.render = function() {\n    var page = Page.prototype.render.call(this);\n\n    return \"<ul>\" + this.renderTags() + \"</ul>\" + page;\n};\n\nPost.prototype.renderTags = function() {\n    return \"<li>\" + this.tags.join(\"</li></li>\") + \"</li>\";\n};\n\nvar page = new Page(\"Welcome to my site!\");\nvar post = new Post([\"news\"], \"A new product!\");\n\nPage.prototype.render = function() {\n    return \"<section>\" + this.content + \"</section>\";\n};\n```", "```js\nclass Page {\n    constructor(content) {\n        this.content = content;\n    }\n\n    render() {\n        return \"<div>\" + this.content + \"</div>\";\n    }\n}\n\nclass Post extends Page {\n    constructor(tags, content) {\n        super(content);\n        this.tags = tags;\n    }\n\n    render() {\n        var page = super.render();\n\n        return \"<ul>\" + this.renderTags() + \"</ul>\" + page;\n    }\n\n    renderTags() {\n        return \"<li>\" + this.tags.join(\"</li></li>\") + \"</li>\";\n    }\n}\n\nvar page = new Page(\"Welcome to my site!\");\nvar post = new Post([\"news\"], \"A new product!\");\n```", "```js\nvar Page = React.createClass({\n    render: function() {\n        return <div>{this.props.content}</div>;\n    }\n});\n\nvar Post = React.createClass({\n    render: function() {\n        var page = <Page content={this.props.content} />\n        var tags = this.renderTags();\n\n        return <div><ul>{tags}</ul>{page}</div>;\n    },\n    renderTags: function() {\n        return this.props.tags.map(function(tag, i) {\n            return <li key={i}>{tag}</li>;\n        });\n    }\n});\n\nReactDOM.render(\n    <Post tags={[\"news\"]} content=\"A new product!\" />,\n    document.querySelector(\".react\")\n);\n```", "```js\nclass Page extends React.Component {\n    render() {\n        return <div>{this.props.content}</div>;\n    }\n}\n\nclass Post extends Page {\n    render() {\n        var page = super.render();\n        var tags = this.renderTags();\n\n        return <div><ul>{tags}</ul>{page}</div>;\n    }\n\n    renderTags() {\n        return this.props.tags.map(function(tag, i) {\n            return <li key={i}>{tag}</li>;\n        });\n    }\n}\n```", "```js\n$ npm init\n$ npm install --save browserify babelify\n$ npm install --save react react-dom\n\n```", "```js\nimport React from \"react\";\n\nexport default class Page extends React.Component {\n    render() {\n        return <div>{this.props.content}</div>;\n    }\n}\n```", "```js\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Page from \"./page\";\n\nReactDOM.render(\n    <Page content=\"Welcome to my site!\" />,\n    document.querySelector(\".react\")\n);\n```", "```js\n<!doctype html>\n<html lang=\"en\">\n    <body>\n        <div class=\"react\"></div>\n    </body>\n    <script src=\"img/main.dist.js\"></script>\n</html>\n```", "```js\n$ alias browserify=node_modules/.bin/browserify\n$ browserify -t babelify main.js -o main.dist.js\n```", "```js\nbrowserify main.js -t babelify -x react -x react-dom --outfile main.dist.js\n\n```", "```js\n$ npm install --save babel-core\n$ npm install --save systemjs\n\n```", "```js\n<!DOCTYPE html>\n<html>\n    <head>\n        <script src=\"img/browser.js\"></script>\n        <script src=\"img/system.js\"></script>\n    </head>\n    <body>\n        <div class=\"react\"></div>\n        <script>\n            System.config({\n                \"transpiler\": \"babel\",\n                \"map\": {\n                    \"react\": \"/examples/react/react\",\n                    \"react-dom\": \"/examples/react/react-dom\",\n                    \"page\": \"/src/page\"\n                },\n                \"defaultJSExtensions\": true\n            });\n\n            System.import(\"main\");\n        </script>\n    </body>\n</html>\n```", "```js\n\"scripts\": {\n    \"bundle\": \"browserify -t babelify main.js -o main.dist.js\",\n    \"minify\": \"...\"\n}\n```", "```js\n$ npm install -g grunt-cli\n\n```", "```js\n$ npm install --save-dev grunt\n$ npm install --save-dev grunt-browserify\n$ npm install --save-dev grunt-contrib-uglify\n$ npm install --save-dev grunt-contrib-watch\n\n```", "```js\nmodule.exports = function(grunt) {\n    grunt.initConfig({\n        \"browserify\": {\n            \"main.js\": [\"main.es5.js\"],\n            \"options\": {\n                \"transform\": [\n                    \"babelify\"\n                ],\n                \"external\": [\n                    \"react\", \"react-dom\"\n                ]\n            }\n        },\n        \"uglify\": {\n            \"main.es5.js\": [\"main.dist.js\"]\n        },\n        \"watch\": {\n            \"files\": [\"main.js\"],\n            \"tasks\": [\"browserify\", \"uglify\"]\n        }\n    });\n\n    grunt.loadNpmTasks(\"grunt-browserify\");\n    grunt.loadNpmTasks(\"grunt-contrib-uglify\");\n    grunt.loadNpmTasks(\"grunt-contrib-watch\");\n\n    grunt.registerTask(\"default\", [\"browserify\", \"uglify\"]);\n};\n```", "```js\n$ grunt\n$ grunt browserify\n$ grunt uglify\n$ grunt watch\n\n```"]