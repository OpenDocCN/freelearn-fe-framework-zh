- en: Chapter 7. Configurations
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章。配置
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下内容：
- en: Configuring the active classes
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置活动类
- en: Configuring `ajaxEnabled`
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置`ajaxEnabled`
- en: Configuring `autoInitializePage`
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置`autoInitializePage`
- en: Configuring the default transitions
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置默认转换
- en: Configuring `ignoreContentEnabled`
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置`ignoreContentEnabled`
- en: Configuring the page loading and error messages
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置页面加载和错误消息
- en: Configuring the default namespace
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置默认命名空间
- en: Configuring `hashListeningEnabled` and `subPageUrlKey`
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置`hashListeningEnabled`和`subPageUrlKey`
- en: Configuring `pushStateEnabled` and `linkBindingEnabled`
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置`pushStateEnabled`和`linkBindingEnabled`
- en: Introduction
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: The jQuery Mobile framework enhances the markup and elements in a document as
    soon as the document is loaded. You can tweak the default configurations used
    for these enhancements by setting their values in the `mobileinit` event handler,
    which gets fired at startup on the document object. This chapter shows you how
    to use the various configurations available in the framework.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery Mobile框架会在文档加载后立即增强标记和元素。您可以通过在文档对象上设置`mobileinit`事件处理程序中的值来调整用于这些增强的默认配置。本章向您展示了如何使用框架中提供的各种配置。
- en: Configuring the active classes
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置活动类
- en: The jQuery Mobile framework uses the CSS class `activeBtnClass` to style a button
    in an active state with theme `b` by default. The `activeBtnClass` class has a
    default string value `ui-btn-active`. To style the active page (the page in view
    or in transition), the framework uses the CSS class `activePageClass`, which has
    a default string value `ui`-`page-active`. This recipe shows you how to configure
    the framework to use custom classes instead of these default classes.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery Mobile框架默认使用CSS类`activeBtnClass`来为主题为`b`的活动状态的按钮设置样式。`activeBtnClass`类具有默认字符串值`ui-btn-active`。为了为活动页面（正在查看或正在过渡的页面）设置样式，框架使用CSS类`activePageClass`，该类具有默认字符串值`ui-page-active`。本配方向您展示如何配置框架以使用这些默认类的自定义类。
- en: Getting ready
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'Copy the full code of this recipe from the `code/07/active-class` sources folder.
    You can launch this code using the URL: `http://localhost:8080/07/active-class/main.html`.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 从`code/07/active-class`源文件夹中复制此配方的完整代码。您可以使用以下网址启动此代码：`http://localhost:8080/07/active-class/main.html`。
- en: How to do it...
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何实现...
- en: 'In `main.html`, add the following style to the `<head>` tag of the page to
    define your own custom active button class and active page class:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`main.html`中，将以下样式添加到页面的`<head>`标签中，以定义自定义的活动按钮类和活动页面类：
- en: '[PRE0]'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Add the following script before including the jQuery Mobile script:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在包含jQuery Mobile脚本之前添加以下脚本：
- en: '[PRE1]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Create the #`main` page with a link to open #`page1` as follows:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建带有链接以打开`#page1`的`#main`页面，如下所示：
- en: '[PRE2]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Create #`page1` with a link to go back to the #`main` page as follows; this
    is a multi-page document:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`#page1`，并添加一个链接以返回到`#main`页面，如下所示；这是一个多页文档：
- en: '[PRE3]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: How it works...
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'In `main.html`, add a style tag and define the class `ui-custom-btn-active`
    to set a different gradient background (green shade) on the active button. The
    default active button background is a bright blue shade. Also add a `ui-custom-page-active`
    class that sets a `3px` thick-dotted border for the page. Next, add the given
    script in the code before including the reference to `jquery.mobile.js`. In the
    script, add an event handler for the `mobileinit` event that gets triggered at
    the start of the app. Here, set the `$.mobile.activePageClass` and `$.mobile.activeBtnClass`
    properties to the two new classes. Finally, add the `#main` and `#page1` page
    containers. When you launch the app, the `#main` page is now displayed with a
    dotted border as shown in the following screenshot:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在`main.html`中，添加一个样式标签并定义类`ui-custom-btn-active`，以在活动按钮上设置不同的渐变背景（绿色阴影）。默认的活动按钮背景是明亮的蓝色阴影。还添加一个`ui-custom-page-active`类，该类为页面设置`3px`厚的虚线边框。接下来，在包含对`jquery.mobile.js`引用之前，添加给定的脚本。在脚本中，为`mobileinit`事件添加一个事件处理程序，该事件在应用程序启动时触发。在这里，将`$.mobile.activePageClass`和`$.mobile.activeBtnClass`属性设置为这两个新类。最后，添加`#main`和`#page1`页面容器。当您启动应用程序时，`#main`页面现在将显示为带有虚线边框，如下面的屏幕截图所示：
- en: '![How it works...](img/7225_07_1.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理...](img/7225_07_1.jpg)'
- en: 'When you click on the **Open Page 1** button, the active state of the button
    shows the green shade when pressed, as shown in the following screenshot:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 当您点击**打开页面 1**按钮时，按钮的活动状态在按下时显示绿色阴影，如下面的屏幕截图所示：
- en: '![How it works...](img/7225_07_2.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理...](img/7225_07_2.jpg)'
- en: 'Next, the page `#page1` opens and it too has the dotted border:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，页面 `#page1` 打开，它也有虚线边框：
- en: '![How it works...](img/7225_07_3.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![如何运作...](img/7225_07_3.jpg)'
- en: 'The **Go Back** button also gets a green shade when you click on it:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 单击时，**返回**按钮也会变成绿色：
- en: '![How it works...](img/7225_07_4.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![如何运作...](img/7225_07_4.jpg)'
- en: There's more...
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: You can customize and configure the default settings for the jQuery Mobile framework
    using the `mobileinit` event handler. You have to add this custom script before
    the `jquery.mobile.js` script is included to ensure that the framework gets initialized
    with your settings.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 `mobileinit` 事件处理程序来自定义和配置 jQuery Mobile 框架的默认设置。你必须在包含 `jquery.mobile.js`
    脚本之前添加此自定义脚本，以确保框架使用你的设置进行初始化。
- en: Using the jQuery .extend() call
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 jQuery 的 `.extend()` 调用
- en: 'Instead of setting the property directly on `$.mobile`, you can also use the
    `.extend()` jQuery call to extend the `$.mobile` object, as follows:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用 `.extend()` jQuery 调用来扩展 `$.mobile` 对象，而不是直接在 `$.mobile` 上设置属性，如下所示：
- en: '[PRE4]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: See also
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[Chapter 2](ch02.html "Chapter 2. Pages and Dialogs"), *Pages and Dialogs*,
    *Using CSS to create a bouncing page transition*: This recipe provides and overview
    of vendor prefixes'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第二章](ch02.html "第二章。页面和对话框"), *页面和对话框*, *使用 CSS 创建弹跳页面转换*：此教程提供了供应商前缀的概述'
- en: Configuring ajaxEnabled
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 ajaxEnabled
- en: Whenever possible, the jQuery Mobile framework automatically uses Ajax for handling
    link clicks and form submissions. This can be configured using the `$.mobile.ajaxEnabled`
    property, which has a Boolean value of `true` by default. If Ajax is disabled
    or if its not supported, then an ordinary HTTP request is used and a full page
    load occurs. URL hash listening is also disabled. This recipe shows you how to
    configure the `$.mobile.ajaxEnabled` property.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在可能的情况下，jQuery Mobile 框架会自动使用 Ajax 处理链接点击和表单提交。这可以使用 `$.mobile.ajaxEnabled`
    属性进行配置，默认情况下其布尔值为 `true`。如果禁用了 Ajax 或不支持它，则使用普通的 HTTP 请求并进行完整页面加载。URL 散列监听也被禁用。这个教程向你展示了如何配置
    `$.mobile.ajaxEnabled` 属性。
- en: Getting ready
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'Copy the full code of this recipe from the `code/07/ajax-enabled` sources folder.
    You can launch this code using the URL: `http://localhost:8080/07/ajax-enabled/main.html`.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 从 `code/07/ajax-enabled` 源文件夹中复制此教程的完整代码。你可以使用以下 URL 启动此代码：`http://localhost:8080/07/ajax-enabled/main.html`。
- en: How to do it...
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 怎么做...
- en: 'In `main.html`, add the following script before including `jquery.mobile.js`:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `main.html` 中，在包含 `jquery.mobile.js` 之前添加以下脚本：
- en: '[PRE5]'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Create the main page with a link to open `page1.html`:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建包含链接以打开 `page1.html` 的主页面：
- en: '[PRE6]'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Finally, create `page1.html` with a link to go back to `main.html`, as follows:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，创建 `page1.html`，其中包含一个返回到 `main.html` 的链接，如下所示：
- en: '[PRE7]'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: How it works...
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何运作...
- en: Add the given script in the code before including the reference to `jquery.mobile.js`.
    In the script, add an event handler for the `mobileinit` event that gets triggered
    at the start of the app. Here, set the configuration `$.mobile.ajaxEnabled=true`.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在包含对 `jquery.mobile.js` 的引用之前，在代码中添加给定的脚本。在脚本中，添加一个用于在应用程序启动时触发的 `mobileinit`
    事件的事件处理程序。在这里，设置配置 `$.mobile.ajaxEnabled=true`。
- en: Note
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Since `$.mobile.ajaxEnabled` is `true` by default, you don't have to explicitly
    set it in your code. It is included in this recipe, because you will be changing
    this value to `false` later in the code.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 `$.mobile.ajaxEnabled` 默认为 `true`，因此您不必在代码中明确设置它。它包含在此教程中，因为您将在代码中稍后将此值更改为
    `false`。
- en: 'Add the `#main` page. Create `page1.html` as shown in the code (note that the
    `<head>` element is not present in `page1.html`). The `#main` page is displayed,
    as shown in the following screenshot:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 添加 `#main` 页面。按照代码中所示创建 `page1.html`（请注意，`page1.html` 中没有 `<head>` 元素）。显示 `#main`
    页面，如下图所示：
- en: '![How it works...](img/7225_07_5.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![如何运作...](img/7225_07_5.jpg)'
- en: Click on the **Open Page 1** button to open `page1.html` as follows. This page
    gets loaded via Ajax, and the framework enhances the controls.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 单击 **打开第一页** 按钮以打开 `page1.html`，如下所示。此页面通过 Ajax 加载，并且框架增强了控件。
- en: '![How it works...](img/7225_07_6.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![如何运作...](img/7225_07_6.jpg)'
- en: 'Next, set the `ajaxEnabled` property to `false` in `main.html`, and reload
    the page. Now, when `page1.html` is opened, the elements are not enhanced, as
    shown in the following screenshot:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在 `main.html` 中将 `ajaxEnabled` 属性设置为 `false`，然后重新加载页面。现在，当打开 `page1.html`
    时，元素不会被增强，如下图所示：
- en: '![How it works...](img/7225_07_7.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![如何运作...](img/7225_07_7.jpg)'
- en: There's more...
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: When Ajax is disabled, the entire page is loaded. In `page1.html`, since the
    `<head>` element with the links to the jQuery Mobile framework library is missing,
    the page does not get any style or enhancements.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 当禁用Ajax时，将加载整个页面。在`page1.html`中，由于缺少指向jQuery Mobile框架库的链接的`<head>`元素，因此页面不会获得任何样式或增强效果。
- en: Configuring autoInitializePage
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置autoInitializePage
- en: When you navigate to a new page or when a page is loaded in the DOM, the framework
    initializes the page and makes it visible. This is controlled by the `$.mobile.intializePage`
    property, which has a Boolean value of `true` by default. If this is set to `false`,
    the page is not shown. You will have to manually set this back to `true` to show
    the page. This recipe shows you how to do the same.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 当您导航到新页面或将页面加载到DOM中时，框架会初始化页面并使其可见。这由`$.mobile.intializePage`属性控制，默认情况下其布尔值为`true`。如果将其设置为`false`，则不会显示页面。您将不得不手动将其设置回`true`以显示页面。本示例向您展示了如何执行相同操作。
- en: Getting ready
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'Copy the full code of this recipe from the `code/07/auto-initialize` sources
    folder. You can launch this code by using the URL: `http://localhost:8080/07/auto-initialize/main.html`.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 从`code/07/auto-initialize`源文件夹中复制此示例的全部代码。您可以通过使用URL启动此代码：`http://localhost:8080/07/auto-initialize/main.html`。
- en: How to do it...
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In `main.html`, add the following script before including `jquery.mobile.js`:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`main.html`中，在包含`jquery.mobile.js`之前，添加以下脚本：
- en: '[PRE8]'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Create the main page with the following content:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建具有以下内容的主页：
- en: '[PRE9]'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: How it works...
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'Add the given `autoInitializePage` script to the code before including the
    reference to `jquery.mobile.js`. In the script, add an event handler for the `mobileinit`
    event that gets triggered at the start of the app. Here, set the configuration
    `$.mobile.autoInitializePage=false`. Finally, add the `#main` page. The page content
    will be similar to the following screenshot:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在包含对`jquery.mobile.js`的引用之前，将给定的`autoInitializePage`脚本添加到代码中。在脚本中，添加一个在应用程序启动时触发的`mobileinit`事件处理程序。在这里，将配置`$.mobile.autoInitializePage=false`。最后，添加`#main`页面。页面内容将类似于以下屏幕截图：
- en: '![How it works...](img/7225_07_8.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理...](img/7225_07_8.jpg)'
- en: The contents are initialized and visible as the value of `$mobile.autoInitializePage`
    is manually set to `true`, as shown in the code. You can comment this line (in
    the page content section) and reload the page to find that nothing gets shown.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 初始化内容并将其设置为`$mobile.autoInitializePage`的值手动设置为`true`，如代码所示。您可以注释此行（在页面内容部分）并重新加载页面，以发现什么也没有显示。
- en: There's more...
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: You can use this feature to delay displaying the page while you do some background
    work or while you fetch data in the background from a server. It is useful when
    you manually handle the changing of pages.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用此功能延迟显示页面，同时在后台执行一些后台工作或从服务器后台获取数据时。在手动处理页面更改时很有用。
- en: Configuring the default transitions
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置默认过渡效果
- en: By default, the jQuery Mobile framework uses the **fade** transition while loading
    pages with Ajax. The **pop** transition is used by default while opening dialogs
    with Ajax. This recipe shows you how to set different default transitions for
    your app.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，jQuery Mobile框架在使用Ajax加载页面时使用**fade**过渡。在使用Ajax打开对话框时，默认使用**pop**过渡。本示例向您展示了如何为您的应用设置不同的默认过渡效果。
- en: Getting ready
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'Copy the full code of this recipe from the `code/07/default-transitions` sources
    folder. You can launch this code using the URL: `http://localhost:8080/07/default-transitions/main.hml`.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 从`code/07/default-transitions`源文件夹中复制此示例的全部代码。您可以使用以下URL启动此代码：`http://localhost:8080/07/default-transitions/main.hml`。
- en: How to do it...
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In `main.html`, add the following script before including `jquery.mobile.js`:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`main.html`中，在包含`jquery.mobile.js`之前，添加以下脚本：
- en: '[PRE10]'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Create the `#main` page as follows:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`#main`页面如下：
- en: '[PRE11]'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Create `#page1` as follows; this is a multi-page document:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`#page1`如下；这是一个多页面文档：
- en: '[PRE12]'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: How it works...
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Create `main.html` and add the given script in the code before including the
    reference to `jquery.mobile.js`. In the script, add an event handler for the `mobileinit`
    event that gets triggered at the start of the app. Here, set the default transitions
    for pages and dialogs using the `$.mobile.defaultDialogTransition` and `$.mobile.defaultPageTransition`
    properties. Finally, add the `#main` and `#page1` page containers as shown.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`main.html`并在代码中包含给定的脚本，然后再包含对`jquery.mobile.js`的引用。在脚本中，添加一个在应用程序启动时触发的`mobileinit`事件处理程序。在这里，使用`$.mobile.defaultDialogTransition`和`$.mobile.defaultPageTransition`属性设置页面和对话框的默认过渡效果。最后，如所示，添加`#main`和`#page1`页面容器。
- en: In `#main`, there are two buttons. The first one opens `#page1` as a page and
    the second one opens it as a dialog. You will see that the default transitions
    are changed. The page now uses the `turn` transition and the dialog uses the `flow`
    transition.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在`#main`中，有两个按钮。第一个按钮将`#page1`作为页面打开，第二个按钮将其作为对话框打开。您将看到默认转换已更改。页面现在使用`turn`转换，对话框使用`flow`转换。
- en: There's more...
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'You can also set both the page and the dialog default transitions to `none`.
    This will just load the pages or dialogs without using any transitions:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以将页面和对话框的默认转换都设置为`none`。这将只是加载页面或对话框而不使用任何转换：
- en: '[PRE13]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Using custom transitions
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用自定义转换
- en: 'You can configure the framework to use your own custom transitions as default
    transitions. You have to set the transition name as follows:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以配置框架以使用自定义转换作为默认转换。您必须按以下方式设置转换名称：
- en: '[PRE14]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Transition fallbacks
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 转换回退
- en: 'The `fade` transition is the default transition and it uses 2D. All other transitions
    use 3D. Older browsers and devices that do not support 3D transformations will
    fall back to using `fade`. You can configure this default fall back transition
    to `none` or you can set it to your own custom 2D transition. This can be done
    for each of the individual 3D transitions, as follows:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '`fade`转换是默认转换，它使用2D。所有其他转换都使用3D。不支持3D变换的旧浏览器和设备将退回到使用`fade`。您可以将此默认回退转换配置为`none`，或者您可以将其设置为自己的自定义2D转换。可以为每个单独的3D转换执行此操作，如下所示：'
- en: '[PRE15]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: See also
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[Chapter 2](ch02.html "Chapter 2. Pages and Dialogs"), *Using CSS to create
    a bouncing page transition*'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第2章](ch02.html "第2章。页面和对话框"), *使用CSS创建弹跳页面转换*'
- en: '[Chapter 2](ch02.html "Chapter 2. Pages and Dialogs"), *Using JS to create
    a Slide ''n Fade transition*'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第2章](ch02.html "第2章。页面和对话框"), *使用JS创建滑动''淡出''转换*'
- en: Configuring ignoreContentEnabled
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置ignoreContentEnabled
- en: The jQuery Mobile framework automatically enhances controls and markup found
    in a page. To skip enhancing certain sections of markup, you can use the `$.mobile.ignoreContentEnabled`
    configuration (which is `false` by default). This recipe shows you how to do the
    same.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery Mobile框架会自动增强页面中找到的控件和标记。要跳过增强某些标记部分，您可以使用`$.mobile.ignoreContentEnabled`配置（默认为`false`）。此示例向您展示如何执行相同操作。
- en: Getting ready
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Copy the full code of this recipe from the `code/07/content-enabled` sources
    folder. You can launch this code using the URL: `http://localhost:8080/07/content-enabled/main.html`.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 从`code/07/content-enabled`源文件夹中复制此示例的完整代码。您可以使用以下网址启动此代码：`http://localhost:8080/07/content-enabled/main.html`。
- en: How to do it...
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'In `main.html`, add the following script before including `jquery.mobile.js`:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`main.html`中，在包含`jquery.mobile.js`之前添加以下脚本：
- en: '[PRE16]'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Create the `#main` page with the following content :'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建带有以下内容的`#main`页面：
- en: '[PRE17]'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: How it works...
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'Create `main.html` and add the given script in the code before including the
    reference to `jquery.mobile.js`. In the script, add an event handler for the `mobileinit`
    event that gets triggered at the start of the app. Here, set the property `$.mobile.ignoreContentEnabled=true`.
    In `#main`, add two divs. Add a checkbox and a radio button to each `div`. Set
    the attribute `data-enhance=false` to the first `div`. Now, the elements added
    to this `div` are not enhanced by the framework. The elements in the second `div`
    are automatically enhanced. The page is displayed as shown in the following screenshot:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`main.html`并在包含对`jquery.mobile.js`的引用之前添加代码中的给定脚本。在脚本中，为在应用程序启动时触发的`mobileinit`事件添加事件处理程序。在这里，将属性`$.mobile.ignoreContentEnabled=true`设置为`true`。在`#main`中，添加两个div。在每个`div`中添加一个复选框和一个单选按钮。将属性`data-enhance=false`设置为第一个`div`。现在，框架不会增强添加到此`div`中的元素。第二个`div`中的元素会自动增强。页面显示如下截图所示：
- en: '![How it works...](img/7225_07_9.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/7225_07_9.jpg)'
- en: There's more...
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: When you use the `$.mobile.ignoreContentEnabled=true` configuration, it tells
    the framework to avoid enhancing certain sections of markup. This is done by using
    the `data-enhance="false"` attribute as shown in this recipe. Now, when the framework
    encounters each control or markup, it first checks if the parent element has the
    `data-enhance` attribute set to `false`. If so, it skips applying the style or
    any enhancements to the control.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 当您使用`$.mobile.ignoreContentEnabled=true`配置时，它告诉框架避免增强某些标记部分。通过使用`data-enhance="false"`属性来执行此操作，如此示例所示。现在，当框架遇到每个控件或标记时，它首先检查父元素是否将`data-enhance`属性设置为`false`。如果是，则跳过将样式或任何增强应用于控件。
- en: Note
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Using `$.mobile.ignoreContentEnabled` and `data-enhance` could cause performance
    degradation while the pages are enhanced.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `$.mobile.ignoreContentEnabled` 和 `data-enhance` 可能会在页面增强时导致性能下降。
- en: Configuring the page loading and error messages
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置页面加载和错误消息
- en: By default, the jQuery Mobile framework shows a spinning animation with theme
    `a` and without any text when loading a new page. If there is an error, the page
    load times out and an error message `Error Loading Page` is shown, with theme
    `e`. This recipe shows you how to change and customize the page loading and error
    messages.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，jQuery Mobile 框架在加载新页面时显示一个带有主题 `a` 的旋转动画，不带任何文本。如果出现错误，页面加载超时，将显示错误消息
    `Error Loading Page`，带有主题 `e`。本教程向你展示如何更改和自定义页面加载和错误消息。
- en: Getting ready
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Copy the full code of this recipe from the sources `code/07/load-message` folder.
    To try out this recipe, launch the simple `nodejs` web server that is available
    in the folder code, by using the following command:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 从 `code/07/load-message` 文件夹的源文件中复制此教程的全部代码。要尝试此教程，请使用该文件夹中可用的简单 `nodejs` web
    服务器，使用以下命令：
- en: '[PRE18]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Then you can launch the code by using the URL: `http://localhost:8080/07/load-message/main.hml`.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您可以使用以下 URL 启动代码：`http://localhost:8080/07/load-message/main.hml`。
- en: How to do it...
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'In `main.html`, add the following script before including `jquery.mobile.js`:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `main.html` 中，添加以下脚本以在包含 `jquery.mobile.js` 之前使用：
- en: '[PRE19]'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Create the `#main` page with the following content:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建以下内容的 `#main` 页面：
- en: '[PRE20]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: How it works...
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Create `main.html`, and add the given script before including the reference
    to `jquery.mobile.js`. In the script, add an event handler for the `mobileinit`
    event that gets triggered at the start of the app. Here, set the default page
    load messages and error messages as shown in the code.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 `main.html`，并在包含对 `jquery.mobile.js` 的引用之前添加给定脚本。在脚本中，为 `mobileinit` 事件添加一个事件处理程序，该事件在应用程序启动时触发。在这里，设置默认的页面加载消息和错误消息如代码所示。
- en: 'In `#main`, there is a link that tries to open the `"/delay"` page. This is
    a `GET` operation on the `nodejs` server. The server handles this request and
    returns an error code after pausing for a few seconds. The spin control with a
    text message is shown for this duration, as shown in the following screenshot:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `#main` 中，有一个尝试打开 `"/delay"` 页面的链接。这是对 `nodejs` 服务器的 `GET` 操作。服务器处理此请求，并在暂停几秒钟后返回错误代码。在此持续时间内显示带有文本消息的旋转控件，如下截图所示：
- en: '![How it works...](img/7225_07_10.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/7225_07_10.jpg)'
- en: 'The error response causes the following error message to be shown:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 错误响应会导致以下错误消息显示：
- en: '![How it works...](img/7225_07_11.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/7225_07_11.jpg)'
- en: Configuring the default namespace
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置默认命名空间
- en: This recipe shows you how to configure the jQuery Mobile framework to use your
    custom namespace for the `data-` attributes.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程向你展示如何配置 jQuery Mobile 框架以使用你自定义的命名空间作为 `data-` 属性。
- en: Getting ready
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Copy the full code of this recipe from the `code/07/namespace` sources folder.
    You can launch this code using the URL: `http://localhost:8080/07/namespace/main.html`.'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 从 `code/07/namespace` 源文件夹中复制此教程的全部代码。您可以使用以下命令启动此代码：`http://localhost:8080/07/namespace/main.html`。
- en: How to do it...
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'In `main.html`, add the following script before including `jquery.mobile.js`:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `main.html` 中，添加以下脚本以在包含 `jquery.mobile.js` 之前使用：
- en: '[PRE21]'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Add the following style to the `<head>` tag:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `<head>` 标签中添加以下样式：
- en: '[PRE22]'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Create the main page as follows:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建主页面如下所示：
- en: '[PRE23]'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Create the `#dialog` page as follows; this is a multi-page document:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 `#dialog` 页面如下；这是一个多页面文档：
- en: '[PRE24]'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: How it works...
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: To use a custom namespace, you will have to override one specific selector in
    the `jquery.mobile.css` file, the `.ui-mobile [data-my-role=page]`, and the `.ui-mobile
    [data-my-role=dialog]` selector. Override this style as shown in the code. Using
    `data-my-role` means that the namespace is set to `my`.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用自定义命名空间，您必须在 `jquery.mobile.css` 文件中覆盖一个特定的选择器，即 `.ui-mobile [data-my-role=page]`
    和 `.ui-mobile [data-my-role=dialog]` 选择器。按照代码中所示覆盖此样式。使用 `data-my-role` 意味着命名空间设置为
    `my`。
- en: Create `main.html`, and set this configuration by adding the preceding script
    before including the reference to `jquery.mobile.js`. In the script, add an event
    handler for the `mobileinit` event that gets triggered at the start of the app.
    Here, set the default namespace by using the `$.mobile.ns="my-"`configuration
    . Add the `#main` and `#dialog` pages.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 `main.html`，并在包含对 `jquery.mobile.js` 的引用之前添加前述脚本以设置此配置。在脚本中，为 `mobileinit`
    事件添加一个事件处理程序，该事件在应用程序启动时触发。在这里，使用 `$.mobile.ns="my-"` 配置设置默认命名空间。添加 `#main` 和
    `#dialog` 页面。
- en: 'The following screenshot shows the page as seen through a DOM inspector:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了通过DOM检查器看到的页面：
- en: '![How it works...](img/7225_07_12.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/7225_07_12.jpg)'
- en: You will note that the code also used the `data-my-` attributes. You will also
    observe that the framework has added enhancements, and even these enhancements
    use the custom namespace all across the page.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 您会注意到代码还使用了`data-my-`属性。您还会观察到框架已添加增强功能，甚至这些增强功能在整个页面上都使用自定义命名空间。
- en: Note
  id: totrans-158
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Use a trailing hyphen as in `"my-"` for the custom namespace. It is easier to
    read the enhanced code this way.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 对于自定义命名空间，使用尾随连字符，例如`"my-"`。这样增强代码更易读。
- en: Configuring hashListeningEnabled and subPageUrlKey
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置`hashListeningEnabled`和`subPageUrlKey`
- en: When you use a nested `listview`, the jQuery Mobile framework generates a sub
    page in the form of `pagename.html&ui-page=subpageidentifier`. The hash segment
    before the sub page URL key `(&ui-page)` is used by the framework for navigation.
    This recipe shows you how to use a custom sub page URL key. It also shows you
    how to use the `$.mobile.hashListeningEnabled` configuration.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 当您使用嵌套`listview`时，jQuery Mobile框架会生成一个子页面，形式为`pagename.html&ui-page=subpageidentifier`。在子页面URL键`(&ui-page)`之前的哈希段由框架用于导航。本示例向您展示了如何使用自定义子页面URL键。它还向您展示了如何使用`$.mobile.hashListeningEnabled`配置。
- en: Getting ready
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Copy the full code of this recipe from the sources folder `code/07/sub-page`.
    You can launch this code using the URL: `http://localhost:8080/07/sub-page/main.html`.'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 从源文件夹`code/07/sub-page`中复制此示例的完整代码。您可以使用以下URL启动此代码：`http://localhost:8080/07/sub-page/main.html`。
- en: How to do it...
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'In `main.html`, add the following script before including `jquery.mobile.js`:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`main.html`中，在包含`jquery.mobile.js`之前添加以下脚本：
- en: '[PRE25]'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Create the `#main` page with a nested list in its content as follows:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在其内容中创建带有嵌套列表的`#main`页面如下所示：
- en: '[PRE26]'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: How it works...
  id: totrans-169
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'Create `main.html,` and add the given script in the code before including the
    reference to `jquery.mobile.js`. In the script, add an event handler for the `mobileinit`
    event that gets triggered at the start of the app. Here, set the `$.mobile.subPageUrlKey="my-page"`
    and `$.mobile.hashListeningEnabled=false` configurations. Finally, add the `#main`
    page with a nested list as shown in the code. The output will be similar to the
    following screenshot:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`main.html`，并在包含对`jquery.mobile.js`的引用之前在代码中添加给定的脚本。在脚本中，添加一个在应用程序启动时触发的`mobileinit`事件的事件处理程序。在这里，设置`$.mobile.subPageUrlKey="my-page"`和`$.mobile.hashListeningEnabled=false`配置。最后，在代码中添加`#main`页面与嵌套列表一样。输出将类似于以下截图：
- en: '![How it works...](img/7225_07_13.jpg)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/7225_07_13.jpg)'
- en: 'Click on **Sub Page Items**, and open the nested list in a sub page. The address
    bar shows the custom sub page URL key `my-page`, as shown in the following screenshot:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**子页面项**，并在子页面中打开嵌套列表。地址栏显示自定义的子页面URL键`my-page`，如下面的截图所示：
- en: '![How it works...](img/7225_07_14.jpg)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/7225_07_14.jpg)'
- en: 'Now, go back using the browser **Back** button. The URL in the address bar
    gets updated, but the page does not change back to the previous screen, as shown
    in the following code:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，使用浏览器的**返回**按钮返回。地址栏中的URL会更新，但页面不会返回到上一个屏幕，如下面的代码所示：
- en: '![How it works...](img/7225_07_15.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/7225_07_15.jpg)'
- en: This is because `hashListeningEnabled` was configured to `false` at startup.
    This will prevent the framework from listening and handling the location hash
    changes. If you set the `hashListeningEnabled` to `true` (the default value) and
    reload the page, the page navigation will work fine and the main list is shown
    again from the nested list.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为在启动时将`hashListeningEnabled`配置为`false`。这将阻止框架监听和处理位置哈希更改。如果将`hashListeningEnabled`设置为`true`（默认值）并重新加载页面，则页面导航将正常工作，并且主列表将再次显示为嵌套列表。
- en: Note
  id: totrans-177
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Configure `hashListeningEnabled` only if you want to custom manage the hash
    changes instead of allowing the framework to handle it.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 只有在想要自定义管理哈希更改而不是允许框架处理它时，才配置`hashListeningEnabled`。
- en: See also
  id: totrans-179
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[Chapter 7](ch07.html "Chapter 7. Configurations"), *Configurations*, *Configuring
    pushStateEnabled and link**BindingEnabled*'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第7章](ch07.html "第7章。配置")，*配置*，*配置`pushStateEnabled`和`link**BindingEnabled`*'
- en: Configuring pushStateEnabled and linkBindingEnabled
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置`pushStateEnabled`和`linkBindingEnabled`
- en: When you click on a link, navigation happens and the URL hash is updated. The
    framework allows you to replace the URL hash to a full path in browsers that support
    the `history.replaceState` API. This recipe shows you how to do this using the
    `$.mobile.pushStateEnabled` configuration. It also shows you how to use the `$.mobile.linkBindingEnabled`
    configuration that allows the framework to automatically bind the clicks on the
    anchor links in a document. Both these are `true` by default.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 当您单击链接时，将进行导航并更新 URL 散列。框架允许您在支持 `history.replaceState` API 的浏览器中将 URL 散列替换为完整路径。此示例向您展示了如何使用
    `$.mobile.pushStateEnabled` 配置来实现此目的。它还向您展示了如何使用 `$.mobile.linkBindingEnabled`
    配置，该配置允许框架自动绑定文档中锚链接的单击事件。这两者默认值均为 `true`。
- en: Getting ready
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Copy the full code of this recipe from the sources `code/07/push-state` folder.
    You can launch this code using the URL: `http://localhost:8080/07/push-state/main.html`.'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 从 `code/07/push-state` 文件夹中复制此示例的完整代码。您可以使用以下 URL 启动此代码：`http://localhost:8080/07/push-state/main.html`。
- en: How to do it...
  id: totrans-185
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In `main.html`, add the following script before including `jquery.mobile.js`:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `main.html` 中，在包含 `jquery.mobile.js` 前添加以下脚本：
- en: '[PRE27]'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Create the `#main` page with the following content:'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建以下内容的 `#main` 页面：
- en: '[PRE28]'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Create `page1.html` as follows:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 `page1.html` 如下：
- en: '[PRE29]'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: How it works...
  id: totrans-192
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它的工作原理...
- en: 'Create `main.html`, and add the given script in the code before including the
    reference to `jquery.mobile.js`. In the script, add an event handler for the `mobileinit`
    event that gets triggered at the start of the app. Here, set the `$.mobile.pushStateEnabled=false`
    and `$.mobile.linkBindingEnabled=true` configurations. Finally, add the `#main`
    page contents and `page1.html`, as shown in the code. The output will be similar
    to the following screenshot:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 `main.html`，并在引用 `jquery.mobile.js` 之前在代码中添加给定的脚本。在脚本中，为在应用程序启动时触发的 `mobileinit`
    事件添加事件处理程序。在这里，设置 `$.mobile.pushStateEnabled=false` 和 `$.mobile.linkBindingEnabled=true`
    配置。最后，根据代码中所示添加 `#main` 页面内容和 `page1.html`。输出将类似于以下屏幕截图：
- en: '![How it works...](img/7225_07_16.jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![它的工作原理...](img/7225_07_16.jpg)'
- en: 'When you open **Page 1**, the URL address bar has the full path appended to
    `main.html`, as shown in the following screenshot:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 当您打开 **页面 1** 时，URL 地址栏将完整路径附加到 `main.html`，如下截图所示：
- en: '![How it works...](img/7225_07_17.jpg)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![它的工作原理...](img/7225_07_17.jpg)'
- en: This is because `pushStateEnabled` was set to `false` at startup. If you set
    this to `true` (the default value) and reload the page, the URL hash is replaced
    and is shown as `http://localhost:8080/07/push-state/page1.html`.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为在启动时将 `pushStateEnabled` 设置为了 `false`。如果您将其设置为 `true`（默认值）并重新加载页面，URL 散列将被替换，并显示为
    `http://localhost:8080/07/push-state/page1.html`。
- en: Note
  id: totrans-198
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Set the `pushStateEnabled` configuration to `false` when Ajax is not used or
    when external links are used extensively in your app.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 当应用程序中未使用 Ajax 或者大量使用外部链接时，将 `pushStateEnabled` 配置设置为 `false`。
- en: There's more...
  id: totrans-200
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: In this recipe, the `linkBindingEnabled` configuration was set to `true` at
    startup (its default value). If you set this to `false` and reload the page, you
    will notice that the **Go to Page 1** button does not get the active state when
    clicked. The framework does not automatically bind the link clicks in this case.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在本示例中，在启动时将 `linkBindingEnabled` 配置设置为了 `true`（其默认值）。如果您将其设置为 `false` 并重新加载页面，您将注意到单击
    **转到页面 1** 按钮时它未获得活动状态。在这种情况下，框架不会自动绑定链接点击。
- en: Note
  id: totrans-202
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Use the `linkBindingEnabled` configuration only if you want your custom code
    (or another library) to handle the link clicks.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 仅在您希望您的自定义代码（或其他库）处理链接点击时，使用 `linkBindingEnabled` 配置。
- en: See also
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见也
- en: '[Chapter 7](ch07.html "Chapter 7. Configurations"), *Configurations*, *Configuring
    hashListeningEnabled and subPageUrlKey*'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第 7 章](ch07.html "第 7 章. 配置"), *配置*, *配置 hashListeningEnabled 和 subPageUrlKey*'
