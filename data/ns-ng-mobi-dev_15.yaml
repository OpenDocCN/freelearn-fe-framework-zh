- en: Deploying to the Apple App Store
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署到苹果应用商店
- en: In this chapter, we will focus on how to deploy our app to the Apple App Store.
    There are several important steps we will want to follow, so pay close attention
    to all the details presented here.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将重点讨论如何将我们的应用部署到苹果应用商店。我们将要遵循几个重要的步骤，所以请密切关注这里呈现的所有细节。
- en: Whether you need to work with Signing Certificates to build a release target
    of our app, generate app icons and splash screens, or work within XCode to archive
    our app for upload to the App Store, we will cover all these topics in this chapter.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您是否需要使用签名证书来构建我们应用的发布目标，生成应用图标和启动画面，还是在XCode中为上传到应用商店归档我们的应用，我们将在本章中涵盖所有这些主题。
- en: TJ VanToll, a NativeScript expert and developer advocate for Progress, wrote
    an excellent article detailing deployment steps titled *8 Steps to Publish Your
    NativeScript App to the App Stores* ([https://www.nativescript.org/blog/steps-to-publish-your-nativescript-app-to-the-app-stores](https://www.nativescript.org/blog/steps-to-publish-your-nativescript-app-to-the-app-stores)).
    We will take excerpts from that article and expand on sections wherever possible
    here in this chapter and the next chapter.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: NativeScript专家、Progress的开发者倡导者TJ VanToll撰写了一篇关于部署步骤的优秀文章，标题为*8 Steps to Publish
    Your NativeScript App to the App Stores* ([https://www.nativescript.org/blog/steps-to-publish-your-nativescript-app-to-the-app-stores](https://www.nativescript.org/blog/steps-to-publish-your-nativescript-app-to-the-app-stores))。我们将从该文章中摘录内容，并在本章和下一章中尽可能扩展各个部分。
- en: There's no point in lying to you—releasing an iOS app to the iOS App Store is
    one of the most painful processes you'll go through in your software development
    career. So, in case you get stuck or confused in these steps, just know that it's
    not just you—everyone gets frustrated when releasing iOS apps the first time.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 没有必要欺骗你——将iOS应用发布到iOS应用商店是您在软件开发生涯中将经历的最痛苦的过程之一。所以，如果您在这些步骤中遇到困难或困惑，只需知道不仅是您——每个人在首次发布iOS应用时都会感到沮丧。
- en: 'The following topics are covered in this chapter:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖以下主题：
- en: How to create an App ID and production certificate to sign your app release
    target with
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何创建应用ID和生产证书以签署您的应用发布目标
- en: How to configure a NativeScript app with the appropriate metadata needed for
    a release
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何配置NativeScript应用程序所需的适当元数据以进行发布
- en: How to handle app icons and splash screens
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何处理应用图标和启动画面
- en: Uploading your build to iTunes Connect using the NativeScript CLI
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用NativeScript CLI将您的构建上传到iTunes Connect
- en: Preparing for App Store distribution
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为应用商店分发做准备
- en: To deploy iOS apps to the iOS App Store, you absolutely must have an active
    Apple Developer account. It costs $99 USD per year to be a part of the program,
    and you can sign up at [developer.apple.com/register](https://developer.apple.com/register).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要将iOS应用程序部署到iOS应用商店，您绝对必须拥有一个活跃的苹果开发者帐户。加入该计划每年需要99美元，并且您可以在[developer.apple.com/register](https://developer.apple.com/register)上注册。
- en: App ID, certificates, and profiles
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用ID、证书和配置文件
- en: 'Once you create an Apple Developer account, you''ll need to create an App ID,
    Production Certificate, and a Distribution Provisioning Profile on the Apple Developer
    portal. This is the most tedious part of the entire process, as it takes some
    time to learn what each of these various files do and how to use them:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您创建了苹果开发者帐户，您将需要在苹果开发者门户上创建应用ID、生产证书和分发配置文件。这是整个过程中最繁琐的部分，因为需要一些时间来学习这些各种文件的作用以及如何使用它们：
- en: 'For our app, we will begin by creating the App ID with the following:'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于我们的应用，我们将从以下内容开始创建应用ID：
- en: '![](../images/00059.jpeg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00059.jpeg)'
- en: 'Once we create this App ID, we can now create a Production certificate:'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦我们创建了这个应用ID，我们现在可以创建一个生产证书：
- en: '![](../images/00060.jpeg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00060.jpeg)'
- en: 'Select Continue. Then, the next screen will provide instructions on how to
    sign your production certificate, which we will walk through next. First, open
    `/Applications/Utilities/Keychain Access.app` and then go to the top-left menu
    and select Certificate Assistant | Request a Certificate from a Certificate Authority
    using a setup like this:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择继续。然后，下一个屏幕将提供有关如何签署您的生产证书的说明，接下来我们将详细介绍。首先，打开`/Applications/Utilities/Keychain
    Access.app`，然后转到左上角菜单，选择Certificate Assistant | Request a Certificate from a Certificate
    Authority，使用此设置：
- en: '![](../images/00061.jpeg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00061.jpeg)'
- en: This will save a signing request file wherever you choose, which you will need
    in the next step.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在您选择的任何位置保存一个签名请求文件，您将在下一步中需要它。
- en: 'Now, select that signing request file at this step in the portal:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在门户网站的这一步中选择签名请求文件：
- en: '![](../images/00062.jpeg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00062.jpeg)'
- en: 'On the next screen, it''s very important to download and then double-click
    the file that you need to install into your keychain as it specifies:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个屏幕上，非常重要的是下载然后双击需要安装到您的钥匙串的文件，因为它指定了：
- en: '![](../images/00063.jpeg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00063.jpeg)'
- en: 'When double-clicking the file to install into the keychain, it may prompt you
    to provide the keychain to install the file into; using the *login* keychain will
    work fine:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击文件安装到钥匙串时，可能会提示您提供要安装文件的钥匙串；使用*登录*钥匙串将正常工作：
- en: '![](../images/00064.jpeg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00064.jpeg)'
- en: 'You should now see something similar to the following screenshot in your keychain
    access app:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在您的钥匙串访问应用程序中应该看到类似以下截图的内容：
- en: '![](../images/00065.jpeg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00065.jpeg)'
- en: You can now quit keychain access.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您可以退出钥匙串访问。
- en: 'Next, we want to create a Distribution Provisioning Profile:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们要创建一个分发配置文件：
- en: '![](../images/00066.jpeg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00066.jpeg)'
- en: 'On the next screen, just ensure that you select the App ID that you created:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个屏幕上，只需确保选择您创建的应用程序ID：
- en: '![](../images/00067.jpeg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00067.jpeg)'
- en: 'Then, on the next screen, you should be able to select the Distribution certificate
    you created:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在下一个屏幕上，您应该能够选择您创建的分发证书：
- en: '![](../images/00068.jpeg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00068.jpeg)'
- en: 'Then, you will be able to give the profile a name:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，您将能够为配置文件命名：
- en: '![](../images/00069.jpeg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00069.jpeg)'
- en: You can download the profile and just place it alongside your `ios_distribution.cer`
    file; however, there is no need to open that provisioning profile file, as XCode
    will handle everything else.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以下载配置文件并将其放在`ios_distribution.cer`文件旁边；但是，没有必要打开该配置文件，因为XCode将处理其他所有内容。
- en: Configure the app metadata such as App ID and Display Name
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置应用程序元数据，如应用程序ID和显示名称
- en: iOS and Android apps have a lot of information that you will need to configure
    before you deploy your apps to their respective stores. NativeScript provides
    intelligent defaults for many of these values, but there are a few that you'll
    want to review before you deploy.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: iOS和Android应用程序有很多信息，您需要在将应用程序部署到各自的商店之前进行配置。NativeScript为许多这些值提供了智能默认值，但在部署之前，您可能需要审查其中一些值。
- en: App ID
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用程序ID
- en: 'The App ID configured in the Apple developer portal moments ago is a unique
    identifier for your app that uses something called reverse domain name notation.
    Our NativeScript app''s metadata must match. Our App ID for this app is `io.nstudio.nStudio`.
    The NativeScript CLI has a convention for setting the App ID during app creation:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 刚刚在苹果开发者门户网站配置的应用程序ID是使用称为反向域名表示法的唯一标识符。我们的NativeScript应用程序的元数据必须匹配。我们的应用程序ID是`io.nstudio.nStudio`。NativeScript
    CLI在创建应用程序时有一种设置应用程序ID的约定：
- en: '[PRE0]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We did not use this option when we created our app; however, it's easy enough
    to change our App ID.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在创建应用程序时没有使用此选项；但是，更改我们的应用程序ID非常容易。
- en: 'Open the app''s root `package.json` file and find the `nativescript` key. Ensure
    that the `id` attribute contains the value you''d like to use:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 打开应用程序的根`package.json`文件，找到`nativescript`键。确保`id`属性包含您想要使用的值：
- en: '![](../images/00070.jpeg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00070.jpeg)'
- en: Display name
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 显示名称
- en: You app's display name is the name the user sees next to your icon on their
    screen. By default, NativeScript sets your app's display name based on the value
    you passed to `tns create`, which is oftentimes not exactly what you want the
    user to see. For example, running `tns create my-app` results in an app with a
    display name of `myapp`.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 您应用程序的显示名称是用户在屏幕上看到的图标旁边的名称。默认情况下，NativeScript根据您传递给`tns create`的值设置应用程序的显示名称，这通常不是您希望用户看到的内容。例如，运行`tns
    create my-app`会导致一个显示名称为`myapp`的应用程序。
- en: To change that value on iOS, first open your app's `app/App_Resources/iOS/Info.plist`
    file. The `Info.plist` file is iOS's main configuration file, and here you'll
    find a number of values you may want to tinker with before releasing your app.
    For display name, you'll want to alter the `CFBundleDisplayName` value.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 要在iOS上更改该值，首先打开您的应用程序的`app/App_Resources/iOS/Info.plist`文件。`Info.plist`文件是iOS的主要配置文件，在这里，您可能希望在发布应用程序之前调整一些值。对于显示名称，您需要修改`CFBundleDisplayName`值。
- en: 'Here''s what this value looks like for `nStudio`:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这是`nStudio`的值：
- en: '![](../images/00071.jpeg) Although there''s no real character limit to display
    names, both iOS and Android will truncate your display names after somewhere around
    10–12 characters.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../images/00071.jpeg)尽管显示名称没有真正的字符限制，但iOS和Android都会在大约10-12个字符左右截断您的显示名称。'
- en: Create your app icons and splash screens
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建您的应用程序图标和启动画面
- en: Your app's icon is the first thing your users notice about your app. When you
    start a new NativeScript app, you will get a placeholder icon, which is fine for
    development; however, for production, you will need to replace the placeholder
    icon with the image you'll want to go to the stores with.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 您的应用程序图标是用户注意到您的应用程序的第一件事。当您启动一个新的NativeScript应用程序时，您将获得一个占位符图标，这对于开发来说是可以的；但是，对于生产，您需要用您想要上架的图像替换占位符图标。
- en: To get your production-ready app icon files in place, you will need to first
    create a 1024 x 1024 pixel `.png` image asset that represents your app.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将您的生产就绪的应用程序图标文件放置到位，您需要首先创建一个代表您的应用程序的1024 x 1024像素的`.png`图像资产。
- en: To make your life difficult, both iOS and Android require you to provide a variety
    of icon images in a wide array of sizes. Don't worry though; once you have a 1024
    x 1024 image, there are a few sites that will generate images in the various dimensions
    that Android and iOS require. For the NativeScript development, I recommend that
    you use the Nathanael Anderson's NativeScript Image Builder, which is available
    at `images.nativescript.rocks`.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让您的生活困难，iOS和Android都要求您提供各种尺寸的图标图像。不过不用担心；一旦您有了1024 x 1024的图像，有一些网站可以生成Android和iOS所需的各种尺寸的图像。对于NativeScript开发，我建议您使用Nathanael
    Anderson的NativeScript Image Builder，该工具可在`images.nativescript.rocks`上使用。
- en: 'We will build our icon in Photoshop:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在Photoshop中构建我们的图标：
- en: '![](../images/00072.jpeg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00072.jpeg)'
- en: 'We can then export that as a `.png` and upload it to `images.nativescript.rocks`:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以将其导出为`.png`并上传到`images.nativescript.rocks`：
- en: '![](../images/00073.jpeg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00073.jpeg)'
- en: When you click on Go, a zip file will be downloaded, and the contents will include
    your app icons and splash screens. You can copy these images into your `app/App_Resources`
    folder, respectively, for iOS (we will cover Android in the next chapter).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 当您点击Go时，将下载一个zip文件，其中包含您的应用程序图标和启动画面。您可以将这些图像分别复制到您的`app/App_Resources`文件夹中，用于iOS（我们将在下一章中介绍Android）。
- en: We now have our app icon and splash screens in place.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经放置了我们的应用程序图标和启动画面。
- en: Build the app for release
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建发布应用程序
- en: 'Since we have already covered webpack bundling issues in the preceding chapter,
    we are now ready to build the final releasable bundle with the following command:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们在前一章已经涵盖了webpack捆绑问题，现在我们准备使用以下命令构建最终可发布的捆绑包：
- en: '[PRE1]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Note that the `--teamId` will be different for you. It is the prefix on the
    App ID provided in the preceding command.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`--teamId`对您来说将是不同的。这是在前面的命令中提供的App ID的前缀。
- en: After this command finishes, you'll have the `.ipa` file you'll need in your
    `platforms/ios/build/device` folder. Make a note of the location of that file,
    as you'll need it in the final step of this guide.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 当此命令完成后，您将在`platforms/ios/build/device`文件夹中获得`.ipa`文件。请记下该文件的位置，因为您将在本指南的最后一步中需要它。
- en: Phew! Hopefully, you've made it to this point in one piece. You're now ready
    for the final step, iTunes Connect.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 哦！希望你已经一路顺利到达这一步。现在，你已经准备好进行最后一步，即iTunes Connect。
- en: Upload to iTunes Connect
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 上传到iTunes Connect
- en: 'The first thing you''ll need to do is register your app. To do that, visit
    [https://itunesconnect.apple.com/](https://itunesconnect.apple.com/), click on
    My Apps, and, click on the + button (currently in the top-left corner of the screen),
    and then select New App. In the screen that follows, ensure that you select the
    correct Bundle ID, and the SKU can be any number you''d like to identify your
    app; we like to use the current date:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要做的第一件事是注册您的应用程序。要做到这一点，访问[https://itunesconnect.apple.com/](https://itunesconnect.apple.com/)，点击我的应用程序，然后点击+按钮（目前位于屏幕左上角），然后选择新应用程序。在接下来的屏幕上，确保您选择了正确的Bundle
    ID，SKU可以是您想要识别您的应用程序的任何数字；我们喜欢使用当前日期：
- en: '![](../images/00074.jpeg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00074.jpeg)'
- en: After providing this information, you'll be taken to your app's dashboard where
    we need to provide more metadata about our app. Most of this information is pretty
    straightforward, such as descriptions and pricing, but there are a few *fun* pieces
    we'll have to deal with, such as screenshots.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 提供完这些信息后，您将被带到您的应用程序仪表板，我们需要提供有关我们的应用程序的更多元数据。大部分信息都很简单，比如描述和定价，但还有一些*有趣*的部分需要处理，比如屏幕截图。
- en: iTunes Connect now requires you to upload two sets of screenshots, one for the
    largest iPhone devices (5.5-inch displays), and another for the largest iPad devices
    (12.9-inch devices). Apple still gives you the ability to provide optimized screenshots
    for each and every iOS device dimension, but if you provide only 5.5-inch and
    12.9-inch screenshots, Apple will rescale your provided screenshots for smaller
    display devices automatically.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: iTunes Connect现在要求您上传两套屏幕截图，一套用于最大的iPhone设备（5.5英寸显示屏），另一套用于最大的iPad设备（12.9英寸设备）。苹果仍然允许您为每个iOS设备尺寸提供优化的屏幕截图，但如果您只提供5.5英寸和12.9英寸的屏幕截图，苹果将自动为较小的显示设备重新调整您提供的屏幕截图。
- en: To get those screenshots we could run the app on a physical iPhone Plus and
    iPad Pro device, but we find it far easier to get these screenshots from iOS simulators.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 要获得这些屏幕截图，我们可以在物理iPhone Plus和iPad Pro设备上运行应用程序，但我们发现从iOS模拟器获取这些屏幕截图要容易得多。
- en: With the correct simulated device running, we can use the simulator's *Cmd*
    + *S* keyboard shortcut to take a screenshot of the app, which will save the appropriate
    image to our desktop.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在正确的模拟设备运行时，我们可以使用模拟器的*Cmd* + *S*键盘快捷键来对应用程序进行截图，这将把适当的图像保存到我们的桌面上。
- en: At this point, we're all set. We will use a service such as DaVinci ([https://www.davinciapps.com](https://www.davinciapps.com/))
    to polish our image files, but when we are ready, we'll drag our images into the
    App Preview and Screenshots area of iTunes Connect.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经准备就绪。我们将使用DaVinci等服务（[https://www.davinciapps.com](https://www.davinciapps.com/)）来优化我们的图像文件，但当我们准备好时，我们将把我们的图像拖放到iTunes
    Connect的App预览和屏幕截图区域。
- en: Uploading your .ipa file
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 上传您的.ipa文件
- en: We're almost there! Once all the information has been entered into iTunes Connect,
    the final step is to associate the built `.ipa` file with all the information
    we just typed out.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们快要完成了！一旦所有信息都被输入到iTunes Connect中，最后一步就是将构建的.ipa文件与我们刚刚输入的所有信息关联起来。
- en: We will use the NativeScript CLI to do this.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用NativeScript CLI来完成这个过程。
- en: Remember that your .ipa file is in your app's `platforms/ios/build/device` folder.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，你的.ipa文件在你的应用程序的`platforms/ios/build/device`文件夹中。
- en: 'Run the following command to publish your app to iTunes Connect:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下命令将你的应用程序发布到iTunes Connect：
- en: '[PRE2]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: That's it. One important note, though, for whatever crazy reason, there's a
    nontrivial delay between the time you upload your iOS app and the time that your
    app shows up in iTunes Connect. We saw that the delay can be as short as 30 seconds
    and as long as an hour. Once the build shows up there, we can go ahead and click
    on the big Submit for Review button, and cross our fingers.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样。不过，有一点重要的注意事项，无论出于什么疯狂的原因，你上传iOS应用程序和应用程序在iTunes Connect中显示之间存在着相当大的延迟。我们看到这种延迟可能短至30秒，长至1小时。一旦构建出现在那里，我们就可以点击大大的“提交审核”按钮，然后祈祷。
- en: Apple has a notoriously sporadic delay for reviewing the iOS apps that you submit.
    At the time of writing this book, the average time to review for the iOS App Store
    was around 2 days.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 苹果对于审核你提交的iOS应用程序有着臭名昭著的不定期延迟。在撰写本书时，iOS App Store的平均审核时间大约为2天。
- en: Summary
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we highlighted the critical steps that must be taken to release
    an app to the Apple App Store, including signing certificates, app id, app icons,
    and splash screens. The process may seem heavily involved at first, but once you
    understand the various steps better, it becomes more clear.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们强调了发布应用程序到苹果应用商店所必须采取的关键步骤，包括签名证书、应用程序ID、应用图标和启动画面。这个过程一开始可能看起来很复杂，但一旦你更好地理解了各个步骤，它就会变得更清晰。
- en: We now have an app pending review in the store and are well on our way to making
    our app available for users around the world.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在在商店中有一个待审核的应用程序，并且正在朝着让我们的应用程序在全球范围内为用户提供的目标迈进。
- en: In the next chapter, let's finish this by deploying our app to the Google Play
    Store to broaden our audience.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，让我们通过将我们的应用程序部署到Google Play商店来扩大我们的受众群体。
