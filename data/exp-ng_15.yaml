- en: Integrating Bootstrap with Angular Application
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将Bootstrap与Angular应用程序集成
- en: Bootstrap is arguably the most popular frontend framework out there. Isn't Angular
    itself a frontend framework, you ask? Well, yes. Then why in the world do I need
    to use two frontend frameworks for the same app? The answer is, you don't. Bootstrap
    has been created by and for Twitter, and is incredibly popular. It allows you
    to manage many things, such as the disposition of HTML components on the page,
    using a system called the grid. This system, which I will explain at length in
    the following pages, allows you to divide the web page space into zones without
    explicitly using CSS. Moreover, everything will be responsive out of the box.
    Also, Bootstrap provides dynamic elements such as a carousel, Progress bar, form
    reaction to user input, and more. Simply put, Angular allows you to create the
    application structure and manages data presentation, while Bootstrap deals with
    the presentation of the graphics.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap可以说是目前最受欢迎的前端框架。你可能会问，Angular本身不就是一个前端框架吗？是的。那么为什么我需要在同一个应用程序中使用两个前端框架呢？答案是，你不需要。Bootstrap是由Twitter创建和使用的，非常受欢迎。它允许您管理许多事情，比如使用一个名为网格的系统在页面上布置HTML组件。我将在接下来的页面中详细解释这个系统，它允许您在不明确使用CSS的情况下将网页空间划分为区域。此外，一切都将立即响应。此外，Bootstrap提供了动态元素，如轮播、进度条、对用户输入的表单反应等。简而言之，Angular允许您创建应用程序结构并管理数据呈现，而Bootstrap处理图形的呈现。
- en: 'Bootstrap is based around three elements:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap围绕三个元素展开：
- en: '`bootstrap.css`'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bootstrap.css`'
- en: '`bootstrap.js`'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bootstrap.js`'
- en: '`glyphicons`'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`glyphicons`'
- en: Here, `bootstrap.css` contains the framework that allows the responsive division
    of space, while `bootstrap.js` is a JavaScript framework that makes your pages
    dynamic.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`bootstrap.css`包含了允许响应式空间划分的框架，而`bootstrap.js`是一个使您的页面动态化的JavaScript框架。
- en: It is important to note that `bootstrap.js` depends on the jQuery library.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，`bootstrap.js`依赖于jQuery库。
- en: Finally, `glyphicons` is a font containing all the icons you might need when
    using Bootstrap.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，`glyphicons`是一个包含使用Bootstrap时可能需要的所有图标的字体。
- en: 'In [Chapter 10](847dfea0-b857-4423-84fc-e6f719237f1d.xhtml)*,* *Material Design
    in Angular*, you will learn how to create apps that manage dynamic elements, the
    carousel, and other Progress bars using the `Material Design` package provided
    as an official extension of Angular by Google (ng2-material). Bootstrap (by Twitter)
    and Material Design (by Google for Angular) ultimately tend to achieve the same
    thing: facilitate yourÂ life when it comes to strictly presenting pages to your
    user. For example, they both ensure cross-browser compatibility, prevent the repetition
    of code between projects, and add consistency in the code base.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第10章](847dfea0-b857-4423-84fc-e6f719237f1d.xhtml)*,* *Angular中的Material Design*中，您将学习如何使用由Google官方提供的`Material
    Design`包来创建管理动态元素、轮播和其他进度条的应用程序（ng2-material）。Bootstrap（由Twitter提供）和Material Design（由Google为Angular提供）最终都旨在实现同样的目标：在严格呈现页面给用户时简化您的生活。例如，它们都确保跨浏览器兼容性，防止在项目之间重复编写代码，并在代码库中添加一致性。
- en: In my opinion, which one you should use is a personal choice, and I can see
    flame wars along the lines of C# versus Java or the PC versus the Mac ahead in
    the coming months. On the one hand, if you are already proficient with Bootstrap
    and use it everywhere, then you can use it here too. On the other hand, if Bootstrap
    is not part of your skill set, you can use this opportunity to pick it up and
    then choose the one you prefer.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在我看来，您应该使用哪一个是个人选择，我可以预见未来几个月将会有关于C#与Java或PC与Mac之类的激烈争论。一方面，如果您已经精通Bootstrap并且在各处都在使用它，那么您也可以在这里使用它。另一方面，如果Bootstrap不是您的技能范围，您可以利用这个机会学习并选择您喜欢的。
- en: 'The third option will be to skip this chapter altogether if you have already
    picked the Material Design (by Google for Angular) approach. I will not mind,
    promise. The topics covered in this chapter are:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 第三个选项将是完全跳过本章，如果您已经选择了Material Design（由Google为Angular提供）的方法。我不介意，我保证。本章涵盖的主题有：
- en: Installing Bootstrap
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Bootstrap
- en: Understanding Bootstrap's grid system
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解Bootstrap的网格系统
- en: Using Bootstrap directives
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Bootstrap指令
- en: Installing Bootstrap
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Bootstrap
- en: Without further ado, let's get started and install Bootstrap for Angular.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 话不多说，让我们开始并为Angular安装Bootstrap。
- en: When using Bootstrap with a standard web application without a frontend framework
    such as Angular--you need to use **content delivery network** (**CDN**) to fetch
    the three parts that comprise the Bootstrap framework (`bootstrap.css`, `bootstrap.js`,
    and `glyphicons`). These calls, even when downloading minified files, still take
    time (for example, three HTTP requests, downloading, check summing, and so on)
    for your clients. With Angular, we could follow the same approach and simply add
    references to some CDN in `src/index.html`, but it would be a considerable mistake.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在没有像Angular这样的前端框架的标准Web应用中使用Bootstrap时，您需要使用内容传递网络（CDN）来获取组成Bootstrap框架的三个部分（`bootstrap.css`，`bootstrap.js`和`glyphicons`）。即使下载了缩小的文件，这些调用仍然需要时间（例如，三个HTTP请求，下载，校验和等）才能完成。对于您的客户来说，使用Angular，我们可以采用相同的方法，并简单地在`src/index.html`中添加对某些CDN的引用，但这将是一个相当大的错误。
- en: First of all, if the user does not own a cached copy of the resource, then we
    will suffer the same side-effects as a standard web app, as our customers would
    have to wait for the CDNs to serve the Bootstrap framework, especially considering
    that our app is minified and served in a single file, thanks to the Angular CLI
    deployment processes. Secondly, we won't be able to easily control the Bootstrap
    components in our Angular components.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，如果用户没有缓存资源的副本，那么我们将遭受与标准Web应用相同的副作用，因为我们的客户将不得不等待CDN提供Bootstrap框架，特别是考虑到我们的应用经过Angular
    CLI部署流程进行了缩小并以单个文件提供。其次，我们将无法轻松地在我们的Angular组件中控制Bootstrap组件。
- en: The better way to integrate Bootstrap with our Angular application is to use
    the `ng-bootstrap` package. This package allows us to use an Angular directive
    for Bootstrap and to manage them in our components. At the time of writing, this
    is the most comprehensive, well maintained, and well integrated package that allows
    us to use Bootstrap in Angular.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 将Bootstrap与我们的Angular应用程序集成的更好方法是使用`ng-bootstrap`包。该包允许我们在我们的组件中使用Angular指令来管理Bootstrap。在撰写本文时，这是最全面、维护良好且与Angular集成良好的包，允许我们在Angular中使用Bootstrap。
- en: To explore Bootstrap, we will build upon our JSON API for the Marvel Cinematic
    Universe used in [Chapter 7](8eacfd6f-0cc3-49d5-9c85-f823dad66ad6.xhtml), *Asynchronous
    Programming Using Observables* and [Chapter 9](64f5991e-76eb-41dd-818c-0e46c41c168b.xhtml),
    *A**dvanced Forms in Angular*.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 为了探索Bootstrap，我们将在[第7章](8eacfd6f-0cc3-49d5-9c85-f823dad66ad6.xhtml)，*使用可观察对象进行异步编程*和[第9章](64f5991e-76eb-41dd-818c-0e46c41c168b.xhtml)，*Angular中的高级表单*中使用的Marvel
    Cinematic Universe的JSON API基础上构建。
- en: You can find the code for [Chapter 9](64f5991e-76eb-41dd-818c-0e46c41c168b.xhtml),
    *Advanced Forms in Angular* at [https://github.com/MathieuNls/mastering-](https://github.com/MathieuNls/mastering-angular2/tree/master/chap9)[angular](https://github.com/MathieuNls/mastering-angular2/tree/master/chap9)[/tree/master/chap9](https://github.com/MathieuNls/mastering-angular2/tree/master/chap9).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[https://github.com/MathieuNls/mastering-angular2/tree/master/chap9](https://github.com/MathieuNls/mastering-angular2/tree/master/chap9)找到《第9章》，*Angular中的高级表单*的代码。
- en: 'To clone this code into a new repository called `angular-bootstrap`, use the
    following commands:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要将此代码克隆到名为`angular-bootstrap`的新存储库中，请使用以下命令：
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: These commands pull the latest version of the GitHub repository containing the
    code for this book to a folder named `angular-bootstrap`. Then, we go into the
    `angular-bootstrap` folder and prune everything that is not inside the [Chapter
    9](64f5991e-76eb-41dd-818c-0e46c41c168b.xhtml), *Advanced Forms in Angular* directory.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这些命令将GitHub存储库的最新版本拉到名为`angular-bootstrap`的文件夹中。然后，我们进入`angular-bootstrap`文件夹，并清除不在[第9章](64f5991e-76eb-41dd-818c-0e46c41c168b.xhtml)
    *Angular中的高级表单*目录中的所有内容。
- en: 'Now let''s install the `ng-bootstrap` package:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们安装`ng-bootstrap`包：
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now, in `src/app/app.module.ts`, import the package `import {NgbModule}` from
    `@ng-bootstrap/ng-bootstrap` and add `NgbModule.forRoot()` to the list of imports
    for the `AppModule` class. It should look like this, if you reused the code from
    [Chapter 9](64f5991e-76eb-41dd-818c-0e46c41c168b.xhtml), *Advanced Forms in Angular*:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在`src/app/app.module.ts`中，导入`import {NgbModule}` from `@ng-bootstrap/ng-bootstrap`包，并将`NgbModule.forRoot()`添加到`AppModule`类的导入列表中。如果您重用了[第9章](64f5991e-76eb-41dd-818c-0e46c41c168b.xhtml)
    *Angular中的高级表单*中的代码，它应该是这样的：
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This package allows us to get rid of the jQuery and `bootstrap.js` dependencies,
    but, unfortunately, it does not include the `bootstrap.css`. It contains the required
    styles for the grid system and the components we are about to use.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这个包允许我们摆脱jQuery和`bootstrap.js`的依赖，但不幸的是，它不包括`bootstrap.css`。它包含了我们即将使用的网格系统和组件所需的样式。
- en: 'Go to [http://getbootstrap.com/](http://getbootstrap.com/) and import the following
    displayed link in your `src/index.html`:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 前往[http://getbootstrap.com/](http://getbootstrap.com/)，并在`src/index.html`中导入以下显示的链接：
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Upon these small changes, we can already see that Bootstrap is taking over our
    style. In the following picture, the left side is what our form looked like at
    the end of [Chapter 9](64f5991e-76eb-41dd-818c-0e46c41c168b.xhtml), *Advanced
    Forms in Angular*.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这些小改变，我们已经可以看到Bootstrap正在接管我们的样式。在下面的图片中，左边是我们在[第9章](64f5991e-76eb-41dd-818c-0e46c41c168b.xhtml)
    *Angular中的高级表单*结束时表单的样子。
- en: 'The right side, however, is what our form looks like now. As you can see, there
    are small differences here and there. For example, the `h1` tag, the error field,
    and the inputs have different styles:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，右边是我们现在表单的样子。正如您所看到的，这里和那里有一些小的不同。例如，`h1`标记，错误字段和输入的样式不同：
- en: '![](assets/561f8ba8-175a-4af1-8272-060cfc726aee.png)Before and after Bootstrap.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/561f8ba8-175a-4af1-8272-060cfc726aee.png)Bootstrap之前和之后。'
- en: 'If we use the Google Chrome inspection features, we can clearly see that the
    applied style for our `h1` markup comes from http://maxcdn.bootstrapcdn.com, as
    shown in the following screenshot:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们使用Google Chrome的检查功能，我们可以清楚地看到我们的`h1`标记的应用样式来自http://maxcdn.bootstrapcdn.com，如下面的屏幕截图所示：
- en: '![](assets/c2bdb3bf-3fb2-4cf5-9ec4-d3f546aa165b.png)Chrome inspect style.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/c2bdb3bf-3fb2-4cf5-9ec4-d3f546aa165b.png)Chrome检查样式。'
- en: 'That is it: We''re done with the initialization of Bootstrap. Let''s learn
    how to use the Angular directives for Bootstrap.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样：我们完成了Bootstrap的初始化。让我们学习如何使用Angular指令来使用Bootstrap。
- en: Understanding the grid system
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解网格系统
- en: In this chapter, we are more concerned with learning how to use the different
    Bootstrap directives for Angular than learning about Sass mixins and other presentation
    skills. In other words, the advanced features of the grid system fall outside
    the scope of this chapter. However, in this section, I'll quickly introduce what
    the grid system is and give an overview of how to use it.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们更关心学习如何使用不同的Angular Bootstrap指令，而不是学习Sass混合和其他演示技巧。换句话说，网格系统的高级功能超出了本章的范围。然而，在本节中，我将快速介绍网格系统是什么，以及如何使用它的概述。
- en: If you have used Bootstrap before, and, more particularly, have used the grid
    system, you can skip this section and go directly to the next one, where we learn
    how to use the accordion directive.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你以前使用过Bootstrap，尤其是使用过网格系统，你可以跳过这一部分，直接进入下一部分，在那里我们学习如何使用手风琴指令。
- en: So, the grid system splits our presentation into twelve columns. The size of
    the columns can be extra small, small, medium, large, and extra large. The size
    of the columns can be manually set via the CSS class prefix (`col-xs`, `col-sm`,
    `col-md`, `col-lg`, and `col-xl` respectively) and corresponds to different screen
    widths (less than 540px, 540px, 720px, 960px, and 1140px, respectively).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，网格系统将我们的演示分成了十二列。列的大小可以是额外小、小、中、大和额外大。列的大小可以通过CSS类前缀（分别是`col-xs`、`col-sm`、`col-md`、`col-lg`和`col-xl`）手动设置，并对应不同的屏幕宽度（小于540像素、540像素、720像素、960像素和1140像素）。
- en: 'To get an idea of how to leverage the grid system to separate our presentation,
    let''s add the following to `src/app/app.component.html` just after our `<h1>{{title}}</h1>`
    markup:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 为了了解如何利用网格系统来分隔我们的演示，让我们在`src/app/app.component.html`中的`<h1>{{title}}</h1>`标记后面添加以下内容：
- en: '[PRE4]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: As you can see, we have several CSS classes at work here. First, let us look
    at the container. This one is mandatory and defines the space on which the Bootstrap
    grid system will be applied. Then, we have rows that contain `col- divs`. Each
    row occupies the full width of the screen and is divided into columns. The actual
    width of the columns depends on the number you used at the end of the column class
    declaration (4, 8, 6, and so on). Knowing that the rows are separated into 12
    columns, and that we used the `col-md` class prefix, we can extrapolate that the
    maximum size of a row is 720px. Consequently, each column is 60px wide. Within
    the first row, we use the `-1` suffix for our declaration; hence, we have 60px-wide
    column (that is, the size of the screen width divided by 12). On the second row,
    however, we use the `-8` and the `-4` suffixes.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，这里有几个CSS类在起作用。首先，让我们看看容器。这是必需的，它定义了Bootstrap网格系统将应用的空间。然后，我们有包含`col-`的行。每行占据屏幕的整个宽度，并被分成列。列的实际宽度取决于你在列类声明的末尾使用的数字（4、8、6等）。知道行被分成12列，我们使用了`col-md`类前缀，我们可以推断出一行的最大尺寸是720像素。因此，每列宽60像素。在第一行中，我们在我们的声明中使用了`-1`后缀；因此，我们有60像素宽的列（即屏幕宽度除以12）。然而，在第二行，我们使用了`-8`和`-4`后缀。
- en: This means that we will have one column that will be eight times the width of
    `a-1` column (480px) and another column that will be four times the width of `a-1`
    column (240px). In the third row, we use three four columns and, finally, in the
    fourth row, we have two six columns.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们将有一列的宽度是`a-1`列的8倍（480像素），另一列的宽度是`a-1`列的4倍（240像素）。在第三行，我们使用了三个四列，最后，在第四行，我们有两个六列。
- en: 'To see what is happening, add the following to `app/app.component.css`:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看发生了什么，请在`app/app.component.css`中添加以下内容：
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This piece of CSS will add a background and border to any `col` classes, regardless
    of the prefix or suffix they might have:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这段CSS将为任何`col`类添加背景和边框，无论它们可能具有的前缀或后缀是什么：
- en: '![](assets/d9fcdca8-0f31-4b77-8421-ecfb8de03649.png)The grid system in action.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 网格系统的运行。
- en: As you can see in the preceding picture, the space is nicely divided as planned.
    Now, that's not the real strength of the grid system. The main strength is that
    the columns would automatically stack on top of each other if the screen width
    became smaller than 720px.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在上图中所看到的，空间被很好地按计划划分。现在，这并不是网格系统的真正优势。主要优势在于，如果屏幕宽度变小于720像素，列会自动堆叠在彼此上面。
- en: 'On an iPhone 6, for example, whose screen is 375px in width, all the columns
    will be stacked as shown in the following screenshot:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在iPhone 6上，其屏幕宽度为375px，所有列将堆叠在一起，如下截图所示：
- en: '![](assets/aab631a1-971c-48c6-8b31-1a25818857cc.png)The grid system on an iPhone
    6.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/aab631a1-971c-48c6-8b31-1a25818857cc.png)iPhone 6上的网格系统。'
- en: 'Here''s another example from the official documentation, found at [https://v4-alpha.getbootstrap.com/layout/grid/](https://v4-alpha.getbootstrap.com/layout/grid/):'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这是官方文档中的另一个例子，可以在[https://v4-alpha.getbootstrap.com/layout/grid/](https://v4-alpha.getbootstrap.com/layout/grid/)找到：
- en: '[PRE6]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'I will not go any further in detailing the grid system, but know that you can
    find a lot of awesome books about this topic in the Packt Library. Just look up
    the following:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我不会详细介绍网格系统，但知道你可以在Packt Library找到很多关于这个主题的精彩书籍。只需查找以下内容：
- en: '*Mastering Bootstrap 4*'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*精通Bootstrap 4*'
- en: '*Bootstrap 4 Blueprints*'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Bootstrap 4蓝图*'
- en: Using Bootstrap directives
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Bootstrap指令
- en: In this section, we will learn how to use some of the most commonly used Bootstrap
    directives to build your application.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何使用一些最常用的Bootstrap指令来构建您的应用程序。
- en: Accordion
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 手风琴
- en: The first directive we will overview is the accordion directive. Accordion allows
    you to create a different panel of content that can be displayed independently
    by clicking its respective header.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先概述手风琴指令。手风琴允许您创建一个可以通过单击其各自的标题独立显示的不同内容面板。
- en: We will use the form we made back in [Chapter 9](64f5991e-76eb-41dd-818c-0e46c41c168b.xhtml),
    *Advanced Forms in Angular*, which allows the user to add movies in the Marvel
    Cinematic Universe, to experiment with accordion. The goal here is to have one
    panel for the form and another panel for the enumeration of the movies.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用我们在[第9章](64f5991e-76eb-41dd-818c-0e46c41c168b.xhtml)中制作的表单，*Angular中的高级表单*，允许用户在漫威电影宇宙中添加电影，以实验手风琴。这里的目标是为表单设置一个面板，为电影的枚举设置另一个面板。
- en: 'Let''s start by studying the minimal HTML needed to have a Bootstrap accordion,
    which is shown as follows:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从研究创建Bootstrap手风琴所需的最小HTML开始，如下所示：
- en: '[PRE7]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The previous HTML template will result in the following:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的HTML模板将产生以下结果：
- en: '![](assets/3aa4acce-4fca-4bda-93d7-3a430b529a5d.png)A simple accordion.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/3aa4acce-4fca-4bda-93d7-3a430b529a5d.png)一个简单的手风琴。'
- en: 'Analyzing the preceding code snippet, we can see the following features:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 分析前面的代码片段，我们可以看到以下特点：
- en: '`ngb-accordion` : This is the main accordion directive. It defines an accordion
    that will contain `ngb-panel`.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ngb-accordion`：这是主要的手风琴指令。它定义了一个包含`ngb-panel`的手风琴。'
- en: '`ngb-panel:` This represents a single panel of the accordion. Its visibility
    can be toggled by clicking on the panel title. `ngb-panel` contains a template
    that can be used for the title or the content.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ngb-panel：` 这代表手风琴的一个面板。可以通过单击面板标题来切换其可见性。`ngb-panel`包含一个可以用于标题或内容的模板。'
- en: '`<template ngbPanelContent>` : This contains the title or the content of a
    given panel.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<template ngbPanelContent>`：这包含给定面板的标题或内容。'
- en: '`<template ngbPanelTitle>:` This contains the title.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<template ngbPanelTitle>：` 这包含标题。'
- en: 'So far, everything is fairly simple. Now, where it becomes powerful is when
    you manage it from your TypeScript component. First of all, the `ngb-accordion`
    directive has three different `@Input` properties that we leverage. The first
    one is `activeIds`, which is `string[]` and contains the IDs of the panel you
    wish to be opened. Panel IDs are auto-generated from `ngb-panel-0`. The panel
    IDs are generated with the format `ngb-panel-x`. The second `@Input` is a Boolean: `closeOthers`.
    This one allows you to specify whether only one panel should be opened at a time.
    Finally, the `string` type is used to specify the type of the accordion in terms
    of its style. In Bootstrap, four types are recognized: `success`, `info`, `warning`,
    and `danger`.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，一切都相当简单。现在，它变得强大的地方是当您从您的TypeScript组件中管理它时。首先，`ngb-accordion`指令有三个不同的`@Input`属性，我们利用了它们。第一个是`activeIds`，它是`string[]`类型，包含您希望打开的面板的ID。面板ID是从`ngb-panel-0`自动生成的。面板ID的格式为`ngb-panel-x`。第二个`@Input`是一个布尔值：`closeOthers`。这允许您指定是否一次只能打开一个面板。最后，使用`string`类型来指定手风琴的类型。在Bootstrap中，有四种类型被识别：`success`、`info`、`warning`和`danger`。
- en: In addition to these three `@Inputs`, the `ngb-accordion` directive provides
    an `@Output` named `panelChange`. This `@Output` will fire each time a panel's
    visibility is about to be toggled.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这三个`@Inputs`之外，`ngb-accordion`指令还提供了一个名为`panelChange`的`@Output`。这个`@Output`会在每次面板的可见性即将被切换时触发。
- en: 'Let''s experiment with these `@Input` and `@Output` properties by transforming
    `app/app.component.html` to the following:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过将`app/app.component.html`转换为以下内容来尝试这些`@Input`和`@Output`属性：
- en: '[PRE8]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Here, we used `[activeIds]="activeIds"`, `type="success"`, `closeOthers="true"`,
    and `(panelChange)=pannelChanged($event)` to bind to a variable named `activeIds`
    in our component, set the type of the form to `success`, and set `closeOthers`
    to true. Then, we bound a method named `pannelChanged` to the `panelChange` output.
    In the `app.component.ts`, we need to add the `activeIds` variable and the `pannelChanged`
    method as follows:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们使用了`[activeIds]="activeIds"`、`type="success"`、`closeOthers="true"`和`(panelChange)=pannelChanged($event)`来绑定到我们组件中的一个名为`activeIds`的变量，将表单类型设置为`success`，并将`closeOthers`设置为true。然后，我们将一个名为`pannelChanged`的方法绑定到`panelChange`输出。在`app.component.ts`中，我们需要添加`activeIds`变量和`pannelChanged`方法如下：
- en: '[PRE9]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Here, `private activeIds = ["ngb-panel-1"];` allows us to define that the `panel-1`
    (the second one) should be opened by default and the `pannelChanged` method should
    receive an event payload composed of a `panelId:string` and a `nextState:boolean`.
    We log both payload attributes.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`private activeIds = ["ngb-panel-1"];`允许我们定义`panel-1`（第二个）应该默认打开，并且`pannelChanged`方法应该接收一个由`panelId:string`和`nextState:boolean`组成的事件负载。我们记录了这两个负载属性。
- en: 'The app now looks like the one shown in the following screenshot:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序现在看起来像下面截图中显示的那样：
- en: '![](assets/9aea1b72-1074-4da4-9724-8c8a73dec9aa.png)A TypeScript--managed accordion.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/9aea1b72-1074-4da4-9724-8c8a73dec9aa.png)一个由TypeScript管理的手风琴。'
- en: 'When you toggle the panels, it logs the following in the console:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 当您切换面板时，控制台会记录以下内容：
- en: '[PRE10]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Alert
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 警报
- en: 'The next directive we will explore in this chapter is the `ng-alert`. In the
    Bootstrap vocabulary, alerts are important information that is displayed to the
    user in a colored `div`. There exist four types of alert: `success`, `info`, `warning`,
    and `danger`.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中我们将探讨的下一个指令是`ng-alert`。在Bootstrap词汇中，警报是以有色`div`形式显示给用户的重要信息。有四种类型的警报：`success`、`info`、`warning`和`danger`。
- en: 'To create a Bootstrap alert, the minimum viable HTML template is as follows:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个Bootstrap警报，最小可行的HTML模板如下：
- en: '[PRE11]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The result of this code is shown in the following screenshot:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码的结果如下截图所示：
- en: '![](assets/93c0e03c-2c1a-4d86-a030-0dab9b1456bf.png)A basic alert.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/93c0e03c-2c1a-4d86-a030-0dab9b1456bf.png)一个基本的警报。'
- en: Similar to the accordion, the alert directive provides some `@Input` and `@Output`.
    We can use as `@Input` the `dismissible:boolean`, which manages the dismissibility
    of the alert, and `type:string`, which accepts `success`, `info`, `warning`, and
    `danger`.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 与手风琴类似，警报指令提供了一些`@Input`和`@Output`。我们可以使用`@Input`作为`dismissible:boolean`，它管理警报的可解除性，以及`type:string`，它接受`success`、`info`、`warning`和`danger`。
- en: 'To make our form a bit more Bootstrappy, we can replace our error messages
    with alerts. For now, in the forms the error messages look like this:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使我们的表单更具Bootstrap风格，我们可以用警报替换我们的错误消息。目前，在表单中，错误消息看起来像这样：
- en: '[PRE12]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now the objective is to have the following:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 现在的目标是有以下内容：
- en: '[PRE13]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'For each of the fields in the preceding snippet, the aforementioned code will
    produce the following:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述片段中的每个字段，上述代码将产生以下结果：
- en: '![](assets/1e17b924-e47c-4332-b840-9f7d9bd9d425.png)Danger alert as form errors.'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/1e17b924-e47c-4332-b840-9f7d9bd9d425.png)危险警报作为表单错误。'
- en: Datepicker
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 日期选择器
- en: The next directive in this chapter is the datepicker. Regardless of the technology
    you use, dates are always somewhat finicky as every vendor proposes many formats.
    Also, date internationalization makes things even harder.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中的下一个指令是日期选择器。无论您使用什么技术，日期总是有些棘手，因为每个供应商都提出了许多格式。此外，日期国际化使事情变得更加困难。
- en: 'Luckily, Bootstrap comes with a simple enough datepicker that allows the user
    to pick a date in a pop-up calendar graphically. The code for this is given as
    follows:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，Bootstrap带有一个足够简单的日期选择器，允许用户在弹出的日历中选择日期。其代码如下所示：
- en: '[PRE14]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Many things are going on here. First, we have a `formControl` input that has
    a placeholder set to `yyyy-mm-dd`. The placeholder you define is important as
    it will act as a mandatory formatter for the data your users pick. For the syntax
    of the formatter, you can use every classical symbol for dates (for example, d,
    D, j, l, N, S, w, z, and so on). In other words, the dates we enter will automatically
    match this pattern. Then, we have `ngbDatepicker #d="ngbDatepicker"`. The `ngbDatepicker`
    defines that our input is a `ngbDatepicker` and the `#dp="ngbDatepicker"` allows
    us to create a local reference to our input. This local reference, named `dp`,
    is used on the `(click)` event of the following `div: (click)="dp.toggle()"`.
    This `div` contains the image of the calendar. On clicking it, a dynamic calendar
    will pop up and we will be able to choose a date.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '这里发生了很多事情。首先，我们有一个`formControl`输入，其占位符设置为`yyyy-mm-dd`。您定义的占位符很重要，因为它将作为用户选择的数据的强制格式化程序。对于格式化程序的语法，您可以使用日期的每个经典符号（例如，d、D、j、l、N、S、w、z等）。换句话说，我们输入的日期将自动匹配此模式。然后，我们有`ngbDatepicker
    #d="ngbDatepicker"`。`ngbDatepicker`定义了我们的输入是一个`ngbDatepicker`，`#dp="ngbDatepicker"`允许我们创建对我们的输入的本地引用。这个名为`dp`的本地引用在以下`div`的`(click)`事件上使用：`(click)="dp.toggle()"`。这个`div`包含了日历的图像。点击它，一个动态的日历将弹出，我们将能够选择一个日期。'
- en: 'This HTML will give us the following:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这个HTML将给我们以下内容：
- en: '![](assets/59629aed-ee64-4b4e-9b08-d5869cd5962a.png)datepicker.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/59629aed-ee64-4b4e-9b08-d5869cd5962a.png)日期选择器。'
- en: 'Then, once the `click` event is triggered, the following will be displayed
    :'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，一旦触发了`click`事件，将显示如下内容：
- en: '![](assets/1c9dd50c-abfa-45a2-a4f8-ebe97a16cddc.png)datepicker clicked.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/1c9dd50c-abfa-45a2-a4f8-ebe97a16cddc.png)日期选择器被点击。'
- en: 'To improve our management of the Marvel Cinematic Universe, we can change the
    `release_date` field to a datepicker. For now, the `release_date` field looks
    like the following:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 为了改善我们对漫威电影宇宙的管理，我们可以将`release_date`字段更改为日期选择器。目前，`release_date`字段看起来像这样：
- en: '[PRE15]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'We have the input and the Bootstrap alert if the field is not valid. The Bootstrap
    alert is active by default (that is, when the field is empty). Let''s transform
    our input to the following:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 如果字段无效，我们会有输入和Bootstrap警报。Bootstrap警报默认是活动的（即当字段为空时）。让我们将我们的输入转换为以下内容：
- en: '[PRE16]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'What''s different here is that we link the input to our `formControl`. Indeed,
    in [Chapter 9](64f5991e-76eb-41dd-818c-0e46c41c168b.xhtml), *Advanced Forms in
    Angular,* we defined the form as follows:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的不同之处在于我们将输入链接到了我们的`formControl`。实际上，在[第9章](64f5991e-76eb-41dd-818c-0e46c41c168b.xhtml)
    *Angular中的高级表单*中，我们定义了表单如下：
- en: '[PRE17]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'So, we have a `release_date` field that is mandatory. The HTML input defines
    a Two-way Data Binding to the `release_date` field with `[(ngModel)]="movie.release_date"`,
    and, in addition, we need to have the `formControlName="release_date"` attribute
    inside the input. After implementing that, the following will be displayed on
    the screen:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我们有一个必填的`release_date`字段。HTML输入定义了与`release_date`字段的双向数据绑定，带有`[(ngModel)]="movie.release_date"`，此外，我们还需要在输入框内添加`formControlName="release_date"`属性。实施后，屏幕上将显示以下内容：
- en: '![](assets/08e4e8c9-4218-4256-8dcc-68593dbfb171.png)datepicker for the MCU.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/08e4e8c9-4218-4256-8dcc-68593dbfb171.png)MCU的日期选择器。'
- en: Tooltip
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工具提示
- en: Next up, we have the tooltip directive, which allows us to display informative
    text at the left, right, top, or bottom of a given set of elements.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们有tooltip指令，它允许我们在给定一组元素的左侧、右侧、顶部或底部显示信息性文本。
- en: 'The tooltip directive is one of the simplest ones. Indeed, you only have to
    add two attributes to the element you wish to enhance: placement and `ngbTooltip`.
    The value of placement can be top, bottom, left, or right, while the value of
    `ngbTooltip` is the text you wish to display.'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: tooltip指令是最简单的之一。实际上，你只需要为你希望增强的元素添加两个属性：placement和`ngbTooltip`。placement的值可以是top、bottom、left或right，而`ngbTooltip`的值是你希望显示的文本。
- en: 'Let''s modify the label for the `movie_id` field:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们修改`movie_id`字段的标签：
- en: '[PRE18]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Here, we kept the alert and the input as is. However, we added the placement
    and `ngbTooltip` attributes to the label. As a result, the text Title of your
    movie will be displayed on top of the `movie_id` label when we hover over it.
    This is shown in the following screenshot:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们保持了警报和输入不变。但是，我们在标签中添加了placement和`ngbTooltip`属性。结果，当我们悬停在`movie_id`标签上时，电影标题将显示在顶部。如下截图所示：
- en: '![](assets/f0fc6a9c-340f-43a5-8abf-2534c96c0043.png)A tooltip on movie_id.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/f0fc6a9c-340f-43a5-8abf-2534c96c0043.png)movie_id上的工具提示。'
- en: Progress bar
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进度条
- en: There exist some other Bootstrap components that we could use to enhance our
    form; however, too many will quickly become a case of overkill in terms of usability.
    For example, it will be tricky to integrate a Progress bar in to our form. What
    we can do, however, is add a panel to our accordion for each new Bootstrap directive
    we want to test.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些其他的Bootstrap组件可以用来增强我们的表单；然而，太多的组件很快就会成为可用性过度的情况。例如，将进度条集成到我们的表单中将会很棘手。然而，我们可以为我们想要测试的每个新的Bootstrap指令添加一个手风琴面板。
- en: 'Let''s add a panel for the Progress bar:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们为进度条添加一个面板：
- en: '[PRE19]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The `progressbar` directive is another simple directive. It takes two `@Input`
    attributes: type and value. As usual, the type can be a `success`, `danger`, `warning`,
    or `info`. The value attribute can be bound to a TypeScript variable instead of
    hardcoding 25, as I did.'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '`progressbar`指令是另一个简单的指令。它有两个`@Input`属性：type和value。和往常一样，type可以是`success`、`danger`、`warning`或`info`。value属性可以绑定到一个TypeScript变量，而不是像我做的那样硬编码为25。'
- en: 'Here''s the result:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 这是结果：
- en: '![](assets/cd71611f-8ba6-450d-a78f-66f416bd14f9.png)Progress bar on movie_id.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/cd71611f-8ba6-450d-a78f-66f416bd14f9.png)movie_id上的进度条。'
- en: Rating
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评分
- en: The rating directive is also fairly well known. It allows users to rate something,
    or to display a given rate.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 评分指令也是非常出名的。它允许用户对某物进行评分，或者显示给定的评分。
- en: As expected, this directive is simple to understand. It has a rate input that
    you can hardcode (for example, `"rate"=25`), bind (`[rate]="someVariable"`), or
    apply Two-way Data Binding (`[(rate)]="someVariable"`). In addition to the rate
    input, you can use `[readonly]="read-only"` to make your rate bar non-modifiable.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 正如预期的那样，这个指令很容易理解。它有一个评分输入，您可以硬编码（例如，`"rate"=25`），绑定（`[rate]="someVariable"`），或者应用双向数据绑定（`[(rate)]="someVariable"`）。除了评分输入，您还可以使用`[readonly]="read-only"`来使您的评分条不可修改。
- en: By default, the rating bar consists of 10 stars. The rate value can range from
    0 to 10, including decimal numbers.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，评分条由10颗星组成。评分值可以从0到10，包括小数。
- en: 'Here''s an example of a default rate bar inside a new panel:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个新面板内默认评分条的示例：
- en: '[PRE20]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'This will produce the following result:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生以下结果：
- en: '![](assets/67f6dba3-16d6-4c86-929a-4351bed46fed.png)Rate bar.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/67f6dba3-16d6-4c86-929a-4351bed46fed.png)评分条。'
- en: Summary
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we saw some of the most popular Bootstrap components out there.
    We learned how to use them with native Angular directives provided by the ng2-Bootstrap
    package. We did not, however, explore every single Bootstrap component there is.
    You can have a look at the official documentation hosted at [https://ng-bootstrap.github.io/](https://ng-bootstrap.github.io/).
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看到了一些最受欢迎的Bootstrap组件。我们学会了如何使用ng2-Bootstrap包提供的原生Angular指令来使用它们。然而，我们并没有探索每一个Bootstrap组件。您可以查看托管在[https://ng-bootstrap.github.io/](https://ng-bootstrap.github.io/)的官方文档。
- en: In the next chapter, you will learn how to test your Angular application with
    unit testing.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，您将学习如何使用单元测试来测试您的Angular应用程序。
