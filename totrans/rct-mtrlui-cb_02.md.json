["```js\nimport React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  flex: {\n    flex: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  }\n});\n\nconst FixedPosition = withStyles(styles)(({ classes }) => (\n  <div className={classes.root}>\n    <AppBar position=\"fixed\">\n      <Toolbar>\n        <IconButton\n          className={classes.menuButton}\n          color=\"inherit\"\n          aria-label=\"Menu\"\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography\n          variant=\"title\"\n          color=\"inherit\"\n          className={classes.flex}\n        >\n          Title\n        </Typography>\n        <Button color=\"inherit\">Login</Button>\n      </Toolbar>\n    </AppBar>\n    <ul>\n      {new Array(500).fill(null).map((v, i) => (\n        <li key={i}>{i}</li>\n      ))}\n    </ul>\n  </div>\n));\n\nexport default FixedPosition;\n```", "```js\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  flex: {\n    flex: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  toolbarMargin: theme.mixins.toolbar\n});\n```", "```js\n{\n  \"minHeight\": 56,\n  \"@media (min-width:0px) and (orientation: landscape)\": {\n    \"minHeight\": 48\n  },\n  \"@media (min-width:600px)\": {\n    \"minHeight\": 64\n  }\n}\n```", "```js\n<div className={classes.root}>\n  <AppBar position=\"fixed\">\n    <Toolbar>\n      <IconButton\n        className={classes.menuButton}\n        color=\"inherit\"\n        aria-label=\"Menu\"\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography\n        variant=\"title\"\n        color=\"inherit\"\n        className={classes.flex}\n      >\n        Title\n      </Typography>\n      <Button color=\"inherit\">Login</Button>\n    </Toolbar>\n  </AppBar>\n  <div className={classes.toolbarMargin} />\n  <ul>\n    {new Array(500).fill(null).map((v, i) => <li key={i}>{i}</li>)}\n  </ul>\n</div>\n```", "```js\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Fade from '@material-ui/core/Fade';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  flex: {\n    flex: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  toolbarMargin: theme.mixins.toolbar\n});\n\nconst ScrolledAppBar = withStyles(styles)(\n  class extends Component {\n    state = {\n      scrolling: false,\n      scrollTop: 0\n    };\n\n    onScroll = e => {\n      this.setState(state => ({\n        scrollTop: e.target.documentElement.scrollTop,\n        scrolling:\n          e.target.documentElement.scrollTop > state.scrollTop\n      }));\n    };\n\n    shouldComponentUpdate(props, state) {\n      return this.state.scrolling !== state.scrolling;\n    }\n\n    componentDidMount() {\n      window.addEventListener('scroll', this.onScroll);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('scroll', this.onScroll);\n    }\n\n    render() {\n      const { classes } = this.props;\n\n      return (\n        <Fade in={!this.state.scrolling}>\n          <AppBar>\n            <Toolbar>\n              <IconButton\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"Menu\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography\n                variant=\"h6\"\n                color=\"inherit\"\n                className={classes.flex}\n              >\n                My Title\n              </Typography>\n              <Button color=\"inherit\">Login</Button>\n            </Toolbar>\n          </AppBar>\n        </Fade>\n      );\n    }\n  }\n);\n\nconst AppBarWithButtons = withStyles(styles)(\n  ({ classes, title, buttonText }) => (\n    <div className={classes.root}>\n      <ScrolledAppBar />\n      <div className={classes.toolbarMargin} />\n      <ul>\n        {new Array(500).fill(null).map((v, i) => (\n          <li key={i}>{i}</li>\n        ))}\n      </ul>\n    </div>\n  )\n);\n\nexport default AppBarWithButtons;\n```", "```js\nstate = {\n  scrolling: false,\n  scrollTop: 0\n};\n\nonScroll = e => {\n  this.setState(state => ({\n    scrollTop: e.target.documentElement.scrollTop,\n   scrolling:\n      e.target.documentElement.scrollTop > state.scrollTop\n  }));\n};\n\ncomponentDidMount() {\n  window.addEventListener('scroll', this.onScroll);\n}\n\ncomponentWillUnmount() {\n  window.removeEventListener('scroll', this.onScroll);\n}\n```", "```js\n<Fade in={!this.state.scrolling}>\n  <AppBar>\n    <Toolbar>\n      <IconButton\n        className={classes.menuButton}\n        color=\"inherit\"\n        aria-label=\"Menu\"\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography\n        variant=\"title\"\n        color=\"inherit\"\n        className={classes.flex}\n      >\n        My Title\n      </Typography>\n      <Button color=\"inherit\">Login</Button>\n    </Toolbar>\n  </AppBar>\n</Fade>\n```", "```js\n<Grow in={!this.state.scrolling}>\n  <AppBar>\n    <Toolbar>\n      <IconButton\n        className={classes.menuButton}\n        color=\"inherit\"\n        aria-label=\"Menu\"\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography\n        variant=\"title\"\n        color=\"inherit\"\n        className={classes.flex}\n      >\n        My Title\n      </Typography>\n      <Button color=\"inherit\">Login</Button>\n    </Toolbar>\n  </AppBar>\n</Grow>\n```", "```js\nimport React, { Fragment, Component } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  flex: {\n    flex: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  toolbarMargin: theme.mixins.toolbar\n});\n\nconst MyToolbar = withStyles(styles)(\n  class extends Component {\n    static defaultProps = {\n      MenuItems: ({ closeMenu }) => (\n        <Fragment>\n          <MenuItem onClick={closeMenu}>Profile</MenuItem>\n          <MenuItem onClick={closeMenu}>My account</MenuItem>\n          <MenuItem onClick={closeMenu}>Logout</MenuItem>\n        </Fragment>\n      ),\n      RightButton: () => <Button color=\"inherit\">Login</Button>\n    };\n\n    state = { anchor: null };\n\n    closeMenu = () => this.setState({ anchor: null });\n\n    render() {\n      const { classes, title, MenuItems, RightButton } = this.props;\n\n      return (\n        <Fragment>\n          <AppBar>\n            <Toolbar>\n              <IconButton\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"Menu\"\n                onClick={e =>\n                  this.setState({ anchor: e.currentTarget })\n                }\n              >\n                <MenuIcon />\n              </IconButton>\n              <Menu\n                anchorEl={this.state.anchor}\n                open={Boolean(this.state.anchor)}\n                onClose={this.closeMenu}\n              >\n                <MenuItems closeMenu={this.closeMenu} />\n              </Menu>\n              <Typography\n                variant=\"title\"\n                color=\"inherit\"\n                className={classes.flex}\n              >\n                {title}\n              </Typography>\n              <RightButton />\n            </Toolbar>\n          </AppBar>\n          <div className={classes.toolbarMargin} />\n        </Fragment>\n      );\n    }\n  }\n);\n\nconst ToolbarAbstraction = withStyles(styles)(\n  ({ classes, ...props }) => (\n    <div className={classes.root}>\n      <MyToolbar {...props} />\n    </div>\n  )\n);\n\nexport default ToolbarAbstraction;\n```", "```js\nrender() {\n  const { classes, title, MenuItems, RightButton } = this.props;\n\n  return (\n    <Fragment>\n      <AppBar>\n        <Toolbar>\n          <IconButton\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={e =>\n              this.setState({ anchor: e.currentTarget })\n            }\n          >\n            <MenuIcon />\n          </IconButton>\n          <Menu\n            anchorEl={this.state.anchor}\n            open={Boolean(this.state.anchor)}\n            onClose={this.closeMenu}\n          >\n            <MenuItems closeMenu={this.closeMenu} />\n          </Menu>\n          <Typography\n            variant=\"title\"\n            color=\"inherit\"\n            className={classes.flex}\n          >\n            {title}\n          </Typography>\n          <RightButton />\n        </Toolbar>\n      </AppBar>\n      <div className={classes.toolbarMargin} />\n    </Fragment>\n  );\n}\n```", "```js\nstatic defaultProps = {\n  MenuItems: ({ closeMenu }) => (\n    <Fragment>\n      <MenuItem onClick={closeMenu}>Profile</MenuItem>\n      <MenuItem onClick={closeMenu}>My account</MenuItem>\n      <MenuItem onClick={closeMenu}>Logout</MenuItem>\n    </Fragment>\n  ),\n  RightButton: () => <Button color=\"inherit\">Login</Button>\n};\n```", "```js\nconst ToolbarAbstraction = withStyles(styles)(\n  ({ classes, ...props }) => (\n    <div className={classes.root}>\n      <MyToolbar\n        MenuItems={({ closeMenu }) => (\n          <Fragment>\n            <MenuItem onClick={closeMenu}>Page 1</MenuItem>\n            <MenuItem onClick={closeMenu}>Page 2</MenuItem>\n            <MenuItem onClick={closeMenu}>Page 3</MenuItem>\n          </Fragment>\n        )}\n        RightButton={() => (\n          <Button color=\"secondary\" variant=\"contained\">\n            Logout\n          </Button>\n        )}\n        {...props}\n      />\n    </div>\n  )\n);\n```", "```js\nimport React, { Fragment, Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  flex: {\n    flex: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  toolbarMargin: theme.mixins.toolbar\n});\n\nconst MyToolbar = withStyles(styles)(\n  class extends Component {\n    static defaultProps = {\n      MenuItems: () => (\n        <Fragment>\n          <MenuItem component={Link} to=\"/\">\n            Home\n          </MenuItem>\n          <MenuItem component={Link} to=\"/page2\">\n            Page 2\n          </MenuItem>\n          <MenuItem component={Link} to=\"/page3\">\n            Page 3\n          </MenuItem>\n        </Fragment>\n      ),\n      RightButton: () => <Button color=\"inherit\">Login</Button>\n    };\n\n    state = { anchor: null };\n\n    closeMenu = () => this.setState({ anchor: null });\n\n    render() {\n      const { classes, title, MenuItems, RightButton } = this.props;\n\n      return (\n        <Fragment>\n          <AppBar>\n            <Toolbar>\n              <IconButton\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"Menu\"\n                onClick={e =>\n                  this.setState({ anchor: e.currentTarget })\n                }\n              >\n                <MenuIcon />\n              </IconButton>\n              <Menu\n                anchorEl={this.state.anchor}\n                open={Boolean(this.state.anchor)}\n                onClose={this.closeMenu}\n              >\n                <MenuItems />\n              </Menu>\n              <Typography\n                variant=\"title\"\n                color=\"inherit\"\n                className={classes.flex}\n              >\n                {title}\n              </Typography>\n              <RightButton />\n            </Toolbar>\n          </AppBar>\n          <div className={classes.toolbarMargin} />\n        </Fragment>\n      );\n    }\n  }\n);\n\nconst WithNavigation = withStyles(styles)(({ classes }) => (\n  <div className={classes.root}>\n    <Route\n      exact\n      path=\"/\"\n      render={() => (\n        <Fragment>\n          <MyToolbar title=\"Home\" />\n          <Typography>Home</Typography>\n        </Fragment>\n      )}\n    />\n    <Route\n      exact\n      path=\"/page2\"\n      render={() => (\n        <Fragment>\n          <MyToolbar title=\"Page 2\" />\n          <Typography>Page 2</Typography>\n        </Fragment>\n      )}\n    />\n    <Route\n      exact\n      path=\"/page3\"\n      render={() => (\n        <Fragment>\n          <MyToolbar title=\"Page 3\" />\n          <Typography>Page 3</Typography>\n        </Fragment>\n      )}\n    />\n  </div>\n));\n\nexport default WithNavigation;\n\n```", "```js\nconst WithNavigation = withStyles(styles)(({ classes }) => (\n  <div className={classes.root}>\n    <Route\n      exact\n      path=\"/\"\n      render={() => (\n        <Fragment>\n          <MyToolbar title=\"Home\" />\n          <Typography>Home</Typography>\n        </Fragment>\n      )}\n    />\n    <Route\n      exact\n      path=\"/page2\"\n      render={() => (\n        <Fragment>\n          <MyToolbar title=\"Page 2\" />\n          <Typography>Page 2</Typography>\n        </Fragment>\n      )}\n    />\n    <Route\n      exact\n      path=\"/page3\"\n      render={() => (\n        <Fragment>\n          <MyToolbar title=\"Page 3\" />\n          <Typography>Page 3</Typography>\n        </Fragment>\n      )}\n    />\n  </div>\n));\n```", "```js\nstatic defaultProps = {\n  MenuItems: () => (\n    <Fragment>\n      <MenuItem component={Link} to=\"/\">\n        Home\n      </MenuItem>\n      <MenuItem component={Link} to=\"/page2\">\n        Page 2\n      </MenuItem>\n      <MenuItem component={Link} to=\"/page3\">\n        Page 3\n      </MenuItem>\n    </Fragment>\n  ),\n  RightButton: () => <Button color=\"inherit\">Login</Button>\n};\n```", "```js\nconst screen = (title, content) => () => (\n  <Fragment>\n    <MyToolbar title={title} />\n    <Typography>{content}</Typography>\n  </Fragment>\n);\n```", "```js\nexport default withStyles(styles)(({ classes }) => (\n  <div className={classes.root}>\n    <Route exact path=\"/\" render={screen('Home', 'Home')} />\n    <Route exact path=\"/page2\" render={screen('Page 2', 'Page 2')} />\n    <Route exact path=\"/page3\" render={screen('Page 3', 'Page 3')} />\n  </div>\n));\n```"]