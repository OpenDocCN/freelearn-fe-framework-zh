- en: Chapter 5. Mixins and the DOM
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Chapter 5. Mixins and the DOM
- en: In the previous chapter, we took a deep dive into React Forms. We took a look
    at building multiple components and interactivity between them, Controller and
    Uncontrolled Components, building Forms and Form elements, and Form events and
    handlers for the events. We build a form to capture cart-checkout flow and orders
    being placed in a multi-step form.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: In the previous chapter, we took a deep dive into React Forms. We took a look
    at building multiple components and interactivity between them, Controller and
    Uncontrolled Components, building Forms and Form elements, and Form events and
    handlers for the events. We build a form to capture cart-checkout flow and orders
    being placed in a multi-step form.
- en: In this chapter, we will focus on abstracting content using mixins and touch
    upon DOM handling.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: In this chapter, we will focus on abstracting content using mixins and touch
    upon DOM handling.
- en: 'Here, we will cover the following points:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 'Here, we will cover the following points:'
- en: Mixins
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mixins
- en: PureRender mixin
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PureRender mixin
- en: React and the DOM
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: React and the DOM
- en: Refs
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Refs
- en: At the end of this chapter, we will be able to abstract and reuse logic across
    our components and learn how to handle DOM from within the components.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: At the end of this chapter, we will be able to abstract and reuse logic across
    our components and learn how to handle DOM from within the components.
- en: Back at the office
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Back at the office
- en: The duo was back at work. Mike entered with a cup of coffee. It was morning
    and the office had just started to buzz.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: The duo was back at work. Mike entered with a cup of coffee. It was morning
    and the office had just started to buzz.
- en: '"So Shawn, we did a lot of complex forms stuff last time. Our cart flow is
    now complete. However, now we have been asked to add a timeout to the cart. We
    need to show a timer to the user that they need to checkout and complete the order
    in 15 minutes."'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '"So Shawn, we did a lot of complex forms stuff last time. Our cart flow is
    now complete. However, now we have been asked to add a timeout to the cart. We
    need to show a timer to the user that they need to checkout and complete the order
    in 15 minutes."'
- en: '"Any idea how we can do this?"'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '"Any idea how we can do this?"'
- en: '"Umm, maintain a state for timer and keep updating every second? Take some
    action when the timer hits zero."'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '"Umm, maintain a state for timer and keep updating every second? Take some
    action when the timer hits zero."'
- en: '"Right! We will use intervals to reduce the timeout values and keep updating
    our views to display the timer. As we have been storing the form data in a single
    place, our `Bookstore` component, let''s go ahead and add a state value that will
    track this timeout value. Let''s change our initial state to something similar
    to the following:"'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '"Right! We will use intervals to reduce the timeout values and keep updating
    our views to display the timer. As we have been storing the form data in a single
    place, our `Bookstore` component, let''s go ahead and add a state value that will
    track this timeout value. Let''s change our initial state to something similar
    to the following:"'
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '"60 X 15, that''s 15 minutes in seconds value. We will also need to add a method
    to keep updating this state so that we can use it freely from here as well as
    the child components."'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '"60 X 15, that''s 15 minutes in seconds value. We will also need to add a method
    to keep updating this state so that we can use it freely from here as well as
    the child components."'
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '"Cool."'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '"Cool."'
- en: '"Now, what we will do is define what are called as mixins."'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '"Now, what we will do is define what are called as mixins."'
- en: '"Mixins?"'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '"Mixins?"'
- en: '"Yeah, mixins allow us to share a code across components. Let''s take a look
    at how we are going to use it before moving ahead."'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '"Yeah, mixins allow us to share a code across components. Let''s take a look
    at how we are going to use it before moving ahead."'
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '"So what we are doing here is nothing much but defining an object. We will
    see how we use it in our components."'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '"所以我们在这里做的 nothing much but defining an object. We will see how we use it in
    our components."'
- en: '"As you can see, what we are trying to achieve here is add a way to track all
    our interval handlers, as follows:"'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '"As you can see, what we are trying to achieve here is add a way to track all
    our interval handlers, as follows:"'
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '"Here, we are first initializing an array to hold instances to intervals that
    we will be creating. Next, we will define a method that can be used to define
    new intervals, as follows:"'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '"Here, we are first initializing an array to hold instances to intervals that
    we will be creating. Next, we will define a method that can be used to define
    new intervals, as follows:"'
- en: '[PRE4]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '"Got it. I see the last bit is defining the `componentWillUnmount` method and
    we have already defined `componentWillMount`; but this isn''t a React component.
    Why do we have these method here?"'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '"Got it. I see the last bit is defining the `componentWillUnmount` method and
    we have already defined `componentWillMount`; but this isn''t a React component.
    Why do we have these method here?"'
- en: '"Oh right. Let''s take a look at the following method first:"'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '"Oh right. Let''s take a look at the following method first:"'
- en: '[PRE5]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '"What this method does is clean up the intervals, which we might have created,
    before we unmount our component."'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '"What this method does is clean up the intervals, which we might have created,
    before we unmount our component."'
- en: '"Got it."'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '"Got it."'
- en: '"Now, as you mentioned, we have two life cycle methods here—`componentWillMount`
    and `componentWillUnmount`."'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '"Now, as you mentioned, we have two life cycle methods here—`componentWillMount`
    and `componentWillUnmount`."'
- en: '"When we start using this in our component, they are called just like the other
    similar methods, which we have in our component for life cycle."'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '"当我们开始在组件中使用这个功能时，它们就像我们组件中其他类似的生命周期方法一样被调用。"'
- en: '"Oh nice. Will both this and the existing method get called?" Shawn asked.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '"哦，很好。这两个方法都会被调用吗？”肖恩问。'
- en: '"Exactly. Now that we have the mixing defined, let''s start using it!"'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '"没错。现在我们已经定义了mixin，让我们开始使用它！"'
- en: '"The first place we want to start using this is on the delivery details page.
    This is as simple as doing the following:"'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '"我们首先想开始使用这个功能的地方是在交付详情页。这就像做以下事情一样简单："'
- en: '[PRE6]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '"Awesome, next we would like to start using this to take care of storing `cartTimout`
    values and updating them. Can you define a mixin to do just that?" asked Mike.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '"太棒了，接下来我们希望开始使用这个功能来存储`cartTimeout`值并更新它们。你能定义一个mixin来完成这个任务吗？”迈克问道。'
- en: '"Okay, I will first define a method to decrement the cart timer, something
    that will keep updating the state. Next, we will need to actually set the timeout,
    to call the method at an interval so that it is called every second to decrement
    the time?"'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '"好的，我将首先定义一个方法来递减购物车计时器，这将保持更新状态。接下来，我们需要实际设置超时，以便每隔一段时间调用该方法，使其每秒调用一次以递减时间？"'
- en: '"Exactly, let''s see how you would do it."'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '"没错，让我们看看你会怎么做。"'
- en: '[PRE7]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '"Nice, that''s exactly what we need. But we missed one piece; we need to be
    able to send this back to that parent component to store back the timer value
    that we are updating here."'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '"太好了，这正是我们需要的。但我们遗漏了一部分；我们需要能够将这个信息发送回父组件以存储我们在这里更新的计时器值。"'
- en: '"We will also take care of passing the current state of timer from the parent
    to the children."'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '"我们还将注意从父组件传递当前计时器的状态到子组件。"'
- en: '"Oh, right."'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '"哦，对了。"'
- en: '"Let''s go back to our parent component to start passing the cart timer value
    to the children. Here''s how our render method should look now:"'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '"让我们回到父组件，开始传递购物车计时器值给子组件。现在我们的渲染方法应该看起来像这样："'
- en: '[PRE8]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '"Notice that we are passing the `updateCartTimeout` method here. This is something
    that we will start using next in our mixin."'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '"请注意，我们在这里传递了`updateCartTimeout`方法。这是我们将在mixin中开始使用的东西。"'
- en: '"Next, we are going to update the `DeliveryDetails` component to start storing
    the `cartTimeout` value."'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '"接下来，我们将更新`DeliveryDetails`组件以开始存储`cartTimeout`值。"'
- en: '[PRE9]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '"With this setup, we can now set up our render method for the delivery options
    page, this should now look similar to the following:"'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '"有了这个设置，我们现在可以设置交付选项页的渲染方法，现在应该看起来像以下这样："'
- en: '[PRE10]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '"We also need to start using the `CartMixin`, so our `mixins` import should
    look similar to the following:"'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '"我们还需要开始使用`CartMixin`，所以我们的`mixins`导入应该看起来像以下这样："'
- en: '[PRE11]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '"Nice, let me see how the shipping information looks like now."'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '"很好，让我看看现在的运输信息看起来怎么样。"'
- en: '![Back at the office](img/4730_05_01.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![回到办公室](img/4730_05_01.jpg)'
- en: '"It works!" exclaimed Shawn.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '"它工作了！”肖恩兴奋地说。'
- en: '"Awesome. Remember, Shawn, now we need to pass the information back to our
    parent component when we change to some other page."'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '"太棒了。记住，肖恩，现在我们需要在切换到其他页面时将信息传递回父组件。"'
- en: '"Yeah, we should add it to the components, where we used the mixin?"'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '"是的，我们应该将其添加到使用了mixin的组件中？"'
- en: '"Better yet, let''s add the following code to the mixin:"'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '"更好的是，让我们将以下代码添加到mixin中："'
- en: '[PRE12]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '"Now our mixin should look similar to the following:"'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '"现在我们的mixin应该看起来像以下这样："'
- en: '[PRE13]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '"Our mixin will now update the current cart value when it gets unmounted."'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '"我们的mixin现在将在组件卸载时更新当前的购物车值。"'
- en: '"We missed one thing that is part of this mixin. We call `this.props.alertCartTimeout()`
    when the timer hits zero."'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '"我们遗漏了一件事，它是这个mixin的一部分。当计时器达到零时，我们调用`this.props.alertCartTimeout()`。"'
- en: '"We are going to define this on the *parent component* and pass it around to
    be called from child component, as follows:"'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '"我们将在父组件上定义这个，并传递它以便从子组件调用，如下所示："'
- en: '[PRE14]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '"Then update our render method to take care when we reach the timeout step,
    as shown in the following:"'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '"然后更新我们的渲染方法，以便在达到超时步骤时进行处理，如下所示："'
- en: '[PRE15]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Let's see how the `DeliveryDetails` component looks after completing it, now:"
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '"让我们看看完成它后`DeliveryDetails`组件看起来怎么样："'
- en: '[PRE16]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '"We are also going to update our `ShippingDetails` component to look similar
    to the following:"'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '"我们还将更新我们的`ShippingDetails`组件，使其看起来像以下这样："'
- en: '[PRE17]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'It should start looking similar to the following screenshot now:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '"现在它应该看起来像以下截图所示："'
- en: '![Back at the office](img/4730_05_02.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![回到办公室](img/4730_05_02.jpg)'
- en: '"Awesome," exclaimed Shawn.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '"太棒了，”肖恩兴奋地说。'
- en: '"In case of timeouts, we have a simple display:"'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '"在超时的情况下，我们有简单的显示："'
- en: '![Back at the office](img/4730_05_03.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![回到办公室](img/4730_05_03.jpg)'
- en: Adding a modal
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加模态框
- en: '"Alright, this works well," continued Mike.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '"好吧，这工作得很好，”迈克继续说。'
- en: '"However, it''s a bit clumsy right now. After the timeout, there''s nothing
    a user can do. We can add a popup to notify the user. Instead of showing the error
    page, let''s display a modal with an alert and redirect the user to the first
    page so that the user can restart the flow. We can use Bootstrap modal to achieve
    this."'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '"然而，目前这有点笨拙。超时后，用户无法进行任何操作。我们可以添加一个弹出窗口来通知用户。而不是显示错误页面，让我们显示一个带有警告的模态框，并将用户重定向到第一页，这样用户就可以重新开始流程。我们可以使用Bootstrap模态框来实现这一点。"'
- en: '"Got it. Want me to give it a try?" asked Shawn.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '"明白了。你想让我试一试吗？"肖恩问道。'
- en: '"Go ahead!"'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '"继续！"'
- en: '"Let me start with setting up the modal first. I will use a simple bootstrap
    modal to display it. After that''s done, I will need to invoke display of the
    modal from `alertCartTimeout`, I guess. I will also be setting up to display the
    first page and reset form data."'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '"让我先从设置模态框开始。我将使用一个简单的Bootstrap模态框来显示它。完成之后，我需要从`alertCartTimeout`调用模态框的显示。我想我还需要设置显示第一页和重置表单数据。"'
- en: '"Correct."'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '"正确。"'
- en: '"This is how the modal will look"'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '"这就是模态框将呈现的样子"'
- en: '[PRE18]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '"Nice. Next, you will be updating the `Bookstore` component `alertCartTimeout`
    method."'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '"很好。接下来，你将更新`Bookstore`组件的`alertCartTimeout`方法。"'
- en: '"Yeah, I added a new empty HTML element with the `modalAlertTimeout` ID to
    the body. This will be used to display new modal and mount component on top of
    it. I also changed alert timeout method to the following:"'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '"是的，我在body中添加了一个新的空HTML元素，ID为`modalAlertTimeout`。这将用于显示新的模态框并在其上方挂载组件。我还将更改警告超时方法如下："'
- en: '[PRE19]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '"Ah, let''s see what this does" continued Mike, checking the changes that Shawn
    had done."'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '"啊，让我们看看这个做了什么"迈克继续说，检查肖恩所做的更改。'
- en: '"Shawn, looks like the timeout is taking us to the first page, but its not
    displaying the modal alert"'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '"肖恩，看起来超时将我们带到了第一页，但没有显示模态警告"'
- en: '"Oh, right. We still need to invoke the display of the modal from bootstrap."'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '"哦，对了。我们仍然需要从Bootstrap调用模态框的显示。"'
- en: '"Correct. Let me take care of that, Shawn. In our `ModalAlertTimeout`, we will
    add a method call to display the modal after the component has successfully mounted,
    as follows:"'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '"正确。让我来处理这个问题，肖恩。在我们的`ModalAlertTimeout`中，我们将在组件成功挂载后添加一个方法调用以显示模态框，如下所示："'
- en: '[PRE20]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '"Ah, I see we are doing some DOM stuff here."'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '"啊，我明白了我们在这里做了一些DOM操作。"'
- en: '"Yeah, let me go over them."'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '"是的，让我过一遍它们。"'
- en: Refs
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引用
- en: '"I think we have used this before," asked Shawn.'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '"我想我们之前用过这个，”肖恩问道。"'
- en: '"Yeah. What refs do is give us a handle to refer to some part of the component.
    We have done this in forms. Here, we are using it to get a handle to the modal
    so that we can invoke the `modal()` method on top of it."'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '"是的。引用的作用是给我们一个引用组件某部分的句柄。我们在表单中做过这个。在这里，我们使用它来获取对模态框的引用，这样我们就可以在上面调用`modal()`方法。"'
- en: '"This would, in turn, display the modal."'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '"这将反过来显示模态框。"'
- en: '"Now, notice how we are using the `getDOMNode()` method."'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '"现在，注意我们是如何使用`getDOMNode()`方法的。"'
- en: '"Yup. What does it do?"'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '"是的。它做什么？"'
- en: '"The `getDOMNode()` method helps us to get the underlying DOM node, where the
    React element is rendered. In our case, we want to invoke a method on the DOM
    node."'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '"`getDOMNode()`方法帮助我们获取渲染React元素的底层DOM节点。在我们的例子中，我们想在DOM节点上调用一个方法。"'
- en: '"When we call `this.refs.timeoutModal`, it returns us a ref object of the component."'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '"当我们调用`this.refs.timeoutModal`时，它返回给我们一个组件的引用对象。"'
- en: '"This is different from the actual DOM component. It''s actually a React-wrapped
    object. To grab the underlying DOM object, we invoked `getDOMNode()`."'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '"这与实际的DOM组件不同。它实际上是一个React包装的对象。为了获取底层的DOM对象，我们调用了`getDOMNode()`。"'
- en: '"Got it."'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '"明白了。"'
- en: '"Next, we have wrapped all this in a `setTimeout` call so that we can call
    it after the React component is successfully rendered and modal content exists
    on the page.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '"接下来，我们将所有这些包裹在一个`setTimeout`调用中，这样我们就可以在React组件成功渲染并且模态框内容存在于页面上时调用它。"'
- en: '"Finally, we called `$(timeoutModal).modal(''show'')` to invoke the modal!"'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '"最后，我们调用了`$(timeoutModal).modal(''show'')`来调用模态框！"'
- en: '"Let''s see how our modal looks now."'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '"让我们看看我们的模态框现在看起来怎么样。"'
- en: '[PRE21]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '"Let''s see how this looks now."'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '"让我们看看现在看起来怎么样。"'
- en: '![Refs](img/4730_05_04.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![引用](img/4730_05_04.jpg)'
- en: '"One last thing since we are discussing this, is about DOM. We can invoke `getDOMNode()`
    to also get the node for the current component. Therefore, we can simply call
    `this.getDOMNode()` and that will also return us an element!"'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '"既然我们正在讨论这个，还有一个关于DOM的问题。我们可以调用`getDOMNode()`来获取当前组件的节点。因此，我们可以简单地调用`this.getDOMNode()`，这将返回给我们一个元素！"'
- en: '"Alright, let''s do this. We will unmount the modal when someone closes it
    so that we can invoke it afresh on the second render."'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '"好的，让我们这么做。当有人关闭模态时，我们将卸载模态，以便在第二次渲染时重新调用它。"'
- en: '"Let''s define a callback method to do just that, as follows:"'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '"让我们定义一个回调方法来完成这个任务，如下："'
- en: '[PRE22]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '"Finally, we will set this as a callback on close of our modal, as follows:"'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '"最后，我们将设置一个回调函数在模态关闭时执行，如下："'
- en: '[PRE23]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '"With this, we are done! The component will unmount on modal hide."'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '"这样一来，我们就完成了！当模态隐藏时，组件将会卸载。"'
- en: '"Notice how we are using the `parentNode` attribute on the DOM node to hide
    the modal. This helps us to get the container on which the React element is and
    that we are using to remove the modal."'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '"注意我们是如何在DOM节点上使用`parentNode`属性来隐藏模态的。这有助于我们获取包含React元素的容器，并使用它来移除模态。"'
- en: '"Nice. That has been a refresher. Thanks Mike!"'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '"太好了。这真是一次很好的复习。谢谢Mike！"'
- en: With that, the duo headed back to check the various changes they had just done.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 随着这些，这对搭档回到了检查他们刚刚所做的各种更改。
- en: Summary
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we took a look at refactoring our components. We saw how to
    make use of mixins and extract similar functionalities to use seamlessly across
    components. We also took a look at DOM interactions, using refs, and related DOM
    actions from a component.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了重构组件。我们学习了如何利用混入（mixins）提取相似的功能，以便在组件间无缝使用。我们还研究了DOM交互，使用refs以及从组件中执行相关的DOM操作。
- en: In the next chapter, we will explore how React functions on the the server side.
    We will see how React allows us to render and handle components on the server
    to pre-render HTML, which is useful for several reasons. We will also take a look
    at how this affects the React component life cycle.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨React在服务器端的运行方式。我们将看到React如何允许我们在服务器上渲染和处理组件，以预渲染HTML，这对于多个原因来说是有用的。我们还将研究这如何影响React组件的生命周期。
