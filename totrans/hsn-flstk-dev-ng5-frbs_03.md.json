["```js\npublic login(email: string, password: string): Promise<any> {\n  return this.angularFireAuth.auth.signInWithEmailAndPassword(email, password);\n}\n```", "```js\npublic resetPassword(email: string): Promise<any> {\n  return this.angularFireAuth.auth.sendPasswordResetEmail(email);\n}\n```", "```js\nimport {Injectable} from '@angular/core';\nimport {AngularFireAuth} from 'angularfire2/auth';\n\n/**\n * Authentication service\n *\n */\n@Injectable()\nexport class AuthenticationService {\n\n  /**\n   * Constructor\n   *\n   * @param {AngularFireAuth} angularFireAuth provides the \n     functionality related to authentication\n   */\n  constructor(private angularFireAuth: AngularFireAuth) {\n  }\n\n  public signup(email: string, password: string): Promise<any> {\n    return \n    this.angularFireAuth.auth.createUserWithEmailAndPassword(email, \n    password);\n  }\n\n  public login(email: string, password: string): Promise<any> {\n    return this.angularFireAuth.auth.signInWithEmailAndPassword(email, \n    password);\n  }\n\n  public resetPassword(email: string): Promise<any> {\n    return this.angularFireAuth.auth.sendPasswordResetEmail(email);\n  }\n\n}\n```", "```js\nexport declare class AngularFireDatabase {\n    app: FirebaseApp;\n    database: database.Database;\n    constructor(app: FirebaseApp);\n    list<T>(pathOrRef: PathReference, queryFn?: QueryFn): \n    AngularFireList<T>;\n    object<T>(pathOrRef: PathReference): AngularFireObject<T>;\n    createPushId(): string | null;\n}\n```", "```js\npublic getUser(uid: string): Observable<User> {\n   return this.fireDb.object<User>(`${USERS_CHILD}/${uid}`).valueChanges();\n}\n```", "```js\nimport {Injectable} from '@angular/core';\nimport {AngularFireDatabase} from 'angularfire2/database';\nimport {User} from './user';\nimport 'firebase/storage';\nimport {USERS_CHILD} from './database-constants';\nimport {Observable} from 'rxjs/Observable';\n\n/**\n * User service\n *\n */\n@Injectable()\nexport class UserService {\n\n  /**\n   * Constructor\n   *\n   * @param {AngularFireDatabase} fireDb provides the functionality for \n     Firebase Database\n   */\n  constructor(private fireDb: AngularFireDatabase) {\n  }\n\n  public addUser(user: User): void {\n    this.fireDb.object(`${USERS_CHILD}/${user.uid}`).set(user);\n  }\n\n  public getUser(uid: string): Observable<User> {\n    return this.fireDb.object<User>\n    (`${USERS_CHILD}/${uid}`).valueChanges();\n  }\n}\n```", "```js\n{\n  \"email\": \"uttamagarwal.slg@gmail.com\",\n  \"mobile\": \"9972022242\",\n  \"name\": \"Uttam Agarwal\",\n  \"uid\": \"qu3bXn9tTJR7j4PBp9LzBGKxHAe2\"\n}\n```", "```js\npublic getUser(uid: string): Observable<User> {\n  return this.fireDb.object<User>(`${USERS_CHILD}/${uid}`).valueChanges();\n}\n```", "```js\nexport class User {\n\n   email: string;\n\n   name: string;\n\n   mobile: string;\n\n   uid: string;\n\n   constructor(email: string,\n            name: string,\n            mobile: string,\n            uid: string) {\n      this.email = email;\n      this.name = name;\n      this.mobile = mobile;\n      this.uid = uid;\n   }\n}\n```", "```js\n<div class=\"col-md-6 col-md-offset-3 container\">\n    <h2>Login</h2>\n <app-error-alert *ngIf=\"showError\" [errorMessage]=\"errorMessage\"></app-error-alert>\n    <form name=\"form\" (ngSubmit)=\"onLogin(loginFormData)\" \n    #loginFormData='ngForm'>\n        <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <input type=\"text\" class=\"form-control\" name=\"email\" \n            (ngModel)=\"email\" #email=\"ngModel\"\n                   required\n                   pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*\n                           (\\.\\w{2,3})+$\"\n                   id=\"email\"/>\n                 <div [hidden]=\"email.valid || email.pristine\"\n                 class=\"alert alert-danger\">\n                <div [hidden]=\"!email.hasError('required')\">Email is \n                 required</div>\n                <div [hidden]=\"!email.hasError('pattern')\">Email format \n                 should be\n                    <small><b>codingchum@gmail.com</b></small>\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" class=\"form-control\" name=\"password\" \n             (ngModel)=\"password\" #password=\"ngModel\"\n                   required id=\"password\"/>\n            <div [hidden]=\"password.valid || password.pristine\"\n                 class=\"alert alert-danger\">\n                Password is required\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <button type=\"submit\" id=\"login-btn\" class=\"btn btn-\n            success\" [disabled]=\"!loginFormData.form.valid\">\n            LOGIN</button>\n            <button routerLink=\"/app-friends-signup\" data-tag=\"signup-\n             tag\" routerLinkActive=\"active\" \n             class=\"btn btn-success\">\n                SIGNUP\n            </button>\n        </div>\n    </form>\n</div>\n```", "```js\nonLogin(loginFormData): void {\n   this.authService.login(loginFormData.value.email, \n   loginFormData.value.password).then((userInfo) => {\n      ...\n   }).catch((error) => {\n      this.errorMessage = error.message;\n      this.showError = true;\n   });\n}\n```", "```js\nconstructor(\n    private userService: UserService,\n    private router: Router,\n    private authService: AuthenticationService\n) {}\n```", "```js\nonLogin(loginFormData): void {\n   this.authService.login(loginFormData.value.email, \n   loginFormData.value.password).then((userInfo) => {\n      // Login user\n      const uid: string = userInfo.uid;\n      this.getUserInfo(uid);\n   }).catch((error) => {\n      ...\n   });\n}\n\nprivate getUserInfo(uid: string) {\n   this.userService.getUser(uid).subscribe(snapshot => {\n      this.user = snapshot;\n   });\n}\n\n```", "```js\nimport {Component} from '@angular/core';\nimport {User} from '../../services/user';\nimport {Router} from '@angular/router';\nimport {AuthenticationService} from '../../services/authentication.service';\nimport {UserService} from '../../services/user.service';\nimport {AngularFireAuth} from 'angularfire2/auth';\n\n@Component({\n  selector: 'app-friends-login',\n  styleUrls: ['login.component.scss'],\n  templateUrl: 'login.component.html',\n})\nexport class LoginComponent {\n\n  errorMessage: string;\n\n  showError: boolean;\n\n  private user: User;\n\n  constructor(private userService: UserService,\n              private router: Router,\n              private authService: AuthenticationService,\n              private angularFireAuth: AngularFireAuth) {\n    this.angularFireAuth.auth.onAuthStateChanged(user => {\n      if (user) {\n        this.getUserInfo(user.uid);\n      }\n    });\n  }\n\n  onLogin(loginFormData): void {\n    this.authService.login(loginFormData.value.email, \n    loginFormData.value.password).then((user) => {\n      // Login user\n      const uid: string = user.uid;\n      this.getUserInfo(uid);\n    }).catch((error) => {\n      this.errorMessage = error.message;\n      this.showError = true;\n    });\n  }\n\n  private getUserInfo(uid: string) {\n    this.userService.getUser(uid).subscribe(snapshot => {\n      this.user = snapshot;\n    });\n  }\n}\n```", "```js\n{path: 'app-friends-login', component: LoginComponent}\n```", "```js\n<div id=\"password_reset\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog modal-sm\">\n        <form name=\"form\" (ngSubmit)=\"onReset(resetFormData)\" \n         #resetFormData='ngForm'>\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                  <h4 class=\"modal-title\">Forgot Password?</h4>\n                  <button type=\"button\" class=\"close\" data-\n                   dismiss=\"modal\">&times;</button>\n                </div>\n                <div class=\"modal-body\">\n                    <p>Please enter your registered email to sent you  \n                      the password reset instructions.</p>\n\n                    <div class=\"form-group\">\n                        <label for=\"reset_email\">Email</label>\n                        <input type=\"text\" class=\"form-control\" \n                         name=\"email\" (ngModel)=\"email\"              \n                         #email=\"ngModel\"\n                               required\n                               pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\n                               \\w+)*(\\.\\w{2,3})+$\"\n                               id=\"reset_email\"/>\n                    </div>\n                </div>\n                <div class=\"modal-footer form-group\">\n                    <button type=\"submit\" class=\"btn btn-default\" \n                     [disabled]=\"!resetFormData.form.valid\"\n                    >Reset\n                    </button>\n                    <button type=\"button\" class=\"btn btn-default\" data-\n                     dismiss=\"modal\">Close</button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n```", "```js\n<div class=\"col-md-6 col-md-offset-3 container\">\n    <h2>Login</h2>\n <app-error-alert *ngIf=\"showError\" [errorMessage]=\"errorMessage\"></app-error-alert>\n    <form name=\"form\" (ngSubmit)=\"onLogin(loginFormData)\" \n     #loginFormData='ngForm'>\n        <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <input type=\"text\" class=\"form-control\" name=\"email\" \n             (ngModel)=\"email\" #email=\"ngModel\"\n                   required\n                   pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*\n                   (\\.\\w{2,3})+$\"\n                   id=\"email\"/>\n            <div [hidden]=\"email.valid || email.pristine\"\n                 class=\"alert alert-danger\">\n                <div [hidden]=\"!email.hasError('required')\">Email is \n                 required</div>\n                <div [hidden]=\"!email.hasError('pattern')\">Email format \n                should be\n                    <small><b>codingchum@gmail.com</b></small>\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" class=\"form-control\" name=\"password\" \n             (ngModel)=\"password\" #password=\"ngModel\"\n                   required id=\"password\"/>\n            <div [hidden]=\"password.valid || password.pristine\"\n                 class=\"alert alert-danger\">\n                Password is required\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <button type=\"submit\" id=\"login-btn\" class=\"btn btn-\n             success\" [disabled]=\"!loginFormData.form.valid\">\n             LOGIN</button>\n            <button routerLink=\"/app-friends-signup\" data-tag=\"signup-\n             tag\" routerLinkActive=\"active\" class=\"btn btn-success\">\n                SIGNUP\n            </button>\n        </div>\n    </form>\n    <button type=\"button\" data-tag=\"password-reset-tag\" class=\"btn btn-\n     info\" data-toggle=\"modal\" data-target=\"#password_reset\">\n     Reset Password\n    </button>\n</div>\n<div id=\"password_reset\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog modal-sm\">\n        <form name=\"form\" (ngSubmit)=\"onReset(resetFormData)\" \n         #resetFormData='ngForm'>\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                  <h4 class=\"modal-title\">Forgot Password?</h4>\n                  <button type=\"button\" class=\"close\" data-\n                   dismiss=\"modal\">&times;</button>\n                </div>\n                <div class=\"modal-body\">\n                    <p>Please enter your registered email to sent you \n                      the password reset instructions.</p>\n\n                    <div class=\"form-group\">\n                        <label for=\"reset_email\">Email</label>\n                        <input type=\"text\" class=\"form-control\" \n                         name=\"email\" (ngModel)=\"email\" \n                         #email=\"ngModel\"\n                               required\n                               pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\n                               \\w+)*(\\.\\w{2,3})+$\"\n                               id=\"reset_email\"/>\n                    </div>\n                </div>\n                <div class=\"modal-footer form-group\">\n                    <button type=\"submit\" class=\"btn btn-default\" \n                     [disabled]=\"!resetFormData.form.valid\"\n                    >Reset\n                    </button>\n                    <button type=\"button\" class=\"btn btn-default\" data-\n                     dismiss=\"modal\">Close</button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n```", "```js\nonReset(resetFormData): void {\n  this.authService.resetPassword(resetFormData.value.email).then(() =>   \n  {\n    alert('Reset instruction sent to your mail');\n  }).catch((error) => {\n    this.errorMessage = error.message;\n    this.showError = true;\n  });\n}\n```"]