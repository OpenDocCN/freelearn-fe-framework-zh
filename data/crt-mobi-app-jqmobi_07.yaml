- en: Chapter 7. Fully Responsive Photography
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 7 章. 完全响应式摄影
- en: Our mobile phones are quickly becoming our photo albums. Photographers represent
    a somewhat untapped market for mobile web development. But if you think about
    it, this market should have been the first to adapt to the mobile world. With
    the saturation of smartphones in developed nations, e-mail open rates on smartphones
    are rapidly approaching 40 percent and may be there by the time you read this
    ([http://www.emailmonday.com/mobile-email-usage-statistics](http://www.emailmonday.com/mobile-email-usage-statistics)).
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的手机迅速成为我们的照片相册。摄影师代表着移动网页开发中一种尚未充分开发的市场。但如果你仔细想想，这个市场应该是第一个适应移动世界的。随着发达国家智能手机的普及，智能手机上的电子邮件打开率正在迅速接近
    40%，当你阅读这篇文章时，可能已经达到了这个水平 ([http://www.emailmonday.com/mobile-email-usage-statistics](http://www.emailmonday.com/mobile-email-usage-statistics))。
- en: 'When you get that e-mail from your photographer that your photos are ready
    for viewing, aren''t you so excited that you try to view them immediately? Yet
    there are a LOT of photographers who are masters at their trade that do not have
    websites that are ready to meet the new mobile demands:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 当你收到摄影师的电子邮件，告诉你你的照片已经准备好查看时，你是不是很兴奋，立即尝试查看？然而，有很多精通自己行业的摄影师没有准备好满足新的移动需求的网站：
- en: '![Fully Responsive Photography](img/0069_07_03.jpg)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![完全响应式摄影](img/0069_07_03.jpg)'
- en: 'So, here''s what we''ll cover in this chapter:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，这一章我们将涵盖以下内容：
- en: Creating a basic gallery using PhotoSwipe
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 PhotoSwipe 创建基本画廊
- en: Supporting the full range of device sizes – responsive web design
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持完整的设备尺寸范围 - 响应式网页设计
- en: Text readability in responsive design
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 响应式设计中的文本可读性
- en: Sending back only what is needed – RESS
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅发送所需内容 - RESS
- en: Creating a basic gallery using PhotoSwipe
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 PhotoSwipe 创建基本画廊
- en: If you're looking for the single fastest way to create a photo gallery, you're
    not going to come up with any faster solution than PhotoSwipe ([http://www.photoswipe.com/](http://www.photoswipe.com/)).
    Weighing in at 82 K, it's not exactly light but it works on pretty much anything
    that jQuery Mobile supports as either A or B grade. Their site says it works with
    any WebKit-based browser. That pretty much means iOS, Android, and BlackBerry.
    The big three are covered. But what about Windows Phone? Good news! It seems to
    work great there too. Even with JavaScript turned off, PhotoSwipe degrades gracefully
    to a reasonable page-by-page experience. We could start from scratch and make
    a pure jQuery Mobile experience but, really… why?
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在寻找创建照片画廊的最快方法，那么你不会找到比 PhotoSwipe ([http://www.photoswipe.com/](http://www.photoswipe.com/))
    更快的解决方案。它的大小为 82 K，并不算轻，但它几乎可以在 jQuery Mobile 支持的任何 A 或 B 级别上使用。他们的网站称它可以在任何基于
    WebKit 的浏览器上使用。这基本上意味着 iOS、Android 和 BlackBerry。这三个大平台都被覆盖了。但是 Windows Phone 呢？好消息！它在那里也表现得非常好。即使
    JavaScript 被关闭，PhotoSwipe 也会优雅地退化为合理的按页浏览体验。我们可以从头开始制作一个纯粹的 jQuery Mobile 体验，但实际上...
    为什么呢？
- en: Once again I'm going to dispense with the academically correct behavior of perfectly
    separating JavaScript and CSS into their own files, and simply build all customized
    JavaScript into the page itself. It's just easier for the purposes of this book.
    I'm assuming if you're reading this, that you already know how to separate things
    properly and why.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 再次我将放弃严格地将 JavaScript 和 CSS 完全分离到它们自己的文件中的学术上正确的行为，而是简单地将所有定制的 JavaScript 构建到页面本身。对于本书的目的来说，这样做更容易。我假设如果你在阅读这本书，你已经知道如何正确地分离事物以及原因。
- en: 'Let''s start with the basics. For the most part, this is boilerplate from their
    site but we''re starting with our own images from the photographer:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从基础知识开始。大部分来自于他们网站的样板，但我们将从摄影师的角度开始：
- en: '![Creating a basic gallery using PhotoSwipe](img/0069_07_09.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![使用 PhotoSwipe 创建基本画廊](img/0069_07_09.jpg)'
- en: 'Let''s start with the key portions of the `<head>` tag:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从 `<head>` 标签的关键部分开始：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Take note that we are now using a custom theme built with **ThemeRoller** ([http://jquerymobile.com/themeroller/](http://jquerymobile.com/themeroller/)).
    Therefore, we are only using `jquery.mobile.structure-1.2.0.min.css` instead of
    the full jQM CSS. The `mullinax.min.css` file was produced by ThemeRoller and
    contains everything else needed apart from the structure CSS.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们现在正在使用一个用 **ThemeRoller** 构建的自定义主题 ([http://jquerymobile.com/themeroller/](http://jquerymobile.com/themeroller/))。因此，我们只使用
    `jquery.mobile.structure-1.2.0.min.css` 而不是完整的 jQM CSS。`mullinax.min.css` 文件是由
    ThemeRoller 生成的，除了结构 CSS 外还包含其他所有必需的内容。
- en: 'The files `photoswipe.css`, `jquery-mobile.css`, `klass.min.js`, and `code.photoswipe.jquery-3.0.5.min.js`
    are all part of the of the PhotoSwipe boilerplate. The filename, `jquery-mobile.css`,
    is a little misleading. It''s actually more like an adapter stylesheet to make
    PhotoSwipe work and look right in jQuery Mobile. Without it, your gallery''s unordered
    lists won''t look right. Initially, there''s not a lot in there:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 文件`photoswipe.css`、`jquery-mobile.css`、`klass.min.js`和`code.photoswipe.jquery-3.0.5.min.js`都是PhotoSwipe样板的一部分。文件名`jquery-mobile.css`有点误导。它实际上更像是一个适配器样式表，使PhotoSwipe在jQuery
    Mobile中工作和显示正确。没有它，您的画廊的无序列表看起来就不对了。最初，里面没有太多内容：
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This setup is OK on an iPhone or Android phones but if you're looking at it
    on any kind of a tablet- or desktop-size browser, the thumbnails of the gallery
    could get annoyingly large. Let's see what we can do with a touch of media queries
    to give it a more responsive design.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这个设置在iPhone或Android手机上是可以的，但是如果您在任何类型的平板电脑或桌面大小的浏览器上查看它，画廊的缩略图可能会变得令人讨厌地太大。让我们看看我们能用媒体查询做些什么来使其具有更具响应性的设计。
- en: Supporting the full range of device sizes – responsive web design
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 支持全范围设备尺寸 - 响应式网页设计
- en: '**Responsive web design** (**RWD**) is the concept of making a single page
    work for every device size. That means, we''re not just talking about mobile phones
    with a 3.5-inch screen. That''s only the beginning. We are going to support tablets
    of all sizes, and even desktop resolutions. For more on the concept of RWD, check
    out [http://en.wikipedia.org/wiki/Responsive_web_design](http://en.wikipedia.org/wiki/Responsive_web_design).'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**响应式网页设计**（**RWD**）是指使单个页面适应每个设备大小的概念。这意味着，我们不仅仅是在谈论具有3.5英寸屏幕的手机。那只是个开始。我们将支持各种尺寸的平板电脑，甚至是桌面分辨率。有关RWD概念的更多信息，请参阅[https://zh.wikipedia.org/wiki/响应式网页设计](https://zh.wikipedia.org/wiki/响应式网页设计)。'
- en: 'In order to make RWD work, let''s set a few breakpoints based on common devices
    and resolution breakpoints. I''m going to start by redefining the default gallery
    item size to 50 percent. Why? It just feels more comfortable to me while browsing
    on a smartphone in portrait mode. So, here are the breakpoints. Let''s put them
    into `chapter7.css`:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使RWD起作用，让我们根据常见设备和分辨率断点设置一些断点。我将从重新定义默认画廊项大小为50％开始。为什么？在我使用智能手机以纵向模式浏览时，它只是让我感觉更舒适。所以，以下是断点。让我们将它们放入`chapter7.css`中：
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: As I was testing this setup, I carefully considered the average viewing distance
    between myself and whatever screen I was viewing. These breakdowns resulted in
    roughly the same percentage of the field of view for a thumbnail that seemed ideal.
    Obviously, my focus group of one means nothing from a scientific perspective so
    tweak to your heart's content.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在测试这个设置时，我仔细考虑了我与所观看屏幕之间的平均观看距离。这些分解导致了缩略图在视野中看起来理想的大致相同的百分比。显然，我的一个人的焦点小组在科学角度上毫无意义，所以可以随心所欲地进行调整。
- en: It could be asked, why not just make each image a fixed size? Why the different
    resolution breakpoints? Pretty simple really, it keeps thing evenly spaced instead
    of having a major gap on one side because some monitors' or browsers' resizing
    had just enough room to force a line break but not take up the slack. It also
    has the added benefit, for the book, of showing you a good way to break down a
    universal stylesheet to turn a jQuery Mobile site into a universal site using
    media queries. Any other resolution-based tweaks we want to make can be put right
    into `chapter7.css` in its appropriate place.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 可能会问，为什么不只是使每个图像具有固定大小？为什么不同的分辨率断点？真的很简单，它保持了事物的均匀间距，而不是因为某些显示器或浏览器的调整大小刚好有足够的空间强制换行，而不占用空白。它还有一个额外的好处，对于这本书来说，它展示了将通用样式表分解为使用媒体查询将jQuery
    Mobile站点转换为通用站点的好方法。我们想要进行的任何其他基于分辨率的调整都可以直接放入`chapter7.css`中的适当位置。
- en: 'The script `code.photoswipe.galleryinit.js` is present on the PhotoSwipe gallery
    page itself within the downloadable example. I don''t think it will ever need
    to be edited or customized on a per page basis so I''ve extracted that chuck of
    script into `code.photoswipe.galleryinit.js`. Here is the code. Think nothing
    more of it since it is now off in its own little file never to be seen or heard
    from again:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本`code.photoswipe.galleryinit.js`存在于可下载示例内部的PhotoSwipe画廊页面上。我认为它永远不需要根据每个页面进行编辑或自定义，所以我将该脚本块提取到了`code.photoswipe.galleryinit.js`中。以下是代码。不要再想它，因为它现在已经成为自己的小文件，再也不会被看到或听到了：
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Now, let us now consider some of the "pages" themselves. We''ll be putting
    this code, and evolving it as we go, in the `index.html` file:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们考虑一下这些“页面”本身。我们将把这段代码放在`index.html`文件中，并随着进展逐步完善它：
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The design concepts for the gallery screen are as follows:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图库屏幕的设计概念如下：
- en: Full screen photo background
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 全屏照片背景
- en: Centered logo on small screens taking up no more than 90 percent of the width
    of the screen and not growing beyond its original size
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在小屏幕上居中的标志，占屏幕宽度不超过90%，并且不会超过其原始大小
- en: The navigation should still be obvious but not get in the way of the art itself
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导航仍然应该明显，但不会妨碍艺术本身
- en: 'Here''s the relevant CSS that we are also putting into `chapter7.css`:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们还将放入`chapter7.css`中的相关CSS：
- en: '[PRE5]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now we just need a little JavaScript to tie this all together. When the orientation
    changes, we want to change which direction gets the 100 percent of the width for
    the background:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们只需要一点JavaScript来将所有这些联系在一起。当方向改变时，我们希望改变哪个方向占据100%的背景宽度：
- en: '[PRE6]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'That''s good enough for our gallery entry page, now let''s put together a sample
    gallery for baby photos. There are many entries for the gallery in the code of
    this chapter. However, for brevity''s sake I''ve shortened the code here. Again,
    this will be in the final version of `index.html` in the code files:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这对我们的图库入口页面已经足够了，现在让我们为婴儿照片准备一个示例图库。本章的代码中有许多图库条目。但为了简洁起见，我在这里缩短了代码。同样，这将在代码文件的最终版本`index.html`中。
- en: '[PRE7]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Note
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you do not put a `rel="external"` on each of the links to the images, it
    will not work properly. The PhotoSwipe documentation made that pretty clear. If
    you're not yet familiar with `rel="external"`, it is a way to tell jQuery Mobile
    to *not* follow the link with its usual AJAX-based navigation. As such, it will
    force a full-page load to whatever you're linking to.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有在每个指向图像的链接上放置`rel="external"`，它将无法正常工作。PhotoSwipe文档已经很清楚地说明了这一点。如果您还不熟悉`rel="external"`，它是告诉jQuery
    Mobile *不要*使用其通常的基于AJAX的导航跟随链接的一种方法。因此，它将强制全页加载到您要链接到的任何内容。
- en: Now, just for the fun of it, open this in a desktop browser at full width and
    then shrink it down to mobile size and watch it adapt. Try out the gallery landing
    page, the baby thumbnail gallery, and the slideshow that PhotoSwipe provides.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，只是为了好玩，将其在桌面浏览器中以全宽打开，然后将其缩小到移动设备尺寸，并观察其自适应。尝试使用图库首页、婴儿缩略图库和PhotoSwipe提供的幻灯片功能。
- en: One of the cool parts about PhotoSwipe is that even if you've disabled zooming
    on your mobile site using the meta-viewport tag, the user is still able to pinch
    and zoom around the full-sized photos. This is really nice on a tablet. All they
    have to do to get back to the navigation is to double tap the image and it will
    zoom to its original size and reveal the navigation. Not the most obvious thing
    but the back button works as well.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: PhotoSwipe的一个很酷的部分是，即使您在移动站点上使用meta-viewport标签禁用了缩放，用户仍然可以在全尺寸照片周围捏放和缩放。在平板电脑上非常方便。他们只需双击图像即可返回导航，图像将缩放到原始大小并显示导航。虽然这不是最明显的功能，但返回按钮也可以使用。
- en: Naturally, as the name may suggest, you can simply swipe from photo to photo
    and it will loop back around to the beginning of the set once it reaches the end.
    There is also a slideshow feature that will run indefinitely. In both of these
    cases, if the user presses the back button, they'll be taken back to the thumbnails
    page.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 自然地，正如名称所暗示的，您可以简单地从一张照片滑动到另一张，并在到达集合末尾时循环回到集合开头。还有一个幻灯片功能，可以无限循环播放。在这两种情况下，如果用户按下返回按钮，他们将被带回缩略图页面。
- en: The only real problem that we have at this point is that we have a site that
    scales well but the background images and full-sized photos might be larger than
    strictly necessary. The background image isn't really a problem because we can
    govern which size to send back based on our media queries. We just need to create
    two or three background images sizes and override which image is used in the `jquery-`
    `le.css` file. In the final version of the code for this chapter I have renamed
    `jquery-mobile.css` to `chapter7.css` to avoid any confusion with actual jQuery
    Mobile library CSS files.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们目前唯一真正的问题是我们有一个可以很好缩放的站点，但是背景图像和全尺寸照片可能比严格必要的要大。背景图片实际上不是问题，因为我们可以根据媒体查询来确定发送哪种尺寸的图像。我们只需要创建两到三个背景图像尺寸，并覆盖`jquery-`
    `le.css`文件中使用的图像。在本章的最终版本代码中，我已将`jquery-mobile.css`重命名为`chapter7.css`，以避免与实际的jQuery
    Mobile库CSS文件混淆。
- en: Text readability and responsive design
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文本可读性和响应式设计
- en: Studies have shown that there are ideal character limits per line. Ideally,
    you should settle on 35, 55, 75, or 95 CPL (characters per line). People tend
    to prefer either shorter or longer lines. Since we're really trying to showcase
    photography here, let's go with the shorter CPL. If you want to read the full
    report, you can find it at [http://psychology.wichita.edu/surl/usabilitynews/72/LineLength.asp](http://psychology.wichita.edu/surl/usabilitynews/72/LineLength.asp).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 研究表明，每行理想的字符限制是有的。理想情况下，您应该选择 35、55、75 或 95 CPL（每行字符数）。人们倾向于更短或更长的行。由于我们真的想在这里展示摄影作品，所以让我们选择较短的
    CPL。如果您想阅读完整的报告，可以在 [http://psychology.wichita.edu/surl/usabilitynews/72/LineLength.asp](http://psychology.wichita.edu/surl/usabilitynews/72/LineLength.asp)
    找到它。
- en: To a large extent, the width of our text columns will be dictated by the devices
    themselves. On smaller devices, we really have no choice but to go a `100%` width.
    Once we get to tablets in landscape mode, we'll have room to do creative things
    with our text. We could, for larger widths, increase our CPL to 55 and it would
    look great. We may also consider using larger images as well. Whatever we do,
    having a strong set of media query breakpoints is the key.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在很大程度上，我们的文本列宽将受到设备本身的限制。在较小的设备上，我们确实别无选择，只能使用`100%`的宽度。一旦我们到了横向模式的平板电脑，我们就有了创造性地处理文本的空间。对于较大的宽度，我们可以将我们的每行字符数（CPL）增加到55，效果会很好。我们也可以考虑使用更大的图片。无论我们做什么，都要确保设定了一组强有力的媒体查询断点是关键。
- en: 'Let''s take some paragraphs of text about sessions and make it more responsive
    with this study as a guideline:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用这项研究作为指导，将一些有关会话的段落文字更具响应性：
- en: '[PRE8]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Next, let''s create some of the rules around its placement on the page:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们制定一些关于其在页面上放置的规则：
- en: '[PRE9]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: As before, a rule set in the lower widths will carry through to the wider widths
    unless a value is specified to override. You can see how I'm switching out the
    images used on sessions for iPad landscape view and 1440 resolutions. Before those,
    every resolution inherited the `background-image:none` form and the 320px rules.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 与以前一样，在较小的宽度上设置的规则将延伸到更宽的宽度，除非指定了一个值来覆盖。您可以看到我是如何在 iPad 横向视图和 1440 分辨率上切换用于会话的图像的。在那之前，每个分辨率都继承了
    `background-image:none` 形式和 320px 的规则。
- en: Now let's take a look at our results.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们来看看我们的结果。
- en: Smartphone-sized devices
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 智能手机尺寸设备
- en: 'Here we see the session content on small screens for both portrait and horizontal
    orientation. Either way is highly readable but neither is really ideal for displaying
    anything other than the text. If we tried to squeeze in any kind of artwork, it
    just wouldn''t show up well. We''d be violating the good text readability we just
    talked about. Either you or the photographer might think that perhaps having one
    of their images faded in the background would look good but DON''T! Leave the
    majority of the reading text as black on white in standard size fonts with standard
    fonts:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们看到了小屏幕上的会话内容，无论是纵向还是横向，都非常易读，但是都不是真正适合显示除文本以外的任何内容的理想方式。如果我们试图塞入任何形式的艺术作品，它都不会显示得好。我们会违反刚刚谈到的良好文本可读性。你或者摄影师可能会认为，将其中一张图片淡入背景看起来不错，但不要这样做！将大部分阅读文本保持为黑底白字、标准字体大小和标准字体。
- en: '![Smartphone-sized devices](img/0069_07_10.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![智能手机尺寸设备](img/0069_07_10.jpg)'
- en: Tablet-sized devices
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 平板设备尺寸
- en: 'Here we see the same thing rendered on tablets. On portrait orientation, it''s
    still great for reading if we leave the text at a `100%` width. We are well within
    the guidelines for good readability. However, that breaks down when the user switches
    to landscape. In landscape, tablets finally have enough room to show some photography
    and the text as well:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我们看到相同的内容在平板上渲染。在纵向方向上，如果我们将文本保持在`100%`的宽度，仍然非常适合阅读。我们完全符合良好可读性的指南。然而，当用户切换到横向时，情况就不同了。在横向模式下，平板终于有足够的空间来展示一些摄影作品和文本：
- en: '![Tablet-sized devices](img/0069_07_07.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![平板设备](img/0069_07_07.jpg)'
- en: Desktop-sized devices
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 桌面尺寸设备
- en: 'This is still a jQuery Mobile page but we''re looking more like a desktop site.
    Now we can show more than just one face so we might as well switch out some different
    photos to showcase the artist''s ability:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这仍然是一个 jQuery Mobile 页面，但我们看起来更像是一个桌面站点。现在我们可以展示不止一个面孔，所以我们不妨换一些不同的照片来展示艺术家的能力：
- en: '![Desktop-sized devices](img/0069_07_08.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![桌面尺寸设备](img/0069_07_08.jpg)'
- en: Yes, this is me and my family. Yes, I *am* very proud of them. And I'm pretty
    happy with the way the text treatment is working out on each of these resolution
    breakpoints and that it's all one page.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，这是我和我的家人。是的，*我*为他们感到非常自豪。而且我对于每一个分辨率断点上的文本处理方式都非常满意，并且它是在一个页面上完成的。
- en: Cycling background images
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 循环背景图像
- en: 'So, how do we cycle background images when the very images we''re using depend
    on our current resolution and orientation? That pretty much rules out cycling
    out a single image. Instead we''re going to have to swap out entire stylesheets.
    Here we go:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，当我们使用的图像依赖于我们当前的分辨率和方向时，我们如何循环背景图像呢？这几乎排除了循环一个单一图像的可能性。相反，我们将不得不交换整个样式表。下面是代码：
- en: '[PRE10]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: It's a pretty simple stylesheet to begin with but you could make it as complex
    as you like. We're not accounting for HD display versus SD displays for now. The
    iPhone 4 with Retina display (326 ppi) was released in June of 2010\. Ever since,
    the trend is moving toward HD screens anyway, so I'm simply assuming most people
    have updated their smartphone within the last two years and that they either have
    a high resolution screen or very soon will. Keep in mind also that we are on the
    edge of the LTE (fourth generation mobile broadband) ubiquity. That means that
    very soon, mobile will be faster than most home broadband speeds.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 它开始时是一个非常简单的样式表，但你可以将它制作得像你想要的那样复杂。我们暂不考虑高清显示和标清显示。iPhone 4具有视网膜显示屏（326 ppi）在2010年6月发布。自那以后，趋势已经转向高清屏幕，所以我只是假设大多数人在过去两年内已经更新了他们的智能手机，或者他们很快就会更新。同样要记住，我们正处于LTE（第四代移动宽带）普及的边缘。这意味着很快，移动速度将比大多数家庭宽带速度更快。
- en: Now, is this really an excuse for laziness and not making smaller versions to
    capitalize on performance where you can? No, and most likely, some haters and
    academics will even take issue with the previous paragraph. I will say this, performance
    does matter. It is a billable feature. But think about how many images you want
    to be cycling through and then multiply that by how many resolution and dimension
    variants you want to spend time preparing and testing. Again, it's all billable
    unless you're doing it for free.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这真的是懒惰的借口，不去制作更小的版本以充分利用性能吗？不，很可能，一些讨厌者和学者甚至会对上一段提出异议。我会说，性能确实很重要。这是一个可计费的功能。但想想你想循环播放多少图像，然后乘以你想要花时间准备和测试多少分辨率和尺寸变体。再次强调，这都是可计费的，除非你是免费做的。
- en: How much longer until such minute optimizations really makes no discernible
    difference? If you're reading this in 2014 or later, you might already be scoffing
    at the idea of having to worry about bandwidth in any practical sense (depending
    on your market). Just some food for thought.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 一直进行这样细微的优化，到底还需要多长时间才能让其真正没有明显的差别？如果你是在2014年或之后阅读此内容，你可能对必须在任何实际意义上担心带宽的想法感到嗤之以鼻（取决于你所在的市场）。这只是一些思考。
- en: 'Here''s one of the CSS files for the rotation:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是用于旋转的一个CSS文件：
- en: '[PRE11]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now that we''ve got that, we need to decide how we''ll cycle them. We could
    use a `setInterval` JavaScript to swap the stylesheets out on a timer. Honestly,
    even for a photography website, I think that''s being a bit optimistic. We probably
    wouldn''t want to swap any faster than once every 5 seconds. Think about it: the
    mobile usage pattern involves quick, short bursts of productivity or gaming. Most
    people are not going to stay on any given mobile screen for more than 5 seconds
    unless it is either text-heavy, like an article, or is so poorly crafted that
    the user is having trouble navigating. So, it''s pretty safe to say that the `setInterval`
    option is right out.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要决定如何循环它们。我们可以使用`setInterval` JavaScript来定时交换样式表。说实话，即使对于一个摄影网站，我认为这有点乐观。我们可能不希望每五秒钟就交换一次。想想：移动设备的使用模式涉及快速、短暂的工作或游戏。大多数人不会在任何给定的移动屏幕上停留超过5秒，除非它要么是文字密集的，比如一篇文章，要么制作得如此糟糕以至于用户无法导航。所以可以很肯定地说，`setInterval`选项不可行。
- en: 'OK, so, maybe it''s best to randomly choose a stylesheet on the `pagebeforeshow`
    event? Consider the following code:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，也许最好在`pagebeforeshow`事件上随机选择一个样式表？考虑以下代码：
- en: '[PRE12]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'But what happens when we try this? We get strange, ugly image blinks. With
    fade transitions or slides, it really doesn''t matter. Using the `pageshow` event
    makes no difference either. It looks terrible. Do not do it. I know it''s tempting
    but it won''t look good at all. *So, after all this, it''s my recommendation to
    keep a single, randomly assigned, per-session stylesheet*. Consider the following
    code snippet:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 但是当我们尝试这样做时会发生什么？我们会得到奇怪、丑陋的图像闪烁。使用淡入淡出转换或幻灯片，真的无关紧要。使用`pageshow`事件也没有任何区别。看起来很糟糕。不要这样做。我知道很诱人，但这样做一点也不好看。*因此，经过这一切，我建议保留单一、每次会话随机分配的样式表*。考虑下面的代码片段：
- en: '[PRE13]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Notice that I did not simply use `document.write()`.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我并没有简单地使用`document.write()`。
- en: Note
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Pro Tip**'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**专业提示**'
- en: Never ever ever… ever use `document.write()` in a jQuery Mobile environment.
    It can play HELL with your DOM and you'll be scratching your head wondering what
    went wrong. I've seen it bite people before. My friend's already thin hair was
    in full retreat from the head scratching this problem was causing him. Trust me,
    `document.write()` is to be avoided.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 永远不要在jQuery Mobile环境中使用`document.write()`。它会对你的DOM造成严重影响，你会摸不着头脑想知道出了什么问题。我以前看到过它折磨过人们。我的朋友的头发已经很少了，这个问题使他抓狂。相信我，要避免使用`document.write()`。
- en: Another responsive approach – RESS
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另一种响应式方法 - RESS
- en: '**Responsive Design + Server Side Components** (**RESS**) is an idea that makes
    a lot of sense. The concept is that you use a server-side mobile detection method
    such as **WURFL** ([http://wurfl.sourceforge.net/](http://wurfl.sourceforge.net/)).
    Then you send up a different version of page components, different sized images,
    and so on. We could then change the wrappers around the page content and the navigation
    to use jQuery Mobile just as easily as any home-brewed markup. The beauty of this
    approach is that everybody gets the content that is right for them without the
    bloat of typical responsive design and it''s always on the same URL.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**响应式设计 + 服务器端组件**（**RESS**）是一个非常合理的想法。其概念是使用服务器端的移动设备检测方法，比如**WURFL**（[http://wurfl.sourceforge.net/](http://wurfl.sourceforge.net/)）。然后，你会发送不同版本的页面组件、不同大小的图片等等。然后我们可以像任何自制的标记一样轻松地改变页面内容和导航的包装以使用jQuery
    Mobile。这种方法的美妙之处在于每个人都能得到适合他们的内容，而不会像典型的响应式设计那样臃肿，而且始终在相同的URL上。'
- en: The first time I saw this idea proposed in writing was in an article at [http://www.lukew.com/ff/entry.asp?1392](http://www.lukew.com/ff/entry.asp?1392)
    by Luke Wroblewski ([https://twitter.com/lukew](https://twitter.com/lukew)) in
    September 2011\. In it, he outlines the very performance problem we now face with
    images. Luke meant this as a way of doing pure responsive web design without any
    kind of mobile framework.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我第一次看到这个想法被提出是在2011年9月的一篇文章中，作者是Luke Wroblewski（[https://twitter.com/lukew](https://twitter.com/lukew)），文章链接为[http://www.lukew.com/ff/entry.asp?1392](http://www.lukew.com/ff/entry.asp?1392)。在文章中，他概述了我们现在面临的与图像相关的性能问题。Luke认为这是一种在没有任何移动框架的情况下进行纯粹响应式网页设计的方法。
- en: WURFL can tell you the screen size of the device you're serving and you could
    resize (on the fly) your photographer's original 3 MB image, down to maybe 150
    K, 70 K, and so on, depending on the device resolution. You'd still want to be
    sure to make it about twice as large as the screen size you're serving or the
    user will only see a blurry mess when then try to zoom in on their photo in the
    PhotoSwipe view.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: WURFL可以告诉你所服务的设备的屏幕尺寸，你可以（实时）调整你的摄影师原始的3 MB图像大小，缩小到150 KB、70 KB等，具体取决于设备分辨率。你仍然希望确保它比你所服务的屏幕尺寸大约两倍，否则用户在PhotoSwipe视图中尝试放大照片时将只会看到模糊的混乱。
- en: While handy in some ways, RESS will never be a perfect solution because it depends
    on browser sniffing to do its work. Is that so bad? No, not really. No solution
    is perfect, but the database of devices is community driven and rapidly updated
    so that helps. This would be a very viable solution and we'll discuss it more
    in depth in the next chapter.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然在某些方面很方便，但RESS永远不会是一个完美的解决方案，因为它依赖于浏览器嗅探来完成其工作。那么，这是不好的吗？不，不是真的。没有一个解决方案是完美的，但设备数据库是由社区驱动的，并且快速更新，所以这有所帮助。这将是一个非常可行的解决方案，我们将在下一章更深入地讨论它。
- en: The final code
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最终代码
- en: The full code for this experience is a little on the verbose side for putting
    into a book and we've already explored the concepts around it. I would strongly
    encourage you to look at the code. At this point, there should be nothing surprising
    to you. Play with it. Adapt it. Go get yourself some free photography by trading
    services to build your portfolio.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 本次体验的完整代码有点冗长，不太适合放入一本书中，而且我们已经探讨过相关概念了。我强烈建议你查看代码。到此时，对你来说应该没有什么令人惊讶的了。与之互动。调整它。通过交换服务来建立你的作品集，免费获取一些摄影作品。
- en: Summary
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Tackling responsive design with a mobile-first approach, as we have here, can
    take what is a great mobile site and make a highly performant desktop site but
    it doesn't usually work the other way around. The key to it all is the media queries
    and starting small first. If it works that well on mobile with the limited processor,
    bandwidth, and network latency, think how amazing it will be on a machine where
    none of the restraints exist. In the next chapter we'll examine WURFL and other
    mobile detection methods to try and adapt existing websites and make them mobile.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 处理响应式设计时，采用移动优先的方法，就像我们这里所做的一样，可以将一个很棒的移动站点变成一个性能非常高的桌面站点，但通常反之则不行。其中的关键在于媒体查询和先从小尺寸开始。如果它在移动设备上运行得如此出色，那么想象一下在没有任何限制的机器上会有多么惊人。在下一章中，我们将探讨
    WURFL 和其他移动检测方法，尝试调整现有的网站并使其适应移动设备。
