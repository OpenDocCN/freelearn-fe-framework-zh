["```js\nimport React, { useState } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  tabContent: {\n    padding: theme.spacing.unit * 2\n  }\n});\n\nfunction AppBarIntegration({ classes }) {\n  const [value, setValue] = useState(0);\n\n  const onChange = (e, value) => {\n    setValue(value);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs value={value} onChange={onChange}>\n          <Tab label=\"Item One\" />\n          <Tab label=\"Item Two\" />\n          <Tab label=\"Item Three\" />\n        </Tabs>\n      </AppBar>\n      {value === 0 && (\n        <Typography component=\"div\" className={classes.tabContent}>\n          Item One\n        </Typography>\n      )}\n      {value === 1 && (\n        <Typography component=\"div\" className={classes.tabContent}>\n          Item Two\n        </Typography>\n      )}\n      {value === 2 && (\n        <Typography component=\"div\" className={classes.tabContent}>\n          Item Three\n        </Typography>\n      )}\n    </div>\n  );\n}\n\nexport default withStyles(styles)(AppBarIntegration);\n```", "```js\n<AppBar position=\"static\">\n  <Tabs value={value} onChange={onChange}>\n    <Tab label=\"Item One\" />\n    <Tab label=\"Item Two\" />\n    <Tab label=\"Item Three\" />\n  </Tabs>\n</AppBar>\n```", "```js\n{value === 0 && (\n  <Typography\n    component=\"div\"\n    className={classes.tabContent}\n  >\n    Item One\n  </Typography>\n)}\n{value === 1 && (\n  <Typography\n    component=\"div\"\n    className={classes.tabContent}\n  >\n    Item Two\n  </Typography>\n)}\n{value === 2 && (\n  <Typography\n    component=\"div\"\n    className={classes.tabContent}\n  >\n    Item Three\n  </Typography>\n)}\n```", "```js\n<Tabs\n  value={value}\n  onChange={this.onChange}\n  indicatorColor=\"primary\"\n>\n  <Tab label=\"Item One\" />\n  <Tab label=\"Item Two\" />\n  <Tab label=\"Item Three\" />\n</Tabs>\n```", "```js\nimport React, { useState } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  }\n});\n\nfunction TabAlignment({ classes }) {\n  const [value, setValue] = useState(0);\n\n  const onChange = (e, value) => {\n    setValue(value);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Tabs value={value} onChange={onChange}>\n        <Tab label=\"Item One\" />\n        <Tab label=\"Item Two\" />\n        <Tab label=\"Item Three\" />\n      </Tabs>\n    </div>\n  );\n}\n\nexport default withStyles(styles)(TabAlignment);\n```", "```js\n<Tabs value={value} onChange={onChange} centered>\n  <Tab label=\"Item One\" />\n  <Tab label=\"Item Two\" />\n  <Tab label=\"Item Three\" />\n</Tabs>\n```", "```js\n<Tabs value={value} onChange={onChange} variant=\"fullWidth\">\n  <Tab label=\"Item One\" />\n  <Tab label=\"Item Two\" />\n  <Tab label=\"Item Three\" />\n</Tabs>\n```", "```js\nimport React, { useState } from 'react';\nimport compose from 'recompose/compose';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport withWidth from '@material-ui/core/withWidth';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  }\n});\n\nfunction TabAlignment({ classes, width }) {\n  const [value, setValue] = useState(0);\n\n  const onChange = (e, value) => {\n    setValue(value);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Tabs\n        value={value}\n        onChange={onChange}\n        variant={['xs', 'sm'].includes(width) ? null : 'fullWidth'}\n        centered\n      >\n        <Tab label=\"Item One\" />\n        <Tab label=\"Item Two\" />\n        <Tab label=\"Item Three\" />\n      </Tabs>\n    </div>\n  );\n}\n\nexport default compose(\n  withWidth(),\n  withStyles(styles)\n)(TabAlignment);\n```", "```js\nvariant={['xs', 'sm'].includes(width) ? null : 'fullWidth'}\n```", "```js\nexport default compose(\n  withWidth(),\n  withStyles(styles)\n)(TabAlignment);\n```", "```js\nimport React, { useState } from 'react';\n\nimport { makeStyles } from '@material-ui/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  tabContent: {\n    padding: theme.spacing(2)\n  }\n}));\n\nexport default function RenderingTabsBasedOnState() {\n  const classes = useStyles();\n  const [tabs, setTabs] = useState([\n    {\n      active: true,\n      label: 'Item One',\n      content: 'Item One Content'\n    },\n    {\n      active: false,\n      label: 'Item Two',\n      content: 'Item Two Content'\n    },\n    {\n      active: false,\n      label: 'Item Three',\n      content: 'Item Three Content'\n    }\n  ]);\n\n  const onChange = (e, value) => {\n    setTabs(\n      tabs\n        .map(tab => ({ ...tab, active: false }))\n        .map((tab, index) => ({\n          ...tab,\n          active: index === value\n        }))\n    );\n  };\n\n  const active = tabs.findIndex(tab => tab.active);\n  const content = tabs[active].content;\n\n  return (\n    <div className={classes.root}>\n      <Tabs value={active} onChange={onChange}>\n        {tabs\n          .map(tab => (\n            <Tab\n              key={tab.label}\n              label={tab.label}\n            />\n          ))}\n      </Tabs>\n      <Typography component=\"div\" className={classes.tabContent}>\n        {content}\n      </Typography>\n    </div>\n  );\n}\n```", "```js\nconst [tabs, setTabs] = useState([\n  {\n    active: true,\n    label: 'Item One',\n    content: 'Item One Content'\n  },\n  {\n    active: false,\n    label: 'Item Two',\n    content: 'Item Two Content'\n  },\n  {\n    active: false,\n    label: 'Item Three',\n    content: 'Item Three Content'\n  }\n]);\n```", "```js\n<Tabs value={active} onChange={onChange}>\n  {tabs.map(tab => <Tab label={tab.label} />)}\n</Tabs>\n<Typography component=\"div\" className={classes.tabContent}>\n  {content}\n</Typography>\n```", "```js\nconst active = tabs.findIndex(tab => tab.active);\nconst content = tabs[active].content;\n```", "```js\nconst [tabs, setTabs] = useState([\n  {\n    active: true,\n    label: 'Home',\n    content: 'Home Content',\n    icon: <HomeIcon />\n  },\n  {\n    active: false,\n    label: 'Settings',\n    content: 'Settings Content',\n    icon: <SettingsIcon />\n  },\n  {\n    active: false,\n    disabled: true,\n    label: 'Search',\n    content: 'Search Content',\n    icon: <SearchIcon />\n  },\n  {\n    active: false,\n    hidden: true,\n    label: 'Add',\n    content: 'AddContent',\n    icon: <AddIcon />\n  }\n]);\n```", "```js\n<Tabs value={active} onChange={onChange}>\n  {tabs\n    .filter(tab => !tab.hidden)\n    .map(tab => (\n      <Tab\n        key={tab.label}\n        disabled={tab.disabled}\n        icon={tab.icon}\n        label={tab.label}\n      />\n    ))}\n</Tabs>\n```", "```js\nimport React, { Fragment, Children, useState } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  tabContent: {\n    padding: theme.spacing(2)\n  }\n});\n\nfunction TabContainer({ children }) {\n  const [value, setValue] = useState(0);\n\n  const onChange = (e, value) => {\n    setValue(value);\n  };\n\n  return (\n    <Fragment>\n      <Tabs value={value} onChange={onChange}>\n        {Children.map(children, child => (\n          <Tab label={child.props.label} />\n        ))}\n      </Tabs>\n      {Children.map(children, (child, index) =>\n        index === value ? child : null\n      )}\n    </Fragment>\n  );\n}\n\nconst TabContent = withStyles(styles)(({ classes, children }) => (\n  <Typography component=\"div\" className={classes.tabContent}>\n    {children}\n  </Typography>\n));\n\nconst AbstractingTabContent = withStyles(styles)(({ classes }) => (\n  <div className={classes.root}>\n    <TabContainer>\n      <TabContent label=\"Item One\">Item One Content</TabContent>\n      <TabContent label=\"Item Two\">Item Two Content</TabContent>\n      <TabContent label=\"Item Three\">Item Three Content</TabContent>\n    </TabContainer>\n  </div>\n));\n\nexport default AbstractingTabContent;\n```", "```js\n<TabContainer>\n  <TabContent label=\"Item One\">Item One Content</TabContent>\n  <TabContent label=\"Item Two\">Item Two Content</TabContent>\n  <TabContent label=\"Item Three\">Item Three Content</TabContent>\n</TabContainer>\n```", "```js\nfunction TabContainer({ children }) {\n  const [value, setValue] = useState(0);\n\n  const onChange = (e, value) => {\n    setValue(value);\n  };\n\n  return (\n    <Fragment>\n      <Tabs value={value} onChange={onChange}>\n        {Children.map(children, child => (\n          <Tab label={child.props.label} />\n        ))}\n      </Tabs>\n      {Children.map(children, (child, index) =>\n        index === value ? child : null\n      )}\n    </Fragment>\n  );\n}\n```", "```js\nconst TabContent = withStyles(styles)(({ classes, children }) => (\n  <Typography component=\"div\" className={classes.tabContent}>\n    {children}\n  </Typography>\n));\n```", "```js\nfunction TabContainer({ children, value: valueProp }) {\n  const [value, setValue] = useState();\n\n  const onChange = (e, value) => {\n    setValue(value);\n  };\n\n  if (value === undefined) {\n    setValue(valueProp);\n  }\n\n  return (\n    <Fragment>\n      <Tabs value={value} onChange={onChange}>\n        {Children.map(children, child => (\n          <Tab label={child.props.label} />\n        ))}\n      </Tabs>\n      {Children.map(children, (child, index) =>\n        index === value ? child : null\n      )}\n    </Fragment>\n  );\n}\n\nTabContainer.defaultProps = {\n  value: 0\n};\n```", "```js\n<TabContainer value={1}>\n  <TabContent label=\"Item One\">Item One Content</TabContent>\n  <TabContent label=\"Item Two\">Item Two Content</TabContent>\n  <TabContent label=\"Item Three\">Item Three Content</TabContent>\n</TabContainer>\n```", "```js\nimport React, { useState } from 'react';\nimport { Route, Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  tabContent: {\n    padding: theme.spacing(2)\n  }\n});\n\nfunction TabNavigationWithRoutes({ classes }) {\n  const [value, setValue] = useState(0);\n\n  const onChange = (e, value) => {\n    setValue(value);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs value={value} onChange={onChange}>\n          <Tab label=\"Item One\" component={Link} to=\"/\" />\n          <Tab label=\"Item Two\" component={Link} to=\"/page2\" />\n          <Tab label=\"Item Three\" component={Link} to=\"/page3\" />\n        </Tabs>\n      </AppBar>\n      <Route\n        exact\n        path=\"/\"\n        render={() => (\n          <Typography component=\"div\" className={classes.tabContent}>\n            Item One\n          </Typography>\n        )}\n      />\n      <Route\n        exact\n        path=\"/page2\"\n        render={() => (\n          <Typography component=\"div\" className={classes.tabContent}>\n            Item Two\n          </Typography>\n        )}\n      />\n      <Route\n        exact\n        path=\"/page3\"\n        render={() => (\n          <Typography component=\"div\" className={classes.tabContent}>\n            Item Three\n          </Typography>\n        )}\n      />\n    </div>\n  );\n}\n\nexport default withStyles(styles)(TabNavigationWithRoutes);\n```", "```js\n<Tabs value={value} onChange={onChange}>\n  <Tab label=\"Item One\" component={Link} to=\"/\" />\n  <Tab label=\"Item Two\" component={Link} to=\"/page2\" />\n  <Tab label=\"Item Three\" component={Link} to=\"/page3\" />\n</Tabs>\n```", "```js\n<Route\n  exact\n  path=\"/\"\n  render={() => (\n    <Typography\n      component=\"div\"\n      className={classes.tabContent}\n    >\n      Item One\n    </Typography>\n  )}\n/>\n```", "```js\nconst TabContainer = ({ value }) => (\n  <AppBar position=\"static\">\n    <Tabs value={value}>\n      <Tab label=\"Item One\" component={Link} to=\"/\" />\n      <Tab label=\"Item Two\" component={Link} to=\"/page2\" />\n      <Tab label=\"Item Three\" component={Link} to=\"/page3\" />\n    </Tabs>\n  </AppBar>\n);\n```", "```js\nconst TabNavigationWithRoutes = withStyles(styles)(({ classes }) => (\n  <div className={classes.root}>\n    <Route\n      exact\n      path=\"/\"\n      render={() => (\n        <Fragment>\n          <TabContainer value={0} />\n          <Typography component=\"div\" className={classes.tabContent}>\n            Item One\n          </Typography>\n        </Fragment>\n      )}\n    />\n    <Route\n      exact\n      path=\"/page2\"\n      render={() => (\n        <Fragment>\n          <TabContainer value={1} />\n          <Typography component=\"div\" className={classes.tabContent}>\n            Item Two\n          </Typography>\n        </Fragment>\n      )}\n    />\n    <Route\n      exact\n      path=\"/page3\"\n      render={() => (\n        <Fragment>\n          <TabContainer value={2} />\n          <Typography component=\"div\" className={classes.tabContent}>\n            Item Three\n          </Typography>\n        </Fragment>\n      )}\n    />\n  </div>\n));\n\nexport default TabNavigationWithRoutes;\n```"]