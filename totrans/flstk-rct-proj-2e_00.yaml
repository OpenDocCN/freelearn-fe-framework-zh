- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book explores the development of full-stack JavaScript web applications
    by combining the power of React with industry-tested server-side technologies,
    such as Node.js, Express, and MongoDB. The JavaScript landscape has been growing
    rapidly for some time now. With an abundance of options and resources available
    in relation to full-stack JavaScript web applications, it is easy to get lost
    when you need to choose from these frequently changing entities, learn about them,
    and make them work together to build your own web applications. In an attempt
    to address this pain point, this book adopts a practical approach to help you
    set up and build a diverse range of working applications using the popular MERN
    stack.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for JavaScript developers who may have worked with React but have
    minimal experience with full-stack development involving Node.js, Express, and
    MongoDB.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](e8ccda23-8ad6-4150-af38-80d3c168c1fe.xhtml), *Unleashing React
    Applications with MERN*, introduces the MERN stack technologies and the applications
    that will be developed in this book. We will discuss developing web applications
    with React, Node.js, Express, and MongoDB.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](fd935468-e403-4363-80b0-2d13845ea65c.xhtml), *Preparing the Development
    Environment*, helps you to set up the MERN stack technologies for development.
    We will explore essential development tools; install Node.js, MongoDB, Express,
    React, and any other required libraries; and then run code to check the setup.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](a9dedbd8-baf6-4ec8-b766-0b370227fbe4.xhtml), *Building a Backend
    with MongoDB, Express, and Node*, implements the backend of a skeleton MERN application.
    We will build a standalone server-side application with MongoDB, Express, and
    Node.js that stores user details and has APIs for user authentication and CRUD
    operations.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](6f2ca10a-8079-4e3a-9d42-a3db8e85b9d9.xhtml), *Adding a React Frontend
    to Complete MERN*, completes the MERN skeleton application by integrating a React
    frontend. We will implement a working frontend with React views for interacting
    with the user CRUD operations and auth APIs on the server.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](27d3dbdf-0617-4ad8-9dcc-27afa417c174.xhtml), *Growing the Skeleton
    into a Social Media Application*, builds a social media application by extending
    the skeleton application. We will explore the capabilities of the MERN stack by
    implementing social media features, such as post sharing, liking, commenting,
    following friends, and an aggregated newsfeed.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](c58ac055-5a1e-4bf4-b8a6-c9b311cf267a.xhtml), *Building a Web-Based
    Classroom Application*, focuses on building a simple online classroom application
    by extending the MERN stack skeleton application. This classroom application will
    support multiple user roles, the addition of course content and lessons, student
    enrollments, progress tracking, and course enrollment statistics.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](03fd3b4a-b7fd-4b42-ad7e-5bc34b5612b0.xhtml), *Exercising MERN Skills
    with an Online Marketplace*, utilizes the MERN stack technologies to develop basic
    features in an online marketplace application. We will implement buying-and selling-related
    features with support for seller accounts, product listings, and product search
    by category.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](7514f26d-29e1-46e2-ac46-7515b2c3a6d0.xhtml), *Extending the Marketplace
    for Orders and Payments*, focuses on extending the online marketplace we built
    in the previous chapter by implementing capabilities for buyers to add products
    to a shopping cart, checkout, and place orders, and for sellers to manage these
    orders and have payments processed from the marketplace application. We will also
    integrate Stripe to collect and process payments.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](48801a75-cf6a-4eb8-b294-65314e749e9d.xhtml), *Adding Real-Time
    Bidding Capabilities to the Marketplace*, focuses on teaching you how to use the
    MERN stack technologies, along with Socket.IO, to easily integrate real-time behavior
    in a full-stack application. We will do this by incorporating an auctioning feature
    with real-time bidding capabilities in the MERN marketplace application.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](5fbf9367-1086-4c60-92ec-2ca0795a4a95.xhtml), *Integrating Data
    Visualization with an Expense Tracking Application*, focuses on using MERN stack
    technologies along with Victory—a charting library for React—to easily integrate
    data visualization features in a full-stack application. We will extend the MERN
    skeleton application to build an expense tracking application that will incorporate
    data processing and visualization features for expense data recorded by a user
    over time.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](d3f14062-4c41-497c-9627-dc22075fb8fb.xhtml), *Building a Media
    Streaming Application*, focuses on extending the MERN skeleton application to
    build a media uploading and streaming application using MongoDB GridFS. We will
    start by building a basic media streaming application, allowing registered users
    to upload video files that will be stored on MongoDB and streamed back so that
    viewers can play each video in a simple React media player.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](d10817c4-6f74-4ef2-90f4-182466e95b33.xhtml), *Customizing the
    Media Player and Improving SEO*, upgrades the media viewing capabilities of our
    media application with a custom media player and autoplay media list. We will
    implement customized controls on the default React media player, add a playlist
    that can be autoplayed, and improve SEO for the media details by adding selective
    server-side rendering with data for just the media detail view.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 13](4f633dd6-f392-490d-b3a6-eb5430b58ec8.xhtml), *Developing a Web-Based
    VR Game,* uses React 360 to develop a three-dimensional **virtual reality** (**VR**)-infused
    game for the web. We will explore the three-dimensional and VR capabilities of
    React 360 and build a simple web-based VR game.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 14](17bbfed7-9867-4c8b-99fd-42581044a906.xhtml),* Making the VR Game
    Dynamic Using MERN,* is where you will build a dynamic VR game application by
    extending the MERN skeleton application and integrating React 360\. We will implement
    a game data model that allows users to create their own VR games and incorporate
    the dynamic game data with the game developed using React 360.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 15](7d95f2cd-98e4-4f31-8bea-9392ee462d8f.xhtml), *Following Best Practices
    and Developing MERN Further,* reflects on the lessons learned in previous chapters
    and suggests improvements for further MERN-based application development. We will
    expand on some of the best practices already applied, such as modularity in the
    app structure, other practices that should be applied, such as writing test code,
    and possible improvements, such as optimizing bundle size.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book assumes that you have familiarity with basic web-based technologies,
    working knowledge of programming constructs in JavaScript, and a general idea
    of how React applications work. As you go through the book, you will uncover how
    these concepts come together when building fully-fledged web applications with
    React 16.13.1, Node.js 13.12.0, Express 4.17.1, and MongoDB 4.2.5.
  prefs: []
  type: TYPE_NORMAL
- en: In order to maximize your learning experience while reading through the chapters,
    it is recommended that you run the associated application code in parallel, maintaining
    the specified package versions and using the relevant instructions provided in
    each chapter.
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code via the GitHub repository (link available
    in the next section). Doing so will help you avoid any potential errors related
    to the copying and pasting of code.**'
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packt.com](http://www.packt.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](https://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packt.com](http://www.packt.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the Support tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Full-Stack-React-Projects-Second-Edition](https://github.com/PacktPublishing/Full-Stack-React-Projects-Second-Edition). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "Mount the downloaded `WebStorm-10*.dmg` disk image file as
    another disk in your system."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "Select System info from the Administration panel."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: If you have questions about any aspect of this book,
    mention the book title in the subject of your message and email us at `customercare@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](https://www.packtpub.com/support/errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packt.com` with a link
    to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit [packt.com](http://www.packt.com/).
  prefs: []
  type: TYPE_NORMAL
