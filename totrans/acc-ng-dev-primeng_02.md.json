["```js\nexport interface ICourse {\n  id: string;\n  title: string;\n  description?: string;\n  videos: IVideo[];\n}\n```", "```js\nexport interface IVideo {\n  externalId: string;  // YouTube ID\n  title: string;\n  date: Date;\n  author?: string;\n  description?: string;\n}\n```", "```js\nexport interface ISchool {\n  id: string;\n  name: string;\n  longitude: number;\n  latitude: number;\n  courses: ICourse[];\n}\n```", "```js\nconst routes: Routes = [\n  { path: '', redirectTo: 'course/1', pathMatch: 'full' },\n  { path: 'course/:id', component: CourseComponent },\n  { path: 'schools', component: SchoolsComponent },\n  { path: 'theme', component: ThemeComponent },\n];\n```", "```js\n@NgModule({\n  bootstrap: [AppComponent],\n  declarations: [AppComponent, NavigationComponent],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot(routes, { initialNavigation: \n     'enabledNonBlocking' }),\n    LayoutModule,\n    CourseModule,\n    SchoolsModule,\n    ThemeModule,\n    MaterialModule,\n  ],\n})\nexport class AppModule {}\n```", "```js\n@NgModule({\n  declarations: [CourseComponent],\n  imports: [CommonModule, ThemeModule, VideoModule, \n   MaterialModule],\n  exports: [VideoModule],\n})\nexport class CourseModule {}\n```", "```js\n@NgModule({\n  declarations: [VideoComponent],\n  imports: [\n    CommonModule\n    YouTubePlayerModule,\n    ClipboardModule,\n  ],\n  exports: [VideoComponent],\n})\nexport class VideoModule {}\n```", "```js\n@NgModule({\n  declarations: [SchoolsComponent],\n  imports: [CommonModule, MaterialModule, \n   GoogleMapsModule],\n})\nexport class SchoolsModule {}\n```", "```js\n@Injectable({\n  providedIn: 'root'\n})\nexport class CourseService {\n  constructor() { }\n  getCourse(courseId: string): Observable<ICourse> {\n    return of(mockCourse);\n  }\n}\n```", "```js\n@Injectable({\n  providedIn: 'root'\n})\nexport class SchoolsService {\n  constructor() { }\n  getSchools():  Observable<ISchool[]> {\n      return of(mockSchools);\n  }\n}\n```", "```js\n   <mat-nav-list>\n      <a mat-list-item href=\"/#\">Watch course</a>\n      <a mat-list-item href=\"/schools\">Find school</a>\n      <a mat-list-item href=\"/theme\">Edit theme</a>\n  </mat-nav-list>\n\n```", "```js\n @Component({\n  selector: 'workspace-video',\n  templateUrl: './video.component.html',\n  styleUrls: ['./video.scss'],\n})\nexport class VideoComponent implements OnDestroy, OnInit {\n  private youtubeIframeScript: HTMLScriptElement;\n  @Input()\n  public title!: string;\n  @Input()\n  public name!: string;\n  @Input()\n  public videoId!: string;\n  @Input()\n  public description!: string;\n  @Input()\n  public snippet!: string;\n  get youtubeLink () {\n   return this.title \n     + \": https://www.youtube.com/watch?v=\"+this.videoId;\n  }\n  constructor(@Inject(DOCUMENT) private document: Document) {\n    this.youtubeIframeScript = \n     this.document.createElement('script');\n    this.youtubeIframeScript.src = \n     'https://www.youtube.com/iframe_api';\n    this.youtubeIframeScript.async = true;\n  }\n  ngOnInit(): void {\n    this.document.body.appendChild(\n     this.youtubeIframeScript);\n  }\n  ngOnDestroy(): void {\n    this.document.body.removeChild(\n     this.youtubeIframeScript);\n  }\n} \n```", "```js\n<div class=\"container\">\n  <div class=\"tile video\">\n    <p>\n      <youtube-player videoId=\"{{ videoId }}\"></youtube-\n       player>\n    </p>\n    <p>\n      <button [cdkCopyToClipboard]=\"youtubeLink\">Copy video \n       link to clipboard</button>\n    </p>\n  </div>\n  <div class=\"tile text\">\n    <h3>\n      <i>{{ title }}</i>\n    </h3>\n    <p>{{ description }}</p>\n </div>\n</div>\n```", "```js\n<ng-container *ngIf=\"course$ | async as course\">\n  {{ course.title }}\n  <div *ngFor=\"let video of course.videos\">\n    <workspace-video\n      videoId=\"{{video.externalId}}\"\n      title=\"{{video.title}}\"\n      description=\"{{video.description}}\"\n    >\n    </workspace-video>\n  </div>\n</ng-container>\n```", "```js\n@Component({\n  selector: 'workspace-schools',\n  templateUrl: './schools.component.html',\n  styleUrls: ['./schools.component.scss'],\n})\nexport class SchoolsComponent {\n  @ViewChild(GoogleMap, { static: false }) map!: GoogleMap;\n  @ViewChild(MapInfoWindow, { static: false }) info!: \n   MapInfoWindow;\n  school!: ISchool;\n  schools$: Observable<ISchool[]>;\n  constructor(\n    schoolsService: SchoolsService\n  ) {\n    this.schools$ = schoolsService.getSchools();\n  }\n  openInfo(anchor: MapAnchorPoint, school: ISchool): void {\n    this.school = school;\n    this.info.open(anchor);\n  }\n}\n```", "```js\n<ng-container *ngIf=\"schools$ | async as schools\">\n  <google-map [center]=\"{ lat: 56.783778, lng: 8.228937 }\">\n    <map-marker\n      *ngFor=\"let school of schools\"\n      #marker=\"mapMarker\"\n      [position]=\"{ lat: school.longitude, lng: \n       school.latitude }\"\n      (mapClick)=\"openInfo(marker, school)\"\n    ></map-marker>\n    <map-info-window>\n      <div *ngFor=\"let course of school?.courses\">\n        <a href=\"course/{{ course.id }}\"> {{ course.title \n         }} </a>\n      </div>\n    </map-info-window>\n  </google-map>\n</ng-container>\n```"]