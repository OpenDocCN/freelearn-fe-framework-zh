- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: Building Your First Angular Application
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建您的第一个 Angular 应用程序
- en: Web development has undergone huge growth during the last decade. Frameworks,
    libraries, and tools have emerged that enable developers to build great web applications.
    Angular has paved the way by creating a framework focusing on application performance,
    development ergonomics, and modern web techniques.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去十年中，网络开发经历了巨大的增长。出现了框架、库和工具，使开发者能够构建出色的网络应用程序。Angular 通过创建一个专注于应用性能、开发人体工程学和现代网络技术的框架，开辟了道路。
- en: Before developing Angular applications, we need to learn some basic but essential
    things to have a great experience with the Angular framework. One of the primary
    things we should know is what Angular is and why we should use it for web development.
    We will also take a tour in this chapter of Angular history to understand how
    the framework has evolved.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发 Angular 应用程序之前，我们需要学习一些基本但至关重要的东西，以便在 Angular 框架中获得良好的体验。我们应该知道的首要事情之一是
    Angular 是什么以及为什么我们应该用它来进行网络开发。我们还将在本章中游览 Angular 的历史，以了解框架是如何演变的。
- en: Another important but sometimes challenging introductory topic is setting up
    our development environment. It must be done at the beginning of a project and
    getting this right early can reduce friction as our application grows. Therefore,
    a large part of this chapter is dedicated to the **Angular CLI** , a tool developed
    by the Angular team that provides scaffolding and automation tasks in an Angular
    application, eliminating configuration boilerplate and enabling developers to
    focus on the coding process. We will use the Angular CLI to create our first application
    from scratch, get a feel for the anatomy of an Angular application, and take a
    sneak peek at how Angular works under the hood.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个重要但有时具有挑战性的入门主题是设置我们的开发环境。这必须在项目开始时完成，并且尽早正确设置可以减少随着应用程序的增长而产生的摩擦。因此，本章的大部分内容都致力于
    **Angular CLI**，这是 Angular 团队开发的一个工具，它为 Angular 应用程序提供脚手架和自动化任务，消除配置样板，使开发者能够专注于编码过程。我们将使用
    Angular CLI 从头开始创建我们的第一个应用程序，了解 Angular 应用程序的解剖结构，并一窥 Angular 内部的工作原理。
- en: Working on an Angular project without help from development tools, such as an
    **Integrated Development Environment** ( **IDE** ), can be painful. Our favorite
    code editor can provide an agile development workflow that includes compilation
    at runtime, static type checking, introspection, code completion, and visual assistance
    to debug and build our application. We will highlight some of the most popular
    tools in the Angular ecosystem in this chapter, such as **Angular DevTools** and
    **Visual Studio Code** ( **VSCode** ).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在没有开发工具（如集成开发环境 **IDE**）的帮助下进行 Angular 项目的开发可能会很痛苦。我们最喜欢的代码编辑器可以提供敏捷的开发工作流程，包括运行时编译、静态类型检查、内省、代码补全以及调试和构建我们的应用程序的视觉辅助。在本章中，我们将突出介绍
    Angular 生态系统中最受欢迎的一些工具，例如 **Angular DevTools** 和 **Visual Studio Code** ( **VSCode**
    )。
- en: 'To sum up, here are the main topics that we will explore in this chapter:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 总结，以下是本章我们将探讨的主要主题：
- en: What is Angular?
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是 Angular？
- en: Why choose Angular?
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么选择 Angular？
- en: Setting up the Angular CLI workspace
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置 Angular CLI 工作空间
- en: The structure of an Angular application
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Angular 应用程序的结构
- en: Angular tooling
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Angular 工具
- en: Technical requirements
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: '**GitHub** : [https://github.com/PacktPublishing/Learning-Angular-Fifth-Edition/tree/main/ch01](https://github.com/PacktPublishing/Learning-Angular-Fifth-Edition/tree/main/ch01
    )'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GitHub** : [https://github.com/PacktPublishing/Learning-Angular-Fifth-Edition/tree/main/ch01](https://github.com/PacktPublishing/Learning-Angular-Fifth-Edition/tree/main/ch01)'
- en: '**Node.js** : [https://nodejs.org](https://nodejs.org )'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Node.js** : [https://nodejs.org](https://nodejs.org)'
- en: '**Git** : [https://git-scm.com](https://git-scm.com )'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Git** : [https://git-scm.com](https://git-scm.com)'
- en: '**VSCode** : [https://code.visualstudio.com](https://code.visualstudio.com
    )'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**VSCode** : [https://code.visualstudio.com](https://code.visualstudio.com)'
- en: '**Angular DevTools** : [https://angular.dev/tools/devtools](https://angular.dev/tools/devtools
    )'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Angular DevTools** : [https://angular.dev/tools/devtools](https://angular.dev/tools/devtools)'
- en: What is Angular?
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 Angular？
- en: Angular is a web framework written in the **TypeScript** language and includes
    a CLI, a language service, a debugging tool, and a rich collection of first-party
    libraries.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Angular 是用 **TypeScript** 语言编写的网络框架，包括 CLI、语言服务、调试工具和丰富的第一方库集合。
- en: Libraries included in the Angular framework provided out of the box are called
    first-party libraries.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 包含在 Angular 框架中提供的开箱即用的库被称为第一方库。
- en: Angular enables developers to build scalable web applications with TypeScript,
    a strict syntactic superset of JavaScript, which we will learn about in *Chapter
    2* , *Introduction to TypeScript* .
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Angular使开发者能够使用TypeScript构建可扩展的Web应用程序，TypeScript是JavaScript的严格超集，我们将在*第2章*，*TypeScript简介*中学习它。
- en: The official Angular documentation can be found at [https://angular.dev](https://angular.dev)
    .
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 官方的Angular文档可以在[https://angular.dev](https://angular.dev)找到。
- en: The official Angular documentation is the most up-to-date resource for Angular
    development. It’s preferable to use it over other external resources while developing
    with Angular.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 官方的Angular文档是Angular开发的最新资源。在用Angular开发时，优先使用它而不是其他外部资源。
- en: Google created Angular. The first version, 1.0, was released in 2012 and was
    called **AngularJS** . AngularJS was a JavaScript framework, and web applications
    built with it were written in JavaScript.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Google创建了Angular。第一个版本，1.0，于2012年发布，被称为**AngularJS**。AngularJS是一个JavaScript框架，用其构建的Web应用程序是用JavaScript编写的。
- en: In 2016, the Angular team decided to make a revolutionary change in AngularJS.
    They collaborated with the TypeScript team at Microsoft and introduced the TypeScript
    language into the framework. The next version of the framework, 2.0, was written
    in TypeScript and rebranded as **Angular** with a different logo than AngularJS.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在2016年，Angular团队决定在AngularJS中实施一次革命性的变革。他们与微软的TypeScript团队合作，将TypeScript语言引入到框架中。框架的下一个版本，2.0，是用TypeScript编写的，并重新命名为**Angular**，其标志与AngularJS不同。
- en: 'In 2022, Angular entered a new era of evolutionary advancements known as the
    *Angular Renaissance* . During that period, the framework picked up momentum in
    web development by introducing major innovations focused on enhancing the **Developer
    Experience** ( **DX** ) and optimizing application performance, such as:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 2022年，Angular进入了一个名为*Angular复兴*的新的进化进步时代。在那个时期，框架通过引入专注于增强**开发者体验**（**DX**）和优化应用程序性能的重大创新，在Web开发中获得了动力，例如：
- en: A simple and modern approach to authoring Angular applications
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一种简单现代的方法来编写Angular应用程序
- en: Improved reactivity patterns to manage application state efficiently
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进的响应式模式以有效地管理应用程序状态
- en: The integration of **Server-Side Rendering** ( **SSR** ) techniques to improve
    performance
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成**服务器端渲染**（**SSR**）技术以提高性能
- en: A major milestone in the Angular Renaissance era was **Angular 17** , when the
    Angular team decided to rebrand the framework with a new logo and colors, reflecting
    the recent changes and setting the vision for future advancements.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在Angular复兴时代的一个重大里程碑是**Angular 17**，当时Angular团队决定用新的标志和颜色重新命名框架，反映了最近的变化，并为未来的进步设定了愿景。
- en: In this book, we will cover **Angular 19** , the latest major *stable* version
    of the Angular framework. AngularJS reached the end of its life in 2022, and it
    is no longer supported and maintained by the Angular team.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我们将介绍**Angular 19**，Angular框架的最新主要*稳定*版本。AngularJS在2022年走到了生命的尽头，它不再由Angular团队支持和维护。
- en: Angular is based on the most modern web standards and supports all the evergreen
    browsers. You can find more details about the specific version support of each
    browser at [https://angular.dev/reference/versions#browser-support](https://angular.dev/reference/versions#browser-support)
    .
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Angular基于最现代的Web标准，支持所有长期有效的浏览器。您可以在[https://angular.dev/reference/versions#browser-support](https://angular.dev/reference/versions#browser-support)找到有关每个浏览器特定版本支持的更多详细信息。
- en: In the following section, we will learn the benefits of choosing Angular for
    web development.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将学习选择Angular进行Web开发的益处。
- en: Why choose Angular?
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么选择Angular？
- en: 'The power of the Angular framework is based on the combination of the following
    characteristics:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Angular框架的力量基于以下特性的结合：
- en: 'The main pillars of the framework:'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 框架的主要支柱：
- en: Cross-platform
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跨平台
- en: Incredible tooling
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 令人难以置信的工具
- en: Easy onboarding
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 易于上手
- en: 'The usage of Angular worldwide:'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 全球范围内Angular的使用：
- en: An amazing community
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个令人惊叹的社区
- en: Battle-tested against Google products
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与Google产品进行了实战测试
- en: In the following sections, we will examine each characteristic in more detail.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将更详细地考察每个特性。
- en: Cross-platform
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 跨平台
- en: 'Angular applications can run on different platforms: web, server, desktop,
    and mobile. Angular can run natively only on the web because it is a web framework;
    however, it is open-source and is backed by incredible tooling that enables the
    framework to run on the remaining three using the following tools:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Angular 应用程序可以在不同的平台上运行：Web、服务器、桌面和移动。Angular 只能在 Web 上本地运行，因为它是一个 Web 框架；然而，它是开源的，并拥有令人难以置信的工具支持，使得框架可以通过以下工具在剩余的三个平台上运行：
- en: '**Angular SSR** : Renders Angular applications server-side'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Angular SSR**：在服务器端渲染 Angular 应用程序'
- en: '**Angular service worker** : Enables Angular applications to run as **Progressive
    Web Applications** ( **PWAs** ) that can execute in desktop and native mobile
    environments'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Angular 服务工作者**：使 Angular 应用程序可以作为**渐进式网络应用程序**（**PWAs**）运行，能够在桌面和原生移动环境中执行'
- en: '**Ionic** / **NativeScript** : Allows us to build mobile applications using
    Angular'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Ionic**/**NativeScript**：允许我们使用 Angular 构建移动应用程序'
- en: The next pillar of the framework describes the tooling available in the Angular
    ecosystem.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 框架的下一个支柱描述了 Angular 生态系统中的工具。
- en: Tooling
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工具
- en: 'The Angular team has built two great tools that make Angular development easy
    and fun:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Angular 团队构建了两个出色的工具，使 Angular 开发变得简单且有趣：
- en: '**Angular CLI** : A command-line interface that allows us to work with Angular
    projects, from scaffolding to testing and deployment'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Angular CLI**：一个命令行界面，允许我们处理 Angular 项目，从搭建到测试和部署'
- en: '**Angular DevTools** : A browser extension that enables us to inspect and profile
    Angular applications from the comfort of our browser'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Angular DevTools**：一个浏览器扩展，使我们能够从浏览器中检查和配置 Angular 应用程序'
- en: The Angular CLI is the de facto solution to work with Angular applications.
    It allows the developer to focus on writing application code, eliminating the
    boilerplate of configuration tasks such as scaffolding, building, testing, and
    deploying an Angular application.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Angular CLI 是处理 Angular 应用程序的既定解决方案。它允许开发者专注于编写应用程序代码，消除了配置任务（如搭建、构建、测试和部署 Angular
    应用程序）的样板代码。
- en: Onboarding
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 入门
- en: 'It is simple and easy to start with Angular development because when we install
    Angular, we also get a rich collection of first-party libraries out of the box,
    including:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Angular 开发非常简单且容易入门，因为当我们安装 Angular 时，我们也会获得一套丰富的第一方库，包括：
- en: An Angular HTTP client to communicate with external resources over HTTP
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 Angular HTTP 客户端用于通过 HTTP 与外部资源通信
- en: Angular forms to create HTML forms to collect input and data from users
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Angular 创建 HTML 表单以收集用户输入和数据
- en: An Angular router to perform in-app navigations
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 Angular 路由器用于执行应用程序内的导航
- en: The preceding libraries are installed by default when we create a new Angular
    application using the Angular CLI. However, they are only used in our application
    if we import them explicitly into our project.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们使用 Angular CLI 创建新的 Angular 应用程序时，这些库默认安装。然而，只有当我们明确将它们导入到我们的项目中时，它们才会在我们的应用程序中使用。
- en: The usage of Angular worldwide
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Angular 在全球的使用情况
- en: Many companies use Angular for their websites and web applications. The website
    [https://www.madewithangular.com](https://www.madewithangular.com) contains an
    extensive list of those companies, including some popular ones.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 许多公司使用 Angular 来构建他们的网站和 Web 应用程序。网站 [https://www.madewithangular.com](https://www.madewithangular.com)
    包含了这些公司的详尽列表，其中包括一些流行的公司。
- en: Additionally, Angular is used in thousands of projects by Google and by millions
    of developers worldwide. The fact that Angular is already used internally at Google
    is a crucial factor in the reliability of the framework. Every new version of
    Angular is thoroughly tested in those projects before becoming available to the
    public. The testing process helps the Angular team catch bugs early and delivers
    a top-quality framework to the rest of the developer community.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Angular 被谷歌和全球数百万开发者用于成千上万个项目中。Angular 已经在谷歌内部使用的事实是框架可靠性的关键因素。Angular 的每个新版本在公开发布之前都会在这些项目中经过彻底测试。测试过程帮助
    Angular 团队尽早发现错误，并向整个开发者社区交付高质量的框架。
- en: 'Angular is backed and supported by a thriving developer community. Developers
    can access many available communities worldwide, online or locally, to get help
    and guidance with the Angular framework. On the other hand, communities help the
    Angular framework progress by sharing feedback on new features, testing new ideas,
    and reporting issues. Some of the most popular online communities are:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Angular得到了一个繁荣的开发者社区的支持。开发者可以访问全球许多可用的社区，无论是线上还是线下，以获得关于Angular框架的帮助和指导。另一方面，社区通过分享对新特性的反馈、测试新想法和报告问题来帮助Angular框架进步。一些最受欢迎的在线社区包括：
- en: '**Tech Stack Nation** : The world’s friendliest Angular study group that brings
    together Angular developers who are passionate about improving their confidence
    in building amazing Angular applications. Tech Stack Nation is a community where
    Angular developers can collaborate, learn from each other’s expertise, and push
    the boundaries of what Angular can achieve. You can join Tech Stack Nation at
    [https://techstacknation.com](https://techstacknation.com) .'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Tech Stack Nation**：世界上友好的Angular学习小组，将热衷于提高构建出色Angular应用程序信心的Angular开发者聚集在一起。Tech
    Stack Nation是一个Angular开发者可以协作、从彼此的专业知识中学习并推动Angular所能实现边界的社区。您可以通过[https://techstacknation.com](https://techstacknation.com)加入Tech
    Stack Nation。'
- en: '**Angular Community Discord** : Angular’s official Discord server that brings
    the incredible Angular community together. Everyone is welcome to join the community
    with the click of a button. It is the central location to connect Angular team
    members, **Google Developer Experts** ( **GDEs** ), library authors, meetup groups,
    and anyone interested in learning the framework. You can join the Angular Community
    Discord server at [https://discord.gg/angular](https://discord.gg/angular) .'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Angular Community Discord**：Angular的官方Discord服务器，将令人难以置信的Angular社区聚集在一起。每个人都可以通过点击按钮加入社区。这是连接Angular团队成员、**Google开发者专家**（**GDEs**）、库作者、聚会小组以及任何对学习框架感兴趣的人的中心位置。您可以通过[https://discord.gg/angular](https://discord.gg/angular)加入Angular
    Community Discord服务器。'
- en: '**Angular.love** : A community platform for Angular enthusiasts, supported
    by *House of Angular* , to facilitate the growth of Angular developers through
    knowledge-sharing initiatives. It started as a blog where experts published articles
    about Angular news, features, and best practices. Now, Angular.love also organizes
    in-person and online meetups, frequently featuring GDEs. You can join Angular.love
    at [https://angular.love](https://angular.love) .'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Angular.love**：一个由*House of Angular*支持的Angular爱好者社区平台，通过知识共享活动促进Angular开发者成长。它最初是一个博客，专家在这里发布关于Angular新闻、特性和最佳实践的文章。现在，Angular.love还组织线下和线上的聚会，经常邀请GDEs参加。您可以通过[https://angular.love](https://angular.love)加入Angular.love。'
- en: Now that we have seen what Angular is and why someone should choose it for web
    development, we will learn how to use it and build great web applications.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了Angular是什么以及为什么有人会选择它进行Web开发，我们将学习如何使用它来构建优秀的Web应用程序。
- en: Setting up the Angular CLI workspace
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置Angular CLI工作区
- en: Setting up a project with Angular can be tricky. You need to know what libraries
    to import and ensure that files are processed in the correct order, which leads
    us to the topic of scaffolding. Scaffolding is a tool to automate tasks, such
    as generating a project from scratch, and it becomes necessary as complexity grows
    and where every hour counts toward producing business value, rather than being
    spent fighting configuration problems.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Angular设置项目可能会很棘手。您需要知道要导入哪些库，并确保文件以正确的顺序处理，这使我们来到了脚手架（scaffolding）这一主题。脚手架是一个自动化任务的工具，例如从头开始生成项目，随着复杂性的增加和每小时都关系到产生商业价值而不是花费在解决配置问题上，它变得必要。
- en: The primary motivation behind creating the Angular CLI was to help developers
    focus on application building, eliminating the configuration boilerplate. Essentially,
    with a simple command, you should be able to initialize an application, add new
    artifacts, run tests, update applications, and create a production-grade bundle.
    The Angular CLI supports all of this using special commands called **schematics**
    .
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 创建Angular CLI的主要动机是帮助开发者专注于应用程序构建，消除配置模板。本质上，通过一个简单的命令，您应该能够初始化应用程序、添加新工件、运行测试、更新应用程序以及创建生产级别的捆绑包。Angular
    CLI使用称为**schematics**的特殊命令来实现所有这些。
- en: Prerequisites
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 前提条件
- en: Before we begin, we must ensure that our development environment includes software
    tools essential to the Angular development workflow.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始之前，我们必须确保我们的开发环境包括对Angular开发工作流程至关重要的软件工具。
- en: Node.js
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Node.js
- en: Node.js is a JavaScript runtime built on top of Chrome’s v8 JavaScript engine.
    Angular requires an active or maintenance **Long-Time Support** ( **LTS** ) version.
    If you have already installed it, you can run `node -v` on the command line to
    check which version you are running.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Node.js是建立在Chrome v8 JavaScript引擎之上的JavaScript运行时。Angular需要一个活跃或维护的**长期支持**（**LTS**）版本。如果您已经安装了它，您可以在命令行上运行`node
    -v`来检查您正在运行哪个版本。
- en: If you need to work with applications that use different Node.js versions or
    can’t install the runtime due to restricted permissions, use **nvm** , a version
    manager for Node.js designed to be installed per user. You can learn more at [https://github.com/nvm-sh/nvm](https://github.com/nvm-sh/nvm)
    .
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要处理使用不同Node.js版本的应用程序或由于权限限制而无法安装运行时，请使用**nvm**，这是一个为Node.js设计的版本管理器，旨在按用户安装。您可以在[https://github.com/nvm-sh/nvm](https://github.com/nvm-sh/nvm)上了解更多信息。
- en: npm
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: npm
- en: npm is a software package manager that is included by default in Node.js. You
    can check this out by running `npm -v` in the command line. An Angular application
    consists of various libraries, called *packages* , that exist in a central place
    called the *npm registry* . The npm client downloads and installs the libraries
    needed to run your application from the npm registry to your local computer.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: npm是Node.js默认包含的软件包管理器。您可以在命令行中运行`npm -v`来查看它。Angular应用程序由各种库组成，称为*包*，它们存在于一个称为*npm注册处*的中心位置。npm客户端从npm注册处下载并安装运行应用程序所需的库到您的本地计算机。
- en: Git
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Git
- en: Git is a client that allows us to connect to distributed version-control systems,
    such as GitHub, Bitbucket, and GitLab. It is optional from the perspective of
    the Angular CLI. You should install it if you want to upload your Angular project
    to a Git repository, which you might want to do.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: Git是一个客户端，允许我们连接到分布式版本控制系统，如GitHub、Bitbucket和GitLab。从Angular CLI的角度来看，它是可选的。如果您想将Angular项目上传到Git仓库，您可能需要这样做，那么您应该安装它。
- en: Installing the Angular CLI
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Angular CLI
- en: 'The Angular CLI is part of the Angular ecosystem and can be downloaded from
    the npm package registry. Since it is used to create Angular projects, we must
    install it globally in our system. Open a terminal window and run the following
    command:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: Angular CLI是Angular生态系统的一部分，可以从npm包注册处下载。由于它用于创建Angular项目，我们必须在系统中全局安装它。打开一个终端窗口并运行以下命令：
- en: '[PRE0]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You may need elevated permissions on some Windows systems, so you should run
    your terminal as an administrator. Run the preceding command in Linux/macOS systems
    by adding the `sudo` keyword as a prefix to execute with administrative privileges.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能在某些Windows系统上需要提升权限，因此您应该以管理员身份运行您的终端。在Linux/macOS系统上运行前面的命令时，请添加`sudo`关键字作为前缀以具有管理权限执行。
- en: 'The command that we used to install the Angular CLI uses the `npm` client,
    followed by a set of runtime arguments:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们用来安装Angular CLI的命令使用了`npm`客户端，后面跟着一系列运行时参数：
- en: '`install` or `i` : Denotes the installation of a package'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`install`或`i`：表示安装一个包'
- en: '`-g` or `--global` : Indicates that the package will be installed on the system
    globally'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-g`或`--global`：表示包将在系统上全局安装'
- en: '`@angular/cli` : The name of the package to install'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`@angular/cli`：要安装的包的名称'
- en: 'The Angular CLI follows the same version as the Angular framework, which in
    this book is 19. The preceding command will install the latest *stable* version
    of the Angular CLI. You can check which version you have installed by running
    `ng version` or `ng v` in the command line. If you have a different version than
    19 after installing it, you can run the following command:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: Angular CLI遵循与Angular框架相同的版本，本书中为19版本。前面的命令将安装Angular CLI的最新*稳定*版本。您可以通过在命令行中运行`ng
    version`或`ng v`来检查您已安装的版本。如果您安装后版本不是19，可以运行以下命令：
- en: '[PRE1]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The preceding command will fetch and install the latest version of Angular CLI
    19.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的命令将检索并安装Angular CLI 19的最新版本。
- en: CLI commands
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CLI命令
- en: 'The Angular CLI is a command-line interface tool that automates specific tasks
    during development, such as serving, building, bundling, updating, and testing
    an Angular project. As the name implies, it uses the command line to invoke the
    `ng` executable file and run commands using the following syntax:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: Angular CLI是一个命令行界面工具，在开发过程中自动化特定任务，例如提供、构建、打包、更新和测试Angular项目。正如其名所示，它使用命令行来调用`ng`可执行文件，并使用以下语法运行命令：
- en: '[PRE2]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Here, `[command]` is the name of the command to be executed, and `[options]`
    denotes additional parameters that can be passed to each command. To view all
    available commands, you can run the following:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`[command]` 是要执行的命令的名称，而 `[options]` 表示可以传递给每个命令的附加参数。要查看所有可用的命令，你可以运行以下命令：
- en: '[PRE3]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Some commands can be invoked using an alias instead of the name. In this book,
    we cover the most common ones (the alias of each command is shown inside parentheses):'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 一些命令可以使用别名而不是名称来调用。在这本书中，我们涵盖了最常见的命令（每个命令的别名显示在括号内）：
- en: '`new` ( `n` ): Creates a new Angular CLI workspace from scratch'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`new` (`n`): 从头创建一个新的 Angular CLI 工作空间'
- en: '`build` ( `b` ): Compiles an Angular application and outputs generated files
    in a predefined folder'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`build` (`b`): 编译一个 Angular 应用程序，并在预定义的文件夹中输出生成的文件'
- en: '`generate` ( `g` ): Creates new files that comprise an Angular application'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`generate` (`g`): 创建构成 Angular 应用程序的新文件'
- en: '`serve` ( `dev` ): Builds an Angular application and serves it using a pre-configured
    web server'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`serve` (`dev`): 使用预配置的 web 服务器构建 Angular 应用程序并提供服务'
- en: '`test` ( `t` ): Runs the unit tests of an Angular application'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`test` (`t`): 运行 Angular 应用程序的单元测试'
- en: '`add` : Installs an Angular library in an Angular application'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`add` : 在 Angular 应用程序中安装 Angular 库'
- en: '`update` : Updates an Angular application to the latest Angular version'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`update` : 将 Angular 应用程序更新到最新的 Angular 版本'
- en: You can find more Angular CLI commands at [https://angular.dev/cli](https://angular.dev/cli)
    .
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 [https://angular.dev/cli](https://angular.dev/cli) 找到更多 Angular CLI 命令。
- en: Updating an Angular application is one of the most critical tasks from the preceding
    list. It helps us stay up to date by upgrading our Angular applications to the
    latest version.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 更新 Angular 应用程序是上述列表中最关键的任务之一。它通过将我们的 Angular 应用程序升级到最新版本来帮助我们保持最新。
- en: Try to keep your Angular projects up to date because each new version of Angular
    comes packed with many exciting new features, performance improvements, and bug
    fixes.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 尽量保持你的 Angular 项目更新，因为每个新的 Angular 版本都包含了许多令人兴奋的新功能、性能改进和错误修复。
- en: Additionally, you can use the Angular upgrade guide, which contains tips and
    step-by-step instructions on updating your applications, at [https://angular.dev/update-guide](https://angular.dev/update-guide)
    .
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你还可以使用 Angular 升级指南，其中包含有关更新应用程序的提示和分步说明，请访问 [https://angular.dev/update-guide](https://angular.dev/update-guide)。
- en: Creating a new project
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建新项目
- en: 'Now that we have prepared our development environment, we can start creating
    our first Angular application. We will use the `ng new` command of the Angular
    CLI and pass the name of the application that we want to create as an option:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经准备好了我们的开发环境，我们可以开始创建我们的第一个 Angular 应用程序。我们将使用 Angular CLI 的 `ng new` 命令，并将我们想要创建的应用程序的名称作为选项传递：
- en: Open a terminal window, navigate to a folder of your choice, and run the command
    `ng new my-app` . Creating a new Angular application is a straightforward process.
    The Angular CLI will ask for details about the application we want to create so
    that it can scaffold the Angular project as best as possible.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个终端窗口，导航到你选择的文件夹，并运行命令 `ng new my-app`。创建一个新的 Angular 应用程序是一个简单的过程。Angular
    CLI 将询问我们想要创建的应用程序的详细信息，以便它能够尽可能好地构建 Angular 项目。
- en: 'Initially, it will ask if we want to enable Angular analytics:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 初始时，它将询问我们是否想要启用 Angular 分析：
- en: '[PRE4]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The Angular CLI will ask this question once when we create the first Angular
    project and apply it globally in our system. However, we can change the setting
    later in a specific Angular workspace.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: Angular CLI 将在创建第一个 Angular 项目时询问这个问题一次，并将其全局应用于我们的系统。然而，我们可以在特定的 Angular 工作空间中稍后更改设置。
- en: 'The next question is related to the styling of our application:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一个问题与我们应用程序的样式有关：
- en: '[PRE5]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: It is common to use CSS to style Angular applications. However, we can use preprocessors
    like **SCSS** or **Less** to add value to our development workflow. In this book,
    we work with CSS directly, so accept the default choice, `CSS` , and press *Enter*
    .
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 CSS 来样式化 Angular 应用程序是很常见的。然而，我们可以使用预处理程序如 **SCSS** 或 **Less** 来增加我们的开发工作流程的价值。在这本书中，我们直接使用
    CSS，所以接受默认选择 `CSS` 并按 *Enter*。
- en: 'Finally, the Angular CLI will prompt us if we want to enable SSR and **Static
    Site Generation** ( **SSG** ) in our application:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，Angular CLI 将提示我们是否想要在我们的应用程序中启用 SSR 和 **静态站点生成** ( **SSG** )：
- en: '[PRE6]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: SSR and SSG are concerned with improving the startup and load performance of
    an Angular application. We will learn more about them in *Chapter 15* , *Optimizing
    Application Performance* . For now, accept the default choice, `No` , by pressing
    *Enter* .
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: SSR 和 SSG 与提高 Angular 应用程序的启动和加载性能有关。我们将在第 15 章 *优化应用程序性能* 中了解更多关于它们的内容。现在，通过按
    *Enter* 键接受默认选择 `No`。
- en: The process may take some time, depending on your internet connection. During
    this time, the Angular CLI downloads and installs all necessary packages and creates
    default files for your Angular application. When finished, it will have created
    a folder called `my-app` . The folder represents an Angular CLI workspace that
    contains a single Angular application called `my-app` at the root level.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 该过程可能需要一些时间，具体取决于您的互联网连接。在此期间，Angular CLI 将下载并安装所有必要的包，并为您的 Angular 应用程序创建默认文件。完成后，它将创建一个名为
    `my-app` 的文件夹。该文件夹代表一个 Angular CLI 工作区，其中包含一个名为 `my-app` 的 Angular 应用程序，位于根级别。
- en: 'The workspace contains various folders and configuration files that the Angular
    CLI needs to build and test the Angular application:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 工作区包含各种文件夹和配置文件，Angular CLI 需要这些文件来构建和测试 Angular 应用程序：
- en: '`.vscode` : Includes VSCode configuration files'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.vscode`：包含 VSCode 配置文件'
- en: '`node_modules` : Includes installed npm packages that are needed to develop
    and run the Angular application'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`node_modules`：包含开发并运行 Angular 应用程序所需的已安装 npm 包'
- en: '`public` : Contains static assets such as fonts, images, and icons'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`public`：包含字体、图像和图标等静态资产'
- en: '`src` : Contains the source files of the application'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`src`：包含应用程序的源文件'
- en: '`.editorconfig` : Defines coding styles for the default editor'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.editorconfig`：定义默认编辑器的编码风格'
- en: '`.gitignore` : Specifies the files and folders that Git should not track'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.gitignore`：指定 Git 应该不跟踪的文件和文件夹'
- en: '`angular.json` : The main configuration file of the Angular CLI workspace'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`angular.json`：Angular CLI 工作区的主要配置文件'
- en: '`package.json` and `package-lock.json` : Provide definitions of npm packages,
    along with their exact versions, which are needed to develop, test, and run the
    Angular application'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`package.json` 和 `package-lock.json`：提供 npm 包的定义，包括它们的精确版本，这些版本对于开发、测试和运行 Angular
    应用程序是必需的'
- en: '`README.md` : A README file that is automatically generated from the Angular
    CLI'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`README.md`：由 Angular CLI 自动生成的 README 文件'
- en: '`tsconfig.app.json` : A TypeScript configuration that is specific to the Angular
    application'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tsconfig.app.json`：针对 Angular 应用程序特定的 TypeScript 配置'
- en: '`tsconfig.json` : A TypeScript configuration that is specific to the Angular
    CLI workspace'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tsconfig.json`：针对 Angular CLI 工作区的 TypeScript 配置'
- en: '`tsconfig.spec.json` : A TypeScript configuration that is specific to unit
    tests of the Angular application'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tsconfig.spec.json`：针对 Angular 应用程序单元测试的 TypeScript 配置'
- en: As developers, we should only care about writing the source code that implements
    features for our application. Nevertheless, having basic knowledge of how the
    application is orchestrated and configured helps us better understand the mechanics
    and ways to intervene if necessary.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 作为开发者，我们只应该关心编写实现我们应用程序功能的源代码。然而，了解应用程序是如何编排和配置的基本知识有助于我们更好地理解其机制，并在必要时进行干预。
- en: 'Navigate to the newly created folder and start your application with the following
    command:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 导航到新创建的文件夹，并使用以下命令启动您的应用程序：
- en: '[PRE7]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Remember that any Angular CLI command must be run inside an Angular CLI workspace
    folder.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，任何 Angular CLI 命令都必须在 Angular CLI 工作区文件夹内运行。
- en: The Angular CLI compiles the Angular project and starts a web server that watches
    for changes in project files. This way, whenever you change your application code,
    the web server rebuilds the project to reflect the new changes.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: Angular CLI 编译 Angular 项目并启动一个监视项目文件变化的 Web 服务器。这样，每当您更改应用程序代码时，Web 服务器都会重新构建项目以反映新的更改。
- en: 'After compilation has been completed successfully, you can preview the application
    by opening your browser and navigating to `http://localhost:4200` :'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 编译成功完成后，您可以通过打开浏览器并导航到 `http://localhost:4200` 来预览应用程序：
- en: '![Εικόνα που περιέχει κείμενο, στιγμιότυπο οθόνης, γραμματοσειρά  Περιγραφή
    που δημιουργήθηκε αυτόματα](img/B21418_01_01.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![包含文本、屏幕截图、字体样式的图像，自动生成的描述](img/B21418_01_01.png)'
- en: 'Figure 1.1: Angular application landing page'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.1：Angular 应用程序登录页面
- en: Congratulations! You have created your first Angular CLI workspace. The Angular
    CLI created a sample web page that we can use as a reference to build our project.
    In the next section, we will explore the main parts of our application and learn
    how to modify this page.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您已经创建了您的第一个 Angular CLI 工作空间。Angular CLI 创建了一个示例网页，我们可以将其用作构建项目的参考。在下一节中，我们将探索应用程序的主要部分，并学习如何修改此页面。
- en: The structure of an Angular application
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Angular 应用程序的结构
- en: 'We will take the first intrepid steps in examining our Angular application.
    The Angular CLI has already scaffolded our project and done much of the heavy
    lifting for us. All we need to do is fire up our favorite IDE and start working
    with the Angular project. We will use VSCode in this book, but feel free to choose
    any editor you are comfortable with:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将勇敢地迈出第一步来检查我们的 Angular 应用程序。Angular CLI 已经为我们搭建了项目并完成了大部分繁重的工作。我们所需做的就是启动我们最喜欢的
    IDE 并开始与 Angular 项目一起工作。本书中我们将使用 VSCode，但请随意选择您熟悉的任何编辑器：
- en: Open VSCode and select **File** | **Open Folder…** from the main menu.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 VSCode 并从主菜单中选择 **文件** | **打开文件夹…**。
- en: Navigate to the `my-app` folder and select it. VSCode will load the associated
    Angular CLI workspace.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 `my-app` 文件夹并选择它。VSCode 将加载相关的 Angular CLI 工作空间。
- en: Expand the `src` folder.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 展开文件夹 `src`。
- en: 'When we develop an Angular application, we’ll likely interact with the `src`
    folder. It is where we write the code and tests of our application. It contains
    the following:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们开发 Angular 应用程序时，我们可能会与 `src` 文件夹进行交互。这是我们编写应用程序代码和测试的地方。它包含以下内容：
- en: '`app` : All the Angular-related files of the application. You interact with
    this folder most of the time during development.'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app`：应用程序的所有 Angular 相关文件。在开发过程中，您大部分时间都会与此文件夹进行交互。'
- en: '`index.html` : The main HTML page of the Angular application.'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`index.html`：Angular 应用程序的主 HTML 页面。'
- en: '`main.ts` : The main entry point of the Angular application.'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`main.ts`：Angular 应用程序的主入口点。'
- en: '`styles.css` : CSS styles that apply globally to the Angular application. The
    extension of this file depends on the stylesheet format you choose when creating
    the application.'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`styles.css`：适用于 Angular 应用程序的全局 CSS 样式。此文件的扩展名取决于创建应用程序时选择的样式表格式。'
- en: 'The `app` folder contains the actual source code we write for our application.
    Developers spend most of their time inside that folder. The Angular application
    that was created automatically from the Angular CLI contains the following files:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '`app` 文件夹包含我们为应用程序编写的实际源代码。开发者大部分时间都在这个文件夹内工作。由 Angular CLI 自动创建的 Angular 应用程序包含以下文件：'
- en: '`app.component.css` : Contains CSS styles specific to the sample page. The
    extension of this file depends on the stylesheet format you choose when creating
    the application.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app.component.css`：包含针对示例页面的特定 CSS 样式。此文件的扩展名取决于创建应用程序时选择的样式表格式。'
- en: '`app.component.html` : Contains the HTML content of the sample page.'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app.component.html`：包含示例页面的 HTML 内容。'
- en: '`app.component.spec.ts` : Contains unit tests for the sample page.'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app.component.spec.ts`：包含示例页面的单元测试。'
- en: '`app.component.ts` : Defines the *presentational logic* of the sample page.'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app.component.ts`：定义示例页面的**展示逻辑**。'
- en: '`app.config.ts` : Defines the configuration of the Angular application.'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app.config.ts`：定义 Angular 应用程序的配置。'
- en: '`app.routes.ts` : Defines the routing configuration of the Angular application.'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app.routes.ts`：定义 Angular 应用程序的路由配置。'
- en: The filename extension `.ts` refers to TypeScript files.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 文件名扩展名 `.ts` 指的是 TypeScript 文件。
- en: In the following sections, we will learn how Angular orchestrates some of those
    files to display the sample page of the application.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下章节中，我们将学习 Angular 如何编排一些文件以显示应用程序的示例页面。
- en: Components
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 组件
- en: The files whose names start with `app.component` constitute an **Angular component**
    . A component in Angular controls part of a web page by orchestrating the interaction
    of the presentational logic with the HTML content of the page, called a **template**
    .
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 以 `app.component` 开头的文件名构成一个**Angular 组件**。在 Angular 中，组件通过编排展示逻辑与页面 HTML 内容（称为**模板**）的交互来控制网页的一部分。
- en: 'Each Angular application has a main HTML file, named `index.html` , that exists
    inside the `src` folder and contains the following `<body>` HTML element:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 每个 Angular 应用程序都有一个主要的 HTML 文件，名为 `index.html`，它位于 `src` 文件夹中，并包含以下 `<body>`
    HTML 元素：
- en: '[PRE8]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The `<app-root>` tag is used to identify the main component of the application
    and acts as a container to display its HTML content. It instructs Angular to render
    the template of the main component inside that tag. We will learn how it works
    in *Chapter 3* , *Structuring User Interfaces with Components* .
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '`<app-root>` 标签用于识别应用程序的主要组件，并作为显示其 HTML 内容的容器。它指示 Angular 在该标签内渲染主要组件的模板。我们将在
    *第 3 章*，*使用组件构建用户界面* 中学习它是如何工作的。'
- en: When the Angular CLI builds an Angular application, it parses the `index.html`
    file and identifies HTML tags inside the `<body>` element. An Angular application
    is always rendered inside the `<body>` element and comprises a tree of components.
    When the Angular CLI finds a tag that is not a known HTML element, such as `<app-root>`
    , it starts searching through the components of the application tree. But how
    does it know where to start?
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 当 Angular CLI 构建一个 Angular 应用程序时，它会解析 `index.html` 文件并识别 `<body>` 元素内的 HTML
    标签。Angular 应用程序始终在 `<body>` 元素内渲染，并包含一个组件树。当 Angular CLI 发现一个不是已知 HTML 元素的标签，例如
    `<app-root>`，它就会开始搜索应用程序树中的组件。但它是如何知道从哪里开始的呢？
- en: Bootstrapping
  id: totrans-169
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引导启动
- en: 'The startup method of an Angular application is called **bootstrapping** ,
    and it is defined in the `main.ts` file inside the `src` folder:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: Angular 应用程序的启动方法称为 **引导启动**，它在 `src` 文件夹内的 `main.ts` 文件中定义：
- en: '[PRE9]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The main task of the bootstrapping file is to define the component that will
    be loaded at application startup. It calls the `bootstrapApplication` method,
    passing `AppComponent` as a parameter to specify the starting component of the
    application. It also passes the `appConfig` object as a second parameter to specify
    the configuration that will be used in the application startup. The application
    configuration is described in the `app.config.ts` file:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 引导启动文件的 主要任务是定义在应用程序启动时将加载的组件。它调用 `bootstrapApplication` 方法，传递 `AppComponent`
    作为参数以指定应用程序的起始组件。它还传递 `appConfig` 对象作为第二个参数以指定在应用程序启动时将使用的配置。应用程序配置在 `app.config.ts`
    文件中描述：
- en: '[PRE10]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The `appConfig` object contains a `providers` property to define services provided
    throughout the Angular application. We will learn more about services in *Chapter
    5* , *Managing Complex Tasks with Services* .
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '`appConfig` 对象包含一个 `providers` 属性，用于定义在 Angular 应用程序中提供的所有服务。我们将在 *第 5 章*，*使用服务管理复杂任务*
    中了解更多关于服务的内容。'
- en: 'A new Angular CLI application provides routing services by default. Routing
    is related to in-app navigation between different components using the browser
    URL. It is activated using the `provideRouter` method, passing a `routes` object,
    called **route configuration** , as a parameter. The route configuration of the
    application is defined in the `app.routes.ts` file:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，新的 Angular CLI 应用程序提供了路由服务。路由与使用浏览器 URL 在不同组件之间进行的应用内导航相关。它通过 `provideRouter`
    方法激活，传递一个 `routes` 对象，称为 **路由配置**，作为参数。应用程序的路由配置在 `app.routes.ts` 文件中定义：
- en: '[PRE11]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Our application does not have a route configuration yet, as indicated by the
    empty `routes` array. We will learn how to set up routing and configure it in
    *Chapter 9* , *Navigating through Applications with Routing* .
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的应用程序还没有路由配置，如空的 `routes` 数组所示。我们将在 *第 9 章*，*使用路由导航应用程序* 中学习如何设置路由并对其进行配置。
- en: Template syntax
  id: totrans-178
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模板语法
- en: 'Now that we have taken a brief overview of our sample application, it’s time
    to start interacting with the source code:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经简要概述了我们的示例应用程序，是时候开始与源代码进行交互了：
- en: 'Run the following command in a terminal window to start the application if
    it is not running already:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在终端窗口中运行以下命令以启动应用程序（如果尚未运行）：
- en: '[PRE12]'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: If you are working with VSCode, it is preferable to use its integrated terminal,
    which is accessible from the **Terminal** | **New Terminal** option in the main
    menu.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在使用 VSCode，最好使用其集成的终端，它可以通过主菜单中的 **Terminal** | **New Terminal** 选项访问。
- en: 'Open the application with your browser at `http://localhost:4200` , and notice
    the text below the Angular logo that reads **Hello, my-app** . The word **my-app**
    , which corresponds to the application name, comes from a variable declared in
    the TypeScript file of the main component. Open the `app.component.ts` file and
    locate the `title` variable:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用浏览器打开应用程序 `http://localhost:4200`，注意 Angular 标志下方的文本，显示为 **Hello, my-app**。单词
    **my-app**，与应用程序名称相对应，来自主组件 TypeScript 文件中声明的变量。打开 `app.component.ts` 文件并找到 `title`
    变量：
- en: '[PRE13]'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The `title` variable is a **component property** that is used in the component
    template.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '`title` 变量是一个 **组件属性**，它在组件模板中使用。'
- en: 'Open the `app.component.html` file and go to line 228:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The `title` property is surrounded by double curly braces syntax called **interpolation**
    , which is part of the Angular template syntax. In a nutshell, interpolation converts
    the value of the `title` property to text and prints it on the page.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
- en: Angular uses specific template syntax to extend and enrich the standard HTML
    syntax in the application template. We will learn more about the Angular template
    syntax in *Chapter 3* , *Structuring User Interfaces with Components* .
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: 'Change the value of the `title` property in the `AppComponent` class to `World`
    , save the changes, wait for the application to reload, and examine the output
    in the browser:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Εικόνα που περιέχει κείμενο, γραμματοσειρά, γραφικά, λογότυπο  Περιγραφή
    που δημιουργήθηκε αυτόματα](img/B21418_01_02.png)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.2: Landing page title'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
- en: Congratulations! You have successfully interacted with the source code of your
    application.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
- en: By now, you should have a basic understanding of how Angular works and what
    the basic parts of an Angular application are. As a reader, you have had to absorb
    a lot of information so far. However, you will get a chance to get more acquainted
    with the components in the upcoming chapters. For now, the focus is to get you
    up and running, by giving you a powerful tool like the Angular CLI and showing
    you how only a few steps are needed to display an application on the screen.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: Angular tooling
  id: totrans-195
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'One of the reasons that the Angular framework is popular among developers is
    the rich ecosystem of available tools. The Angular community has built amazing
    tools to complete and automate various tasks, such as debugging, inspecting, and
    authoring Angular applications:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
- en: Angular DevTools
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VSCode Debugger
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VSCode Profiles
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We will learn how to use each in the following sections, starting with Angular
    DevTools.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
- en: Angular DevTools
  id: totrans-201
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Angular DevTools is a browser extension created and maintained by the Angular
    team. It allows us to inspect and profile Angular applications directly in the
    browser. It is currently supported by Google Chrome and Mozilla Firefox and can
    be downloaded from the following browser stores:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
- en: 'Google Chrome: [https://chrome.google.com/webstore/detail/angular-developer-tools/ienfalfjdbdpebioblfackkekamfmbnh](https://chrome.google.com/webstore/detail/angular-developer-tools/ienfalfjdbdpebioblfackkekamfmbnh
    )'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Mozilla Firefox: [https://addons.mozilla.org/firefox/addon/angular-devtools](https://addons.mozilla.org/firefox/addon/angular-devtools
    )'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To open the extension, open the browser developer tools and select the **Angular**
    tab. It contains three additional tabs:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
- en: '**Components** : Displays the component tree of the Angular application'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Profiler** : Allows us to profile and inspect the Angular application'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Injector Tree** : Displays the services provided by the Angular application'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this chapter, we will explore how to use the **Components** tab. We will
    learn how to use the **Profiler** tab in *Chapter 3* , *Structuring User Interfaces
    with Components* , and the **Injector Tree** tab in *Chapter 5* , *Managing Complex
    Tasks with Services* .
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨如何使用**组件**标签页。我们将在*第3章*，*使用组件构建用户界面*中学习如何使用**分析器**标签页，以及在*第5章*，*使用服务管理复杂任务*中使用**注入器树**标签页。
- en: 'The **Components** tab allows us to preview the components and directives of
    an Angular application and interact with them. If we select a component from the
    tree representation, we can view its properties and metadata:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '**组件**标签页允许我们预览Angular应用的组件和指令，并与它们交互。如果我们从树表示中选择一个组件，我们可以查看其属性和元数据：'
- en: '![Εικόνα που περιέχει κείμενο, στιγμιότυπο οθόνης, γραμματοσειρά, αριθμός  Περιγραφή
    που δημιουργήθηκε αυτόματα](img/B21418_01_03.png)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
  zh: '![包含文本、屏幕截图、字体、行号的自动生成的描述](img/B21418_01_03.png)'
- en: 'Figure 1.3: Component preview'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.3：组件预览
- en: 'From the **Components** tab, we can also look up the respective HTML element
    in the DOM or navigate to the actual source code of the component or directive.
    Clicking the **< >** button will take us to the TypeScript file of the current
    component:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 从**组件**标签页，我们还可以在DOM中查找相应的HTML元素或导航到组件或指令的实际源代码。点击**< >**按钮将带我们到当前组件的TypeScript文件：
- en: '![img](img/B21418_01_04.png)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![img](img/B21418_01_04.png)'
- en: 'Figure 1.4: TypeScript source file'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.4：TypeScript源文件
- en: 'Double-clicking a selector from the tree representation of the **Components**
    tab will navigate us to the DOM of the main page and highlight the individual
    HTML element:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 双击**组件**标签页的树表示中的选择器将带我们导航到主页的DOM并突出显示单个HTML元素：
- en: '![Εικόνα που περιέχει κείμενο, στιγμιότυπο οθόνης, γραμματοσειρά, αριθμός  Περιγραφή
    που δημιουργήθηκε αυτόματα](img/B21418_01_05.png)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![包含文本、屏幕截图、字体、行号的自动生成的描述](img/B21418_01_05.png)'
- en: 'Figure 1.5: Main page DOM'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.5：主页DOM
- en: 'Finally, one of the most useful features of the component tree is that we can
    alter the value of a component property and inspect how the component template
    behaves:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，组件树最有用的功能之一是我们可以更改组件属性的值并检查组件模板的行为：
- en: '![Εικόνα που περιέχει κείμενο, στιγμιότυπο οθόνης, γραμματοσειρά, γραμμή  Περιγραφή
    που δημιουργήθηκε αυτόματα](img/B21418_01_06_A.png)'
  id: totrans-220
  prefs: []
  type: TYPE_IMG
  zh: '![包含文本、屏幕截图、字体、行号的自动生成的描述](img/B21418_01_06_A.png)'
- en: 'Figure 1.6: Change component state'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.6：更改组件状态
- en: In the preceding image, you can see that when we changed the value of the **title**
    property to `Angular World` , the change was also reflected in the component template.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的图像中，您可以看到当我们将**title**属性的值更改为`Angular World`时，更改也反映在组件模板中。
- en: VSCode Debugger
  id: totrans-223
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: VSCode调试器
- en: We can debug an Angular application using standard debugging techniques for
    web applications or the tooling that VSCode provides out of the box.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用标准Web应用调试技术或VSCode提供的工具来调试Angular应用。
- en: The `console` object is the most commonly used web API for debugging. It is
    a very fast way to print data and inspect values in the browser console. To inspect
    the value of an object in an Angular component, we can use the `debug` or `log`
    method, passing the object we want to inspect as a parameter. However, it is considered
    an old-fashioned approach, and a codebase with many `console.log` methods is difficult
    to read. An alternate way is to use **breakpoints** inside the source code using
    the VSCode debug menu.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '`console`对象是调试中最常用的Web API。它是一种快速打印数据并在浏览器控制台中检查值的方法。要检查Angular组件中对象的值，我们可以使用`debug`或`log`方法，将我们要检查的对象作为参数传递。然而，这被认为是一种过时的方法，包含许多`console.log`方法的代码库难以阅读。另一种方法是使用VSCode调试菜单中的源代码内的**断点**。'
- en: VSCode is an open-source code editor backed by Microsoft. It is very popular
    in the Angular community, primarily because of its robust support for TypeScript.
    TypeScript has been, to a great extent, a project driven by Microsoft, so it makes
    sense that one of its popular editors was conceived with built-in support for
    this language. It contains a rich collection of useful features, including syntax,
    error highlighting, automatic builds, and debugging.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: VSCode是由微软支持的开放源代码代码编辑器。它在Angular社区中非常受欢迎，主要是因为它对TypeScript的强大支持。TypeScript在很大程度上是由微软推动的项目，因此，其流行的编辑器被构思为内置对该语言的支持是有意义的。它包含丰富的实用功能，包括语法、错误突出显示、自动构建和调试。
- en: VSCode contains a built-in debugging tool that uses breakpoints to debug Angular
    applications. We can add breakpoints inside the source code from VSCode and inspect
    the state of an Angular application. When an Angular application runs and hits
    a breakpoint, it will pause and wait. During that time, we can investigate and
    inspect several values involved in the current execution context.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: VSCode内置了一个调试工具，它使用断点来调试Angular应用程序。我们可以在VSCode中的源代码内添加断点，并检查Angular应用程序的状态。当Angular应用程序运行并遇到断点时，它会暂停并等待。在这段时间内，我们可以调查并检查当前执行上下文中涉及的几个值。
- en: 'Let’s see how to add breakpoints to our sample application:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何向我们的示例应用程序添加断点：
- en: 'Open the `app.component.ts` file and click on the left of line 11 to add a
    breakpoint. A red dot denotes breakpoints:'
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`app.component.ts`文件，并在第11行的左侧添加断点。红色圆点表示断点：
- en: '![Εικόνα που περιέχει κείμενο, στιγμιότυπο οθόνης, γραμματοσειρά, αριθμός  Περιγραφή
    που δημιουργήθηκε αυτόματα](img/B21418_01_07.png)'
  id: totrans-230
  prefs: []
  type: TYPE_IMG
  zh: '![包含文本的图片，屏幕截图，字体，编号  自动生成的描述](img/B21418_01_07.png)'
- en: 'Figure 1.7: Adding a breakpoint'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.7：添加断点
- en: Click on the **Run and Debug** button in the left sidebar of VSCode.
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在VSCode左侧侧边栏中点击**运行和调试**按钮。
- en: 'Click on the play button to start the application using the **ng serve** command:'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击播放按钮，使用**ng serve**命令启动应用程序：
- en: '![img](img/B21418_01_08.png)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B21418_01_08.png)'
- en: 'Figure 1.8: Run and debug menu'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.8：运行和调试菜单
- en: 'VSCode will build our application, open the default web browser, and hit the
    breakpoint inside the editor:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: VSCode将构建我们的应用程序，打开默认的网页浏览器，并在编辑器内设置断点：
- en: '![img](img/B21418_01_09.png)'
  id: totrans-237
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B21418_01_09.png)'
- en: 'Figure 1.9: Hitting a breakpoint'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.9：遇到断点
- en: We can now inspect various aspects of our component and use the buttons in the
    debugger toolbar to control the debugging session.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以检查组件的各个方面，并使用调试工具栏中的按钮来控制调试会话。
- en: Another powerful feature of VSCode is **VSCode Profiles** , which help developers
    customize VSCode according to their development needs.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: VSCode的另一个强大功能是**VSCode配置文件**，它帮助开发者根据他们的开发需求自定义VSCode。
- en: VSCode Profiles
  id: totrans-241
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: VSCode配置文件
- en: 'VSCode Profiles allows us to customize the following aspects of the VSCode
    editor:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: VSCode配置文件允许我们自定义VSCode编辑器的以下方面：
- en: '**Settings** : The configuration settings of VSCode'
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设置**：VSCode的配置设置'
- en: '**Keyboard shortcuts** : Shortcuts to execute VSCode commands with the keyboard'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**键盘快捷键**：使用键盘执行VSCode命令的快捷方式'
- en: '**Snippets** : Reusable template code snippets'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码片段**：可重用的模板代码片段'
- en: '**Tasks** : Tasks that automate the execution of scripts and tools directly
    from VSCode'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**任务**：直接从VSCode自动化执行脚本和工具的任务'
- en: '**Extensions** : Tools that enable us to add new capabilities in VSCode, such
    as languages, debuggers, and linters'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**扩展**：使我们能够在VSCode中添加新功能的工具，例如语言、调试器和代码检查器'
- en: 'Profiles can also be shared, which helps us maintain a consistent development
    setup and workflow across our team. VSCode contains a set of built-in profiles,
    including one for Angular, that we can further customize according to our development
    needs. To install the Angular profile:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 配置文件也可以共享，这有助于我们在团队中保持一致的开发设置和工作流程。VSCode包含一组内置配置文件，包括一个用于Angular的配置文件，我们可以根据我们的开发需求进一步自定义。要安装Angular配置文件：
- en: Click the **Manage** button represented by the gear icon at the bottom of the
    left sidebar in VSCode and select the **Profiles** option.
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在VSCode左侧侧边栏底部点击代表齿轮的**管理**按钮，并选择**配置文件**选项。
- en: Click on the arrow of the **New Profile** button and select the **From Template**
    | **Angular** option.
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**新建配置文件**按钮的箭头，并选择**从模板** | **Angular**选项。
- en: Click the gear button if you want to select a custom icon for your profile.
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您想为您的配置文件选择自定义图标，请点击齿轮按钮。
- en: Click the **Create** button to create your profile.
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建**按钮来创建您的配置文件。
- en: VSCode will automatically apply the new profile after it has been created successfully.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: VSCode将在成功创建配置文件后自动应用新配置。
- en: In the following sections, we will explore some of the extensions in the VSCode
    Angular profile.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下章节中，我们将探索VSCode Angular配置文件中的某些扩展。
- en: Angular Language Service
  id: totrans-255
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Angular语言服务
- en: 'The **Angular Language Service** extension is developed and maintained by the
    Angular team and provides code completion, navigation, and error detection inside
    Angular templates. It enriches VSCode with the following features:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '**Angular语言服务**扩展由Angular团队开发并维护，它提供了Angular模板中的代码补全、导航和错误检测。它为VSCode增加了以下功能：'
- en: Code completion
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码补全
- en: A go-to definition
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跳转到定义
- en: Quick info
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速信息
- en: Diagnostic messages
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 诊断消息
- en: 'To get a glimpse of its powerful capabilities, let’s look at the code completion
    feature. Suppose we want to display a new property called `description` in the
    template of the main component. We can set this up by going through the following
    steps:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 为了一窥其强大的功能，让我们看看代码补全功能。假设我们想在主组件的模板中显示一个名为 `description` 的新属性。我们可以通过以下步骤来设置：
- en: 'Define the new property in the `app.component.ts` file:'
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `app.component.ts` 文件中定义新属性：
- en: '[PRE15]'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Open the `app.component.html` file and add the property name in the template
    using Angular interpolation syntax. The Angular Language Service will find it
    and suggest it for us automatically:'
  id: totrans-264
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `app.component.html` 文件，并使用 Angular 插值语法在模板中添加属性名称。Angular 语言服务会自动找到它并为我们建议：
- en: '![img](img/B21418_01_10.png)'
  id: totrans-265
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B21418_01_10.png)'
- en: 'Figure 1.10: Angular Language Service'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.10：Angular 语言服务
- en: The `description` property is a *public* property. We can omit the keyword `public`
    when using public properties and methods. Code completion does not work for private
    properties and methods. If the property had been declared `private` , then the
    Angular Language Service and the template would not have been able to recognize
    it.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '`description` 属性是一个 *公共* 属性。当我们使用公共属性和方法时，可以省略关键字 `public`。代码补全不适用于私有属性和方法。如果属性被声明为
    `private`，那么 Angular 语言服务和模板将无法识别它。'
- en: 'You may have noticed that a red line appeared instantly underneath the HTML
    element as you typed. The Angular Language Service did not recognize the property
    until you typed it correctly and gave you a proper indication of this lack of
    recognition. If you hover over the red indication, it displays a complete information
    message about what went wrong:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能已经注意到，当您输入时，HTML 元素下方立即出现了一条红线。Angular 语言服务直到您正确输入并给出了适当的指示，才识别出该属性，并显示了对这种识别不足的适当指示。如果您将鼠标悬停在红色指示上，它会显示关于出错原因的完整信息消息：
- en: '![Εικόνα που περιέχει κείμενο, γραμματοσειρά, γραμμή, στιγμιότυπο οθόνης  Περιγραφή
    που δημιουργήθηκε αυτόματα](img/B21418_01_11.png)'
  id: totrans-269
  prefs: []
  type: TYPE_IMG
  zh: '![包含文本、字体、行、屏幕截图的图片，自动生成的描述](img/B21418_01_11.png)'
- en: 'Figure 1.11: Error handling in the template'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.11：模板中的错误处理
- en: The preceding information message comes from the diagnostic messages feature.
    The Angular Language Service supports various messages according to the use case.
    You will encounter more of these messages as you work more with Angular.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的信息消息来自诊断消息功能。Angular 语言服务根据使用情况支持各种消息。随着您与 Angular 的工作越来越多，您将遇到更多此类消息。
- en: Material Icon Theme
  id: totrans-272
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Material Icon Theme
- en: 'VSCode has a built-in set of icons to display different types of files in a
    project. The Material Icon Theme extension provides additional icons that conform
    to the Material Design guidelines by Google; a subset of this collection targets
    Angular-based artifacts:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: VSCode 内置了一套图标，用于在项目中显示不同类型的文件。Material Icon Theme 扩展提供了符合 Google 的 Material
    Design 指南的额外图标；该集合的子集针对基于 Angular 的工件：
- en: '![Εικόνα που περιέχει κείμενο, στιγμιότυπο οθόνης, γραμματοσειρά  Περιγραφή
    που δημιουργήθηκε αυτόματα](img/B21418_01_12.png)'
  id: totrans-274
  prefs: []
  type: TYPE_IMG
  zh: '![包含文本、屏幕截图、字体的图片，自动生成的描述](img/B21418_01_12.png)'
- en: 'Figure 1.12: Material Icon Theme'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.12：Material Icon Theme
- en: Using this extension, you can easily spot the type of Angular files in a project,
    such as components, and increase developer productivity, especially in large projects
    with many files.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此扩展，您可以轻松地识别项目中的 Angular 文件类型，如组件，并提高开发者的生产力，尤其是在文件众多的大型项目中。
- en: EditorConfig
  id: totrans-277
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: EditorConfig
- en: 'VSCode editor settings, such as indentation or spacing, can be set at a user
    or project level. **EditorConfig** can override these settings using the `.editorconfig`
    configuration file, which can be found in the root folder of an Angular CLI project:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: VSCode 编辑器设置，如缩进或间距，可以在用户或项目级别设置。**EditorConfig** 可以使用 `.editorconfig` 配置文件覆盖这些设置，该文件位于
    Angular CLI 项目的根目录中：
- en: '[PRE16]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: You can define unique settings in this file to ensure the consistency of the
    coding style across your team.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在该文件中定义独特的设置，以确保团队中编码风格的一致性。
- en: Summary
  id: totrans-281
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: That’s it! Your journey into the world of Angular has just begun. Let’s recap
    the features that you have learned so far. We learned what Angular is, looked
    over the brief history of the framework, and examined the benefits of using it
    for web development.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！您进入 Angular 世界的旅程才刚刚开始。让我们回顾一下您迄今为止所学的特性。我们学习了 Angular 是什么，回顾了该框架的简要历史，并探讨了使用它进行
    Web 开发的优势。
- en: We saw how to set up our development workspace and find the tools to bring TypeScript
    into the game. We introduced the Angular CLI tool, the Swiss army knife for Angular,
    which automates specific development tasks. We used some of the most common commands
    to scaffold our first Angular application. We also examined the structure of our
    application and learned how to interact with it.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到了如何设置我们的开发工作空间并找到将 TypeScript 带入游戏所需的工具。我们介绍了 Angular CLI 工具，这是 Angular
    的瑞士军刀，它可以自动化特定的开发任务。我们使用了一些最常用的命令来搭建我们的第一个 Angular 应用程序。我们还检查了应用程序的结构，并学习了如何与之交互。
- en: Our first application gave us a basic understanding of how Angular works internally
    to render our application on a web page. We embarked on our journey, starting
    with the main HTML file of an Angular application. We saw how Angular parses that
    file and starts searching the component tree to load the main component. We learned
    the process of Angular bootstrapping and how it is used to load the application
    configuration.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的第一款应用程序让我们对 Angular 如何在网页上渲染我们的应用程序有了基本的了解。我们开始了我们的旅程，从 Angular 应用程序的主 HTML
    文件开始。我们看到了 Angular 如何解析该文件并开始搜索组件树以加载主组件。我们学习了 Angular 启动过程以及它是如何用于加载应用程序配置的。
- en: Finally, we met some of the most important Angular tools that could empower
    you as a software developer. We explored how to use Angular DevTools to inspect
    Angular applications and VSCode Debugger for debugging. We also examined VSCode
    Profiles and how it can help us maintain a consistent development environment
    across our team.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们遇到了一些最重要的 Angular 工具，这些工具可以赋予你作为软件开发者的力量。我们探讨了如何使用 Angular DevTools 检查
    Angular 应用程序和 VSCode Debugger 进行调试。我们还检查了 VSCode Profiles 以及它如何帮助我们保持团队内的一致开发环境。
- en: In the next chapter, you will learn some of the basics of the TypeScript language.
    The chapter will cover what problems can be solved by introducing types and the
    language itself. TypeScript, as a superset of JavaScript, contains a lot of powerful
    concepts and marries well with the Angular framework, as you are about to discover.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将学习 TypeScript 语言的一些基础知识。本章将涵盖通过引入类型和语言本身可以解决的问题。TypeScript 作为 JavaScript
    的超集，包含了许多强大的概念，并且与 Angular 框架配合得很好，正如你即将发现的那样。
- en: Join us on Discord
  id: totrans-287
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加入我们的 Discord
- en: 'Join our community’s Discord space for discussions with the author and other
    readers:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 加入我们社区的 Discord 空间，与作者和其他读者进行讨论：
- en: '[https://packt.link/LearningAngular5e](https://packt.link/LearningAngular5e)'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/LearningAngular5e](https://packt.link/LearningAngular5e)'
- en: '![img](img/QR_Code1314413148229661500.png)'
  id: totrans-290
  prefs: []
  type: TYPE_IMG
  zh: '![img](img/QR_Code1314413148229661500.png)'
