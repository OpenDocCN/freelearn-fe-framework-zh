- en: Chapter 10. Working with Tooltips
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章。工作中的工具提示
- en: Introduced as a part of the HTML 3 standard, and using the title attribute as
    its text, tooltips are a common element used to provide context within a page.
    You could find them in use in a variety of situations, although it is most likely
    that they will be found when providing assistance in correcting errors as part
    of the submission of a form (particularly when it concerns payment for products!).
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 作为HTML 3标准的一部分引入，并使用title属性作为其文本，工具提示是用于在页面中提供上下文的常见元素。您可能会在各种情况下找到它们的用法，尽管最有可能的情况是在提供帮助以纠正表单提交中的错误时发现它们（特别是涉及产品支付时！）。
- en: The jQuery team introduced their version of the **tooltip** as part of changes
    to Version 1.9 of the library; it was designed to act as a direct replacement
    for the standard tooltip used in all browsers. The difference here, though, was
    that whilst you can't style the standard tooltip, jQuery UI's replacement is intended
    to be accessible, themeable, and completely customizable. It has been set to display
    not only when a control receives focus, but also when you hover over that control,
    which makes it easier to use for keyboard users.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery团队在库的版本1.9中引入了他们的**工具提示**的版本；它被设计为直接替换所有浏览器中使用的标准工具提示。然而，这里的区别在于，尽管无法样式化标准工具提示，但jQuery
    UI的替代品旨在具有可访问性、可主题化和完全可定制化。它被设置为不仅在控件获得焦点时显示，而且当你悬停在该控件上时也会显示，这使得它更容易用于键盘用户。
- en: 'In this chapter, we''ll look at the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下主题：
- en: The default implementation of the widget
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认的小部件实现
- en: How the CSS framework targets tooltip widgets
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CSS框架如何定位工具提示小部件
- en: How to apply custom styles
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何应用自定义样式
- en: Configuring tooltips using their options
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用它们的选项配置工具提示
- en: Controlling tooltips using their methods
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用它们的方法控制工具提示
- en: Displaying tooltips programmatically
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 程序化地显示工具提示
- en: Displaying different types of content in the tooltip
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在工具提示中显示不同类型的内容
- en: Built-in transition effects for tooltips
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工具提示的内置过渡效果
- en: AJAX tooltips
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AJAX工具提示
- en: Implementing a default tooltip
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实现一个默认的工具提示
- en: Tooltips were built to act as direct replacements for the browser's native tooltips.
    They will recognize the default markup of the title attribute in a tag, and use
    it to automatically add the additional markup required for the widget. The target
    selector can be customized though using tooltip's items and content options; you'll
    see an example of this later in this chapter. Let's first have a look at the basic
    structure required for implementing tooltips.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 工具提示是为了直接替换浏览器的本机工具提示而构建的。它们将识别标签中title属性的默认标记，并使用它自动添加小部件所需的附加标记。但是，可以使用工具提示的items和content选项定制目标选择器；您将在本章后面看到一个例子。让我们首先看一下实现工具提示所需的基本结构。
- en: 'In a new file in your text editor, create the following page:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在文本编辑器中的新文件中，创建以下页面：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Save the code as `tooltip1.html` in your `jqueryui` working folder. Let''s
    review what was used. The following script and CSS resources are needed for the
    default tooltip widget configuration:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 将代码保存为`jqueryui`工作文件夹中的`tooltip1.html`。让我们回顾一下使用了什么。以下脚本和CSS资源是默认工具提示小部件配置所需的：
- en: '`jquery.ui.all.css`'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`jquery.ui.all.css`'
- en: '`jquery-2.0.3.js`'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`jquery-2.0.3.js`'
- en: '`jquery.ui.core.js`'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`jquery.ui.core.js`'
- en: '`jquery.ui.widget.js`'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`jquery.ui.widget.js`'
- en: '`jquery.ui.tooltip.js`'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`jquery.ui.tooltip.js`'
- en: 'The script required to create a tooltip, when using the title element in the
    underlying HTML can be as simple as this, which should be added after the last
    `<script>` element in your code, as shown in the previous example:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在底层HTML中使用title元素创建工具提示所需的脚本可以简单地如下所示，这应该添加在您的代码中的最后一个`<script>`元素之后，如前面的示例所示：
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In this example, when hovering over the link, the library adds in the requisite
    aria described by the code for screen readers into the HTML link. The widget then
    dynamically generates the markup for the tooltip, and appends it to the document,
    just before the closing `</body>` tag. This is automatically removed as soon as
    the target element loses focus.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，当悬停在链接上时，库会将屏幕阅读器所述的必需aria添加到HTML链接中。然后，小部件动态生成工具提示的标记，并将其附加到文档中，就在结束的`</body>`标记之前。一旦目标元素失去焦点，这将自动删除。
- en: Note
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注：
- en: '**ARIA**, or **Accessible Rich** **Internet Applications**, provides a way
    to make content more accessible to people with disabilities. You can learn more
    about this initiative at [https://developer.mozilla.org/en-US/docs/Accessibility/ARIA](https://developer.mozilla.org/en-US/docs/Accessibility/ARIA).'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**ARIA**，或**可访问的丰富互联网应用程序**，提供了使内容对残障人士更加可访问的方式。你可以在 [https://developer.mozilla.org/en-US/docs/Accessibility/ARIA](https://developer.mozilla.org/en-US/docs/Accessibility/ARIA)
    了解更多关于这个倡议的信息。'
- en: It is not necessary to only use the `$(document)` element when adding tooltips.
    Tooltips will work equally well with classes or selector IDs; using a selector
    ID, will give a finer degree of control, as we will see later in this chapter.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 添加工具提示时并不必限制只使用 `$(document)` 元素。工具提示同样适用于类或选择器 ID；使用选择器 ID，将会给出更精细的控制能力，正如我们将在本章稍后所看到的。
- en: Exploring the tooltip CSS framework classes
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索工具提示 CSS 框架类
- en: Using Firebug for Firefox (or another generic DOM explorer), we can see that
    specific class names are added to the underlying HTML elements that the Tooltip
    widget is created from. Let's review these class names briefly and see how they
    contribute to the overall appearance of the widget.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Firefox 的 Firebug（或其他通用的 DOM 探查器），我们可以看到特定的类名被添加到创建工具提示小部件的底层 HTML 元素中。让我们简要地审查这些类名，看看它们如何为小部件的整体外观做出贡献。
- en: '| Classname | Purpose |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| 类名 | 目的 |'
- en: '| --- | --- |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `ui-tooltip` | The outer container for the tooltip |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| `ui-tooltip` | 工具提示的外部容器 |'
- en: '| `ui-tooltip-content` | The content of the tooltip |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| `ui-tooltip-content` | 工具提示的内容 |'
- en: '| `ui-widget-content` | Applies content container styles to an element and
    its child text, links, and icons |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| `ui-widget-content` | 将内容容器样式应用于元素及其子文本、链接和图标 |'
- en: '| `ui-corner-all` | Applies a corner-radius to all four corners of element
    |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| `ui-corner-all` | 应用圆角半径到元素的四个角 |'
- en: 'Unlike other widgets, little in the way of styling is added by tooltip—the
    majority of the styles are added when the tooltip is created, as shown in the
    following screenshot:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他小部件不同，工具提示几乎没有增加样式的方式——大多数样式是在创建工具提示时添加的，如下面的截图所示：
- en: '![Exploring the tooltip CSS framework classes](img/2209OS_10_02.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![探索工具提示 CSS 框架类](img/2209OS_10_02.jpg)'
- en: Overriding the default styles
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 覆盖默认样式
- en: When styling the Tooltip widget, we are not limited to merely using the prebuilt
    themes on offer (about which we will cover in the next section), we can always
    elect to override existing styles with our own. In our next example, we'll see
    how easy this is to accomplish, by making some minor changes to the example from
    `tooltip1.html`.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在为工具提示小部件设置样式时，我们不仅限于仅使用提供的预构建主题（关于这一点，我们将在下一节进行讨论），我们始终可以选择用我们自己的样式覆盖现有样式。在下一个示例中，我们将看到如何通过对来自
    `tooltip1.html` 的示例进行一些微小更改来轻松实现这一点。
- en: 'In a new document, add the following styles, and save it as `tooltipOverride.css`,
    within the `css` folder:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个新文档中，添加以下样式，并将其保存为 `tooltipOverride.css`，放在 `css` 文件夹中：
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Don''t forget to link to the new style sheet from the `<head>` element of your
    document:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 不要忘记从文档的 `<head>` 元素中链接到新的样式表：
- en: '[PRE3]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Tip
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Before we continue, it is worth explaining a great trick for styling tooltips
    before committing the results to code.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续之前，值得说明一种在将结果提交到代码之前对工具提示进行样式设置的好技巧。
- en: If you are using Firefox, you can download and install the **Toggle JS** add-on
    for Firefox, which is available from [https://addons.mozilla.org/en-US/firefox/addon/toggle-js/](https://addons.mozilla.org/en-US/firefox/addon/toggle-js/).
    This allows us to switch off JavaScript on a per-page basis; we can then hover
    over the link to create the tooltip, before expanding the markup in Firebug and
    styling it at our leisure.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是 Firefox，你可以下载并安装 Firefox 的 **Toggle JS** 插件，该插件可以从 [https://addons.mozilla.org/en-US/firefox/addon/toggle-js/](https://addons.mozilla.org/en-US/firefox/addon/toggle-js/)
    下载。这使我们可以按页面关闭 JavaScript；然后我们可以将鼠标悬停在链接上以创建工具提示，然后在 Firebug 中展开标记并随心所欲地进行样式设置。
- en: 'Save your HTML document as `tooltip2.html`. When we run the page in a browser,
    you should see the modified tooltip appear when hovering over the link in the
    text:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 将你的 HTML 文档保存为 `tooltip2.html`。当我们在浏览器中运行页面时，当鼠标悬停在文本中的链接上时，你应该看到修改后的工具提示出现：
- en: '![Overriding the default styles](img/2209OS_10_03.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![覆盖默认样式](img/2209OS_10_03.jpg)'
- en: Using prebuilt themes
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用预构建主题
- en: If creating completely new styles by hand is overkill for your needs, you can
    always elect to use one of the prebuilt themes that are available for download
    from the jQuery UI site.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果手工创建全新的样式对你的需求来说太过繁琐，你可以选择使用 jQuery UI 网站提供的预构建主题之一进行下载。
- en: 'This is a really easy change to make. We first need to download a copy of the
    replacement theme; in our example, we''re going to use one called **Excite Bike**.
    Let''s start by browsing to [http://jqueryui.com/download/](http://jqueryui.com/download/),
    then deselecting the **Toggle All** option:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非常容易的变更。我们首先需要下载替换主题的副本；在我们的示例中，我们将使用一个称为**Excite Bike**的主题。让我们开始浏览[http://jqueryui.com/download/](http://jqueryui.com/download/)，然后取消选择**Toggle
    All**选项：
- en: '![Using prebuilt themes](img/2209OS_10_04.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![使用预置主题](img/2209OS_10_04.jpg)'
- en: 'We don''t need to download the whole library, just the theme at the bottom,
    change the theme option to display **Excite Bike** then click on **Download**:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不需要下载整个库，只需要在底部更改主题选项以显示**Excite Bike**，然后单击**Download**：
- en: '![Using prebuilt themes](img/2209OS_10_05.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![使用预置主题](img/2209OS_10_05.jpg)'
- en: 'Next, open a copy of `tooltip2.html` then look for this line:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，打开`tooltip2.html`的一个副本，然后找到这一行：
- en: '[PRE4]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You will notice the highlighted word in the above line. This is the name of
    the existing theme. Change this to `excite-bike` then save the document as `tooltip3.html`,
    then remove the `tooltipOverride.css` link, and you''re all set. The following
    is our replacement theme in action:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 您会注意到上述行中的突出显示的单词。这是现有主题的名称。将其更改为`excite-bike`，然后将文档保存为`tooltip3.html`，然后删除`tooltipOverride.css`链接，就可以了。以下是我们替换主题的示例：
- en: '![Using prebuilt themes](img/2209OS_10_06.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![使用预置主题](img/2209OS_10_06.jpg)'
- en: With a single change of word, we can switch between any of the prebuilt themes
    available for use with jQuery UI (or indeed even any of the custom ones that others
    have made available online), as long as you have downloaded and copied the theme
    into the appropriate folder.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 通过更改一个单词，我们可以在jQuery UI可用的任何预置主题之间切换（甚至其他人在网上提供的任何自定义主题），只要您已经下载并复制了主题到相应的文件夹中。
- en: There may be occasions, though, where we need to tweak the settings. This gives
    us the best of both worlds, where we only need to concentrate on making the required
    changes. Let's take a look at how we can alter an existing theme using ThemeRoller.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，可能会有一些情况，我们需要微调设置。这使我们既可以集中精力进行所需的更改，又可以兼顾两全其美。让我们看看如何使用ThemeRoller修改现有主题。
- en: Creating custom themes with ThemeRoller
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 ThemeRoller 创建自定义主题
- en: 'If we browse to [http://jqueryui.com/themeroller/](http://jqueryui.com/themeroller/),
    we can alter some of the settings used to style the **Tooltip** example on this
    page. Alter the **Background color & texture** option under **Content**, then
    change the **Border** option to **#580000**, as shown in the following screenshot:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们浏览到[http://jqueryui.com/themeroller/](http://jqueryui.com/themeroller/)，我们可以修改用于样式化此页面上的**Tooltip**示例的一些设置。在**Content**下修改**Background
    color & texture**选项，然后将**Border**选项更改为**#580000**，如下截图所示：
- en: '![Creating custom themes with ThemeRoller](img/2209OS_10_07.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![使用 ThemeRoller 创建自定义主题](img/2209OS_10_07.jpg)'
- en: 'Move down to the **Clickable: active state** section, then change the **Background
    color & texture** option to **#ccb2b2** at **100%**, and the **Border** option
    to **#580000**. Leave the rest unchanged:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '移动到**Clickable: active state**部分，然后将**Background color & texture**选项更改为**#ccb2b2**，**Border**选项更改为**#580000**。其余部分保持不变：'
- en: '![Creating custom themes with ThemeRoller](img/2209OS_10_08.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![使用 ThemeRoller 创建自定义主题](img/2209OS_10_08.jpg)'
- en: 'If you scroll down to the **Tooltip** example at the foot of the page, then
    hover over either image, you should see the effects of our changes:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您滚动到页面底部的**Tooltip**示例，然后将鼠标悬停在任一图像上，您应该会看到我们更改的效果：
- en: '![Creating custom themes with ThemeRoller](img/2209OS_10_09.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![使用 ThemeRoller 创建自定义主题](img/2209OS_10_09.jpg)'
- en: Whilst I know the colors may not win any style awards, you can see how easy
    it is to alter the colors. When you've finished choosing your colors, you can
    then download the final version from the download page. A copy of the custom theme
    is also available in the code download that accompanies this book; take a look
    at `tooltip4.html` in the `jquery` folder to see an example of our new stylesheet
    in action.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我知道这些颜色可能不会赢得任何风格奖，但您可以看到改变颜色是多么容易。当您选择完颜色后，您可以从下载页面下载最终版本。本书附带的代码下载中也提供了自定义主题的副本；看看`jquery`文件夹中的`tooltip4.html`，以查看我们的新样式表的示例。
- en: Note
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: We can take it even further with the use of HTML. Beware though, as this will
    introduce a security risk to your pages and should be used with care! Have a look
    at the section marked *Working with HTML in tooltips*, later in this chapter,
    for an example of how you can really go to town in altering the styles of your
    tooltips.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们甚至可以使用HTML进一步操作。不过，请注意，这将给您的页面引入安全风险，应谨慎使用！请查看本章后面标记为 *Working with HTML in
    tooltips* 的部分，以了解您如何真正改变工具提示样式的示例。
- en: Configuring tooltip options
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置工具提示选项
- en: Each of the different components in the library has a series of options that
    control which features of the widget are enabled by default. An object literal,
    or an object reference, can be passed into the `tooltip()` widget method to configure
    these options.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 库中的每个不同组件都有一系列选项，控制着小部件默认启用的功能。可以将对象文字或对象引用传递到 `tooltip()` 小部件方法中以配置这些选项。
- en: 'The available options to configure non-default behaviors are shown in the following
    table:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在下表中显示了配置非默认行为的可用选项：
- en: '| Option | Default value | Used to… |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| 选项 | 默认值 | 用于… |'
- en: '| --- | --- | --- |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `content` | `function returning the title attribute` | Set the content of
    the tooltip—if setting this option, then it is likely you will also need to change
    the items option as well. |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| `content` | `function returning the title attribute` | 设置工具提示的内容 —— 如果设置了此选项，则很可能您还需要更改
    items 选项。'
- en: '| `disabled` | `false` | Disable the tooltip. |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| `disabled` | `false` | 禁用工具提示。'
- en: '| `hide` | `null` | Determine if or how to animate the hiding of the tooltip.
    |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| `hide` | `null` | 确定是否以及如何动画隐藏工具提示。'
- en: '| `items` | `[title]` | Set a selector that indicates which items should show
    tooltips. This can be customized if you are planning to use something other than
    the title attribute for the tooltip content, or need to set a different selector
    for event delegation. |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| `items` | `[title]` | 设置指示应显示工具提示的项的选择器。如果您计划使用除了 title 属性以外的内容作为工具提示内容，或者需要为事件委托设置不同的选择器，则可以自定义此内容。'
- en: '| `position` | `{ my: "left top+15", at: "left bottom", collision: "flipfit"
    }` | Identify the position of the tooltip in relation to the associated target
    element. |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| `position` | `{ my: "left top+15", at: "left bottom", collision: "flipfit"
    }` | 确定工具提示相对于关联目标元素的位置。'
- en: '| `show` | `null` | Determine if or how to animate the showing of the tooltip.
    |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| `show` | `null` | 确定是否以及如何动画显示工具提示。'
- en: '| `tooltipClass` | `null` | Add a class to a widget that can display different
    tooltip types, such as errors or warnings. |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| `tooltipClass` | `null` | 向可以显示不同工具提示类型的小部件添加类，例如错误或警告。'
- en: '| `track` | `false` | Determine whether the tooltip should track (follow) the
    mouse. |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| `track` | `false` | 确定工具提示是否应跟踪（跟随）鼠标。'
- en: Positioning tooltips accurately
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 精确定位工具提示
- en: One of the most useful features of jQuery UI's tooltips is the ability to fine-tune
    where they appear on screen. There may be instances where you need them to appear,
    but not at the expense of hiding an important feature on your website or application!
    Let's have a look at how the `position` attribute works, using a custom styled
    tooltip with pointer as an example.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery UI 工具提示最有用的功能之一是能够精确调整它们在屏幕上的位置。可能会有需要它们出现的情况，但不能以隐藏网站或应用程序的重要功能为代价！让我们看一下
    `position` 属性的工作原理，以一个具有自定义样式的带指针的工具提示为例。
- en: 'In your text editor, alter the final `<script>` block of `tooltip4.html`, as
    shown in the following code:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在文本编辑器中，按照以下代码更改 `tooltip4.html` 的最后一个 `<script>` 块：
- en: '[PRE5]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'We need to alter the markup so it includes the selector ID we''ve just referenced
    in the tooltip call:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要更改标记，以包括我们刚刚在工具提示调用中引用的选择器ID：
- en: '[PRE6]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'In a new file in your text editor, create the following small style sheet:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在文本编辑器中新建一个文件，创建以下小样式表：
- en: '[PRE7]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Save this as `tooltipPointer.css`. Remove the existing styling from `tooltip4.html`,
    then add the following references into the <head> and resave it as `tooltip5.html`:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 将其保存为 `tooltipPointer.css`。从 `tooltip4.html` 中删除现有的样式，然后将以下引用添加到 <head> 中，并将其重新保存为
    `tooltip5.html`：
- en: '[PRE8]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'In this example, we''ve used a number of pseudo-selectors to style our tooltip;
    this has the added advantage that it doesn''t require any images as part of producing
    the tooltip. If we view the new page in a browser, it should appear similar to
    the following screenshot:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，我们使用了许多伪选择器来设置工具提示的样式；这样做的额外好处是不需要任何图像来生成工具提示。如果在浏览器中查看新页面，它应该类似于以下截图：
- en: '![Positioning tooltips accurately](img/2209OS_10_10.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![精确定位工具提示](img/2209OS_10_10.jpg)'
- en: Using the position widget
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用位置小部件
- en: In our example, you will have noticed that we've resized the window to achieve
    the effect shown in the previous screenshot. If you expand that window to full
    size, the tooltip is very likely to shift; to prevent this from happening, it's
    important to use the of attribute, so that the tooltip (in this instance) remains
    next to the original link we added to our markup.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的示例中，您可能已经注意到我们调整了窗口大小以实现前一个屏幕截图中显示的效果。如果将窗口扩展到全屏，工具提示很可能会移动；为了防止这种情况发生，重要的是要使用`of`属性，以便工具提示（在这种情况下）保持在我们标记中添加到的原始链接旁边。
- en: Using the position attribute (and indeed the widget) can be a little tricky
    to master, but it is worth the effort to ensure that your widgets are positioned
    just where you need them to appear.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 使用位置属性（以及小部件）可能有点难以掌握，但值得努力确保您的小部件定位在您希望它们出现的位置。
- en: Note
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '*Chris Coyier* of CSS Tricks [(http://www.css-tricks.com](http://(http://www.css-tricks.com))
    has produced a nice example of how the position utility works, which you can see
    at [http://css-tricks.com/jquery-ui-position-function/](http://css-tricks.com/jquery-ui-position-function/).'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '*Chris Coyier* 来自 CSS Tricks [(http://www.css-tricks.com](http://(http://www.css-tricks.com))
    展示了一个很好的示例，说明了位置实用程序的工作原理，您可以在 [http://css-tricks.com/jquery-ui-position-function/](http://css-tricks.com/jquery-ui-position-function/)
    上查看。'
- en: 'In a nutshell, an example use of the `position` widget such as the following
    code:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，诸如以下代码的`position`小部件的示例用法：
- en: '[PRE9]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '…would translate in the following illustration:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: …将在以下插图中翻译：
- en: '![Using the position widget](img/2209OS_10_11.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![使用位置小部件](img/2209OS_10_11.jpg)'
- en: Note
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Source: [http://css-tricks.com/jquery-ui-position-function](http://css-tricks.com/jquery-ui-position-function)/'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：[http://css-tricks.com/jquery-ui-position-function](http://css-tricks.com/jquery-ui-position-function)/
- en: Tracking mouse movement with tooltips
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用工具提示跟踪鼠标移动
- en: So far, we've had a look at how to add tooltips to your page, and covered some
    of the possibilities for styling and positioning them on screen. One small enhancement
    we can make to our tooltips is to set them so that they can follow your cursor,
    when activated.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经看过如何向页面添加工具提示，并涵盖了在屏幕上对其进行样式和定位的一些可能性。我们可以对我们的工具提示进行一个小的增强，使它们在激活时可以跟随您的鼠标光标移动。
- en: 'This is a simple change to make; change the body of `tooltip5.html` so it contains
    the following elements:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单的更改；更改`tooltip5.html`的主体，使其包含以下元素：
- en: '[PRE10]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'We need to add the tracking facility, so update the final `<script>` block
    as follows:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要添加跟踪功能，因此请将最终的`<script>`块更新如下：
- en: '[PRE11]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Save the updated document as `tooltip6.html`. Let''s now add in some final
    tweaks to our styling so the content appears properly on screen. Add the following
    to a new document, saving it as `tooltipTrack.css`, in the `css` folder:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 将更新后的文档保存为`tooltip6.html`。现在让我们添加一些最终的调整，以便内容正确显示在屏幕上。将以下内容添加到新文档中，并将其保存为`tooltipTrack.css`，放在`css`文件夹中：
- en: '[PRE12]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Don''t forget to link to the new style sheet from the `<head>` of our page
    (by replacing the existing reference to `tooltipPointer.css`):'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 不要忘记从页面的`<head>`中链接到新样式表（通过替换对`tooltipPointer.css`的现有引用）：
- en: '[PRE13]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The following screenshot shows how the page should appear when previewing our
    results:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了预览结果时页面的外观：
- en: '![Tracking mouse movement with tooltips](img/2209OS_10_12.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![使用工具提示跟踪鼠标移动](img/2209OS_10_12.jpg)'
- en: We've now set the tooltip to follow our cursor anytime we are hovering over
    a target element. In our example, this includes either of the two links or the
    input element. We're not limited to either of those elements when setting up tracking;
    this can be used on any valid HTML element, such as radio buttons, buttons, or
    even labels.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已将工具提示设置为在悬停在目标元素上时随光标移动。在我们的示例中，这包括两个链接或输入元素之一。在设置跟踪时，我们不限于这些元素；可以在任何有效的HTML元素上使用此功能，例如单选按钮、按钮，甚至标签。
- en: Although we can't easily show it in print, you should find that when you move
    your cursor around, the tooltip will follow it as long as the cursor is still
    hovering over its target element.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们无法在印刷品中轻松显示它，但您应该发现，只要光标仍悬停在目标元素上，工具提示将跟随它移动。
- en: Displaying certain tooltips
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 显示特定的工具提示
- en: So far, we've assigned all of our tooltips to work using the `$(document)` object;
    whilst this will work perfectly well, it does mean that our tooltips will always
    follow the same format, and work in the same manner, as the configuration will
    apply to all tooltips on that page.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经将所有的工具提示都分配给了使用`$(document)`对象工作；虽然这样做完全没有问题，但这意味着我们的工具提示将始终遵循相同的格式，并以相同的方式工作，因为配置将应用于页面上的所有工具提示。
- en: We can easily change this, though; jQuery UI's Tooltip will work equally fine
    with any jQuery selectors, as it does with the document object. To prove this,
    let's take a look at how you would configure tooltip to work with a specific element.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以轻松地进行更改；然而，jQuery UI 的工具提示将与任何 jQuery 选择器一样良好地工作，就像与文档对象一样。为了证明这一点，让我们看看如何配置工具提示以与特定元素一起工作。
- en: 'In `tooltip2.html`, change the final `<script>` element to the following:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在`tooltip2.html`中，将最后一个`<script>`元素更改为以下内容：
- en: '[PRE14]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'We don''t need the CSS override styles, so remove this line from the `<head>`
    of the document:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不需要 CSS 重写样式，因此从文档的`<head>`中删除此行：
- en: '[PRE15]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'We also need to add the following code below the existing markup:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要在现有标记下面添加以下代码：
- en: '[PRE16]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Save this as `tooltip7.html` in your `jqueryui` folder. In this example, we''ve
    removed the reference to document, and replaced it with the `id` assigned to the
    textbox, as shown in the following screenshot:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 将此文件保存为`jqueryui`文件夹中的`tooltip7.html`。在本示例中，我们已删除了对文档的引用，并将其替换为分配给文本框的`id`，如以下屏幕截图所示：
- en: '![Displaying certain tooltips](img/2209OS_10_13.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![显示特定的工具提示](img/2209OS_10_13.jpg)'
- en: The same style classes that we've seen earlier will still be applied, but this
    time they will only appear when hovering over the textbox, and not the link in
    the text.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 与我们之前看到的相同的样式类仍然会被应用，但这次它们只会在悬停在文本框上时出现，而不是在文本中的链接上出现。
- en: Displaying AJAX content in tooltips
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在工具提示中显示 AJAX 内容
- en: Throughout most of this chapter, we've used the standard technique of displaying
    content in our tooltips, which is to reference the text stored in the title attribute
    of any tags that can be found on the page.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的大部分内容中，我们都使用了在页面上可以找到的任何标签的 title 属性中存储的文本来显示内容的标准技术。
- en: However, jQuery UI's Tooltips are able to reference content using AJAX; this
    allows you to generate tooltips dynamically, rather than being limited to what
    is displayed in your markup. In our example, we will use the content attribute
    to pass plain text to the widget; you could equally pass a callback function as
    the content's value to the tooltip.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，jQuery UI 的工具提示能够使用 AJAX 引用内容；这允许您动态生成工具提示，而不仅仅是限于在您的标记中显示的内容。在我们的示例中，我们将使用内容属性将纯文本传递给小部件；您也可以将回调函数作为内容的值传递给工具提示。
- en: 'In your text editor, remove the existing final `<script>` block in `tooltip7.html`,
    and replace it with the following code:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的文本编辑器中，删除`tooltip7.html`中现有的最后一个`<script>`块，并将其替换为以下代码：
- en: '[PRE17]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Next, remove the `<label>` and `<input>` code, then add the following immediately
    below your markup in the `<body>` section:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，删除`<label>`和`<input>`代码，然后在`<body>`部分的标记中立即添加以下内容：
- en: '[PRE18]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'We also need to create some content that will be imported into the page using
    AJAX, so in a new document, add the following code and save it as `ajax.html`:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要创建一些将使用 AJAX 导入到页面中的内容，因此在一个新文档中添加以下代码，并将其保存为`ajax.html`：
- en: '[PRE19]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Save the file as `tooltip8.html`. In this instance, you will need to view this
    through a web server, in order for the AJAX effect to work correctly; if you don't
    have access to some online web space, you can use WAMP Server(for PC, available
    from [http://www.wampserver.com/en/](http://www.wampserver.com/en/)) or MAMP locally
    (for Macs, downloadable from [http://www.mamp.info/en/mamp/](http://www.mamp.info/en/mamp/)),
    which will work equally as well.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 将文件保存为`tooltip8.html`。在这种情况下，您需要通过 web 服务器查看此文件，以便 AJAX 效果能够正常工作；如果您无法访问在线 Web
    空间，则可以在本地使用 WAMP Server（适用于 PC，可从 [http://www.wampserver.com/en/](http://www.wampserver.com/en/)
    下载）或 MAMP（适用于 Mac，可从 [http://www.mamp.info/en/mamp/](http://www.mamp.info/en/mamp/)
    下载），它们同样有效。
- en: 'When hovering over the link, a tooltip will appear but with the content of
    the HTML file that it has imported, as shown in the following screenshot:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 当悬停在链接上时，将显示一个工具提示，但内容是导入的 HTML 文件的内容，如以下屏幕截图所示：
- en: '![Displaying AJAX content in tooltips](img/2209OS_10_14.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![在工具提示中显示 AJAX 内容](img/2209OS_10_14.jpg)'
- en: As we are pulling in HTML-based content, you should ensure that content is handled
    correctly, to minimize risks of attacks to your site. In this example, we've just
    imported plain text from our test HTML file, but using this method does allow
    you to import any HTML (within reason) to great effect.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们正在拉取基于HTML的内容，因此您应确保正确处理内容，以最大程度地减少对您网站的攻击风险。在本示例中，我们只是从我们的测试HTML文件中导入了纯文本，但是使用此方法确实允许您以很大的效果导入任何HTML（在合理范围内）。
- en: Tip
  id: totrans-147
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Later in this chapter, we will look at using HTML in tooltips in more detail;
    you could potentially use the styling and content from that method, but import
    it all using AJAX instead.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 本章后面，我们将更详细地讨论在工具提示中使用HTML；您可能会考虑使用该方法的样式和内容，但是使用AJAX代替全部导入更好。
- en: How can we tell if it has worked?
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们如何知道它是否起作用？
- en: The easiest way to tell if your content has successfully been imported is by
    inspecting it in the **Console** tab of a DOM inspector, such as Firebug.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在DOM检查器的**控制台**选项卡中检查它，您可以最轻松地判断您的内容是否已成功导入，例如Firebug。
- en: Note
  id: totrans-151
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: DOM Inspectors can be used to inspect, browse, and edit the **Document Model
    Object** (**DOM**) of any webpage, for a number of purposes, such as establishing
    slow-loading objects or sources, or previewing changes to CSS styling before committing
    them to code.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: DOM检查器可用于检查、浏览和编辑任何网页的**文档模型对象**（**DOM**），用于许多目的，例如确定加载缓慢的对象或源，或在提交到代码之前预览CSS样式的更改。
- en: 'Here you can clearly see the call to `test.html` (taken from Firebug), which
    has returned a value of `200`, indicating success:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您可以清楚地看到来自`test.html`的调用（从Firebug中获取），该调用返回了一个值为`200`的值，表示成功：
- en: '![How can we tell if it has worked?](img/2209OS_10_15.jpg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![我们如何知道它是否起作用？](img/2209OS_10_15.jpg)'
- en: Using effects in tooltips
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在工具提示中使用效果
- en: You will have hopefully noticed that, from each of the examples demonstrated
    in this chapter, each tooltip will fade in and out gradually, by default. Tooltips
    are not limited to using only this fade in or out effect; you may prefer to use
    something that shows a little more impact when displayed on screen.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能已经注意到，在本章的每个示例中，每个工具提示默认都会逐渐淡入和淡出。工具提示不仅限于仅使用此淡入或淡出效果；您可能更喜欢在屏幕上显示时显示更多影响的内容。
- en: 'In our next example, we will look at how you can alter your code to use different
    effects, to achieve this effect. Add the following lines of code immediately below
    the last call to the jQuery UI library in `tooltip7.html`:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的下一个示例中，我们将看看如何修改代码以使用不同的效果，以实现此效果。将以下代码行立即添加到`tooltip7.html`中最后一次调用jQuery
    UI库之后：
- en: '[PRE20]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Next, remove these two lines from the existing markup:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，从现有标记中删除这两行：
- en: '[PRE21]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Alter the final `<script>` element to include the new effects, as shown:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 更改最终的`<script>`元素以包含新的效果，如下所示：
- en: '[PRE22]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Save the document as `tooltip9.html`. If we load the page into a browser and
    hover over the link in the text, you will see the tooltip explode when moving
    away, as shown in the following screenshot:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 将文档保存为`tooltip9.html`。如果我们将页面加载到浏览器中，并在文本中的链接上悬停，您将看到在移开时工具提示会爆炸，如以下屏幕截图所示：
- en: '![Using effects in tooltips](img/2209OS_10_16.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![在工具提示中使用效果](img/2209OS_10_16.jpg)'
- en: Working with HTML in tooltips
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在工具提示中使用HTML
- en: So far, we've covered how you can set up tooltips to appear on your pages, as
    well as style them. The latter presents us with a slight dilemma, though, as we
    have to rely on jQuery to add in CSS styles programmatically, which can be detrimental
    if we're aiming to maintain a progressive style of enhancement for our tooltips.
    There is a way around this; whilst it involves an element of jQuery, it does allow
    us to use HTML to generate our tooltips, making it far more flexible for our needs.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经介绍了如何在页面上设置工具提示以及对其进行样式设置。然而，后者给我们带来了一个小困境，因为我们必须依赖jQuery来以编程方式添加CSS样式，如果我们的目标是保持渐进式的增强样式，这可能会有所损害。有一个解决办法；虽然它涉及一定的jQuery元素，但它确实允许我们使用HTML来生成我们的工具提示，这对我们的需求更加灵活。
- en: Tip
  id: totrans-167
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Use of HTML in your tooltips**'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '**在您的工具提示中使用HTML**'
- en: Before we go any further, I should point out that use of this method introduces
    a security risk to your code; it is for this reason that the default usage of
    content was switched from allowing HTML to just plain text. Please use this at
    your own risk!
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续之前，我应该指出，使用这种方法会给您的代码引入安全风险；因此，默认情况下，内容的使用方式已从允许HTML更改为仅允许纯文本。请自行承担风险！
- en: 'Remove the contents of the markup in `tooltip9.html`, and add in the following:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 删除`tooltip9.html`中标记的内容，并添加以下内容：
- en: '[PRE23]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Next, alter the final `<script>` block, as shown in the following code:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，修改最终的`<script>`块，如以下代码所示：
- en: '[PRE24]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Save this as `tooltip10.html`. We now have a working tooltip, but it won''t
    look very attractive. Create a new style sheet and add to it the following basic
    styles:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 将此另存为`tooltip10.html`。现在我们有一个工作的工具提示，但它看起来不太吸引人。创建一个新样式表，并添加以下基本样式：
- en: '[PRE25]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Save this as `tooltipSelector.css` in your `css` folder. Don''t forget to link
    to the new style sheet from the `<head>` of our page (after the link to the standard
    jQuery UI style sheet):'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 将此另存为`tooltipSelector.css`到您的`css`文件夹中。不要忘记从我们页面的`<head>`中链接到新样式表（在链接到标准jQuery
    UI样式表之后）：
- en: '[PRE26]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'In this example, we''re not going to use the prebuilt styling from our redmond
    theme, so remove the following link:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，我们将不使用来自我们redmond主题的预构建样式，因此删除以下链接：
- en: '[PRE27]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'We also need to remove the effects calls from the previous demonstration, so
    remove the following links from the `<head>` of your document:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要从先前的演示中删除效果调用，因此从您的文档的`<head>`中删除以下链接：
- en: '[PRE28]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Save our altered document as `tooltip10.html`. If we run this page in a browser,
    you will see the tooltip **Test tooltip** appear when hovering over a link, as
    shown in the following screenshot:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 将我们更改后的文档保存为`tooltip10.html`。如果我们在浏览器中运行此页面，则会在悬停在链接上时看到工具提示**Test tooltip**出现，如下截图所示：
- en: '![Working with HTML in tooltips](img/2209OS_10_17.jpg)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![在工具提示中使用HTML](img/2209OS_10_17.jpg)'
- en: As you can see, we've completely altered the styling used on our tooltip; this
    method requires more work than the normal method for setting up tooltips, but
    it is worth the effort, provided it is done correctly!
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，我们已完全改变了我们的工具提示所使用的样式；这种方法需要比设置工具提示的常规方法更多的工作，但只要做得正确，它就是值得的！
- en: The dangers of working with HTML
  id: totrans-185
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用HTML工作的危险
- en: In the previous example, we looked at how you can incorporate HTML into your
    tooltips, which opens up some powerful opportunities in terms of what can be displayed
    within a tooltip. There is an inherent risk associated with using HTML in tooltips,
    though; in previous versions of the library, you could include HTML within the
    `<title>` tag, as part of setting up tooltips. However, this has been altered
    in UI 1.10, as a fix for the cross-site scripting (XSS) vulnerability that was
    present in Version 1.9, where attackers could insert (or inject) client-side script,
    often malicious, into the Tooltip widget on a page. You can still use HTML, but
    need to use the content option as outlined in the previous example. You can learn
    more about cross-site scripting, and how to reduce the threat, at [http://en.wikipedia.org/wiki/Cross-site_scripting](http://en.wikipedia.org/wiki/Cross-site_scripting).
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一个示例中，我们看了一下如何将HTML整合到您的工具提示中，这在显示工具提示中可以显示令人满意的内容方面开启了一些强大的机会。然而，在使用HTML工具提示时存在固有的风险；在库的以前版本中，您可以在设置工具提示时在`<title>`标签中包含HTML。但是，在UI
    1.10中，这已经更改为修复跨站点脚本（XSS）漏洞的版本1.9中存在的版本，在该漏洞中，攻击者可以在页面上的工具提示小部件中插入（或注入）客户端脚本，通常是恶意的。您仍然可以使用HTML，但需要像前面的示例中所述使用内容选项。您可以在[http://en.wikipedia.org/wiki/Cross-site_scripting](http://en.wikipedia.org/wiki/Cross-site_scripting)了解有关跨站点脚本的更多信息，以及如何减少威胁。
- en: Note
  id: totrans-187
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: As the content option overrides the default behavior, you should always ensure
    your content is correctly escaped (or sanitized) to minimize the risk of cross-site
    scripting.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 由于内容选项覆盖了默认行为，因此您应始终确保正确转义（或清理）内容以最小化跨站点脚本的风险。
- en: Using tooltip methods
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用工具提示方法
- en: 'The Tooltip widget contains a handful of methods which allow us to work with
    it programmatically and alter its default behaviors. Let''s take a look at the
    methods, which are listed in the following table:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: Tooltip widget包含一些方法，允许我们以编程方式使用它并更改其默认行为。让我们看一下这些方法，它们在以下表格中列出：
- en: '| Method | Used to… |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '| 方法 | 用途 |'
- en: '| --- | --- |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `close` | Close a tooltip; should only be used for non-delegated tooltips.
    |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| `close` | 关闭工具提示；仅应用于非委托工具提示。 |'
- en: '| `destroy` | Remove the tooltip functionality completely. |'
  id: totrans-194
  prefs: []
  type: TYPE_TB
  zh: '| `destroy` | 完全删除工具提示功能。 |'
- en: '| `disable` | Disable the tooltip. |'
  id: totrans-195
  prefs: []
  type: TYPE_TB
  zh: '| `disable` | 禁用工具提示。 |'
- en: '| `enable` | Enable the tooltip. |'
  id: totrans-196
  prefs: []
  type: TYPE_TB
  zh: '| `enable` | 启用工具提示。 |'
- en: '| `open` | Programmatically open a tooltip. This is only intended for non-delegated
    tooltips. |'
  id: totrans-197
  prefs: []
  type: TYPE_TB
  zh: '| `open` | 以编程方式打开工具提示。这仅适用于非委托工具提示。 |'
- en: '| `option` | Get or set the value associated with the specified `optionName`
    |'
  id: totrans-198
  prefs: []
  type: TYPE_TB
  zh: '| `option` | 获取或设置与指定的`optionName`关联的值 |'
- en: '| `widget` | Return a jQuery object containing the original element. |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '| `widget` | 返回包含原始元素的jQuery对象。 |'
- en: Enabling and disabling tooltips
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启用和禁用工具提示
- en: We can make use of the `enable` or `disable` methods to programmatically enable
    or disable specific tooltips. This will effectively switch on any tooltips that
    were initially disabled or disable those that are currently active. Let's make
    use of the enable and disable methods to switch on or off a tooltip, which we
    will configure to be disabled when the page loads in the browser.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以利用`enable`或`disable`方法以编程方式启用或禁用特定的工具提示。这将有效地打开任何最初被禁用的工具提示或关闭当前活动的工具提示。让我们利用`enable`和`disable`方法来打开或关闭一个工具提示，我们将配置它在页面加载到浏览器时处于禁用状态。
- en: 'Add the following new `<button>` elements directly after the existing markup
    for the Tooltip widget in `tooltip10.html`:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在`tooltip10.html`的工具提示部件的现有标记之后直接添加以下新的`<button>`元素：
- en: '[PRE29]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Next, change the final `<script>` element so that it appears as follows:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，更改最后的`<script>`元素，使其如下所示：
- en: '[PRE30]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Save the changed file as `tooltip11.html`. On the page, we''ve added two new
    `<button>` elements. One will be used to enable the disabled tooltip and the other
    is used to disable it again. If we load the page into a browser, we will see something
    similar to the following screenshot:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 将更改的文件保存为`tooltip11.html`。在页面上，我们添加了两个新的`<button>`元素。一个用于启用已禁用的工具提示，另一个用于再次禁用它。如果我们将页面加载到浏览器中，我们将看到类似以下截图：
- en: '![Enabling and disabling tooltips](img/2209OS_10_18.jpg)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![启用和禁用工具提示](img/2209OS_10_18.jpg)'
- en: In the JavaScript, we use the `click` event of the `Enable Tooltip` button to
    call the `tooltip()` widget method. To do this, we pass the string `enable`, to
    the `tooltip()` method as the first argument. Additionally, we pass the index
    number of the tab we want to enable as a second argument. All methods in jQuery
    UI are called in this way. We specify the name of the method we wish to call as
    the first argument to the widget method; the `disable` method is used in the same
    way.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 在JavaScript中，我们使用`启用工具提示`按钮的`click`事件来调用`tooltip()`小部件方法。为此，我们将字符串`enable`作为第一个参数传递给`tooltip()`方法。另外，我们将要启用的标签的索引号作为第二个参数传递。jQuery
    UI中的所有方法都是以这种方式调用的。我们指定要调用的方法的名称作为小部件方法的第一个参数；`disable`方法也是以相同的方式使用的。
- en: Note
  id: totrans-209
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Don't forget that if you set `$(document)` as the element upon which tooltip
    works, then we can use both of these methods without additional arguments, in
    order to enable or disable all tooltips on that page.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 不要忘记，如果将`$(document)`设置为工具提示所在的元素，则我们可以在不需要额外参数的情况下使用这两种方法，以启用或禁用该页面上的所有工具提示。
- en: Displaying tooltips programmatically
  id: totrans-211
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 程序化显示工具提示
- en: As well as enabling or disabling tooltips programmatically, we can equally show
    or hide tooltips at will, by clicking a button or suitable link on screen. Let's
    use both now, to show or hide one of the tooltips at will, in our next example.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 除了以编程方式启用或禁用工具提示之外，我们同样可以通过点击屏幕上的按钮或适当的链接随意显示或隐藏工具提示。让我们现在使用这两种方法之一，在下一个示例中随意显示或隐藏其中一个工具提示。
- en: 'In `tooltip11.html`, alter the last lines of our existing markup as indicated:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 在`tooltip11.html`中，按指示修改现有标记的最后几行：
- en: '[PRE31]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Next, let''s change the final `<script>` element to include the new event handlers
    that will be assigned to the new buttons we''ve just added:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们更改最后的`<script>`元素，以包含新添加的按钮所分配的新事件处理程序：
- en: '[PRE32]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Save the altered file as `tooltip12.html`. When loading the page into a browser,
    and clicking on the **Show (open) Tooltip** button, you will see the tooltip appear:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 将已更改的文件保存为`tooltip12.html`。在将页面加载到浏览器并单击**显示（打开）工具提示**按钮时，您将会看到工具提示的出现：
- en: '![Displaying tooltips programmatically](img/2209OS_10_19.jpg)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
  zh: '![程序化显示工具提示](img/2209OS_10_19.jpg)'
- en: In the JavaScript, we use the click event of the **Show (open) Tooltip** button
    to call the Tooltip widget and display the tooltip. To do this, we only need to
    pass one attribute, which is the string open, to the `tooltip()` method. When
    we need to hide (or close) the tooltip, we can pass the string close as part of
    calling the Tooltip widget, in a similar manner.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 在JavaScript中，我们使用**显示（打开）工具提示**按钮的`click`事件来调用工具提示小部件并显示工具提示。为此，我们只需要将一个属性，即字符串`open`，传递给`tooltip()`方法。当我们需要隐藏（或关闭）工具提示时，我们可以以类似的方式通过调用工具提示小部件来传递字符串`close`。
- en: Handling tooltip events
  id: totrans-220
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理工具提示事件
- en: 'The Tooltip widget defines three events that allow you to add call back functions
    to perform different actions, when certain events exposed by the widget are detected.
    The following table lists the configuration options that are able to accept executable
    functions on an event:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: Tooltip 小部件定义了三个事件，允许您添加回调函数以执行不同的操作，当检测到小部件暴露的某些事件时。以下表格列出了能够在事件上接受可执行函数的配置选项：
- en: '| Event | Fired when… |'
  id: totrans-222
  prefs: []
  type: TYPE_TB
  zh: '| 事件 | 当...时触发 |'
- en: '| --- | --- |'
  id: totrans-223
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `close` | A tooltip is closed or triggered on `focusout` or `mouseleave`
    |'
  id: totrans-224
  prefs: []
  type: TYPE_TB
  zh: '| `close` | 当焦点离开或鼠标移出时，提示关闭或触发 |'
- en: '| `create` | A tooltip is created |'
  id: totrans-225
  prefs: []
  type: TYPE_TB
  zh: '| `create` | 提示已创建 |'
- en: '| `open` | A tooltip is shown or triggered on `focusin` or `mouseover` |'
  id: totrans-226
  prefs: []
  type: TYPE_TB
  zh: '| `open` | 当焦点移入或鼠标悬停时，提示显示或触发 |'
- en: Each component of the library has callback options (such as those in the previous
    table), which are tuned to look for key moments in any visitor interactions. Any
    functions we use within these callbacks are usually executed before the change
    happens. Therefore, you can return `false` from your callback and prevent the
    action from occurring.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 每个库组件都有回调选项（如前面表格中的选项），这些选项被调整为在任何访问者交互的关键时刻查找。我们在这些回调中使用的任何函数通常在更改发生之前执行。因此，您可以从回调中返回`false`，防止操作发生。
- en: 'In our next example, we''ll look at how easy it is to react to a particular
    tooltip being displayed, using the standard non-bind technique. Change the final
    `<script>` element in `tooltip12.html` so that it appears as follows:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的下一个示例中，我们将看看如何轻松地对显示的特定提示做出反应，使用标准的非绑定技术。将`tooltip12.html`中的最后一个 `<script>`
    元素更改为以下内容：
- en: '[PRE33]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Save this as `tooltip13.html`. We also need to alter our markup, so remove
    the two buttons at the foot of our existing markup, and insert a new History `<div>`
    as shown:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 保存为`tooltip13.html`。我们还需要更改我们的标记，所以删除现有标记底部的两个按钮，并插入一个新的 History `<div>` 如下所示：
- en: '[PRE34]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Finally, we need to add a little styling to make the display look presentable.
    In a new document, add the following:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们需要添加一些样式使显示看起来漂亮。在一个新文档中，添加以下内容：
- en: '[PRE35]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Save this in the `css` folder as `tooltipEvents.css`. Don''t forget to link
    to the new style sheet from the `<head>` of our page (after the link to the standard
    jQuery UI stylesheet):'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 将此保存在`css`文件夹中为`tooltipEvents.css`。不要忘记从页面的`<head>`中链接到新样式表（在链接到标准 jQuery UI
    样式表之后）：
- en: '[PRE36]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'If we preview the results in a browser, then move over the tooltip link a few
    times. We can begin to see a history build up, as shown in this screenshot:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们在浏览器中预览结果，然后几次移动到提示链接上。我们可以开始看到历史记录的建立，如此屏幕截图所示：
- en: '![Handling tooltip events](img/2209OS_10_19B.jpg)'
  id: totrans-237
  prefs: []
  type: TYPE_IMG
  zh: '![处理提示事件](img/2209OS_10_19B.jpg)'
- en: We made use of both the `open` and `close` callbacks within this example, although
    the principle is the same for the create custom event, that can also be fired
    by tooltip. The names of the callback functions are provided as the values of
    the `open` and `close` properties in our configuration object.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们同时使用了`open`和`close`回调，尽管对于也可以由提示触发的创建自定义事件，原理是相同的。回调函数的名称作为我们配置对象中`open`和`close`属性的值提供。
- en: Two arguments will be passed automatically by the widget to the callback function
    we define, when it is executed. These are the original `event` object and `custom
    ui` object containing useful properties from the tooltip, which was displayed.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们定义的回调函数被执行时，小部件将自动传递两个参数给它们。这些是原始的`event`对象和包含有用的属性的自定义`ui`对象，来自显示的提示。
- en: Binding to tooltip events
  id: totrans-240
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绑定到提示事件
- en: Using the event callbacks exposed by each component is the standard way of handling
    interactions. However, in addition to the callbacks listed in the previous table,
    we can also look into another set of events fired by each component at different
    times.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 使用每个组件公开的事件回调是处理交互的标准方式。但是，除了上一个表格中列出的回调之外，我们还可以研究另一组在不同时间由每个组件触发的事件。
- en: We can use the standard jQuery `on()` method to bind an event handler to a custom
    event, fired by the Tooltip widget in the same way that we could bind to a standard
    DOM event, such as a click.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用标准的 jQuery `on()` 方法来将事件处理程序绑定到由 Tooltip 小部件触发的自定义事件上，方式与我们可以绑定到标准 DOM
    事件（例如点击）相同。
- en: 'The following table lists the Tooltip widget''s custom binding events and their
    triggers:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格列出了 Tooltip 小部件的自定义绑定事件及其触发器：
- en: '| Event | Fired when… |'
  id: totrans-244
  prefs: []
  type: TYPE_TB
  zh: '| 事件 | 当...时触发 |'
- en: '| --- | --- |'
  id: totrans-245
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `tooltipcreate` | A tooltip is created |'
  id: totrans-246
  prefs: []
  type: TYPE_TB
  zh: '| `tooltipcreate` | 提示已创建 |'
- en: '| `tooltipopen` | A tooltip is shown or triggered on `focusin` or `mouseover`
    |'
  id: totrans-247
  prefs: []
  type: TYPE_TB
  zh: '| `tooltipopen` | 工具提示显示或在`focusin`或`mouseover`上触发 |'
- en: '| `tooltipclose` | A tooltip is closed or triggered on `focusout` or `mouseleave`
    |'
  id: totrans-248
  prefs: []
  type: TYPE_TB
  zh: '| `tooltipclose` | 工具提示关闭或在`focusout`或`mouseleave`上触发 |'
- en: The first event is fired as soon as the tooltip is created; the remaining two
    are fired depending on whether the tooltip has received focus.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个事件在工具提示创建后立即触发；剩下的两个事件取决于工具提示是否已获得焦点。
- en: 'Let''s see this type of event in action; change the final `<script>` element
    in `tooltip13.html` to the following:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看此类事件如何运作；将`tooltip13.html`中的最后一个`<script>`元素更改为以下内容：
- en: '[PRE37]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Save this change as `tooltip14.html`. Binding to the `tooltipopen` and `tooltipclose`
    event handlers in this way, produces the same result as the previous example,
    using the `open` and `close` callback functions. Like last time, the console log
    should be updated each time you hover over the tooltip in the text.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 将此更改保存为`tooltip14.html`。以这种方式绑定到`tooltipopen`和`tooltipclose`事件处理程序，会产生与上一个示例中使用`open`和`close`回调函数相同的结果。与上次一样，每次将鼠标悬停在文本中的工具提示上时，控制台日志都应更新。
- en: All of the events exposed by all of the widgets can be used with the `on()`
    method, by simply prefixing the name of the widget to the name of the event.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 所有部件公开的所有事件都可以使用`on()`方法，只需在事件的名称前加上部件的名称即可。
- en: Playing videos
  id: totrans-254
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 播放视频
- en: So far, we've covered a great deal of theory around using jQuery UI's Tooltip;
    in this example and the next, we will take a look at some practical uses of tooltips
    that you can use as a starting point for your own projects. Before continuing,
    make sure you have a copy of the code download available, as we will be using
    files from it for this exercise.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经涵盖了大量关于使用jQuery UI的工具提示的理论；在这个例子和下一个例子中，我们将看看一些实用的工具提示的实际用法，您可以将其用作您自己项目的起点。在继续之前，请确保您可以获得代码下载的副本，因为我们将在本练习中使用其中的文件。
- en: One possible use for tooltips is to mimic the like or dislike buttons you might
    find on social media sites, such as YouTube, where you can register your preference
    for videos you have enjoyed watching. Let's take a look at how you could replicate
    the functionality, in your own projects, but using tooltips and a number of other
    jQuery UI widgets that we've covered so far in this book.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 工具提示的一种可能用法是模仿您可能在社交媒体网站上找到的喜欢或不喜欢按钮，例如YouTube，在那里您可以注册对您喜欢观看的视频的偏好。让我们看看您如何在自己的项目中复制此功能，但是使用我们在本书中到目前为止已经涵盖的一些其他jQuery
    UI部件和工具提示。
- en: Note
  id: totrans-257
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This demonstration uses a video from the open source project *The Big Buck Bunny*,
    created by the *Blender Foundation*, and available from [http://www.bigbuckbunny.org](http://www.bigbuckbunny.org).
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 此演示使用了来自开源项目*The Big Buck Bunny*的视频，该项目由*Blender Foundation*创建，并可从[http://www.bigbuckbunny.org](http://www.bigbuckbunny.org)获取。
- en: 'From the code download, extract a copy of `tooltipVideo.js`; this will provide
    the functionality that adds the buttons and tooltips to the bottom of our video.
    Don''t forget to link to the new JavaScript file from the `<head>` of our page
    (after the link to the jQuery UI button widget):'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 从代码下载中提取`tooltipVideo.js`的副本；这将提供将按钮和工具提示添加到视频底部的功能。不要忘记从我们页面的`<head>`中链接到新的JavaScript文件（在链接到jQuery
    UI按钮部件之后）：
- en: '[PRE38]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'We also need to add a reference to the Button widget to the `<head>` of our
    page:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要在我们页面的`<head>`中添加对Button部件的引用：
- en: '[PRE39]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Next, change the `<body>` so that it contains the following elements:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，更改`<body>`，使其包含以下元素：
- en: '[PRE40]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Last but not least, we also need to add some styling, to ensure the tooltips
    display correctly. Add the following to a new document in your text editor:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 最后但同样重要的是，我们还需要添加一些样式，以确保工具提示正确显示。将以下内容添加到文本编辑器中的新文档中：
- en: '[PRE41]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Save this as `tooltipVideo.css`, into the `css` folder – don''t forget to add
    a link to it from your main document, immediately after the link to the jQuery
    UI stylesheet:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 将此文件保存为`tooltipVideo.css`，放入`css`文件夹中 - 不要忘记从主文档中添加一个链接，紧跟在链接到jQuery UI样式表之后：
- en: '[PRE42]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Save your modified page as `tooltip15.html`. The following screenshot shows
    how the page should appear when previewing the video in a browser:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 将您修改后的页面保存为`tooltip15.html`。以下截图显示了在浏览器中预览视频时页面的外观：
- en: '![Playing videos](img/2209OS_10_20.jpg)'
  id: totrans-270
  prefs: []
  type: TYPE_IMG
  zh: '![播放视频](img/2209OS_10_20.jpg)'
- en: Using the buttons in this manner allows us to add some really powerful functionality
    to our sites. In our example, the buttons don't actually do anything (apart from
    show the tooltips), but in real-life, they would be used to maintain a running
    tally of those who have watched the video, and want to register their like (or
    dislike) for it.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 以这种方式使用按钮允许我们向我们的站点添加一些真正强大的功能。在我们的示例中，按钮实际上并不执行任何操作（除了显示工具提示），但在现实生活中，它们将用于维护观看视频并希望注册对其喜欢（或不喜欢）的人的运行总数。
- en: Filling out and validating forms
  id: totrans-272
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 填写和验证表单
- en: Throughout this chapter, we've covered a lot of ground on how to implement tooltips,
    and configure them to our needs, within our sites. We cannot finish this chapter
    though, without taking a look at what is arguably the most important (or common?)
    use of tooltips in a site—form validation.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，我们已经涵盖了很多关于如何实现工具提示，并根据我们的需求配置它们在我们网站中的用法。然而，我们不能在没有对站点的最重要（或常见？）用途之一 -
    表单验证进行检查的情况下结束本章。
- en: I am sure that over the years, you will likely have filled out forms online;
    perhaps as part of purchasing something, and that you will have made a mistake
    whilst completing it. The beauty of tooltips is that we can use them to provide
    some feedback to the visitor, to ensure they fill out the fields correctly, and
    do not enter invalid values to your form.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信多年来，你很可能在网上填写过表格；也许是作为购买某物的一部分，并且在填写过程中犯过错误。工具提示的美妙之处在于我们可以利用它们向访问者提供反馈，以确保他们正确填写字段，并且不会向您的表单输入无效值。
- en: 'In your text editor, alter the final `<script>` block from `tooltip14.html`,
    as shown in the following code:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的文本编辑器中，按照下面的代码更改`tooltip14.html`的最终`<script>`块：
- en: '[PRE43]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'As we are using JQuery UI''s Button widget in this example, we need to add
    a link to the widget from within jQuery UI''s library:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 由于在本示例中我们使用了JQuery UI的Button小部件，所以我们需要在jQuery UI库中添加一个到该小部件的链接：
- en: '[PRE44]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Next, we need to add in the markup for our form – remove the existing markup,
    and replace it with the following:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要添加我们表单的标记 - 删除现有标记，并用以下标记替换它：
- en: '[PRE45]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Save this as `tooltip16.html`. We also need a little CSS to complete this example.
    In the `<head>` of the page we just created, add the following `<link>` element:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 将其保存为`tooltip16.html`。我们还需要一些CSS来完成这个示例。在我们刚创建的页面的`<head>`中，添加以下`<link>`元素：
- en: '[PRE46]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Then in a new page in your text editor, add the following code:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 然后在您的文本编辑器中添加一个新页面，加入以下代码：
- en: '[PRE47]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Save this as `tooltipForm.css` in the `css` folder. If we preview the page
    in our browser, you will see each of the tooltips appear when hovering over them,
    or they can all be shown when clicking on the **Open Help** button, as shown in
    the following screenshot:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 将其保存为`tooltipForm.css`在`css`文件夹中。如果我们在浏览器中预览页面，您将看到在悬停在它们上方时每个工具提示都会出现，或者当点击**打开帮助**按钮时它们都会显示，如下面的截图所示：
- en: '![Filling out and validating forms](img/2209OS_10_21.jpg)'
  id: totrans-286
  prefs: []
  type: TYPE_IMG
  zh: '![填写和验证表单](img/2209OS_10_21.jpg)'
- en: In this example, we've set jQuery UI to show the tooltips on the `[title]` attributes
    of each field. However, as we assigned the tooltip method handler to the `$tooltips`
    variable, we were able to use this to create a click handler for each of the buttons,
    which will either display or hide all of the tooltips, depending on which button
    is pressed. We can also display messages to the user, when something has gone
    wrong; for example, if a password has been entered incorrectly, we can use the
    input field's `blur` event handler to open a tooltip on screen.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 在本示例中，我们已将jQuery UI设置为显示每个字段的`[title]`属性上的工具提示。然而，由于我们将工具提示方法处理程序分配给了`$tooltips`变量，我们能够使用它来为每个按钮创建一个点击处理程序，根据按下的按钮是哪个来显示或隐藏所有工具提示。当发生错误时，我们还可以向用户显示消息；例如，如果密码输入错误，我们可以使用输入字段的`blur`事件处理程序在屏幕上打开一个工具提示。
- en: Summary
  id: totrans-288
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Phew! For such a small widget, we certainly have covered a lot of ground!
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 哎呀！对于这样一个小小的小部件，我们确实涵盖了很多内容！
- en: The Tooltip widget is an excellent way to communicate short pieces of information,
    such as an error or alert, to the user, you can even use it as a mini help system;
    let's review what was covered in this chapter.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 工具提示小部件是传达短信息的绝佳方式，比如错误或警报，可以甚至用它作为迷你帮助系统；让我们回顾一下本章讨论的内容。
- en: We first looked at how, with just a little underlying HTML and a single line
    of jQuery-flavored JavaScript, we can implement the default tooltip widget. We
    then saw how easy it is to style the Tooltip widget, either using a predesigned
    ThemeRoller theme, or one of our own; so that its appearance, but not its behavior,
    is altered.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先看了一下，只需一点基础的 HTML 和一行 jQuery 风格的 JavaScript，我们就可以实现默认的提示小部件。然后，我们看到了通过使用预设计的
    ThemeRoller 主题或我们自己的主题，轻松地为提示小部件设置样式的方法；这样它的外观就会改变，但行为不会改变。
- en: We then moved on, to look at the set of configurable options exposed by the
    tooltip's API, and how these can be used to control the options that the widget
    offers. Following the configurable options, we covered the handful of methods
    that we can use to programmatically make the tooltip perform different actions,
    such as enabling or disabling specific tooltips.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们继续，看了一下提示小部件 API 暴露的一系列可配置选项，以及如何使用这些选项来控制小部件提供的选项。在可配置选项之后，我们介绍了一些方法，我们可以使用这些方法来以编程方式使提示小部件执行不同的操作，比如启用或禁用特定的提示。
- en: We briefly looked at some of the more involved functionality supported by the
    tooltips widget, such as AJAX-based tooltips, and providing context to forms.
    Both of these techniques are easy to use and can add value to any implementation.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 我们简要地看了一下提示小部件支持的一些更复杂的功能，比如基于 AJAX 的提示，以及为表单提供上下文。这两种技术都很容易使用，并且可以为任何实现增加价值。
- en: We have now finished our journey through the UI widgets, so let's turn our attention
    to looking at some of interactions available in the library, beginning with the
    dragging widget.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经完成了 UI 小部件的探索，所以让我们将注意力转向库中可用的一些交互，从拖动小部件开始。
