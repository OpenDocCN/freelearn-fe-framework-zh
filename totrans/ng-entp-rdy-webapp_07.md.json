["```js\n    projects/ch7 \n    ```", "```js\n    npx ng serve ch7 \n    ```", "```js\n    npx ng test ch7 --watch=false \n    ```", "```js\n    npx ng e2e ch7 \n    ```", "```js\n    npx ng build ch7 --prod \n    ```", "```js\nPS> Install-Script -Name setup-windows-dev-env\nPS> setup-windows-dev-env.ps1 \n```", "```js\n$> bash <(wget -O - https://git.io/JvHi1) \n```", "```js\n    $ npx @angular/cli new lemon-mart --routing --strict\n    (Select CSS as the stylesheet format ) \n    ```", "```js\n    **src/app/app-routing.modules.ts**\n    import { NgModule } from '@angular/core';\n    import { Routes, RouterModule } from '@angular/router'; \n    const routes: Routes = [];\n    @NgModule({\n      imports: [RouterModule.forRoot(routes)],\n      exports: [RouterModule],\n    })\n    export class AppRoutingModule { } \n    ```", "```js\n    **src/app/app.module.ts**\n    ...\n    import { AppRoutingModule } from './app-routing.module';\n    @NgModule({ \n      ... \n      imports: [ AppRoutingModule, ... ], \n      ...\n    }) \n    ```", "```js\n    npm i -g mrm-task-angular-vscode \n    ```", "```js\n    npx mrm angular-vscode \n    ```", "```js\n    npm i -g mrm-task-npm-docker \n    ```", "```js\n    npx mrm npm-docker \n    ```", "```js\n    \"scripts\": {\n      ...,\n      \"build:prod\": \"ng build --prod\",\n    } \n    ```", "```js\n    $ npx ng add @angular/material\n    (select Custom, No to global typography, Yes to browser animations)\n    $ npm i @angular/flex-layout \n    $ npx ng g m material --flat -m app \n    ```", "```js\n    **src/styles.css**\n    html,\n    body { \n      height: 100%; \n    }\n    body { \n      margin: 0;\n      font-family: Roboto, \"Helvetica Neue\", sans-serif; \n    }\n    .margin-top { \n      margin-top: 16px;\n    }\n    .horizontal-padding { \n      margin-left: 16px;\n      margin-right: 16px;\n    }\n    .flex-spacer {\n      flex: 1 1 auto;\n    } \n    ```", "```js\n    $ npx ng g m manager -m app --routing\n    $ npx ng g m inventory -m app --routing\n    $ npx ng g m pos -m app --routing\n    $ npx ng g m user -m app --routing \n    ```", "```js\n    **/src/app**\n    │   app-routing.module.ts\n    │   app.component.css\n    │   app.component.html\n    │   app.component.spec.ts\n    │   app.component.ts\n    │   app.module.ts\n    │   material.module.ts\n    ├───inventory\n    │      inventory-routing.module.ts\n    │      inventory.module.ts\n    ├───manager\n    │      manager-routing.module.ts\n    │      manager.module.ts\n    ├───pos\n    │      pos-routing.module.ts\n    │      pos.module.ts\n    └───user\n    │      user-routing.module.ts\n    │      user.module.ts \n    ```", "```js\n**src/app/manager/manager.module.ts**\nimport { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { ManagerRoutingModule } from './manager-routing.module'\n@NgModule({\n  imports: [CommonModule, ManagerRoutingModule],\n  declarations: [],\n})\nexport class ManagerModule {} \n```", "```js\n**src/app/app.module.ts**\n...\nimport { ManagerModule } from './manager/manager.module'\n...\n@NgModule({ \n  ... \n  imports: [..., ManagerModule], \n  ...\n}) \n```", "```js\n**src/app/manager/manager-routing.module.ts**\nimport { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\nconst routes: Routes = []\n@NgModule({\n  imports: [RouterModule.forChild(routes)], \n  exports: [RouterModule],\n})\nexport class ManagerRoutingModule {} \n```", "```js\n$ npx ng g c home -m app --inline-template --inline-style \n```", "```js\n    **src/app/app-routing.module.ts**\n    ...\n    **import { HomeComponent } from './home/home.component'**\n    const routes: Routes = [\n     **{ path: '', redirectTo: '/home', pathMatch: 'full' },**\n     **{ path: 'home', component: HomeComponent },**\n    ]\n    ... \n    ```", "```js\n    **src/app/app-routing.module.ts**\n    **import {** \n     **PageNotFoundComponent** \n    **} from './page-not-found/page-not-found.component'** \n    ...\n    const routes: Routes = [\n      ...\n        **{ path: '**', component: PageNotFoundComponent },**\n      ]\n    ... \n    ```", "```js\n    **src/app/page-not-found/page-not-found.component.ts**\n    ...\n      template: `\n     **<p>**\n     **This page doesn't exist. Go back to**\n     **<a routerLink=\"/home\">home</a>.**\n     **</p>**\n      `,\n    ... \n    ```", "```js\n    **src/app/app.component.ts**\n    ...\n    template: `\n      <mat-toolbar color=\"primary\">\n        <a mat-button routerLink=\"/home\"><h1>LemonMart</h1></a>\n      </mat-toolbar>\n      <router-outlet></router-outlet>\n    `, \n    ```", "```js\n    **angular.json**\n    \"apps\": [ {\n      ... \n      \"styles\": [ \n        \"src/lemonmart-theme.scss\", \n        \"src/styles.css\" \n      ],\n      ...\n    }] \n    ```", "```js\n    **angular.json**\n    \"apps\": [\n      {\n      ...\n        \"assets\": [\n          \"src/assets\",\n          \"src/favicon.ico\",\n          \"src/android-chrome-192x192.png\",\n          \"src/favicon-16x16.png\",\n          \"src/mstile-310x150.png\",\n          \"src/android-chrome-512x512.png\",\n          \"src/favicon-32x32.png\",\n          \"src/mstile-310x310.png\",\n          \"src/apple-touch-icon.png\",\n          \"src/manifest.json\",\n          \"src/mstile-70x70.png\",\n          \"src/browserconfig.xml\",\n          \"src/mstile-144x144.png\",\n          \"src/safari-pinned-tab.svg\",\n          \"src/mstile-150x150.png\"\n        ] \n    ```", "```js\n    **src/index.html**\n    <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch- icon.png?v=rMlKOnvxlK\">\n    <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicon-32x32.png?v=rMlKOnvxlK\">\n    <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicon-16x16.png?v=rMlKOnvxlK\">\n    <link rel=\"manifest\" href=\"/manifest.json?v=rMlKOnvxlK\">\n    <link rel=\"mask-icon\" href=\"/safari-pinned-tab.svg?v=rMlKOnvxlK\" color=\"#b3ad2d\">\n    <link rel=\"shortcut icon\" href=\"/favicon.ico?v=rMlKOnvxlK\">\n    <meta name=\"theme-color\" content=\"#ffffff\"> \n    ```", "```js\n    **src/app/app.component.ts**\n    **import { MatIconRegistry } from '@angular/material/icon'**\n    **import { DomSanitizer } from '@angular/platform-browser'**\n    ...\n    export class AppComponent {\n     **constructor(** \n     **iconRegistry: MatIconRegistry,** \n     **sanitizer: DomSanitizer**\n     **) {** \n     **iconRegistry.addSvgIcon(**\n     **'lemon',**\n     **sanitizer.bypassSecurityTrustResourceUrl(**\n     **'assets/img/icons/ lemon.svg'**\n     **)** \n     **)**\n      } \n    } \n    ```", "```js\n    **src/app/app.component.ts**\n    template: ` \n      <mat-toolbar color=\"primary\"> \n     **<mat-icon svgIcon=\"lemon\"></mat-icon>** \n        <a mat-button routerLink=\"/home\"><h1>LemonMart</h1></a> \n      </mat-toolbar> \n      <router-outlet></router-outlet> \n    `, \n    ```", "```js\n    **src/index.html**\n    <head>\n      ...\n      <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n    </head> \n    ```", "```js\n    **src/app/app.component.ts**\n    template: `\n      <mat-toolbar color=\"primary\">\n        <**button mat-icon-button><mat-icon>menu</mat-icon></button>**\n        <mat-icon svgIcon=\"lemon\"></mat-icon>\n        <a mat-button routerLink=\"/home\"><h1>LemonMart</h1></a>\n        **<span class=\"flex-spacer\"></span>**\n     **<button mat-icon-button>**\n     **<mat-icon>account_circle</mat-icon>**\n     **</button>**\n     **<button mat-icon-button>**\n     **<mat-icon>lock_open</mat-icon>**\n     **</button>**\n      </mat-toolbar>\n      <router-outlet></router-outlet>\n    `, \n    ```", "```js\n    **src/app/home/home.component.ts**\n      styles: [`\n        div[fxLayout] {margin-top: 32px;}\n      `],\n      template: `\n        <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n          <span class=\"mat-display-2\">Hello, Limoncu!</span>\n          <button mat-raised-button color=\"primary\">Login</button>\n        </div>\n      ` \n    ```", "```js\n**rootRouter example**\nconst routes: Routes = [\n  { path: '', redirectTo: '/a', pathMatch: 'full' },\n  {\n    path: 'a',\n    component: AComponent,\n    children: [\n      { path: '', component: MasterComponent, outlet: 'master' },\n      { path: '', component: DetailComponent, outlet: 'detail' },\n    ],\n  },\n  {\n    path: 'b',\n    loadChildren: \n      () => import('./b/b.module')\n        .then((module) => module.BModule), \n    canLoad: [AuthGuard],\n  },\n  { path: 'c', component: CComponent },\n  { path: '**', component: PageNotFoundComponent },\n] \n```", "```js\n**childRouter example**\nconst routes: Routes = [\n  { path: '', redirectTo: '/b/d', pathMatch: 'full' },\n  { path: 'd', component: DComponent },\n  { path: 'e', component: EComponent },\n  { path: 'f', component: FComponent },\n] \n```", "```js\n    $ npx ng g c manager/managerHome -m manager -s -t \n    ```", "```js\n    /src\n    ├───app\n    │ │\n    │ ├───manager\n    │ │ │ manager-routing.module.ts\n    │ │ │ manager.module.ts\n    │ │ │\n    │ │ └───manager-home\n    │ │ │ │ manager-home.component.spec.ts\n    │ │ │ │ manager-home.component.ts \n    ```", "```js\n    **src/app/manager/manager-routing.module.ts**\n    import { \n      ManagerHomeComponent \n    } from './manager-home/manager-home.component' \n    const routes: Routes = [ \n      { path: '', redirectTo: '/manager/home', pathMatch: 'full' }, \n      { path: 'home', component: ManagerHomeComponent }, \n    ] \n    ```", "```js\n    **src/app/app.module.ts**\n    import { ManagerModule } from './manager/manager.module' \n    ...\n    @NgModule({ \n      imports: [..., ManagerModule],\n      ...\n    }) \n    ```", "```js\n     \"angularCompilerOptions\": {\n        \"enableIvy\": false\n      } \n    ```", "```js\n    **src/app/app-routing.module.ts**\n    **import {** \n     **ManagerHomeComponent** \n    **} from './manager/manager-home/ manager-home.component'** \n    ...\n    const routes: Routes = [\n      ...\n      **{ path: 'manager', component: ManagerHomeComponent },**\n      { path: '**', component: PageNotFoundComponent },\n    ] \n    ```", "```js\n    **src/app/manager/manager.module.ts**\n    import { Routes } from '@angular/router'\n    export const managerModuleRoutes: Routes = [\n      { path: '', component: ManagerHomeComponent }\n    ] \n    ```", "```js\n    **src/app/app-routing.module.ts**\n    import { **managerModuleRoutes** } from './manager/manager.module'\n    ...\n    { path: 'manager', children: **managerModuleRoutes** }, \n    ```", "```js\n    **src/app/app-routing.module.ts**\n    import { NgModule } from '@angular/core'\n    import { RouterModule, Routes } from '@angular/router'\n    import { HomeComponent } from './home/home.component'\n    import { PageNotFoundComponent } from './page-not-found/page-not-found.component'\n    ... \n      const routes: Routes = [ \n        ..., \n        { \n          path: 'manager', \n          loadChildren: \n            () => import('./manager/manager.module')\n              . then(m=> m.ManagerModule), \n        }, \n        { path: '**', component: PageNotFoundComponent }, \n      ] \n    ... \n    ```", "```js\n    **src/app/manager/manager-routing.module.ts**\n    const routes: Routes = [\n      { path: '', redirectTo: '/manager/home', pathMatch: 'full' },\n      { path: 'home', component: ManagerHomeComponent },\n    ] \n    ```", "```js\n**src/app/home/home.component.ts**\n  ...\n  <button mat-raised-button color=\"primary\" **routerLink=\"/manager\"**>\n    **Login as Manager**\n  </button>\n  ... \n```", "```js\n    $ npx ng g c manager/manager -m manager --flat -s -t \n    ```", "```js\n    **src/app/manager/manager.component.ts**\n    styles: [\n      `\n        div[fxLayout] {\n          margin-top: 32px;\n        }\n      `, \n      `\n        .active-link {\n          font-weight: bold;\n          border-bottom: 2px solid #005005;\n        }\n      `,\n    ],\n    template: `\n    <mat-toolbar color=\"accent\"> \n      <a mat-button \n        routerLink=\"/manager/home\" \n        routerLinkActive=\"active-link\"\n       >\n          Manager's Dashboard\n      </a> \n      <a mat-button \n        routerLink=\"/manager/users\" \n        routerLinkActive=\"active-link\"\n      >\n        User Management\n      </a> \n      <a mat-button \n         routerLink=\"/manager/receipts\" \n         routerLinkActive=\"active-link\"\n       >\n         Receipt Lookup\n       </a> \n    </mat-toolbar> \n    <router-outlet></router-outlet>\n    ` \n    ```", "```js\n    **src/app/manager/manager.module.ts**\n    import { MaterialModule } from '../material.module' \n    import { ManagerComponent } from './manager.component'\n    ...\n    declarations: [..., **ManagerComponent**],\n    imports: [..., **MaterialModule**], \n    ```", "```js\n    $ npx ng g c manager/userManagement -m manager\n    $ npx ng g c manager/receiptLookup -m manager \n    ```", "```js\n    **example**\n    { path: '', redirectTo: '/manager/home', pathMatch: 'full' },\n    { path: 'home', component: ManagerHomeComponent },\n    { path: 'users', component: UserManagementComponent },\n    { path: 'receipts', component: ReceiptLookupComponent }, \n    ```", "```js\n**src/app/manager/manager-routing.module.ts**\n...\nimport { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { ManagerHomeComponent } from './manager-home/manager-home.component'\nimport { ManagerComponent } from './manager.component'\nimport { ReceiptLookupComponent } from './receipt-lookup/receipt-lookup.component'\nimport { UserManagementComponent } from './user-management/user-management.component' \nconst routes: Routes = [\n  {\n    path: '', \n    component: ManagerComponent, \n    children: [\n      { path: '', redirectTo: '/manager/home', pathMatch: 'full' },\n      { path: 'home', component: ManagerHomeComponent },\n      { path: 'users', component: UserManagementComponent },\n      { path: 'receipts', component: ReceiptLookupComponent },\n    ],\n  },\n] \n```", "```js\n    $ npx ng g c user/profile -m user\n    $ npx ng g c user/logout -m user -t -s\n    $ npx ng g c user/navigationMenu -m user -t -s \n    ```", "```js\n    **src/app/app-routing.module.ts**\n    ... \n    { \n      path: 'user', \n      loadChildren: \n        () => import('./user/user.module')\n          .then(m => m.UserModule), \n    }, \n    ```", "```js\n    **src/app/user/user-routing.module.ts**\n    ...\n    const routes: Routes = [\n      { path: 'profile', component: ProfileComponent },\n      { path: 'logout', component: LogoutComponent },\n    ] \n    ```", "```js\n    **src/app/app.component.ts**\n    ... \n    <mat-toolbar> \n      ... \n      <button \n     **mat-mini-fab routerLink=\"/user/profile\"** \n     **matTooltip=\"Profile\" aria-label=\"User Profile\"**\n      > \n        <mat-icon>account_circle</mat-icon> \n      </button> \n      <button \n     **mat-mini-fab routerLink=\"/user/logout\"** \n     **matTooltip=\"Logout\" aria-label=\"Logout\"**\n      > \n        <mat-icon>lock_open</mat-icon> \n      </button> \n    </mat-toolbar> \n    ```", "```js\n    **src/app/app.component.ts**\n    ...\n    <mat-toolbar>\n      ...\n      <a mat-icon-button routerLink=\"/home\">\n        <mat-icon svgIcon=\"lemon\"></mat-icon>\n        <span class=\"mat-h2\">LemonMart</span>\n      </a>\n      ...\n    </mat-toolbar> \n    ```", "```js\n**src/app/manager/manager.component.ts**\n<mat-toolbar color=\"accent\" **fxLayoutGap=\"8px\"**> \n **...** \n **<span class=\"flex-spacer\"></span>** \n **<button** \n **mat-mini-fab routerLink=\"/inventory\"** \n **matTooltip=\"Inventory\" aria-label=\"Inventory\"**\n **>** \n **<mat-icon>list</mat-icon>** \n **</button>** \n **<button** \n **mat-mini-fab routerLink=\"/pos\"** \n **matTooltip=\"POS\" aria-label=\"POS\"**\n **>** \n **<mat-icon>shopping_cart</mat-icon>** \n **</button>** \n</mat-toolbar> \n```", "```js\n**src/app/app.module.ts**\nimport { HttpClientModule } from '@angular/common/http'\nimport { NgModule } from '@angular/core'\nimport { FlexLayoutModule } from '@angular/flex-layout'\nimport { BrowserModule } from '@angular/platform-browser'\nimport { \n  BrowserAnimationsModule \n} from '@angular/platform-browser/ animations'\nimport { AppRoutingModule } from './app-routing.module'\nimport { AppComponent } from './app.component'\nimport { HomeComponent } from './home/home.component'\nimport { MaterialModule } from './material.module'\nimport { \n  PageNotFoundComponent \n} from './page-not-found/page-not-found.component' \n@NgModule({\n  declarations: [AppComponent, HomeComponent, PageNotFoundComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule,\n    FlexLayoutModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {} \n```", "```js\n    **src/app/common/common.testing.ts**\n    import { \n      HttpClientTestingModule \n    } from '@angular/common/http/ testing'\n    import { SecurityContext } from '@angular/core'\n    import { MediaChange } from '@angular/flex-layout'\n    import { ReactiveFormsModule } from '@angular/forms'\n    import { \n      SafeResourceUrl, \n      SafeValue \n    } from '@angular/platform-browser' \n    import { \n      NoopAnimationsModule \n    } from '@angular/platform-browser/animations' \n    import { RouterTestingModule } from '@angular/router/testing'\n    import { Observable, Subscription, of } from 'rxjs'\n    import { MaterialModule } from '../material.module'\n    const FAKE_SVGS = {\n      lemon: '<svg><path id=\"lemon\" name=\"lemon\"></path></svg>',\n    }\n    export class MediaObserverFake {\n      isActive(query: string): boolean {\n        return false\n      }\n      asObservable(): Observable<MediaChange> {\n        return of({} as MediaChange)\n      }\n      subscribe(\n        next?: (value: MediaChange) => void,\n        error?: (error: any) => void,\n        complete?: () => void\n      ): Subscription {\n        return new Subscription()\n      }\n    }\n    export class MatIconRegistryFake {\n      // tslint:disable-next-line: variable-name\n      _document = document\n      addSvgIcon(iconName: string, url: SafeResourceUrl): this {\n        // this.addSvgIcon('lemon', 'lemon.svg')\n        return this\n      }\n      getNamedSvgIcon(name: string, namespace: string = ''): Observable<SVGElement> {\n        return of(this._svgElementFromString(FAKE_SVGS.lemon))\n      }\n      private _svgElementFromString(str: string): SVGElement {\n        const div = (this._document || document)\n          . createElement('DIV') \n        div.innerHTML = str\n        const svg = div.querySelector('svg') as SVGElement\n        if (!svg) {\n          throw Error('<svg> tag not found')\n        }\n        return svg\n      }\n    }\n    export class DomSanitizerFake {\n      bypassSecurityTrustResourceUrl(url: string): SafeResourceUrl {\n        return {} as SafeResourceUrl\n      }\n      sanitize(\n        context: SecurityContext, \n        value: SafeValue | string | null): \n          string | null \n      { \n        return value?.toString() || null\n      }\n    }\n    export const commonTestingProviders: any[] = [\n      // Intentionally Left Blank!!!\n    ]\n    export const commonTestingModules: any[] = [\n      ReactiveFormsModule,\n      MaterialModule,\n      NoopAnimationsModule,\n      HttpClientTestingModule,\n      RouterTestingModule,\n    ] \n    ```", "```js\n**src/app/app.component.spec.ts**\nimport { MediaObserver } from '@angular/flex-layout'\nimport { MatIconRegistry } from '@angular/material/icon'\nimport { DomSanitizer } from '@angular/platform-browser'\n...\nimport {\n  DomSanitizerFake,\n  MatIconRegistryFake,\n  MediaObserverFake,\n  commonTestingModules,\n} from './common/common.testing'\n...\n  TestBed.configureTestingModule({\n    imports: commonTestingModules,\n    providers: commonTestingProviders.concat([\n      { provide: MediaObserver, useClass: MediaObserverFake },\n      { provide: MatIconRegistry, useClass: MatIconRegistryFake },\n      { provide: DomSanitizer, useClass: DomSanitizerFake },\n    ]),\n    declarations: [AppComponent],\n... \n```"]