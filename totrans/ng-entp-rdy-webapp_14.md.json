["```js\n    projects/ch14 \n    ```", "```js\n    npx ng serve ch14 \n    ```", "```js\n    npx ng test ch14 --watch=false \n    ```", "```js\n    npx ng e2e ch14 \n    ```", "```js\n    npx ng build ch14 --prod \n    ```", "```js\n    **src/index.html**\n    <head>\n    <!-- Google Tag Manager -->\n    <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start': new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0], j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src='https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\n    })(window,document,'script','dataLayer','GTM-56D4F6K');</script>\n    <!-- End Google Tag Manager -->\n    ...\n    </head>\n    <body>\n    <!-- Google Tag Manager (noscript) -->\n    <noscript><iframe src=\"img/ns.html?id=GTM-56D4F6K\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <!-- End Google Tag Manager (noscript) -->\n    <app-root></app-root>\n    </body> \n    ```", "```js\n    **src/app/pos/pos/pos.component.html**\n    <p>\n      <img\n        src=”https://user-images.githubusercontent.com/822159/36186684-9f05fef8-110e-11e8-991f-fae6ca60fe5d.png” />\n    </p>\n    <p>\n      <button mat-icon-button (click)=”checkout(currentTransaction)”>\n        <mat-icon>shopping_cart</mat-icon> Checkout Customer\n      </button>\n    </p> \n    ```", "```js\n    **src/app/pos/transaction/transaction.ts**\n    ...\n    export interface ITransaction {\n      paymentType: TransactionType\n      paymentAmount: number\n      transactionId?: string\n    }\n    ... \n    ```", "```js\n    **src/app/pos/transaction/transaction.enum.ts**\n    ...\n    export enum TransactionType {\n      Cash,\n      Credit,\n      LemonCoin,\n    }\n    ... \n    ```", "```js\n    **src/app/pos/transaction/transaction.service.ts**\n    ...\n    @Injectable({\n      providedIn: ‘root’,\n    })\n    export class TransactionService {\n      constructor() {}\n      processTransaction(transaction: ITransaction)\n          : Observable<string> {\n        return new\n          BehaviorSubject<string>(‘5a6352c6810c19729de860ea’)\n          .asObservable()\n      }\n    }\n    ... \n    ```", "```js\n    **src/app/pos/pos/pos.component.ts**\n    ...\n    interface IEvent {\n    event: ‘checkoutCompleted’ | ‘checkoutInitiated’\n    }\n    declare let dataLayer: IEvent[]\n    ... \n    ```", "```js\n    **src/app/pos/pos/pos.component.ts**\n    ...\n    export class PosComponent implements OnInit, OnDestroy {\n      private subs = new SubSink()\n      currentTransaction: ITransaction\n      constructor(\n        private transactionService: TransactionService,\n        private uiService: UiService\n      ) {}\n       ngOnInit() {\n        this.currentTransaction = {\n          paymentAmount: 25.78,\n          paymentType: TransactionType.Credit,\n        } as ITransaction\n      }\n      ngOnDestroy() {\n        this.subs.unsubscribe()\n      }\n    ... \n    ```", "```js\n    **src/app/pos/pos/pos.component.ts**\n    export class PosComponent implements OnInit {\n    ...\n      checkout(transaction: ITransaction) {\n        this.uiService.showToast(‘Checkout initiated’)\n        dataLayer.push({\n          event: ‘checkoutInitiated’,\n        })\n        this.subs.sink = this.transactionService\n          .processTransaction(transaction)\n          .pipe(\n            filter((tx) => tx != null || tx !== undefined),\n            tap((transactionId) => {\n              this.uiService.showToast(‘Checkout completed’)\n              dataLayer.push({\n                event: ‘checkoutCompleted’,\n              })\n            })\n          )\n          .subscribe()\n    } \n    ```", "```js\n<div angulartics2On=\"click\" angularticsEvent=\"DownloadClick\"\n  angularticsCategory=\"{{ song.name }}\"\n  [angularticsProperties]=\"{label: 'Fall Campaign'}\">\n</div> \n```"]