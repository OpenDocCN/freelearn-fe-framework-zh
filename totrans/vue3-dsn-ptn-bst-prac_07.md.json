["```js\n<script setup>\nimport {ref} from \"vue\"\nimport ChildComponent from \"./Child.vue\"\nconst _counter = ref(0);                                  //1\nfunction incrementCounter() {                             //2\n   _counter.value++;\n}\n</script>\n<template>\n<div>\n   <strong>Counter </strong>\n   <span>{{ _counter }}</span>\n   <button @click=\"incrementCounter()\">                   //3\n       Increment\n   </button>\n</div>\n<section>\n<ChildComponent title=\"Child component 1\"\n  :counter=\"_counter\" @increment=\"incrementCounter()\">    //4\n</ChildComponent>\n<ChildComponent title=\"Child component 2\"\n  :counter=\"_counter\" @increment=\"incrementCounter()\">\n</ChildComponent>\n<ChildComponent title=\"Child component 3\"\n  :counter=\"_counter\"\n  @increment=\"incrementCounter()\"></ChildComponent>\n</section>\n</template>\n```", "```js\n<script setup>\nconst\n    $props=defineProps(['counter', 'title']),         //1\n    $emit=defineEmits(['increment'])\nfunction incrementCounter(){$emit(\"increment\")}      //2\n</script>\n<template>\n<h3>{{$props.title}}</h3>\n<span class=\"badge\">{{$props.counter}}</span>        //3\n<button @click=\"incrementCounter()\">                 //4\n    Increment\n</button>\n</template>\n```", "```js\n$ npm install mitt\n```", "```js\nimport mitt from \"mitt\"\nconst messageBus = mitt()\nexport default messageBus\n```", "```js\n<script setup>\nimport messageBus from '../services/MessageBus';         //1\nimport {ref, onMounted, onBeforeUnmount} from 'vue';\nconst\n   $props=defineProps(['title']),\n   message=ref(\"\")                                       //2\n    onMounted(()=>{\n        messageBus.on(\"message\", showMessage)})                 //3\n    onBeforeUnmount(()=>{\n        messageBus.off(\"message\",showMessage)})\n    function showMessage(value){                               //4\n        message.value=value;}\n    function sendMessage(){                                    //5\n        messageBus.emit(\"message\",`Sent by ${$props.title}`)}\n</script>\n<template>\n    <h4>{{$props.title}}</h4>\n    <strong>Received: </strong>\n    <div>{{message}}</div>\n    <button @click=\"sendMessage()\">Send message</button>       //6\n</template>\n```", "```js\nimport {reactive} from \"vue\"                       //1\nconst _state=reactive({counter: 0})                //2\nfunction useState(){return _state;}                //3\nexport default useState;\n```", "```js\n<script setup>\n    import useState from \"../../services/SimpleState\"          //1\n    const $state=useState()\n</script>\n<template>\n    <strong>State: </strong><br>\n    <pre>{{$state}}</pre>                                      //2\n    <div>\n    <button @click=\"$state.counter++\">Increment</button>       //3\n    <button @click=\"$state.counter--\">Decrement</button>\n    </div>\n</template>\n```", "```js\n$ npm install pinia\n```", "```js\nimport { defineStore } from 'pinia';                    //1\nconst useCounterStore = defineStore('counter', {        //2\n  state: () => {return {count: 0, in_range: false}},    //3\n  getters: {\n    doubleCount: (state) => {                           //4\n      if(state.count>=0){\n            return state.count *2;\n      }else{\n       return 0\n      }\n  }, inRange: (state)=>return state.count>=0},\n  actions: {                                            //5\n    increment(){this.count++},\n    decrement(){this.count--;}\n  },\n})\nexport {useCounterStore}\n```", "```js\n//Composition API\nimport {ref,computed} from 'vue'                          //1\nimport {defineStore} from 'pinia'\nconst useCounterStore=defineStore('counter',()=>{         //2\n    const\n        count = ref(0),                                   //3\n        in_range=ref(true),\n        doubleCount = computed(() => {                    //4\n             if(count.value>=0){\n                 return count.value *2;\n             }else{\n                 return 0\n        }}),\n        inRange = computed(()=>return count.value>=0);\n    function increment() {count.value++}                  //5\n    function decrement(){count.value--;}\n    return {                                              //6\n        count, doubleCount, inRange,\n        increment, decrement\n    }\n})\n```", "```js\nimport { createApp } from 'vue'\nimport { createPinia } from 'pinia'\nimport App from './App.vue'\nconst app = createApp(App)\napp.use(createPinia())\napp.mount('#app')\n```", "```js\n<script setup>\nimport { useCounterStore } from '../../stores/counter';   //1\nconst $store=useCounterStore()                            //2\n</script>\n<template>\n    <h4>Child component</h4>\n    <code :class=\"{'red': !$store.in_range}\">             //3\n        {{$store}}\n    </code>\n    <button @click=\"$store.increment()\">                  //4\n        Increment</button>\n    <button @click=\"$store.decrement()\"\n        :disabled=\"!$store.in_range\">Decrement\n    </button>\n</template>\n<style scoped>\n.red{color: red;}\n</style>\n```", "```js\nlocalStorage.setItem(\"MyData\", JSON.stringify({…});\n```", "```js\nlet data=localStorage.getItem(\"MyData\")\nif(data){\n   data=JSON.parse(data);\n}\n```", "```js\nimport { reactive } from 'vue';\nlet handler = {                                                  //1\n    props: reactive({}),                                         //2\n    get(target, prop, receiver) {                                //3\n        let value = target[prop]\n        if (value instanceof Function) {\n            return (...args) => {\n                return target[prop](...args)\n            }\n        } else {\n            value = target.getItem(prop)\n            if (value) {\n                this.props[prop] = value;\n            }\n            return this.props[prop]\n        }\n    },\n    set(target, prop, value) {                                   //4\n        target.setItem(prop, value)\n        this.props[prop] = value\n        return true;\n    }\n}\nconst Decorator= new Proxy(window.sessionStorage, handler);      //5\nfunction useSessionStorage(){                                    //6\n     return Decorator;\n}\nexport { useSessionStorage }\n```", "```js\n<script setup>\n    import {useSessionStorage} from \"../../services/SessionStorage\"\n    const $sessionStorage = useSessionStorage()\n</script>\n<template>\n    <strong>Child Component</strong>\n    Counter: {{ $sessionStorage.counter }}\n</template>\n```"]