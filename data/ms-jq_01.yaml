- en: Chapter 1. Installing jQuery
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 1 章 安装 jQuery
- en: Local or CDN, I wonder…? Which version…? Do I support old IE…?
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本地还是 CDN，我在想……？使用哪个版本……？要支持旧版 IE 吗……？
- en: Installing jQuery is a thankless task that has to be done countless times by
    any developer—it is easy to imagine that person asking some of the questions that
    start this chapter. It is easy to imagine why most people go with the option of
    using a **Content Delivery Network** (**CDN**) link, but there is more to installing
    jQuery than taking the easy route!
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 jQuery 是一项无功的任务，任何开发者都不得不重复进行无数次——可以想象那个人问这个章节开头的一些问题。可以想象为什么大多数人选择使用 **内容传送网络**（**CDN**）链接，但安装
    jQuery 不只是走捷径那么简单！
- en: 'There are more options available, where we can be really specific about what
    we need to use—throughout this chapter, we will examine some of the options available
    to help develop your skills even further. We''ll cover a number of topics, which
    include:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 还有更多选项可供选择，我们可以非常具体地选择我们需要使用的内容——在本章中，我们将探讨一些可用的选项，以帮助进一步发展你的技能。我们将涵盖许多主题，其中包括：
- en: Downloading and installing jQuery
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载并安装 jQuery
- en: Customizing jQuery downloads
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义 jQuery 下载
- en: Building from Git
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 Git 构建
- en: Using other sources to install jQuery
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用其他来源安装 jQuery
- en: Adding source map support
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加源映射支持
- en: Working with Modernizr as a fallback
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Modernizr 作为备用方案
- en: Intrigued? Let's get started.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 有兴趣吗？让我们开始吧。
- en: Downloading and installing jQuery
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载并安装 jQuery
- en: As with all projects that require the use of jQuery, we must start somewhere—no
    doubt you've downloaded and installed jQuery a thousand times; let's just quickly
    recap to bring ourselves up to speed.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 就像所有需要使用 jQuery 的项目一样，我们必须从某个地方开始——毫无疑问，你已经下载并安装了 jQuery 成千上万次了；让我们快速回顾一下，以使自己跟上进度。
- en: 'If we browse to [http://www.jquery.com/download](http://www.jquery.com/download),
    we can download jQuery using one of the two methods: downloading the compressed
    production version or the uncompressed development version. If we don''t need
    to support old IE (IE6, 7, and 8), then we can choose the 2.x branch. If, however,
    you still have some diehards who can''t (or don''t want to) upgrade, then the
    1.x branch must be used instead.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们浏览到[http://www.jquery.com/download](http://www.jquery.com/download)，我们可以通过两种方法下载
    jQuery：下载压缩的生产版本或未压缩的开发版本。如果我们不需要支持旧版 IE（IE6、7 和 8），那么我们可以选择 2.x 分支。但是，如果你仍然有一些死忠粉丝无法（或不想）升级，那么必须使用
    1.x 分支。
- en: 'To include jQuery, we just need to add this link to our page:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要包含 jQuery，我们只需要将这个链接添加到我们的页面中：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Tip
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Downloading the example code**'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files for all Packt books you have purchased
    from your account from [http://www.packtpub.com](http://www.packtpub.com). If
    you purchase this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从[http://www.packtpub.com](http://www.packtpub.com)下载你购买的所有 Packt 图书的示例代码文件。如果你在其他地方购买了这本书，你可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册，文件将直接通过电子邮件发送给你。
- en: Here, `X.X.X` marks the version number of jQuery or the Migrate plugin that
    is being used in the page.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`X.X.X`表示页面中正在使用的 jQuery 或 Migrate 插件的版本号。
- en: Conventional wisdom states that the jQuery plugin (and this includes the Migrate
    plugin too) should be added to the `<head>` tag, although there are valid arguments
    to add it as the last statement before the closing `<body>` tag; placing it here
    may help speed up loading times to your site.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 传统智慧认为 jQuery 插件（包括 Migrate 插件在内）应该添加到 `<head>` 标签中，尽管也有有效的理由将其添加到闭合的 `<body>`
    标签之前的最后一个语句；将其放在这里可能有助于加快网站的加载速度。
- en: This argument is not set in stone; there may be instances where placing it in
    the `<head>` tag is necessary and this choice should be left to the developer's
    requirements. My personal preference is to place it in the `<head>` tag as it
    provides a clean separation of the script (and the CSS) code from the main markup
    in the body of the page, particularly on lighter sites.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这个论点并不是铁板一块；在某些情况下，将其放在 `<head>` 标签中可能是必要的，这个选择应该根据开发者的需求来决定。我个人偏好将其放在 `<head>`
    标签中，因为它能够将脚本（以及 CSS）代码与页面主体中的主要标记分离开来，特别是在较轻的网站上。
- en: I have even seen some developers argue that there is little *perceived* difference
    if jQuery is added at the top, rather than at the bottom; some systems, such as
    WordPress, include jQuery in the `<head>` section too, so either will work. The
    key here though is if you are perceiving slowness, then move your scripts to just
    before the `<body>` tag, which is considered a better practice.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我甚至看到一些开发人员争论说，如果在顶部而不是底部添加 jQuery，几乎没有*察觉到*的差异；一些系统，比如 WordPress，在`<head>`部分也包含
    jQuery，所以两种方式都可以。关键在于，如果你感觉到速度变慢，那么将你的脚本移到`<body>`标签之前是一个更好的做法。
- en: Using jQuery in a development capacity
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在开发中使用 jQuery
- en: A useful point to note at this stage is that best practice recommends that CDN
    links should not be used within a development capacity; instead, the uncompressed
    files should be downloaded and referenced locally. Once the site is complete and
    is ready to be uploaded, then CDN links can be used.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段需要注意的一个有用的点是，最佳实践建议不要在开发阶段使用 CDN 链接；而应该下载未压缩的文件并在本地引用。一旦网站完成并准备上传，那么就可以使用
    CDN 链接。
- en: Adding the jQuery Migrate plugin
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加 jQuery Migrate 插件
- en: If you've used any version of jQuery prior to 1.9, then it is worth adding the
    jQuery Migrate plugin to your pages. The jQuery Core team made some significant
    changes to jQuery from this version; the Migrate plugin will temporarily restore
    the functionality until such time that the old code can be updated or replaced.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是 jQuery 1.9 之前的任何版本，那么值得将 jQuery Migrate 插件添加到你的页面中。从这个版本开始，jQuery 核心团队对
    jQuery 进行了一些重大更改；Migrate 插件将临时恢复功能，直到旧代码可以更新或替换为止。
- en: 'The plugin adds three properties and a method to the jQuery object, which we
    can use to control its behavior:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 该插件向 jQuery 对象添加了三个属性和一个方法，我们可以使用它们来控制其行为：
- en: '| Property or Method | Comments |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| 属性或方法 | 评论 |'
- en: '| --- | --- |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `jQuery.migrateWarnings` | This is an array of string warning messages that
    have been generated by the code on the page, in the order in which they were generated.
    Messages appear in the array only once even if the condition has occurred multiple
    times, unless `jQuery.migrateReset()` is called. |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| `jQuery.migrateWarnings` | 这是一个包含由页面上的代码生成的字符串警告消息的数组，按照生成的顺序排列。即使条件发生多次，消息也只会出现在数组中一次，除非调用了`jQuery.migrateReset()`。
    |'
- en: '| `jQuery.migrateMute` | Set this property to `true` in order to prevent console
    warnings from being generated in the debugging version. If this property is set,
    the `jQuery.migrateWarnings` array is still maintained, which allows programmatic
    inspection without console output. |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| `jQuery.migrateMute` | 将此属性设置为`true`以防止在调试版本中生成控制台警告。如果设置了此属性，`jQuery.migrateWarnings`数组仍然会被维护，这允许在没有控制台输出的情况下进行程序化检查。
    |'
- en: '| `jQuery.migrateTrace` | Set this property to `false` if you want warnings
    but don''t want traces to appear on the console. |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| `jQuery.migrateTrace` | 如果你想要警告但不想在控制台上显示跟踪信息，请将此属性设置为`false`。 |'
- en: '| `jQuery.migrateReset()` | This method clears the `jQuery.migrateWarnings`
    array and "forgets" the list of messages that have been seen already. |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| `jQuery.migrateReset()` | 此方法清除`jQuery.migrateWarnings`数组并“忘记”已经看到的消息列表。
    |'
- en: 'Adding the plugin is equally simple—all you need to do is add a link similar
    to this, where `X` represents the version number of the plugin that is used:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 添加插件同样很简单 —— 你只需要添加类似这样的链接，其中`X`表示所使用的插件版本号：
- en: '[PRE1]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If you want to learn more about the plugin and obtain the source code, then
    it is available for download from [https://github.com/jquery/jquery-migrate](https://github.com/jquery/jquery-migrate).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解更多关于插件并获取源代码，那么可以从[https://github.com/jquery/jquery-migrate](https://github.com/jquery/jquery-migrate)进行下载。
- en: Using a CDN
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 CDN
- en: 'We can equally use a CDN link to provide our jQuery library—the principal link
    is provided by **MaxCDN** for the jQuery team, with the current version available
    at [http://code.jquery.com](http://code.jquery.com). We can, of course, use CDN
    links from some alternative sources, if preferred—a reminder of these is as follows:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们同样可以使用 CDN 链接提供我们的 jQuery 库 —— jQuery 团队的主要链接由**MaxCDN**提供，当前版本可在[http://code.jquery.com](http://code.jquery.com)找到。当然，如果喜欢的话，我们也可以使用一些其他来源的
    CDN 链接 —— 这些的提醒如下：
- en: Google ([https://developers.google.com/speed/libraries/devguide#jquery](https://developers.google.com/speed/libraries/devguide#jquery))
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google ([https://developers.google.com/speed/libraries/devguide#jquery](https://developers.google.com/speed/libraries/devguide#jquery))
- en: Microsoft ([http://www.asp.net/ajaxlibrary/cdn.ashx#jQuery_Releases_on_the_CDN_0](http://www.asp.net/ajaxlibrary/cdn.ashx#jQuery_Releases_on_the_CDN_0))
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Microsoft ([http://www.asp.net/ajaxlibrary/cdn.ashx#jQuery_Releases_on_the_CDN_0](http://www.asp.net/ajaxlibrary/cdn.ashx#jQuery_Releases_on_the_CDN_0))
- en: CDNJS ([http://cdnjs.com/libraries/jquery/](http://cdnjs.com/libraries/jquery/))
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CDNJS ([http://cdnjs.com/libraries/jquery/](http://cdnjs.com/libraries/jquery/))
- en: jsDelivr (`http://www.jsdelivr.com/#%!jquery`)
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: jsDelivr (`http://www.jsdelivr.com/#%!jquery`)
- en: Don't forget though that if you need, we can always save a copy of the file
    provided on CDN locally and reference this instead. The jQuery CDN will always
    have the latest version, although it may take a couple of days for updates to
    appear via the other links.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 但是不要忘记，如果需要的话，我们始终可以将 CDN 提供的文件保存在本地，并引用它。jQuery CDN 总是会有最新版本，尽管可能需要几天时间才能通过其他链接更新。
- en: Using other sources to install jQuery
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用其他来源安装 jQuery
- en: Right. Okay, let's move on and develop some code! "What's next?" I hear you
    ask.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 好的。好的，让我们继续编写一些代码吧！“接下来做什么？”我听到你在问。
- en: Aha! If you thought downloading and installing jQuery from the main site was
    the only way to do this, then you are wrong! After all, this book is about mastering
    jQuery, so you didn't think I will only talk about something that I am sure you
    are already familiar with, right?
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 啊哈！如果你认为从主要站点下载并安装 jQuery 是唯一的方法，那么你就错了！毕竟，这本书是关于精通 jQuery 的，所以你不会认为我只会谈论你已经熟悉的内容，对吧？
- en: Yes, there are more options available to us to install jQuery than simply using
    the CDN or main download page. Let's begin by taking a look at using Node.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，我们有更多可供选择的选项来安装 jQuery，而不仅仅是使用 CDN 或主要下载页面。让我们开始看看如何使用 Node。
- en: Note
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Each demo is based on Windows, as this is the author's preferred platform; alternatives
    are given, where possible, for other platforms.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 每个演示都是基于 Windows 的，因为这是作者首选的平台；在可能的情况下，为其他平台提供了替代方案。
- en: Using NodeJS to install jQuery
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 NodeJS 安装 jQuery
- en: 'So far, we''ve seen how to download and reference jQuery, which is to use the
    download from the main jQuery site or via a CDN. The downside of this method is
    the manual work required to keep our versions of jQuery up to date! Instead, we
    can use a package manager to help manage our assets. Node.js is one such system.
    Let''s take a look at the steps that need to be performed in order to get jQuery
    installed:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经看到了如何下载和引用 jQuery，即使用主要的 jQuery 站点下载或通过 CDN 使用。这种方法的缺点是需要手动更新我们的 jQuery
    版本！相反，我们可以使用包管理器来帮助管理我们的资产。Node.js 就是这样一个系统。让我们来看一下安装 jQuery 需要执行的步骤：
- en: We first need to install Node.js—head over to [http://www.nodejs.org](http://www.nodejs.org)
    in order to download the package for your chosen platform; accept all the defaults
    when working through the wizard (for Mac and PC).
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们首先需要安装 Node.js —— 前往 [http://www.nodejs.org](http://www.nodejs.org) 以下载适用于你选择平台的软件包；在通过向导时接受所有默认设置（对于
    Mac 和 PC）。
- en: Next, fire up a Node command prompt and then change to your project folder.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，打开一个 Node 命令提示符，然后切换到你的项目文件夹。
- en: 'In the prompt, enter this command:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在提示符中，输入以下命令：
- en: '[PRE2]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Node will fetch and install jQuery—it displays a confirmation message when the
    installation is complete:![Using NodeJS to install jQuery](img/image00324.jpeg)
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Node 将会获取并安装 jQuery —— 当安装完成时，它会显示一条确认消息：![使用 NodeJS 安装 jQuery](img/image00324.jpeg)
- en: 'You can then reference jQuery by using this link:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，你可以通过这个链接引用 jQuery：
- en: '[PRE3]'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Node is now installed and ready for use—although we've installed it in a folder
    locally, in reality, we will most likely install it within a subfolder of our
    local web server. For example, if we're running WampServer, we can install it,
    then copy it into the `/wamp/www/js` folder, and reference it using `http://localhost/js/jquery.min.js`.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Node 现在已经安装并且准备就绪 —— 虽然我们将其安装在本地文件夹中，但实际上，我们很可能会将其安装在本地 Web 服务器的子文件夹中。例如，如果我们正在运行
    WampServer，我们可以安装它，然后将它复制到 `/wamp/www/js` 文件夹中，并使用 `http://localhost/js/jquery.min.js`
    引用它。
- en: Note
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you want to take a look at the source of the jQuery **Node Package Manager**
    (**NPM**) package, then check out [https://www.npmjs.org/package/jquery](https://www.npmjs.org/package/jquery).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想查看 jQuery **Node 包管理器** (**NPM**) 包的源代码，那么请查看 [https://www.npmjs.org/package/jquery](https://www.npmjs.org/package/jquery)。
- en: Using Node to install jQuery makes our work simpler, but at a cost. Node.js
    (and its package manager, NPM) is primarily aimed at installing and managing JavaScript
    components and expects packages to follow the **CommonJS** standard. The downside
    of this is that there is no scope to manage any of the other assets that are often
    used within websites, such as fonts, images, CSS files, or even HTML pages.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Node安装jQuery使我们的工作更简单，但代价是高昂的。Node.js（及其包管理器NPM）主要用于安装和管理JavaScript组件，并期望包遵循**CommonJS**标准。这样做的缺点是，没有范围来管理通常在网站中使用的任何其他资产，例如字体、图像、CSS文件甚至HTML页面。
- en: '"Why will this be an issue?," I hear you ask. Simple, why make life hard for
    ourselves when we can manage all of these assets automatically and still use Node?'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: “为什么会成为一个问题呢？”我听到你问。简单，当我们可以自动管理所有这些资产并仍然使用Node时，为什么要让生活变得困难呢？
- en: Installing jQuery using Bower
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Bower安装jQuery
- en: A relatively new addition to the library is the support for installation using
    Bower—based on Node, it's a package manager that takes care of the fetching and
    installing of packages from over the Internet. It is designed to be far more flexible
    about managing the handling of multiple types of assets (such as images, fonts,
    and CSS files) and does not interfere with how these components are used within
    a page (unlike Node).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图书馆的一个相对较新的增加是支持使用Bower进行安装——基于Node，它是一个包管理器，负责从互联网上获取和安装包。它设计得更加灵活，可以管理多种类型的资产（如图像、字体和CSS文件），并且不会干扰这些组件在页面中的使用方式（不像Node）。
- en: 'For the purpose of this demo, I will assume that you have already installed
    it from the previous section; if not, you will need to revisit it before continuing
    with the following steps:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示目的，我假设您已经从前一节安装了它；如果没有，请在继续以下步骤之前重新查看它：
- en: 'Bring up the Node command prompt, change to the drive where you want to install
    jQuery, and enter this command:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Node命令提示符，切换到您想要安装jQuery的驱动器，并输入此命令：
- en: '[PRE4]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This will download and install the script, displaying the confirmation of the
    version installed when it has completed, as shown in the following screenshot:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这将下载并安装脚本，在完成时显示已安装版本的确认，如下面的屏幕截图所示：
- en: '![Installing jQuery using Bower](img/image00325.jpeg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![使用Bower安装jQuery](img/image00325.jpeg)'
- en: 'The library is installed in the `bower_components` folder on your PC. It will
    look similar to this example, where I''ve navigated to the `jquery` subfolder
    underneath:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 该库安装在您PC上的`bower_components`文件夹中。它看起来类似于这个例子，我已经导航到了`jquery`子文件夹下面：
- en: '![Installing jQuery using Bower](img/image00326.jpeg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![使用Bower安装jQuery](img/image00326.jpeg)'
- en: 'By default, Bower will install jQuery in its `bower_components` folder. Within
    `bower_components/jquery/dist/`, we will find an uncompressed version, compressed
    release, and source map file. We can then reference jQuery in our script using
    this line:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Bower将jQuery安装在其`bower_components`文件夹中。在`bower_components/jquery/dist/`中，我们会找到一个未压缩的版本、压缩的发布版本和源映射文件。然后，我们可以使用以下行引用jQuery在我们的脚本中：
- en: '[PRE5]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'We can take this further though. If we don''t want to install the extra files
    that come with a Bower installation by default, we can simply enter this in a
    command prompt instead to just install the minified version 2.1 of jQuery:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，我们可以进一步进行。如果我们不想安装Bower默认情况下附带的额外文件，我们可以在命令提示符中简单地输入以下内容，仅安装jQuery的压缩版本2.1：
- en: '[PRE6]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Now, we can be really clever at this point; as Bower uses Node''s JSON files
    to control what should be installed, we can use this to be really selective and
    set Bower to install additional components at the same time. Let''s take a look
    and see how this will work—in the following example, we''ll use Bower to install
    jQuery 2.1 and 1.10 (the latter to provide support for IE6-8):'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以在这一点上真正聪明了；因为Bower使用Node的JSON文件来控制应安装的内容，我们可以利用这一点进行选择，并设置Bower同时安装其他组件。让我们来看看这将如何工作——在以下示例中，我们将使用Bower来安装jQuery
    2.1和1.10（后者为IE6-8提供支持）：
- en: 'In the Node command prompt, enter the following command:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Node命令提示符中，输入以下命令：
- en: '[PRE7]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This will prompt you for answers to a series of questions, at which point you
    can either fill out information or press *Enter* to accept the defaults.
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将提示您回答一系列问题，此时您可以填写信息或按*Enter*接受默认值。
- en: 'Look in the project folder; you should find a `bower.json` file within. Open
    it in your favorite text editor and then alter the code as shown here:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看项目文件夹；您应该在其中找到一个`bower.json`文件。在您喜欢的文本编辑器中打开它，然后按照此处显示的代码进行更改：
- en: '[PRE8]'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: At this point, you have a `bower.json` file that is ready for use. Bower is
    built on top of Git, so in order to install jQuery using your file, you will normally
    need to publish it to the Bower repository.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，您有一个准备好供使用的 `bower.json` 文件。Bower 建立在 Git 之上，所以为了使用您的文件安装 jQuery，通常需要将其发布到
    Bower 存储库中。
- en: 'Instead, you can install an additional Bower package, which will allow you
    to install your custom package without the need to publish it to the Bower repository:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，您可以安装一个额外的 Bower 包，这样您就可以安装您的自定义包而无需将其发布到 Bower 存储库中：
- en: 'In the Node command prompt window, enter the following at the prompt:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Node 命令提示符窗口中，在提示符处输入以下内容
- en: '[PRE9]'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'When the installation is complete, change to your project folder and then enter
    this command line:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，切换到你的项目文件夹，然后输入以下命令行：
- en: '[PRE10]'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The `bower-installer` command will now download and install both the versions
    of jQuery, as shown here:![Installing jQuery using Bower](img/image00327.jpeg)
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`bower-installer` 命令现在将下载并安装 jQuery 的两个版本，如下所示：![使用 Bower 安装 jQuery](img/image00327.jpeg)'
- en: At this stage, you now have jQuery installed using Bower. You're free to upgrade
    or remove jQuery using the normal Bower process at some point in the future.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，您已经使用 Bower 安装了 jQuery。在未来的某个时候，您可以自由升级或移除 jQuery，使用正常的 Bower 过程。
- en: Note
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you want to learn more about how to use Bower, there are plenty of references
    online; [https://www.openshift.com/blogs/day-1-bower-manage-your-client-side-dependencies](https://www.openshift.com/blogs/day-1-bower-manage-your-client-side-dependencies)
    is a good example of a tutorial that will help you get accustomed to using Bower.
    In addition, there is a useful article that discusses both Bower and Node, available
    at [http://tech.pro/tutorial/1190/package-managers-an-introductory-guide-for-the-uninitiated-front-end-developer](http://tech.pro/tutorial/1190/package-managers-an-introductory-guide-for-the-uninitiated-front-end-developer).
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想了解更多关于如何使用 Bower 的信息，可以在网上找到大量参考资料；[https://www.openshift.com/blogs/day-1-bower-manage-your-client-side-dependencies](https://www.openshift.com/blogs/day-1-bower-manage-your-client-side-dependencies)
    是一个帮助您熟悉使用 Bower 的好例子。此外，还有一篇有用的文章讨论了 Bower 和 Node，可以在 [http://tech.pro/tutorial/1190/package-managers-an-introductory-guide-for-the-uninitiated-front-end-developer](http://tech.pro/tutorial/1190/package-managers-an-introductory-guide-for-the-uninitiated-front-end-developer)
    找到。
- en: Bower isn't the only way to install jQuery though—while we can use it to install
    multiple versions of jQuery, for example, we're still limited to installing the
    entire jQuery library.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，安装 jQuery 的方式不止有 Bower 一种——例如，我们可以使用它来安装多个版本的 jQuery，但仍然受限于安装整个 jQuery 库。
- en: We can improve on this by referencing only the elements we need within the library.
    Thanks to some extensive work undertaken by the jQuery Core team, we can use the
    **Asynchronous Module Definition** (**AMD**) approach to reference only those
    modules that are needed within our website or online application.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过仅引用库中所需的元素来改进这一点。感谢 jQuery 核心团队进行的大量工作，我们可以使用**异步模块定义**（**AMD**）方法来仅引用我们网站或在线应用程序中所需的模块。
- en: Using the AMD approach to load jQuery
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 AMD 方法加载 jQuery。
- en: In most instances, when using jQuery, developers are likely to simply include
    a reference to the main library in their code. There is nothing wrong with it
    per se, but it loads a lot of extra code that is surplus to our requirements.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，当使用 jQuery 时，开发人员可能只会在其代码中包含对主要库的引用。这本身没有错，但它加载了很多我们不需要的额外代码。
- en: A more efficient method, although one that takes a little effort in getting
    used to, is to use the AMD approach. In a nutshell, the jQuery team has made the
    library more modular; this allows you to use a loader such as require.js to load
    individual modules when needed.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 一种更高效的方法，尽管需要一些时间来适应，是使用 AMD 方法。简而言之，jQuery 团队使库更加模块化；这使您可以使用诸如 require.js 的加载器在需要时加载单个模块。
- en: It's not suitable for every approach, particularly if you are a heavy user of
    different parts of the library. However, for those instances where you only need
    a limited number of modules, then this is a perfect route to take. Let's work
    through a simple example to see what it looks like in practice.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每种方法并不都适用，特别是如果您是库的不同部分的重度用户。但是，对于您仅需要有限数量的模块的情况，则是一个完美的选择。让我们通过一个简单的示例来看看实际情况。
- en: Note
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Before we start, we need one additional item—the code uses the Fira Sans regular
    custom font, which is available from Font Squirrel at [http://www.fontsquirrel.com/fonts/fira-sans](http://www.fontsquirrel.com/fonts/fira-sans).
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始之前，我们需要一个额外的项目-代码使用Fira Sans常规自定义字体，该字体可以从Font Squirrel获取[http://www.fontsquirrel.com/fonts/fira-sans](http://www.fontsquirrel.com/fonts/fira-sans)。
- en: 'Let''s make a start using the following steps:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从以下步骤开始：
- en: The Fira Sans font doesn't come with a web format by default, so we need to
    convert the font to use the web font format. Go ahead and upload the `FiraSans-Regular.otf`
    file to Font Squirrel's web font generator at [http://www.fontsquirrel.com/tools/webfont-generator](http://www.fontsquirrel.com/tools/webfont-generator).
    When prompted, save the converted file to your project folder in a subfolder called
    `fonts`.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Fira Sans字体默认不带网络格式，因此我们需要将字体转换为网络字体格式。请上传`FiraSans-Regular.otf`文件到Font Squirrel的网络字体生成器[http://www.fontsquirrel.com/tools/webfont-generator](http://www.fontsquirrel.com/tools/webfont-generator)。当提示时，将转换后的文件保存到项目文件夹中的名为`fonts`的子文件夹中。
- en: We need to install jQuery and RequireJS into our project folder, so fire up
    a Node.js command prompt and change to the project folder.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要将jQuery和RequireJS安装到我们的项目文件夹中，所以打开一个Node.js命令提示符并切换到项目文件夹。
- en: 'Next, enter these commands one by one, pressing *Enter* after each:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，逐一输入以下命令，并在每个命令后按*Enter*：
- en: '[PRE11]'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: We need to extract a copy of the `amd.html` and `amd.css` files from the code
    download link that accompanies this book—it contains some simple markup along
    with a link to `require.js`; the `amd.css` file contains some basic styling that
    we will use in our demo.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要从附带本书的代码下载链接中提取`amd.html`和`amd.css`文件的副本-它包含一些简单的标记以及一个到`require.js`的链接；`amd.css`文件包含我们将在演示中使用的一些基本样式。
- en: 'We now need to add in this code block, immediately below the link for `require.js`—this
    handles the calls to jQuery and RequireJS, where we''re calling in both jQuery
    and Sizzle, the selector engine for jQuery:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要立即在`require.js`的链接下添加这个代码块-这处理了对jQuery和RequireJS的调用，我们同时调用了jQuery和Sizzle，jQuery的选择器引擎：
- en: '[PRE12]'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now that jQuery has been defined, we need to call in the relevant modules.
    In a new file, go ahead and add the following code, saving it as `app.js` in a
    subfolder marked `js` within our project folder:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在jQuery已被定义，我们需要调用相关模块。在一个新文件中，继续添加以下代码，并将其保存为`app.js`，保存到我们项目文件夹内的一个名为`js`的子文件夹中：
- en: '[PRE13]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Note
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: We used `app.js` as the filename to tie in with the `require(["js/app"]);` reference
    in the code.
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们使用`app.js`作为文件名，以与代码中的`require(["js/app"]);`引用相匹配。
- en: If all went well, when previewing the results of our work in a browser, we'll
    see this message:![Using the AMD approach to load jQuery](img/image00328.jpeg)
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果一切顺利，在浏览器中预览我们工作的结果时，我们将看到此消息：![使用AMD方法加载jQuery](img/image00328.jpeg)
- en: Although we've only worked with a simple example here, it's enough to demonstrate
    how easy it is to only call those modules we need to use in our code rather than
    call the entire jQuery library. True, we still have to provide a link to the library,
    but this is only to tell our code where to find it; our module code weighs in
    at 29 KB (10 KB when gzipped), against 242 KB for the uncompressed version of
    the full library!
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们只在这里使用了一个简单的例子，但已足以演示仅调用我们代码中需要使用的模块比调用整个jQuery库要容易。的确，我们仍然必须提供一个指向库的链接，但这只是告诉我们的代码在哪里找到它；我们的模块代码重达29
    KB（在gzip后为10 KB），而完整库的未压缩版本为242 KB！
- en: Note
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: There is a completed version of our code available in the code download link
    that accompanies this book—look for and run the `amd-finished.html` file to view
    the results.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的代码已在附带本书的代码下载链接中提供了完整版本的代码，找到并运行`amd-finished.html`文件以查看结果。
- en: Now, there may be instances where simply referencing modules using this method
    isn't the right approach; this may apply if you need to reference lots of different
    modules regularly.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，可能会有一些情况下，仅使用这种方法引用模块并不是正确的方法；如果您需要经常引用许多不同的模块，这可能适用。
- en: A better alternative is to build a custom version of the jQuery library that
    only contains the modules that we need to use and the rest are removed during
    build. It's a little more involved but worth the effort—let's take a look at what
    is involved in the process.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 更好的选择是构建jQuery库的自定义版本，该版本仅包含我们需要使用的模块，其余模块在构建过程中被删除。这需要更多的工作，但是值得努力-让我们看看涉及的过程。
- en: Customizing the downloads of jQuery from Git
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定制从Git下载jQuery
- en: If we feel so inclined, we can really push the boat out and build a custom version
    of jQuery using the JavaScript task runner, Grunt. The process is relatively straightforward
    but involves a few steps; it will certainly help if you have some prior familiarity
    with Git!
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们有兴趣，我们可以真正地大展拳脚，使用 JavaScript 任务运行器 Grunt 构建一个自定义版本的 jQuery。这个过程相对直接，但涉及一些步骤；如果你之前对
    Git 有一些了解，那肯定会有所帮助！
- en: Note
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The demo assumes that you have already installed Node.js—if you haven't, then
    you will need to do this first before continuing with the exercise.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 该演示假定您已经安装了 Node.js——如果尚未安装，请在继续练习之前先执行此操作。
- en: 'Okay, let''s make a start by performing the following steps:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，让我们开始执行以下步骤：
- en: 'You first need to install Grunt if it isn''t already present on your system—bring
    up the Node.js command prompt and enter this command:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果系统中尚未安装 Grunt，首先需要安装 Grunt——打开 Node.js 命令提示符并输入以下命令：
- en: '[PRE14]'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Next, install Git—for this, browse to [http://msysgit.github.io/](http://msysgit.github.io/)
    in order to download the package.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，安装 Git——为此，请浏览[http://msysgit.github.io/](http://msysgit.github.io/)以下载该软件包。
- en: Double-click on the setup file to launch the wizard, accepting all the defaults
    is sufficient for our needs.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击安装文件启动向导，接受所有默认设置就足够满足我们的需求。
- en: Note
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you want more information on how to install Git, head over and take a look
    at [https://github.com/msysgit/msysgit/wiki/InstallMSysGit](https://github.com/msysgit/msysgit/wiki/InstallMSysGit)
    for more details.
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你想了解更多关于如何安装 Git 的信息，请前往[https://github.com/msysgit/msysgit/wiki/InstallMSysGit](https://github.com/msysgit/msysgit/wiki/InstallMSysGit)了解更多详情。
- en: 'Once Git is installed, change to the `jquery` folder from within the command
    prompt and enter this command to download and install the dependencies needed
    to build jQuery:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装了 Git 后，从命令提示符中切换到 `jquery` 文件夹，并输入以下命令下载并安装构建 jQuery 所需的依赖项：
- en: '[PRE15]'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The final stage of the build process is to build the library into the file
    we all know and love; from the same command prompt, enter this command:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '构建过程的最后阶段是将库构建到我们所熟悉和喜爱的文件中；从同一个命令提示符中，输入以下命令： '
- en: '[PRE16]'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Browse to the `jquery` folder—within this will be a folder called `dist`, which
    contains our custom build of jQuery, ready for use, as shown in the following
    screenshot:![Customizing the downloads of jQuery from Git](img/image00329.jpeg)
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览至 `jquery` 文件夹——其中将有一个名为 `dist` 的文件夹，其中包含我们的自定义 jQuery 构建版本，准备就绪，如下面的截图所示：![从
    Git 定制 jQuery 的下载](img/image00329.jpeg)
- en: Removing redundant modules
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 移除冗余模块
- en: If there are modules within the library that we don't need, we can run a custom
    build. We can set the Grunt task to remove these when building the library, leaving
    in those that are needed for our project.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 如果库中有我们不需要的模块，我们可以运行自定义构建。我们可以设置 Grunt 任务，在构建库时移除这些模块，保留我们项目中需要的模块。
- en: Note
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For a complete list of all the modules that we can exclude, see [https://github.com/jquery/jquery#modules](https://github.com/jquery/jquery#modules).
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看我们可以排除的所有模块的完整列表，请参阅[https://github.com/jquery/jquery#modules](https://github.com/jquery/jquery#modules)。
- en: 'For example, to remove AJAX support from our build, we can run this command
    in place of step 5, as shown previously:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要从我们的构建中移除 AJAX 支持，我们可以在第 5 步运行以下命令，如前所示：
- en: '[PRE17]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'This results in a file saving on the original raw version of 30 KB as shown
    in the following screenshot:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 这将导致文件在原始未经处理的版本上节省 30 KB，如下图所示：
- en: '![Removing redundant modules](img/image00330.jpeg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![移除冗余模块](img/image00330.jpeg)'
- en: The JavaScript and map files can now be incorporated into our projects in the
    usual way.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript 和映射文件现在可以像往常一样并入我们的项目中。
- en: Note
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For a detailed tutorial on the build process, this article by Dan Wellman is
    worth a read ([https://www.packtpub.com/books/content/building-custom-version-jquery](https://www.packtpub.com/books/content/building-custom-version-jquery)).
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 要详细了解构建过程，请阅读 Dan Wellman 撰写的这篇文章（[https://www.packtpub.com/books/content/building-custom-version-jquery](https://www.packtpub.com/books/content/building-custom-version-jquery)）。
- en: Using a GUI as an alternative
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 GUI 作为替代方案
- en: There is an online GUI available, which performs much the same tasks, without
    the need to install Git or Grunt. It's available at [http://projects.jga.me/jquery-builder/](http://projects.jga.me/jquery-builder/),
    although it is worth noting that it hasn't been updated for a while!
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个在线 GUI 可用，执行几乎相同的任务，而无需安装 Git 或 Grunt。它可在[http://projects.jga.me/jquery-builder/](http://projects.jga.me/jquery-builder/)找到，尽管值得注意的是，它已经有一段时间没有更新了！
- en: Okay, so we have jQuery installed; let's take a look at one more useful function
    that will help in the event of debugging errors in our code. Support for source
    maps has been made available within jQuery since version 1.9\. Let's take a look
    at how they work and see a simple example in action.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，所以我们已经安装了 jQuery；让我们再看看另一个有用的函数，它将在调试代码中出现错误时帮助我们。自 jQuery 1.9 版本以来，已经提供了对源映射的支持。让我们看看它们是如何工作的，并看一个简单的示例。
- en: Adding source map support
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加源映射支持
- en: Imagine a scenario, if you will, where you've created a killer site, which is
    running well, until you start getting complaints about problems with some of the
    jQuery-based functionality that is used on the site. Sounds familiar?
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 请想象一种情景，假如你创建了一个非常棒的网站，在运行良好，直到你开始收到关于网站上某些基于 jQuery 的功能出现问题的投诉。听起来耳熟吗？
- en: Using an uncompressed version of jQuery on a production site is not an option;
    instead we can use source maps. Simply put, these map a compressed version of
    jQuery against the relevant line in the original source.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在生产网站上使用未压缩版本的 jQuery 是不可取的选择；相反，我们可以使用源映射。简单来说，这些映射了 jQuery 的压缩版本与原始源代码中的相关行。
- en: Historically, source maps have given developers a lot of heartache when implementing,
    to the extent that the jQuery Team had to revert to disabling the automatic use
    of maps!
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 从历史上看，当实现源映射时，开发人员曾经遇到过很多麻烦，以至于 jQuery 团队不得不禁用自动使用映射！
- en: Tip
  id: totrans-153
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: For best effects, it is recommended that you use a local web server, such as
    WAMP (PC) or MAMP (Mac), to view this demo and that you use Chrome as your browser.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 为了达到最佳效果，建议您使用本地 Web 服务器，例如 WAMP（PC）或 MAMP（Mac），查看此演示，并使用 Chrome 作为您的浏览器。
- en: 'Source maps are not difficult to implement; let''s run through how you can
    implement them:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 实现源映射并不困难；让我们来看看如何实现它们：
- en: From the code download link that accompanies this book, extract a copy of the
    `sourcemap` folder and save it to your project area locally.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从本书附带的代码下载链接中提取一个 `sourcemap` 文件夹的副本，并将其保存到本地项目区域。
- en: Press *Ctrl* + *Shift* + *I* to bring up the **Developer Tools** in Chrome.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下 *Ctrl* + *Shift* + *I* 在 Chrome 中打开 **开发者工具**。
- en: Click on **Sources**, then double-click on the `sourcemap.html` file—in the
    code window, and finally click on **17**, as shown in the following screenshot:![Adding
    source map support](img/image00331.jpeg)
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **Sources**，然后双击 `sourcemap.html` 文件—在代码窗口中，最后点击 **17**，如下面的截图所示：![添加源映射支持](img/image00331.jpeg)
- en: Now, run the demo in Chrome—we will see it paused; revert back to the developer
    toolbar where line **17** is highlighted. The relevant calls to the jQuery library
    are shown on the right-hand side of the screen:![Adding source map support](img/image00332.jpeg)
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在 Chrome 中运行演示—我们将看到它暂停；回到开发者工具栏，其中第 **17** 行被突出显示。屏幕右侧显示了对 jQuery 库的相关调用：![添加源映射支持](img/image00332.jpeg)
- en: If we double-click on the `n.event.dispatch` entry on the right, Chrome refreshes
    the toolbar and displays the original source line (highlighted) from the jQuery
    library, as shown here:![Adding source map support](img/image00333.jpeg)
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们在右侧双击 `n.event.dispatch` 条目，Chrome 将刷新工具栏并显示来自 jQuery 库的原始源代码行（突出显示），如下所示：![添加源映射支持](img/image00333.jpeg)
- en: It is well worth spending the time to get to know source maps—all the latest
    browsers support it, including IE11\. Even though we've only used a simple example
    here, it doesn't matter as the principle is exactly the same, no matter how much
    code is used in the site.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 投入时间去了解源映射是非常值得的—所有最新版本的浏览器都支持它，包括 IE11。尽管我们在这里只使用了一个简单的示例，但原则上完全相同，无论网站使用了多少代码。
- en: Note
  id: totrans-162
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For a more in-depth tutorial that covers all the browsers, it is worth heading
    over to [http://blogs.msdn.com/b/davrous/archive/2014/08/22/enhance-your-javascript-debugging-life-thanks-to-the-source-map-support-available-in-ie11-chrome-opera-amp-firefox.aspx](http://blogs.msdn.com/b/davrous/archive/2014/08/22/enhance-your-javascript-debugging-life-thanks-to-the-source-map-support-available-in-ie11-chrome-opera-amp-firefox.aspx)—it
    is worth a read!
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一个更深入的涵盖所有浏览器的教程，值得访问 [http://blogs.msdn.com/b/davrous/archive/2014/08/22/enhance-your-javascript-debugging-life-thanks-to-the-source-map-support-available-in-ie11-chrome-opera-amp-firefox.aspx](http://blogs.msdn.com/b/davrous/archive/2014/08/22/enhance-your-javascript-debugging-life-thanks-to-the-source-map-support-available-in-ie11-chrome-opera-amp-firefox.aspx)—值得一读！
- en: Adding support for source maps
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加源映射支持
- en: 'In the previous section, where we''ve just previewed the source map, source
    map support has already been added to the library. It is worth noting though that
    source maps are not included with the current versions of jQuery by default. If
    you need to download a more recent version or add support for the first time,
    then follow these steps:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一节中，我们刚刚预览了源映射，源映射支持已经添加到了库中。值得注意的是，当前版本的 jQuery 默认情况下不包含源映射。如果你需要下载更新版本或者首次添加支持，请按照以下步骤操作：
- en: Source maps can be downloaded from the main site using `http://code.jquery.com/jquery-X.X.X.min.map`,
    where `X` represents the version number of jQuery being used.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 源映射可以从主站点使用 `http://code.jquery.com/jquery-X.X.X.min.map` 下载，其中 `X` 表示正在使用的
    jQuery 版本号。
- en: 'Open a copy of the minified version of the library and then add this line at
    the end of the file:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开压缩版本的库的副本，然后在文件末尾添加这一行：
- en: '[PRE18]'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Save it and then store it in the JavaScript folder of your project. Make sure
    you have copies of both the compressed and uncompressed versions of the library
    within the same folder.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存并将其存储在项目的 JavaScript 文件夹中。确保在同一个文件夹中有压缩和未压缩版本的库的副本。
- en: 'Let''s move on and look at one more critical part of loading jQuery: if, for
    some unknown reason, jQuery becomes completely unavailable, then we can add a
    fallback position to our site that allows graceful degradation. It''s a small
    but crucial part of any site and presents a better user experience than your site
    simply falling over!'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续并看看加载 jQuery 的另一个关键部分：如果由于某种未知原因，jQuery 完全不可用，那么我们可以为我们的站点添加一个后备位置，允许优雅地降级。这是任何站点的一个小但至关重要的部分，并且比你的站点简单崩溃提供了更好的用户体验！
- en: Working with Modernizr as a fallback
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Modernizr 作为后备方案
- en: A best practice when working with jQuery is to ensure that a fallback is provided
    for the library, should the primary version not be available. (Yes, it's irritating
    when it happens, but it can happen!)
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 jQuery 时的最佳实践是确保为库提供后备，以防主要版本不可用。（是的，当它发生时很烦人，但它确实会发生！）
- en: Typically, we might use a little JavaScript, such as the following example,
    in the best practice suggestions. This would work perfectly well but doesn't provide
    a graceful fallback. Instead, we can use Modernizr to perform the check for us
    and provide a graceful degradation if all fails.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 通常情况下，我们可能会在最佳实践建议中使用一些 JavaScript，例如以下示例。这个方法完全有效，但不提供优雅的后备方案。相反，我们可以使用 Modernizr
    来执行检查并在所有失败时提供优雅的降级。
- en: Note
  id: totrans-174
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Modernizr is a feature detection library for HTML5/CSS3, which can be used to
    provide a standardized fallback mechanism in the event of a functionality not
    being available. You can learn more at [http://www.modernizr.com](http://www.modernizr.com).
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: Modernizr 是一个用于 HTML5/CSS3 的特性检测库，可以在功能不可用的情况下提供标准化的后备机制。你可以在 [http://www.modernizr.com](http://www.modernizr.com)
    了解更多信息。
- en: 'As an example, the code might look like this at the end of our website page.
    We first try to load jQuery using the CDN link, falling back to a local copy if
    that hasn''t worked or an alternative if both fail:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 举个例子，在我们网站页面的末尾，代码可能看起来像这样。我们首先尝试使用 CDN 链接加载 jQuery，如果没有成功，再退回到本地副本或者其他备用方案：
- en: '[PRE19]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: In this way, we can ensure that jQuery either loads locally or from the CDN
    link—if all else fails, then we can at least make a graceful exit.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种方式，我们可以确保 jQuery 要么从本地加载，要么从 CDN 链接加载 —— 如果一切都失败了，那么我们至少可以优雅地退出。
- en: Best practices for loading jQuery
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加载 jQuery 的最佳实践
- en: 'So far, we''ve examined several ways of loading jQuery into our pages, over
    and above the usual route of downloading the library locally or using a CDN link
    in our code. Now that we have it installed, it''s a good opportunity to cover
    some of the best practices we should try to incorporate into our pages when loading
    jQuery:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经探讨了几种加载 jQuery 到我们页面的方式，除了通常的本地下载库或者在代码中使用 CDN 链接。现在我们已经安装了它，这是一个很好的机会来介绍一些在加载
    jQuery 时应该尽量纳入我们页面的最佳实践：
- en: Always try to use a CDN to include jQuery on your production site. We can take
    advantage of the high availability and low latency offered by CDN services; the
    library may already be precached too, avoiding the need to download it again.
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 始终尝试使用 CDN 在生产站点上包含 jQuery。我们可以利用 CDN 服务提供的高可用性和低延迟；该库可能已经预缓存，避免了再次下载的需要。
- en: 'Try to implement a fallback on your locally hosted library of the same version.
    If CDN links become unavailable (and they are not 100 percent infallible), then
    the local version will kick in automatically, until the CDN link becomes available
    again:'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尝试在本地托管相同版本的库上实现一个备用。如果CDN链接不可用（它们不是100%无懈可击的），那么本地版本将自动启用，直到CDN链接再次可用：
- en: '[PRE20]'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Note that although this will work equally well as using Modernizr, it doesn't
    provide a graceful fallback if both the versions of jQuery should become unavailable.
    Although one hopes to never be in this position, at least we can use CSS to provide
    a graceful exit!
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请注意，虽然这同样适用于使用Modernizr，但如果jQuery的版本都不可用，它不提供优雅的备用。虽然人们希望永远不会出现这种情况，但至少我们可以使用CSS来提供优雅的退出！
- en: Use protocol-relative/protocol-independent URLs; the browser will automatically
    determine which protocol to use. If HTTPS is not available, then it will fall
    back to HTTP. If you look carefully at the code in the previous point, it shows
    a perfect example of a protocol-independent URL, with the call to jQuery from
    the main jQuery Core site.
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用协议相对/协议独立的URL；浏览器将自动确定使用哪种协议。如果HTTPS不可用，它将回退到HTTP。如果你仔细观察上一点的代码，它展示了协议独立URL的完美例子，通过从主jQuery
    Core网站调用jQuery。
- en: If possible, keep all your JavaScript and jQuery inclusions at the bottom of
    your page—scripts block the rendering of the rest of the page until they have
    been fully rendered.
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果可能的话，将所有的JavaScript和jQuery引用放在页面底部——脚本会阻塞页面的其余部分渲染，直到它们完全渲染完成。
- en: Use the jQuery 2.x branch, unless you need to support IE6-8; in this case, use
    jQuery 1.x instead—do not load multiple jQuery versions.
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用jQuery 2.x分支，除非你需要支持IE6-8；在这种情况下，使用jQuery 1.x——不要加载多个jQuery版本。
- en: If you load jQuery using a CDN link, always specify the complete version number
    you want to load, such as `jquery-1.11.1.min.js`.
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你使用CDN链接加载jQuery，始终指定你想要加载的完整版本号，比如`jquery-1.11.1.min.js`。
- en: If you are using other libraries, such as Prototype, MooTools, Zepto, and so
    on, that use the `$` sign as well, try not to use `$` to call jQuery functions
    and simply use jQuery instead. You can return the control of `$` back to the other
    library with a call to the `$.noConflict()` function.
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你正在使用其他库，比如Prototype、MooTools、Zepto等，它们也使用`$`符号，那么尽量不要用`$`来调用jQuery函数，而是简单地使用jQuery。你可以通过调用`$.noConflict()`函数将`$`的控制权交还给其他库。
- en: For advanced browser feature detection, use Modernizr.
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于高级浏览器功能检测，使用Modernizr。
- en: It is worth noting that there may be instances where it isn't always possible
    to follow best practices; circumstances may dictate that we need to make allowances
    for requirements, where best practices can't be used. However, this should be
    kept to a minimum where possible; one might argue that there are flaws in our
    design if most of the code doesn't follow best practices!
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，可能有一些情况并不总是能够遵循最佳实践；情况可能需要我们对需求做出让步，不能使用最佳实践。然而，尽量将这种情况降至最低，其中一个论点是，如果大部分代码都不遵循最佳实践，那么我们的设计可能存在缺陷！
- en: Summary
  id: totrans-192
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: If you thought that the only methods to include jQuery were via a manual download
    or using a CDN link, then hopefully this chapter has opened your eyes to some
    alternatives—let's take a moment to recap what we have learned.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你以为只有手动下载或使用CDN链接是包含jQuery的唯一方法，那么希望本章打开了你的眼界，让我们花点时间回顾一下我们学到了什么。
- en: We kicked off with a customary look at how most developers are likely to include
    jQuery before quickly moving on to look at other sources.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 我们开始时习惯性地看了大多数开发者可能在快速移动到其他来源之前快速地加载jQuery的方式。
- en: We started with a look at how to use Node, before turning our attention to using
    the Bower package manager. Next, we had a look at how we can reference individual
    modules within jQuery using the AMD approach. We then moved on and turned our
    attention to creating custom builds of the library using Git. We then covered
    how we can use source maps to debug our code, with a look at enabling support
    for them within Google's Chrome browser.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从如何使用Node开始，然后转向使用Bower包管理器。接下来，我们看了我们如何可以使用AMD方法引用jQuery中的个别模块。然后，我们转移到并把注意力转向使用Git创建库的自定义版本。然后我们涵盖了如何使用源映射调试我们的代码，看看如何在Google的Chrome浏览器中启用对它们的支持。
- en: To round out our journey of loading jQuery, we saw what might happen if we can't
    load jQuery at all and how we can get around this, by using Modernizr to allow
    our pages to degrade gracefully. We then finished the chapter with some of the
    best practices that we can follow when referencing jQuery.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成加载 jQuery 的旅程时，我们看到如果完全无法加载 jQuery 会发生什么，并且如何通过使用 Modernizr 来优雅地处理这个问题。然后，我们在章节结束时介绍了一些在引用
    jQuery 时可以遵循的最佳实践。
- en: In the next chapter, we'll kick things into a gear by taking a look at how we
    can customize jQuery. This can be done by replacing or modifying a function or
    applying a patch during runtime; are you ready to get stuck in?
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将通过了解如何定制 jQuery 来加速进展。这可以通过在运行时替换或修改函数，或者应用补丁来实现；你准备好开始了吗？
