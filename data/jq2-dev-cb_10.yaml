- en: Chapter 10. Working with jQuery Mobile
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章。使用jQuery Mobile
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Creating a basic mobile website template
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建基本的移动网站模板
- en: Building a complete static website
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建完整的静态网站
- en: Building a dynamic mobile website
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建动态移动网站
- en: Implementing the quick call functionality
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现快速呼叫功能
- en: Implementing the send SMS functionality
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现发送短信功能
- en: Adding mobile-friendly lists
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加移动友好的列表
- en: Using touch-oriented events
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用面向触摸的事件
- en: Creating mobile-compatible forms
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建移动兼容表单
- en: Building a complete registration and login system
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建完整的注册和登录系统
- en: Building a complete mobile web app
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建完整的移动Web应用程序
- en: Introduction
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: jQuery Mobile is a beautifully crafted framework built to make it easier to
    create mobile-friendly websites and applications. jQuery Mobile incorporates themeable
    UI elements tailored for the mobile experience and provides custom events targeting
    special events on touch screen devices.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery Mobile是一个精心设计的框架，旨在使创建移动友好的网站和应用程序更容易。jQuery Mobile结合了为移动体验量身定制的可主题化UI元素，并提供了针对触摸屏设备上特殊事件的自定义事件。
- en: This chapter provides an introduction to jQuery Mobile and insights into its
    capabilities. In this chapter, you will learn how to create a basic mobile website
    that utilizes common elements such as buttons and lists. You will then go on to
    learn about some of the mobile-specific features such as **Touch to Call**.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了jQuery Mobile并深入了解其功能。在本章中，您将学习如何创建一个利用常见元素（如按钮和列表）的基本移动网站。然后，您将继续学习一些移动特定功能，如**触摸呼叫**。
- en: Before you start this chapter, ensure you have downloaded the latest release
    of the jQuery Mobile framework from the jQuery website ([http://jquerymobile.com/download](http://jquerymobile.com/download)).
    Create a folder named `chapter10` where you will save all your recipe files for
    this chapter. Within this folder, create a folder named `jquery-mobile` and place
    the main jQuery Mobile JavaScript and CSS files in it, including the `images`
    folder, which will hold all the icon sprites referenced in the CSS.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始本章之前，请确保您已从jQuery网站([http://jquerymobile.com/download](http://jquerymobile.com/download))下载了最新版本的jQuery
    Mobile框架。创建一个名为`chapter10`的文件夹，用于保存本章的所有配方文件。在此文件夹中，创建一个名为`jquery-mobile`的文件夹，并将主要的jQuery
    Mobile JavaScript和CSS文件放入其中，包括`images`文件夹，其中包含CSS中引用的所有图标精灵。
- en: The version of jQuery Mobile used within this chapter is 1.3.2, but most recipes
    will work with newer releases.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本章使用的jQuery Mobile版本是1.3.2，但大多数配方也适用于更新版本。
- en: For some recipes in this chapter, you will require a web server running PHP
    and MySQL. This web server could be either a local development server or one hosted
    within the cloud. You will also need access to a MySQL admin interface such as
    PHPMyAdmin so you can run SQL scripts.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章中的一些配方，您将需要运行PHP和MySQL的Web服务器。该Web服务器可以是本地开发服务器，也可以是托管在云中的服务器。您还需要访问MySQL管理界面，如PHPMyAdmin，以便运行SQL脚本。
- en: Creating a basic mobile website template
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建基本的移动网站模板
- en: This recipe will show you what the basic layout for a simple jQuery Mobile web
    page looks like. You will also be able to use this HTML page as a template for
    future jQuery mobile projects.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方将展示一个简单的jQuery Mobile网页的基本布局是什么样的。您还将能够将此HTML页面用作未来jQuery移动项目的模板。
- en: Getting ready
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Within the `chapter10` folder that you created earlier, create `recipe-1.html`.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在您之前创建的`chapter10`文件夹中，创建`recipe-1.html`。
- en: How to do it…
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Insert the following HTML code into `recipe-1.html` to create a very basic
    jQuery Mobile single page website:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下HTML代码插入到`recipe-1.html`中，以创建一个非常基本的jQuery Mobile单页网站：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Ensure you update references to the jQuery libraries and CSS to reflect your
    downloaded files. Open `recipe-1.html` in a web browser and you will see how quickly
    you can create a basic mobile-friendly web page with jQuery Mobile.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 确保更新对jQuery库和CSS的引用，以反映您下载的文件。在Web浏览器中打开`recipe-1.html`，您将看到如何使用jQuery Mobile快速创建一个基本的移动友好网页。
- en: How it works…
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: At first glance, the template page doesn't look much different from a typical
    HTML web page. The HTML5 standardized document type is declared with `<!DOCTYPE
    html>` and the required CSS and JavaScript are included within the head of the
    document.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 乍一看，模板页面与典型的HTML网页并没有太大区别。文档中声明了HTML5标准化文档类型`<!DOCTYPE html>`，所需的CSS和JavaScript包含在文档的头部。
- en: What does differ is the viewport's `meta` tag, which is not always present in
    typical HTML pages. This tells the browser how it should set the page dimensions
    and zoom level. If these are not set, most mobile devices will use a virtual width,
    making the web page look zoomed out.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 与一般HTML页面不同的是，视口的`meta`标签，并不总是存在。它告诉浏览器如何设置页面的尺寸和缩放级别。如果这些没有被设置，大部分移动设备将使用虚拟宽度，使网页看上去缩小。
- en: Note
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The `data-` attribute is a new HTML5 implementation, allowing for custom element
    attributes while still providing valid markup. These `data-*` attributes allow
    you to store arbitrary information about a particular element, and jQuery Mobile
    utilizes this ability.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`data-`属性是HTML5的新实现，允许自定义元素属性，并仍提供有效的标记。这些`data-*`属性允许你存储关于特定元素的任意信息，而jQuery
    Mobile利用了这个能力。'
- en: With jQuery Mobile, you use the `data-role` attribute to indicate the purpose
    of elements. In the simple template we created in this recipe, we used the page,
    header, content, and footer roles to create the structure for a simple page. Each
    of these roles are self-explanatory, but they will also become clearer throughout
    this chapter.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在jQuery Mobile中，使用`data-role`属性来指示元素的作用。在这个配方中创建的简单模板中，我们使用了page、header、content和footer角色来创建简单页面的结构。这些角色都不言而喻，但在本章的过程中也会变得更加清晰。
- en: There's more…
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: As with all jQuery implementations, there is a wealth of documentation available
    ([http://jquerymobile.com](http://jquerymobile.com)) that all developers should
    utilize. To get the most out of jQuery Mobile, ensure you read the documentation.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 正如所有jQuery实现一样，提供了丰富的文档可供参考（[http://jquerymobile.com](http://jquerymobile.com)），所有开发者都应该加以利用。要充分利用jQuery
    Mobile，请确保阅读文档。
- en: See also
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: '*Building a complete static website*'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*创建一个完整的静态网站*'
- en: Building a complete static website
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个完整的静态网站
- en: This recipe will show you how to quickly create a simple static website using
    jQuery Mobile. Using the template created in the previous recipe, it only takes
    adding additional elements with the correct roles to create extra pages and the
    navigation between them.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方将向你展示如何快速使用jQuery Mobile创建一个简单的静态网站。在前一个配方中创建的模板中，只需要添加带有正确角色的附加元素，就能创建额外的页面和它们之间的导航。
- en: Getting ready
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Create `recipe-2.html` in the `chapter10` folder you created earlier and ensure
    you have your newly created jQuery Mobile template ready.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前创建的`chapter10`文件夹中创建`recipe-2.html`，并确保你已准备好你新创建的jQuery Mobile模板。
- en: How to do it…
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'To create a functional mobile website using jQuery Mobile, perform the following
    steps:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用jQuery Mobile创建功能性移动网站，请执行以下步骤：
- en: 'Copy the jQuery Mobile template you created earlier into `recipe-2.html` and
    remove everything within the `<body>` tags as shown in the following code snippet:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将之前创建的jQuery Mobile模板复制到`recipe-2.html`中，并删除`<body>`标签内的所有内容，如以下代码片段所示：
- en: '[PRE1]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Insert the following code in between the `<body>` tags to create the home page
    for the simple static website:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`<body>`标签之间插入以下代码，可创建简单静态网站的主页：
- en: '[PRE2]'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'To create an about page that is linked to the home page, add the following
    code after the home page declaration but still within the `<body>` tags:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建一个链接到主页的关于页面，请在主页声明后但仍在`<body>`标签内添加以下代码：
- en: '[PRE3]'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Repeat the previous step with the following code to add the final contact page:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复上一步，使用以下代码来添加最终的联系页面：
- en: '[PRE4]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Open `recipe-2.html` in a web browser and you will be presented with the mobile
    website, and you will be able to use the buttons on the home page to navigate
    to and from the about and contact pages.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在网页浏览器中打开`recipe-2.html`，你将看到移动网站，并且你可以使用主页上的按钮浏览到关于和联系页面之间。
- en: How it works…
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何运行的…
- en: 'In this recipe''s code, you will see the `data-role` attribute used many times
    to indicate the function of many of the HTML elements. To declare multiple pages,
    you simply re-use the basic page structure that was used within the template and
    change the contents as required. Consider the following example:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方的代码中，你会看到`data-role`属性被多次使用来指示许多HTML元素的功能。要声明多个页面，只需重复使用模板中使用的基本页面结构，并根据需要更改内容。考虑下面的例子：
- en: '[PRE5]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This is the basic structure for the about page used within this recipe. The
    main `div` element is indicated as a page using `data-role="page"`. To allow for
    navigation to this page, a unique ID is defined as `about` in the same way you
    would any HTML element (`id="about"`). There is the additional attribute of `data-title`
    on the page division that makes it possible to overwrite the content of the `<title>`
    tag in the document head so that the page title can be changed on a per-page basis.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这是用于本案例中的关于页面的基本结构。主`div`元素被指定为使用`data-role="page"`表示一个页面。为了允许导航到此页面，定义了一个唯一的ID，就像你会对任何HTML元素一样（`id="about"`）。页面分割线上还有`data-title`属性，使得可以覆盖文档头中的`<title>`标签的内容，这样就可以根据每页更改页面标题。
- en: 'You can use an anchor element to create an internal link to one of the pages
    created in this way, as shown in the following line of code:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用锚元素创建到此方式创建的页面之一的内部链接，就像下面的代码行所示：
- en: '[PRE6]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: When users click on the link, they will be presented with the page that has
    the unique ID `about`, indicated within the `href` attribute as `#about`. The
    default page transition will also be used to provide a smooth navigation effect.
    The `data-role="button"` attribute is used to style the element into a button
    and the `data-theme="a"` attribute specifies which theme to use for styling. Read
    the mentioned documentation to see what themes are available by default and also
    how to create your own.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户点击链接时，他们将看到带有唯一ID `about`的页面，该ID在`href`属性中表示为`#about`。默认页面转换也将被用来提供平滑的导航效果。`data-role="button"`属性用于将元素样式设置为按钮，而`data-theme="a"`属性指定了要使用的主题样式。阅读上述文件以查看默认可用的主题以及如何创建自己的主题。
- en: See also
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见也
- en: '*Creating a basic mobile website template*'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*创建基本移动网站模板*'
- en: '*Building a dynamic mobile website*'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*构建动态移动网站*'
- en: Building a dynamic mobile website
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建动态移动网站
- en: In the previous recipe, we created a basic website that would allow you to provide
    content to a user and update it manually relatively easy. In most situations,
    this would not be enough. Most websites today rely on some form of database to
    provide them with rich, new content on a regular basis, and it should be no different
    with mobile websites. This recipe will show you how to use PHP with jQuery Mobile
    to create dynamic pages with content served from a web server.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一个案例中，我们创建了一个基本网站，允许您为用户提供内容并相对容易地手动更新它。在大多数情况下，这是不够的。今天的大多数网站依赖某种形式的数据库，以便定期为它们提供丰富的、新的内容，移动网站也应该一样。本案例将向您展示如何使用PHP与jQuery
    Mobile创建动态页面，该页面的内容来自Web服务器。
- en: Getting ready
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'You are going to need to create the following directory structure in the web
    root of your web server. In the following figure, `www` is the web root; this
    may be different for you:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要在Web服务器的Web根目录中创建以下目录结构。在下面的图中，`www`是Web根目录；这可能对您来说是不同的：
- en: '![Getting ready](img/0896OS_10_01.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![准备工作](img/0896OS_10_01.jpg)'
- en: In the web root of your web server (`www`), create an `includes` folder and
    the files `index.html` and `categories.php`. Within the `includes` folder, create
    a subfolder named `jquery-mobile` and ensure all the jQuery Mobile library files
    have been copied into it. Also, within the `includes` folder, create `script.js`
    and add the jQuery library (`jquery.min.js`).
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在Web服务器的Web根目录（`www`）中，创建一个`includes`文件夹以及文件`index.html`和`categories.php`。在`includes`文件夹中，创建一个名为`jquery-mobile`的子文件夹，并确保所有jQuery
    Mobile库文件都已复制到其中。此外，在`includes`文件夹中，创建`script.js`并添加jQuery库（`jquery.min.js`）。
- en: How to do it…
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何实现…
- en: 'To create a dynamic mobile website using PHP, carefully perform the following
    steps:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 PHP 创建一个动态移动网站，请仔细执行以下步骤：
- en: Re-using the structure that was created as part of the template in the first
    recipe, add the following code to `index.html`. This will create a home page and
    an additional blank page with the ID of `categorypage`.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新使用作为第一个案例模板的结构，将以下代码添加到`index.html`。这将创建一个主页和一个ID为`categorypage`的额外空白页面。
- en: '[PRE7]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Add the following PHP code to `categories.php` to be able to provide content
    on request to the jQuery Mobile site:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下PHP代码到`categories.php`中，以能够根据jQuery Mobile站点上的请求提供内容：
- en: '[PRE8]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: To catch the user request for one of the dynamic pages, add the following jQuery
    code to `script.js`, which will listen for the `pagebeforechange` event. This
    allows us to intercept just before the user is sent to the category page.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了捕捉用户对动态页面之一的请求，将以下jQuery代码添加到`script.js`，它将监听`pagebeforechange`事件。这允许我们在用户发送到类别页面之前进行拦截。
- en: '[PRE9]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'To be able to generate the dynamic page, content from the PHP script is required.
    Add the following JavaScript function to the end of `script.js` to make an AJAX
    request to collect this data and generate the markup for the dynamic page:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了能够生成动态页面，需要从 PHP 脚本中获取内容。在`script.js`的末尾添加以下 JavaScript 函数，以便发起 AJAX 请求收集这些数据并生成动态页面的标记：
- en: '[PRE10]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Go to your newly created mobile website via your web browser (for example, `http://localhost/`)
    and you will be presented with the home page, which provides a button for three
    different categories. Click on one of these buttons to be taken to a new page
    with the content displayed served from the PHP script you have just created.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过网页浏览器（例如，`http://localhost/`）访问您新创建的移动网站，您将看到首页，其中提供了三个不同类别的按钮。单击其中一个按钮，将进入新页面，该页面显示的内容是从您刚刚创建的
    PHP 脚本提供的。
- en: How it works…
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: The HTML code that is used to create the mobile site in this recipe differs
    little from the previous static mobile site. The only difference is that there
    is only one additional page with no title or content. This is because the additional
    page will be re-used to create multiple pages dynamically, and its title and content
    will be set based on the user request.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在此配方中用于创建移动站点的 HTML 代码与之前的静态移动站点几乎没有区别。唯一的区别是只有一个附加页面，没有标题或内容。这是因为附加页面将被重复使用以动态创建多个页面，并且其标题和内容将根据用户请求设置。
- en: 'The HTML code within `index.html` creates the home page with three buttons
    labeled **Colours**, **Shapes**, and **Sounds**. Each of these buttons is a link
    to the same internal page with some additional information, as shown in the following
    line of code:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在`index.html`中的 HTML 代码创建了带有标签为**颜色**、**形状**和**声音**的三个按钮的首页。这些按钮中的每一个都是指向相同内部页面的链接，该页面带有一些额外信息，如以下代码行所示：
- en: '[PRE11]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Each of the buttons provide a different value for the `cat` variable representing
    the different category pages. When the user clicks on one of these pages, the
    default behavior is for jQuery Mobile to navigate the user to this internal page.
    As we are creating these internal pages dynamically, we need to intercept this
    behavior, collect the requested category content from a PHP script, and then generate
    the page. To do this, we bind to the `pagebeforechange` event as follows:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 每个按钮为`cat`变量提供不同的值，表示不同的类别页面。当用户单击其中一个页面时，默认行为是使 jQuery Mobile 将用户导航到此内部页面。由于我们正在动态创建这些内部页面，因此我们需要拦截此行为，从
    PHP 脚本中收集请求的类别内容，然后生成页面。为此，我们绑定到`pagebeforechange`事件，如下所示：
- en: '[PRE12]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'As we only want to intercept certain page requests, there are a few checks
    we perform before we ask for the dynamic content. We can get the request URL from
    the `data` object provided to the event handler function. We first check that
    the URL is a string as follows:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们只想拦截特定的页面请求，在我们请求动态内容之前，我们执行了一些检查。我们可以从提供给事件处理程序函数的`data`对象中获取请求 URL。我们首先检查
    URL 是否为字符串，如下所示：
- en: '[PRE13]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'If it is a string, it is parsed to a URL object as follows:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 如果是字符串，则按照以下方式解析为 URL 对象：
- en: '[PRE14]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Once the URL object has been created, it is possible to perform two final checks
    to see if the requested page is one of the category pages, as follows:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 创建了 URL 对象后，可以执行两个最终检查，以查看请求的页面是否属于类别页面，如下所示：
- en: '[PRE15]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Using the `search()` function, it is possible to search for the string `#categorypage`
    to check if it is the category page being requested, and then again to check that
    a `cat` variable has also been provided.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`search()`函数，可以搜索字符串`#categorypage`以检查是否正在请求类别页面，然后再次检查是否还提供了一个`cat`变量。
- en: If these checks pass, the `displayCategory()` function is called to collect
    and render the content for the dynamic page. `e.preventDefault()` is also used
    to stop jQuery Mobile from navigating the user to the requested page before it
    has been generated with the dynamic content.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这些检查通过，则调用`displayCategory()`函数来收集和呈现动态页面的内容。还使用了`e.preventDefault()`来阻止 jQuery
    Mobile 在生成具有动态内容之前将用户导航到请求的页面。
- en: 'At the top of the `displayCategory()` function, there are a series of variables
    declared as follows:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在`displayCategory()`函数的顶部，声明了一系列变量，如下所示：
- en: '[PRE16]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The first two take values from the request URL, the requested category, and
    the page ID (that is, `#categorypage`).
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 前两个从请求 URL 获取值，即请求的类别和页面 ID（即`#categorypage`）。
- en: The page ID is then used to select the page DOM element from `index.html` using
    the typical jQuery selector. Then, using the `page` element, it is possible to
    find and store the DOM elements for the page header and content, which we can
    manipulate later using standard jQuery.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，使用页面 ID 通过典型的 jQuery 选择器从 `index.html` 中选择页面 DOM 元素。接着，使用 `page` 元素，可以找到并存储页面标题和内容的
    DOM 元素，稍后可以使用标准的 jQuery 进行操作。
- en: An AJAX request using jQuery's `$.ajax()` function is then used to make a POST
    request to `categories.php`, specifying the value of `catName`, which was taken
    from the request page URL.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，使用 jQuery 的 `$.ajax()` 函数进行 AJAX 请求，向 `categories.php` 发起 POST 请求，指定了来自请求页面
    URL 的 `catName` 的值。
- en: This `categories.php` PHP script holds a multidimensional array that stores
    data for the three different categories. This PHP script takes the posted category
    and checks to see if there is a matching category within the `$categories` array
    using `isset()`. If there is, the `$response` array's data value is updated to
    include the data for the requested category. If there is no data for the requested
    category, the `$response` array's success value is set to `false` and an error
    message is provided.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 此 `categories.php` PHP 脚本保存一个多维数组，其中存储了三种不同类别的数据。此 PHP 脚本获取了提交的类别并使用 `isset()`
    检查 `$categories` 数组中是否存在匹配的类别。如果存在，则将 `$response` 数组的数据值更新为请求的类别的数据。如果没有请求的类别数据，则将
    `$response` 数组的成功值设置为 `false` 并提供错误消息。
- en: Finally, the PHP script sets the content type and charset before it encodes
    the `$response` array as JSON and outputs it.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，PHP 脚本在将 `$response` 数组编码为 JSON 并输出之前设置内容类型和字符集。
- en: The AJAX request made from the `displayCategory()` function will receive this
    JSON data and process it accordingly.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '`displayCategory()` 函数发起的 AJAX 请求将接收此 JSON 数据并相应处理。'
- en: 'By checking if `response.success` is true, it is possible to determine if there
    is some data to display for the requested category. If there is, the page''s title
    can be added along with the HTML code created for the content, as shown in the
    following code:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 通过检查 `response.success` 是否为真，可以确定是否有一些数据要显示给请求的类别。如果有，则可以添加页面的标题以及为内容创建的 HTML
    代码，如下所示：
- en: '[PRE17]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'To ensure that the URL reflects the page the user is viewing, the jQuery `data()`
    function is used to set the `url` attribute on the `categorypage` element as follows:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 为确保 URL 反映用户正在查看的页面，使用 jQuery 的 `data()` 函数设置 `categorypage` 元素的 `url` 属性如下：
- en: '[PRE18]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Finally, the `changePage()` function is called to navigate the user to the newly
    generated page, where they will be presented with the requested content served
    from the PHP script. The `changePage()` function will also insert an entry into
    the browser history to provide typical browser navigation behavior.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，调用 `changePage()` 函数将用户导航到新生成的页面，在那里，他们将看到从 PHP 脚本提供的请求内容。`changePage()`
    函数还会插入一个条目到浏览器历史中，以提供典型的浏览器导航行为。
- en: There's more…
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多信息…
- en: The PHP script in this recipe that provides the content to populate the additional
    category pages holds this content within a PHP array. This is just for demonstrative
    purposes and could easily be the content that is stored within a database accessible
    by the PHP script.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 此配方中的 PHP 脚本提供了填充附加类别页面的内容，并将此内容存储在 PHP 数组中。这仅供演示目的，可以轻松地是存储在由 PHP 脚本访问的数据库中的内容。
- en: See also
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: '*Building a complete static website*'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*构建完整的静态网站*'
- en: Implementing the quick call functionality
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实现快速呼叫功能
- en: HTML5 allows developers to tell the browser to launch an application to make
    a phone call in the same way you would do for an e-mail. This recipe will show
    you how to do this with a jQuery Mobile button so that when users click on this
    button, their default call application will open with a prepopulated telephone
    number.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5 允许开发人员告知浏览器启动应用程序以进行电话呼叫，方式与发邮件类似。本配方将向您展示如何使用 jQuery Mobile 按钮来实现此功能，以便用户点击此按钮时，他们的默认呼叫应用程序将打开，并预填充电话号码。
- en: Getting ready
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Within the `chapter10` folder, create `recipe-4.html` for use within this recipe.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `chapter10` 文件夹中，创建 `recipe-4.html` 以供本配方使用。
- en: How to do it…
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'To allow users to be able to click on a button to make a phone call without
    having to copy and paste a number into their call application, perform the following
    simple steps:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让用户能够点击按钮进行电话呼叫，而不必将号码复制粘贴到其通话应用程序中，执行以下简单步骤：
- en: 'Re-using the mobile website template, add the following HTML code into `recipe-4.html`:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下 HTML 代码添加到 `recipe-4.html` 中，以重复使用移动网站模板：
- en: '[PRE19]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Add a button into the `content` section of the home page with the `tel:` attribute
    that will launch the call application once pressed as follows:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在主页的 `content` 部分中添加一个具有 `tel:` 属性的按钮，一旦按下即会启动通话应用程序，如下所示：
- en: '[PRE20]'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Opening `recipe-4.html` in Google Chrome and pressing the **Call Me!** button
    will present you with an alert informing you that the website is requesting an
    external application to be opened. Opening the web page on your mobile browser
    will open your device's default call application, allowing you to make a call
    with the number specified on the button element.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Google Chrome 中打开 `recipe-4.html`，并点击 **Call Me!** 按钮，将弹出一个警告，提示该网站正在请求打开外部应用程序。在移动浏览器上打开该网页将会打开您设备的默认通话应用程序，允许您使用按钮元素上指定的号码进行通话。
- en: How it works…
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: 'For many years, the `mailto:` attribute has been available to allow websites
    to open the user''s default mail client. An example is shown in the following
    line of code:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，`mailto:` 属性一直可用于允许网站打开用户的默认邮件客户端。以下代码行显示了一个示例：
- en: '[PRE21]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: HTML5 allows some additional attributes that work in a similar way to allow
    for additional functionality. The `tel:` attribute is one of them. Browsers that
    support this attribute will open the default calling application installed on
    the device or computer when the user clicks on the link. Note that to open Skype,
    a popular VOIP application, you may need to use an alternative attribute called
    `callto:`.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5 允许一些额外的属性以类似的方式工作，以允许额外的功能。`tel:` 属性是其中之一。支持此属性的浏览器将在用户点击链接时打开设备或计算机上安装的默认通话应用程序。请注意，要打开
    Skype，一款流行的 VOIP 应用程序，您可能需要使用一个名为 `callto:` 的替代属性。
- en: See also
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '*Implementing the send SMS functionality*'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*实现发送短信功能*'
- en: Implementing the send SMS functionality
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实现发送短信功能
- en: The previous recipe covered making a call directly from your mobile website.
    Making it easy for the user to send an SMS is also a useful feature. This recipe
    will show you how to add a button that, when clicked, will open the default SMS
    client on the user's device.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 上一个配方介绍了如何直接从您的移动网站拨打电话。让用户轻松发送短信也是一个有用的功能。本配方将向您展示如何添加一个按钮，当点击时将在用户设备上打开默认的短信客户端。
- en: Getting ready
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Create `recipe-5.html` in the `chapter10` folder you created before starting
    this chapter.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始本章之前创建的 `chapter10` 文件夹中创建 `recipe-5.html`。
- en: How to do it…
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'It is easy to allow users to be able to quickly send an SMS message to you
    via your mobile website. Perform the following simple steps to learn how:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 允许用户通过您的移动网站快速发送短信消息非常容易。执行以下简单步骤来了解如何：
- en: 'Once more, using the jQuery Mobile template created in the first recipe of
    this chapter, create a simple mobile website within `recipe-5.html` using the
    following code:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再一次，使用本章第一个配方中创建的 jQuery Mobile 模板，在 `recipe-5.html` 中创建一个简单的移动网站，使用以下代码：
- en: '[PRE22]'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Add the following text and anchor element within the `content` section of the
    home page in `recipe-5.html`:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `recipe-5.html` 的主页的 `content` 部分中添加以下文本和锚元素：
- en: '[PRE23]'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Open `recipe-5.html` on a mobile device and click on the **SMS Me!** button.
    Your default SMS client will open with the recipient field already populated with
    the number specified in the HTML.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在移动设备上打开 `recipe-5.html`，并点击 **SMS Me!** 按钮。你的默认短信客户端将打开，接收者字段已经填充了 HTML 中指定的号码。
- en: How it works…
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: 'In addition to the new `tel:` attribute provided by HTML5, the `sms:` attribute
    is also available. This will tell compatible devices to open the default SMS client
    with the telephone number specified. An example is shown in the following line
    of code:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 HTML5 提供的新 `tel:` 属性外，还提供了 `sms:` 属性。这将告诉兼容的设备使用指定的电话号码打开默认的短信客户端。以下代码行显示了一个示例：
- en: '[PRE24]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: This anchor element also has the `data-role` attribute and the value of a button
    so that jQuery Mobile adds the appropriate styling for a simple button.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 此锚元素还具有 `data-role` 属性和一个按钮的值，以便 jQuery Mobile 为简单按钮添加适当的样式。
- en: There's more…
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'In addition to the telephone number, it is also possible to specify some text
    to be automatically added to the message body; change the anchor element as follows
    to add this functionality:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 除了电话号码外，还可以指定一些文本自动添加到消息正文中；将锚元素更改如下以添加此功能：
- en: '[PRE25]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: See also
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '*Implementing the quick call functionality*'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*实现快速通话功能*'
- en: Adding mobile-friendly lists
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加移动友好的列表
- en: There have been various recipes throughout this cookbook that utilize HTML lists
    to present data in a simple and effective way. jQuery Mobile allows developers
    to quickly add mobile-and touch-friendly lists to their jQuery Mobile website.
    This recipe provides you with multiple examples of the more common types of lists
    made available by jQuery Mobile. You can copy and re-use the code for these lists
    at your convenience.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在此食谱书中，有各种利用HTML列表以简单有效的方式呈现数据的食谱。jQuery Mobile允许开发人员快速将移动友好且易于触摸的列表添加到其jQuery
    Mobile网站中。此食谱为您提供了jQuery Mobile提供的更常见类型的列表的多个示例。您可以随时复制和重用这些列表的代码。
- en: Getting ready
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Within the `chapter10` folder you created earlier, create a single HTML file
    called `recipe-6.html`.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前创建的`chapter10`文件夹中，创建一个名为`recipe-6.html`的HTML文件。
- en: How to do it…
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'To understand how to add different types of lists that are mobile-friendly,
    perform the following steps:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解如何添加不同类型的移动友好列表，请执行以下步骤：
- en: 'Create a basic jQuery Mobile site by adding the following HTML to `recipe-6.html`:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过将以下HTML添加到`recipe-6.html`中，创建一个基本的jQuery Mobile网站：
- en: '[PRE26]'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'To create the most common list type—a basic linked list—add the following code
    in the `content` division element in `recipe-6.html`:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建最常见的列表类型 - 基本链接列表 - 在`recipe-6.html`的`content`部分元素中添加以下代码：
- en: '[PRE27]'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: To create a nested list, add the following HTML structure within the `content`
    division element. Make note of the comment within the HTML that, for this list
    to work correctly, you will need to serve `recipe-6.html` from a web server. The
    reason for this is given in the *How to do it...* section of this recipe.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建嵌套列表，请在`content`部分元素中添加以下HTML结构。请注意HTML中的注释，为了使此列表正确工作，您需要从Web服务器提供`recipe-6.html`。这样做的原因在本食谱的*如何做...*部分中给出。
- en: '[PRE28]'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'When displaying content within a list, there may be a need to allow the user
    to interact with each list item in multiple ways. jQuery Mobile allows the developer
    to easily add buttons alongside the list elements with icons to reinforce their
    functionality. Use the `data-split-icon` attribute to add this functionality to
    a list as shown in the following code:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当在列表中显示内容时，可能需要允许用户以多种方式与每个列表项进行交互。jQuery Mobile允许开发人员轻松地在列表元素旁边添加带有图标的按钮，以增强其功能性。使用`data-split-icon`属性将此功能添加到列表中，如下面的代码所示：
- en: '[PRE29]'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Long lists can become cumbersome to navigate. jQuery Mobile allows the developer
    to quickly add a filter option to any list, which will allow the user to look
    for the list items they require. To add a list with this functionality, use the
    following code:'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 长列表可能会变得难以导航。jQuery Mobile允许开发人员快速为任何列表添加过滤选项，使用户可以查找他们需要的列表项。要添加具有此功能的列表，请使用以下代码：
- en: '[PRE30]'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Opening `recipe-6.html` within a web browser will present you with a range of
    list examples, as shown in the following screenshot, that you can use at your
    convenience in future projects:![How to do it…](img/0896OS_10_02.jpg)
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Web浏览器中打开`recipe-6.html`将呈现一系列列表示例，如下面的屏幕截图所示，您可以在将来的项目中随时使用：![如何做…](img/0896OS_10_02.jpg)
- en: How it works…
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: Using the `data-role="listview"` attribute and value, it is possible to turn
    a basic HTML list into a mobile-friendly implementation. jQuery Mobile, as it
    does with buttons and other elements, will automatically add the styling.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`data-role="listview"`属性和值，可以将基本的HTML列表转换为移动友好的实现。jQuery Mobile会自动添加样式，就像按钮和其他元素一样。
- en: If you refer to the documentation ([http://jquerymobile.com/demos/1.2.1/docs/lists/docs-lists.html](http://jquerymobile.com/demos/1.2.1/docs/lists/docs-lists.html)),
    you will get a complete list of all of the available list types along with detailed
    examples.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您参考文档（[http://jquerymobile.com/demos/1.2.1/docs/lists/docs-lists.html](http://jquerymobile.com/demos/1.2.1/docs/lists/docs-lists.html)），您将获得所有可用列表类型的完整列表以及详细示例。
- en: 'The majority of the examples used in this recipe are simple and self-explanatory.
    The nested list part of the recipe has some additional functionality that may
    not be obvious. With most mobile devices, the screen space is very limited, especially
    in portrait mode. Because of this, it would not make sense to allow nested lists
    to act in their traditional way, which is to expand to the right with a different
    indentation, as illustrated in the following list:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 此食谱中使用的大多数示例都很简单且不言自明。食谱的嵌套列表部分具有一些额外的功能，可能不太明显。对于大多数移动设备，屏幕空间非常有限，特别是在纵向模式下。因此，不允许嵌套列表以传统方式展开（向右展开并具有不同的缩进），如下列表所示是没有意义的：
- en: Top Level Item 1
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 顶层项目 1
- en: Top Level Item 2
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 顶层项目 2
- en: Top Level Item 3 – With Sublevel
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 顶层项目 3 – 带有子级
- en: Second Level Item 1
  id: totrans-170
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二级项目 1
- en: Second Level Item 2
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二级项目 2
- en: To save space and provide a better user experience, when you add a nested list,
    jQuery Mobile will create an additional page with the sublist items within. When
    the user selects a list item that has a list within itself, they are taken to
    an additional page where the sublevel items are displayed.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 为了节省空间并提供更好的用户体验，当您添加嵌套列表时，jQuery Mobile 将创建一个附加页面，并在其中显示子列表项。当用户选择一个带有列表的列表项时，他们将被带到一个额外的页面，其中显示子级项目。
- en: At the time of writing this recipe, the additional page created for the sublevel
    items does not work unless the page is served from a web server using HTTP.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 撰写本食谱时，除非从使用 HTTP 的 Web 服务器提供页面，否则为子级项目创建的附加页面不起作用。
- en: One of the more powerful examples within this recipe is the ability to quickly
    add a filter to your lists. Simply by adding the `data-filter="true"` attribute
    and value on the HTML list, jQuery Mobile automatically adds the filter input
    to the top of the list, allowing the user to filter out unwanted list items.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中更为强大的一项是能够快速为您的列表添加过滤器。只需在 HTML 列表上添加 `data-filter="true"` 属性和值，jQuery
    Mobile 就会自动在列表顶部添加过滤器输入框，允许用户过滤掉不需要的列表项。
- en: Using touch-oriented events
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用面向触摸的事件
- en: Along with typical events available with jQuery, such as `click` and `hover`,
    jQuery Mobile makes touch-centric events available to the developer. Using these
    events, it is possible to add extra functionality to your mobile application for
    these additional user interactions. This recipe provides samples for many of these
    useful events that will allow you to re-use them at your convenience.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 jQuery 提供的典型事件，如 `click` 和 `hover`，jQuery Mobile 还为开发者提供了触摸中心的事件。使用这些事件，可以为您的移动应用程序添加额外的功能，以适应这些额外的用户交互。本食谱提供了许多有用事件的示例，您可以随时重复使用它们。
- en: Getting ready
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Within the web root of your web server, create `recipe-7.html` and `recipe-7.js`.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的 Web 服务器的 Web 根目录中，创建 `recipe-7.html` 和 `recipe-7.js`。
- en: How to do it…
  id: totrans-179
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'To learn which touch-centric events are available and how to use them, perform
    the following steps:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解可用的触摸中心事件及其用法，请执行以下步骤：
- en: Create a basic mobile website with an empty list by adding the following HTML
    to `recipe-7.html`. Make sure you update the references to the included libraries
    where required.
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过将以下 HTML 添加到 `recipe-7.html` 来创建一个基本的移动网站，其中包含一个空列表。确保根据需要更新所包含库的引用。
- en: '[PRE31]'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'At the top of `recipe-7.js`, add the following function, which will add a new
    list item to the list you have just created within `recipe-7.html`:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `recipe-7.js` 的顶部，添加以下函数，该函数将在您刚刚在 `recipe-7.html` 中创建的列表中添加新的列表项：
- en: '[PRE32]'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'To add a new list item when the user performs a tap, add the following JavaScript
    code to `recipe-7.js`:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在用户轻触时添加新的列表项，请将以下 JavaScript 代码添加到 `recipe-7.js` 中：
- en: '[PRE33]'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'To listen for the `taphold` event and add a new list item, add the following
    code directly under the previous `.bind()` statement within the `$(function(){})`
    block:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 若要监听 `taphold` 事件并添加新的列表项，请在 `$(function(){})` 块中的前一个 `.bind()` 语句下直接添加以下代码：
- en: '[PRE34]'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'The same can be done to listen for the `swipe` event. Append the following
    `.bind()` definition:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以使用相同的方法来监听 `swipe` 事件。追加以下 `.bind()` 定义：
- en: '[PRE35]'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'To clear the list when the user swipes left, append the following JavaScript
    code:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 若要在用户向左滑动时清除列表，请追加以下 JavaScript 代码：
- en: '[PRE36]'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Finally, to detect when the user changes the device''s orientation, add the
    following code after the `swipeleft` bind definition:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，要在用户更改设备方向时检测，请在 `swipeleft` 绑定定义之后添加以下代码：
- en: '[PRE37]'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: With a mobile- and touch-compatible device, open `recipe-7.html` and perform
    a range of touch events to see the appropriate responses added to the list. When
    you swipe left, the list should empty, and when you change the device's orientation,
    a new list item will be added, indicating the new orientation (portrait or landscape).
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用支持移动和触摸的设备，打开 `recipe-7.html` 并执行一系列触摸事件，以查看添加到列表的适当响应。当您向左滑动时，列表应该被清空，当您改变设备的方向时，将添加一个新的列表项，指示新的方向（纵向或横向）。
- en: How it works…
  id: totrans-196
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: 'By using the following code, it is possible to listen for various events that
    jQuery Mobile makes available:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用以下代码，可以监听 jQuery Mobile 提供的各种事件：
- en: '[PRE38]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: To see the full list of events that are available, read the documentation ([http://jquerymobile.com/demos/1.2.1/docs/api/events.html](http://jquerymobile.com/demos/1.2.1/docs/api/events.html))
    on the jQuery Mobile website, which provides a comprehensive list with examples.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看可用的完整事件列表，请阅读jQuery Mobile网站上的文档（[http://jquerymobile.com/demos/1.2.1/docs/api/events.html](http://jquerymobile.com/demos/1.2.1/docs/api/events.html)），其中提供了详细的带有示例的全面列表。
- en: 'Within this recipe, the `addEvent()` function takes a string that it will append
    to the list element created within the simple mobile website in `recipe-7.html`.
    When you manipulate a jQuery Mobile list with JavaScript, you must call the `refresh`
    method to ensure that the styling is reapplied to the newly added elements. This
    is shown in the following code:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱中，`addEvent()`函数接受一个字符串，它将附加到在`recipe-7.html`中创建的简单移动网站中的列表元素中。当您使用JavaScript操作jQuery
    Mobile列表时，您必须调用`refresh`方法，以确保样式重新应用到新添加的元素上。如以下代码所示：
- en: '[PRE39]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Knowing when the user changes the device''s orientation can be useful to rearrange
    elements on the page to improve the user experience. With jQuery Mobile, this
    is very easy to do. Simply bind to the `orientationchange` event and ready the
    `orientation` property of the `event` object to determine what the new orientation
    is, as shown in the following code:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 知道用户何时更改设备的方向可以帮助重新整理页面上的元素，以改善用户体验。通过jQuery Mobile，这非常容易实现。只需绑定到`orientationchange`事件，并准备`event`对象的`orientation`属性来确定新的方向是什么，如下面的代码所示：
- en: '[PRE40]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Note that unlike the other events in this recipe, this had been bound to `window`
    and not `document`, as `document` is unaware of the browser or device orientation.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，与本食谱中的其他事件不同，这个事件被绑定到`window`而不是`document`，因为`document`不知道浏览器或设备的方向。
- en: See also
  id: totrans-205
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[Chapter 2](ch02.html "Chapter 2. Interacting with the User by Making Use of
    jQuery Events"), *Interacting with the User by Making Use of jQuery Events*'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第2章](ch02.html "第2章. 通过使用jQuery事件与用户进行交互")，*通过使用jQuery事件与用户进行交互*'
- en: Creating mobile-compatible forms
  id: totrans-207
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建兼容移动设备的表单
- en: jQuery Mobile provides a wide array of form components that are similar to the
    jQuery UI offering but optimized for mobile devices. This recipe provides examples
    of the more commonly used form elements so that you can re-use them at your convenience.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery Mobile提供了一系列与jQuery UI类似但针对移动设备进行优化的表单组件。本食谱提供了更常用的表单元素的示例，以便您随时重复使用。
- en: Getting ready
  id: totrans-209
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Within the `chapter10` folder you created earlier, create `recipe-8.html`.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在您之前创建的`chapter10`文件夹中，创建 `recipe-8.html`。
- en: How to do it…
  id: totrans-211
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'To learn what form elements are made available by jQuery Mobile and how to
    use them, perform each of the following steps:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解jQuery Mobile提供了哪些表单元素以及如何使用它们，请执行以下每一步：
- en: 'Create a simple jQuery Mobile website to hold all the examples. Add the following
    HTML code to `recipe-8.html`:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个简单的jQuery Mobile网站来存放所有的示例。将以下HTML代码添加到`recipe-8.html`：
- en: '[PRE41]'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Add the following code inside the `content` division element you have just
    added to create a range of text input elements:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您刚刚添加的`content`区域元素内添加以下代码，以创建一系列文本输入元素：
- en: '[PRE42]'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'To create two different varieties of select menus, add the following code under
    the text inputs:'
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建两种不同类型的选择菜单，请在文本输入下添加以下代码：
- en: '[PRE43]'
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'To create checkboxes and radio buttons, use the following code:'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建复选框和单选按钮，请使用以下代码：
- en: '[PRE44]'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Finally, to create some additional elements—a switch and slider—add the following
    code:'
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，要创建一些附加元素——开关和滑块——请添加以下代码：
- en: '[PRE45]'
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Opening `recipe-8.html` in a web browser will present you with a range of different
    form elements. You can then easily select and re-use the code for any of the element
    types, as shown in the following screenshot:![How to do it…](img/0896OS_10_03.jpg)
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在网络浏览器中打开`recipe-8.html`将呈现出一系列不同的表单元素。然后你可以轻松地选择并重复使用任何元素类型的代码，如下面的屏幕截图所示：![如何操作…](img/0896OS_10_03.jpg)
- en: How it works…
  id: totrans-224
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Each type of jQuery Mobile element used within this recipe is explained in detail
    in the following sections.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱中使用的每种类型的jQuery Mobile元素在以下各节中都有详细解释。
- en: Text input
  id: totrans-226
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文本输入
- en: 'jQuery Mobile provides different text input elements. The typical text input
    and text area elements are easily created by adding a label and either an `input`
    or `textarea` element inside a `div` element with the `fieldcontain` class, as
    shown in the following code:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery Mobile提供了不同的文本输入元素。典型的文本输入和文本区域元素可以通过在`div`元素内添加标签和`input`或`textarea`元素，并将其放在具有`fieldcontain`类的`div`元素内来轻松创建，如以下代码所示：
- en: '[PRE46]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: To create a search input, simply add `data-type="search"` to the `input` element.
    This adds a search icon to the `input` element and also provides a clear button
    once the user has entered some text.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建搜索输入，只需将`data-type="search"`添加到`input`元素中。这会向`input`元素添加一个搜索图标，并在用户输入一些文本后提供清除按钮。
- en: Select menu
  id: totrans-230
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择菜单
- en: The two select menus provided as examples in this recipe look identical at face
    value. When you select the first simple example, you are provided with a dropdown
    that looks like a typical select menu on a normal non-mobile-optimized website.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 此教程中提供的两个选择菜单在外观上看起来相同。当选择第一个简单示例时，您将获得一个下拉列表，看起来像在一个普通非移动优化网站上的典型选择菜单。
- en: 'The second example, which has the additional `data-native-menu="false"` attribute
    added, provides a different selection menu once clicked. This additional menu
    makes it easier to make a selection using a touch interface. The following screenshot
    provides a comparison of the two types of select menus:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个示例添加了额外的`data-native-menu="false"`属性，一旦单击，将提供不同的选择菜单。这个额外的菜单使得使用触摸界面更容易进行选择。以下屏幕截图对两种类型的选择菜单进行了比较：
- en: '![Select menu](img/0896OS_10_04.jpg)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: '![Select menu](img/0896OS_10_04.jpg)'
- en: Checkboxes and radio buttons
  id: totrans-234
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 复选框和单选按钮
- en: 'Using a `fieldset` element with the `data-role="controlgroup"` attribute, it
    is very easy to create checkboxes and radio buttons, as shown in the following
    code snippet:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 使用具有`data-role="controlgroup"`属性的`fieldset`元素，非常容易创建复选框和单选按钮，如下面的代码片段所示：
- en: '[PRE47]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: To create a set of radio buttons, you can re-use the preceding code, changing
    the `type` attribute to `radio` and ensuring they all have the same value within
    the `name` attribute.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一组单选按钮，可以重复使用前面的代码，将`type`属性更改为`radio`并确保它们的`name`属性中都有相同的值。
- en: In addition to these interface elements, jQuery Mobile makes it possible to
    have an inline equivalent. Simply add the `data-type="horizontal"` attribute onto
    the `fieldset` element to get the inline version of either checkboxes or radio
    buttons.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这些界面元素外，jQuery Mobile还可以提供嵌入式等效物。只需将`data-type="horizontal"`属性添加到`fieldset`元素上，就可以获得复选框或单选按钮的嵌入式版本。
- en: Additional
  id: totrans-239
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 额外信息
- en: 'The final two elements provided as part of this recipe are a switch and a slider.
    The `switch` element is essentially a select menu with only two options, but presented
    in a more touch-friendly manner. The `slider` element is created by adding the
    `data-type="range"` attribute to a number input (as shown in the following code),
    which allows a user to easily enter and change a numeric value on a form:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 作为此教程的最后两个元素提供的是一个开关和一个滑块。`switch`元素实质上是一个只有两个选项的选择菜单，但以更适合触摸的方式呈现。通过将`data-type="range"`属性添加到数字输入中（如下所示的代码），可以创建`slider`元素，允许用户轻松地在表单上输入和更改数字值：
- en: '[PRE48]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: There's more…
  id: totrans-242
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: All of the examples provided as part of this recipe are displayed at the default
    size. jQuery Mobile provides all its form elements with an additional smaller
    size for situations where the default is a little too large.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 作为此教程的一部分提供的所有示例都显示为默认尺寸。当默认尺寸稍大时，jQuery Mobile为所有表单元素提供额外的较小尺寸。
- en: To use the mini equivalent, add the attribute `data-mini="true"` to elements
    requiring the smaller size.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用小型等效物，将属性`data-mini="true"`添加到需要较小尺寸的元素中。
- en: Building a complete registration and login system
  id: totrans-245
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 建立完整的注册和登录系统
- en: This recipe shows you how to create a simple register and login system from
    scratch using jQuery Mobile and PHP with a MySQL database. This recipe will form
    the base for a complete web application in the next recipe of this chapter.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程向您展示如何使用jQuery Mobile和PHP与MySQL数据库从头开始创建简单的注册和登录系统。这个教程将为本章的下一个教程中的完整网络应用程序奠定基础。
- en: Getting ready
  id: totrans-247
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You should already have a PHP and MySQL server available that will be utilized
    to complete this recipe. Within the web root of your web server, create `index2.html`
    and `script2.js`, which will hold the main functionality of the application.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该已经准备好一个可用于完成此教程的PHP和MySQL服务器。在Web服务器的Web根目录中，创建`index2.html`和`script2.js`，它们将保存应用程序的主要功能。
- en: How to do it…
  id: totrans-249
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何去做…
- en: 'To create a complete registration and login system, ensure you follow each
    of the following instructions carefully:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建完整的注册和登录系统，请确保您仔细遵循以下每个说明：
- en: 'Add the following HTML code to `index2.html` to create a simple jQuery Mobile
    website and home page:'
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下HTML代码添加到`index2.html`中，以创建一个简单的jQuery Mobile网站和主页：
- en: '[PRE49]'
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Use the following HTML to add a login page to `index2.html`:'
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下HTML将登录页面添加到`index2.html`：
- en: '[PRE50]'
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'A registration page can also be created using the following HTML code, ensuring
    the page code is added within the `body` section of the HTML document in `index2.html`:'
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 还可以使用以下HTML代码创建注册页面，确保将页面代码添加到`index2.html`中HTML文档的`body`部分中：
- en: '[PRE51]'
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'The final page to add is the member page. Create this using the following HTML
    code:'
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后一个要添加的页面是成员页面。使用以下HTML代码创建此页面：
- en: '[PRE52]'
  id: totrans-258
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Using the following SQL code, create a database called `chapter10` and a table
    called `user` within your MySQL database:'
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下SQL代码，在您的MySQL数据库中创建名为`chapter10`的数据库和名为`user`的表：
- en: '[PRE53]'
  id: totrans-260
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: Create `connect.db.php` in the web root of your web server and add the following
    PHP code to connect to the `chapter10` database. Update the database username
    and password if required.
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的Web服务器的Web根目录中创建`connect.db.php`并添加以下PHP代码来连接到`chapter10`数据库。如有需要，请更新数据库用户名和密码。
- en: '[PRE54]'
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'To be able to add new users to the `user` table, create `register.php` within
    the web root of your web server and add the following PHP code:'
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了能够向`user`表中添加新用户，创建`register.php`并在您的Web服务器的Web根目录中添加以下PHP代码：
- en: '[PRE55]'
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'To allow users to log in with their newly created account, create `login.php`
    within the web root of your web server and add the following PHP code:'
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了允许用户使用他们新创建的帐户登录，创建`login.php`并在您的Web服务器的Web根目录中添加以下PHP代码：
- en: '[PRE56]'
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'For the logout functionality, create `logout.php` within the same directory
    as `login.php` and add the following code:'
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了实现登出功能，在与`login.php`相同的目录中创建`logout.php`并添加以下代码：
- en: '[PRE57]'
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'To allow a user to be able to submit their information for registration, add
    the following JavaScript code to `script2.js` within the jQuery on-load block
    `($(function(){});`):'
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了允许用户提交他们的注册信息，将以下JavaScript代码添加到`script2.js`的jQuery加载块`($(function(){});)`中：
- en: '[PRE58]'
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'To react when the user attempts to log in from the login page, add the following
    JavaScript code to `script2.js` under the code you have just added for registration:'
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当用户尝试从登录页面登录时，将以下JavaScript代码添加到`script2.js`中刚刚为注册添加的代码下面，以对登录进行反应：
- en: '[PRE59]'
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'To allow the user to be able to click on the logout button and be logged out,
    add the following code to `script2.js`:'
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了让用户能够单击登出按钮并注销，将以下代码添加到`script2.js`中：
- en: '[PRE60]'
  id: totrans-274
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'To prevent access to the members page, add the following code to check if the
    user is logged in when they try to navigate to this page:'
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了在用户尝试导航到此页面时检查用户是否已登录，添加以下代码以防止访问成员页面：
- en: '[PRE61]'
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'The preceding code uses the `getUser()` function to determine if the user has
    been logged in or not. Add the following function to the end of `script2.js`,
    ensuring it is added outside the `$(function(){});` block:'
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前面的代码使用`getUser()`函数来确定用户是否已登录。将以下函数添加到`script2.js`的末尾，确保它添加在`$(function(){});`块之外：
- en: '[PRE62]'
  id: totrans-278
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'To add some basic styling to the error messages within the web root of your
    web server, create a file named `styles.css` and add the following CSS code:'
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了对Web服务器的错误消息添加一些基本样式，创建一个名为`styles.css`的文件，并添加以下CSS代码：
- en: '[PRE63]'
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE63]'
- en: Visiting your web server that is serving `index2.html` will allow you to register
    an account. If you attempt to visit the members page without being logged in,
    you will get a message saying you must be logged in and will then be sent back
    to the home page.
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问提供`index2.html`的Web服务器将允许您注册一个帐户。如果尝试访问成员页面而未登录，您将收到一条消息，告诉您必须登录，然后将被发送回主页。
- en: How it works…
  id: totrans-282
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Each section of code created within this recipe is explained in detail in the
    following sections.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 本配方中创建的每个代码部分都在接下来的各节中有详细说明。
- en: HTML
  id: totrans-284
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: HTML
- en: 'The HTML within `index2.html` creates a simple jQuery Mobile website with the
    following four pages:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: '`index2.html`中的HTML创建了一个简单的jQuery Mobile网站，包括以下四个页面：'
- en: The home page
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主页
- en: The register page
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注册页面
- en: The login page
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 登录页面
- en: The members page
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 成员页面
- en: The home page provides links to both the login and register pages, and each
    of these pages link to each other respectively. The members page has a logout
    button that allows the user to log out once they have gotten access to the members
    page. The HTML code is simple, and each element has been explained in detail in
    the previous recipes of this chapter.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 主页提供了指向登录和注册页面的链接，每个页面分别链接到对方。成员页面有一个登出按钮，允许用户一旦获得访问成员页面后退出登录。HTML代码简单，每个元素都在本章的先前配方中有详细说明。
- en: SQL
  id: totrans-291
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SQL
- en: The SQL code that is provided as part of this recipe can be used to create the
    required `chapter10` database and the `user` table, which stores the user accounts.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 作为此配方的一部分提供的SQL代码可用于创建所需的`chapter10`数据库和存储用户帐户的`user`表。
- en: PHP
  id: totrans-293
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PHP
- en: There are four PHP files created within this recipe. The first is `connect.db.php`,
    which establishes a connection to the MySQL database and is included within the
    other three PHP files. The PHP `mysqli` class is used to connect and query the
    MySQL database throughout the PHP files in this recipe. You can find more information
    about this class on PHP.net ([http://www.php.net/mysqli](http://www.php.net/mysqli)).
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 此配方中创建了四个PHP文件。第一个是`connect.db.php`，它建立与MySQL数据库的连接，并包含在其他三个PHP文件中。PHP `mysqli`类用于在此配方中的PHP文件中连接和查询MySQL数据库。您可以在PHP.net（[http://www.php.net/mysqli](http://www.php.net/mysqli)）上找到有关此类的更多信息。
- en: 'The `register.php` file takes a set of values via a POST request. These values
    are as follows:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '`register.php`文件通过POST请求接收一组值。这些值如下所示：'
- en: '`Username`'
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`用户名`'
- en: '`Password`'
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`密码`'
- en: '`Password again`'
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`再次输入密码`'
- en: The PHP script performs basic validation for all three inputs to ensure that
    the username specified is between 3 and 32 characters long and that a password
    has been provided that is at least 6 characters in length. It also ensures that
    both passwords match and queries the database to ensure the requested username
    has not already been taken.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: PHP脚本对所有三个输入执行基本验证，以确保指定的用户名长度在3到32个字符之间，并且已提供的密码至少为6个字符长。它还确保两个密码匹配，并查询数据库以确保请求的用户名尚未被占用。
- en: If it passes all validations, a new user is inserted into the database, which
    will then allow this user to log in using the specified details. It is important
    to note that the password is encrypted using the PHP `crypt()` function with the
    default settings. This is a simple encryption method, and greater encryption techniques
    should be used in a production environment.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 如果通过了所有验证，将在数据库中插入新用户，然后允许此用户使用指定的详细信息登录。重要的是要注意，密码使用PHP `crypt()`函数进行加密，使用默认设置。这是一种简单的加密方法，在生产环境中应使用更强大的加密技术。
- en: The `login.php` script takes a username and password via a POST request and
    queries the user table to see if there are any matching user credentials; if so,
    a PHP session is created for that user and a user object returned to the client.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '`login.php`脚本通过POST请求接收用户名和密码，并查询用户表以查看是否有任何匹配的用户凭据；如果有，将为该用户创建一个PHP会话，并将用户对象返回给客户端。'
- en: The `logout.php` script simply destroys the PHP session if one exists, logging
    out the user.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: '`logout.php`脚本只是销毁PHP会话（如果存在），将用户注销。'
- en: 'Each of these PHP scripts return data in a standard format that has been used
    multiple times throughout this cookbook. At the top of each script, an array is
    created as shown in the following code:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 这些PHP脚本中的每一个都以本配方中多次使用的标准格式返回数据。在每个脚本的顶部，创建一个数组，如以下代码所示：
- en: '[PRE64]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'If the script is successful and no errors are needed to be output, the success
    value is changed to `true` and the `errors` array left empty. In the case of the
    `register.php` script, when one of the inputs fail validation, an associative
    array is returned with the key matching the input. The following is an example:'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 如果脚本成功执行且无需输出错误，则成功值更改为`true`，而`errors`数组保持为空。对于`register.php`脚本，当输入之一未通过验证时，将返回一个具有与输入匹配的键的关联数组。以下是一个示例：
- en: '[PRE65]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: This is so that the JavaScript on the client knows which input to place the
    error message under, making it easier for the user to understand what changes
    they need to make.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，客户端上的JavaScript就知道在哪个输入框下放置错误消息，使用户更容易理解他们需要进行哪些更改。
- en: 'When the response array is output, it is converted to a JSON object, and the
    content type and charset is set appropriately using the PHP `header()` function,
    as shown in the following code:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 输出响应数组时，它被转换为JSON对象，并使用PHP `header()`函数适当地设置内容类型和字符集，如以下代码所示：
- en: '[PRE66]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: JavaScript
  id: totrans-310
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: JavaScript
- en: The JavaScript used within this recipe is simple and nothing new. There are
    three `click` event handlers created for the register, login, and logout buttons.
    The callback function provided to each of these event handlers collects data from
    the associated form and uses the jQuery `$.ajax()` function to make a POST request
    to the `register.php`, `login.php`, or `logout.php` scripts respectively. AJAX
    with jQuery has been covered extensively in [Chapter 3](ch03.html "Chapter 3. Loading
    and Manipulating Dynamic Content with AJAX and JSON"), *Loading and Manipulating
    Dynamic Content with AJAX and JSON*.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例中使用的 JavaScript 简单而且并不新奇。为注册、登录和注销按钮创建了三个 `click` 事件处理程序。提供给这些事件处理程序的回调函数从相关表单收集数据，并使用
    jQuery `$.ajax()` 函数向 `register.php`、`login.php` 或 `logout.php` 脚本分别发出 POST 请求。AJAX
    与 jQuery 在 [第 3 章](ch03.html "第 3 章。使用 AJAX 和 JSON 加载和操作动态内容") *使用 AJAX 和 JSON
    加载和操作动态内容* 中已经广泛讨论过。
- en: 'For each of the AJAX requests, the `beforeSend()` function is used to open
    and show a spinner image to the user, indicating a request is being made. This
    spinner image is then removed on the success of the AJAX request. This is shown
    in the following code:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个 AJAX 请求，`beforeSend()` 函数用于打开并显示一个旋转图像，向用户指示正在进行请求。在 AJAX 请求成功时，此旋转图像将被移除。以下代码展示了这一点：
- en: '[PRE67]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'Also, as shown in the following code, within the `success()` function for each
    of the AJAX requests, the `$.mobile.showPageLoadingMsg()` function is used to
    display a message to the user for various reasons, either on error or for information
    regarding a successful registration:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，正如下面的代码所示，在每个 AJAX 请求的 `success()` 函数中，使用 `$.mobile.showPageLoadingMsg()`
    函数向用户显示消息，无论是出错还是提供关于成功注册的信息：
- en: '[PRE68]'
  id: totrans-315
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: The first argument to the function is the theme, the second is the message you
    wish to display, and setting the third argument to `true` will remove the spinner
    image, just displaying the simple text message.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 函数的第一个参数是主题，第二个参数是您希望显示的消息，将第三个参数设置为 `true` 将移除旋转图像，仅显示简单的文本消息。
- en: 'As previously mentioned, the `login.php` script returns an object that represents
    the newly logged-in user. As the client JavaScript has no sense of PHP sessions,
    this user object needs to be stored locally so that the client is aware of the
    logged-in user. To do this, local storage is used, as shown in the following line
    of code:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，`login.php` 脚本返回一个表示新登录用户的对象。由于客户端 JavaScript 无法感知 PHP 会话，因此需要将此用户对象存储在本地，以便客户端知道已登录的用户。为此，使用本地存储，如下所示的代码行所示：
- en: '[PRE69]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: Local storage will only allow you to store a string, but we need to store an
    entire object. To get around this, we convert the object to a JSON string, which
    can then be converted to an object again when retrieved from local storage. The
    preceding example uses the `JSON.stringify()` function to convert the user object
    to a string and stores it in local storage under the name `user`.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 本地存储只允许存储字符串，但我们需要存储整个对象。为了解决这个问题，我们将对象转换为 JSON 字符串，然后当从本地存储中检索时再次转换为对象。上述示例使用
    `JSON.stringify()` 函数将用户对象转换为字符串，并将其存储在名为 `user` 的本地存储中。
- en: 'The `getUser()` function is then used to retrieve and convert the string value
    to an object, or return `false` if there is no currently logged-in user:'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 然后使用 `getUser()` 函数来检索并将字符串值转换为对象，如果当前没有登录用户，则返回 `false`：
- en: '[PRE70]'
  id: totrans-321
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: When the AJAX call to the `logout.php` script that destroys the server session
    is successful, `localStorage.removeItem("user")` is also used to remove the user
    object on the client.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 当向销毁服务器会话的 `logout.php` 脚本发起的 AJAX 调用成功时，也会使用 `localStorage.removeItem("user")`
    来移除客户端上的用户对象。
- en: The final element of the JavaScript within this recipe is restricting access
    to the members page. Note that any restriction enforced using client-side code
    can be bypassed by any user with the right knowledge. This type of client-side
    restriction is only used to enhance the user experience, and it is always a requirement
    that the server side prevent access to any actions that users shouldn't be able
    to perform.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例中 JavaScript 的最后一个元素是限制访问成员页面。请注意，使用客户端代码强制执行的任何限制都可以被具有适当知识的任何用户绕过。这种类型的客户端限制仅用于增强用户体验，并且服务器端始终要求阻止用户无法执行的任何操作。
- en: Within the *Building a dynamic mobile website* recipe, the jQuery Mobile `pagebeforechange`
    event was used to detect the user trying to access a certain page. This same functionality
    is used within this recipe to catch when the user is trying to access the members
    page. The `getUser()` function is then used to determine if the user is logged
    in or not. If they are not logged in, they are prevented from navigating to the
    members page and sent back to the home page after being told they must be logged
    in to access the members page.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 在*构建动态移动网站*示例中，使用了 jQuery Mobile `pagebeforechange` 事件来检测用户尝试访问某个页面。在此示例中，使用相同的功能来捕获用户尝试访问成员页面时的情况。然后使用`getUser()`函数来确定用户是否已登录。如果他们没有登录，则阻止他们导航到成员页面，并在告知他们必须登录才能访问成员页面后将其发送回主页。
- en: There's more…
  id: totrans-325
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Currently, to submit any of the forms on the website, the user is required to
    click on or press the associated button. To improve on this, it would be beneficial
    if the user could press the *Enter* key or the mobile-equivalent go button from
    within any of the inputs in the form.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，要提交网站上的任何表单，用户需要点击或按下相关按钮。为了改进这一点，如果用户可以从表单中的任何输入框中按下 *Enter* 键或移动设备的等效按钮，则会更有益。
- en: See also
  id: totrans-327
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '*Building a dynamic mobile website*'
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*构建动态移动网站*'
- en: Building a complete mobile web app
  id: totrans-329
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建完整的移动 Web 应用程序
- en: This recipe shows you how to create a simple but complete web app that allows
    registered users to write notes that can be accessed on all devices. The notes
    app extends upon the previous login and register recipe to allow the logged-in
    user to create and manage a note or a to-do list.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例向您展示了如何创建一个简单但完整的 Web 应用程序，允许注册用户编写可以在所有设备上访问的笔记。笔记应用程序在之前的登录和注册示例的基础上进行扩展，允许已登录用户创建和管理笔记或待办事项清单。
- en: Getting ready
  id: totrans-331
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Before you start this recipe, ensure you have completed the previous recipe,
    *Building a complete register and login system*. You will still need a web server
    running PHP and MySQL to complete this recipe.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始此示例之前，请确保您已完成之前的示例*构建完整的注册和登录系统*。您仍然需要一个运行 PHP 和 MySQL 的 Web 服务器才能完成此示例。
- en: How to do it…
  id: totrans-333
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'To create a complete mobile web app that can be accessed on all mobile and
    desktop devices, perform the following steps:'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个可以在所有移动设备和桌面设备上访问的完整移动 Web 应用程序，请执行以下步骤：
- en: 'To store the user-created notes, another database table is required. Use the
    following SQL code to create a table within the `chapter10` database called `note`:'
  id: totrans-335
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要存储用户创建的笔记，需要另一个数据库表。使用以下 SQL 代码在`chapter10`数据库中创建一个名为`note`的表：
- en: '[PRE71]'
  id: totrans-336
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'While most of the pages defined within `index2.html` stay the same, we need
    to update the members page to have a button that takes the user to their current
    notes. Update the members page with the following HTML in `index2.html`:'
  id: totrans-337
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 虽然在`index2.html`中定义的大多数页面保持不变，但我们需要更新成员页面，以便有一个按钮将用户带到他们当前的笔记。使用以下 HTML 在`index2.html`中更新成员页面：
- en: '[PRE72]'
  id: totrans-338
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'We now need to create the notes page that this new button takes the user to.
    Use the following HTML code to create the notes page, adding it after the members
    page in `index2.html`:'
  id: totrans-339
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '现在，我们需要创建新按钮将用户带到的笔记页面。使用以下 HTML 代码在`index2.html`中的成员页面之后创建笔记页面： '
- en: '[PRE73]'
  id: totrans-340
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'With the notes page, the user will be able to view their current notes, so
    there needs to be a way to create new notes. Using the following HTML code, add
    the create note page to `index2.html`:'
  id: totrans-341
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有了笔记页面，用户将能够查看他们当前的笔记，因此需要一种方法来创建新的笔记。使用以下 HTML 代码，将创建笔记页面添加到`index2.html`中：
- en: '[PRE74]'
  id: totrans-342
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'With the new database table created and the HTML UI updated for the additional
    functionality, we now need to create the PHP that provides the interaction to
    the database. To enable a user to create a new note, within the web root of your
    web server, create a file named `addNote.php` and insert the following code:'
  id: totrans-343
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过创建一个新的数据库表并更新用于附加功能的 HTML UI，我们现在需要创建提供与数据库交互的 PHP。为了让用户创建新的笔记，在您的 Web 服务器的
    Web 根目录中创建一个名为`addNote.php`的文件，并插入以下代码：
- en: '[PRE75]'
  id: totrans-344
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'To populate the notes page with the user''s current notes, we need to be able
    to retrieve the notes from the database. Create a file named `getNotes.php` and
    add the following PHP code:'
  id: totrans-345
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使用用户当前的笔记填充笔记页面，我们需要能够从数据库中检索笔记。创建一个名为`getNotes.php`的文件，并添加以下 PHP 代码：
- en: '[PRE76]'
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE76]'
- en: 'The user also needs to be able to remove unwanted notes. For this, within the
    web root of your web server, create a file named `deleteNote.php` and add the
    following code:'
  id: totrans-347
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户还需要能够删除不需要的笔记。为此，在您的 Web 服务器的 Web 根目录中创建一个名为`deleteNote.php`的文件，并添加以下代码：
- en: '[PRE77]'
  id: totrans-348
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'With all the backend code in place, we can now add JavaScript to link the user
    interface and this backend code together. First of all, we need to make a few
    changes to the original JavaScript code from the previous recipe within `script2.js`.
    At the top of `script2.js`, but still within the jQuery on-load block `$(function(){});`,
    add the following line of code:'
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当所有后端代码都就位后，我们现在可以添加 JavaScript 来将用户界面与这些后端代码联系起来。首先，我们需要对前一个示例中 `script2.js`
    中的原始 JavaScript 代码进行一些更改。在 `script2.js` 的顶部，但仍然在 jQuery 的加载完成块 `$(function(){});`
    内部，添加以下一行代码：
- en: '[PRE78]'
  id: totrans-350
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE78]'
- en: 'Within the `success()` function for the logout AJAX call, just before `$.mobile.changePage("#home");`,
    add the following line of code:'
  id: totrans-351
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在注销 AJAX 调用的 `success()` 函数中，在 `$.mobile.changePage("#home");` 之前添加以下一行代码：
- en: '[PRE79]'
  id: totrans-352
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE79]'
- en: 'Within the `pagebeforechange` event handler, we need to add some code so that
    we can display the currently logged-in user''s username within the members page.
    Update the code as follows, adding `$(''.username'').html(user.username);`:'
  id: totrans-353
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `pagebeforechange` 事件处理程序中，我们需要添加一些代码，以便我们可以在成员页面中显示当前登录用户的用户名。更新代码如下，添加 `$('.username').html(user.username);`：
- en: '[PRE80]'
  id: totrans-354
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE80]'
- en: 'With the required JavaScript updates made, we need to add the additional functionality.
    To allow the user to add a new note, insert the following code into `script2.js`
    to catch when the user clicks on the save note button:'
  id: totrans-355
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在进行所需的 JavaScript 更新后，我们需要添加额外的功能。为了允许用户添加一个新的笔记，将以下代码插入到 `script2.js` 中，以捕获当用户点击保存笔记按钮时的情况：
- en: '[PRE81]'
  id: totrans-356
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'To populate the notes page with any currently available notes, we need to add
    some additional functionality to the `pagebeforechange` event handler. Update
    the code as follows (some code has been hidden for illustrative purposes):'
  id: totrans-357
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要填充笔记页面上当前可用的所有笔记，我们需要向 `pagebeforechange` 事件处理程序添加一些附加功能。将代码更新如下（一些代码已隐藏以示说明）：
- en: '[PRE82]'
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'The currently available notes that are listed need to be clickable to allow
    users to delete them. Add the following code within `script2.js` to listen for
    a click on one of the current note list items to then make an AJAX call to the
    `deleteNote.php` script:'
  id: totrans-359
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列出的当前可用笔记需要是可点击的，以允许用户删除它们。在 `script2.js` 中添加以下代码来监听当前笔记列表项的点击，然后发出 AJAX 调用到
    `deleteNote.php` 脚本：
- en: '[PRE83]'
  id: totrans-360
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE83]'
- en: 'Finally, add the following function outside the jQuery on-load block (`$(function(){});`),
    which constructs a list item for a note:'
  id: totrans-361
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，在 jQuery 的加载完成块 (`$(function(){});`) 外部添加以下函数，用于构建一个笔记的列表项：
- en: '[PRE84]'
  id: totrans-362
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE84]'
- en: By visiting `index2.html` served from a web server, you will be able to register
    an account and then log in, just as with the previous recipe. Once logged in,
    tapping on the **View Notes** button will take you to a page with an empty list.
    Click on the **Add note** button to add a new note. Once a new note has been added,
    you will be taken back to the current note's list with your new note showing.
    You can remove this note by clicking on it and confirming that you wish to delete
    it. You can access your notes on multiple devices across logged-in sessions.![How
    to do it…](img/0896OS_10_05.jpg)
  id: totrans-363
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过访问从 Web 服务器提供的 `index2.html`，您将能够注册一个帐户，然后登录，就像之前的示例一样。一旦登录，点击**查看笔记**按钮将带您到一个空列表的页面。点击**添加笔记**按钮以添加新的笔记。一旦添加了新的笔记，您将会被带回到当前笔记列表，并显示您的新笔记。您可以通过点击它并确认要删除它来删除此笔记。您可以在已登录的会话跨多个设备上访问您的笔记。![操作方法…](img/0896OS_10_05.jpg)
- en: How it works…
  id: totrans-364
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: Each section of the code for this recipe is explained in detail in the following
    sections.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例代码的每个部分在接下来的几节中都有详细说明。
- en: HTML
  id: totrans-366
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: HTML
- en: The HTML code within this recipe adds a few extra pages so that the logged-in
    user can create a note and view the previous ones. The notes page uses a listview
    with a filter that was shown within the *Adding mobile-friendly lists* recipe
    of this chapter.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例中的 HTML 代码添加了一些额外的页面，以便已登录用户可以创建笔记并查看以前的笔记。笔记页面使用了一个带有过滤器的列表视图，该过滤器在本章的*添加移动友好的列表*示例中已经展示过。
- en: SQL
  id: totrans-368
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SQL
- en: The simple SQL code within this recipe creates an additional table called `note`
    that is used to store all of the user's notes. A foreign key relationship is also
    defined between the `user_id` field on the `note` table and the `id` field on
    the `user` table.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中的简单 SQL 代码创建了一个名为 `note` 的附加表，用于存储所有用户的笔记。还定义了 `note` 表上的 `user_id` 字段和
    `user` 表上的 `id` 字段之间的外键关系。
- en: PHP
  id: totrans-370
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PHP
- en: 'All PHP scripts within this recipe use the same database connection file and
    structure as the previous recipe. There are an additional three PHP scripts created
    for this recipe, as follows:'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例中的所有 PHP 脚本都使用了与前一个示例相同的数据库连接文件和结构。为此示例创建了另外三个 PHP 脚本，如下所示：
- en: '`addNote.php`: This script takes a POST request with the text for a note. It
    then checks to see if there is a currently logged-in user using the PHP `$_SESSION`
    super global. If there is a logged-in user, the provided text is validated to
    ensure it is between 0 and 1024 characters in length. If it is, it is inserted
    into the database with the logged-in user''s ID and an added date. To get the
    database ID for the newly created note item, `$mysqli->insert_id` is used. This
    is then returned within the `note` object, which is sent back to the requesting
    script.'
  id: totrans-372
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`addNote.php`: 此脚本接受一个带有笔记文本的POST请求。然后，它使用PHP `$_SESSION`超全局变量检查当前是否有已登录用户。如果有已登录用户，则验证提供的文本以确保其长度在0到1024个字符之间。如果是，则将其插入到数据库中，并附加用户ID和添加日期。为了获取新创建的笔记项的数据库ID，使用了`$mysqli->insert_id`。然后，此ID在返回到请求脚本的`note`对象中。'
- en: '`deleteNote.php`: This script, like `addNote.php`, takes a POST request with
    a note ID as a parameter. It also checks to ensure there is a logged-in user and,
    if so, will then use a simple SQL query to delete the specified note from the
    database.'
  id: totrans-373
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`deleteNote.php`: 此脚本与`addNote.php`类似，接受一个带有笔记ID的POST请求。它还检查是否有已登录用户，如果有，则使用简单的SQL查询从数据库中删除指定的笔记。'
- en: '`getNotes.php`: By using the logged-in user''s ID, all notes for that user
    are retrieved from the database and converted to JSON so that they can populate
    a list element using JavaScript.'
  id: totrans-374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getNotes.php`: 通过使用已登录用户的ID，从数据库中检索该用户的所有笔记，并将其转换为JSON，以便可以使用JavaScript填充列表元素。'
- en: Note
  id: totrans-375
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If a PHP script requires access to session data, the `session_start()` function
    must be called at the top of the script, before any other code.
  id: totrans-376
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果PHP脚本需要访问会话数据，则必须在脚本顶部调用`session_start()`函数，即在任何其他代码之前。
- en: JavaScript
  id: totrans-377
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: JavaScript
- en: 'At the top of `script2.js`, the `_currentNotes` variable is declared as shown
    in the following line of code:'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 在`script2.js`的顶部，声明了`_currentNotes`变量，如下代码所示：
- en: '[PRE85]'
  id: totrans-379
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: This is because the current note's list is required throughout the code, and
    by re-using the same variable, jQuery is not forced to reselect the element multiple
    times.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为在整个代码中需要当前笔记列表，并且通过重用相同的变量，jQuery不会被强制多次重新选择元素。
- en: 'To dynamically populate the `#current-notes` list element with the currently
    logged-in user''s notes from the database, the `pagebeforechange` event is exploited
    once again. With an additional check as part of an `if...else` statement, it is
    possible to determine when the user tries to go to the notes page, as illustrated
    by the following line of code:'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 为了动态填充`#current-notes`列表元素，使用了`pagebeforechange`事件。通过`if...else`语句的额外检查，可以确定用户何时尝试转到笔记页面，如下一行代码所示：
- en: '[PRE86]'
  id: totrans-382
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: 'When the user does visit this page using `_currentNotes.data("initialized")`,
    it is possible to check if the list has already been populated. If the initialized
    `data` attribute has already been set, then it has been populated, and there is
    no need to go and get all the data from the database again. If the initialized
    attribute has not been set to `true`, an AJAX call is made to collect the current
    notes and populate the list as shown in the following code:'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户使用`_currentNotes.data("initialized")`访问此页面时，可以检查列表是否已填充。如果initialized `data`属性已经设置，则已填充，并且无需再次从数据库中获取所有数据。如果initialized属性尚未设置为`true`，则会发出AJAX调用来收集当前的笔记并填充列表，如下代码所示：
- en: '[PRE87]'
  id: totrans-384
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: The `_currentNotes.data("initialized", true);` line is used to set the initialized
    attribute to `true` so that when the user returns to the page, the script knows
    not to recollect the data. The AJAX call is made to the `getNotes.php` script
    and then a new list item is created using the `createNoteItem()` function for
    every returned `note` object.
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: '`_currentNotes.data("initialized", true);`行用于将initialized属性设置为`true`，以便当用户返回页面时，脚本知道不要重新收集数据。然后，向`getNotes.php`脚本发出AJAX调用，并为每个返回的`note`对象使用`createNoteItem()`函数创建一个新的列表项。'
- en: 'If jQuery Mobile has already initiated the `#current-notes` list (meaning the
    user has already been to the page once before), the listview will need to be refreshed.
    This is done using the following code, taken from the `success()` function of
    the AJAX call:'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 如果jQuery Mobile已经初始化了`#current-notes`列表（意味着用户之前已经访问过该页面），则需要刷新列表视图。这是使用以下代码完成的，该代码取自AJAX调用的`success()`函数：
- en: '[PRE88]'
  id: totrans-387
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: The create note and delete note functionalities within this recipe are very
    simple and have been covered numerous times throughout this book. As an overview,
    when either the save note button or the note list item is clicked, an AJAX call
    is made to the `addNote.php` or `deleteNote.php` script respectively.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 此食谱中的创建笔记和删除笔记功能非常简单，并且在本书中已经多次介绍过。简而言之，当单击保存笔记按钮或笔记列表项时，将分别向`addNote.php`或`deleteNote.php`脚本发出AJAX调用。
- en: 'When adding a new note, the following code is used to prepend the new note
    item to the current note''s list and send the user back to the notes page:'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 在添加新笔记时，使用以下代码将新笔记项添加到当前笔记列表并将用户返回到笔记页面：
- en: '[PRE89]'
  id: totrans-390
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: 'When deleting a note, the following code is used to remove the deleted note
    item:'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 删除笔记时，使用以下代码来删除已删除的笔记项：
- en: '[PRE90]'
  id: totrans-392
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: Because jQuery Mobile adds a lot of additional elements to the DOM for styling
    the list, the `closest()` function is used to find the list element when the anchor
    (within the list) is clicked. Additionally, note that `$(document).on('click',
    '.delete-note'` is used as opposed to `$('.delete-note').click()` so that the
    `click` event handler is triggered for dynamically added elements. This was covered
    in [Chapter 2](ch02.html "Chapter 2. Interacting with the User by Making Use of
    jQuery Events"), *Interacting with the User by Making Use of jQuery Events*.
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 由于jQuery Mobile为DOM添加了许多额外的元素来对列表进行样式设置，因此在单击锚点（在列表内）时，使用`closest()`函数来查找列表元素。另外，请注意使用`$(document).on('click',
    '.delete-note'`而不是`$('.delete-note').click()`，以便为动态添加的元素触发`click`事件处理程序。这在[第2章](ch02.html
    "第2章。通过使用jQuery事件与用户进行交互")中有介绍，*通过使用jQuery事件与用户进行交互*。
- en: There's more…
  id: totrans-394
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: This recipe provides a very simple example of a complete mobile web application.
    There are many aspects that could be improved upon but were left out to ensure
    this recipe was kept as concise as possible.
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱提供了一个非常简单的完整移动Web应用程序的示例。有许多方面可以改进，但为了确保本食谱尽可能简洁，它们被省略了。
- en: One element that could be improved upon would be the security aspects of the
    `deleteNote.php` script. The script will currently allow the logged-in user to
    delete any note provided the correct ID is specified. A user with some knowledge
    could hijack the request by specifying a note ID of their choice, potentially
    deleting a note from another user. This can easily be avoided by checking if the
    specified note ID belongs to the logged-in user.
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个可以改进的要素是`deleteNote.php`脚本的安全性方面。目前该脚本允许已登录的用户删除任何笔记，只要指定正确的ID即可。有一些知识的用户可以通过指定他们选择的笔记ID来劫持请求，潜在地删除另一个用户的笔记。通过检查指定的笔记ID是否属于已登录用户，可以很容易地避免这种情况。
- en: See also
  id: totrans-397
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 请参阅
- en: '[Chapter 2](ch02.html "Chapter 2. Interacting with the User by Making Use of
    jQuery Events"), *Interacting with the User by Making Use of jQuery Events*'
  id: totrans-398
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第2章](ch02.html "第2章。通过使用jQuery事件与用户进行交互")，*通过使用jQuery事件与用户进行交互*'
- en: '*Building a complete registration and login system*'
  id: totrans-399
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*构建完整的注册和登录系统*'
