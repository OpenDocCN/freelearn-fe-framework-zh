["```js\n    npm run build && npx http-server dist/ng-pwa-conversion \n    ```", "```js\n    ng add @angular/pwa \n    ```", "```js\n...\n**import** **{ provideServiceWorker }** **from****'@angular/service-worker'**;\n\nexport const appConfig: ApplicationConfig = {\n  providers: [provideRouter(appRoutes,\n  withEnabledBlockingInitialNavigation(), withHashLocation()),\n    **provideServiceWorker****(****'ngsw-worker.js'****, {**\n**enabled****: !****isDevMode****(),**\n**registrationStrategy****:** **'registerWhenStable:30000'**\n**})**],\n}; \n```", "```js\n    npm run serve:static chapter13 ng-pwa-theme-color 5300 \n    ```", "```js\n    {\n    \"name\": \"ng-pwa-theme-color\",\n    \"short_name\": \"ng-pwa-theme-color\",\n    \"theme_color\": \"#7E22CE\",\n      ...\n    } \n    ```", "```js\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n        ...\n        <link rel=\"manifest\" href=\"manifest.webmanifest\">\n    **<****meta****name****=****\"theme-color\"****content****=****\"#7E22CE\"****>**\n    </head>\n    <body>\n        ...\n      </body>\n    </html> \n    ```", "```js\n    npm run build ng-pwa-theme-color && npm run serve:static chapter13 ng-pwa-theme-color 5300 \n    ```", "```js\n    npm run serve:static chapter13 ng-pwa-dark-mode 6400 \n    ```", "```js\n    npm run serve ng-pwa-dark-mode \n    ```", "```js\n     @media (prefers-color-scheme: dark) {\n      html, body {\n        background-color: rgb(30 41 59);\n      }\n    } \n    ```", "```js\n    <app-game-stepper [linear]=\"true\">\n    <cdk-step...>\n        ...\n        <form ...>\n    <div ...>\n    <label for=\"nameInput\" class=\"form-label **dark:text-white**\">\n      Player Name\n      </label>\n    <input\n     type=\"text\"\n     formControlName=\"name\"\n     class=\"form-control dark:!text-white dark:placeholder:!text-           white\"\n     id=\"nameInput\"\n     placeholder=\"Enter your name\"\n            />\n            ...\n    </app-game-stepper> \n    ```", "```js\n    <div class=\"game-stepper\">\n    <header>\n    <h3 class=\"text-2xl **dark:text-white**\" *ngIf=\"selected\">\n          ...\n        </h3>\n    </header>\n    ... \n    ```", "```js\n    ...\n    .values {\n      ...\n      &__value-box {\n        width: 5rem;\n        height: 5rem;\n        color: #fff;\n        **@apply****dark****:bg-slate-****500****;**\n        ...\n      }\n    } \n    ```", "```js\n    npm run serve:static chapter13 ng-pwa-dark-mode 6400 \n    ```", "```js\n    npm run serve:static chapter13 ng-pwa-cust-installation 7000 \n    ```", "```js\n    cd start && nx g service services/installable-prompt --project ng-pwa-cust-installation \n    ```", "```js\n    import { Injectable } from '@angular/core';\n\n    declare global {\n      interface WindowEventMap {\n        beforeinstallprompt: BeforeInstallPromptEvent;\n      }\n    }\n    @Injectable({\n      providedIn: 'root'\n    })\n    export class InstallablePromptService {\n      installPromptEvent!: BeforeInstallPromptEvent;\n      constructor() {\n        window.addEventListener('beforeinstallprompt',\n          this.handleInstallPrompt.bind(this))\n      }\n\n      handleInstallPrompt(ev: BeforeInstallPromptEvent) {\n        ev.preventDefault();\n        this.installPromptEvent = ev;\n        console.log('before install prompt event fired', ev);\n        window.removeEventListener('beforeinstallprompt',\n          this.handleInstallPrompt)\n      }\n    } \n    ```", "```js\n    interface BeforeInstallPromptEvent extends Event {\n      readonly platforms: string[];\n      readonly userChoice: Promise<{\n        outcome: \"accepted\" | \"dismissed\";\n        platform: string;\n      }>;\n      prompt(): Promise<void>;\n    } \n    ```", "```js\n    {\n    \"compilerOptions\": {\n        ...,\n    \"noFallthroughCasesInSwitch\": true,\n    **\"typeRoots\"****:****[**\n    **\"./src/types\"**\n    **]**\n    },\n      ...\n    } \n    ```", "```js\n    ...\n    <main class=\"content\" role=\"main\">\n    <router-outlet></router-outlet>\n    </main>\n    **<****div****id****=****\"installPrompt\"****class****=****\"fixed inset-x-0 bottom-10**\n    **p-4\"****>**\n    **<****div****class****=****\"rounded-lg bg-purple-600 px-4 py-3 text-**\n    **white shadow-lg\"****>**\n    **<****p****class****=****\"text-center text-sm font-medium\"****>**\n    **Love the Dice Game?**\n    `**>**` ****Install it!**\n    **</****a****>**\n    **</****p****>**\n    **</****div****>**\n    **</****div****>**** \n    ```", "```js\n    npm run serve:static chapter13 ng-pwa-cust-installation 7000 \n    ```", "```js\n    import { Injectable, **signal** } from '@angular/core';\n    ...\n    export class InstallablePromptService {\n      installPromptEvent!: BeforeInstallPromptEvent;\n      **isPromptBannerShown =** **signal****(****false****);**\n    constructor() {\n        ...\n      }\n    } \n    ```", "```js\n    ...\n    import { Component, **inject** } from '@angular/core';\n    ...\n    **import** **{** **InstallablePromptService** **}** **from****'./services/installable-prompt.service'****;**\n\n    ...\n    export class AppComponent {\n      **promptService =** **inject****(****InstallablePromptService****);**\n    } \n    ```", "```js\n    ...\n\n    <main class=\"content\" role=\"main\">\n    <router-outlet></router-outlet>\n    </main>\n     @if(promptService.isPromptBannerShown()) {\n      <div id=\"installPrompt\" class=\"fixed inset-x-0\n    bottom-10 p-4\">\n        ...\n      </div>\n    } \n    ```", "```js\n    import { InstallablePromptService } from '../services/installable-prompt.service';\n    ...\n    export class GameComponent {\n      ...\n      leaderboardService = inject(LeaderboardService);\n      promptService = inject(InstallablePromptService);\n      ...\n\n      showResult(diceSide: IDiceSide) {\n        ...\n        if (!this.isCorrectGuess) {\n          return;\n        }\n        if (this.promptService.installPromptEvent) {\n          this.promptService.isPromptBannerShown.set(true);\n        }\n        ...\n      }\n    } \n    ```", "```js\n    ...\n    export class InstallablePromptService {\n      ...\n\n      handleInstallPrompt(ev: BeforeInstallPromptEvent) {...}\n\n      **async****showInstallPrompt****() {**\n    **if** **(!****this****.****installPromptEvent****) {**\n    **return****;**\n    **}**\n    **await****this****.****installPromptEvent****.****prompt****();**\n    **const** **{ outcome } =**\n    **await****this****.****installPromptEvent****.****userChoice****;**\n    **console****.****log****(****'The choice of user is '****, outcome);**\n    **this****.****isPromptBannerShown****.****set****(****false****);**\n    **}**\n    } \n    ```", "```js\n    ...\n    <main class=\"content\" role=\"main\">\n    <router-outlet></router-outlet>\n    </main>\n    <div id=\"installPrompt\" *ngIf=\n     \"promptService.isPromptBannerShown()\"\n    class=\"fixed inset-x-0 bottom-4 p-4\">\n    <div class=\"rounded-lg bg-purple-600 \n    px-4 py-3 text-white shadow-lg\">\n    <p class=\"text-center text-sm font-medium\">\n          Love the Dice Game?\n          <a **(****click****)=****\"promptService.showInstallPrompt()\"**\n     href=\"#\" class=\"inline-block underline\">\n            Install it!\n          </a>\n    </p>\n    </div>\n    </div> \n    ```", "```js\n    @media all and (display-mode: standalone) {\n      #installPrompt {\n        display: none !important;\n      }\n    } \n    ```", "```js\n    npm run serve:static chapter13 ng-pwa-precaching 7600 \n    ```", "```js\n    {\n    \"$schema\": \"../../../node_modules/@angular/service-worker/config/schema.json\",\n    \"index\": \"/index.html\",\n    \"assetGroups\": [\n        ...\n      ],\n    **\"dataGroups\"****:****[**\n    **{**\n    **\"name\"****:****\"swapi.dev\"****,**\n    **\"urls\"****:****[**\n    **\"https://swapi.dev/api/*\"**\n    **],**\n    **\"****cacheConfig\"****:****{**\n    **\"strategy\"****:****\"freshness\"****,**\n    **\"maxSize\"****:****100****,**\n    **\"****maxAge\"****:****\"2d\"**\n    **}**\n    **}**\n    **]**\n    } \n    ```", "```js\n    npm run serve:static chapter13 ng-pwa-precaching 7600 \n    ```", "```js\n \"dataGroups\": [\n{\n\"name\": \"swapi.dev\",\n\"urls\": [\n\"https://swapi.dev/api/*\"\n],\n\"cacheConfig\": {\n\"strategy\": \"freshness\",\n\"maxSize\": 100,\n\"maxAge\": \"2d\"\n}\n}\n] \n```", "```js\n    npm run serve ng-pwa-app-shell \n    ```", "```js\n    cd start && nx g app-shell --project=ng-pwa-app-shell \n    ```", "```js\n    ...\n    **import** **{** **UsersComponent** **}** **from****'../users/users.component'****;**\n    @Component({\n      selector: 'app-app-shell',\n      standalone: true,\n      imports: [CommonModule, **UsersComponent**],\n      templateUrl: './app-shell.component.html',\n      styleUrls: ['./app-shell.component.css'],\n    })\n    ... \n    ```", "```js\n    <app-users></app-users> \n    ```", "```js\n    import { Component, inject, OnInit, **PLATFORM_ID** } from '@angular/core';\n    import { CommonModule, **isPlatformBrowser** } from '@angular/common';\n    ...\n    export class UsersComponent implements OnInit {\n     ...\n      **platformId =** **inject****(****PLATFORM_ID****);**\n      isSearching = true;\n      ngOnInit() {\n        this.componentAlive = true;\n       ...\n        this.searchForm.controls['username'].valueChanges\n          .pipe(\n            startWith(''),\n            tap(() => {\n              this.isSearching = true;\n            }),\n            takeWhile(() => !!this.componentAlive **&&** \n    **isPlatformBrowser****(****this****.****platformId**)),\n            mergeMap((query) => this.userService\n              .searchUsers(query))\n          )\n          .subscribe((users) => {\n            this.users = users;\n            this.isSearching = false;\n          });\n      }\n    } \n    ```", "```js\n    cd start && nx run ng-pwa-app-shell:app-shell:production \n    ```", "```js\n    npx http-server ./start/dist/apps/chapter13/ng-pwa-app-shell/browser -o -p 4200 \n    ```", "```js\n    cd start && nx run ng-pwa-app-shell:app-shell:production\n    cd ..\n    npx http-server ./start/dist/apps/chapter13/ng-pwa-app-shell/browser -o -p 1020 \n    ```", "```js\n<noscript>Please enable JavaScript to continue using this application.</noscript> \n```"]